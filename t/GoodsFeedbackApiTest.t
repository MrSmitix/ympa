=begin comment

Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

The version of the OpenAPI document: LATEST

Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator
# Please update the test cases below to test the API endpoints.
# Ref: https://openapi-generator.tech
#
use Test::More;
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::OpenAPIClient::GoodsFeedbackApi');

my $api = WWW::OpenAPIClient::GoodsFeedbackApi->new();
isa_ok($api, 'WWW::OpenAPIClient::GoodsFeedbackApi');

#
# delete_goods_feedback_comment test
#
# uncomment below and update the test
#my $delete_goods_feedback_comment_business_id = undef; # replace NULL with a proper value
#my $delete_goods_feedback_comment_delete_goods_feedback_comment_request = undef; # replace NULL with a proper value
#my $delete_goods_feedback_comment_result = $api->delete_goods_feedback_comment(business_id => $delete_goods_feedback_comment_business_id, delete_goods_feedback_comment_request => $delete_goods_feedback_comment_delete_goods_feedback_comment_request);

#
# get_goods_feedback_comments test
#
# uncomment below and update the test
#my $get_goods_feedback_comments_business_id = undef; # replace NULL with a proper value
#my $get_goods_feedback_comments_get_goods_feedback_comments_request = undef; # replace NULL with a proper value
#my $get_goods_feedback_comments_page_token = undef; # replace NULL with a proper value
#my $get_goods_feedback_comments_limit = undef; # replace NULL with a proper value
#my $get_goods_feedback_comments_result = $api->get_goods_feedback_comments(business_id => $get_goods_feedback_comments_business_id, get_goods_feedback_comments_request => $get_goods_feedback_comments_get_goods_feedback_comments_request, page_token => $get_goods_feedback_comments_page_token, limit => $get_goods_feedback_comments_limit);

#
# get_goods_feedbacks test
#
# uncomment below and update the test
#my $get_goods_feedbacks_business_id = undef; # replace NULL with a proper value
#my $get_goods_feedbacks_page_token = undef; # replace NULL with a proper value
#my $get_goods_feedbacks_limit = undef; # replace NULL with a proper value
#my $get_goods_feedbacks_get_goods_feedback_request = undef; # replace NULL with a proper value
#my $get_goods_feedbacks_result = $api->get_goods_feedbacks(business_id => $get_goods_feedbacks_business_id, page_token => $get_goods_feedbacks_page_token, limit => $get_goods_feedbacks_limit, get_goods_feedback_request => $get_goods_feedbacks_get_goods_feedback_request);

#
# skip_goods_feedbacks_reaction test
#
# uncomment below and update the test
#my $skip_goods_feedbacks_reaction_business_id = undef; # replace NULL with a proper value
#my $skip_goods_feedbacks_reaction_skip_goods_feedback_reaction_request = undef; # replace NULL with a proper value
#my $skip_goods_feedbacks_reaction_result = $api->skip_goods_feedbacks_reaction(business_id => $skip_goods_feedbacks_reaction_business_id, skip_goods_feedback_reaction_request => $skip_goods_feedbacks_reaction_skip_goods_feedback_reaction_request);

#
# update_goods_feedback_comment test
#
# uncomment below and update the test
#my $update_goods_feedback_comment_business_id = undef; # replace NULL with a proper value
#my $update_goods_feedback_comment_update_goods_feedback_comment_request = undef; # replace NULL with a proper value
#my $update_goods_feedback_comment_result = $api->update_goods_feedback_comment(business_id => $update_goods_feedback_comment_business_id, update_goods_feedback_comment_request => $update_goods_feedback_comment_update_goods_feedback_comment_request);


done_testing();
