from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server.models.forward_scrolling_pager_dto import ForwardScrollingPagerDTO
from ympa_python_flask_server.models.goods_feedback_dto import GoodsFeedbackDTO
from ympa_python_flask_server import util

from ympa_python_flask_server.models.forward_scrolling_pager_dto import ForwardScrollingPagerDTO  # noqa: E501
from ympa_python_flask_server.models.goods_feedback_dto import GoodsFeedbackDTO  # noqa: E501

class GoodsFeedbackListDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, feedbacks=None, paging=None):  # noqa: E501
        """GoodsFeedbackListDTO - a model defined in OpenAPI

        :param feedbacks: The feedbacks of this GoodsFeedbackListDTO.  # noqa: E501
        :type feedbacks: List[GoodsFeedbackDTO]
        :param paging: The paging of this GoodsFeedbackListDTO.  # noqa: E501
        :type paging: ForwardScrollingPagerDTO
        """
        self.openapi_types = {
            'feedbacks': List[GoodsFeedbackDTO],
            'paging': ForwardScrollingPagerDTO
        }

        self.attribute_map = {
            'feedbacks': 'feedbacks',
            'paging': 'paging'
        }

        self._feedbacks = feedbacks
        self._paging = paging

    @classmethod
    def from_dict(cls, dikt) -> 'GoodsFeedbackListDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GoodsFeedbackListDTO of this GoodsFeedbackListDTO.  # noqa: E501
        :rtype: GoodsFeedbackListDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feedbacks(self) -> List[GoodsFeedbackDTO]:
        """Gets the feedbacks of this GoodsFeedbackListDTO.

        Список отзывов.  # noqa: E501

        :return: The feedbacks of this GoodsFeedbackListDTO.
        :rtype: List[GoodsFeedbackDTO]
        """
        return self._feedbacks

    @feedbacks.setter
    def feedbacks(self, feedbacks: List[GoodsFeedbackDTO]):
        """Sets the feedbacks of this GoodsFeedbackListDTO.

        Список отзывов.  # noqa: E501

        :param feedbacks: The feedbacks of this GoodsFeedbackListDTO.
        :type feedbacks: List[GoodsFeedbackDTO]
        """
        if feedbacks is None:
            raise ValueError("Invalid value for `feedbacks`, must not be `None`")  # noqa: E501

        self._feedbacks = feedbacks

    @property
    def paging(self) -> ForwardScrollingPagerDTO:
        """Gets the paging of this GoodsFeedbackListDTO.


        :return: The paging of this GoodsFeedbackListDTO.
        :rtype: ForwardScrollingPagerDTO
        """
        return self._paging

    @paging.setter
    def paging(self, paging: ForwardScrollingPagerDTO):
        """Sets the paging of this GoodsFeedbackListDTO.


        :param paging: The paging of this GoodsFeedbackListDTO.
        :type paging: ForwardScrollingPagerDTO
        """

        self._paging = paging
