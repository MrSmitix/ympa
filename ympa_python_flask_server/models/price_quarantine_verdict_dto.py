from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server.models.price_quarantine_verdict_parameter_dto import PriceQuarantineVerdictParameterDTO
from ympa_python_flask_server.models.price_quarantine_verdict_type import PriceQuarantineVerdictType
from ympa_python_flask_server import util

from ympa_python_flask_server.models.price_quarantine_verdict_parameter_dto import PriceQuarantineVerdictParameterDTO  # noqa: E501
from ympa_python_flask_server.models.price_quarantine_verdict_type import PriceQuarantineVerdictType  # noqa: E501

class PriceQuarantineVerdictDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type=None, params=None):  # noqa: E501
        """PriceQuarantineVerdictDTO - a model defined in OpenAPI

        :param type: The type of this PriceQuarantineVerdictDTO.  # noqa: E501
        :type type: PriceQuarantineVerdictType
        :param params: The params of this PriceQuarantineVerdictDTO.  # noqa: E501
        :type params: List[PriceQuarantineVerdictParameterDTO]
        """
        self.openapi_types = {
            'type': PriceQuarantineVerdictType,
            'params': List[PriceQuarantineVerdictParameterDTO]
        }

        self.attribute_map = {
            'type': 'type',
            'params': 'params'
        }

        self._type = type
        self._params = params

    @classmethod
    def from_dict(cls, dikt) -> 'PriceQuarantineVerdictDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PriceQuarantineVerdictDTO of this PriceQuarantineVerdictDTO.  # noqa: E501
        :rtype: PriceQuarantineVerdictDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> PriceQuarantineVerdictType:
        """Gets the type of this PriceQuarantineVerdictDTO.


        :return: The type of this PriceQuarantineVerdictDTO.
        :rtype: PriceQuarantineVerdictType
        """
        return self._type

    @type.setter
    def type(self, type: PriceQuarantineVerdictType):
        """Sets the type of this PriceQuarantineVerdictDTO.


        :param type: The type of this PriceQuarantineVerdictDTO.
        :type type: PriceQuarantineVerdictType
        """

        self._type = type

    @property
    def params(self) -> List[PriceQuarantineVerdictParameterDTO]:
        """Gets the params of this PriceQuarantineVerdictDTO.

        Цена, из-за которой товар попал в карантин, и значения для сравнения. Конкретный набор параметров зависит от типа карантина.  # noqa: E501

        :return: The params of this PriceQuarantineVerdictDTO.
        :rtype: List[PriceQuarantineVerdictParameterDTO]
        """
        return self._params

    @params.setter
    def params(self, params: List[PriceQuarantineVerdictParameterDTO]):
        """Sets the params of this PriceQuarantineVerdictDTO.

        Цена, из-за которой товар попал в карантин, и значения для сравнения. Конкретный набор параметров зависит от типа карантина.  # noqa: E501

        :param params: The params of this PriceQuarantineVerdictDTO.
        :type params: List[PriceQuarantineVerdictParameterDTO]
        """
        if params is None:
            raise ValueError("Invalid value for `params`, must not be `None`")  # noqa: E501

        self._params = params
