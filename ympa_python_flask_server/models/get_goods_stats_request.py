from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server import util


class GetGoodsStatsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, shop_skus=None):  # noqa: E501
        """GetGoodsStatsRequest - a model defined in OpenAPI

        :param shop_skus: The shop_skus of this GetGoodsStatsRequest.  # noqa: E501
        :type shop_skus: list[str]
        """
        self.openapi_types = {
            'shop_skus': list[str]
        }

        self.attribute_map = {
            'shop_skus': 'shopSkus'
        }

        self._shop_skus = shop_skus

    @classmethod
    def from_dict(cls, dikt) -> 'GetGoodsStatsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetGoodsStatsRequest of this GetGoodsStatsRequest.  # noqa: E501
        :rtype: GetGoodsStatsRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def shop_skus(self) -> list[str]:
        """Gets the shop_skus of this GetGoodsStatsRequest.

        Список ваших идентификаторов SKU.   # noqa: E501

        :return: The shop_skus of this GetGoodsStatsRequest.
        :rtype: list[str]
        """
        return self._shop_skus

    @shop_skus.setter
    def shop_skus(self, shop_skus: list[str]):
        """Sets the shop_skus of this GetGoodsStatsRequest.

        Список ваших идентификаторов SKU.   # noqa: E501

        :param shop_skus: The shop_skus of this GetGoodsStatsRequest.
        :type shop_skus: list[str]
        """
        if shop_skus is None:
            raise ValueError("Invalid value for `shop_skus`, must not be `None`")  # noqa: E501
        if shop_skus is not None and len(shop_skus) > 500:
            raise ValueError("Invalid value for `shop_skus`, number of items must be less than or equal to `500`")  # noqa: E501
        if shop_skus is not None and len(shop_skus) < 1:
            raise ValueError("Invalid value for `shop_skus`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._shop_skus = shop_skus
