from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server.models.feed_publication_full_dto import FeedPublicationFullDTO
from ympa_python_flask_server.models.feed_publication_price_and_stock_update_dto import FeedPublicationPriceAndStockUpdateDTO
from ympa_python_flask_server.models.feed_status_type import FeedStatusType
from ympa_python_flask_server import util

from ympa_python_flask_server.models.feed_publication_full_dto import FeedPublicationFullDTO  # noqa: E501
from ympa_python_flask_server.models.feed_publication_price_and_stock_update_dto import FeedPublicationPriceAndStockUpdateDTO  # noqa: E501
from ympa_python_flask_server.models.feed_status_type import FeedStatusType  # noqa: E501

class FeedPublicationDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status=None, full=None, price_and_stock_update=None):  # noqa: E501
        """FeedPublicationDTO - a model defined in OpenAPI

        :param status: The status of this FeedPublicationDTO.  # noqa: E501
        :type status: FeedStatusType
        :param full: The full of this FeedPublicationDTO.  # noqa: E501
        :type full: FeedPublicationFullDTO
        :param price_and_stock_update: The price_and_stock_update of this FeedPublicationDTO.  # noqa: E501
        :type price_and_stock_update: FeedPublicationPriceAndStockUpdateDTO
        """
        self.openapi_types = {
            'status': FeedStatusType,
            'full': FeedPublicationFullDTO,
            'price_and_stock_update': FeedPublicationPriceAndStockUpdateDTO
        }

        self.attribute_map = {
            'status': 'status',
            'full': 'full',
            'price_and_stock_update': 'priceAndStockUpdate'
        }

        self._status = status
        self._full = full
        self._price_and_stock_update = price_and_stock_update

    @classmethod
    def from_dict(cls, dikt) -> 'FeedPublicationDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FeedPublicationDTO of this FeedPublicationDTO.  # noqa: E501
        :rtype: FeedPublicationDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self) -> FeedStatusType:
        """Gets the status of this FeedPublicationDTO.


        :return: The status of this FeedPublicationDTO.
        :rtype: FeedStatusType
        """
        return self._status

    @status.setter
    def status(self, status: FeedStatusType):
        """Sets the status of this FeedPublicationDTO.


        :param status: The status of this FeedPublicationDTO.
        :type status: FeedStatusType
        """

        self._status = status

    @property
    def full(self) -> FeedPublicationFullDTO:
        """Gets the full of this FeedPublicationDTO.


        :return: The full of this FeedPublicationDTO.
        :rtype: FeedPublicationFullDTO
        """
        return self._full

    @full.setter
    def full(self, full: FeedPublicationFullDTO):
        """Sets the full of this FeedPublicationDTO.


        :param full: The full of this FeedPublicationDTO.
        :type full: FeedPublicationFullDTO
        """

        self._full = full

    @property
    def price_and_stock_update(self) -> FeedPublicationPriceAndStockUpdateDTO:
        """Gets the price_and_stock_update of this FeedPublicationDTO.


        :return: The price_and_stock_update of this FeedPublicationDTO.
        :rtype: FeedPublicationPriceAndStockUpdateDTO
        """
        return self._price_and_stock_update

    @price_and_stock_update.setter
    def price_and_stock_update(self, price_and_stock_update: FeedPublicationPriceAndStockUpdateDTO):
        """Sets the price_and_stock_update of this FeedPublicationDTO.


        :param price_and_stock_update: The price_and_stock_update of this FeedPublicationDTO.
        :type price_and_stock_update: FeedPublicationPriceAndStockUpdateDTO
        """

        self._price_and_stock_update = price_and_stock_update
