from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server import util


class PromoPeriodDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_time_from=None, date_time_to=None):  # noqa: E501
        """PromoPeriodDTO - a model defined in OpenAPI

        :param date_time_from: The date_time_from of this PromoPeriodDTO.  # noqa: E501
        :type date_time_from: datetime
        :param date_time_to: The date_time_to of this PromoPeriodDTO.  # noqa: E501
        :type date_time_to: datetime
        """
        self.openapi_types = {
            'date_time_from': datetime,
            'date_time_to': datetime
        }

        self.attribute_map = {
            'date_time_from': 'dateTimeFrom',
            'date_time_to': 'dateTimeTo'
        }

        self._date_time_from = date_time_from
        self._date_time_to = date_time_to

    @classmethod
    def from_dict(cls, dikt) -> 'PromoPeriodDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PromoPeriodDTO of this PromoPeriodDTO.  # noqa: E501
        :rtype: PromoPeriodDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_time_from(self) -> datetime:
        """Gets the date_time_from of this PromoPeriodDTO.

        Дата и время начала акции.  # noqa: E501

        :return: The date_time_from of this PromoPeriodDTO.
        :rtype: datetime
        """
        return self._date_time_from

    @date_time_from.setter
    def date_time_from(self, date_time_from: datetime):
        """Sets the date_time_from of this PromoPeriodDTO.

        Дата и время начала акции.  # noqa: E501

        :param date_time_from: The date_time_from of this PromoPeriodDTO.
        :type date_time_from: datetime
        """
        if date_time_from is None:
            raise ValueError("Invalid value for `date_time_from`, must not be `None`")  # noqa: E501

        self._date_time_from = date_time_from

    @property
    def date_time_to(self) -> datetime:
        """Gets the date_time_to of this PromoPeriodDTO.

        Дата и время окончания акции.  # noqa: E501

        :return: The date_time_to of this PromoPeriodDTO.
        :rtype: datetime
        """
        return self._date_time_to

    @date_time_to.setter
    def date_time_to(self, date_time_to: datetime):
        """Sets the date_time_to of this PromoPeriodDTO.

        Дата и время окончания акции.  # noqa: E501

        :param date_time_to: The date_time_to of this PromoPeriodDTO.
        :type date_time_to: datetime
        """
        if date_time_to is None:
            raise ValueError("Invalid value for `date_time_to`, must not be `None`")  # noqa: E501

        self._date_time_to = date_time_to
