from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server.models.chat_message_dto import ChatMessageDTO
from ympa_python_flask_server.models.forward_scrolling_pager_dto import ForwardScrollingPagerDTO
from ympa_python_flask_server import util

from ympa_python_flask_server.models.chat_message_dto import ChatMessageDTO  # noqa: E501
from ympa_python_flask_server.models.forward_scrolling_pager_dto import ForwardScrollingPagerDTO  # noqa: E501

class ChatMessagesResultDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, order_id=None, messages=None, paging=None):  # noqa: E501
        """ChatMessagesResultDTO - a model defined in OpenAPI

        :param order_id: The order_id of this ChatMessagesResultDTO.  # noqa: E501
        :type order_id: int
        :param messages: The messages of this ChatMessagesResultDTO.  # noqa: E501
        :type messages: List[ChatMessageDTO]
        :param paging: The paging of this ChatMessagesResultDTO.  # noqa: E501
        :type paging: ForwardScrollingPagerDTO
        """
        self.openapi_types = {
            'order_id': int,
            'messages': List[ChatMessageDTO],
            'paging': ForwardScrollingPagerDTO
        }

        self.attribute_map = {
            'order_id': 'orderId',
            'messages': 'messages',
            'paging': 'paging'
        }

        self._order_id = order_id
        self._messages = messages
        self._paging = paging

    @classmethod
    def from_dict(cls, dikt) -> 'ChatMessagesResultDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChatMessagesResultDTO of this ChatMessagesResultDTO.  # noqa: E501
        :rtype: ChatMessagesResultDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def order_id(self) -> int:
        """Gets the order_id of this ChatMessagesResultDTO.

        Идентификатор заказа.  # noqa: E501

        :return: The order_id of this ChatMessagesResultDTO.
        :rtype: int
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id: int):
        """Sets the order_id of this ChatMessagesResultDTO.

        Идентификатор заказа.  # noqa: E501

        :param order_id: The order_id of this ChatMessagesResultDTO.
        :type order_id: int
        """
        if order_id is None:
            raise ValueError("Invalid value for `order_id`, must not be `None`")  # noqa: E501

        self._order_id = order_id

    @property
    def messages(self) -> List[ChatMessageDTO]:
        """Gets the messages of this ChatMessagesResultDTO.

        Информация о сообщениях.  # noqa: E501

        :return: The messages of this ChatMessagesResultDTO.
        :rtype: List[ChatMessageDTO]
        """
        return self._messages

    @messages.setter
    def messages(self, messages: List[ChatMessageDTO]):
        """Sets the messages of this ChatMessagesResultDTO.

        Информация о сообщениях.  # noqa: E501

        :param messages: The messages of this ChatMessagesResultDTO.
        :type messages: List[ChatMessageDTO]
        """
        if messages is None:
            raise ValueError("Invalid value for `messages`, must not be `None`")  # noqa: E501

        self._messages = messages

    @property
    def paging(self) -> ForwardScrollingPagerDTO:
        """Gets the paging of this ChatMessagesResultDTO.


        :return: The paging of this ChatMessagesResultDTO.
        :rtype: ForwardScrollingPagerDTO
        """
        return self._paging

    @paging.setter
    def paging(self, paging: ForwardScrollingPagerDTO):
        """Sets the paging of this ChatMessagesResultDTO.


        :param paging: The paging of this ChatMessagesResultDTO.
        :type paging: ForwardScrollingPagerDTO
        """

        self._paging = paging
