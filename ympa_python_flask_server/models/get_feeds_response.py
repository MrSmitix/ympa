from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server.models.feed_dto import FeedDTO
from ympa_python_flask_server import util

from ympa_python_flask_server.models.feed_dto import FeedDTO  # noqa: E501

class GetFeedsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, feeds=None):  # noqa: E501
        """GetFeedsResponse - a model defined in OpenAPI

        :param feeds: The feeds of this GetFeedsResponse.  # noqa: E501
        :type feeds: List[FeedDTO]
        """
        self.openapi_types = {
            'feeds': List[FeedDTO]
        }

        self.attribute_map = {
            'feeds': 'feeds'
        }

        self._feeds = feeds

    @classmethod
    def from_dict(cls, dikt) -> 'GetFeedsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetFeedsResponse of this GetFeedsResponse.  # noqa: E501
        :rtype: GetFeedsResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feeds(self) -> List[FeedDTO]:
        """Gets the feeds of this GetFeedsResponse.

        Список прайс-листов.  # noqa: E501

        :return: The feeds of this GetFeedsResponse.
        :rtype: List[FeedDTO]
        """
        return self._feeds

    @feeds.setter
    def feeds(self, feeds: List[FeedDTO]):
        """Sets the feeds of this GetFeedsResponse.

        Список прайс-листов.  # noqa: E501

        :param feeds: The feeds of this GetFeedsResponse.
        :type feeds: List[FeedDTO]
        """
        if feeds is None:
            raise ValueError("Invalid value for `feeds`, must not be `None`")  # noqa: E501

        self._feeds = feeds
