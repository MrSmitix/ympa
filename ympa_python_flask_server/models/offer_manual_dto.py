from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server import util


class OfferManualDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, url=None, title=None):  # noqa: E501
        """OfferManualDTO - a model defined in OpenAPI

        :param url: The url of this OfferManualDTO.  # noqa: E501
        :type url: str
        :param title: The title of this OfferManualDTO.  # noqa: E501
        :type title: str
        """
        self.openapi_types = {
            'url': str,
            'title': str
        }

        self.attribute_map = {
            'url': 'url',
            'title': 'title'
        }

        self._url = url
        self._title = title

    @classmethod
    def from_dict(cls, dikt) -> 'OfferManualDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OfferManualDTO of this OfferManualDTO.  # noqa: E501
        :rtype: OfferManualDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def url(self) -> str:
        """Gets the url of this OfferManualDTO.

        Ссылка на инструкцию.  # noqa: E501

        :return: The url of this OfferManualDTO.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this OfferManualDTO.

        Ссылка на инструкцию.  # noqa: E501

        :param url: The url of this OfferManualDTO.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")  # noqa: E501

        self._url = url

    @property
    def title(self) -> str:
        """Gets the title of this OfferManualDTO.

        Название инструкции, которое будет отображаться на карточке товара.   # noqa: E501

        :return: The title of this OfferManualDTO.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this OfferManualDTO.

        Название инструкции, которое будет отображаться на карточке товара.   # noqa: E501

        :param title: The title of this OfferManualDTO.
        :type title: str
        """

        self._title = title
