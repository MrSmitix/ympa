from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server import util


class FeedbackFactorDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, title=None, description=None, value=None):  # noqa: E501
        """FeedbackFactorDTO - a model defined in OpenAPI

        :param id: The id of this FeedbackFactorDTO.  # noqa: E501
        :type id: int
        :param title: The title of this FeedbackFactorDTO.  # noqa: E501
        :type title: str
        :param description: The description of this FeedbackFactorDTO.  # noqa: E501
        :type description: str
        :param value: The value of this FeedbackFactorDTO.  # noqa: E501
        :type value: int
        """
        self.openapi_types = {
            'id': int,
            'title': str,
            'description': str,
            'value': int
        }

        self.attribute_map = {
            'id': 'id',
            'title': 'title',
            'description': 'description',
            'value': 'value'
        }

        self._id = id
        self._title = title
        self._description = description
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'FeedbackFactorDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FeedbackFactorDTO of this FeedbackFactorDTO.  # noqa: E501
        :rtype: FeedbackFactorDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this FeedbackFactorDTO.

        Идентификатор параметра.  # noqa: E501

        :return: The id of this FeedbackFactorDTO.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this FeedbackFactorDTO.

        Идентификатор параметра.  # noqa: E501

        :param id: The id of this FeedbackFactorDTO.
        :type id: int
        """

        self._id = id

    @property
    def title(self) -> str:
        """Gets the title of this FeedbackFactorDTO.

        Название параметра. Например, `Скорость обработки заказа`.  # noqa: E501

        :return: The title of this FeedbackFactorDTO.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this FeedbackFactorDTO.

        Название параметра. Например, `Скорость обработки заказа`.  # noqa: E501

        :param title: The title of this FeedbackFactorDTO.
        :type title: str
        """

        self._title = title

    @property
    def description(self) -> str:
        """Gets the description of this FeedbackFactorDTO.

        Описание параметра. Например, `Как быстро с вами связались для подтверждения заказа?`.  # noqa: E501

        :return: The description of this FeedbackFactorDTO.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this FeedbackFactorDTO.

        Описание параметра. Например, `Как быстро с вами связались для подтверждения заказа?`.  # noqa: E501

        :param description: The description of this FeedbackFactorDTO.
        :type description: str
        """

        self._description = description

    @property
    def value(self) -> int:
        """Gets the value of this FeedbackFactorDTO.

        Оценка по параметру, указанная в отзыве: от `1` (низшая оценка) до `5` (высшая оценка).   # noqa: E501

        :return: The value of this FeedbackFactorDTO.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value: int):
        """Sets the value of this FeedbackFactorDTO.

        Оценка по параметру, указанная в отзыве: от `1` (низшая оценка) до `5` (высшая оценка).   # noqa: E501

        :param value: The value of this FeedbackFactorDTO.
        :type value: int
        """

        self._value = value
