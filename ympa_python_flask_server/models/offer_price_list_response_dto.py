from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server.models.offer_price_response_dto import OfferPriceResponseDTO
from ympa_python_flask_server.models.scrolling_pager_dto import ScrollingPagerDTO
from ympa_python_flask_server import util

from ympa_python_flask_server.models.offer_price_response_dto import OfferPriceResponseDTO  # noqa: E501
from ympa_python_flask_server.models.scrolling_pager_dto import ScrollingPagerDTO  # noqa: E501

class OfferPriceListResponseDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offers=None, paging=None, total=None):  # noqa: E501
        """OfferPriceListResponseDTO - a model defined in OpenAPI

        :param offers: The offers of this OfferPriceListResponseDTO.  # noqa: E501
        :type offers: List[OfferPriceResponseDTO]
        :param paging: The paging of this OfferPriceListResponseDTO.  # noqa: E501
        :type paging: ScrollingPagerDTO
        :param total: The total of this OfferPriceListResponseDTO.  # noqa: E501
        :type total: int
        """
        self.openapi_types = {
            'offers': List[OfferPriceResponseDTO],
            'paging': ScrollingPagerDTO,
            'total': int
        }

        self.attribute_map = {
            'offers': 'offers',
            'paging': 'paging',
            'total': 'total'
        }

        self._offers = offers
        self._paging = paging
        self._total = total

    @classmethod
    def from_dict(cls, dikt) -> 'OfferPriceListResponseDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OfferPriceListResponseDTO of this OfferPriceListResponseDTO.  # noqa: E501
        :rtype: OfferPriceListResponseDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offers(self) -> List[OfferPriceResponseDTO]:
        """Gets the offers of this OfferPriceListResponseDTO.

        Страница списка.  # noqa: E501

        :return: The offers of this OfferPriceListResponseDTO.
        :rtype: List[OfferPriceResponseDTO]
        """
        return self._offers

    @offers.setter
    def offers(self, offers: List[OfferPriceResponseDTO]):
        """Sets the offers of this OfferPriceListResponseDTO.

        Страница списка.  # noqa: E501

        :param offers: The offers of this OfferPriceListResponseDTO.
        :type offers: List[OfferPriceResponseDTO]
        """
        if offers is None:
            raise ValueError("Invalid value for `offers`, must not be `None`")  # noqa: E501

        self._offers = offers

    @property
    def paging(self) -> ScrollingPagerDTO:
        """Gets the paging of this OfferPriceListResponseDTO.


        :return: The paging of this OfferPriceListResponseDTO.
        :rtype: ScrollingPagerDTO
        """
        return self._paging

    @paging.setter
    def paging(self, paging: ScrollingPagerDTO):
        """Sets the paging of this OfferPriceListResponseDTO.


        :param paging: The paging of this OfferPriceListResponseDTO.
        :type paging: ScrollingPagerDTO
        """

        self._paging = paging

    @property
    def total(self) -> int:
        """Gets the total of this OfferPriceListResponseDTO.

        Количество всех цен магазина, измененных через API.  # noqa: E501

        :return: The total of this OfferPriceListResponseDTO.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total: int):
        """Sets the total of this OfferPriceListResponseDTO.

        Количество всех цен магазина, измененных через API.  # noqa: E501

        :param total: The total of this OfferPriceListResponseDTO.
        :type total: int
        """

        self._total = total
