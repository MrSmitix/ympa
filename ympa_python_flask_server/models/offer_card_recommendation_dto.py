from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server.models.offer_card_recommendation_type import OfferCardRecommendationType
from ympa_python_flask_server import util

from ympa_python_flask_server.models.offer_card_recommendation_type import OfferCardRecommendationType  # noqa: E501

class OfferCardRecommendationDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type=None, percent=None):  # noqa: E501
        """OfferCardRecommendationDTO - a model defined in OpenAPI

        :param type: The type of this OfferCardRecommendationDTO.  # noqa: E501
        :type type: OfferCardRecommendationType
        :param percent: The percent of this OfferCardRecommendationDTO.  # noqa: E501
        :type percent: int
        """
        self.openapi_types = {
            'type': OfferCardRecommendationType,
            'percent': int
        }

        self.attribute_map = {
            'type': 'type',
            'percent': 'percent'
        }

        self._type = type
        self._percent = percent

    @classmethod
    def from_dict(cls, dikt) -> 'OfferCardRecommendationDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OfferCardRecommendationDTO of this OfferCardRecommendationDTO.  # noqa: E501
        :rtype: OfferCardRecommendationDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> OfferCardRecommendationType:
        """Gets the type of this OfferCardRecommendationDTO.


        :return: The type of this OfferCardRecommendationDTO.
        :rtype: OfferCardRecommendationType
        """
        return self._type

    @type.setter
    def type(self, type: OfferCardRecommendationType):
        """Sets the type of this OfferCardRecommendationDTO.


        :param type: The type of this OfferCardRecommendationDTO.
        :type type: OfferCardRecommendationType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type

    @property
    def percent(self) -> int:
        """Gets the percent of this OfferCardRecommendationDTO.

        Процент выполнения рекомендации. Указывается для рекомендаций некоторых типов.  # noqa: E501

        :return: The percent of this OfferCardRecommendationDTO.
        :rtype: int
        """
        return self._percent

    @percent.setter
    def percent(self, percent: int):
        """Sets the percent of this OfferCardRecommendationDTO.

        Процент выполнения рекомендации. Указывается для рекомендаций некоторых типов.  # noqa: E501

        :param percent: The percent of this OfferCardRecommendationDTO.
        :type percent: int
        """
        if percent is not None and percent >= 100:  # noqa: E501
            raise ValueError("Invalid value for `percent`, must be a value less than `100`")  # noqa: E501
        if percent is not None and percent < 0:  # noqa: E501
            raise ValueError("Invalid value for `percent`, must be a value greater than or equal to `0`")  # noqa: E501

        self._percent = percent
