from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server.models.time_unit_type import TimeUnitType
from ympa_python_flask_server import util

from ympa_python_flask_server.models.time_unit_type import TimeUnitType  # noqa: E501

class TimePeriodDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, time_period=None, time_unit=None, comment=None):  # noqa: E501
        """TimePeriodDTO - a model defined in OpenAPI

        :param time_period: The time_period of this TimePeriodDTO.  # noqa: E501
        :type time_period: int
        :param time_unit: The time_unit of this TimePeriodDTO.  # noqa: E501
        :type time_unit: TimeUnitType
        :param comment: The comment of this TimePeriodDTO.  # noqa: E501
        :type comment: str
        """
        self.openapi_types = {
            'time_period': int,
            'time_unit': TimeUnitType,
            'comment': str
        }

        self.attribute_map = {
            'time_period': 'timePeriod',
            'time_unit': 'timeUnit',
            'comment': 'comment'
        }

        self._time_period = time_period
        self._time_unit = time_unit
        self._comment = comment

    @classmethod
    def from_dict(cls, dikt) -> 'TimePeriodDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TimePeriodDTO of this TimePeriodDTO.  # noqa: E501
        :rtype: TimePeriodDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def time_period(self) -> int:
        """Gets the time_period of this TimePeriodDTO.

        Продолжительность в указанных единицах.  # noqa: E501

        :return: The time_period of this TimePeriodDTO.
        :rtype: int
        """
        return self._time_period

    @time_period.setter
    def time_period(self, time_period: int):
        """Sets the time_period of this TimePeriodDTO.

        Продолжительность в указанных единицах.  # noqa: E501

        :param time_period: The time_period of this TimePeriodDTO.
        :type time_period: int
        """
        if time_period is None:
            raise ValueError("Invalid value for `time_period`, must not be `None`")  # noqa: E501

        self._time_period = time_period

    @property
    def time_unit(self) -> TimeUnitType:
        """Gets the time_unit of this TimePeriodDTO.


        :return: The time_unit of this TimePeriodDTO.
        :rtype: TimeUnitType
        """
        return self._time_unit

    @time_unit.setter
    def time_unit(self, time_unit: TimeUnitType):
        """Sets the time_unit of this TimePeriodDTO.


        :param time_unit: The time_unit of this TimePeriodDTO.
        :type time_unit: TimeUnitType
        """
        if time_unit is None:
            raise ValueError("Invalid value for `time_unit`, must not be `None`")  # noqa: E501

        self._time_unit = time_unit

    @property
    def comment(self) -> str:
        """Gets the comment of this TimePeriodDTO.

        Комментарий.  # noqa: E501

        :return: The comment of this TimePeriodDTO.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment: str):
        """Sets the comment of this TimePeriodDTO.

        Комментарий.  # noqa: E501

        :param comment: The comment of this TimePeriodDTO.
        :type comment: str
        """

        self._comment = comment
