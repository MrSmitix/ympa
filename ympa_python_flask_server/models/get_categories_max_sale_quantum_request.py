from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server import util


class GetCategoriesMaxSaleQuantumRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, market_category_ids=None):  # noqa: E501
        """GetCategoriesMaxSaleQuantumRequest - a model defined in OpenAPI

        :param market_category_ids: The market_category_ids of this GetCategoriesMaxSaleQuantumRequest.  # noqa: E501
        :type market_category_ids: list[int]
        """
        self.openapi_types = {
            'market_category_ids': list[int]
        }

        self.attribute_map = {
            'market_category_ids': 'marketCategoryIds'
        }

        self._market_category_ids = market_category_ids

    @classmethod
    def from_dict(cls, dikt) -> 'GetCategoriesMaxSaleQuantumRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetCategoriesMaxSaleQuantumRequest of this GetCategoriesMaxSaleQuantumRequest.  # noqa: E501
        :rtype: GetCategoriesMaxSaleQuantumRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def market_category_ids(self) -> list[int]:
        """Gets the market_category_ids of this GetCategoriesMaxSaleQuantumRequest.

        Идентификаторы листовых категории на Маркете — тех, у которых нет дочерних категорий.  # noqa: E501

        :return: The market_category_ids of this GetCategoriesMaxSaleQuantumRequest.
        :rtype: list[int]
        """
        return self._market_category_ids

    @market_category_ids.setter
    def market_category_ids(self, market_category_ids: list[int]):
        """Sets the market_category_ids of this GetCategoriesMaxSaleQuantumRequest.

        Идентификаторы листовых категории на Маркете — тех, у которых нет дочерних категорий.  # noqa: E501

        :param market_category_ids: The market_category_ids of this GetCategoriesMaxSaleQuantumRequest.
        :type market_category_ids: list[int]
        """
        if market_category_ids is None:
            raise ValueError("Invalid value for `market_category_ids`, must not be `None`")  # noqa: E501
        if market_category_ids is not None and len(market_category_ids) > 1500:
            raise ValueError("Invalid value for `market_category_ids`, number of items must be less than or equal to `1500`")  # noqa: E501
        if market_category_ids is not None and len(market_category_ids) < 1:
            raise ValueError("Invalid value for `market_category_ids`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._market_category_ids = market_category_ids
