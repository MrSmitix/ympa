from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server.models.turnover_type import TurnoverType
from ympa_python_flask_server import util

from ympa_python_flask_server.models.turnover_type import TurnoverType  # noqa: E501

class TurnoverDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, turnover=None, turnover_days=None):  # noqa: E501
        """TurnoverDTO - a model defined in OpenAPI

        :param turnover: The turnover of this TurnoverDTO.  # noqa: E501
        :type turnover: TurnoverType
        :param turnover_days: The turnover_days of this TurnoverDTO.  # noqa: E501
        :type turnover_days: float
        """
        self.openapi_types = {
            'turnover': TurnoverType,
            'turnover_days': float
        }

        self.attribute_map = {
            'turnover': 'turnover',
            'turnover_days': 'turnoverDays'
        }

        self._turnover = turnover
        self._turnover_days = turnover_days

    @classmethod
    def from_dict(cls, dikt) -> 'TurnoverDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TurnoverDTO of this TurnoverDTO.  # noqa: E501
        :rtype: TurnoverDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def turnover(self) -> TurnoverType:
        """Gets the turnover of this TurnoverDTO.


        :return: The turnover of this TurnoverDTO.
        :rtype: TurnoverType
        """
        return self._turnover

    @turnover.setter
    def turnover(self, turnover: TurnoverType):
        """Sets the turnover of this TurnoverDTO.


        :param turnover: The turnover of this TurnoverDTO.
        :type turnover: TurnoverType
        """
        if turnover is None:
            raise ValueError("Invalid value for `turnover`, must not be `None`")  # noqa: E501

        self._turnover = turnover

    @property
    def turnover_days(self) -> float:
        """Gets the turnover_days of this TurnoverDTO.

        Значение в днях. [Что это за число?](https://yandex.ru/support/marketplace/analytics/turnover.html)  # noqa: E501

        :return: The turnover_days of this TurnoverDTO.
        :rtype: float
        """
        return self._turnover_days

    @turnover_days.setter
    def turnover_days(self, turnover_days: float):
        """Sets the turnover_days of this TurnoverDTO.

        Значение в днях. [Что это за число?](https://yandex.ru/support/marketplace/analytics/turnover.html)  # noqa: E501

        :param turnover_days: The turnover_days of this TurnoverDTO.
        :type turnover_days: float
        """

        self._turnover_days = turnover_days
