from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server.models.fulfillment_warehouse_dto import FulfillmentWarehouseDTO
from ympa_python_flask_server import util

from ympa_python_flask_server.models.fulfillment_warehouse_dto import FulfillmentWarehouseDTO  # noqa: E501

class FulfillmentWarehousesDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, warehouses=None):  # noqa: E501
        """FulfillmentWarehousesDTO - a model defined in OpenAPI

        :param warehouses: The warehouses of this FulfillmentWarehousesDTO.  # noqa: E501
        :type warehouses: List[FulfillmentWarehouseDTO]
        """
        self.openapi_types = {
            'warehouses': List[FulfillmentWarehouseDTO]
        }

        self.attribute_map = {
            'warehouses': 'warehouses'
        }

        self._warehouses = warehouses

    @classmethod
    def from_dict(cls, dikt) -> 'FulfillmentWarehousesDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FulfillmentWarehousesDTO of this FulfillmentWarehousesDTO.  # noqa: E501
        :rtype: FulfillmentWarehousesDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def warehouses(self) -> List[FulfillmentWarehouseDTO]:
        """Gets the warehouses of this FulfillmentWarehousesDTO.

        Список складов Маркета (FBY).  # noqa: E501

        :return: The warehouses of this FulfillmentWarehousesDTO.
        :rtype: List[FulfillmentWarehouseDTO]
        """
        return self._warehouses

    @warehouses.setter
    def warehouses(self, warehouses: List[FulfillmentWarehouseDTO]):
        """Sets the warehouses of this FulfillmentWarehousesDTO.

        Список складов Маркета (FBY).  # noqa: E501

        :param warehouses: The warehouses of this FulfillmentWarehousesDTO.
        :type warehouses: List[FulfillmentWarehouseDTO]
        """
        if warehouses is None:
            raise ValueError("Invalid value for `warehouses`, must not be `None`")  # noqa: E501

        self._warehouses = warehouses
