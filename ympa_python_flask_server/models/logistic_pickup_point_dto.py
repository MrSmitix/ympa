from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server.models.logistic_point_type import LogisticPointType
from ympa_python_flask_server.models.pickup_address_dto import PickupAddressDTO
from ympa_python_flask_server import util

from ympa_python_flask_server.models.logistic_point_type import LogisticPointType  # noqa: E501
from ympa_python_flask_server.models.pickup_address_dto import PickupAddressDTO  # noqa: E501

class LogisticPickupPointDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, address=None, instruction=None, type=None, logistic_partner_id=None):  # noqa: E501
        """LogisticPickupPointDTO - a model defined in OpenAPI

        :param id: The id of this LogisticPickupPointDTO.  # noqa: E501
        :type id: int
        :param name: The name of this LogisticPickupPointDTO.  # noqa: E501
        :type name: str
        :param address: The address of this LogisticPickupPointDTO.  # noqa: E501
        :type address: PickupAddressDTO
        :param instruction: The instruction of this LogisticPickupPointDTO.  # noqa: E501
        :type instruction: str
        :param type: The type of this LogisticPickupPointDTO.  # noqa: E501
        :type type: LogisticPointType
        :param logistic_partner_id: The logistic_partner_id of this LogisticPickupPointDTO.  # noqa: E501
        :type logistic_partner_id: int
        """
        self.openapi_types = {
            'id': int,
            'name': str,
            'address': PickupAddressDTO,
            'instruction': str,
            'type': LogisticPointType,
            'logistic_partner_id': int
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'address': 'address',
            'instruction': 'instruction',
            'type': 'type',
            'logistic_partner_id': 'logisticPartnerId'
        }

        self._id = id
        self._name = name
        self._address = address
        self._instruction = instruction
        self._type = type
        self._logistic_partner_id = logistic_partner_id

    @classmethod
    def from_dict(cls, dikt) -> 'LogisticPickupPointDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LogisticPickupPointDTO of this LogisticPickupPointDTO.  # noqa: E501
        :rtype: LogisticPickupPointDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this LogisticPickupPointDTO.

        Идентификатор пункта вывоза.  # noqa: E501

        :return: The id of this LogisticPickupPointDTO.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this LogisticPickupPointDTO.

        Идентификатор пункта вывоза.  # noqa: E501

        :param id: The id of this LogisticPickupPointDTO.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this LogisticPickupPointDTO.

        Название пункта вывоза.  # noqa: E501

        :return: The name of this LogisticPickupPointDTO.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this LogisticPickupPointDTO.

        Название пункта вывоза.  # noqa: E501

        :param name: The name of this LogisticPickupPointDTO.
        :type name: str
        """

        self._name = name

    @property
    def address(self) -> PickupAddressDTO:
        """Gets the address of this LogisticPickupPointDTO.


        :return: The address of this LogisticPickupPointDTO.
        :rtype: PickupAddressDTO
        """
        return self._address

    @address.setter
    def address(self, address: PickupAddressDTO):
        """Sets the address of this LogisticPickupPointDTO.


        :param address: The address of this LogisticPickupPointDTO.
        :type address: PickupAddressDTO
        """

        self._address = address

    @property
    def instruction(self) -> str:
        """Gets the instruction of this LogisticPickupPointDTO.

        Дополнительные инструкции к вывозу.  # noqa: E501

        :return: The instruction of this LogisticPickupPointDTO.
        :rtype: str
        """
        return self._instruction

    @instruction.setter
    def instruction(self, instruction: str):
        """Sets the instruction of this LogisticPickupPointDTO.

        Дополнительные инструкции к вывозу.  # noqa: E501

        :param instruction: The instruction of this LogisticPickupPointDTO.
        :type instruction: str
        """

        self._instruction = instruction

    @property
    def type(self) -> LogisticPointType:
        """Gets the type of this LogisticPickupPointDTO.


        :return: The type of this LogisticPickupPointDTO.
        :rtype: LogisticPointType
        """
        return self._type

    @type.setter
    def type(self, type: LogisticPointType):
        """Sets the type of this LogisticPickupPointDTO.


        :param type: The type of this LogisticPickupPointDTO.
        :type type: LogisticPointType
        """

        self._type = type

    @property
    def logistic_partner_id(self) -> int:
        """Gets the logistic_partner_id of this LogisticPickupPointDTO.

        Идентификатор логистического партнера, к которому относится логистическая точка.  # noqa: E501

        :return: The logistic_partner_id of this LogisticPickupPointDTO.
        :rtype: int
        """
        return self._logistic_partner_id

    @logistic_partner_id.setter
    def logistic_partner_id(self, logistic_partner_id: int):
        """Sets the logistic_partner_id of this LogisticPickupPointDTO.

        Идентификатор логистического партнера, к которому относится логистическая точка.  # noqa: E501

        :param logistic_partner_id: The logistic_partner_id of this LogisticPickupPointDTO.
        :type logistic_partner_id: int
        """

        self._logistic_partner_id = logistic_partner_id
