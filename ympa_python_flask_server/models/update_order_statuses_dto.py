from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server.models.update_order_status_dto import UpdateOrderStatusDTO
from ympa_python_flask_server import util

from ympa_python_flask_server.models.update_order_status_dto import UpdateOrderStatusDTO  # noqa: E501

class UpdateOrderStatusesDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, orders=None):  # noqa: E501
        """UpdateOrderStatusesDTO - a model defined in OpenAPI

        :param orders: The orders of this UpdateOrderStatusesDTO.  # noqa: E501
        :type orders: List[UpdateOrderStatusDTO]
        """
        self.openapi_types = {
            'orders': List[UpdateOrderStatusDTO]
        }

        self.attribute_map = {
            'orders': 'orders'
        }

        self._orders = orders

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateOrderStatusesDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UpdateOrderStatusesDTO of this UpdateOrderStatusesDTO.  # noqa: E501
        :rtype: UpdateOrderStatusesDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def orders(self) -> List[UpdateOrderStatusDTO]:
        """Gets the orders of this UpdateOrderStatusesDTO.

        Список с обновленными заказами.  # noqa: E501

        :return: The orders of this UpdateOrderStatusesDTO.
        :rtype: List[UpdateOrderStatusDTO]
        """
        return self._orders

    @orders.setter
    def orders(self, orders: List[UpdateOrderStatusDTO]):
        """Sets the orders of this UpdateOrderStatusesDTO.

        Список с обновленными заказами.  # noqa: E501

        :param orders: The orders of this UpdateOrderStatusesDTO.
        :type orders: List[UpdateOrderStatusDTO]
        """
        if orders is None:
            raise ValueError("Invalid value for `orders`, must not be `None`")  # noqa: E501

        self._orders = orders
