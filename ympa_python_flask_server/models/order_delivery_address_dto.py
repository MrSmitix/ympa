from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server.models.gps_dto import GpsDTO
from ympa_python_flask_server import util

from ympa_python_flask_server.models.gps_dto import GpsDTO  # noqa: E501

class OrderDeliveryAddressDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country=None, postcode=None, city=None, district=None, subway=None, street=None, house=None, block=None, entrance=None, entryphone=None, floor=None, apartment=None, phone=None, recipient=None, gps=None):  # noqa: E501
        """OrderDeliveryAddressDTO - a model defined in OpenAPI

        :param country: The country of this OrderDeliveryAddressDTO.  # noqa: E501
        :type country: str
        :param postcode: The postcode of this OrderDeliveryAddressDTO.  # noqa: E501
        :type postcode: str
        :param city: The city of this OrderDeliveryAddressDTO.  # noqa: E501
        :type city: str
        :param district: The district of this OrderDeliveryAddressDTO.  # noqa: E501
        :type district: str
        :param subway: The subway of this OrderDeliveryAddressDTO.  # noqa: E501
        :type subway: str
        :param street: The street of this OrderDeliveryAddressDTO.  # noqa: E501
        :type street: str
        :param house: The house of this OrderDeliveryAddressDTO.  # noqa: E501
        :type house: str
        :param block: The block of this OrderDeliveryAddressDTO.  # noqa: E501
        :type block: str
        :param entrance: The entrance of this OrderDeliveryAddressDTO.  # noqa: E501
        :type entrance: str
        :param entryphone: The entryphone of this OrderDeliveryAddressDTO.  # noqa: E501
        :type entryphone: str
        :param floor: The floor of this OrderDeliveryAddressDTO.  # noqa: E501
        :type floor: str
        :param apartment: The apartment of this OrderDeliveryAddressDTO.  # noqa: E501
        :type apartment: str
        :param phone: The phone of this OrderDeliveryAddressDTO.  # noqa: E501
        :type phone: str
        :param recipient: The recipient of this OrderDeliveryAddressDTO.  # noqa: E501
        :type recipient: str
        :param gps: The gps of this OrderDeliveryAddressDTO.  # noqa: E501
        :type gps: GpsDTO
        """
        self.openapi_types = {
            'country': str,
            'postcode': str,
            'city': str,
            'district': str,
            'subway': str,
            'street': str,
            'house': str,
            'block': str,
            'entrance': str,
            'entryphone': str,
            'floor': str,
            'apartment': str,
            'phone': str,
            'recipient': str,
            'gps': GpsDTO
        }

        self.attribute_map = {
            'country': 'country',
            'postcode': 'postcode',
            'city': 'city',
            'district': 'district',
            'subway': 'subway',
            'street': 'street',
            'house': 'house',
            'block': 'block',
            'entrance': 'entrance',
            'entryphone': 'entryphone',
            'floor': 'floor',
            'apartment': 'apartment',
            'phone': 'phone',
            'recipient': 'recipient',
            'gps': 'gps'
        }

        self._country = country
        self._postcode = postcode
        self._city = city
        self._district = district
        self._subway = subway
        self._street = street
        self._house = house
        self._block = block
        self._entrance = entrance
        self._entryphone = entryphone
        self._floor = floor
        self._apartment = apartment
        self._phone = phone
        self._recipient = recipient
        self._gps = gps

    @classmethod
    def from_dict(cls, dikt) -> 'OrderDeliveryAddressDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OrderDeliveryAddressDTO of this OrderDeliveryAddressDTO.  # noqa: E501
        :rtype: OrderDeliveryAddressDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self) -> str:
        """Gets the country of this OrderDeliveryAddressDTO.

        Страна.  Обязательный параметр.   # noqa: E501

        :return: The country of this OrderDeliveryAddressDTO.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country: str):
        """Sets the country of this OrderDeliveryAddressDTO.

        Страна.  Обязательный параметр.   # noqa: E501

        :param country: The country of this OrderDeliveryAddressDTO.
        :type country: str
        """

        self._country = country

    @property
    def postcode(self) -> str:
        """Gets the postcode of this OrderDeliveryAddressDTO.

        Почтовый индекс.  Указывается, если выбрана доставка почтой (`delivery type=POST`).   # noqa: E501

        :return: The postcode of this OrderDeliveryAddressDTO.
        :rtype: str
        """
        return self._postcode

    @postcode.setter
    def postcode(self, postcode: str):
        """Sets the postcode of this OrderDeliveryAddressDTO.

        Почтовый индекс.  Указывается, если выбрана доставка почтой (`delivery type=POST`).   # noqa: E501

        :param postcode: The postcode of this OrderDeliveryAddressDTO.
        :type postcode: str
        """

        self._postcode = postcode

    @property
    def city(self) -> str:
        """Gets the city of this OrderDeliveryAddressDTO.

        Город или населенный пункт.  Обязательный параметр.   # noqa: E501

        :return: The city of this OrderDeliveryAddressDTO.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city: str):
        """Sets the city of this OrderDeliveryAddressDTO.

        Город или населенный пункт.  Обязательный параметр.   # noqa: E501

        :param city: The city of this OrderDeliveryAddressDTO.
        :type city: str
        """

        self._city = city

    @property
    def district(self) -> str:
        """Gets the district of this OrderDeliveryAddressDTO.

        Район.  # noqa: E501

        :return: The district of this OrderDeliveryAddressDTO.
        :rtype: str
        """
        return self._district

    @district.setter
    def district(self, district: str):
        """Sets the district of this OrderDeliveryAddressDTO.

        Район.  # noqa: E501

        :param district: The district of this OrderDeliveryAddressDTO.
        :type district: str
        """

        self._district = district

    @property
    def subway(self) -> str:
        """Gets the subway of this OrderDeliveryAddressDTO.

        Станция метро.  # noqa: E501

        :return: The subway of this OrderDeliveryAddressDTO.
        :rtype: str
        """
        return self._subway

    @subway.setter
    def subway(self, subway: str):
        """Sets the subway of this OrderDeliveryAddressDTO.

        Станция метро.  # noqa: E501

        :param subway: The subway of this OrderDeliveryAddressDTO.
        :type subway: str
        """

        self._subway = subway

    @property
    def street(self) -> str:
        """Gets the street of this OrderDeliveryAddressDTO.

        Улица.  Обязательный параметр.   # noqa: E501

        :return: The street of this OrderDeliveryAddressDTO.
        :rtype: str
        """
        return self._street

    @street.setter
    def street(self, street: str):
        """Sets the street of this OrderDeliveryAddressDTO.

        Улица.  Обязательный параметр.   # noqa: E501

        :param street: The street of this OrderDeliveryAddressDTO.
        :type street: str
        """

        self._street = street

    @property
    def house(self) -> str:
        """Gets the house of this OrderDeliveryAddressDTO.

        Дом или владение.  Обязательный параметр.   # noqa: E501

        :return: The house of this OrderDeliveryAddressDTO.
        :rtype: str
        """
        return self._house

    @house.setter
    def house(self, house: str):
        """Sets the house of this OrderDeliveryAddressDTO.

        Дом или владение.  Обязательный параметр.   # noqa: E501

        :param house: The house of this OrderDeliveryAddressDTO.
        :type house: str
        """

        self._house = house

    @property
    def block(self) -> str:
        """Gets the block of this OrderDeliveryAddressDTO.

        Корпус или строение.  # noqa: E501

        :return: The block of this OrderDeliveryAddressDTO.
        :rtype: str
        """
        return self._block

    @block.setter
    def block(self, block: str):
        """Sets the block of this OrderDeliveryAddressDTO.

        Корпус или строение.  # noqa: E501

        :param block: The block of this OrderDeliveryAddressDTO.
        :type block: str
        """

        self._block = block

    @property
    def entrance(self) -> str:
        """Gets the entrance of this OrderDeliveryAddressDTO.

        Подъезд.  # noqa: E501

        :return: The entrance of this OrderDeliveryAddressDTO.
        :rtype: str
        """
        return self._entrance

    @entrance.setter
    def entrance(self, entrance: str):
        """Sets the entrance of this OrderDeliveryAddressDTO.

        Подъезд.  # noqa: E501

        :param entrance: The entrance of this OrderDeliveryAddressDTO.
        :type entrance: str
        """

        self._entrance = entrance

    @property
    def entryphone(self) -> str:
        """Gets the entryphone of this OrderDeliveryAddressDTO.

        Код домофона.  # noqa: E501

        :return: The entryphone of this OrderDeliveryAddressDTO.
        :rtype: str
        """
        return self._entryphone

    @entryphone.setter
    def entryphone(self, entryphone: str):
        """Sets the entryphone of this OrderDeliveryAddressDTO.

        Код домофона.  # noqa: E501

        :param entryphone: The entryphone of this OrderDeliveryAddressDTO.
        :type entryphone: str
        """

        self._entryphone = entryphone

    @property
    def floor(self) -> str:
        """Gets the floor of this OrderDeliveryAddressDTO.

        Этаж.  # noqa: E501

        :return: The floor of this OrderDeliveryAddressDTO.
        :rtype: str
        """
        return self._floor

    @floor.setter
    def floor(self, floor: str):
        """Sets the floor of this OrderDeliveryAddressDTO.

        Этаж.  # noqa: E501

        :param floor: The floor of this OrderDeliveryAddressDTO.
        :type floor: str
        """

        self._floor = floor

    @property
    def apartment(self) -> str:
        """Gets the apartment of this OrderDeliveryAddressDTO.

        Квартира или офис.  # noqa: E501

        :return: The apartment of this OrderDeliveryAddressDTO.
        :rtype: str
        """
        return self._apartment

    @apartment.setter
    def apartment(self, apartment: str):
        """Sets the apartment of this OrderDeliveryAddressDTO.

        Квартира или офис.  # noqa: E501

        :param apartment: The apartment of this OrderDeliveryAddressDTO.
        :type apartment: str
        """

        self._apartment = apartment

    @property
    def phone(self) -> str:
        """Gets the phone of this OrderDeliveryAddressDTO.

        Телефон получателя заказа.  Обязательный параметр.   # noqa: E501

        :return: The phone of this OrderDeliveryAddressDTO.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone: str):
        """Sets the phone of this OrderDeliveryAddressDTO.

        Телефон получателя заказа.  Обязательный параметр.   # noqa: E501

        :param phone: The phone of this OrderDeliveryAddressDTO.
        :type phone: str
        """

        self._phone = phone

    @property
    def recipient(self) -> str:
        """Gets the recipient of this OrderDeliveryAddressDTO.

        Фамилия, имя и отчество получателя заказа.  Обязательный параметр.   # noqa: E501

        :return: The recipient of this OrderDeliveryAddressDTO.
        :rtype: str
        """
        return self._recipient

    @recipient.setter
    def recipient(self, recipient: str):
        """Sets the recipient of this OrderDeliveryAddressDTO.

        Фамилия, имя и отчество получателя заказа.  Обязательный параметр.   # noqa: E501

        :param recipient: The recipient of this OrderDeliveryAddressDTO.
        :type recipient: str
        """

        self._recipient = recipient

    @property
    def gps(self) -> GpsDTO:
        """Gets the gps of this OrderDeliveryAddressDTO.


        :return: The gps of this OrderDeliveryAddressDTO.
        :rtype: GpsDTO
        """
        return self._gps

    @gps.setter
    def gps(self, gps: GpsDTO):
        """Sets the gps of this OrderDeliveryAddressDTO.


        :param gps: The gps of this OrderDeliveryAddressDTO.
        :type gps: GpsDTO
        """

        self._gps = gps
