from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server.models.report_status_type import ReportStatusType
from ympa_python_flask_server.models.report_sub_status_type import ReportSubStatusType
from ympa_python_flask_server import util

from ympa_python_flask_server.models.report_status_type import ReportStatusType  # noqa: E501
from ympa_python_flask_server.models.report_sub_status_type import ReportSubStatusType  # noqa: E501

class ReportInfoDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status=None, sub_status=None, generation_requested_at=None, generation_finished_at=None, file=None, estimated_generation_time=None):  # noqa: E501
        """ReportInfoDTO - a model defined in OpenAPI

        :param status: The status of this ReportInfoDTO.  # noqa: E501
        :type status: ReportStatusType
        :param sub_status: The sub_status of this ReportInfoDTO.  # noqa: E501
        :type sub_status: ReportSubStatusType
        :param generation_requested_at: The generation_requested_at of this ReportInfoDTO.  # noqa: E501
        :type generation_requested_at: datetime
        :param generation_finished_at: The generation_finished_at of this ReportInfoDTO.  # noqa: E501
        :type generation_finished_at: datetime
        :param file: The file of this ReportInfoDTO.  # noqa: E501
        :type file: str
        :param estimated_generation_time: The estimated_generation_time of this ReportInfoDTO.  # noqa: E501
        :type estimated_generation_time: int
        """
        self.openapi_types = {
            'status': ReportStatusType,
            'sub_status': ReportSubStatusType,
            'generation_requested_at': datetime,
            'generation_finished_at': datetime,
            'file': str,
            'estimated_generation_time': int
        }

        self.attribute_map = {
            'status': 'status',
            'sub_status': 'subStatus',
            'generation_requested_at': 'generationRequestedAt',
            'generation_finished_at': 'generationFinishedAt',
            'file': 'file',
            'estimated_generation_time': 'estimatedGenerationTime'
        }

        self._status = status
        self._sub_status = sub_status
        self._generation_requested_at = generation_requested_at
        self._generation_finished_at = generation_finished_at
        self._file = file
        self._estimated_generation_time = estimated_generation_time

    @classmethod
    def from_dict(cls, dikt) -> 'ReportInfoDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ReportInfoDTO of this ReportInfoDTO.  # noqa: E501
        :rtype: ReportInfoDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self) -> ReportStatusType:
        """Gets the status of this ReportInfoDTO.


        :return: The status of this ReportInfoDTO.
        :rtype: ReportStatusType
        """
        return self._status

    @status.setter
    def status(self, status: ReportStatusType):
        """Sets the status of this ReportInfoDTO.


        :param status: The status of this ReportInfoDTO.
        :type status: ReportStatusType
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")  # noqa: E501

        self._status = status

    @property
    def sub_status(self) -> ReportSubStatusType:
        """Gets the sub_status of this ReportInfoDTO.


        :return: The sub_status of this ReportInfoDTO.
        :rtype: ReportSubStatusType
        """
        return self._sub_status

    @sub_status.setter
    def sub_status(self, sub_status: ReportSubStatusType):
        """Sets the sub_status of this ReportInfoDTO.


        :param sub_status: The sub_status of this ReportInfoDTO.
        :type sub_status: ReportSubStatusType
        """

        self._sub_status = sub_status

    @property
    def generation_requested_at(self) -> datetime:
        """Gets the generation_requested_at of this ReportInfoDTO.

        Дата и время запроса на генерацию.  # noqa: E501

        :return: The generation_requested_at of this ReportInfoDTO.
        :rtype: datetime
        """
        return self._generation_requested_at

    @generation_requested_at.setter
    def generation_requested_at(self, generation_requested_at: datetime):
        """Sets the generation_requested_at of this ReportInfoDTO.

        Дата и время запроса на генерацию.  # noqa: E501

        :param generation_requested_at: The generation_requested_at of this ReportInfoDTO.
        :type generation_requested_at: datetime
        """
        if generation_requested_at is None:
            raise ValueError("Invalid value for `generation_requested_at`, must not be `None`")  # noqa: E501

        self._generation_requested_at = generation_requested_at

    @property
    def generation_finished_at(self) -> datetime:
        """Gets the generation_finished_at of this ReportInfoDTO.

        Дата и время завершения генерации.  # noqa: E501

        :return: The generation_finished_at of this ReportInfoDTO.
        :rtype: datetime
        """
        return self._generation_finished_at

    @generation_finished_at.setter
    def generation_finished_at(self, generation_finished_at: datetime):
        """Sets the generation_finished_at of this ReportInfoDTO.

        Дата и время завершения генерации.  # noqa: E501

        :param generation_finished_at: The generation_finished_at of this ReportInfoDTO.
        :type generation_finished_at: datetime
        """

        self._generation_finished_at = generation_finished_at

    @property
    def file(self) -> str:
        """Gets the file of this ReportInfoDTO.

        Ссылка на готовый отчет.  # noqa: E501

        :return: The file of this ReportInfoDTO.
        :rtype: str
        """
        return self._file

    @file.setter
    def file(self, file: str):
        """Sets the file of this ReportInfoDTO.

        Ссылка на готовый отчет.  # noqa: E501

        :param file: The file of this ReportInfoDTO.
        :type file: str
        """

        self._file = file

    @property
    def estimated_generation_time(self) -> int:
        """Gets the estimated_generation_time of this ReportInfoDTO.

        Ожидаемая продолжительность генерации в миллисекундах.  # noqa: E501

        :return: The estimated_generation_time of this ReportInfoDTO.
        :rtype: int
        """
        return self._estimated_generation_time

    @estimated_generation_time.setter
    def estimated_generation_time(self, estimated_generation_time: int):
        """Sets the estimated_generation_time of this ReportInfoDTO.

        Ожидаемая продолжительность генерации в миллисекундах.  # noqa: E501

        :param estimated_generation_time: The estimated_generation_time of this ReportInfoDTO.
        :type estimated_generation_time: int
        """

        self._estimated_generation_time = estimated_generation_time
