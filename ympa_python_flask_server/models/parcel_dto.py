from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server.models.parcel_box_dto import ParcelBoxDTO
from ympa_python_flask_server import util

from ympa_python_flask_server.models.parcel_box_dto import ParcelBoxDTO  # noqa: E501

class ParcelDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, boxes=None):  # noqa: E501
        """ParcelDTO - a model defined in OpenAPI

        :param boxes: The boxes of this ParcelDTO.  # noqa: E501
        :type boxes: List[ParcelBoxDTO]
        """
        self.openapi_types = {
            'boxes': List[ParcelBoxDTO]
        }

        self.attribute_map = {
            'boxes': 'boxes'
        }

        self._boxes = boxes

    @classmethod
    def from_dict(cls, dikt) -> 'ParcelDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ParcelDTO of this ParcelDTO.  # noqa: E501
        :rtype: ParcelDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def boxes(self) -> List[ParcelBoxDTO]:
        """Gets the boxes of this ParcelDTO.

        Список грузовых мест. Маркет определяет количество мест по длине этого списка.  # noqa: E501

        :return: The boxes of this ParcelDTO.
        :rtype: List[ParcelBoxDTO]
        """
        return self._boxes

    @boxes.setter
    def boxes(self, boxes: List[ParcelBoxDTO]):
        """Sets the boxes of this ParcelDTO.

        Список грузовых мест. Маркет определяет количество мест по длине этого списка.  # noqa: E501

        :param boxes: The boxes of this ParcelDTO.
        :type boxes: List[ParcelBoxDTO]
        """
        if boxes is None:
            raise ValueError("Invalid value for `boxes`, must not be `None`")  # noqa: E501
        if boxes is not None and len(boxes) < 1:
            raise ValueError("Invalid value for `boxes`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._boxes = boxes
