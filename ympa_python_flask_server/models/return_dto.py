from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server.models.logistic_pickup_point_dto import LogisticPickupPointDTO
from ympa_python_flask_server.models.recipient_type import RecipientType
from ympa_python_flask_server.models.refund_status_type import RefundStatusType
from ympa_python_flask_server.models.return_item_dto import ReturnItemDTO
from ympa_python_flask_server.models.return_shipment_status_type import ReturnShipmentStatusType
from ympa_python_flask_server.models.return_type import ReturnType
from ympa_python_flask_server import util

from ympa_python_flask_server.models.logistic_pickup_point_dto import LogisticPickupPointDTO  # noqa: E501
from ympa_python_flask_server.models.recipient_type import RecipientType  # noqa: E501
from ympa_python_flask_server.models.refund_status_type import RefundStatusType  # noqa: E501
from ympa_python_flask_server.models.return_item_dto import ReturnItemDTO  # noqa: E501
from ympa_python_flask_server.models.return_shipment_status_type import ReturnShipmentStatusType  # noqa: E501
from ympa_python_flask_server.models.return_type import ReturnType  # noqa: E501

class ReturnDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, order_id=None, creation_date=None, update_date=None, refund_status=None, logistic_pickup_point=None, shipment_recipient_type=None, shipment_status=None, refund_amount=None, items=None, return_type=None, fast_return=None):  # noqa: E501
        """ReturnDTO - a model defined in OpenAPI

        :param id: The id of this ReturnDTO.  # noqa: E501
        :type id: int
        :param order_id: The order_id of this ReturnDTO.  # noqa: E501
        :type order_id: int
        :param creation_date: The creation_date of this ReturnDTO.  # noqa: E501
        :type creation_date: datetime
        :param update_date: The update_date of this ReturnDTO.  # noqa: E501
        :type update_date: datetime
        :param refund_status: The refund_status of this ReturnDTO.  # noqa: E501
        :type refund_status: RefundStatusType
        :param logistic_pickup_point: The logistic_pickup_point of this ReturnDTO.  # noqa: E501
        :type logistic_pickup_point: LogisticPickupPointDTO
        :param shipment_recipient_type: The shipment_recipient_type of this ReturnDTO.  # noqa: E501
        :type shipment_recipient_type: RecipientType
        :param shipment_status: The shipment_status of this ReturnDTO.  # noqa: E501
        :type shipment_status: ReturnShipmentStatusType
        :param refund_amount: The refund_amount of this ReturnDTO.  # noqa: E501
        :type refund_amount: int
        :param items: The items of this ReturnDTO.  # noqa: E501
        :type items: List[ReturnItemDTO]
        :param return_type: The return_type of this ReturnDTO.  # noqa: E501
        :type return_type: ReturnType
        :param fast_return: The fast_return of this ReturnDTO.  # noqa: E501
        :type fast_return: bool
        """
        self.openapi_types = {
            'id': int,
            'order_id': int,
            'creation_date': datetime,
            'update_date': datetime,
            'refund_status': RefundStatusType,
            'logistic_pickup_point': LogisticPickupPointDTO,
            'shipment_recipient_type': RecipientType,
            'shipment_status': ReturnShipmentStatusType,
            'refund_amount': int,
            'items': List[ReturnItemDTO],
            'return_type': ReturnType,
            'fast_return': bool
        }

        self.attribute_map = {
            'id': 'id',
            'order_id': 'orderId',
            'creation_date': 'creationDate',
            'update_date': 'updateDate',
            'refund_status': 'refundStatus',
            'logistic_pickup_point': 'logisticPickupPoint',
            'shipment_recipient_type': 'shipmentRecipientType',
            'shipment_status': 'shipmentStatus',
            'refund_amount': 'refundAmount',
            'items': 'items',
            'return_type': 'returnType',
            'fast_return': 'fastReturn'
        }

        self._id = id
        self._order_id = order_id
        self._creation_date = creation_date
        self._update_date = update_date
        self._refund_status = refund_status
        self._logistic_pickup_point = logistic_pickup_point
        self._shipment_recipient_type = shipment_recipient_type
        self._shipment_status = shipment_status
        self._refund_amount = refund_amount
        self._items = items
        self._return_type = return_type
        self._fast_return = fast_return

    @classmethod
    def from_dict(cls, dikt) -> 'ReturnDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ReturnDTO of this ReturnDTO.  # noqa: E501
        :rtype: ReturnDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this ReturnDTO.

        Идентификатор возврата.  # noqa: E501

        :return: The id of this ReturnDTO.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this ReturnDTO.

        Идентификатор возврата.  # noqa: E501

        :param id: The id of this ReturnDTO.
        :type id: int
        """

        self._id = id

    @property
    def order_id(self) -> int:
        """Gets the order_id of this ReturnDTO.

        Номер заказа.  # noqa: E501

        :return: The order_id of this ReturnDTO.
        :rtype: int
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id: int):
        """Sets the order_id of this ReturnDTO.

        Номер заказа.  # noqa: E501

        :param order_id: The order_id of this ReturnDTO.
        :type order_id: int
        """

        self._order_id = order_id

    @property
    def creation_date(self) -> datetime:
        """Gets the creation_date of this ReturnDTO.

        Дата создания возврата клиентом.  # noqa: E501

        :return: The creation_date of this ReturnDTO.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date: datetime):
        """Sets the creation_date of this ReturnDTO.

        Дата создания возврата клиентом.  # noqa: E501

        :param creation_date: The creation_date of this ReturnDTO.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def update_date(self) -> datetime:
        """Gets the update_date of this ReturnDTO.

        Дата обновления возврата.  # noqa: E501

        :return: The update_date of this ReturnDTO.
        :rtype: datetime
        """
        return self._update_date

    @update_date.setter
    def update_date(self, update_date: datetime):
        """Sets the update_date of this ReturnDTO.

        Дата обновления возврата.  # noqa: E501

        :param update_date: The update_date of this ReturnDTO.
        :type update_date: datetime
        """

        self._update_date = update_date

    @property
    def refund_status(self) -> RefundStatusType:
        """Gets the refund_status of this ReturnDTO.


        :return: The refund_status of this ReturnDTO.
        :rtype: RefundStatusType
        """
        return self._refund_status

    @refund_status.setter
    def refund_status(self, refund_status: RefundStatusType):
        """Sets the refund_status of this ReturnDTO.


        :param refund_status: The refund_status of this ReturnDTO.
        :type refund_status: RefundStatusType
        """

        self._refund_status = refund_status

    @property
    def logistic_pickup_point(self) -> LogisticPickupPointDTO:
        """Gets the logistic_pickup_point of this ReturnDTO.


        :return: The logistic_pickup_point of this ReturnDTO.
        :rtype: LogisticPickupPointDTO
        """
        return self._logistic_pickup_point

    @logistic_pickup_point.setter
    def logistic_pickup_point(self, logistic_pickup_point: LogisticPickupPointDTO):
        """Sets the logistic_pickup_point of this ReturnDTO.


        :param logistic_pickup_point: The logistic_pickup_point of this ReturnDTO.
        :type logistic_pickup_point: LogisticPickupPointDTO
        """

        self._logistic_pickup_point = logistic_pickup_point

    @property
    def shipment_recipient_type(self) -> RecipientType:
        """Gets the shipment_recipient_type of this ReturnDTO.


        :return: The shipment_recipient_type of this ReturnDTO.
        :rtype: RecipientType
        """
        return self._shipment_recipient_type

    @shipment_recipient_type.setter
    def shipment_recipient_type(self, shipment_recipient_type: RecipientType):
        """Sets the shipment_recipient_type of this ReturnDTO.


        :param shipment_recipient_type: The shipment_recipient_type of this ReturnDTO.
        :type shipment_recipient_type: RecipientType
        """

        self._shipment_recipient_type = shipment_recipient_type

    @property
    def shipment_status(self) -> ReturnShipmentStatusType:
        """Gets the shipment_status of this ReturnDTO.


        :return: The shipment_status of this ReturnDTO.
        :rtype: ReturnShipmentStatusType
        """
        return self._shipment_status

    @shipment_status.setter
    def shipment_status(self, shipment_status: ReturnShipmentStatusType):
        """Sets the shipment_status of this ReturnDTO.


        :param shipment_status: The shipment_status of this ReturnDTO.
        :type shipment_status: ReturnShipmentStatusType
        """

        self._shipment_status = shipment_status

    @property
    def refund_amount(self) -> int:
        """Gets the refund_amount of this ReturnDTO.

        Сумма возврата.  # noqa: E501

        :return: The refund_amount of this ReturnDTO.
        :rtype: int
        """
        return self._refund_amount

    @refund_amount.setter
    def refund_amount(self, refund_amount: int):
        """Sets the refund_amount of this ReturnDTO.

        Сумма возврата.  # noqa: E501

        :param refund_amount: The refund_amount of this ReturnDTO.
        :type refund_amount: int
        """

        self._refund_amount = refund_amount

    @property
    def items(self) -> List[ReturnItemDTO]:
        """Gets the items of this ReturnDTO.

        Список товаров в возврате.  # noqa: E501

        :return: The items of this ReturnDTO.
        :rtype: List[ReturnItemDTO]
        """
        return self._items

    @items.setter
    def items(self, items: List[ReturnItemDTO]):
        """Sets the items of this ReturnDTO.

        Список товаров в возврате.  # noqa: E501

        :param items: The items of this ReturnDTO.
        :type items: List[ReturnItemDTO]
        """
        if items is None:
            raise ValueError("Invalid value for `items`, must not be `None`")  # noqa: E501

        self._items = items

    @property
    def return_type(self) -> ReturnType:
        """Gets the return_type of this ReturnDTO.


        :return: The return_type of this ReturnDTO.
        :rtype: ReturnType
        """
        return self._return_type

    @return_type.setter
    def return_type(self, return_type: ReturnType):
        """Sets the return_type of this ReturnDTO.


        :param return_type: The return_type of this ReturnDTO.
        :type return_type: ReturnType
        """

        self._return_type = return_type

    @property
    def fast_return(self) -> bool:
        """Gets the fast_return of this ReturnDTO.

        Используется ли опция **Быстрый возврат денег за дешевый брак**.   # noqa: E501

        :return: The fast_return of this ReturnDTO.
        :rtype: bool
        """
        return self._fast_return

    @fast_return.setter
    def fast_return(self, fast_return: bool):
        """Sets the fast_return of this ReturnDTO.

        Используется ли опция **Быстрый возврат денег за дешевый брак**.   # noqa: E501

        :param fast_return: The fast_return of this ReturnDTO.
        :type fast_return: bool
        """

        self._fast_return = fast_return
