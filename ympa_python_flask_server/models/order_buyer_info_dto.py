from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ympa_python_flask_server.models.base_model import Model
from ympa_python_flask_server.models.order_buyer_type import OrderBuyerType
from ympa_python_flask_server import util

from ympa_python_flask_server.models.order_buyer_type import OrderBuyerType  # noqa: E501

class OrderBuyerInfoDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, last_name=None, first_name=None, middle_name=None, type=None, phone=None):  # noqa: E501
        """OrderBuyerInfoDTO - a model defined in OpenAPI

        :param id: The id of this OrderBuyerInfoDTO.  # noqa: E501
        :type id: str
        :param last_name: The last_name of this OrderBuyerInfoDTO.  # noqa: E501
        :type last_name: str
        :param first_name: The first_name of this OrderBuyerInfoDTO.  # noqa: E501
        :type first_name: str
        :param middle_name: The middle_name of this OrderBuyerInfoDTO.  # noqa: E501
        :type middle_name: str
        :param type: The type of this OrderBuyerInfoDTO.  # noqa: E501
        :type type: OrderBuyerType
        :param phone: The phone of this OrderBuyerInfoDTO.  # noqa: E501
        :type phone: str
        """
        self.openapi_types = {
            'id': str,
            'last_name': str,
            'first_name': str,
            'middle_name': str,
            'type': OrderBuyerType,
            'phone': str
        }

        self.attribute_map = {
            'id': 'id',
            'last_name': 'lastName',
            'first_name': 'firstName',
            'middle_name': 'middleName',
            'type': 'type',
            'phone': 'phone'
        }

        self._id = id
        self._last_name = last_name
        self._first_name = first_name
        self._middle_name = middle_name
        self._type = type
        self._phone = phone

    @classmethod
    def from_dict(cls, dikt) -> 'OrderBuyerInfoDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OrderBuyerInfoDTO of this OrderBuyerInfoDTO.  # noqa: E501
        :rtype: OrderBuyerInfoDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this OrderBuyerInfoDTO.

        Идентификатор покупателя.  # noqa: E501

        :return: The id of this OrderBuyerInfoDTO.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this OrderBuyerInfoDTO.

        Идентификатор покупателя.  # noqa: E501

        :param id: The id of this OrderBuyerInfoDTO.
        :type id: str
        """

        self._id = id

    @property
    def last_name(self) -> str:
        """Gets the last_name of this OrderBuyerInfoDTO.

        Фамилия покупателя.  # noqa: E501

        :return: The last_name of this OrderBuyerInfoDTO.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name: str):
        """Sets the last_name of this OrderBuyerInfoDTO.

        Фамилия покупателя.  # noqa: E501

        :param last_name: The last_name of this OrderBuyerInfoDTO.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def first_name(self) -> str:
        """Gets the first_name of this OrderBuyerInfoDTO.

        Имя покупателя.  # noqa: E501

        :return: The first_name of this OrderBuyerInfoDTO.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name: str):
        """Sets the first_name of this OrderBuyerInfoDTO.

        Имя покупателя.  # noqa: E501

        :param first_name: The first_name of this OrderBuyerInfoDTO.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def middle_name(self) -> str:
        """Gets the middle_name of this OrderBuyerInfoDTO.

        Отчество покупателя.  # noqa: E501

        :return: The middle_name of this OrderBuyerInfoDTO.
        :rtype: str
        """
        return self._middle_name

    @middle_name.setter
    def middle_name(self, middle_name: str):
        """Sets the middle_name of this OrderBuyerInfoDTO.

        Отчество покупателя.  # noqa: E501

        :param middle_name: The middle_name of this OrderBuyerInfoDTO.
        :type middle_name: str
        """

        self._middle_name = middle_name

    @property
    def type(self) -> OrderBuyerType:
        """Gets the type of this OrderBuyerInfoDTO.


        :return: The type of this OrderBuyerInfoDTO.
        :rtype: OrderBuyerType
        """
        return self._type

    @type.setter
    def type(self, type: OrderBuyerType):
        """Sets the type of this OrderBuyerInfoDTO.


        :param type: The type of this OrderBuyerInfoDTO.
        :type type: OrderBuyerType
        """

        self._type = type

    @property
    def phone(self) -> str:
        """Gets the phone of this OrderBuyerInfoDTO.

        Подменный номер телефона покупателя. Подробнее о таких номерах читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/orders/dbs/call#fake-number).  Формат номера: `+<код_страны><код_региона><номер_телефона>`.   # noqa: E501

        :return: The phone of this OrderBuyerInfoDTO.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone: str):
        """Sets the phone of this OrderBuyerInfoDTO.

        Подменный номер телефона покупателя. Подробнее о таких номерах читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/orders/dbs/call#fake-number).  Формат номера: `+<код_страны><код_региона><номер_телефона>`.   # noqa: E501

        :param phone: The phone of this OrderBuyerInfoDTO.
        :type phone: str
        """

        self._phone = phone
