/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

#include "OrderDeliveryApiImpl.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

OrderDeliveryApiImpl::OrderDeliveryApiImpl(const std::shared_ptr<Pistache::Rest::Router>& rtr)
    : OrderDeliveryApi(rtr)
{
}

void OrderDeliveryApiImpl::get_order_buyer_info(const int64_t &campaignId, const int64_t &orderId, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void OrderDeliveryApiImpl::set_order_delivery_date(const int64_t &campaignId, const int64_t &orderId, const SetOrderDeliveryDateRequest &setOrderDeliveryDateRequest, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void OrderDeliveryApiImpl::set_order_delivery_track_code(const int64_t &campaignId, const int64_t &orderId, const SetOrderDeliveryTrackCodeRequest &setOrderDeliveryTrackCodeRequest, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void OrderDeliveryApiImpl::update_order_storage_limit(const int64_t &campaignId, const int64_t &orderId, const UpdateOrderStorageLimitRequest &updateOrderStorageLimitRequest, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void OrderDeliveryApiImpl::verify_order_eac(const int64_t &campaignId, const int64_t &orderId, const VerifyOrderEacRequest &verifyOrderEacRequest, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

}
}
}
}

