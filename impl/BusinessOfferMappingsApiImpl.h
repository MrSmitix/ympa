/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

/*
* BusinessOfferMappingsApiImpl.h
*
* 
*/

#ifndef BUSINESS_OFFER_MAPPINGS_API_IMPL_H_
#define BUSINESS_OFFER_MAPPINGS_API_IMPL_H_


#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <memory>
#include <optional>

#include <BusinessOfferMappingsApi.h>


#include "AddOffersToArchiveRequest.h"
#include "AddOffersToArchiveResponse.h"
#include "ApiClientDataErrorResponse.h"
#include "ApiForbiddenErrorResponse.h"
#include "ApiLimitErrorResponse.h"
#include "ApiLockedErrorResponse.h"
#include "ApiNotFoundErrorResponse.h"
#include "ApiServerErrorResponse.h"
#include "ApiUnauthorizedErrorResponse.h"
#include "DeleteOffersFromArchiveRequest.h"
#include "DeleteOffersFromArchiveResponse.h"
#include "DeleteOffersRequest.h"
#include "DeleteOffersResponse.h"
#include "GetOfferMappingsRequest.h"
#include "GetOfferMappingsResponse.h"
#include "GetSuggestedOfferMappingsRequest.h"
#include "GetSuggestedOfferMappingsResponse.h"
#include "UpdateOfferMappingsRequest.h"
#include "UpdateOfferMappingsResponse.h"
#include <string>

namespace org::openapitools::server::api
{

using namespace org::openapitools::server::model;

class  BusinessOfferMappingsApiImpl : public org::openapitools::server::api::BusinessOfferMappingsApi {
public:
    explicit BusinessOfferMappingsApiImpl(const std::shared_ptr<Pistache::Rest::Router>& rtr);
    ~BusinessOfferMappingsApiImpl() override = default;

    void add_offers_to_archive(const int64_t &businessId, const AddOffersToArchiveRequest &addOffersToArchiveRequest, Pistache::Http::ResponseWriter &response);
    void delete_offers(const int64_t &businessId, const DeleteOffersRequest &deleteOffersRequest, Pistache::Http::ResponseWriter &response);
    void delete_offers_from_archive(const int64_t &businessId, const DeleteOffersFromArchiveRequest &deleteOffersFromArchiveRequest, Pistache::Http::ResponseWriter &response);
    void get_offer_mappings(const int64_t &businessId, const std::optional<std::string> &pageToken, const std::optional<int32_t> &limit, const GetOfferMappingsRequest &getOfferMappingsRequest, Pistache::Http::ResponseWriter &response);
    void get_suggested_offer_mappings(const int64_t &businessId, const GetSuggestedOfferMappingsRequest &getSuggestedOfferMappingsRequest, Pistache::Http::ResponseWriter &response);
    void update_offer_mappings(const int64_t &businessId, const UpdateOfferMappingsRequest &updateOfferMappingsRequest, Pistache::Http::ResponseWriter &response);

};

} // namespace org::openapitools::server::api



#endif
