/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

/*
* OrderDeliveryApiImpl.h
*
* 
*/

#ifndef ORDER_DELIVERY_API_IMPL_H_
#define ORDER_DELIVERY_API_IMPL_H_


#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <memory>
#include <optional>

#include <OrderDeliveryApi.h>


#include "ApiClientDataErrorResponse.h"
#include "ApiForbiddenErrorResponse.h"
#include "ApiLimitErrorResponse.h"
#include "ApiNotFoundErrorResponse.h"
#include "ApiServerErrorResponse.h"
#include "ApiUnauthorizedErrorResponse.h"
#include "EmptyApiResponse.h"
#include "GetOrderBuyerInfoResponse.h"
#include "SetOrderDeliveryDateRequest.h"
#include "SetOrderDeliveryTrackCodeRequest.h"
#include "UpdateOrderStorageLimitRequest.h"
#include "VerifyOrderEacRequest.h"
#include "VerifyOrderEacResponse.h"

namespace org::openapitools::server::api
{

using namespace org::openapitools::server::model;

class  OrderDeliveryApiImpl : public org::openapitools::server::api::OrderDeliveryApi {
public:
    explicit OrderDeliveryApiImpl(const std::shared_ptr<Pistache::Rest::Router>& rtr);
    ~OrderDeliveryApiImpl() override = default;

    void get_order_buyer_info(const int64_t &campaignId, const int64_t &orderId, Pistache::Http::ResponseWriter &response);
    void set_order_delivery_date(const int64_t &campaignId, const int64_t &orderId, const SetOrderDeliveryDateRequest &setOrderDeliveryDateRequest, Pistache::Http::ResponseWriter &response);
    void set_order_delivery_track_code(const int64_t &campaignId, const int64_t &orderId, const SetOrderDeliveryTrackCodeRequest &setOrderDeliveryTrackCodeRequest, Pistache::Http::ResponseWriter &response);
    void update_order_storage_limit(const int64_t &campaignId, const int64_t &orderId, const UpdateOrderStorageLimitRequest &updateOrderStorageLimitRequest, Pistache::Http::ResponseWriter &response);
    void verify_order_eac(const int64_t &campaignId, const int64_t &orderId, const VerifyOrderEacRequest &verifyOrderEacRequest, Pistache::Http::ResponseWriter &response);

};

} // namespace org::openapitools::server::api



#endif
