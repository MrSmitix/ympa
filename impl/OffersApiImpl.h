/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

/*
* OffersApiImpl.h
*
* 
*/

#ifndef OFFERS_API_IMPL_H_
#define OFFERS_API_IMPL_H_


#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <memory>
#include <optional>

#include <OffersApi.h>


#include "ApiClientDataErrorResponse.h"
#include "ApiForbiddenErrorResponse.h"
#include "ApiLimitErrorResponse.h"
#include "ApiLockedErrorResponse.h"
#include "ApiNotFoundErrorResponse.h"
#include "ApiServerErrorResponse.h"
#include "ApiUnauthorizedErrorResponse.h"
#include "CurrencyType.h"
#include "DeleteCampaignOffersRequest.h"
#include "DeleteCampaignOffersResponse.h"
#include "EmptyApiResponse.h"
#include "GetAllOffersResponse.h"
#include "GetCampaignOffersRequest.h"
#include "GetCampaignOffersResponse.h"
#include "GetOfferRecommendationsRequest.h"
#include "GetOfferRecommendationsResponse.h"
#include "GetOffersResponse.h"
#include "UpdateCampaignOffersRequest.h"
#include <string>

namespace org::openapitools::server::api
{

using namespace org::openapitools::server::model;

class  OffersApiImpl : public org::openapitools::server::api::OffersApi {
public:
    explicit OffersApiImpl(const std::shared_ptr<Pistache::Rest::Router>& rtr);
    ~OffersApiImpl() override = default;

    void delete_campaign_offers(const int64_t &campaignId, const DeleteCampaignOffersRequest &deleteCampaignOffersRequest, Pistache::Http::ResponseWriter &response);
    void get_all_offers(const int64_t &campaignId, const std::optional<int64_t> &feedId, const std::optional<int32_t> &chunk, Pistache::Http::ResponseWriter &response);
    void get_campaign_offers(const int64_t &campaignId, const GetCampaignOffersRequest &getCampaignOffersRequest, const std::optional<std::string> &pageToken, const std::optional<int32_t> &limit, Pistache::Http::ResponseWriter &response);
    void get_offer_recommendations(const int64_t &businessId, const GetOfferRecommendationsRequest &getOfferRecommendationsRequest, const std::optional<std::string> &pageToken, const std::optional<int32_t> &limit, Pistache::Http::ResponseWriter &response);
    void get_offers(const int64_t &campaignId, const std::optional<std::string> &query, const std::optional<int64_t> &feedId, const std::optional<std::string> &shopCategoryId, const std::optional<org::openapitools::server::model::CurrencyType> &currency, const std::optional<bool> &matched, const std::optional<int32_t> &page, const std::optional<int32_t> &pageSize, Pistache::Http::ResponseWriter &response);
    void update_campaign_offers(const int64_t &campaignId, const UpdateCampaignOffersRequest &updateCampaignOffersRequest, Pistache::Http::ResponseWriter &response);

};

} // namespace org::openapitools::server::api



#endif
