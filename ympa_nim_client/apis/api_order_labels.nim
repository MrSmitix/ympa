#
# Партнерский API Маркета
# 
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# The version of the OpenAPI document: LATEST
# 
# Generated by: https://openapi-generator.tech
#

import httpclient
import json
import logging
import marshal
import options
import strformat
import strutils
import tables
import typetraits
import uri

import ../models/model_api_client_data_error_response
import ../models/model_api_forbidden_error_response
import ../models/model_api_limit_error_response
import ../models/model_api_not_found_error_response
import ../models/model_api_server_error_response
import ../models/model_api_unauthorized_error_response
import ../models/model_get_order_labels_data_response
import ../models/model_page_format_type

const basepath = "https://api.partner.market.yandex.ru"

template constructResult[T](response: Response): untyped =
  if response.code in {Http200, Http201, Http202, Http204, Http206}:
    try:
      when name(stripGenericParams(T.typedesc).typedesc) == name(Table):
        (some(json.to(parseJson(response.body), T.typedesc)), response)
      else:
        (some(marshal.to[T](response.body)), response)
    except JsonParsingError:
      # The server returned a malformed response though the response code is 2XX
      # TODO: need better error handling
      error("JsonParsingError")
      (none(T.typedesc), response)
  else:
    (none(T.typedesc), response)


proc generateOrderLabel*(httpClient: HttpClient, campaignId: int64, orderId: int64, shipmentId: int64, boxId: int64, format: PageFormatType): (Option[string], Response) =
  ## Готовый ярлык‑наклейка для коробки в заказе
  let query_for_api_call = encodeQuery([
    ("format", $format), # Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.
  ])

  let response = httpClient.get(basepath & fmt"/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label" & "?" & query_for_api_call)
  constructResult[string](response)


proc generateOrderLabels*(httpClient: HttpClient, campaignId: int64, orderId: int64, format: PageFormatType): (Option[string], Response) =
  ## Готовые ярлыки‑наклейки на все коробки в одном заказе
  let query_for_api_call = encodeQuery([
    ("format", $format), # Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.
  ])

  let response = httpClient.get(basepath & fmt"/campaigns/{campaignId}/orders/{orderId}/delivery/labels" & "?" & query_for_api_call)
  constructResult[string](response)


proc getOrderLabelsData*(httpClient: HttpClient, campaignId: int64, orderId: int64): (Option[GetOrderLabelsDataResponse], Response) =
  ## Данные для самостоятельного изготовления ярлыков

  let response = httpClient.get(basepath & fmt"/campaigns/{campaignId}/orders/{orderId}/delivery/labels/data")
  constructResult[GetOrderLabelsDataResponse](response)

