#
# Партнерский API Маркета
# 
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# The version of the OpenAPI document: LATEST
# 
# Generated by: https://openapi-generator.tech
#

import httpclient
import json
import logging
import marshal
import options
import strformat
import strutils
import tables
import typetraits
import uri

import ../models/model_api_client_data_error_response
import ../models/model_api_forbidden_error_response
import ../models/model_api_limit_error_response
import ../models/model_api_not_found_error_response
import ../models/model_api_server_error_response
import ../models/model_api_unauthorized_error_response
import ../models/model_get_campaign_logins_response
import ../models/model_get_campaign_region_response
import ../models/model_get_campaign_response
import ../models/model_get_campaign_settings_response
import ../models/model_get_campaigns_response

const basepath = "https://api.partner.market.yandex.ru"

template constructResult[T](response: Response): untyped =
  if response.code in {Http200, Http201, Http202, Http204, Http206}:
    try:
      when name(stripGenericParams(T.typedesc).typedesc) == name(Table):
        (some(json.to(parseJson(response.body), T.typedesc)), response)
      else:
        (some(marshal.to[T](response.body)), response)
    except JsonParsingError:
      # The server returned a malformed response though the response code is 2XX
      # TODO: need better error handling
      error("JsonParsingError")
      (none(T.typedesc), response)
  else:
    (none(T.typedesc), response)


proc getCampaign*(httpClient: HttpClient, campaignId: int64): (Option[GetCampaignResponse], Response) =
  ## Информация о магазине

  let response = httpClient.get(basepath & fmt"/campaigns/{campaignId}")
  constructResult[GetCampaignResponse](response)


proc getCampaignLogins*(httpClient: HttpClient, campaignId: int64): (Option[GetCampaignLoginsResponse], Response) =
  ## Логины, связанные с магазином

  let response = httpClient.get(basepath & fmt"/campaigns/{campaignId}/logins")
  constructResult[GetCampaignLoginsResponse](response)


proc getCampaignRegion*(httpClient: HttpClient, campaignId: int64): (Option[GetCampaignRegionResponse], Response) {.deprecated.} =
  ## Регион магазина

  let response = httpClient.get(basepath & fmt"/campaigns/{campaignId}/region")
  constructResult[GetCampaignRegionResponse](response)


proc getCampaignSettings*(httpClient: HttpClient, campaignId: int64): (Option[GetCampaignSettingsResponse], Response) =
  ## Настройки магазина

  let response = httpClient.get(basepath & fmt"/campaigns/{campaignId}/settings")
  constructResult[GetCampaignSettingsResponse](response)


proc getCampaigns*(httpClient: HttpClient, page: int, pageSize: int): (Option[GetCampaignsResponse], Response) =
  ## Список магазинов пользователя
  let query_for_api_call = encodeQuery([
    ("page", $page), # Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
    ("pageSize", $pageSize), # Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
  ])

  let response = httpClient.get(basepath & "/campaigns" & "?" & query_for_api_call)
  constructResult[GetCampaignsResponse](response)


proc getCampaignsByLogin*(httpClient: HttpClient, login: string, page: int, pageSize: int): (Option[GetCampaignsResponse], Response) =
  ## Магазины, доступные логину
  let query_for_api_call = encodeQuery([
    ("page", $page), # Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
    ("pageSize", $pageSize), # Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
  ])

  let response = httpClient.get(basepath & fmt"/campaigns/by_login/{login}" & "?" & query_for_api_call)
  constructResult[GetCampaignsResponse](response)

