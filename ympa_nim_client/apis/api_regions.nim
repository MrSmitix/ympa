#
# Партнерский API Маркета
# 
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# The version of the OpenAPI document: LATEST
# 
# Generated by: https://openapi-generator.tech
#

import httpclient
import json
import logging
import marshal
import options
import strformat
import strutils
import tables
import typetraits
import uri

import ../models/model_api_client_data_error_response
import ../models/model_api_forbidden_error_response
import ../models/model_api_limit_error_response
import ../models/model_api_not_found_error_response
import ../models/model_api_server_error_response
import ../models/model_api_unauthorized_error_response
import ../models/model_get_region_with_children_response
import ../models/model_get_regions_response

const basepath = "https://api.partner.market.yandex.ru"

template constructResult[T](response: Response): untyped =
  if response.code in {Http200, Http201, Http202, Http204, Http206}:
    try:
      when name(stripGenericParams(T.typedesc).typedesc) == name(Table):
        (some(json.to(parseJson(response.body), T.typedesc)), response)
      else:
        (some(marshal.to[T](response.body)), response)
    except JsonParsingError:
      # The server returned a malformed response though the response code is 2XX
      # TODO: need better error handling
      error("JsonParsingError")
      (none(T.typedesc), response)
  else:
    (none(T.typedesc), response)


proc searchRegionChildren*(httpClient: HttpClient, regionId: int64, page: int, pageSize: int): (Option[GetRegionWithChildrenResponse], Response) =
  ## Информация о дочерних регионах
  let query_for_api_call = encodeQuery([
    ("page", $page), # Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
    ("pageSize", $pageSize), # Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
  ])

  let response = httpClient.get(basepath & fmt"/regions/{regionId}/children" & "?" & query_for_api_call)
  constructResult[GetRegionWithChildrenResponse](response)


proc searchRegionsById*(httpClient: HttpClient, regionId: int64): (Option[GetRegionsResponse], Response) =
  ## Информация о регионе

  let response = httpClient.get(basepath & fmt"/regions/{regionId}")
  constructResult[GetRegionsResponse](response)


proc searchRegionsByName*(httpClient: HttpClient, name: string, pageToken: string, limit: int): (Option[GetRegionsResponse], Response) =
  ## Поиск регионов по их имени
  let query_for_api_call = encodeQuery([
    ("name", $name), # Название региона.  Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, `Москва`. 
    ("page_token", $pageToken), # Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
    ("limit", $limit), # Количество значений на одной странице. 
  ])

  let response = httpClient.get(basepath & "/regions" & "?" & query_for_api_call)
  constructResult[GetRegionsResponse](response)

