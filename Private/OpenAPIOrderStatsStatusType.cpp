/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIOrderStatsStatusType.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

inline FString ToString(const OpenAPIOrderStatsStatusType::Values& Value)
{
	switch (Value)
	{
	case OpenAPIOrderStatsStatusType::Values::CancelledBeforeProcessing:
		return TEXT("CANCELLED_BEFORE_PROCESSING");
	case OpenAPIOrderStatsStatusType::Values::CancelledInDelivery:
		return TEXT("CANCELLED_IN_DELIVERY");
	case OpenAPIOrderStatsStatusType::Values::CancelledInProcessing:
		return TEXT("CANCELLED_IN_PROCESSING");
	case OpenAPIOrderStatsStatusType::Values::Delivery:
		return TEXT("DELIVERY");
	case OpenAPIOrderStatsStatusType::Values::Delivered:
		return TEXT("DELIVERED");
	case OpenAPIOrderStatsStatusType::Values::PartiallyDelivered:
		return TEXT("PARTIALLY_DELIVERED");
	case OpenAPIOrderStatsStatusType::Values::PartiallyReturned:
		return TEXT("PARTIALLY_RETURNED");
	case OpenAPIOrderStatsStatusType::Values::Pending:
		return TEXT("PENDING");
	case OpenAPIOrderStatsStatusType::Values::Pickup:
		return TEXT("PICKUP");
	case OpenAPIOrderStatsStatusType::Values::Processing:
		return TEXT("PROCESSING");
	case OpenAPIOrderStatsStatusType::Values::Reserved:
		return TEXT("RESERVED");
	case OpenAPIOrderStatsStatusType::Values::Returned:
		return TEXT("RETURNED");
	case OpenAPIOrderStatsStatusType::Values::Unknown:
		return TEXT("UNKNOWN");
	case OpenAPIOrderStatsStatusType::Values::Unpaid:
		return TEXT("UNPAID");
	case OpenAPIOrderStatsStatusType::Values::Lost:
		return TEXT("LOST");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIOrderStatsStatusType::Values Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIOrderStatsStatusType::EnumToString(const OpenAPIOrderStatsStatusType::Values& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIOrderStatsStatusType::Values& Value)
{
	static TMap<FString, OpenAPIOrderStatsStatusType::Values> StringToEnum = { 
		{ TEXT("CANCELLED_BEFORE_PROCESSING"), OpenAPIOrderStatsStatusType::Values::CancelledBeforeProcessing },
		{ TEXT("CANCELLED_IN_DELIVERY"), OpenAPIOrderStatsStatusType::Values::CancelledInDelivery },
		{ TEXT("CANCELLED_IN_PROCESSING"), OpenAPIOrderStatsStatusType::Values::CancelledInProcessing },
		{ TEXT("DELIVERY"), OpenAPIOrderStatsStatusType::Values::Delivery },
		{ TEXT("DELIVERED"), OpenAPIOrderStatsStatusType::Values::Delivered },
		{ TEXT("PARTIALLY_DELIVERED"), OpenAPIOrderStatsStatusType::Values::PartiallyDelivered },
		{ TEXT("PARTIALLY_RETURNED"), OpenAPIOrderStatsStatusType::Values::PartiallyReturned },
		{ TEXT("PENDING"), OpenAPIOrderStatsStatusType::Values::Pending },
		{ TEXT("PICKUP"), OpenAPIOrderStatsStatusType::Values::Pickup },
		{ TEXT("PROCESSING"), OpenAPIOrderStatsStatusType::Values::Processing },
		{ TEXT("RESERVED"), OpenAPIOrderStatsStatusType::Values::Reserved },
		{ TEXT("RETURNED"), OpenAPIOrderStatsStatusType::Values::Returned },
		{ TEXT("UNKNOWN"), OpenAPIOrderStatsStatusType::Values::Unknown },
		{ TEXT("UNPAID"), OpenAPIOrderStatsStatusType::Values::Unpaid },
		{ TEXT("LOST"), OpenAPIOrderStatsStatusType::Values::Lost }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIOrderStatsStatusType::EnumFromString(const FString& EnumAsString, OpenAPIOrderStatsStatusType::Values& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIOrderStatsStatusType::Values& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIOrderStatsStatusType::Values& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

void OpenAPIOrderStatsStatusType::WriteJson(JsonWriter& Writer) const
{
	WriteJsonValue(Writer, Value);
}

bool OpenAPIOrderStatsStatusType::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Value);
}

}
