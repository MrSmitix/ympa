/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIOutletLicenseDTO.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIOutletLicenseDTO::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Id.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("id")); WriteJsonValue(Writer, Id.GetValue());
	}
	if (OutletId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("outletId")); WriteJsonValue(Writer, OutletId.GetValue());
	}
	if (LicenseType.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("licenseType")); WriteJsonValue(Writer, LicenseType.GetValue());
	}
	if (Number.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("number")); WriteJsonValue(Writer, Number.GetValue());
	}
	if (DateOfIssue.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("dateOfIssue")); WriteJsonValue(Writer, DateOfIssue.GetValue());
	}
	if (DateOfExpiry.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("dateOfExpiry")); WriteJsonValue(Writer, DateOfExpiry.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIOutletLicenseDTO::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("id"), Id);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("outletId"), OutletId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("licenseType"), LicenseType);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("number"), Number);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("dateOfIssue"), DateOfIssue);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("dateOfExpiry"), DateOfExpiry);

	return ParseSuccess;
}

}
