/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIFlippingPagerDTO.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIFlippingPagerDTO::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Total.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("total")); WriteJsonValue(Writer, Total.GetValue());
	}
	if (From.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("from")); WriteJsonValue(Writer, From.GetValue());
	}
	if (To.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("to")); WriteJsonValue(Writer, To.GetValue());
	}
	if (CurrentPage.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("currentPage")); WriteJsonValue(Writer, CurrentPage.GetValue());
	}
	if (PagesCount.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("pagesCount")); WriteJsonValue(Writer, PagesCount.GetValue());
	}
	if (PageSize.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("pageSize")); WriteJsonValue(Writer, PageSize.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIFlippingPagerDTO::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("total"), Total);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("from"), From);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("to"), To);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("currentPage"), CurrentPage);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("pagesCount"), PagesCount);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("pageSize"), PageSize);

	return ParseSuccess;
}

}
