/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIOrderSubstatusType.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

inline FString ToString(const OpenAPIOrderSubstatusType::Values& Value)
{
	switch (Value)
	{
	case OpenAPIOrderSubstatusType::Values::ReservationExpired:
		return TEXT("RESERVATION_EXPIRED");
	case OpenAPIOrderSubstatusType::Values::UserNotPaid:
		return TEXT("USER_NOT_PAID");
	case OpenAPIOrderSubstatusType::Values::UserUnreachable:
		return TEXT("USER_UNREACHABLE");
	case OpenAPIOrderSubstatusType::Values::UserChangedMind:
		return TEXT("USER_CHANGED_MIND");
	case OpenAPIOrderSubstatusType::Values::UserRefusedDelivery:
		return TEXT("USER_REFUSED_DELIVERY");
	case OpenAPIOrderSubstatusType::Values::UserRefusedProduct:
		return TEXT("USER_REFUSED_PRODUCT");
	case OpenAPIOrderSubstatusType::Values::ShopFailed:
		return TEXT("SHOP_FAILED");
	case OpenAPIOrderSubstatusType::Values::UserRefusedQuality:
		return TEXT("USER_REFUSED_QUALITY");
	case OpenAPIOrderSubstatusType::Values::ReplacingOrder:
		return TEXT("REPLACING_ORDER");
	case OpenAPIOrderSubstatusType::Values::ProcessingExpired:
		return TEXT("PROCESSING_EXPIRED");
	case OpenAPIOrderSubstatusType::Values::PendingExpired:
		return TEXT("PENDING_EXPIRED");
	case OpenAPIOrderSubstatusType::Values::ShopPendingCancelled:
		return TEXT("SHOP_PENDING_CANCELLED");
	case OpenAPIOrderSubstatusType::Values::PendingCancelled:
		return TEXT("PENDING_CANCELLED");
	case OpenAPIOrderSubstatusType::Values::UserFraud:
		return TEXT("USER_FRAUD");
	case OpenAPIOrderSubstatusType::Values::ReservationFailed:
		return TEXT("RESERVATION_FAILED");
	case OpenAPIOrderSubstatusType::Values::UserPlacedOtherOrder:
		return TEXT("USER_PLACED_OTHER_ORDER");
	case OpenAPIOrderSubstatusType::Values::UserBoughtCheaper:
		return TEXT("USER_BOUGHT_CHEAPER");
	case OpenAPIOrderSubstatusType::Values::MissingItem:
		return TEXT("MISSING_ITEM");
	case OpenAPIOrderSubstatusType::Values::BrokenItem:
		return TEXT("BROKEN_ITEM");
	case OpenAPIOrderSubstatusType::Values::WrongItem:
		return TEXT("WRONG_ITEM");
	case OpenAPIOrderSubstatusType::Values::PickupExpired:
		return TEXT("PICKUP_EXPIRED");
	case OpenAPIOrderSubstatusType::Values::DeliveryProblems:
		return TEXT("DELIVERY_PROBLEMS");
	case OpenAPIOrderSubstatusType::Values::LateContact:
		return TEXT("LATE_CONTACT");
	case OpenAPIOrderSubstatusType::Values::Custom:
		return TEXT("CUSTOM");
	case OpenAPIOrderSubstatusType::Values::DeliveryServiceFailed:
		return TEXT("DELIVERY_SERVICE_FAILED");
	case OpenAPIOrderSubstatusType::Values::WarehouseFailedToShip:
		return TEXT("WAREHOUSE_FAILED_TO_SHIP");
	case OpenAPIOrderSubstatusType::Values::DeliverySerivceUndelivered:
		return TEXT("DELIVERY_SERIVCE_UNDELIVERED");
	case OpenAPIOrderSubstatusType::Values::DeliveryServiceUndelivered:
		return TEXT("DELIVERY_SERVICE_UNDELIVERED");
	case OpenAPIOrderSubstatusType::Values::Preorder:
		return TEXT("PREORDER");
	case OpenAPIOrderSubstatusType::Values::AwaitConfirmation:
		return TEXT("AWAIT_CONFIRMATION");
	case OpenAPIOrderSubstatusType::Values::Started:
		return TEXT("STARTED");
	case OpenAPIOrderSubstatusType::Values::Packaging:
		return TEXT("PACKAGING");
	case OpenAPIOrderSubstatusType::Values::ReadyToShip:
		return TEXT("READY_TO_SHIP");
	case OpenAPIOrderSubstatusType::Values::Shipped:
		return TEXT("SHIPPED");
	case OpenAPIOrderSubstatusType::Values::AsyncProcessing:
		return TEXT("ASYNC_PROCESSING");
	case OpenAPIOrderSubstatusType::Values::UserRefusedToProvidePersonalData:
		return TEXT("USER_REFUSED_TO_PROVIDE_PERSONAL_DATA");
	case OpenAPIOrderSubstatusType::Values::WaitingUserInput:
		return TEXT("WAITING_USER_INPUT");
	case OpenAPIOrderSubstatusType::Values::WaitingBankDecision:
		return TEXT("WAITING_BANK_DECISION");
	case OpenAPIOrderSubstatusType::Values::BankRejectCreditOffer:
		return TEXT("BANK_REJECT_CREDIT_OFFER");
	case OpenAPIOrderSubstatusType::Values::CustomerRejectCreditOffer:
		return TEXT("CUSTOMER_REJECT_CREDIT_OFFER");
	case OpenAPIOrderSubstatusType::Values::CreditOfferFailed:
		return TEXT("CREDIT_OFFER_FAILED");
	case OpenAPIOrderSubstatusType::Values::AwaitDeliveryDatesConfirmation:
		return TEXT("AWAIT_DELIVERY_DATES_CONFIRMATION");
	case OpenAPIOrderSubstatusType::Values::ServiceFault:
		return TEXT("SERVICE_FAULT");
	case OpenAPIOrderSubstatusType::Values::DeliveryServiceReceived:
		return TEXT("DELIVERY_SERVICE_RECEIVED");
	case OpenAPIOrderSubstatusType::Values::UserReceived:
		return TEXT("USER_RECEIVED");
	case OpenAPIOrderSubstatusType::Values::WaitingForStocks:
		return TEXT("WAITING_FOR_STOCKS");
	case OpenAPIOrderSubstatusType::Values::AsPartOfMultiOrder:
		return TEXT("AS_PART_OF_MULTI_ORDER");
	case OpenAPIOrderSubstatusType::Values::ReadyForLastMile:
		return TEXT("READY_FOR_LAST_MILE");
	case OpenAPIOrderSubstatusType::Values::LastMileStarted:
		return TEXT("LAST_MILE_STARTED");
	case OpenAPIOrderSubstatusType::Values::Antifraud:
		return TEXT("ANTIFRAUD");
	case OpenAPIOrderSubstatusType::Values::DeliveryUserNotReceived:
		return TEXT("DELIVERY_USER_NOT_RECEIVED");
	case OpenAPIOrderSubstatusType::Values::DeliveryServiceDelivered:
		return TEXT("DELIVERY_SERVICE_DELIVERED");
	case OpenAPIOrderSubstatusType::Values::DeliveredUserNotReceived:
		return TEXT("DELIVERED_USER_NOT_RECEIVED");
	case OpenAPIOrderSubstatusType::Values::UserWantedAnotherPaymentMethod:
		return TEXT("USER_WANTED_ANOTHER_PAYMENT_METHOD");
	case OpenAPIOrderSubstatusType::Values::UserReceivedTechnicalError:
		return TEXT("USER_RECEIVED_TECHNICAL_ERROR");
	case OpenAPIOrderSubstatusType::Values::UserForgotToUseBonus:
		return TEXT("USER_FORGOT_TO_USE_BONUS");
	case OpenAPIOrderSubstatusType::Values::ReceivedOnDistributionCenter:
		return TEXT("RECEIVED_ON_DISTRIBUTION_CENTER");
	case OpenAPIOrderSubstatusType::Values::DeliveryServiceNotReceived:
		return TEXT("DELIVERY_SERVICE_NOT_RECEIVED");
	case OpenAPIOrderSubstatusType::Values::DeliveryServiceLost:
		return TEXT("DELIVERY_SERVICE_LOST");
	case OpenAPIOrderSubstatusType::Values::ShippedToWrongDeliveryService:
		return TEXT("SHIPPED_TO_WRONG_DELIVERY_SERVICE");
	case OpenAPIOrderSubstatusType::Values::DeliveredUserReceived:
		return TEXT("DELIVERED_USER_RECEIVED");
	case OpenAPIOrderSubstatusType::Values::WaitingTinkoffDecision:
		return TEXT("WAITING_TINKOFF_DECISION");
	case OpenAPIOrderSubstatusType::Values::CourierSearch:
		return TEXT("COURIER_SEARCH");
	case OpenAPIOrderSubstatusType::Values::CourierFound:
		return TEXT("COURIER_FOUND");
	case OpenAPIOrderSubstatusType::Values::CourierInTransitToSender:
		return TEXT("COURIER_IN_TRANSIT_TO_SENDER");
	case OpenAPIOrderSubstatusType::Values::CourierArrivedToSender:
		return TEXT("COURIER_ARRIVED_TO_SENDER");
	case OpenAPIOrderSubstatusType::Values::CourierReceived:
		return TEXT("COURIER_RECEIVED");
	case OpenAPIOrderSubstatusType::Values::CourierNotFound:
		return TEXT("COURIER_NOT_FOUND");
	case OpenAPIOrderSubstatusType::Values::CourierNotDeliverOrder:
		return TEXT("COURIER_NOT_DELIVER_ORDER");
	case OpenAPIOrderSubstatusType::Values::CourierReturnsOrder:
		return TEXT("COURIER_RETURNS_ORDER");
	case OpenAPIOrderSubstatusType::Values::CourierReturnedOrder:
		return TEXT("COURIER_RETURNED_ORDER");
	case OpenAPIOrderSubstatusType::Values::WaitingUserDeliveryInput:
		return TEXT("WAITING_USER_DELIVERY_INPUT");
	case OpenAPIOrderSubstatusType::Values::PickupServiceReceived:
		return TEXT("PICKUP_SERVICE_RECEIVED");
	case OpenAPIOrderSubstatusType::Values::PickupUserReceived:
		return TEXT("PICKUP_USER_RECEIVED");
	case OpenAPIOrderSubstatusType::Values::CancelledCourierNotFound:
		return TEXT("CANCELLED_COURIER_NOT_FOUND");
	case OpenAPIOrderSubstatusType::Values::CourierNotComeForOrder:
		return TEXT("COURIER_NOT_COME_FOR_ORDER");
	case OpenAPIOrderSubstatusType::Values::DeliveryNotManagedRegion:
		return TEXT("DELIVERY_NOT_MANAGED_REGION");
	case OpenAPIOrderSubstatusType::Values::IncompleteContactInformation:
		return TEXT("INCOMPLETE_CONTACT_INFORMATION");
	case OpenAPIOrderSubstatusType::Values::IncompleteMultiOrder:
		return TEXT("INCOMPLETE_MULTI_ORDER");
	case OpenAPIOrderSubstatusType::Values::InappropriateWeightSize:
		return TEXT("INAPPROPRIATE_WEIGHT_SIZE");
	case OpenAPIOrderSubstatusType::Values::TechnicalError:
		return TEXT("TECHNICAL_ERROR");
	case OpenAPIOrderSubstatusType::Values::SortingCenterLost:
		return TEXT("SORTING_CENTER_LOST");
	case OpenAPIOrderSubstatusType::Values::CourierSearchNotStarted:
		return TEXT("COURIER_SEARCH_NOT_STARTED");
	case OpenAPIOrderSubstatusType::Values::Lost:
		return TEXT("LOST");
	case OpenAPIOrderSubstatusType::Values::AwaitPayment:
		return TEXT("AWAIT_PAYMENT");
	case OpenAPIOrderSubstatusType::Values::AwaitLavkaReservation:
		return TEXT("AWAIT_LAVKA_RESERVATION");
	case OpenAPIOrderSubstatusType::Values::UserWantsToChangeAddress:
		return TEXT("USER_WANTS_TO_CHANGE_ADDRESS");
	case OpenAPIOrderSubstatusType::Values::FullNotRansom:
		return TEXT("FULL_NOT_RANSOM");
	case OpenAPIOrderSubstatusType::Values::PrescriptionMismatch:
		return TEXT("PRESCRIPTION_MISMATCH");
	case OpenAPIOrderSubstatusType::Values::DropoffLost:
		return TEXT("DROPOFF_LOST");
	case OpenAPIOrderSubstatusType::Values::DropoffClosed:
		return TEXT("DROPOFF_CLOSED");
	case OpenAPIOrderSubstatusType::Values::DeliveryToStoreStarted:
		return TEXT("DELIVERY_TO_STORE_STARTED");
	case OpenAPIOrderSubstatusType::Values::UserWantsToChangeDeliveryDate:
		return TEXT("USER_WANTS_TO_CHANGE_DELIVERY_DATE");
	case OpenAPIOrderSubstatusType::Values::WrongItemDelivered:
		return TEXT("WRONG_ITEM_DELIVERED");
	case OpenAPIOrderSubstatusType::Values::DamagedBox:
		return TEXT("DAMAGED_BOX");
	case OpenAPIOrderSubstatusType::Values::AwaitDeliveryDates:
		return TEXT("AWAIT_DELIVERY_DATES");
	case OpenAPIOrderSubstatusType::Values::LastMileCourierSearch:
		return TEXT("LAST_MILE_COURIER_SEARCH");
	case OpenAPIOrderSubstatusType::Values::PickupPointClosed:
		return TEXT("PICKUP_POINT_CLOSED");
	case OpenAPIOrderSubstatusType::Values::LegalInfoChanged:
		return TEXT("LEGAL_INFO_CHANGED");
	case OpenAPIOrderSubstatusType::Values::UserHasNoTimeToPickupOrder:
		return TEXT("USER_HAS_NO_TIME_TO_PICKUP_ORDER");
	case OpenAPIOrderSubstatusType::Values::DeliveryCustomsArrived:
		return TEXT("DELIVERY_CUSTOMS_ARRIVED");
	case OpenAPIOrderSubstatusType::Values::DeliveryCustomsCleared:
		return TEXT("DELIVERY_CUSTOMS_CLEARED");
	case OpenAPIOrderSubstatusType::Values::FirstMileDeliveryServiceReceived:
		return TEXT("FIRST_MILE_DELIVERY_SERVICE_RECEIVED");
	case OpenAPIOrderSubstatusType::Values::AwaitAutoDeliveryDates:
		return TEXT("AWAIT_AUTO_DELIVERY_DATES");
	case OpenAPIOrderSubstatusType::Values::AwaitUserPersonalData:
		return TEXT("AWAIT_USER_PERSONAL_DATA");
	case OpenAPIOrderSubstatusType::Values::NoPersonalDataExpired:
		return TEXT("NO_PERSONAL_DATA_EXPIRED");
	case OpenAPIOrderSubstatusType::Values::CustomsProblems:
		return TEXT("CUSTOMS_PROBLEMS");
	case OpenAPIOrderSubstatusType::Values::AwaitCashier:
		return TEXT("AWAIT_CASHIER");
	case OpenAPIOrderSubstatusType::Values::WaitingPostpaidBudgetReservation:
		return TEXT("WAITING_POSTPAID_BUDGET_RESERVATION");
	case OpenAPIOrderSubstatusType::Values::AwaitServiceableConfirmation:
		return TEXT("AWAIT_SERVICEABLE_CONFIRMATION");
	case OpenAPIOrderSubstatusType::Values::PostpaidBudgetReservationFailed:
		return TEXT("POSTPAID_BUDGET_RESERVATION_FAILED");
	case OpenAPIOrderSubstatusType::Values::AwaitCustomPriceConfirmation:
		return TEXT("AWAIT_CUSTOM_PRICE_CONFIRMATION");
	case OpenAPIOrderSubstatusType::Values::ReadyForPickup:
		return TEXT("READY_FOR_PICKUP");
	case OpenAPIOrderSubstatusType::Values::Unknown:
		return TEXT("UNKNOWN");
	}

	UE_LOG(LogOpenAPI, Error, TEXT("Invalid OpenAPIOrderSubstatusType::Values Value (%d)"), (int)Value);
	return TEXT("");
}

FString OpenAPIOrderSubstatusType::EnumToString(const OpenAPIOrderSubstatusType::Values& EnumValue)
{
	return ToString(EnumValue);
}

inline bool FromString(const FString& EnumAsString, OpenAPIOrderSubstatusType::Values& Value)
{
	static TMap<FString, OpenAPIOrderSubstatusType::Values> StringToEnum = { 
		{ TEXT("RESERVATION_EXPIRED"), OpenAPIOrderSubstatusType::Values::ReservationExpired },
		{ TEXT("USER_NOT_PAID"), OpenAPIOrderSubstatusType::Values::UserNotPaid },
		{ TEXT("USER_UNREACHABLE"), OpenAPIOrderSubstatusType::Values::UserUnreachable },
		{ TEXT("USER_CHANGED_MIND"), OpenAPIOrderSubstatusType::Values::UserChangedMind },
		{ TEXT("USER_REFUSED_DELIVERY"), OpenAPIOrderSubstatusType::Values::UserRefusedDelivery },
		{ TEXT("USER_REFUSED_PRODUCT"), OpenAPIOrderSubstatusType::Values::UserRefusedProduct },
		{ TEXT("SHOP_FAILED"), OpenAPIOrderSubstatusType::Values::ShopFailed },
		{ TEXT("USER_REFUSED_QUALITY"), OpenAPIOrderSubstatusType::Values::UserRefusedQuality },
		{ TEXT("REPLACING_ORDER"), OpenAPIOrderSubstatusType::Values::ReplacingOrder },
		{ TEXT("PROCESSING_EXPIRED"), OpenAPIOrderSubstatusType::Values::ProcessingExpired },
		{ TEXT("PENDING_EXPIRED"), OpenAPIOrderSubstatusType::Values::PendingExpired },
		{ TEXT("SHOP_PENDING_CANCELLED"), OpenAPIOrderSubstatusType::Values::ShopPendingCancelled },
		{ TEXT("PENDING_CANCELLED"), OpenAPIOrderSubstatusType::Values::PendingCancelled },
		{ TEXT("USER_FRAUD"), OpenAPIOrderSubstatusType::Values::UserFraud },
		{ TEXT("RESERVATION_FAILED"), OpenAPIOrderSubstatusType::Values::ReservationFailed },
		{ TEXT("USER_PLACED_OTHER_ORDER"), OpenAPIOrderSubstatusType::Values::UserPlacedOtherOrder },
		{ TEXT("USER_BOUGHT_CHEAPER"), OpenAPIOrderSubstatusType::Values::UserBoughtCheaper },
		{ TEXT("MISSING_ITEM"), OpenAPIOrderSubstatusType::Values::MissingItem },
		{ TEXT("BROKEN_ITEM"), OpenAPIOrderSubstatusType::Values::BrokenItem },
		{ TEXT("WRONG_ITEM"), OpenAPIOrderSubstatusType::Values::WrongItem },
		{ TEXT("PICKUP_EXPIRED"), OpenAPIOrderSubstatusType::Values::PickupExpired },
		{ TEXT("DELIVERY_PROBLEMS"), OpenAPIOrderSubstatusType::Values::DeliveryProblems },
		{ TEXT("LATE_CONTACT"), OpenAPIOrderSubstatusType::Values::LateContact },
		{ TEXT("CUSTOM"), OpenAPIOrderSubstatusType::Values::Custom },
		{ TEXT("DELIVERY_SERVICE_FAILED"), OpenAPIOrderSubstatusType::Values::DeliveryServiceFailed },
		{ TEXT("WAREHOUSE_FAILED_TO_SHIP"), OpenAPIOrderSubstatusType::Values::WarehouseFailedToShip },
		{ TEXT("DELIVERY_SERIVCE_UNDELIVERED"), OpenAPIOrderSubstatusType::Values::DeliverySerivceUndelivered },
		{ TEXT("DELIVERY_SERVICE_UNDELIVERED"), OpenAPIOrderSubstatusType::Values::DeliveryServiceUndelivered },
		{ TEXT("PREORDER"), OpenAPIOrderSubstatusType::Values::Preorder },
		{ TEXT("AWAIT_CONFIRMATION"), OpenAPIOrderSubstatusType::Values::AwaitConfirmation },
		{ TEXT("STARTED"), OpenAPIOrderSubstatusType::Values::Started },
		{ TEXT("PACKAGING"), OpenAPIOrderSubstatusType::Values::Packaging },
		{ TEXT("READY_TO_SHIP"), OpenAPIOrderSubstatusType::Values::ReadyToShip },
		{ TEXT("SHIPPED"), OpenAPIOrderSubstatusType::Values::Shipped },
		{ TEXT("ASYNC_PROCESSING"), OpenAPIOrderSubstatusType::Values::AsyncProcessing },
		{ TEXT("USER_REFUSED_TO_PROVIDE_PERSONAL_DATA"), OpenAPIOrderSubstatusType::Values::UserRefusedToProvidePersonalData },
		{ TEXT("WAITING_USER_INPUT"), OpenAPIOrderSubstatusType::Values::WaitingUserInput },
		{ TEXT("WAITING_BANK_DECISION"), OpenAPIOrderSubstatusType::Values::WaitingBankDecision },
		{ TEXT("BANK_REJECT_CREDIT_OFFER"), OpenAPIOrderSubstatusType::Values::BankRejectCreditOffer },
		{ TEXT("CUSTOMER_REJECT_CREDIT_OFFER"), OpenAPIOrderSubstatusType::Values::CustomerRejectCreditOffer },
		{ TEXT("CREDIT_OFFER_FAILED"), OpenAPIOrderSubstatusType::Values::CreditOfferFailed },
		{ TEXT("AWAIT_DELIVERY_DATES_CONFIRMATION"), OpenAPIOrderSubstatusType::Values::AwaitDeliveryDatesConfirmation },
		{ TEXT("SERVICE_FAULT"), OpenAPIOrderSubstatusType::Values::ServiceFault },
		{ TEXT("DELIVERY_SERVICE_RECEIVED"), OpenAPIOrderSubstatusType::Values::DeliveryServiceReceived },
		{ TEXT("USER_RECEIVED"), OpenAPIOrderSubstatusType::Values::UserReceived },
		{ TEXT("WAITING_FOR_STOCKS"), OpenAPIOrderSubstatusType::Values::WaitingForStocks },
		{ TEXT("AS_PART_OF_MULTI_ORDER"), OpenAPIOrderSubstatusType::Values::AsPartOfMultiOrder },
		{ TEXT("READY_FOR_LAST_MILE"), OpenAPIOrderSubstatusType::Values::ReadyForLastMile },
		{ TEXT("LAST_MILE_STARTED"), OpenAPIOrderSubstatusType::Values::LastMileStarted },
		{ TEXT("ANTIFRAUD"), OpenAPIOrderSubstatusType::Values::Antifraud },
		{ TEXT("DELIVERY_USER_NOT_RECEIVED"), OpenAPIOrderSubstatusType::Values::DeliveryUserNotReceived },
		{ TEXT("DELIVERY_SERVICE_DELIVERED"), OpenAPIOrderSubstatusType::Values::DeliveryServiceDelivered },
		{ TEXT("DELIVERED_USER_NOT_RECEIVED"), OpenAPIOrderSubstatusType::Values::DeliveredUserNotReceived },
		{ TEXT("USER_WANTED_ANOTHER_PAYMENT_METHOD"), OpenAPIOrderSubstatusType::Values::UserWantedAnotherPaymentMethod },
		{ TEXT("USER_RECEIVED_TECHNICAL_ERROR"), OpenAPIOrderSubstatusType::Values::UserReceivedTechnicalError },
		{ TEXT("USER_FORGOT_TO_USE_BONUS"), OpenAPIOrderSubstatusType::Values::UserForgotToUseBonus },
		{ TEXT("RECEIVED_ON_DISTRIBUTION_CENTER"), OpenAPIOrderSubstatusType::Values::ReceivedOnDistributionCenter },
		{ TEXT("DELIVERY_SERVICE_NOT_RECEIVED"), OpenAPIOrderSubstatusType::Values::DeliveryServiceNotReceived },
		{ TEXT("DELIVERY_SERVICE_LOST"), OpenAPIOrderSubstatusType::Values::DeliveryServiceLost },
		{ TEXT("SHIPPED_TO_WRONG_DELIVERY_SERVICE"), OpenAPIOrderSubstatusType::Values::ShippedToWrongDeliveryService },
		{ TEXT("DELIVERED_USER_RECEIVED"), OpenAPIOrderSubstatusType::Values::DeliveredUserReceived },
		{ TEXT("WAITING_TINKOFF_DECISION"), OpenAPIOrderSubstatusType::Values::WaitingTinkoffDecision },
		{ TEXT("COURIER_SEARCH"), OpenAPIOrderSubstatusType::Values::CourierSearch },
		{ TEXT("COURIER_FOUND"), OpenAPIOrderSubstatusType::Values::CourierFound },
		{ TEXT("COURIER_IN_TRANSIT_TO_SENDER"), OpenAPIOrderSubstatusType::Values::CourierInTransitToSender },
		{ TEXT("COURIER_ARRIVED_TO_SENDER"), OpenAPIOrderSubstatusType::Values::CourierArrivedToSender },
		{ TEXT("COURIER_RECEIVED"), OpenAPIOrderSubstatusType::Values::CourierReceived },
		{ TEXT("COURIER_NOT_FOUND"), OpenAPIOrderSubstatusType::Values::CourierNotFound },
		{ TEXT("COURIER_NOT_DELIVER_ORDER"), OpenAPIOrderSubstatusType::Values::CourierNotDeliverOrder },
		{ TEXT("COURIER_RETURNS_ORDER"), OpenAPIOrderSubstatusType::Values::CourierReturnsOrder },
		{ TEXT("COURIER_RETURNED_ORDER"), OpenAPIOrderSubstatusType::Values::CourierReturnedOrder },
		{ TEXT("WAITING_USER_DELIVERY_INPUT"), OpenAPIOrderSubstatusType::Values::WaitingUserDeliveryInput },
		{ TEXT("PICKUP_SERVICE_RECEIVED"), OpenAPIOrderSubstatusType::Values::PickupServiceReceived },
		{ TEXT("PICKUP_USER_RECEIVED"), OpenAPIOrderSubstatusType::Values::PickupUserReceived },
		{ TEXT("CANCELLED_COURIER_NOT_FOUND"), OpenAPIOrderSubstatusType::Values::CancelledCourierNotFound },
		{ TEXT("COURIER_NOT_COME_FOR_ORDER"), OpenAPIOrderSubstatusType::Values::CourierNotComeForOrder },
		{ TEXT("DELIVERY_NOT_MANAGED_REGION"), OpenAPIOrderSubstatusType::Values::DeliveryNotManagedRegion },
		{ TEXT("INCOMPLETE_CONTACT_INFORMATION"), OpenAPIOrderSubstatusType::Values::IncompleteContactInformation },
		{ TEXT("INCOMPLETE_MULTI_ORDER"), OpenAPIOrderSubstatusType::Values::IncompleteMultiOrder },
		{ TEXT("INAPPROPRIATE_WEIGHT_SIZE"), OpenAPIOrderSubstatusType::Values::InappropriateWeightSize },
		{ TEXT("TECHNICAL_ERROR"), OpenAPIOrderSubstatusType::Values::TechnicalError },
		{ TEXT("SORTING_CENTER_LOST"), OpenAPIOrderSubstatusType::Values::SortingCenterLost },
		{ TEXT("COURIER_SEARCH_NOT_STARTED"), OpenAPIOrderSubstatusType::Values::CourierSearchNotStarted },
		{ TEXT("LOST"), OpenAPIOrderSubstatusType::Values::Lost },
		{ TEXT("AWAIT_PAYMENT"), OpenAPIOrderSubstatusType::Values::AwaitPayment },
		{ TEXT("AWAIT_LAVKA_RESERVATION"), OpenAPIOrderSubstatusType::Values::AwaitLavkaReservation },
		{ TEXT("USER_WANTS_TO_CHANGE_ADDRESS"), OpenAPIOrderSubstatusType::Values::UserWantsToChangeAddress },
		{ TEXT("FULL_NOT_RANSOM"), OpenAPIOrderSubstatusType::Values::FullNotRansom },
		{ TEXT("PRESCRIPTION_MISMATCH"), OpenAPIOrderSubstatusType::Values::PrescriptionMismatch },
		{ TEXT("DROPOFF_LOST"), OpenAPIOrderSubstatusType::Values::DropoffLost },
		{ TEXT("DROPOFF_CLOSED"), OpenAPIOrderSubstatusType::Values::DropoffClosed },
		{ TEXT("DELIVERY_TO_STORE_STARTED"), OpenAPIOrderSubstatusType::Values::DeliveryToStoreStarted },
		{ TEXT("USER_WANTS_TO_CHANGE_DELIVERY_DATE"), OpenAPIOrderSubstatusType::Values::UserWantsToChangeDeliveryDate },
		{ TEXT("WRONG_ITEM_DELIVERED"), OpenAPIOrderSubstatusType::Values::WrongItemDelivered },
		{ TEXT("DAMAGED_BOX"), OpenAPIOrderSubstatusType::Values::DamagedBox },
		{ TEXT("AWAIT_DELIVERY_DATES"), OpenAPIOrderSubstatusType::Values::AwaitDeliveryDates },
		{ TEXT("LAST_MILE_COURIER_SEARCH"), OpenAPIOrderSubstatusType::Values::LastMileCourierSearch },
		{ TEXT("PICKUP_POINT_CLOSED"), OpenAPIOrderSubstatusType::Values::PickupPointClosed },
		{ TEXT("LEGAL_INFO_CHANGED"), OpenAPIOrderSubstatusType::Values::LegalInfoChanged },
		{ TEXT("USER_HAS_NO_TIME_TO_PICKUP_ORDER"), OpenAPIOrderSubstatusType::Values::UserHasNoTimeToPickupOrder },
		{ TEXT("DELIVERY_CUSTOMS_ARRIVED"), OpenAPIOrderSubstatusType::Values::DeliveryCustomsArrived },
		{ TEXT("DELIVERY_CUSTOMS_CLEARED"), OpenAPIOrderSubstatusType::Values::DeliveryCustomsCleared },
		{ TEXT("FIRST_MILE_DELIVERY_SERVICE_RECEIVED"), OpenAPIOrderSubstatusType::Values::FirstMileDeliveryServiceReceived },
		{ TEXT("AWAIT_AUTO_DELIVERY_DATES"), OpenAPIOrderSubstatusType::Values::AwaitAutoDeliveryDates },
		{ TEXT("AWAIT_USER_PERSONAL_DATA"), OpenAPIOrderSubstatusType::Values::AwaitUserPersonalData },
		{ TEXT("NO_PERSONAL_DATA_EXPIRED"), OpenAPIOrderSubstatusType::Values::NoPersonalDataExpired },
		{ TEXT("CUSTOMS_PROBLEMS"), OpenAPIOrderSubstatusType::Values::CustomsProblems },
		{ TEXT("AWAIT_CASHIER"), OpenAPIOrderSubstatusType::Values::AwaitCashier },
		{ TEXT("WAITING_POSTPAID_BUDGET_RESERVATION"), OpenAPIOrderSubstatusType::Values::WaitingPostpaidBudgetReservation },
		{ TEXT("AWAIT_SERVICEABLE_CONFIRMATION"), OpenAPIOrderSubstatusType::Values::AwaitServiceableConfirmation },
		{ TEXT("POSTPAID_BUDGET_RESERVATION_FAILED"), OpenAPIOrderSubstatusType::Values::PostpaidBudgetReservationFailed },
		{ TEXT("AWAIT_CUSTOM_PRICE_CONFIRMATION"), OpenAPIOrderSubstatusType::Values::AwaitCustomPriceConfirmation },
		{ TEXT("READY_FOR_PICKUP"), OpenAPIOrderSubstatusType::Values::ReadyForPickup },
		{ TEXT("UNKNOWN"), OpenAPIOrderSubstatusType::Values::Unknown }, };

	const auto Found = StringToEnum.Find(EnumAsString);
	if(Found)
		Value = *Found;

	return Found != nullptr;
}

bool OpenAPIOrderSubstatusType::EnumFromString(const FString& EnumAsString, OpenAPIOrderSubstatusType::Values& EnumValue)
{
	return FromString(EnumAsString, EnumValue);
}

inline void WriteJsonValue(JsonWriter& Writer, const OpenAPIOrderSubstatusType::Values& Value)
{
	WriteJsonValue(Writer, ToString(Value));
}

inline bool TryGetJsonValue(const TSharedPtr<FJsonValue>& JsonValue, OpenAPIOrderSubstatusType::Values& Value)
{
	FString TmpValue;
	if (JsonValue->TryGetString(TmpValue))
	{
		if(FromString(TmpValue, Value))
			return true;
	}
	return false;
}

void OpenAPIOrderSubstatusType::WriteJson(JsonWriter& Writer) const
{
	WriteJsonValue(Writer, Value);
}

bool OpenAPIOrderSubstatusType::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	return TryGetJsonValue(JsonValue, Value);
}

}
