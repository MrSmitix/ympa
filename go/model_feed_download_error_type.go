// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// FeedDownloadErrorType : Тип ошибки загрузки прайс-листа.  Возможные значения:  * `DOWNLOAD_ERROR` — ошибка загрузки прайс-листа. Например, проблема с DNS-сервером или обрыв интернет-соединения.   Проблема описана в параметре `description`.  * `DOWNLOAD_HTTP_ERROR` — Яндекс Маркет передал запрос на получение прайс-листа и получил в ответ HTTP-код, отличный от 2xx.  HTTP-код выведен в параметре `httpStatusCode`. 
type FeedDownloadErrorType string

// List of FeedDownloadErrorType
const (
	ERROR FeedDownloadErrorType = "DOWNLOAD_ERROR"
	HTTP_ERROR FeedDownloadErrorType = "DOWNLOAD_HTTP_ERROR"
)

// AllowedFeedDownloadErrorTypeEnumValues is all the allowed values of FeedDownloadErrorType enum
var AllowedFeedDownloadErrorTypeEnumValues = []FeedDownloadErrorType{
	"DOWNLOAD_ERROR",
	"DOWNLOAD_HTTP_ERROR",
}

// validFeedDownloadErrorTypeEnumValue provides a map of FeedDownloadErrorTypes for fast verification of use input
var validFeedDownloadErrorTypeEnumValues = map[FeedDownloadErrorType]struct{}{
	"DOWNLOAD_ERROR": {},
	"DOWNLOAD_HTTP_ERROR": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FeedDownloadErrorType) IsValid() bool {
	_, ok := validFeedDownloadErrorTypeEnumValues[v]
	return ok
}

// NewFeedDownloadErrorTypeFromValue returns a pointer to a valid FeedDownloadErrorType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFeedDownloadErrorTypeFromValue(v string) (FeedDownloadErrorType, error) {
	ev := FeedDownloadErrorType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for FeedDownloadErrorType: valid values are %v", v, AllowedFeedDownloadErrorTypeEnumValues)
}



// AssertFeedDownloadErrorTypeRequired checks if the required fields are not zero-ed
func AssertFeedDownloadErrorTypeRequired(obj FeedDownloadErrorType) error {
	return nil
}

// AssertFeedDownloadErrorTypeConstraints checks if the values respects the defined constraints
func AssertFeedDownloadErrorTypeConstraints(obj FeedDownloadErrorType) error {
	return nil
}
