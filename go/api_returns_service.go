// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server

import (
	"context"
	"net/http"
	"errors"
)

// ReturnsAPIService is a service that implements the logic for the ReturnsAPIServicer
// This service should implement the business logic for every endpoint for the ReturnsAPI API.
// Include any external packages or services that will be required by this service.
type ReturnsAPIService struct {
}

// NewReturnsAPIService creates a default api service
func NewReturnsAPIService() *ReturnsAPIService {
	return &ReturnsAPIService{}
}

// GetReturn - Информация о невыкупе или возврате
func (s *ReturnsAPIService) GetReturn(ctx context.Context, campaignId int64, orderId int64, returnId int64) (ImplResponse, error) {
	// TODO - update GetReturn with the required logic for this service method.
	// Add api_returns_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, GetReturnResponse{}) or use other options such as http.Ok ...
	// return Response(200, GetReturnResponse{}), nil

	// TODO: Uncomment the next line to return response Response(400, ApiClientDataErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ApiClientDataErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ApiUnauthorizedErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ApiUnauthorizedErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(403, ApiForbiddenErrorResponse{}) or use other options such as http.Ok ...
	// return Response(403, ApiForbiddenErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(404, ApiNotFoundErrorResponse{}) or use other options such as http.Ok ...
	// return Response(404, ApiNotFoundErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(420, ApiLimitErrorResponse{}) or use other options such as http.Ok ...
	// return Response(420, ApiLimitErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(500, ApiServerErrorResponse{}) or use other options such as http.Ok ...
	// return Response(500, ApiServerErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetReturn method not implemented")
}

// GetReturnApplication - Получение заявления на возврат
func (s *ReturnsAPIService) GetReturnApplication(ctx context.Context, campaignId int64, orderId int64, returnId int64) (ImplResponse, error) {
	// TODO - update GetReturnApplication with the required logic for this service method.
	// Add api_returns_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(400, ApiClientDataErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ApiClientDataErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ApiUnauthorizedErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ApiUnauthorizedErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(403, ApiForbiddenErrorResponse{}) or use other options such as http.Ok ...
	// return Response(403, ApiForbiddenErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(404, ApiNotFoundErrorResponse{}) or use other options such as http.Ok ...
	// return Response(404, ApiNotFoundErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(420, ApiLimitErrorResponse{}) or use other options such as http.Ok ...
	// return Response(420, ApiLimitErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(500, ApiServerErrorResponse{}) or use other options such as http.Ok ...
	// return Response(500, ApiServerErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetReturnApplication method not implemented")
}

// GetReturnPhoto - Получение фотографии возврата
func (s *ReturnsAPIService) GetReturnPhoto(ctx context.Context, campaignId int64, orderId int64, returnId int64, itemId int64, imageHash string) (ImplResponse, error) {
	// TODO - update GetReturnPhoto with the required logic for this service method.
	// Add api_returns_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	// return Response(200, *os.File{}), nil

	// TODO: Uncomment the next line to return response Response(400, ApiClientDataErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ApiClientDataErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ApiUnauthorizedErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ApiUnauthorizedErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(403, ApiForbiddenErrorResponse{}) or use other options such as http.Ok ...
	// return Response(403, ApiForbiddenErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(404, ApiNotFoundErrorResponse{}) or use other options such as http.Ok ...
	// return Response(404, ApiNotFoundErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(420, ApiLimitErrorResponse{}) or use other options such as http.Ok ...
	// return Response(420, ApiLimitErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(500, ApiServerErrorResponse{}) or use other options such as http.Ok ...
	// return Response(500, ApiServerErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetReturnPhoto method not implemented")
}

// GetReturns - Список невыкупов и возвратов
func (s *ReturnsAPIService) GetReturns(ctx context.Context, campaignId int64, pageToken string, limit int32, orderIds []int64, statuses []RefundStatusType, type_ ReturnType, fromDate string, toDate string, fromDate2 string, toDate2 string) (ImplResponse, error) {
	// TODO - update GetReturns with the required logic for this service method.
	// Add api_returns_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, GetReturnsResponse{}) or use other options such as http.Ok ...
	// return Response(200, GetReturnsResponse{}), nil

	// TODO: Uncomment the next line to return response Response(400, ApiClientDataErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ApiClientDataErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ApiUnauthorizedErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ApiUnauthorizedErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(403, ApiForbiddenErrorResponse{}) or use other options such as http.Ok ...
	// return Response(403, ApiForbiddenErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(404, ApiNotFoundErrorResponse{}) or use other options such as http.Ok ...
	// return Response(404, ApiNotFoundErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(420, ApiLimitErrorResponse{}) or use other options such as http.Ok ...
	// return Response(420, ApiLimitErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(500, ApiServerErrorResponse{}) or use other options such as http.Ok ...
	// return Response(500, ApiServerErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetReturns method not implemented")
}

// SetReturnDecision - Принятие или изменение решения по возврату
func (s *ReturnsAPIService) SetReturnDecision(ctx context.Context, campaignId int64, orderId int64, returnId int64, setReturnDecisionRequest SetReturnDecisionRequest) (ImplResponse, error) {
	// TODO - update SetReturnDecision with the required logic for this service method.
	// Add api_returns_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, EmptyApiResponse{}) or use other options such as http.Ok ...
	// return Response(200, EmptyApiResponse{}), nil

	// TODO: Uncomment the next line to return response Response(400, ApiClientDataErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ApiClientDataErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ApiUnauthorizedErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ApiUnauthorizedErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(403, ApiForbiddenErrorResponse{}) or use other options such as http.Ok ...
	// return Response(403, ApiForbiddenErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(404, ApiNotFoundErrorResponse{}) or use other options such as http.Ok ...
	// return Response(404, ApiNotFoundErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(420, ApiLimitErrorResponse{}) or use other options such as http.Ok ...
	// return Response(420, ApiLimitErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(500, ApiServerErrorResponse{}) or use other options such as http.Ok ...
	// return Response(500, ApiServerErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("SetReturnDecision method not implemented")
}

// SubmitReturnDecision - Подтверждение решения по возврату
func (s *ReturnsAPIService) SubmitReturnDecision(ctx context.Context, campaignId int64, orderId int64, returnId int64) (ImplResponse, error) {
	// TODO - update SubmitReturnDecision with the required logic for this service method.
	// Add api_returns_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, EmptyApiResponse{}) or use other options such as http.Ok ...
	// return Response(200, EmptyApiResponse{}), nil

	// TODO: Uncomment the next line to return response Response(400, ApiClientDataErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ApiClientDataErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ApiUnauthorizedErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ApiUnauthorizedErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(403, ApiForbiddenErrorResponse{}) or use other options such as http.Ok ...
	// return Response(403, ApiForbiddenErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(404, ApiNotFoundErrorResponse{}) or use other options such as http.Ok ...
	// return Response(404, ApiNotFoundErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(420, ApiLimitErrorResponse{}) or use other options such as http.Ok ...
	// return Response(420, ApiLimitErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(500, ApiServerErrorResponse{}) or use other options such as http.Ok ...
	// return Response(500, ApiServerErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("SubmitReturnDecision method not implemented")
}
