// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// ReturnInstanceStatusType : Логистический статус конкретного товара.
type ReturnInstanceStatusType string

// List of ReturnInstanceStatusType
const (
	CREATED ReturnInstanceStatusType = "CREATED"
	RECEIVED ReturnInstanceStatusType = "RECEIVED"
	IN_TRANSIT ReturnInstanceStatusType = "IN_TRANSIT"
	READY_FOR_PICKUP ReturnInstanceStatusType = "READY_FOR_PICKUP"
	PICKED ReturnInstanceStatusType = "PICKED"
	RECEIVED_ON_FULFILLMENT ReturnInstanceStatusType = "RECEIVED_ON_FULFILLMENT"
	CANCELLED ReturnInstanceStatusType = "CANCELLED"
	LOST ReturnInstanceStatusType = "LOST"
	UTILIZED ReturnInstanceStatusType = "UTILIZED"
	PREPARED_FOR_UTILIZATION ReturnInstanceStatusType = "PREPARED_FOR_UTILIZATION"
	EXPROPRIATED ReturnInstanceStatusType = "EXPROPRIATED"
	NOT_IN_DEMAND ReturnInstanceStatusType = "NOT_IN_DEMAND"
)

// AllowedReturnInstanceStatusTypeEnumValues is all the allowed values of ReturnInstanceStatusType enum
var AllowedReturnInstanceStatusTypeEnumValues = []ReturnInstanceStatusType{
	"CREATED",
	"RECEIVED",
	"IN_TRANSIT",
	"READY_FOR_PICKUP",
	"PICKED",
	"RECEIVED_ON_FULFILLMENT",
	"CANCELLED",
	"LOST",
	"UTILIZED",
	"PREPARED_FOR_UTILIZATION",
	"EXPROPRIATED",
	"NOT_IN_DEMAND",
}

// validReturnInstanceStatusTypeEnumValue provides a map of ReturnInstanceStatusTypes for fast verification of use input
var validReturnInstanceStatusTypeEnumValues = map[ReturnInstanceStatusType]struct{}{
	"CREATED": {},
	"RECEIVED": {},
	"IN_TRANSIT": {},
	"READY_FOR_PICKUP": {},
	"PICKED": {},
	"RECEIVED_ON_FULFILLMENT": {},
	"CANCELLED": {},
	"LOST": {},
	"UTILIZED": {},
	"PREPARED_FOR_UTILIZATION": {},
	"EXPROPRIATED": {},
	"NOT_IN_DEMAND": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ReturnInstanceStatusType) IsValid() bool {
	_, ok := validReturnInstanceStatusTypeEnumValues[v]
	return ok
}

// NewReturnInstanceStatusTypeFromValue returns a pointer to a valid ReturnInstanceStatusType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewReturnInstanceStatusTypeFromValue(v string) (ReturnInstanceStatusType, error) {
	ev := ReturnInstanceStatusType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ReturnInstanceStatusType: valid values are %v", v, AllowedReturnInstanceStatusTypeEnumValues)
}



// AssertReturnInstanceStatusTypeRequired checks if the required fields are not zero-ed
func AssertReturnInstanceStatusTypeRequired(obj ReturnInstanceStatusType) error {
	return nil
}

// AssertReturnInstanceStatusTypeConstraints checks if the values respects the defined constraints
func AssertReturnInstanceStatusTypeConstraints(obj ReturnInstanceStatusType) error {
	return nil
}
