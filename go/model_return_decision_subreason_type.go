// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// ReturnDecisionSubreasonType : Детали причин возврата:   * `DO_NOT_FIT`:     * `USER_DID_NOT_LIKE` — товар не понравился.     * `USER_CHANGED_MIND` — передумал покупать.     * `DELIVERED_TOO_LONG` — длительный срок доставки, поэтому передумал.    * `BAD_QUALITY`:     * `BAD_PACKAGE` — упаковка товара была нарушена.     * `DAMAGED` — царапины, сколы.     * `NOT_WORKING` — не включается / не работает.     * `INCOMPLETENESS` — некомплект (не хватает детали в наборе, к товару).    * `WRONG_ITEM`:     * `WRONG_ITEM` — не тот товар.     * `WRONG_COLOR` — не соответствует по цвету.     * `DID_NOT_MATCH_DESCRIPTION` — не соответствует заявленным характеристикам/описанию. 
type ReturnDecisionSubreasonType string

// List of ReturnDecisionSubreasonType
const (
	USER_DID_NOT_LIKE ReturnDecisionSubreasonType = "USER_DID_NOT_LIKE"
	USER_CHANGED_MIND ReturnDecisionSubreasonType = "USER_CHANGED_MIND"
	DELIVERED_TOO_LONG ReturnDecisionSubreasonType = "DELIVERED_TOO_LONG"
	BAD_PACKAGE ReturnDecisionSubreasonType = "BAD_PACKAGE"
	DAMAGED ReturnDecisionSubreasonType = "DAMAGED"
	NOT_WORKING ReturnDecisionSubreasonType = "NOT_WORKING"
	INCOMPLETENESS ReturnDecisionSubreasonType = "INCOMPLETENESS"
	WRONG_ITEM ReturnDecisionSubreasonType = "WRONG_ITEM"
	WRONG_COLOR ReturnDecisionSubreasonType = "WRONG_COLOR"
	DID_NOT_MATCH_DESCRIPTION ReturnDecisionSubreasonType = "DID_NOT_MATCH_DESCRIPTION"
	UNKNOWN ReturnDecisionSubreasonType = "UNKNOWN"
)

// AllowedReturnDecisionSubreasonTypeEnumValues is all the allowed values of ReturnDecisionSubreasonType enum
var AllowedReturnDecisionSubreasonTypeEnumValues = []ReturnDecisionSubreasonType{
	"USER_DID_NOT_LIKE",
	"USER_CHANGED_MIND",
	"DELIVERED_TOO_LONG",
	"BAD_PACKAGE",
	"DAMAGED",
	"NOT_WORKING",
	"INCOMPLETENESS",
	"WRONG_ITEM",
	"WRONG_COLOR",
	"DID_NOT_MATCH_DESCRIPTION",
	"UNKNOWN",
}

// validReturnDecisionSubreasonTypeEnumValue provides a map of ReturnDecisionSubreasonTypes for fast verification of use input
var validReturnDecisionSubreasonTypeEnumValues = map[ReturnDecisionSubreasonType]struct{}{
	"USER_DID_NOT_LIKE": {},
	"USER_CHANGED_MIND": {},
	"DELIVERED_TOO_LONG": {},
	"BAD_PACKAGE": {},
	"DAMAGED": {},
	"NOT_WORKING": {},
	"INCOMPLETENESS": {},
	"WRONG_ITEM": {},
	"WRONG_COLOR": {},
	"DID_NOT_MATCH_DESCRIPTION": {},
	"UNKNOWN": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ReturnDecisionSubreasonType) IsValid() bool {
	_, ok := validReturnDecisionSubreasonTypeEnumValues[v]
	return ok
}

// NewReturnDecisionSubreasonTypeFromValue returns a pointer to a valid ReturnDecisionSubreasonType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewReturnDecisionSubreasonTypeFromValue(v string) (ReturnDecisionSubreasonType, error) {
	ev := ReturnDecisionSubreasonType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ReturnDecisionSubreasonType: valid values are %v", v, AllowedReturnDecisionSubreasonTypeEnumValues)
}



// AssertReturnDecisionSubreasonTypeRequired checks if the required fields are not zero-ed
func AssertReturnDecisionSubreasonTypeRequired(obj ReturnDecisionSubreasonType) error {
	return nil
}

// AssertReturnDecisionSubreasonTypeConstraints checks if the values respects the defined constraints
func AssertReturnDecisionSubreasonTypeConstraints(obj ReturnDecisionSubreasonType) error {
	return nil
}
