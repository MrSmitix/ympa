// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// ReportSubStatusType : Подстатус генерации отчета: * `NO_DATA` — для такого отчета нет данных. * `TOO_LARGE` — отчет превысил допустимый размер — укажите меньший период времени или уточните условия запроса. * `RESOURCE_NOT_FOUND` — для такого отчета не удалось найти часть сущностей. 
type ReportSubStatusType string

// List of ReportSubStatusType
const (
	NO_DATA ReportSubStatusType = "NO_DATA"
	TOO_LARGE ReportSubStatusType = "TOO_LARGE"
	RESOURCE_NOT_FOUND ReportSubStatusType = "RESOURCE_NOT_FOUND"
)

// AllowedReportSubStatusTypeEnumValues is all the allowed values of ReportSubStatusType enum
var AllowedReportSubStatusTypeEnumValues = []ReportSubStatusType{
	"NO_DATA",
	"TOO_LARGE",
	"RESOURCE_NOT_FOUND",
}

// validReportSubStatusTypeEnumValue provides a map of ReportSubStatusTypes for fast verification of use input
var validReportSubStatusTypeEnumValues = map[ReportSubStatusType]struct{}{
	"NO_DATA": {},
	"TOO_LARGE": {},
	"RESOURCE_NOT_FOUND": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ReportSubStatusType) IsValid() bool {
	_, ok := validReportSubStatusTypeEnumValues[v]
	return ok
}

// NewReportSubStatusTypeFromValue returns a pointer to a valid ReportSubStatusType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewReportSubStatusTypeFromValue(v string) (ReportSubStatusType, error) {
	ev := ReportSubStatusType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ReportSubStatusType: valid values are %v", v, AllowedReportSubStatusTypeEnumValues)
}



// AssertReportSubStatusTypeRequired checks if the required fields are not zero-ed
func AssertReportSubStatusTypeRequired(obj ReportSubStatusType) error {
	return nil
}

// AssertReportSubStatusTypeConstraints checks if the values respects the defined constraints
func AssertReportSubStatusTypeConstraints(obj ReportSubStatusType) error {
	return nil
}
