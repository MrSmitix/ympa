// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// FieldStateType : Фильтр по заполненности или незаполненности поля:  * `SPECIFIED` — вывести товары, у которых поле заполнено. * `EMPTY` — вывести товары, у которых поле не заполнено. 
type FieldStateType string

// List of FieldStateType
const (
	SPECIFIED FieldStateType = "SPECIFIED"
	EMPTY FieldStateType = "EMPTY"
)

// AllowedFieldStateTypeEnumValues is all the allowed values of FieldStateType enum
var AllowedFieldStateTypeEnumValues = []FieldStateType{
	"SPECIFIED",
	"EMPTY",
}

// validFieldStateTypeEnumValue provides a map of FieldStateTypes for fast verification of use input
var validFieldStateTypeEnumValues = map[FieldStateType]struct{}{
	"SPECIFIED": {},
	"EMPTY": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FieldStateType) IsValid() bool {
	_, ok := validFieldStateTypeEnumValues[v]
	return ok
}

// NewFieldStateTypeFromValue returns a pointer to a valid FieldStateType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFieldStateTypeFromValue(v string) (FieldStateType, error) {
	ev := FieldStateType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for FieldStateType: valid values are %v", v, AllowedFieldStateTypeEnumValues)
}



// AssertFieldStateTypeRequired checks if the required fields are not zero-ed
func AssertFieldStateTypeRequired(obj FieldStateType) error {
	return nil
}

// AssertFieldStateTypeConstraints checks if the values respects the defined constraints
func AssertFieldStateTypeConstraints(obj FieldStateType) error {
	return nil
}
