// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// OfferConditionType : Тип уценки:  * `PREOWNED` —  бывший в употреблении товар, раньше принадлежал другому человеку. * `SHOWCASESAMPLE` — витринный образец. * `REFURBISHED` — повторная продажа товара. * `REDUCTION` — товар с дефектами. * `RENOVATED` — восстановленный товар. * `NOT_SPECIFIED` — не выбран.  `REFURBISHED` — специальное значение для одежды, обуви и аксессуаров. Используется только для уцененных товаров из этой категории. Другие значения для одежды, обуви и аксессуаров не используются. 
type OfferConditionType string

// List of OfferConditionType
const (
	PREOWNED OfferConditionType = "PREOWNED"
	SHOWCASESAMPLE OfferConditionType = "SHOWCASESAMPLE"
	REFURBISHED OfferConditionType = "REFURBISHED"
	REDUCTION OfferConditionType = "REDUCTION"
	RENOVATED OfferConditionType = "RENOVATED"
	NOT_SPECIFIED OfferConditionType = "NOT_SPECIFIED"
)

// AllowedOfferConditionTypeEnumValues is all the allowed values of OfferConditionType enum
var AllowedOfferConditionTypeEnumValues = []OfferConditionType{
	"PREOWNED",
	"SHOWCASESAMPLE",
	"REFURBISHED",
	"REDUCTION",
	"RENOVATED",
	"NOT_SPECIFIED",
}

// validOfferConditionTypeEnumValue provides a map of OfferConditionTypes for fast verification of use input
var validOfferConditionTypeEnumValues = map[OfferConditionType]struct{}{
	"PREOWNED": {},
	"SHOWCASESAMPLE": {},
	"REFURBISHED": {},
	"REDUCTION": {},
	"RENOVATED": {},
	"NOT_SPECIFIED": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OfferConditionType) IsValid() bool {
	_, ok := validOfferConditionTypeEnumValues[v]
	return ok
}

// NewOfferConditionTypeFromValue returns a pointer to a valid OfferConditionType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOfferConditionTypeFromValue(v string) (OfferConditionType, error) {
	ev := OfferConditionType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for OfferConditionType: valid values are %v", v, AllowedOfferConditionTypeEnumValues)
}



// AssertOfferConditionTypeRequired checks if the required fields are not zero-ed
func AssertOfferConditionTypeRequired(obj OfferConditionType) error {
	return nil
}

// AssertOfferConditionTypeConstraints checks if the values respects the defined constraints
func AssertOfferConditionTypeConstraints(obj OfferConditionType) error {
	return nil
}
