// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// ReportStatusType : Статус генерации отчета:  * `PENDING` — отчет ожидает генерации. * `PROCESSING` — отчет генерируется. * `FAILED` — во время генерации произошла ошибка. * `DONE` — отчет готов. 
type ReportStatusType string

// List of ReportStatusType
const (
	PENDING ReportStatusType = "PENDING"
	PROCESSING ReportStatusType = "PROCESSING"
	FAILED ReportStatusType = "FAILED"
	DONE ReportStatusType = "DONE"
)

// AllowedReportStatusTypeEnumValues is all the allowed values of ReportStatusType enum
var AllowedReportStatusTypeEnumValues = []ReportStatusType{
	"PENDING",
	"PROCESSING",
	"FAILED",
	"DONE",
}

// validReportStatusTypeEnumValue provides a map of ReportStatusTypes for fast verification of use input
var validReportStatusTypeEnumValues = map[ReportStatusType]struct{}{
	"PENDING": {},
	"PROCESSING": {},
	"FAILED": {},
	"DONE": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ReportStatusType) IsValid() bool {
	_, ok := validReportStatusTypeEnumValues[v]
	return ok
}

// NewReportStatusTypeFromValue returns a pointer to a valid ReportStatusType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewReportStatusTypeFromValue(v string) (ReportStatusType, error) {
	ev := ReportStatusType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ReportStatusType: valid values are %v", v, AllowedReportStatusTypeEnumValues)
}



// AssertReportStatusTypeRequired checks if the required fields are not zero-ed
func AssertReportStatusTypeRequired(obj ReportStatusType) error {
	return nil
}

// AssertReportStatusTypeConstraints checks if the values respects the defined constraints
func AssertReportStatusTypeConstraints(obj ReportStatusType) error {
	return nil
}
