// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// PriceSuggestType : Тип цены:  * `BUYBOX` — самая низкая цена на товар, по которой он продается сейчас. Эта цена обновляется в режиме реального времени. Если вы установите цену ниже, начнет показываться ваше предложение. Если для этого значения в параметре `price` указана цена, которая совпадает с вашей, значит, ваш товар уже показывается на витрине. Если кроме вас этот товар продают другие продавцы по такой же цене, их предложения также будут отображаться вместе с вашими по очереди. * `DEFAULT_OFFER` — рекомендованная Маркетом цена, которая привлекает покупателей. Рассчитывается только для популярных на сервисе товаров и обновляется раз в четыре часа. * `MIN_PRICE_MARKET` — минимальная цена на Маркете. Самая низкая цена среди всех предложений товара на Маркете во всех регионах, включая те, которые не видны на витрине. Эта цена обновляется в режиме реального времени и обеспечивает большее количество показов на Маркете, чем самая низкая или рекомендованная цена. 
type PriceSuggestType string

// List of PriceSuggestType
const (
	BUYBOX PriceSuggestType = "BUYBOX"
	DEFAULT_OFFER PriceSuggestType = "DEFAULT_OFFER"
	MIN_PRICE_MARKET PriceSuggestType = "MIN_PRICE_MARKET"
)

// AllowedPriceSuggestTypeEnumValues is all the allowed values of PriceSuggestType enum
var AllowedPriceSuggestTypeEnumValues = []PriceSuggestType{
	"BUYBOX",
	"DEFAULT_OFFER",
	"MIN_PRICE_MARKET",
}

// validPriceSuggestTypeEnumValue provides a map of PriceSuggestTypes for fast verification of use input
var validPriceSuggestTypeEnumValues = map[PriceSuggestType]struct{}{
	"BUYBOX": {},
	"DEFAULT_OFFER": {},
	"MIN_PRICE_MARKET": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PriceSuggestType) IsValid() bool {
	_, ok := validPriceSuggestTypeEnumValues[v]
	return ok
}

// NewPriceSuggestTypeFromValue returns a pointer to a valid PriceSuggestType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPriceSuggestTypeFromValue(v string) (PriceSuggestType, error) {
	ev := PriceSuggestType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for PriceSuggestType: valid values are %v", v, AllowedPriceSuggestTypeEnumValues)
}



// AssertPriceSuggestTypeRequired checks if the required fields are not zero-ed
func AssertPriceSuggestTypeRequired(obj PriceSuggestType) error {
	return nil
}

// AssertPriceSuggestTypeConstraints checks if the values respects the defined constraints
func AssertPriceSuggestTypeConstraints(obj PriceSuggestType) error {
	return nil
}
