// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// ReturnRequestDecisionType : Решение по возврату.
type ReturnRequestDecisionType string

// List of ReturnRequestDecisionType
const (
	REFUND_MONEY ReturnRequestDecisionType = "REFUND_MONEY"
	REFUND_MONEY_INCLUDING_SHIPMENT ReturnRequestDecisionType = "REFUND_MONEY_INCLUDING_SHIPMENT"
	REPAIR ReturnRequestDecisionType = "REPAIR"
	REPLACE ReturnRequestDecisionType = "REPLACE"
	SEND_TO_EXAMINATION ReturnRequestDecisionType = "SEND_TO_EXAMINATION"
	DECLINE_REFUND ReturnRequestDecisionType = "DECLINE_REFUND"
	OTHER_DECISION ReturnRequestDecisionType = "OTHER_DECISION"
)

// AllowedReturnRequestDecisionTypeEnumValues is all the allowed values of ReturnRequestDecisionType enum
var AllowedReturnRequestDecisionTypeEnumValues = []ReturnRequestDecisionType{
	"REFUND_MONEY",
	"REFUND_MONEY_INCLUDING_SHIPMENT",
	"REPAIR",
	"REPLACE",
	"SEND_TO_EXAMINATION",
	"DECLINE_REFUND",
	"OTHER_DECISION",
}

// validReturnRequestDecisionTypeEnumValue provides a map of ReturnRequestDecisionTypes for fast verification of use input
var validReturnRequestDecisionTypeEnumValues = map[ReturnRequestDecisionType]struct{}{
	"REFUND_MONEY": {},
	"REFUND_MONEY_INCLUDING_SHIPMENT": {},
	"REPAIR": {},
	"REPLACE": {},
	"SEND_TO_EXAMINATION": {},
	"DECLINE_REFUND": {},
	"OTHER_DECISION": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ReturnRequestDecisionType) IsValid() bool {
	_, ok := validReturnRequestDecisionTypeEnumValues[v]
	return ok
}

// NewReturnRequestDecisionTypeFromValue returns a pointer to a valid ReturnRequestDecisionType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewReturnRequestDecisionTypeFromValue(v string) (ReturnRequestDecisionType, error) {
	ev := ReturnRequestDecisionType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ReturnRequestDecisionType: valid values are %v", v, AllowedReturnRequestDecisionTypeEnumValues)
}



// AssertReturnRequestDecisionTypeRequired checks if the required fields are not zero-ed
func AssertReturnRequestDecisionTypeRequired(obj ReturnRequestDecisionType) error {
	return nil
}

// AssertReturnRequestDecisionTypeConstraints checks if the values respects the defined constraints
func AssertReturnRequestDecisionTypeConstraints(obj ReturnRequestDecisionType) error {
	return nil
}
