// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// OrderStatsStatusType : Текущий статус заказа:  * `CANCELLED_BEFORE_PROCESSING` — заказ отменен до начала его обработки.  * `CANCELLED_IN_DELIVERY` — заказ отменен во время его доставки.  * `CANCELLED_IN_PROCESSING` — заказ отменен во время его обработки.  * `DELIVERY` — заказ передан службе доставки.  * `DELIVERED` — заказ доставлен.  * `PARTIALLY_DELIVERED` — заказ частично доставлен.  * `PARTIALLY_RETURNED` — заказ частично возвращен покупателем.  * `PENDING` — заказ ожидает подтверждения.  * `PICKUP` — заказ доставлен в пункт выдачи.  * `PROCESSING` — заказ в обработке.  * `RESERVED` — товар зарезервирован на складе.  * `RETURNED` — заказ полностью возвращен покупателем.  * `UNKNOWN` — неизвестный статус заказа.  * `UNPAID` — заказ от юридического лица ожидает оплаты.  * `LOST` — заказ утерян. 
type OrderStatsStatusType string

// List of OrderStatsStatusType
const (
	CANCELLED_BEFORE_PROCESSING OrderStatsStatusType = "CANCELLED_BEFORE_PROCESSING"
	CANCELLED_IN_DELIVERY OrderStatsStatusType = "CANCELLED_IN_DELIVERY"
	CANCELLED_IN_PROCESSING OrderStatsStatusType = "CANCELLED_IN_PROCESSING"
	DELIVERY OrderStatsStatusType = "DELIVERY"
	DELIVERED OrderStatsStatusType = "DELIVERED"
	PARTIALLY_DELIVERED OrderStatsStatusType = "PARTIALLY_DELIVERED"
	PARTIALLY_RETURNED OrderStatsStatusType = "PARTIALLY_RETURNED"
	PENDING OrderStatsStatusType = "PENDING"
	PICKUP OrderStatsStatusType = "PICKUP"
	PROCESSING OrderStatsStatusType = "PROCESSING"
	RESERVED OrderStatsStatusType = "RESERVED"
	RETURNED OrderStatsStatusType = "RETURNED"
	UNKNOWN OrderStatsStatusType = "UNKNOWN"
	UNPAID OrderStatsStatusType = "UNPAID"
	LOST OrderStatsStatusType = "LOST"
)

// AllowedOrderStatsStatusTypeEnumValues is all the allowed values of OrderStatsStatusType enum
var AllowedOrderStatsStatusTypeEnumValues = []OrderStatsStatusType{
	"CANCELLED_BEFORE_PROCESSING",
	"CANCELLED_IN_DELIVERY",
	"CANCELLED_IN_PROCESSING",
	"DELIVERY",
	"DELIVERED",
	"PARTIALLY_DELIVERED",
	"PARTIALLY_RETURNED",
	"PENDING",
	"PICKUP",
	"PROCESSING",
	"RESERVED",
	"RETURNED",
	"UNKNOWN",
	"UNPAID",
	"LOST",
}

// validOrderStatsStatusTypeEnumValue provides a map of OrderStatsStatusTypes for fast verification of use input
var validOrderStatsStatusTypeEnumValues = map[OrderStatsStatusType]struct{}{
	"CANCELLED_BEFORE_PROCESSING": {},
	"CANCELLED_IN_DELIVERY": {},
	"CANCELLED_IN_PROCESSING": {},
	"DELIVERY": {},
	"DELIVERED": {},
	"PARTIALLY_DELIVERED": {},
	"PARTIALLY_RETURNED": {},
	"PENDING": {},
	"PICKUP": {},
	"PROCESSING": {},
	"RESERVED": {},
	"RETURNED": {},
	"UNKNOWN": {},
	"UNPAID": {},
	"LOST": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrderStatsStatusType) IsValid() bool {
	_, ok := validOrderStatsStatusTypeEnumValues[v]
	return ok
}

// NewOrderStatsStatusTypeFromValue returns a pointer to a valid OrderStatsStatusType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrderStatsStatusTypeFromValue(v string) (OrderStatsStatusType, error) {
	ev := OrderStatsStatusType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for OrderStatsStatusType: valid values are %v", v, AllowedOrderStatsStatusTypeEnumValues)
}



// AssertOrderStatsStatusTypeRequired checks if the required fields are not zero-ed
func AssertOrderStatsStatusTypeRequired(obj OrderStatsStatusType) error {
	return nil
}

// AssertOrderStatsStatusTypeConstraints checks if the values respects the defined constraints
func AssertOrderStatsStatusTypeConstraints(obj OrderStatsStatusType) error {
	return nil
}
