// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// OfferAvailabilityStatusType : Планы по поставкам:  * `ACTIVE` — поставки будут. * `INACTIVE` — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять. Через 60 дней после того, как товар закончится на складе, этот статус изменится на `DELISTED`. * `DELISTED` — архив: товар закончился на складе, и его поставок больше не будет. Если товар вернется на склад (например, покупатель вернет заказ), этот статус изменится на `INACTIVE`. 
type OfferAvailabilityStatusType string

// List of OfferAvailabilityStatusType
const (
	ACTIVE OfferAvailabilityStatusType = "ACTIVE"
	INACTIVE OfferAvailabilityStatusType = "INACTIVE"
	DELISTED OfferAvailabilityStatusType = "DELISTED"
)

// AllowedOfferAvailabilityStatusTypeEnumValues is all the allowed values of OfferAvailabilityStatusType enum
var AllowedOfferAvailabilityStatusTypeEnumValues = []OfferAvailabilityStatusType{
	"ACTIVE",
	"INACTIVE",
	"DELISTED",
}

// validOfferAvailabilityStatusTypeEnumValue provides a map of OfferAvailabilityStatusTypes for fast verification of use input
var validOfferAvailabilityStatusTypeEnumValues = map[OfferAvailabilityStatusType]struct{}{
	"ACTIVE": {},
	"INACTIVE": {},
	"DELISTED": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OfferAvailabilityStatusType) IsValid() bool {
	_, ok := validOfferAvailabilityStatusTypeEnumValues[v]
	return ok
}

// NewOfferAvailabilityStatusTypeFromValue returns a pointer to a valid OfferAvailabilityStatusType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOfferAvailabilityStatusTypeFromValue(v string) (OfferAvailabilityStatusType, error) {
	ev := OfferAvailabilityStatusType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for OfferAvailabilityStatusType: valid values are %v", v, AllowedOfferAvailabilityStatusTypeEnumValues)
}



// AssertOfferAvailabilityStatusTypeRequired checks if the required fields are not zero-ed
func AssertOfferAvailabilityStatusTypeRequired(obj OfferAvailabilityStatusType) error {
	return nil
}

// AssertOfferAvailabilityStatusTypeConstraints checks if the values respects the defined constraints
func AssertOfferAvailabilityStatusTypeConstraints(obj OfferAvailabilityStatusType) error {
	return nil
}
