/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ympa_go_gin_server

import (
	"github.com/gin-gonic/gin"
)

type ReportsAPI struct {
}

// Post /reports/boost-consolidated/generate
// Отчет по бусту продаж 
func (api *ReportsAPI) GenerateBoostConsolidatedReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/competitors-position/generate
// Отчет «Конкурентная позиция» 
func (api *ReportsAPI) GenerateCompetitorsPositionReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/goods-feedback/generate
// Отчет по отзывам о товарах 
func (api *ReportsAPI) GenerateGoodsFeedbackReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/goods-movement/generate
// Отчет по движению товаров 
func (api *ReportsAPI) GenerateGoodsMovementReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/goods-realization/generate
// Отчет по реализации 
func (api *ReportsAPI) GenerateGoodsRealizationReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/goods-turnover/generate
// Отчет по оборачиваемости 
func (api *ReportsAPI) GenerateGoodsTurnoverReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/documents/labels/generate
// Готовые ярлыки‑наклейки на все коробки в нескольких заказах 
func (api *ReportsAPI) GenerateMassOrderLabelsReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/prices/generate
// Отчет «Цены на рынке» 
func (api *ReportsAPI) GeneratePricesReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/shelf-statistics/generate
// Отчет по полкам 
func (api *ReportsAPI) GenerateShelfsStatisticsReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/documents/shipment-list/generate
// Получение листа сборки 
func (api *ReportsAPI) GenerateShipmentListDocumentReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/shows-sales/generate
// Отчет «Аналитика продаж» 
func (api *ReportsAPI) GenerateShowsSalesReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/stocks-on-warehouses/generate
// Отчет по остаткам на складах 
func (api *ReportsAPI) GenerateStocksOnWarehousesReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/united-marketplace-services/generate
// Отчет по стоимости услуг 
func (api *ReportsAPI) GenerateUnitedMarketplaceServicesReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/united-netting/generate
// Отчет по платежам 
func (api *ReportsAPI) GenerateUnitedNettingReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/united-orders/generate
// Отчет по заказам 
func (api *ReportsAPI) GenerateUnitedOrdersReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /reports/info/:reportId
// Получение заданного отчета 
func (api *ReportsAPI) GetReportInfo(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

