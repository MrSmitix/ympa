// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"time"
	"errors"
)



// GenerateUnitedMarketplaceServicesReportRequest - Данные, необходимые для генерации отчета: идентификатор магазина, период, за который нужен отчет, а также фильтры. 
type GenerateUnitedMarketplaceServicesReportRequest struct {

	// Идентификатор бизнеса.
	BusinessId int64 `json:"businessId"`

	// {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Начало периода, включительно. 
	DateTimeFrom time.Time `json:"dateTimeFrom,omitempty"`

	// {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Конец периода, включительно. Максимальный период — 1 год. 
	DateTimeTo time.Time `json:"dateTimeTo,omitempty"`

	// Начало периода, включительно.
	DateFrom string `json:"dateFrom,omitempty"`

	// Конец периода, включительно. Максимальный период — 1 год.
	DateTo string `json:"dateTo,omitempty"`

	// Начальный год формирования акта.
	YearFrom int32 `json:"yearFrom,omitempty"`

	// Начальный номер месяца формирования акта.
	MonthFrom int32 `json:"monthFrom,omitempty"`

	// Конечный год формирования акта.
	YearTo int32 `json:"yearTo,omitempty"`

	// Конечный номер месяца формирования акта.
	MonthTo int32 `json:"monthTo,omitempty"`

	// Список моделей, которые нужны в отчете. 
	PlacementPrograms *[]PlacementType `json:"placementPrograms,omitempty"`

	// Список ИНН, которые нужны в отчете.
	Inns *[]string `json:"inns,omitempty"`

	// Список магазинов, которые нужны в отчете.
	CampaignIds *[]int64 `json:"campaignIds,omitempty"`
}

// AssertGenerateUnitedMarketplaceServicesReportRequestRequired checks if the required fields are not zero-ed
func AssertGenerateUnitedMarketplaceServicesReportRequestRequired(obj GenerateUnitedMarketplaceServicesReportRequest) error {
	elements := map[string]interface{}{
		"businessId": obj.BusinessId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertGenerateUnitedMarketplaceServicesReportRequestConstraints checks if the values respects the defined constraints
func AssertGenerateUnitedMarketplaceServicesReportRequestConstraints(obj GenerateUnitedMarketplaceServicesReportRequest) error {
	if obj.MonthFrom < 1 {
		return &ParsingError{Param: "MonthFrom", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.MonthFrom > 12 {
		return &ParsingError{Param: "MonthFrom", Err: errors.New(errMsgMaxValueConstraint)}
	}
	if obj.MonthTo < 1 {
		return &ParsingError{Param: "MonthTo", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.MonthTo > 12 {
		return &ParsingError{Param: "MonthTo", Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
