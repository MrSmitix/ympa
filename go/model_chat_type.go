// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// ChatType : Тип чата:  * `CHAT` — чат с покупателем. * `ARBITRAGE` — спор. 
type ChatType string

// List of ChatType
const (
	CHAT ChatType = "CHAT"
	ARBITRAGE ChatType = "ARBITRAGE"
)

// AllowedChatTypeEnumValues is all the allowed values of ChatType enum
var AllowedChatTypeEnumValues = []ChatType{
	"CHAT",
	"ARBITRAGE",
}

// validChatTypeEnumValue provides a map of ChatTypes for fast verification of use input
var validChatTypeEnumValues = map[ChatType]struct{}{
	"CHAT": {},
	"ARBITRAGE": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ChatType) IsValid() bool {
	_, ok := validChatTypeEnumValues[v]
	return ok
}

// NewChatTypeFromValue returns a pointer to a valid ChatType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewChatTypeFromValue(v string) (ChatType, error) {
	ev := ChatType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ChatType: valid values are %v", v, AllowedChatTypeEnumValues)
}



// AssertChatTypeRequired checks if the required fields are not zero-ed
func AssertChatTypeRequired(obj ChatType) error {
	return nil
}

// AssertChatTypeConstraints checks if the values respects the defined constraints
func AssertChatTypeConstraints(obj ChatType) error {
	return nil
}
