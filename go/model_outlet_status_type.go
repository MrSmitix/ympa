// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// OutletStatusType : Статус точки продаж.  Возможные значения:  * `AT_MODERATION` — проверяется. * `FAILED` — не прошла проверку и отклонена модератором. * `MODERATED` — проверена и одобрена. * `NONMODERATED` — новая точка, нуждается в проверке. 
type OutletStatusType string

// List of OutletStatusType
const (
	AT_MODERATION OutletStatusType = "AT_MODERATION"
	FAILED OutletStatusType = "FAILED"
	MODERATED OutletStatusType = "MODERATED"
	NONMODERATED OutletStatusType = "NONMODERATED"
	UNKNOWN OutletStatusType = "UNKNOWN"
)

// AllowedOutletStatusTypeEnumValues is all the allowed values of OutletStatusType enum
var AllowedOutletStatusTypeEnumValues = []OutletStatusType{
	"AT_MODERATION",
	"FAILED",
	"MODERATED",
	"NONMODERATED",
	"UNKNOWN",
}

// validOutletStatusTypeEnumValue provides a map of OutletStatusTypes for fast verification of use input
var validOutletStatusTypeEnumValues = map[OutletStatusType]struct{}{
	"AT_MODERATION": {},
	"FAILED": {},
	"MODERATED": {},
	"NONMODERATED": {},
	"UNKNOWN": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OutletStatusType) IsValid() bool {
	_, ok := validOutletStatusTypeEnumValues[v]
	return ok
}

// NewOutletStatusTypeFromValue returns a pointer to a valid OutletStatusType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOutletStatusTypeFromValue(v string) (OutletStatusType, error) {
	ev := OutletStatusType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for OutletStatusType: valid values are %v", v, AllowedOutletStatusTypeEnumValues)
}



// AssertOutletStatusTypeRequired checks if the required fields are not zero-ed
func AssertOutletStatusTypeRequired(obj OutletStatusType) error {
	return nil
}

// AssertOutletStatusTypeConstraints checks if the values respects the defined constraints
func AssertOutletStatusTypeConstraints(obj OutletStatusType) error {
	return nil
}
