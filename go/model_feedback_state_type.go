// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// FeedbackStateType : Статус отзыва:  * `LAST` — актуален. * `PREVIOUS` — устарел. * `DELETED` — удален. 
type FeedbackStateType string

// List of FeedbackStateType
const (
	LAST FeedbackStateType = "LAST"
	PREVIOUS FeedbackStateType = "PREVIOUS"
	DELETED FeedbackStateType = "DELETED"
)

// AllowedFeedbackStateTypeEnumValues is all the allowed values of FeedbackStateType enum
var AllowedFeedbackStateTypeEnumValues = []FeedbackStateType{
	"LAST",
	"PREVIOUS",
	"DELETED",
}

// validFeedbackStateTypeEnumValue provides a map of FeedbackStateTypes for fast verification of use input
var validFeedbackStateTypeEnumValues = map[FeedbackStateType]struct{}{
	"LAST": {},
	"PREVIOUS": {},
	"DELETED": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FeedbackStateType) IsValid() bool {
	_, ok := validFeedbackStateTypeEnumValues[v]
	return ok
}

// NewFeedbackStateTypeFromValue returns a pointer to a valid FeedbackStateType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFeedbackStateTypeFromValue(v string) (FeedbackStateType, error) {
	ev := FeedbackStateType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for FeedbackStateType: valid values are %v", v, AllowedFeedbackStateTypeEnumValues)
}



// AssertFeedbackStateTypeRequired checks if the required fields are not zero-ed
func AssertFeedbackStateTypeRequired(obj FeedbackStateType) error {
	return nil
}

// AssertFeedbackStateTypeConstraints checks if the values respects the defined constraints
func AssertFeedbackStateTypeConstraints(obj FeedbackStateType) error {
	return nil
}
