// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// PaymentFrequencyType : Частота выплат:  * `DAILY` — ежедневно. * `WEEKLY` — раз в неделю. * `BIWEEKLY` — раз в две недели. * `MONTHLY` — раз в месяц.  Подробнее о графике выплат читайте [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/introduction/rates/acquiring.html). 
type PaymentFrequencyType string

// List of PaymentFrequencyType
const (
	DAILY PaymentFrequencyType = "DAILY"
	WEEKLY PaymentFrequencyType = "WEEKLY"
	BIWEEKLY PaymentFrequencyType = "BIWEEKLY"
	MONTHLY PaymentFrequencyType = "MONTHLY"
)

// AllowedPaymentFrequencyTypeEnumValues is all the allowed values of PaymentFrequencyType enum
var AllowedPaymentFrequencyTypeEnumValues = []PaymentFrequencyType{
	"DAILY",
	"WEEKLY",
	"BIWEEKLY",
	"MONTHLY",
}

// validPaymentFrequencyTypeEnumValue provides a map of PaymentFrequencyTypes for fast verification of use input
var validPaymentFrequencyTypeEnumValues = map[PaymentFrequencyType]struct{}{
	"DAILY": {},
	"WEEKLY": {},
	"BIWEEKLY": {},
	"MONTHLY": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PaymentFrequencyType) IsValid() bool {
	_, ok := validPaymentFrequencyTypeEnumValues[v]
	return ok
}

// NewPaymentFrequencyTypeFromValue returns a pointer to a valid PaymentFrequencyType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPaymentFrequencyTypeFromValue(v string) (PaymentFrequencyType, error) {
	ev := PaymentFrequencyType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for PaymentFrequencyType: valid values are %v", v, AllowedPaymentFrequencyTypeEnumValues)
}



// AssertPaymentFrequencyTypeRequired checks if the required fields are not zero-ed
func AssertPaymentFrequencyTypeRequired(obj PaymentFrequencyType) error {
	return nil
}

// AssertPaymentFrequencyTypeConstraints checks if the values respects the defined constraints
func AssertPaymentFrequencyTypeConstraints(obj PaymentFrequencyType) error {
	return nil
}
