// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"time"
)



// FeedDto - Информация о прайс-листе.
type FeedDto struct {

	// Идентификатор прайс-листа.
	Id int64 `json:"id,omitempty"`

	// Логин для авторизации при скачивании прайс-листа. Параметр выводится при размещении прайс-листа на сайте магазина и в случае ограничения доступа к нему. 
	Login string `json:"login,omitempty"`

	// Имя файла, содержащего прайс-лист. Параметр выводится при размещении прайс-листа на сервере Маркета. 
	Name string `json:"name,omitempty"`

	// Пароль для авторизации при скачивании прайс-листа. Параметр выводится при размещении прайс-листа на сайте магазина и в случае ограничения доступа к нему. 
	Password string `json:"password,omitempty"`

	// Дата загрузки прайс-листа на Маркет.  Формат даты: `ДД-ММ-ГГГГ`.  Параметр выводится при размещении прайс-листа на сервере Маркета. 
	UploadDate time.Time `json:"uploadDate,omitempty"`

	// URL прайс-листа. Параметр выводится при размещении прайс-листа на сайте магазина. 
	Url string `json:"url,omitempty"`

	Content FeedContentDto `json:"content,omitempty"`

	Download FeedDownloadDto `json:"download,omitempty"`

	Placement FeedPlacementDto `json:"placement,omitempty"`

	Publication FeedPublicationDto `json:"publication,omitempty"`
}

// AssertFeedDtoRequired checks if the required fields are not zero-ed
func AssertFeedDtoRequired(obj FeedDto) error {
	if err := AssertFeedContentDtoRequired(obj.Content); err != nil {
		return err
	}
	if err := AssertFeedDownloadDtoRequired(obj.Download); err != nil {
		return err
	}
	if err := AssertFeedPlacementDtoRequired(obj.Placement); err != nil {
		return err
	}
	if err := AssertFeedPublicationDtoRequired(obj.Publication); err != nil {
		return err
	}
	return nil
}

// AssertFeedDtoConstraints checks if the values respects the defined constraints
func AssertFeedDtoConstraints(obj FeedDto) error {
	if err := AssertFeedContentDtoConstraints(obj.Content); err != nil {
		return err
	}
	if err := AssertFeedDownloadDtoConstraints(obj.Download); err != nil {
		return err
	}
	if err := AssertFeedPlacementDtoConstraints(obj.Placement); err != nil {
		return err
	}
	if err := AssertFeedPublicationDtoConstraints(obj.Publication); err != nil {
		return err
	}
	return nil
}
