// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"errors"
)



// OrderItemModificationDto - Список товаров в заказе.  Если магазин не передал информацию о товаре во входных данных, он будет удален из заказа.  Обязательный параметр. 
type OrderItemModificationDto struct {

	// Идентификатор товара в рамках заказа.  Получить идентификатор можно с помощью ресурсов [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).  Обязательный параметр. 
	Id int64 `json:"id"`

	// Новое количество товара.
	Count int32 `json:"count"`

	// Информация о маркировке единиц товара.  Передавайте в запросе все единицы товара, который подлежит маркировке.  Обязательный параметр, если в заказе есть товары, подлежащие маркировке [в системе «Честный ЗНАК»](https://честныйзнак.рф/). 
	Instances *[]BriefOrderItemInstanceDto `json:"instances,omitempty"`
}

// AssertOrderItemModificationDtoRequired checks if the required fields are not zero-ed
func AssertOrderItemModificationDtoRequired(obj OrderItemModificationDto) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"count": obj.Count,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if obj.Instances != nil {
		for _, el := range *obj.Instances {
			if err := AssertBriefOrderItemInstanceDtoRequired(el); err != nil {
				return err
			}
		}
	}
	return nil
}

// AssertOrderItemModificationDtoConstraints checks if the values respects the defined constraints
func AssertOrderItemModificationDtoConstraints(obj OrderItemModificationDto) error {
	if obj.Count < 0 {
		return &ParsingError{Param: "Count", Err: errors.New(errMsgMinValueConstraint)}
	}
    if obj.Instances != nil {
     	for _, el := range *obj.Instances {
     		if err := AssertBriefOrderItemInstanceDtoConstraints(el); err != nil {
     			return err
     		}
     	}
    }
	return nil
}
