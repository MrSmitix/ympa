// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// MechanicsType : Тип акции:  * `DIRECT_DISCOUNT` — прямая скидка.  * `BLUE_FLASH` — флеш-акция.  * `MARKET_PROMOCODE` — скидка по промокоду. 
type MechanicsType string

// List of MechanicsType
const (
	DIRECT_DISCOUNT MechanicsType = "DIRECT_DISCOUNT"
	BLUE_FLASH MechanicsType = "BLUE_FLASH"
	MARKET_PROMOCODE MechanicsType = "MARKET_PROMOCODE"
)

// AllowedMechanicsTypeEnumValues is all the allowed values of MechanicsType enum
var AllowedMechanicsTypeEnumValues = []MechanicsType{
	"DIRECT_DISCOUNT",
	"BLUE_FLASH",
	"MARKET_PROMOCODE",
}

// validMechanicsTypeEnumValue provides a map of MechanicsTypes for fast verification of use input
var validMechanicsTypeEnumValues = map[MechanicsType]struct{}{
	"DIRECT_DISCOUNT": {},
	"BLUE_FLASH": {},
	"MARKET_PROMOCODE": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MechanicsType) IsValid() bool {
	_, ok := validMechanicsTypeEnumValues[v]
	return ok
}

// NewMechanicsTypeFromValue returns a pointer to a valid MechanicsType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMechanicsTypeFromValue(v string) (MechanicsType, error) {
	ev := MechanicsType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for MechanicsType: valid values are %v", v, AllowedMechanicsTypeEnumValues)
}



// AssertMechanicsTypeRequired checks if the required fields are not zero-ed
func AssertMechanicsTypeRequired(obj MechanicsType) error {
	return nil
}

// AssertMechanicsTypeConstraints checks if the values respects the defined constraints
func AssertMechanicsTypeConstraints(obj MechanicsType) error {
	return nil
}
