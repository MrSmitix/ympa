// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// ShipmentType : Способ отгрузки заказов:  * `IMPORT` — вы самостоятельно привозите заказы в выбранный сортировочный центр или пункт приема заказов. * `WITHDRAW` — вы отгружаете заказы со своего склада курьерам Яндекс Маркета. 
type ShipmentType string

// List of ShipmentType
const (
	IMPORT ShipmentType = "IMPORT"
	WITHDRAW ShipmentType = "WITHDRAW"
)

// AllowedShipmentTypeEnumValues is all the allowed values of ShipmentType enum
var AllowedShipmentTypeEnumValues = []ShipmentType{
	"IMPORT",
	"WITHDRAW",
}

// validShipmentTypeEnumValue provides a map of ShipmentTypes for fast verification of use input
var validShipmentTypeEnumValues = map[ShipmentType]struct{}{
	"IMPORT": {},
	"WITHDRAW": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ShipmentType) IsValid() bool {
	_, ok := validShipmentTypeEnumValues[v]
	return ok
}

// NewShipmentTypeFromValue returns a pointer to a valid ShipmentType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewShipmentTypeFromValue(v string) (ShipmentType, error) {
	ev := ShipmentType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ShipmentType: valid values are %v", v, AllowedShipmentTypeEnumValues)
}



// AssertShipmentTypeRequired checks if the required fields are not zero-ed
func AssertShipmentTypeRequired(obj ShipmentType) error {
	return nil
}

// AssertShipmentTypeConstraints checks if the values respects the defined constraints
func AssertShipmentTypeConstraints(obj ShipmentType) error {
	return nil
}
