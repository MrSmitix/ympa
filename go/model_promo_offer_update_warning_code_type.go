// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// PromoOfferUpdateWarningCodeType : Предупреждение, которое появилось при добавлении товара:  * `DEEP_DISCOUNT_OFFER` — большая разница с ценой в каталоге. Проверьте, нет ли ошибки.  * `CATALOG_PRICE_IS_LOWER_THAN_PROMO` — [базовая цена](*basic-price) в кабинете ниже цены по акции. У товара в акции будет отображаться базовая цена.  * `SHOP_PRICES_ARE_LOWER_THAN_PROMO` — цена в отдельном магазине ниже цены по акции. У товара в акции будет отображаться цена в магазине. Для остальных магазинов будет действовать цена по акции.  * `PROMOCODE_PRICE_MORE_THAN_MAX_FAIR_PRICE` — в отдельном магазине цена с учетом промокода выше максимально возможной цены. Товар не будет участвовать в акции.  * `SHOP_OFFER_NOT_ELIGIBLE_FOR_PROMO` — товар в отдельном магазине не подходит под условия акции. 
type PromoOfferUpdateWarningCodeType string

// List of PromoOfferUpdateWarningCodeType
const (
	DEEP_DISCOUNT_OFFER PromoOfferUpdateWarningCodeType = "DEEP_DISCOUNT_OFFER"
	CATALOG_PRICE_IS_LOWER_THAN_PROMO PromoOfferUpdateWarningCodeType = "CATALOG_PRICE_IS_LOWER_THAN_PROMO"
	SHOP_PRICES_ARE_LOWER_THAN_PROMO PromoOfferUpdateWarningCodeType = "SHOP_PRICES_ARE_LOWER_THAN_PROMO"
	PROMOCODE_PRICE_MORE_THAN_MAX_FAIR_PRICE PromoOfferUpdateWarningCodeType = "PROMOCODE_PRICE_MORE_THAN_MAX_FAIR_PRICE"
	SHOP_OFFER_NOT_ELIGIBLE_FOR_PROMO PromoOfferUpdateWarningCodeType = "SHOP_OFFER_NOT_ELIGIBLE_FOR_PROMO"
)

// AllowedPromoOfferUpdateWarningCodeTypeEnumValues is all the allowed values of PromoOfferUpdateWarningCodeType enum
var AllowedPromoOfferUpdateWarningCodeTypeEnumValues = []PromoOfferUpdateWarningCodeType{
	"DEEP_DISCOUNT_OFFER",
	"CATALOG_PRICE_IS_LOWER_THAN_PROMO",
	"SHOP_PRICES_ARE_LOWER_THAN_PROMO",
	"PROMOCODE_PRICE_MORE_THAN_MAX_FAIR_PRICE",
	"SHOP_OFFER_NOT_ELIGIBLE_FOR_PROMO",
}

// validPromoOfferUpdateWarningCodeTypeEnumValue provides a map of PromoOfferUpdateWarningCodeTypes for fast verification of use input
var validPromoOfferUpdateWarningCodeTypeEnumValues = map[PromoOfferUpdateWarningCodeType]struct{}{
	"DEEP_DISCOUNT_OFFER": {},
	"CATALOG_PRICE_IS_LOWER_THAN_PROMO": {},
	"SHOP_PRICES_ARE_LOWER_THAN_PROMO": {},
	"PROMOCODE_PRICE_MORE_THAN_MAX_FAIR_PRICE": {},
	"SHOP_OFFER_NOT_ELIGIBLE_FOR_PROMO": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PromoOfferUpdateWarningCodeType) IsValid() bool {
	_, ok := validPromoOfferUpdateWarningCodeTypeEnumValues[v]
	return ok
}

// NewPromoOfferUpdateWarningCodeTypeFromValue returns a pointer to a valid PromoOfferUpdateWarningCodeType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPromoOfferUpdateWarningCodeTypeFromValue(v string) (PromoOfferUpdateWarningCodeType, error) {
	ev := PromoOfferUpdateWarningCodeType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for PromoOfferUpdateWarningCodeType: valid values are %v", v, AllowedPromoOfferUpdateWarningCodeTypeEnumValues)
}



// AssertPromoOfferUpdateWarningCodeTypeRequired checks if the required fields are not zero-ed
func AssertPromoOfferUpdateWarningCodeTypeRequired(obj PromoOfferUpdateWarningCodeType) error {
	return nil
}

// AssertPromoOfferUpdateWarningCodeTypeConstraints checks if the values respects the defined constraints
func AssertPromoOfferUpdateWarningCodeTypeConstraints(obj PromoOfferUpdateWarningCodeType) error {
	return nil
}
