// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// OfferType : Особый тип товара:  * `MEDICINE` — лекарства. * `BOOK` — бумажные и электронные книги. * `AUDIOBOOK` — аудиокниги. * `ARTIST_TITLE` — музыкальная и видеопродукция. * `ON_DEMAND` — товары на заказ.  {% note info \"Если ваш товар — книга\" %}  Укажите год издания в характеристиках товара. [Подробнее о параметре](../../reference/business-assortment/updateOfferMappings.md#offerparamdto)  {% endnote %} 
type OfferType string

// List of OfferType
const (
	DEFAULT OfferType = "DEFAULT"
	MEDICINE OfferType = "MEDICINE"
	BOOK OfferType = "BOOK"
	AUDIOBOOK OfferType = "AUDIOBOOK"
	ARTIST_TITLE OfferType = "ARTIST_TITLE"
	ON_DEMAND OfferType = "ON_DEMAND"
)

// AllowedOfferTypeEnumValues is all the allowed values of OfferType enum
var AllowedOfferTypeEnumValues = []OfferType{
	"DEFAULT",
	"MEDICINE",
	"BOOK",
	"AUDIOBOOK",
	"ARTIST_TITLE",
	"ON_DEMAND",
}

// validOfferTypeEnumValue provides a map of OfferTypes for fast verification of use input
var validOfferTypeEnumValues = map[OfferType]struct{}{
	"DEFAULT": {},
	"MEDICINE": {},
	"BOOK": {},
	"AUDIOBOOK": {},
	"ARTIST_TITLE": {},
	"ON_DEMAND": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OfferType) IsValid() bool {
	_, ok := validOfferTypeEnumValues[v]
	return ok
}

// NewOfferTypeFromValue returns a pointer to a valid OfferType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOfferTypeFromValue(v string) (OfferType, error) {
	ev := OfferType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for OfferType: valid values are %v", v, AllowedOfferTypeEnumValues)
}



// AssertOfferTypeRequired checks if the required fields are not zero-ed
func AssertOfferTypeRequired(obj OfferType) error {
	return nil
}

// AssertOfferTypeConstraints checks if the values respects the defined constraints
func AssertOfferTypeConstraints(obj OfferType) error {
	return nil
}
