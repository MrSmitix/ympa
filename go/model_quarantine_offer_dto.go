// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server




// QuarantineOfferDto - Товар в карантине.
type QuarantineOfferDto struct {

	// Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
	OfferId string `json:"offerId,omitempty" validate:"regexp=^[^\\\\x00-\\\\x08\\\\x0A-\\\\x1f\\\\x7f]{1,255}$"`

	CurrentPrice BasePriceDto `json:"currentPrice,omitempty"`

	LastValidPrice BasePriceDto `json:"lastValidPrice,omitempty"`

	// Причины попадания товара в карантин.
	Verdicts *[]PriceQuarantineVerdictDto `json:"verdicts,omitempty"`
}

// AssertQuarantineOfferDtoRequired checks if the required fields are not zero-ed
func AssertQuarantineOfferDtoRequired(obj QuarantineOfferDto) error {
	if err := AssertBasePriceDtoRequired(obj.CurrentPrice); err != nil {
		return err
	}
	if err := AssertBasePriceDtoRequired(obj.LastValidPrice); err != nil {
		return err
	}
	if obj.Verdicts != nil {
		for _, el := range *obj.Verdicts {
			if err := AssertPriceQuarantineVerdictDtoRequired(el); err != nil {
				return err
			}
		}
	}
	return nil
}

// AssertQuarantineOfferDtoConstraints checks if the values respects the defined constraints
func AssertQuarantineOfferDtoConstraints(obj QuarantineOfferDto) error {
	if err := AssertBasePriceDtoConstraints(obj.CurrentPrice); err != nil {
		return err
	}
	if err := AssertBasePriceDtoConstraints(obj.LastValidPrice); err != nil {
		return err
	}
    if obj.Verdicts != nil {
     	for _, el := range *obj.Verdicts {
     		if err := AssertPriceQuarantineVerdictDtoConstraints(el); err != nil {
     			return err
     		}
     	}
    }
	return nil
}
