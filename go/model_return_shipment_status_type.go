// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// ReturnShipmentStatusType : Статус передачи возврата:  * `CREATED` — возврат создан.  * `RECEIVED` — принят у покупателя.  * `IN_TRANSIT` — возврат в пути.  * `READY_FOR_PICKUP` — возврат готов к выдаче магазину.  * `PICKED` — возврат выдан магазину.  * `LOST` — возврат утерян при транспортировке.  * `CANCELLED` — возврат отменен.  * `FULFILMENT_RECEIVED` — возврат принят на складе Маркета.  * `PREPARED_FOR_UTILIZATION` — возврат передан в утилизацию.  * `UTILIZED` — возврат утилизирован. 
type ReturnShipmentStatusType string

// List of ReturnShipmentStatusType
const (
	CREATED ReturnShipmentStatusType = "CREATED"
	RECEIVED ReturnShipmentStatusType = "RECEIVED"
	IN_TRANSIT ReturnShipmentStatusType = "IN_TRANSIT"
	READY_FOR_PICKUP ReturnShipmentStatusType = "READY_FOR_PICKUP"
	PICKED ReturnShipmentStatusType = "PICKED"
	LOST ReturnShipmentStatusType = "LOST"
	EXPIRED ReturnShipmentStatusType = "EXPIRED"
	CANCELLED ReturnShipmentStatusType = "CANCELLED"
	FULFILMENT_RECEIVED ReturnShipmentStatusType = "FULFILMENT_RECEIVED"
	PREPARED_FOR_UTILIZATION ReturnShipmentStatusType = "PREPARED_FOR_UTILIZATION"
	NOT_IN_DEMAND ReturnShipmentStatusType = "NOT_IN_DEMAND"
	UTILIZED ReturnShipmentStatusType = "UTILIZED"
	READY_FOR_EXPROPRIATION ReturnShipmentStatusType = "READY_FOR_EXPROPRIATION"
	RECEIVED_FOR_EXPROPRIATION ReturnShipmentStatusType = "RECEIVED_FOR_EXPROPRIATION"
)

// AllowedReturnShipmentStatusTypeEnumValues is all the allowed values of ReturnShipmentStatusType enum
var AllowedReturnShipmentStatusTypeEnumValues = []ReturnShipmentStatusType{
	"CREATED",
	"RECEIVED",
	"IN_TRANSIT",
	"READY_FOR_PICKUP",
	"PICKED",
	"LOST",
	"EXPIRED",
	"CANCELLED",
	"FULFILMENT_RECEIVED",
	"PREPARED_FOR_UTILIZATION",
	"NOT_IN_DEMAND",
	"UTILIZED",
	"READY_FOR_EXPROPRIATION",
	"RECEIVED_FOR_EXPROPRIATION",
}

// validReturnShipmentStatusTypeEnumValue provides a map of ReturnShipmentStatusTypes for fast verification of use input
var validReturnShipmentStatusTypeEnumValues = map[ReturnShipmentStatusType]struct{}{
	"CREATED": {},
	"RECEIVED": {},
	"IN_TRANSIT": {},
	"READY_FOR_PICKUP": {},
	"PICKED": {},
	"LOST": {},
	"EXPIRED": {},
	"CANCELLED": {},
	"FULFILMENT_RECEIVED": {},
	"PREPARED_FOR_UTILIZATION": {},
	"NOT_IN_DEMAND": {},
	"UTILIZED": {},
	"READY_FOR_EXPROPRIATION": {},
	"RECEIVED_FOR_EXPROPRIATION": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ReturnShipmentStatusType) IsValid() bool {
	_, ok := validReturnShipmentStatusTypeEnumValues[v]
	return ok
}

// NewReturnShipmentStatusTypeFromValue returns a pointer to a valid ReturnShipmentStatusType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewReturnShipmentStatusTypeFromValue(v string) (ReturnShipmentStatusType, error) {
	ev := ReturnShipmentStatusType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ReturnShipmentStatusType: valid values are %v", v, AllowedReturnShipmentStatusTypeEnumValues)
}



// AssertReturnShipmentStatusTypeRequired checks if the required fields are not zero-ed
func AssertReturnShipmentStatusTypeRequired(obj ReturnShipmentStatusType) error {
	return nil
}

// AssertReturnShipmentStatusTypeConstraints checks if the values respects the defined constraints
func AssertReturnShipmentStatusTypeConstraints(obj ReturnShipmentStatusType) error {
	return nil
}
