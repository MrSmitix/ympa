// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server




// FeedbackGradesDto - Информация об оценках, которые поставил автор отзыва магазину, и об оценках полезности отзыва от других пользователей Маркета.
type FeedbackGradesDto struct {

	// Общая оценка, указанная в отзыве: от `1` («Ужасный магазин») до `5` («Отличный магазин»).
	Average float32 `json:"average,omitempty"`

	// Количество пользователей, считающих отзыв полезным.
	AgreeCount int64 `json:"agreeCount,omitempty"`

	// Количество пользователей, считающих отзыв бесполезным.
	RejectCount int64 `json:"rejectCount,omitempty"`

	// Информация об оценках по параметрам, указанных в отзыве.  При создании отзыва автору предлагается поставить оценки магазину по нескольким параметрам: например, за скорость обработки заказа или удобство самовывоза. Набор параметров зависит от того, какой способ покупки (параметр `delivery`) указал автор. 
	Factors []FeedbackFactorDto `json:"factors"`
}

// AssertFeedbackGradesDtoRequired checks if the required fields are not zero-ed
func AssertFeedbackGradesDtoRequired(obj FeedbackGradesDto) error {
	elements := map[string]interface{}{
		"factors": obj.Factors,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Factors {
		if err := AssertFeedbackFactorDtoRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertFeedbackGradesDtoConstraints checks if the values respects the defined constraints
func AssertFeedbackGradesDtoConstraints(obj FeedbackGradesDto) error {
	for _, el := range obj.Factors {
		if err := AssertFeedbackFactorDtoConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
