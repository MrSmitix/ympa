// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// ReturnDecisionReasonType : Причины возврата:  * `BAD_QUALITY` — бракованный товар (есть недостатки).  * `DO_NOT_FIT` — товар не подошел.  * `WRONG_ITEM` — привезли не тот товар.  * `DAMAGE_DELIVERY` — товар поврежден при доставке.  * `LOYALTY_FAIL` — невозможно установить виновного в браке/пересорте.  * `CONTENT_FAIL` — ошибочное описание товара по вине Маркета.  * `UNKNOWN` — причина не известна. 
type ReturnDecisionReasonType string

// List of ReturnDecisionReasonType
const (
	BAD_QUALITY ReturnDecisionReasonType = "BAD_QUALITY"
	DOES_NOT_FIT ReturnDecisionReasonType = "DOES_NOT_FIT"
	WRONG_ITEM ReturnDecisionReasonType = "WRONG_ITEM"
	DAMAGE_DELIVERY ReturnDecisionReasonType = "DAMAGE_DELIVERY"
	LOYALTY_FAIL ReturnDecisionReasonType = "LOYALTY_FAIL"
	CONTENT_FAIL ReturnDecisionReasonType = "CONTENT_FAIL"
	UNKNOWN ReturnDecisionReasonType = "UNKNOWN"
)

// AllowedReturnDecisionReasonTypeEnumValues is all the allowed values of ReturnDecisionReasonType enum
var AllowedReturnDecisionReasonTypeEnumValues = []ReturnDecisionReasonType{
	"BAD_QUALITY",
	"DOES_NOT_FIT",
	"WRONG_ITEM",
	"DAMAGE_DELIVERY",
	"LOYALTY_FAIL",
	"CONTENT_FAIL",
	"UNKNOWN",
}

// validReturnDecisionReasonTypeEnumValue provides a map of ReturnDecisionReasonTypes for fast verification of use input
var validReturnDecisionReasonTypeEnumValues = map[ReturnDecisionReasonType]struct{}{
	"BAD_QUALITY": {},
	"DOES_NOT_FIT": {},
	"WRONG_ITEM": {},
	"DAMAGE_DELIVERY": {},
	"LOYALTY_FAIL": {},
	"CONTENT_FAIL": {},
	"UNKNOWN": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ReturnDecisionReasonType) IsValid() bool {
	_, ok := validReturnDecisionReasonTypeEnumValues[v]
	return ok
}

// NewReturnDecisionReasonTypeFromValue returns a pointer to a valid ReturnDecisionReasonType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewReturnDecisionReasonTypeFromValue(v string) (ReturnDecisionReasonType, error) {
	ev := ReturnDecisionReasonType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ReturnDecisionReasonType: valid values are %v", v, AllowedReturnDecisionReasonTypeEnumValues)
}



// AssertReturnDecisionReasonTypeRequired checks if the required fields are not zero-ed
func AssertReturnDecisionReasonTypeRequired(obj ReturnDecisionReasonType) error {
	return nil
}

// AssertReturnDecisionReasonTypeConstraints checks if the values respects the defined constraints
func AssertReturnDecisionReasonTypeConstraints(obj ReturnDecisionReasonType) error {
	return nil
}
