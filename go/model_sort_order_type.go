// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// SortOrderType : Направление сортировки.  Возможные значения: - `ASC` — сортировка по возрастанию. - `DESC` — сортировка по убыванию. 
type SortOrderType string

// List of SortOrderType
const (
	ASC SortOrderType = "ASC"
	DESC SortOrderType = "DESC"
)

// AllowedSortOrderTypeEnumValues is all the allowed values of SortOrderType enum
var AllowedSortOrderTypeEnumValues = []SortOrderType{
	"ASC",
	"DESC",
}

// validSortOrderTypeEnumValue provides a map of SortOrderTypes for fast verification of use input
var validSortOrderTypeEnumValues = map[SortOrderType]struct{}{
	"ASC": {},
	"DESC": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SortOrderType) IsValid() bool {
	_, ok := validSortOrderTypeEnumValues[v]
	return ok
}

// NewSortOrderTypeFromValue returns a pointer to a valid SortOrderType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSortOrderTypeFromValue(v string) (SortOrderType, error) {
	ev := SortOrderType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for SortOrderType: valid values are %v", v, AllowedSortOrderTypeEnumValues)
}



// AssertSortOrderTypeRequired checks if the required fields are not zero-ed
func AssertSortOrderTypeRequired(obj SortOrderType) error {
	return nil
}

// AssertSortOrderTypeConstraints checks if the values respects the defined constraints
func AssertSortOrderTypeConstraints(obj SortOrderType) error {
	return nil
}
