// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// OrderPaymentType : Тип оплаты заказа:  * `PREPAID` — оплата при оформлении заказа.  * `POSTPAID` — оплата при получении заказа.  * `UNKNOWN` — неизвестный тип.  Если параметр отсутствует, заказ будет оплачен при получении. 
type OrderPaymentType string

// List of OrderPaymentType
const (
	PREPAID OrderPaymentType = "PREPAID"
	POSTPAID OrderPaymentType = "POSTPAID"
	UNKNOWN OrderPaymentType = "UNKNOWN"
)

// AllowedOrderPaymentTypeEnumValues is all the allowed values of OrderPaymentType enum
var AllowedOrderPaymentTypeEnumValues = []OrderPaymentType{
	"PREPAID",
	"POSTPAID",
	"UNKNOWN",
}

// validOrderPaymentTypeEnumValue provides a map of OrderPaymentTypes for fast verification of use input
var validOrderPaymentTypeEnumValues = map[OrderPaymentType]struct{}{
	"PREPAID": {},
	"POSTPAID": {},
	"UNKNOWN": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrderPaymentType) IsValid() bool {
	_, ok := validOrderPaymentTypeEnumValues[v]
	return ok
}

// NewOrderPaymentTypeFromValue returns a pointer to a valid OrderPaymentType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrderPaymentTypeFromValue(v string) (OrderPaymentType, error) {
	ev := OrderPaymentType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for OrderPaymentType: valid values are %v", v, AllowedOrderPaymentTypeEnumValues)
}



// AssertOrderPaymentTypeRequired checks if the required fields are not zero-ed
func AssertOrderPaymentTypeRequired(obj OrderPaymentType) error {
	return nil
}

// AssertOrderPaymentTypeConstraints checks if the values respects the defined constraints
func AssertOrderPaymentTypeConstraints(obj OrderPaymentType) error {
	return nil
}
