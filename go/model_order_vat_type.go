// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// OrderVatType : Ставка налога на добавленную стоимость (НДС) на товар:  * `NO_VAT` — НДС не облагается, используется только для отдельных видов услуг.  * `VAT_0` — НДС 0%. Например, используется при продаже товаров, вывезенных в таможенной процедуре экспорта, или при оказании услуг по международной перевозке товаров.  * `VAT_10` — НДС 10%. Например, используется при реализации отдельных продовольственных и медицинских товаров.  * `VAT_10_110` — НДС 10/110. Расчетная ставка НДС 10%, применяется только при предоплате.  * `VAT_20` — НДС 20%. Основная ставка с 2019 года.  * `VAT_20_120` — НДС 20/120. Расчетная ставка НДС 20%, применяется только при предоплате.  * `VAT_18` — НДС 18%. Основная ставка до 2019 года.  * `VAT_18_118` — НДС 18/118. Ставка использовалась до 1 января 2019 года при предоплате.  * `UNKNOWN_VALUE` — неизвестный тип.  Используется только совместно с параметром `payment-method=YANDEX`. 
type OrderVatType string

// List of OrderVatType
const (
	NO_VAT OrderVatType = "NO_VAT"
	VAT_0 OrderVatType = "VAT_0"
	VAT_10 OrderVatType = "VAT_10"
	VAT_10_110 OrderVatType = "VAT_10_110"
	VAT_20 OrderVatType = "VAT_20"
	VAT_20_120 OrderVatType = "VAT_20_120"
	VAT_18 OrderVatType = "VAT_18"
	VAT_18_118 OrderVatType = "VAT_18_118"
	UNKNOWN_VALUE OrderVatType = "UNKNOWN_VALUE"
)

// AllowedOrderVatTypeEnumValues is all the allowed values of OrderVatType enum
var AllowedOrderVatTypeEnumValues = []OrderVatType{
	"NO_VAT",
	"VAT_0",
	"VAT_10",
	"VAT_10_110",
	"VAT_20",
	"VAT_20_120",
	"VAT_18",
	"VAT_18_118",
	"UNKNOWN_VALUE",
}

// validOrderVatTypeEnumValue provides a map of OrderVatTypes for fast verification of use input
var validOrderVatTypeEnumValues = map[OrderVatType]struct{}{
	"NO_VAT": {},
	"VAT_0": {},
	"VAT_10": {},
	"VAT_10_110": {},
	"VAT_20": {},
	"VAT_20_120": {},
	"VAT_18": {},
	"VAT_18_118": {},
	"UNKNOWN_VALUE": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrderVatType) IsValid() bool {
	_, ok := validOrderVatTypeEnumValues[v]
	return ok
}

// NewOrderVatTypeFromValue returns a pointer to a valid OrderVatType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrderVatTypeFromValue(v string) (OrderVatType, error) {
	ev := OrderVatType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for OrderVatType: valid values are %v", v, AllowedOrderVatTypeEnumValues)
}



// AssertOrderVatTypeRequired checks if the required fields are not zero-ed
func AssertOrderVatTypeRequired(obj OrderVatType) error {
	return nil
}

// AssertOrderVatTypeConstraints checks if the values respects the defined constraints
func AssertOrderVatTypeConstraints(obj OrderVatType) error {
	return nil
}
