// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"time"
)



// ReturnDto - Возврат заказа.
type ReturnDto struct {

	// Идентификатор возврата.
	Id int64 `json:"id,omitempty"`

	// Номер заказа.
	OrderId int64 `json:"orderId,omitempty"`

	// Дата создания возврата клиентом.
	CreationDate time.Time `json:"creationDate,omitempty"`

	// Дата обновления возврата.
	UpdateDate time.Time `json:"updateDate,omitempty"`

	RefundStatus RefundStatusType `json:"refundStatus,omitempty"`

	LogisticPickupPoint LogisticPickupPointDto `json:"logisticPickupPoint,omitempty"`

	ShipmentRecipientType RecipientType `json:"shipmentRecipientType,omitempty"`

	ShipmentStatus ReturnShipmentStatusType `json:"shipmentStatus,omitempty"`

	// Сумма возврата.
	RefundAmount int64 `json:"refundAmount,omitempty"`

	// Список товаров в возврате.
	Items []ReturnItemDto `json:"items"`

	ReturnType ReturnType `json:"returnType,omitempty"`

	// Используется ли опция **Быстрый возврат денег за дешевый брак**. 
	FastReturn bool `json:"fastReturn,omitempty"`
}

// AssertReturnDtoRequired checks if the required fields are not zero-ed
func AssertReturnDtoRequired(obj ReturnDto) error {
	elements := map[string]interface{}{
		"items": obj.Items,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertLogisticPickupPointDtoRequired(obj.LogisticPickupPoint); err != nil {
		return err
	}
	for _, el := range obj.Items {
		if err := AssertReturnItemDtoRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertReturnDtoConstraints checks if the values respects the defined constraints
func AssertReturnDtoConstraints(obj ReturnDto) error {
	if err := AssertLogisticPickupPointDtoConstraints(obj.LogisticPickupPoint); err != nil {
		return err
	}
	for _, el := range obj.Items {
		if err := AssertReturnItemDtoConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
