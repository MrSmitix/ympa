// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// LicenseCheckStatusType : Статус проверки лицензии:  * `NEW` — лицензия проверяется. * `SUCCESS` — лицензия прошла проверку. * `FAIL` — лицензия не прошла проверку. 
type LicenseCheckStatusType string

// List of LicenseCheckStatusType
const (
	NEW LicenseCheckStatusType = "NEW"
	SUCCESS LicenseCheckStatusType = "SUCCESS"
	FAIL LicenseCheckStatusType = "FAIL"
	REVOKE LicenseCheckStatusType = "REVOKE"
	DONT_WANT LicenseCheckStatusType = "DONT_WANT"
	FAIL_MANUAL LicenseCheckStatusType = "FAIL_MANUAL"
)

// AllowedLicenseCheckStatusTypeEnumValues is all the allowed values of LicenseCheckStatusType enum
var AllowedLicenseCheckStatusTypeEnumValues = []LicenseCheckStatusType{
	"NEW",
	"SUCCESS",
	"FAIL",
	"REVOKE",
	"DONT_WANT",
	"FAIL_MANUAL",
}

// validLicenseCheckStatusTypeEnumValue provides a map of LicenseCheckStatusTypes for fast verification of use input
var validLicenseCheckStatusTypeEnumValues = map[LicenseCheckStatusType]struct{}{
	"NEW": {},
	"SUCCESS": {},
	"FAIL": {},
	"REVOKE": {},
	"DONT_WANT": {},
	"FAIL_MANUAL": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LicenseCheckStatusType) IsValid() bool {
	_, ok := validLicenseCheckStatusTypeEnumValues[v]
	return ok
}

// NewLicenseCheckStatusTypeFromValue returns a pointer to a valid LicenseCheckStatusType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLicenseCheckStatusTypeFromValue(v string) (LicenseCheckStatusType, error) {
	ev := LicenseCheckStatusType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for LicenseCheckStatusType: valid values are %v", v, AllowedLicenseCheckStatusTypeEnumValues)
}



// AssertLicenseCheckStatusTypeRequired checks if the required fields are not zero-ed
func AssertLicenseCheckStatusTypeRequired(obj LicenseCheckStatusType) error {
	return nil
}

// AssertLicenseCheckStatusTypeConstraints checks if the values respects the defined constraints
func AssertLicenseCheckStatusTypeConstraints(obj LicenseCheckStatusType) error {
	return nil
}
