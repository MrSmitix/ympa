// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// OrderBuyerType : Тип покупателя:  * `PERSON` — физическое лицо.  * `BUSINESS` — организация. 
type OrderBuyerType string

// List of OrderBuyerType
const (
	PERSON OrderBuyerType = "PERSON"
	BUSINESS OrderBuyerType = "BUSINESS"
)

// AllowedOrderBuyerTypeEnumValues is all the allowed values of OrderBuyerType enum
var AllowedOrderBuyerTypeEnumValues = []OrderBuyerType{
	"PERSON",
	"BUSINESS",
}

// validOrderBuyerTypeEnumValue provides a map of OrderBuyerTypes for fast verification of use input
var validOrderBuyerTypeEnumValues = map[OrderBuyerType]struct{}{
	"PERSON": {},
	"BUSINESS": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrderBuyerType) IsValid() bool {
	_, ok := validOrderBuyerTypeEnumValues[v]
	return ok
}

// NewOrderBuyerTypeFromValue returns a pointer to a valid OrderBuyerType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrderBuyerTypeFromValue(v string) (OrderBuyerType, error) {
	ev := OrderBuyerType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for OrderBuyerType: valid values are %v", v, AllowedOrderBuyerTypeEnumValues)
}



// AssertOrderBuyerTypeRequired checks if the required fields are not zero-ed
func AssertOrderBuyerTypeRequired(obj OrderBuyerType) error {
	return nil
}

// AssertOrderBuyerTypeConstraints checks if the values respects the defined constraints
func AssertOrderBuyerTypeConstraints(obj OrderBuyerType) error {
	return nil
}
