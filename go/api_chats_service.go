// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server

import (
	"context"
	"net/http"
	"errors"
	"os"
)

// ChatsAPIService is a service that implements the logic for the ChatsAPIServicer
// This service should implement the business logic for every endpoint for the ChatsAPI API.
// Include any external packages or services that will be required by this service.
type ChatsAPIService struct {
}

// NewChatsAPIService creates a default api service
func NewChatsAPIService() *ChatsAPIService {
	return &ChatsAPIService{}
}

// CreateChat - Создание нового чата с покупателем
func (s *ChatsAPIService) CreateChat(ctx context.Context, businessId int64, createChatRequest CreateChatRequest) (ImplResponse, error) {
	// TODO - update CreateChat with the required logic for this service method.
	// Add api_chats_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CreateChatResponse{}) or use other options such as http.Ok ...
	// return Response(200, CreateChatResponse{}), nil

	// TODO: Uncomment the next line to return response Response(400, ApiClientDataErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ApiClientDataErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ApiUnauthorizedErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ApiUnauthorizedErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(403, ApiForbiddenErrorResponse{}) or use other options such as http.Ok ...
	// return Response(403, ApiForbiddenErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(404, ApiNotFoundErrorResponse{}) or use other options such as http.Ok ...
	// return Response(404, ApiNotFoundErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(420, ApiLimitErrorResponse{}) or use other options such as http.Ok ...
	// return Response(420, ApiLimitErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(500, ApiServerErrorResponse{}) or use other options such as http.Ok ...
	// return Response(500, ApiServerErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateChat method not implemented")
}

// GetChatHistory - Получение истории сообщений в чате
func (s *ChatsAPIService) GetChatHistory(ctx context.Context, businessId int64, chatId int64, getChatHistoryRequest GetChatHistoryRequest, pageToken string, limit int32) (ImplResponse, error) {
	// TODO - update GetChatHistory with the required logic for this service method.
	// Add api_chats_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, GetChatHistoryResponse{}) or use other options such as http.Ok ...
	// return Response(200, GetChatHistoryResponse{}), nil

	// TODO: Uncomment the next line to return response Response(400, ApiClientDataErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ApiClientDataErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ApiUnauthorizedErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ApiUnauthorizedErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(403, ApiForbiddenErrorResponse{}) or use other options such as http.Ok ...
	// return Response(403, ApiForbiddenErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(404, ApiNotFoundErrorResponse{}) or use other options such as http.Ok ...
	// return Response(404, ApiNotFoundErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(420, ApiLimitErrorResponse{}) or use other options such as http.Ok ...
	// return Response(420, ApiLimitErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(500, ApiServerErrorResponse{}) or use other options such as http.Ok ...
	// return Response(500, ApiServerErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetChatHistory method not implemented")
}

// GetChats - Получение доступных чатов
func (s *ChatsAPIService) GetChats(ctx context.Context, businessId int64, getChatsRequest GetChatsRequest, pageToken string, limit int32) (ImplResponse, error) {
	// TODO - update GetChats with the required logic for this service method.
	// Add api_chats_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, GetChatsResponse{}) or use other options such as http.Ok ...
	// return Response(200, GetChatsResponse{}), nil

	// TODO: Uncomment the next line to return response Response(400, ApiClientDataErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ApiClientDataErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ApiUnauthorizedErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ApiUnauthorizedErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(403, ApiForbiddenErrorResponse{}) or use other options such as http.Ok ...
	// return Response(403, ApiForbiddenErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(404, ApiNotFoundErrorResponse{}) or use other options such as http.Ok ...
	// return Response(404, ApiNotFoundErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(420, ApiLimitErrorResponse{}) or use other options such as http.Ok ...
	// return Response(420, ApiLimitErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(500, ApiServerErrorResponse{}) or use other options such as http.Ok ...
	// return Response(500, ApiServerErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetChats method not implemented")
}

// SendFileToChat - Отправка файла в чат
func (s *ChatsAPIService) SendFileToChat(ctx context.Context, businessId int64, chatId int64, file *os.File) (ImplResponse, error) {
	// TODO - update SendFileToChat with the required logic for this service method.
	// Add api_chats_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, EmptyApiResponse{}) or use other options such as http.Ok ...
	// return Response(200, EmptyApiResponse{}), nil

	// TODO: Uncomment the next line to return response Response(400, ApiClientDataErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ApiClientDataErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ApiUnauthorizedErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ApiUnauthorizedErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(403, ApiForbiddenErrorResponse{}) or use other options such as http.Ok ...
	// return Response(403, ApiForbiddenErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(404, ApiNotFoundErrorResponse{}) or use other options such as http.Ok ...
	// return Response(404, ApiNotFoundErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(420, ApiLimitErrorResponse{}) or use other options such as http.Ok ...
	// return Response(420, ApiLimitErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(500, ApiServerErrorResponse{}) or use other options such as http.Ok ...
	// return Response(500, ApiServerErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("SendFileToChat method not implemented")
}

// SendMessageToChat - Отправка сообщения в чат
func (s *ChatsAPIService) SendMessageToChat(ctx context.Context, businessId int64, chatId int64, sendMessageToChatRequest SendMessageToChatRequest) (ImplResponse, error) {
	// TODO - update SendMessageToChat with the required logic for this service method.
	// Add api_chats_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, EmptyApiResponse{}) or use other options such as http.Ok ...
	// return Response(200, EmptyApiResponse{}), nil

	// TODO: Uncomment the next line to return response Response(400, ApiClientDataErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ApiClientDataErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ApiUnauthorizedErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ApiUnauthorizedErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(403, ApiForbiddenErrorResponse{}) or use other options such as http.Ok ...
	// return Response(403, ApiForbiddenErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(404, ApiNotFoundErrorResponse{}) or use other options such as http.Ok ...
	// return Response(404, ApiNotFoundErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(420, ApiLimitErrorResponse{}) or use other options such as http.Ok ...
	// return Response(420, ApiLimitErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(500, ApiServerErrorResponse{}) or use other options such as http.Ok ...
	// return Response(500, ApiServerErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("SendMessageToChat method not implemented")
}
