// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// PriceCompetitivenessType : Привлекательность цены:  * `OPTIMAL` — привлекательная. * `AVERAGE` — умеренная. * `LOW` — непривлекательная. 
type PriceCompetitivenessType string

// List of PriceCompetitivenessType
const (
	OPTIMAL PriceCompetitivenessType = "OPTIMAL"
	AVERAGE PriceCompetitivenessType = "AVERAGE"
	LOW PriceCompetitivenessType = "LOW"
)

// AllowedPriceCompetitivenessTypeEnumValues is all the allowed values of PriceCompetitivenessType enum
var AllowedPriceCompetitivenessTypeEnumValues = []PriceCompetitivenessType{
	"OPTIMAL",
	"AVERAGE",
	"LOW",
}

// validPriceCompetitivenessTypeEnumValue provides a map of PriceCompetitivenessTypes for fast verification of use input
var validPriceCompetitivenessTypeEnumValues = map[PriceCompetitivenessType]struct{}{
	"OPTIMAL": {},
	"AVERAGE": {},
	"LOW": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PriceCompetitivenessType) IsValid() bool {
	_, ok := validPriceCompetitivenessTypeEnumValues[v]
	return ok
}

// NewPriceCompetitivenessTypeFromValue returns a pointer to a valid PriceCompetitivenessType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPriceCompetitivenessTypeFromValue(v string) (PriceCompetitivenessType, error) {
	ev := PriceCompetitivenessType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for PriceCompetitivenessType: valid values are %v", v, AllowedPriceCompetitivenessTypeEnumValues)
}



// AssertPriceCompetitivenessTypeRequired checks if the required fields are not zero-ed
func AssertPriceCompetitivenessTypeRequired(obj PriceCompetitivenessType) error {
	return nil
}

// AssertPriceCompetitivenessTypeConstraints checks if the values respects the defined constraints
func AssertPriceCompetitivenessTypeConstraints(obj PriceCompetitivenessType) error {
	return nil
}
