// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"errors"
)



// CalculateTariffsOfferDto - Параметры товара, для которого нужно рассчитать стоимость услуг.
type CalculateTariffsOfferDto struct {

	// Идентификатор категории товара на Маркете.  Для расчета стоимости услуг необходимо указать идентификатор листовой категории товара — той, которая не имеет дочерних категорий.  Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md). 
	CategoryId int64 `json:"categoryId"`

	// Цена на товар в рублях.
	Price float32 `json:"price"`

	// Длина товара в сантиметрах.
	Length float32 `json:"length"`

	// Ширина товара в сантиметрах.
	Width float32 `json:"width"`

	// Высота товара в сантиметрах.
	Height float32 `json:"height"`

	// Вес товара в килограммах.
	Weight float32 `json:"weight"`

	// Квант продажи — количество единиц товара в одном товарном предложении.
	Quantity int32 `json:"quantity,omitempty"`
}

// AssertCalculateTariffsOfferDtoRequired checks if the required fields are not zero-ed
func AssertCalculateTariffsOfferDtoRequired(obj CalculateTariffsOfferDto) error {
	elements := map[string]interface{}{
		"categoryId": obj.CategoryId,
		"price": obj.Price,
		"length": obj.Length,
		"width": obj.Width,
		"height": obj.Height,
		"weight": obj.Weight,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertCalculateTariffsOfferDtoConstraints checks if the values respects the defined constraints
func AssertCalculateTariffsOfferDtoConstraints(obj CalculateTariffsOfferDto) error {
	if obj.CategoryId < 0 {
		return &ParsingError{Param: "CategoryId", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Price < 0 {
		return &ParsingError{Param: "Price", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Length < 0 {
		return &ParsingError{Param: "Length", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Width < 0 {
		return &ParsingError{Param: "Width", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Height < 0 {
		return &ParsingError{Param: "Height", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Weight < 0 {
		return &ParsingError{Param: "Weight", Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Quantity < 1 {
		return &ParsingError{Param: "Quantity", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
