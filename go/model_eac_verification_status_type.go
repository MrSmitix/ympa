// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// EacVerificationStatusType : Статус проверки кода подтверждения:  * `ACCEPTED` — код верный. * `REJECTED` — код неверный. * `NEED_UPDATE` — Маркет отправит новый код. Значение возвращается, если превышено количество попыток отправки кода. 
type EacVerificationStatusType string

// List of EacVerificationStatusType
const (
	ACCEPTED EacVerificationStatusType = "ACCEPTED"
	REJECTED EacVerificationStatusType = "REJECTED"
	NEED_UPDATE EacVerificationStatusType = "NEED_UPDATE"
)

// AllowedEacVerificationStatusTypeEnumValues is all the allowed values of EacVerificationStatusType enum
var AllowedEacVerificationStatusTypeEnumValues = []EacVerificationStatusType{
	"ACCEPTED",
	"REJECTED",
	"NEED_UPDATE",
}

// validEacVerificationStatusTypeEnumValue provides a map of EacVerificationStatusTypes for fast verification of use input
var validEacVerificationStatusTypeEnumValues = map[EacVerificationStatusType]struct{}{
	"ACCEPTED": {},
	"REJECTED": {},
	"NEED_UPDATE": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EacVerificationStatusType) IsValid() bool {
	_, ok := validEacVerificationStatusTypeEnumValues[v]
	return ok
}

// NewEacVerificationStatusTypeFromValue returns a pointer to a valid EacVerificationStatusType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEacVerificationStatusTypeFromValue(v string) (EacVerificationStatusType, error) {
	ev := EacVerificationStatusType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for EacVerificationStatusType: valid values are %v", v, AllowedEacVerificationStatusTypeEnumValues)
}



// AssertEacVerificationStatusTypeRequired checks if the required fields are not zero-ed
func AssertEacVerificationStatusTypeRequired(obj EacVerificationStatusType) error {
	return nil
}

// AssertEacVerificationStatusTypeConstraints checks if the values respects the defined constraints
func AssertEacVerificationStatusTypeConstraints(obj EacVerificationStatusType) error {
	return nil
}
