// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server

import (
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// WarehousesAPIController binds http requests to an api service and writes the service results to the http response
type WarehousesAPIController struct {
	service WarehousesAPIServicer
	errorHandler ErrorHandler
}

// WarehousesAPIOption for how the controller is set up.
type WarehousesAPIOption func(*WarehousesAPIController)

// WithWarehousesAPIErrorHandler inject ErrorHandler into controller
func WithWarehousesAPIErrorHandler(h ErrorHandler) WarehousesAPIOption {
	return func(c *WarehousesAPIController) {
		c.errorHandler = h
	}
}

// NewWarehousesAPIController creates a default api controller
func NewWarehousesAPIController(s WarehousesAPIServicer, opts ...WarehousesAPIOption) *WarehousesAPIController {
	controller := &WarehousesAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the WarehousesAPIController
func (c *WarehousesAPIController) Routes() Routes {
	return Routes{
		"GetFulfillmentWarehouses": Route{
			strings.ToUpper("Get"),
			"/warehouses",
			c.GetFulfillmentWarehouses,
		},
		"GetWarehouses": Route{
			strings.ToUpper("Get"),
			"/businesses/{businessId}/warehouses",
			c.GetWarehouses,
		},
	}
}

// GetFulfillmentWarehouses - Идентификаторы складов Маркета (FBY)
func (c *WarehousesAPIController) GetFulfillmentWarehouses(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetFulfillmentWarehouses(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	_ = EncodeJSONResponse(result.Body, &result.Code, w)
}

// GetWarehouses - Список складов и групп складов
func (c *WarehousesAPIController) GetWarehouses(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	businessIdParam, err := parseNumericParameter[int64](
		params["businessId"],
		WithRequire[int64](parseInt64),
	)
	if err != nil {
		c.errorHandler(w, r, &ParsingError{Param: "businessId", Err: err}, nil)
		return
	}
	result, err := c.service.GetWarehouses(r.Context(), businessIdParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	_ = EncodeJSONResponse(result.Body, &result.Code, w)
}
