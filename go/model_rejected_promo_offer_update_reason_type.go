// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// RejectedPromoOfferUpdateReasonType : Причина отклонения изменения:  * `OFFER_DOES_NOT_EXIST` — в кабинете нет товара с таким SKU.  * `OFFER_DUPLICATION` — один и тот же товар передан несколько раз.  * `OFFER_NOT_ELIGIBLE_FOR_PROMO` — товар не подходит под условия акции.  * `OFFER_PROMOS_MAX_BYTE_SIZE_EXCEEDED` — товар не добавлен в акцию по техническим причинам.  * `DEADLINE_FOR_FOCUS_PROMOS_EXCEEDED` — истек срок добавления товаров в акцию.  * `EMPTY_OLD_PRICE` — не указана зачеркнутая цена.  * `EMPTY_PROMO_PRICE` — не указана цена по акции.  * `MAX_PROMO_PRICE_EXCEEDED` — цена по акции превышает максимально возможную цену для участия в акции.  * `PROMO_PRICE_BIGGER_THAN_MAX` — цена по акции больше 95% от зачеркнутой цены.  * `PROMO_PRICE_SMALLER_THAN_MIN` — цена по акции меньше 1% от зачеркнутой цены. 
type RejectedPromoOfferUpdateReasonType string

// List of RejectedPromoOfferUpdateReasonType
const (
	OFFER_DOES_NOT_EXIST RejectedPromoOfferUpdateReasonType = "OFFER_DOES_NOT_EXIST"
	OFFER_DUPLICATION RejectedPromoOfferUpdateReasonType = "OFFER_DUPLICATION"
	OFFER_NOT_ELIGIBLE_FOR_PROMO RejectedPromoOfferUpdateReasonType = "OFFER_NOT_ELIGIBLE_FOR_PROMO"
	OFFER_PROMOS_MAX_BYTE_SIZE_EXCEEDED RejectedPromoOfferUpdateReasonType = "OFFER_PROMOS_MAX_BYTE_SIZE_EXCEEDED"
	DEADLINE_FOR_FOCUS_PROMOS_EXCEEDED RejectedPromoOfferUpdateReasonType = "DEADLINE_FOR_FOCUS_PROMOS_EXCEEDED"
	EMPTY_OLD_PRICE RejectedPromoOfferUpdateReasonType = "EMPTY_OLD_PRICE"
	EMPTY_PROMO_PRICE RejectedPromoOfferUpdateReasonType = "EMPTY_PROMO_PRICE"
	MAX_PROMO_PRICE_EXCEEDED RejectedPromoOfferUpdateReasonType = "MAX_PROMO_PRICE_EXCEEDED"
	PROMO_PRICE_BIGGER_THAN_MAX RejectedPromoOfferUpdateReasonType = "PROMO_PRICE_BIGGER_THAN_MAX"
	PROMO_PRICE_SMALLER_THAN_MIN RejectedPromoOfferUpdateReasonType = "PROMO_PRICE_SMALLER_THAN_MIN"
)

// AllowedRejectedPromoOfferUpdateReasonTypeEnumValues is all the allowed values of RejectedPromoOfferUpdateReasonType enum
var AllowedRejectedPromoOfferUpdateReasonTypeEnumValues = []RejectedPromoOfferUpdateReasonType{
	"OFFER_DOES_NOT_EXIST",
	"OFFER_DUPLICATION",
	"OFFER_NOT_ELIGIBLE_FOR_PROMO",
	"OFFER_PROMOS_MAX_BYTE_SIZE_EXCEEDED",
	"DEADLINE_FOR_FOCUS_PROMOS_EXCEEDED",
	"EMPTY_OLD_PRICE",
	"EMPTY_PROMO_PRICE",
	"MAX_PROMO_PRICE_EXCEEDED",
	"PROMO_PRICE_BIGGER_THAN_MAX",
	"PROMO_PRICE_SMALLER_THAN_MIN",
}

// validRejectedPromoOfferUpdateReasonTypeEnumValue provides a map of RejectedPromoOfferUpdateReasonTypes for fast verification of use input
var validRejectedPromoOfferUpdateReasonTypeEnumValues = map[RejectedPromoOfferUpdateReasonType]struct{}{
	"OFFER_DOES_NOT_EXIST": {},
	"OFFER_DUPLICATION": {},
	"OFFER_NOT_ELIGIBLE_FOR_PROMO": {},
	"OFFER_PROMOS_MAX_BYTE_SIZE_EXCEEDED": {},
	"DEADLINE_FOR_FOCUS_PROMOS_EXCEEDED": {},
	"EMPTY_OLD_PRICE": {},
	"EMPTY_PROMO_PRICE": {},
	"MAX_PROMO_PRICE_EXCEEDED": {},
	"PROMO_PRICE_BIGGER_THAN_MAX": {},
	"PROMO_PRICE_SMALLER_THAN_MIN": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RejectedPromoOfferUpdateReasonType) IsValid() bool {
	_, ok := validRejectedPromoOfferUpdateReasonTypeEnumValues[v]
	return ok
}

// NewRejectedPromoOfferUpdateReasonTypeFromValue returns a pointer to a valid RejectedPromoOfferUpdateReasonType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRejectedPromoOfferUpdateReasonTypeFromValue(v string) (RejectedPromoOfferUpdateReasonType, error) {
	ev := RejectedPromoOfferUpdateReasonType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for RejectedPromoOfferUpdateReasonType: valid values are %v", v, AllowedRejectedPromoOfferUpdateReasonTypeEnumValues)
}



// AssertRejectedPromoOfferUpdateReasonTypeRequired checks if the required fields are not zero-ed
func AssertRejectedPromoOfferUpdateReasonTypeRequired(obj RejectedPromoOfferUpdateReasonType) error {
	return nil
}

// AssertRejectedPromoOfferUpdateReasonTypeConstraints checks if the values respects the defined constraints
func AssertRejectedPromoOfferUpdateReasonTypeConstraints(obj RejectedPromoOfferUpdateReasonType) error {
	return nil
}
