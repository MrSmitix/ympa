// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// GoodsFeedbackCommentAuthorType : Тип автора:  * `USER` — пользователь. * `BUSINESS` — кабинет. 
type GoodsFeedbackCommentAuthorType string

// List of GoodsFeedbackCommentAuthorType
const (
	USER GoodsFeedbackCommentAuthorType = "USER"
	BUSINESS GoodsFeedbackCommentAuthorType = "BUSINESS"
)

// AllowedGoodsFeedbackCommentAuthorTypeEnumValues is all the allowed values of GoodsFeedbackCommentAuthorType enum
var AllowedGoodsFeedbackCommentAuthorTypeEnumValues = []GoodsFeedbackCommentAuthorType{
	"USER",
	"BUSINESS",
}

// validGoodsFeedbackCommentAuthorTypeEnumValue provides a map of GoodsFeedbackCommentAuthorTypes for fast verification of use input
var validGoodsFeedbackCommentAuthorTypeEnumValues = map[GoodsFeedbackCommentAuthorType]struct{}{
	"USER": {},
	"BUSINESS": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GoodsFeedbackCommentAuthorType) IsValid() bool {
	_, ok := validGoodsFeedbackCommentAuthorTypeEnumValues[v]
	return ok
}

// NewGoodsFeedbackCommentAuthorTypeFromValue returns a pointer to a valid GoodsFeedbackCommentAuthorType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGoodsFeedbackCommentAuthorTypeFromValue(v string) (GoodsFeedbackCommentAuthorType, error) {
	ev := GoodsFeedbackCommentAuthorType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for GoodsFeedbackCommentAuthorType: valid values are %v", v, AllowedGoodsFeedbackCommentAuthorTypeEnumValues)
}



// AssertGoodsFeedbackCommentAuthorTypeRequired checks if the required fields are not zero-ed
func AssertGoodsFeedbackCommentAuthorTypeRequired(obj GoodsFeedbackCommentAuthorType) error {
	return nil
}

// AssertGoodsFeedbackCommentAuthorTypeConstraints checks if the values respects the defined constraints
func AssertGoodsFeedbackCommentAuthorTypeConstraints(obj GoodsFeedbackCommentAuthorType) error {
	return nil
}
