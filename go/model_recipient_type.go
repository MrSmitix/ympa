// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// RecipientType : Способ возврата товара покупателем:  * `SHOP` — в точку возврата магазина.  * `DELIVERY_SERVICE` — отправить курьером.  * `POST` — почта. 
type RecipientType string

// List of RecipientType
const (
	SHOP RecipientType = "SHOP"
	DELIVERY_SERVICE RecipientType = "DELIVERY_SERVICE"
	POST RecipientType = "POST"
)

// AllowedRecipientTypeEnumValues is all the allowed values of RecipientType enum
var AllowedRecipientTypeEnumValues = []RecipientType{
	"SHOP",
	"DELIVERY_SERVICE",
	"POST",
}

// validRecipientTypeEnumValue provides a map of RecipientTypes for fast verification of use input
var validRecipientTypeEnumValues = map[RecipientType]struct{}{
	"SHOP": {},
	"DELIVERY_SERVICE": {},
	"POST": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RecipientType) IsValid() bool {
	_, ok := validRecipientTypeEnumValues[v]
	return ok
}

// NewRecipientTypeFromValue returns a pointer to a valid RecipientType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRecipientTypeFromValue(v string) (RecipientType, error) {
	ev := RecipientType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for RecipientType: valid values are %v", v, AllowedRecipientTypeEnumValues)
}



// AssertRecipientTypeRequired checks if the required fields are not zero-ed
func AssertRecipientTypeRequired(obj RecipientType) error {
	return nil
}

// AssertRecipientTypeConstraints checks if the values respects the defined constraints
func AssertRecipientTypeConstraints(obj RecipientType) error {
	return nil
}
