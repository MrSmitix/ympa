// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// RejectedPromoOfferDeleteReasonType : Описание ошибки:  * `OFFER_DOES_NOT_EXIST` — в кабинете нет товара с таким SKU. 
type RejectedPromoOfferDeleteReasonType string

// List of RejectedPromoOfferDeleteReasonType
const (
	OFFER_DOES_NOT_EXIST RejectedPromoOfferDeleteReasonType = "OFFER_DOES_NOT_EXIST"
)

// AllowedRejectedPromoOfferDeleteReasonTypeEnumValues is all the allowed values of RejectedPromoOfferDeleteReasonType enum
var AllowedRejectedPromoOfferDeleteReasonTypeEnumValues = []RejectedPromoOfferDeleteReasonType{
	"OFFER_DOES_NOT_EXIST",
}

// validRejectedPromoOfferDeleteReasonTypeEnumValue provides a map of RejectedPromoOfferDeleteReasonTypes for fast verification of use input
var validRejectedPromoOfferDeleteReasonTypeEnumValues = map[RejectedPromoOfferDeleteReasonType]struct{}{
	"OFFER_DOES_NOT_EXIST": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RejectedPromoOfferDeleteReasonType) IsValid() bool {
	_, ok := validRejectedPromoOfferDeleteReasonTypeEnumValues[v]
	return ok
}

// NewRejectedPromoOfferDeleteReasonTypeFromValue returns a pointer to a valid RejectedPromoOfferDeleteReasonType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRejectedPromoOfferDeleteReasonTypeFromValue(v string) (RejectedPromoOfferDeleteReasonType, error) {
	ev := RejectedPromoOfferDeleteReasonType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for RejectedPromoOfferDeleteReasonType: valid values are %v", v, AllowedRejectedPromoOfferDeleteReasonTypeEnumValues)
}



// AssertRejectedPromoOfferDeleteReasonTypeRequired checks if the required fields are not zero-ed
func AssertRejectedPromoOfferDeleteReasonTypeRequired(obj RejectedPromoOfferDeleteReasonType) error {
	return nil
}

// AssertRejectedPromoOfferDeleteReasonTypeConstraints checks if the values respects the defined constraints
func AssertRejectedPromoOfferDeleteReasonTypeConstraints(obj RejectedPromoOfferDeleteReasonType) error {
	return nil
}
