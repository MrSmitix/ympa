// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// OfferMappingErrorType : Типы ошибок:  * `UNKNOWN_CATEGORY` — указана неизвестная категория. * `CATEGORY_MISMATCH` — указана категория, которая не совпадает с категорией товара. * `EMPTY_MARKET_CATEGORY` — не указана категория Маркета при передаче характеристик категории. * `UNKNOWN_PARAMETER` — передана характеристика, которой нет среди характеристик категории. * `UNEXPECTED_BOOLEAN_VALUE` — вместо boolean-значения передано что-то другое. * `NUMBER_FORMAT` — передана строка, не обозначающая число, вместо числа. * `VALUE_BLANK` — передано пустое значение. * `INVALID_UNIT_ID` — передана единица измерения, недопустимая для характеристики. * `INVALID_GROUP_ID_LENGTH` — в названии превышено допустимое значение символов — 255. * `INVALID_GROUP_ID_CHARACTERS` — переданы [недопустимые символы](*ascii-code). * `INVALID_PICKER_URL` — передана ссылка на изображение для миниатюры, которой нет в переданных ссылках на изображение товара. 
type OfferMappingErrorType string

// List of OfferMappingErrorType
const (
	UNKNOWN_CATEGORY OfferMappingErrorType = "UNKNOWN_CATEGORY"
	CATEGORY_MISMATCH OfferMappingErrorType = "CATEGORY_MISMATCH"
	EMPTY_MARKET_CATEGORY OfferMappingErrorType = "EMPTY_MARKET_CATEGORY"
	UNKNOWN_PARAMETER OfferMappingErrorType = "UNKNOWN_PARAMETER"
	UNEXPECTED_BOOLEAN_VALUE OfferMappingErrorType = "UNEXPECTED_BOOLEAN_VALUE"
	NUMBER_FORMAT OfferMappingErrorType = "NUMBER_FORMAT"
	VALUE_BLANK OfferMappingErrorType = "VALUE_BLANK"
	INVALID_UNIT_ID OfferMappingErrorType = "INVALID_UNIT_ID"
	INVALID_GROUP_ID_LENGTH OfferMappingErrorType = "INVALID_GROUP_ID_LENGTH"
	INVALID_GROUP_ID_CHARACTERS OfferMappingErrorType = "INVALID_GROUP_ID_CHARACTERS"
	INVALID_PICKER_URL OfferMappingErrorType = "INVALID_PICKER_URL"
)

// AllowedOfferMappingErrorTypeEnumValues is all the allowed values of OfferMappingErrorType enum
var AllowedOfferMappingErrorTypeEnumValues = []OfferMappingErrorType{
	"UNKNOWN_CATEGORY",
	"CATEGORY_MISMATCH",
	"EMPTY_MARKET_CATEGORY",
	"UNKNOWN_PARAMETER",
	"UNEXPECTED_BOOLEAN_VALUE",
	"NUMBER_FORMAT",
	"VALUE_BLANK",
	"INVALID_UNIT_ID",
	"INVALID_GROUP_ID_LENGTH",
	"INVALID_GROUP_ID_CHARACTERS",
	"INVALID_PICKER_URL",
}

// validOfferMappingErrorTypeEnumValue provides a map of OfferMappingErrorTypes for fast verification of use input
var validOfferMappingErrorTypeEnumValues = map[OfferMappingErrorType]struct{}{
	"UNKNOWN_CATEGORY": {},
	"CATEGORY_MISMATCH": {},
	"EMPTY_MARKET_CATEGORY": {},
	"UNKNOWN_PARAMETER": {},
	"UNEXPECTED_BOOLEAN_VALUE": {},
	"NUMBER_FORMAT": {},
	"VALUE_BLANK": {},
	"INVALID_UNIT_ID": {},
	"INVALID_GROUP_ID_LENGTH": {},
	"INVALID_GROUP_ID_CHARACTERS": {},
	"INVALID_PICKER_URL": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OfferMappingErrorType) IsValid() bool {
	_, ok := validOfferMappingErrorTypeEnumValues[v]
	return ok
}

// NewOfferMappingErrorTypeFromValue returns a pointer to a valid OfferMappingErrorType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOfferMappingErrorTypeFromValue(v string) (OfferMappingErrorType, error) {
	ev := OfferMappingErrorType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for OfferMappingErrorType: valid values are %v", v, AllowedOfferMappingErrorTypeEnumValues)
}



// AssertOfferMappingErrorTypeRequired checks if the required fields are not zero-ed
func AssertOfferMappingErrorTypeRequired(obj OfferMappingErrorType) error {
	return nil
}

// AssertOfferMappingErrorTypeConstraints checks if the values respects the defined constraints
func AssertOfferMappingErrorTypeConstraints(obj OfferMappingErrorType) error {
	return nil
}
