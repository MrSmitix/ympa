// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server




// OrderShipmentDto - Список посылок.  В параметре может указываться несколько посылок. 
type OrderShipmentDto struct {

	// Идентификатор посылки, присвоенный Маркетом.
	Id int64 `json:"id,omitempty"`

	// Формат даты: `ДД-ММ-ГГГГ`. 
	ShipmentDate string `json:"shipmentDate,omitempty"`

	// **Только для модели Экспресс**  Время, к которому магазин должен упаковать заказ и перевести его в статус `READY_TO_SHIP`. После смены статуса за заказом приедет курьер.  Поле может появиться не сразу. Запрашивайте информацию о заказе в течении 5–10 минут, пока оно не вернется.  Формат времени: 24-часовой, `ЧЧ:ММ`.  Если заказ сделан организацией, параметр не возвращается до согласования даты доставки. 
	ShipmentTime string `json:"shipmentTime,omitempty"`

	// **Только для модели DBS**  Информация для отслеживания перемещений посылки. 
	Tracks *[]OrderTrackDto `json:"tracks,omitempty"`

	// Список грузовых мест.
	Boxes *[]OrderParcelBoxDto `json:"boxes,omitempty"`
}

// AssertOrderShipmentDtoRequired checks if the required fields are not zero-ed
func AssertOrderShipmentDtoRequired(obj OrderShipmentDto) error {
	if obj.Tracks != nil {
		for _, el := range *obj.Tracks {
			if err := AssertOrderTrackDtoRequired(el); err != nil {
				return err
			}
		}
	}
	if obj.Boxes != nil {
		for _, el := range *obj.Boxes {
			if err := AssertOrderParcelBoxDtoRequired(el); err != nil {
				return err
			}
		}
	}
	return nil
}

// AssertOrderShipmentDtoConstraints checks if the values respects the defined constraints
func AssertOrderShipmentDtoConstraints(obj OrderShipmentDto) error {
    if obj.Tracks != nil {
     	for _, el := range *obj.Tracks {
     		if err := AssertOrderTrackDtoConstraints(el); err != nil {
     			return err
     		}
     	}
    }
    if obj.Boxes != nil {
     	for _, el := range *obj.Boxes {
     		if err := AssertOrderParcelBoxDtoConstraints(el); err != nil {
     			return err
     		}
     	}
    }
	return nil
}
