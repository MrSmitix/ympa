// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// LicenseType : Тип лицензии:  * `ALCOHOL` — лицензия на розничную продажу алкогольной продукции. 
type LicenseType string

// List of LicenseType
const (
	ALCOHOL LicenseType = "ALCOHOL"
	UNKNOWN LicenseType = "UNKNOWN"
)

// AllowedLicenseTypeEnumValues is all the allowed values of LicenseType enum
var AllowedLicenseTypeEnumValues = []LicenseType{
	"ALCOHOL",
	"UNKNOWN",
}

// validLicenseTypeEnumValue provides a map of LicenseTypes for fast verification of use input
var validLicenseTypeEnumValues = map[LicenseType]struct{}{
	"ALCOHOL": {},
	"UNKNOWN": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LicenseType) IsValid() bool {
	_, ok := validLicenseTypeEnumValues[v]
	return ok
}

// NewLicenseTypeFromValue returns a pointer to a valid LicenseType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLicenseTypeFromValue(v string) (LicenseType, error) {
	ev := LicenseType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for LicenseType: valid values are %v", v, AllowedLicenseTypeEnumValues)
}



// AssertLicenseTypeRequired checks if the required fields are not zero-ed
func AssertLicenseTypeRequired(obj LicenseType) error {
	return nil
}

// AssertLicenseTypeConstraints checks if the values respects the defined constraints
func AssertLicenseTypeConstraints(obj LicenseType) error {
	return nil
}
