// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"errors"
)



// OrderBoxLayoutItemDto - Информация о товаре в коробке.
type OrderBoxLayoutItemDto struct {

	// Идентификатор товара в заказе.  {% cut \"Где его взять\" %}  Идентификатор приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`.  {% endcut %}   
	Id int64 `json:"id"`

	// Количество единиц товара в коробке.  Используйте это поле, если в коробке поедут целые товары, не разделенные на части. Не используйте это поле одновременно с `partialCount`. 
	FullCount int32 `json:"fullCount,omitempty"`

	PartialCount OrderBoxLayoutPartialCountDto `json:"partialCount,omitempty"`

	// Переданные вами коды маркировки.
	Instances *[]BriefOrderItemInstanceDto `json:"instances,omitempty"`
}

// AssertOrderBoxLayoutItemDtoRequired checks if the required fields are not zero-ed
func AssertOrderBoxLayoutItemDtoRequired(obj OrderBoxLayoutItemDto) error {
	elements := map[string]interface{}{
		"id": obj.Id,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertOrderBoxLayoutPartialCountDtoRequired(obj.PartialCount); err != nil {
		return err
	}
	if obj.Instances != nil {
		for _, el := range *obj.Instances {
			if err := AssertBriefOrderItemInstanceDtoRequired(el); err != nil {
				return err
			}
		}
	}
	return nil
}

// AssertOrderBoxLayoutItemDtoConstraints checks if the values respects the defined constraints
func AssertOrderBoxLayoutItemDtoConstraints(obj OrderBoxLayoutItemDto) error {
	if obj.FullCount < 1 {
		return &ParsingError{Param: "FullCount", Err: errors.New(errMsgMinValueConstraint)}
	}
	if err := AssertOrderBoxLayoutPartialCountDtoConstraints(obj.PartialCount); err != nil {
		return err
	}
    if obj.Instances != nil {
     	for _, el := range *obj.Instances {
     		if err := AssertBriefOrderItemInstanceDtoConstraints(el); err != nil {
     			return err
     		}
     	}
    }
	return nil
}
