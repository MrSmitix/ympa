// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 */

package ympa_go_server


import (
	"fmt"
)


// OfferProcessingStatusType : Статус публикации товара:  * `READY` — товар прошел модерацию. Чтобы разместить его на Маркете, установите для него цену. * `IN_WORK` — товар проходит модерацию. Это занимает несколько дней. * `NEED_CONTENT` — для товара без SKU на Маркете `marketSku` нужно найти карточку самостоятельно (через API или кабинет продавца на Маркете) или создать ее, если товар еще не продается на Маркете. * `NEED_INFO` — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. Информация о причинах отклонения возвращается в параметре `notes`. * `REJECTED` — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары. * `SUSPENDED` — товар не прошел модерацию, так как Маркет пока не размещает подобные товары. 
type OfferProcessingStatusType string

// List of OfferProcessingStatusType
const (
	UNKNOWN OfferProcessingStatusType = "UNKNOWN"
	READY OfferProcessingStatusType = "READY"
	IN_WORK OfferProcessingStatusType = "IN_WORK"
	NEED_INFO OfferProcessingStatusType = "NEED_INFO"
	NEED_MAPPING OfferProcessingStatusType = "NEED_MAPPING"
	NEED_CONTENT OfferProcessingStatusType = "NEED_CONTENT"
	CONTENT_PROCESSING OfferProcessingStatusType = "CONTENT_PROCESSING"
	SUSPENDED OfferProcessingStatusType = "SUSPENDED"
	REJECTED OfferProcessingStatusType = "REJECTED"
	REVIEW OfferProcessingStatusType = "REVIEW"
	CREATE_ERROR OfferProcessingStatusType = "CREATE_ERROR"
	UPDATE_ERROR OfferProcessingStatusType = "UPDATE_ERROR"
)

// AllowedOfferProcessingStatusTypeEnumValues is all the allowed values of OfferProcessingStatusType enum
var AllowedOfferProcessingStatusTypeEnumValues = []OfferProcessingStatusType{
	"UNKNOWN",
	"READY",
	"IN_WORK",
	"NEED_INFO",
	"NEED_MAPPING",
	"NEED_CONTENT",
	"CONTENT_PROCESSING",
	"SUSPENDED",
	"REJECTED",
	"REVIEW",
	"CREATE_ERROR",
	"UPDATE_ERROR",
}

// validOfferProcessingStatusTypeEnumValue provides a map of OfferProcessingStatusTypes for fast verification of use input
var validOfferProcessingStatusTypeEnumValues = map[OfferProcessingStatusType]struct{}{
	"UNKNOWN": {},
	"READY": {},
	"IN_WORK": {},
	"NEED_INFO": {},
	"NEED_MAPPING": {},
	"NEED_CONTENT": {},
	"CONTENT_PROCESSING": {},
	"SUSPENDED": {},
	"REJECTED": {},
	"REVIEW": {},
	"CREATE_ERROR": {},
	"UPDATE_ERROR": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OfferProcessingStatusType) IsValid() bool {
	_, ok := validOfferProcessingStatusTypeEnumValues[v]
	return ok
}

// NewOfferProcessingStatusTypeFromValue returns a pointer to a valid OfferProcessingStatusType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOfferProcessingStatusTypeFromValue(v string) (OfferProcessingStatusType, error) {
	ev := OfferProcessingStatusType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for OfferProcessingStatusType: valid values are %v", v, AllowedOfferProcessingStatusTypeEnumValues)
}



// AssertOfferProcessingStatusTypeRequired checks if the required fields are not zero-ed
func AssertOfferProcessingStatusTypeRequired(obj OfferProcessingStatusType) error {
	return nil
}

// AssertOfferProcessingStatusTypeConstraints checks if the values respects the defined constraints
func AssertOfferProcessingStatusTypeConstraints(obj OfferProcessingStatusType) error {
	return nil
}
