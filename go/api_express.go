/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * API version: LATEST
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ympa_go_gin_server

import (
	"github.com/gin-gonic/gin"
)

type ExpressAPI struct {
}

// Post /campaigns/:campaignId/hidden-offers
// Скрытие товаров и настройки скрытия 
func (api *ExpressAPI) AddHiddenOffers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/offer-mappings/archive
// Добавление товаров в архив 
func (api *ExpressAPI) AddOffersToArchive(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /tariffs/calculate
// Калькулятор стоимости услуг 
func (api *ExpressAPI) CalculateTariffs(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/price-quarantine/confirm
// Удаление товара из карантина по цене в кабинете 
func (api *ExpressAPI) ConfirmBusinessPrices(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/price-quarantine/confirm
// Удаление товара из карантина по цене в магазине 
func (api *ExpressAPI) ConfirmCampaignPrices(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/chats/new
// Создание нового чата с покупателем 
func (api *ExpressAPI) CreateChat(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/offers/delete
// Удаление товаров из ассортимента магазина 
func (api *ExpressAPI) DeleteCampaignOffers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/goods-feedback/comments/delete
// Удаление комментария к отзыву 
func (api *ExpressAPI) DeleteGoodsFeedbackComment(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/hidden-offers/delete
// Возобновление показа товаров 
func (api *ExpressAPI) DeleteHiddenOffers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/offer-mappings/delete
// Удаление товаров из каталога 
func (api *ExpressAPI) DeleteOffers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/offer-mappings/unarchive
// Удаление товаров из архива 
func (api *ExpressAPI) DeleteOffersFromArchive(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/promos/offers/delete
// Удаление товаров из акции 
func (api *ExpressAPI) DeletePromoOffers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/boost-consolidated/generate
// Отчет по бусту продаж 
func (api *ExpressAPI) GenerateBoostConsolidatedReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/competitors-position/generate
// Отчет «Конкурентная позиция» 
func (api *ExpressAPI) GenerateCompetitorsPositionReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/goods-feedback/generate
// Отчет по отзывам о товарах 
func (api *ExpressAPI) GenerateGoodsFeedbackReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/goods-realization/generate
// Отчет по реализации 
func (api *ExpressAPI) GenerateGoodsRealizationReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/documents/labels/generate
// Готовые ярлыки‑наклейки на все коробки в нескольких заказах 
func (api *ExpressAPI) GenerateMassOrderLabelsReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes/:boxId/label
// Готовый ярлык‑наклейка для коробки в заказе 
func (api *ExpressAPI) GenerateOrderLabel(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/orders/:orderId/delivery/labels
// Готовые ярлыки‑наклейки на все коробки в одном заказе 
func (api *ExpressAPI) GenerateOrderLabels(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/prices/generate
// Отчет «Цены на рынке» 
func (api *ExpressAPI) GeneratePricesReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/shelf-statistics/generate
// Отчет по полкам 
func (api *ExpressAPI) GenerateShelfsStatisticsReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/shows-sales/generate
// Отчет «Аналитика продаж» 
func (api *ExpressAPI) GenerateShowsSalesReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/stocks-on-warehouses/generate
// Отчет по остаткам на складах 
func (api *ExpressAPI) GenerateStocksOnWarehousesReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/united-marketplace-services/generate
// Отчет по стоимости услуг 
func (api *ExpressAPI) GenerateUnitedMarketplaceServicesReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/united-netting/generate
// Отчет по платежам 
func (api *ExpressAPI) GenerateUnitedNettingReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /reports/united-orders/generate
// Отчет по заказам 
func (api *ExpressAPI) GenerateUnitedOrdersReport(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/offers/all
// Все предложения магазина 
// Deprecated
func (api *ExpressAPI) GetAllOffers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/bids/info
// Информация об установленных ставках 
func (api *ExpressAPI) GetBidsInfoForBusiness(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/bids/recommendations
// Рекомендованные ставки для заданных товаров 
func (api *ExpressAPI) GetBidsRecommendations(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/price-quarantine
// Список товаров, находящихся в карантине по цене в кабинете 
func (api *ExpressAPI) GetBusinessQuarantineOffers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/settings
// Настройки кабинета 
func (api *ExpressAPI) GetBusinessSettings(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId
// Информация о магазине 
func (api *ExpressAPI) GetCampaign(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/logins
// Логины, связанные с магазином 
func (api *ExpressAPI) GetCampaignLogins(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/offers
// Информация о товарах, которые размещены в заданном магазине 
func (api *ExpressAPI) GetCampaignOffers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/price-quarantine
// Список товаров, находящихся в карантине по цене в магазине 
func (api *ExpressAPI) GetCampaignQuarantineOffers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/region
// Регион магазина 
// Deprecated
func (api *ExpressAPI) GetCampaignRegion(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/settings
// Настройки магазина 
func (api *ExpressAPI) GetCampaignSettings(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns
// Список магазинов пользователя 
func (api *ExpressAPI) GetCampaigns(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/by_login/:login
// Магазины, доступные логину 
func (api *ExpressAPI) GetCampaignsByLogin(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /categories/max-sale-quantum
// Лимит на установку кванта продажи и минимального количества товаров в заказе 
func (api *ExpressAPI) GetCategoriesMaxSaleQuantum(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /categories/tree
// Дерево категорий 
func (api *ExpressAPI) GetCategoriesTree(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /category/:categoryId/parameters
// Списки характеристик товаров по категориям 
func (api *ExpressAPI) GetCategoryContentParameters(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/chats/history
// Получение истории сообщений в чате 
func (api *ExpressAPI) GetChatHistory(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/chats
// Получение доступных чатов 
func (api *ExpressAPI) GetChats(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /delivery/services
// Справочник служб доставки 
func (api *ExpressAPI) GetDeliveryServices(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/feeds/:feedId
// Информация о прайс-листе 
// Deprecated
func (api *ExpressAPI) GetFeed(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/feeds/:feedId/index-logs
// Отчет по индексации прайс-листа 
// Deprecated
func (api *ExpressAPI) GetFeedIndexLogs(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/feedback/updates
// Новые и обновленные отзывы о магазине 
// Deprecated
func (api *ExpressAPI) GetFeedbackAndCommentUpdates(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/feeds
// Список прайс-листов магазина 
// Deprecated
func (api *ExpressAPI) GetFeeds(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/goods-feedback/comments
// Получение комментариев к отзыву 
func (api *ExpressAPI) GetGoodsFeedbackComments(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/goods-feedback
// Получение отзывов о товарах продавца 
func (api *ExpressAPI) GetGoodsFeedbacks(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/stats/skus
// Отчет по товарам 
func (api *ExpressAPI) GetGoodsStats(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/hidden-offers
// Информация о скрытых вами товарах 
func (api *ExpressAPI) GetHiddenOffers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/offer-cards
// Получение информации о заполненности карточек магазина 
func (api *ExpressAPI) GetOfferCardsContentStatus(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/offer-mapping-entries
// Список товаров в каталоге 
// Deprecated
func (api *ExpressAPI) GetOfferMappingEntries(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/offer-mappings
// Информация о товарах в каталоге 
func (api *ExpressAPI) GetOfferMappings(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/offers/recommendations
// Рекомендации Маркета, касающиеся цен 
func (api *ExpressAPI) GetOfferRecommendations(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/offers
// Предложения магазина 
// Deprecated
func (api *ExpressAPI) GetOffers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/orders/:orderId
// Информация об одном заказе 
func (api *ExpressAPI) GetOrder(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/orders/:orderId/business-buyer
// Информация о покупателе — юридическом лице 
func (api *ExpressAPI) GetOrderBusinessBuyerInfo(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/orders/:orderId/documents
// Информация о документах 
func (api *ExpressAPI) GetOrderBusinessDocumentsInfo(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/orders/:orderId/delivery/labels/data
// Данные для самостоятельного изготовления ярлыков 
func (api *ExpressAPI) GetOrderLabelsData(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/orders
// Информация о нескольких заказах 
func (api *ExpressAPI) GetOrders(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/stats/orders
// Детальная информация по заказам 
func (api *ExpressAPI) GetOrdersStats(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/offer-prices
// Список цен 
// Deprecated
func (api *ExpressAPI) GetPrices(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/offer-prices
// Просмотр цен на указанные товары в магазине 
func (api *ExpressAPI) GetPricesByOfferIds(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/promos/offers
// Получение списка товаров, которые участвуют или могут участвовать в акции 
func (api *ExpressAPI) GetPromoOffers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/promos
// Получение списка акций 
func (api *ExpressAPI) GetPromos(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/ratings/quality/details
// Заказы, которые повлияли на индекс качества 
func (api *ExpressAPI) GetQualityRatingDetails(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/ratings/quality
// Индекс качества магазинов 
func (api *ExpressAPI) GetQualityRatings(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /reports/info/:reportId
// Получение заданного отчета 
func (api *ExpressAPI) GetReportInfo(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/orders/:orderId/returns/:returnId
// Информация о невыкупе или возврате 
func (api *ExpressAPI) GetReturn(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/orders/:orderId/returns/:returnId/application
// Получение заявления на возврат 
func (api *ExpressAPI) GetReturnApplication(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision/:itemId/image/:imageHash
// Получение фотографии возврата 
func (api *ExpressAPI) GetReturnPhoto(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /campaigns/:campaignId/returns
// Список невыкупов и возвратов 
func (api *ExpressAPI) GetReturns(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/offers/stocks
// Информация об остатках и оборачиваемости 
func (api *ExpressAPI) GetStocks(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/offer-mapping-entries/suggestions
// Рекомендованные карточки для товаров 
// Deprecated
func (api *ExpressAPI) GetSuggestedOfferMappingEntries(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/offer-mappings/suggestions
// Просмотр карточек на Маркете, которые подходят вашим товарам 
func (api *ExpressAPI) GetSuggestedOfferMappings(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/offer-prices/suggestions
// Цены для продвижения товаров 
// Deprecated
func (api *ExpressAPI) GetSuggestedPrices(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /businesses/:businessId/warehouses
// Список складов и групп складов 
func (api *ExpressAPI) GetWarehouses(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /campaigns/:campaignId/orders/:orderId/identifiers
// Передача кодов маркировки единиц товара 
func (api *ExpressAPI) ProvideOrderItemIdentifiers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /businesses/:businessId/bids
// Включение буста продаж и установка ставок 
func (api *ExpressAPI) PutBidsForBusiness(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /campaigns/:campaignId/bids
// Включение буста продаж и установка ставок для магазина 
func (api *ExpressAPI) PutBidsForCampaign(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/feeds/:feedId/refresh
// Сообщить, что прайс-лист обновился 
// Deprecated
func (api *ExpressAPI) RefreshFeed(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /regions/:regionId/children
// Информация о дочерних регионах 
func (api *ExpressAPI) SearchRegionChildren(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /regions/:regionId
// Информация о регионе 
func (api *ExpressAPI) SearchRegionsById(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /regions
// Поиск регионов по их имени 
func (api *ExpressAPI) SearchRegionsByName(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/chats/file/send
// Отправка файла в чат 
func (api *ExpressAPI) SendFileToChat(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/chats/message
// Отправка сообщения в чат 
func (api *ExpressAPI) SendMessageToChat(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/feeds/:feedId/params
// Изменение параметров прайс-листа 
// Deprecated
func (api *ExpressAPI) SetFeedParams(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /campaigns/:campaignId/orders/:orderId/boxes
// Подготовка заказа 
func (api *ExpressAPI) SetOrderBoxLayout(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes
// Передача количества грузовых мест в заказе 
func (api *ExpressAPI) SetOrderShipmentBoxes(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/goods-feedback/skip-reaction
// Отказ от ответа на отзывы 
func (api *ExpressAPI) SkipGoodsFeedbacksReaction(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/offer-prices/updates
// Установка цен на товары во всех магазинах 
func (api *ExpressAPI) UpdateBusinessPrices(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/offers/update
// Изменение условий продажи товаров в магазине 
func (api *ExpressAPI) UpdateCampaignOffers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/goods-feedback/comments/update
// Добавление нового или изменение созданного комментария 
func (api *ExpressAPI) UpdateGoodsFeedbackComment(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/offer-cards/update
// Редактирование категорийных характеристик товара 
func (api *ExpressAPI) UpdateOfferContent(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/offer-mapping-entries/updates
// Добавление и редактирование товаров в каталоге 
// Deprecated
func (api *ExpressAPI) UpdateOfferMappingEntries(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/offer-mappings/update
// Добавление товаров в каталог и изменение информации о них 
func (api *ExpressAPI) UpdateOfferMappings(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /campaigns/:campaignId/orders/:orderId/items
// Удаление товара из заказа или уменьшение числа единиц 
func (api *ExpressAPI) UpdateOrderItems(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /campaigns/:campaignId/orders/:orderId/status
// Изменение статуса одного заказа 
func (api *ExpressAPI) UpdateOrderStatus(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/orders/status-update
// Изменение статусов нескольких заказов 
func (api *ExpressAPI) UpdateOrderStatuses(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /campaigns/:campaignId/offer-prices/updates
// Установка цен на товары в конкретном магазине 
func (api *ExpressAPI) UpdatePrices(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /businesses/:businessId/promos/offers/update
// Добавление товаров в акцию или изменение их цен 
func (api *ExpressAPI) UpdatePromoOffers(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /campaigns/:campaignId/offers/stocks
// Передача информации об остатках 
func (api *ExpressAPI) UpdateStocks(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /campaigns/:campaignId/orders/:orderId/verifyEac
// Передача кода подтверждения 
func (api *ExpressAPI) VerifyOrderEac(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

