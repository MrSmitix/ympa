/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ympa_go_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FeedIndexLogsResultDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeedIndexLogsResultDTO{}

// FeedIndexLogsResultDTO Результат выполнения запроса отчета по индексации прайс-листа.
type FeedIndexLogsResultDTO struct {
	Feed *FeedIndexLogsFeedDTO `json:"feed,omitempty"`
	// Список отчетов по индексации прайс-листа.
	IndexLogRecords []FeedIndexLogsRecordDTO `json:"indexLogRecords"`
	// Количество отчетов на всех страницах выходных данных.
	Total *int64 `json:"total,omitempty"`
}

type _FeedIndexLogsResultDTO FeedIndexLogsResultDTO

// NewFeedIndexLogsResultDTO instantiates a new FeedIndexLogsResultDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeedIndexLogsResultDTO(indexLogRecords []FeedIndexLogsRecordDTO) *FeedIndexLogsResultDTO {
	this := FeedIndexLogsResultDTO{}
	this.IndexLogRecords = indexLogRecords
	return &this
}

// NewFeedIndexLogsResultDTOWithDefaults instantiates a new FeedIndexLogsResultDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeedIndexLogsResultDTOWithDefaults() *FeedIndexLogsResultDTO {
	this := FeedIndexLogsResultDTO{}
	return &this
}

// GetFeed returns the Feed field value if set, zero value otherwise.
func (o *FeedIndexLogsResultDTO) GetFeed() FeedIndexLogsFeedDTO {
	if o == nil || IsNil(o.Feed) {
		var ret FeedIndexLogsFeedDTO
		return ret
	}
	return *o.Feed
}

// GetFeedOk returns a tuple with the Feed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedIndexLogsResultDTO) GetFeedOk() (*FeedIndexLogsFeedDTO, bool) {
	if o == nil || IsNil(o.Feed) {
		return nil, false
	}
	return o.Feed, true
}

// HasFeed returns a boolean if a field has been set.
func (o *FeedIndexLogsResultDTO) HasFeed() bool {
	if o != nil && !IsNil(o.Feed) {
		return true
	}

	return false
}

// SetFeed gets a reference to the given FeedIndexLogsFeedDTO and assigns it to the Feed field.
func (o *FeedIndexLogsResultDTO) SetFeed(v FeedIndexLogsFeedDTO) {
	o.Feed = &v
}

// GetIndexLogRecords returns the IndexLogRecords field value
func (o *FeedIndexLogsResultDTO) GetIndexLogRecords() []FeedIndexLogsRecordDTO {
	if o == nil {
		var ret []FeedIndexLogsRecordDTO
		return ret
	}

	return o.IndexLogRecords
}

// GetIndexLogRecordsOk returns a tuple with the IndexLogRecords field value
// and a boolean to check if the value has been set.
func (o *FeedIndexLogsResultDTO) GetIndexLogRecordsOk() ([]FeedIndexLogsRecordDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndexLogRecords, true
}

// SetIndexLogRecords sets field value
func (o *FeedIndexLogsResultDTO) SetIndexLogRecords(v []FeedIndexLogsRecordDTO) {
	o.IndexLogRecords = v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *FeedIndexLogsResultDTO) GetTotal() int64 {
	if o == nil || IsNil(o.Total) {
		var ret int64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedIndexLogsResultDTO) GetTotalOk() (*int64, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *FeedIndexLogsResultDTO) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int64 and assigns it to the Total field.
func (o *FeedIndexLogsResultDTO) SetTotal(v int64) {
	o.Total = &v
}

func (o FeedIndexLogsResultDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeedIndexLogsResultDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Feed) {
		toSerialize["feed"] = o.Feed
	}
	toSerialize["indexLogRecords"] = o.IndexLogRecords
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

func (o *FeedIndexLogsResultDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"indexLogRecords",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFeedIndexLogsResultDTO := _FeedIndexLogsResultDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFeedIndexLogsResultDTO)

	if err != nil {
		return err
	}

	*o = FeedIndexLogsResultDTO(varFeedIndexLogsResultDTO)

	return err
}

type NullableFeedIndexLogsResultDTO struct {
	value *FeedIndexLogsResultDTO
	isSet bool
}

func (v NullableFeedIndexLogsResultDTO) Get() *FeedIndexLogsResultDTO {
	return v.value
}

func (v *NullableFeedIndexLogsResultDTO) Set(val *FeedIndexLogsResultDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableFeedIndexLogsResultDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableFeedIndexLogsResultDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeedIndexLogsResultDTO(val *FeedIndexLogsResultDTO) *NullableFeedIndexLogsResultDTO {
	return &NullableFeedIndexLogsResultDTO{value: val, isSet: true}
}

func (v NullableFeedIndexLogsResultDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeedIndexLogsResultDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


