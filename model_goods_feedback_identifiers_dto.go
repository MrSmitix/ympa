/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ympa_go_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GoodsFeedbackIdentifiersDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoodsFeedbackIdentifiersDTO{}

// GoodsFeedbackIdentifiersDTO Идентификаторы, которые связаны с отзывом.
type GoodsFeedbackIdentifiersDTO struct {
	// Идентификатор заказа на Маркете.
	OrderId int64 `json:"orderId"`
	// Идентификатор модели товара.
	ModelId int64 `json:"modelId"`
}

type _GoodsFeedbackIdentifiersDTO GoodsFeedbackIdentifiersDTO

// NewGoodsFeedbackIdentifiersDTO instantiates a new GoodsFeedbackIdentifiersDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoodsFeedbackIdentifiersDTO(orderId int64, modelId int64) *GoodsFeedbackIdentifiersDTO {
	this := GoodsFeedbackIdentifiersDTO{}
	this.OrderId = orderId
	this.ModelId = modelId
	return &this
}

// NewGoodsFeedbackIdentifiersDTOWithDefaults instantiates a new GoodsFeedbackIdentifiersDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoodsFeedbackIdentifiersDTOWithDefaults() *GoodsFeedbackIdentifiersDTO {
	this := GoodsFeedbackIdentifiersDTO{}
	return &this
}

// GetOrderId returns the OrderId field value
func (o *GoodsFeedbackIdentifiersDTO) GetOrderId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *GoodsFeedbackIdentifiersDTO) GetOrderIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *GoodsFeedbackIdentifiersDTO) SetOrderId(v int64) {
	o.OrderId = v
}

// GetModelId returns the ModelId field value
func (o *GoodsFeedbackIdentifiersDTO) GetModelId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ModelId
}

// GetModelIdOk returns a tuple with the ModelId field value
// and a boolean to check if the value has been set.
func (o *GoodsFeedbackIdentifiersDTO) GetModelIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModelId, true
}

// SetModelId sets field value
func (o *GoodsFeedbackIdentifiersDTO) SetModelId(v int64) {
	o.ModelId = v
}

func (o GoodsFeedbackIdentifiersDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoodsFeedbackIdentifiersDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["orderId"] = o.OrderId
	toSerialize["modelId"] = o.ModelId
	return toSerialize, nil
}

func (o *GoodsFeedbackIdentifiersDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"orderId",
		"modelId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGoodsFeedbackIdentifiersDTO := _GoodsFeedbackIdentifiersDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGoodsFeedbackIdentifiersDTO)

	if err != nil {
		return err
	}

	*o = GoodsFeedbackIdentifiersDTO(varGoodsFeedbackIdentifiersDTO)

	return err
}

type NullableGoodsFeedbackIdentifiersDTO struct {
	value *GoodsFeedbackIdentifiersDTO
	isSet bool
}

func (v NullableGoodsFeedbackIdentifiersDTO) Get() *GoodsFeedbackIdentifiersDTO {
	return v.value
}

func (v *NullableGoodsFeedbackIdentifiersDTO) Set(val *GoodsFeedbackIdentifiersDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableGoodsFeedbackIdentifiersDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableGoodsFeedbackIdentifiersDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoodsFeedbackIdentifiersDTO(val *GoodsFeedbackIdentifiersDTO) *NullableGoodsFeedbackIdentifiersDTO {
	return &NullableGoodsFeedbackIdentifiersDTO{value: val, isSet: true}
}

func (v NullableGoodsFeedbackIdentifiersDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoodsFeedbackIdentifiersDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


