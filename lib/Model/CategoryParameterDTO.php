<?php

/**
 * Партнерский API Маркета
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 */
namespace OpenAPIServer\Model;

use OpenAPIServer\BaseModel;

/**
 * CategoryParameterDTO
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
class CategoryParameterDTO extends BaseModel
{
    /**
     * @var string Models namespace.
     * Can be required for data deserialization when model contains referenced schemas.
     */
    protected const MODELS_NAMESPACE = '\OpenAPIServer\Model';

    /**
     * @var string Constant with OAS schema of current class.
     * Should be overwritten by inherited class.
     */
    protected const MODEL_SCHEMA = <<<'SCHEMA'
{
  "required" : [ "allowCustomValues", "distinctive", "filtering", "id", "multivalue", "required", "type" ],
  "type" : "object",
  "properties" : {
    "id" : {
      "type" : "integer",
      "description" : "Идентификатор характеристики.",
      "format" : "int64"
    },
    "name" : {
      "type" : "string",
      "description" : "Название характеристики."
    },
    "type" : {
      "$ref" : "#/components/schemas/ParameterType"
    },
    "unit" : {
      "$ref" : "#/components/schemas/CategoryParameterUnitDTO"
    },
    "description" : {
      "type" : "string",
      "description" : "Описание характеристики."
    },
    "recommendationTypes" : {
      "type" : "array",
      "description" : "Перечень возможных рекомендаций по заполнению карточки, к которым относится данная характеристика.",
      "nullable" : true,
      "items" : {
        "$ref" : "#/components/schemas/OfferCardRecommendationType"
      }
    },
    "required" : {
      "type" : "boolean",
      "description" : "Обязательность характеристики."
    },
    "filtering" : {
      "type" : "boolean",
      "description" : "Используется ли характеристика в фильтре."
    },
    "distinctive" : {
      "type" : "boolean",
      "description" : "Является ли характеристика особенностью варианта."
    },
    "multivalue" : {
      "type" : "boolean",
      "description" : "Можно ли передать сразу несколько значений."
    },
    "allowCustomValues" : {
      "type" : "boolean",
      "description" : "Можно ли передавать собственное значение, которого нет в списке вариантов Маркета. Только для характеристик типа `ENUM`."
    },
    "values" : {
      "type" : "array",
      "description" : "Список допустимых значений параметра. Только для характеристик типа `ENUM`.",
      "nullable" : true,
      "items" : {
        "$ref" : "#/components/schemas/ParameterValueOptionDTO"
      }
    },
    "constraints" : {
      "$ref" : "#/components/schemas/ParameterValueConstraintsDTO"
    },
    "valueRestrictions" : {
      "type" : "array",
      "description" : "Ограничения на значения, накладываемые другими характеристиками. Только для характеристик типа `ENUM`.",
      "nullable" : true,
      "items" : {
        "$ref" : "#/components/schemas/ValueRestrictionDTO"
      }
    }
  },
  "description" : "Характеристика товара."
}
SCHEMA;
}
