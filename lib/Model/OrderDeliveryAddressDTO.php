<?php

/**
 * Партнерский API Маркета
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 */
namespace OpenAPIServer\Model;

use OpenAPIServer\BaseModel;

/**
 * OrderDeliveryAddressDTO
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
class OrderDeliveryAddressDTO extends BaseModel
{
    /**
     * @var string Models namespace.
     * Can be required for data deserialization when model contains referenced schemas.
     */
    protected const MODELS_NAMESPACE = '\OpenAPIServer\Model';

    /**
     * @var string Constant with OAS schema of current class.
     * Should be overwritten by inherited class.
     */
    protected const MODEL_SCHEMA = <<<'SCHEMA'
{
  "type" : "object",
  "properties" : {
    "country" : {
      "type" : "string",
      "description" : "Страна.\n\nОбязательный параметр.\n"
    },
    "postcode" : {
      "type" : "string",
      "description" : "Почтовый индекс.\n\nУказывается, если выбрана доставка почтой (`delivery type=POST`).\n"
    },
    "city" : {
      "type" : "string",
      "description" : "Город или населенный пункт.\n\nОбязательный параметр.\n"
    },
    "district" : {
      "type" : "string",
      "description" : "Район."
    },
    "subway" : {
      "type" : "string",
      "description" : "Станция метро."
    },
    "street" : {
      "type" : "string",
      "description" : "Улица.\n\nОбязательный параметр.\n"
    },
    "house" : {
      "type" : "string",
      "description" : "Дом или владение.\n\nОбязательный параметр.\n"
    },
    "block" : {
      "type" : "string",
      "description" : "Корпус или строение."
    },
    "entrance" : {
      "type" : "string",
      "description" : "Подъезд."
    },
    "entryphone" : {
      "type" : "string",
      "description" : "Код домофона."
    },
    "floor" : {
      "type" : "string",
      "description" : "Этаж."
    },
    "apartment" : {
      "type" : "string",
      "description" : "Квартира или офис."
    },
    "phone" : {
      "type" : "string",
      "description" : "Телефон получателя заказа.\n\nОбязательный параметр.\n"
    },
    "recipient" : {
      "type" : "string",
      "description" : "Фамилия, имя и отчество получателя заказа.\n\nОбязательный параметр.\n"
    },
    "gps" : {
      "$ref" : "#/components/schemas/GpsDTO"
    }
  },
  "description" : "Адрес доставки.\n\nУказывается, если `type=DELIVERY`, `type=POST` или `type=PICKUP` (адрес пункта выдачи).\n"
}
SCHEMA;
}
