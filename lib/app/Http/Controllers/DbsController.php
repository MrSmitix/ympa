<?php

/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 * PHP version 7.2.5
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class DbsController extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation putBidsForBusiness
     *
     * Включение буста продаж и установка ставок.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function putBidsForBusiness($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing putBidsForBusiness as a put method ?');
    }
    /**
     * Operation getBidsInfoForBusiness
     *
     * Информация об установленных ставках.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getBidsInfoForBusiness($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getBidsInfoForBusiness as a post method ?');
    }
    /**
     * Operation getBidsRecommendations
     *
     * Рекомендованные ставки для заданных товаров.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getBidsRecommendations($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getBidsRecommendations as a post method ?');
    }
    /**
     * Operation getChats
     *
     * Получение доступных чатов.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getChats($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getChats as a post method ?');
    }
    /**
     * Operation sendFileToChat
     *
     * Отправка файла в чат.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function sendFileToChat($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing sendFileToChat as a post method ?');
    }
    /**
     * Operation getChatHistory
     *
     * Получение истории сообщений в чате.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getChatHistory($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getChatHistory as a post method ?');
    }
    /**
     * Operation sendMessageToChat
     *
     * Отправка сообщения в чат.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function sendMessageToChat($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing sendMessageToChat as a post method ?');
    }
    /**
     * Operation createChat
     *
     * Создание нового чата с покупателем.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function createChat($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing createChat as a post method ?');
    }
    /**
     * Operation getGoodsFeedbacks
     *
     * Получение отзывов о товарах продавца.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getGoodsFeedbacks($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getGoodsFeedbacks as a post method ?');
    }
    /**
     * Operation getGoodsFeedbackComments
     *
     * Получение комментариев к отзыву.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getGoodsFeedbackComments($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getGoodsFeedbackComments as a post method ?');
    }
    /**
     * Operation deleteGoodsFeedbackComment
     *
     * Удаление комментария к отзыву.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function deleteGoodsFeedbackComment($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteGoodsFeedbackComment as a post method ?');
    }
    /**
     * Operation updateGoodsFeedbackComment
     *
     * Добавление нового или изменение созданного комментария.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function updateGoodsFeedbackComment($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateGoodsFeedbackComment as a post method ?');
    }
    /**
     * Operation skipGoodsFeedbacksReaction
     *
     * Отказ от ответа на отзывы.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function skipGoodsFeedbacksReaction($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing skipGoodsFeedbacksReaction as a post method ?');
    }
    /**
     * Operation getOfferCardsContentStatus
     *
     * Получение информации о заполненности карточек магазина.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getOfferCardsContentStatus($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOfferCardsContentStatus as a post method ?');
    }
    /**
     * Operation updateOfferContent
     *
     * Редактирование категорийных характеристик товара.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function updateOfferContent($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateOfferContent as a post method ?');
    }
    /**
     * Operation getOfferMappings
     *
     * Информация о товарах в каталоге.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getOfferMappings($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOfferMappings as a post method ?');
    }
    /**
     * Operation addOffersToArchive
     *
     * Добавление товаров в архив.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function addOffersToArchive($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing addOffersToArchive as a post method ?');
    }
    /**
     * Operation deleteOffers
     *
     * Удаление товаров из каталога.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function deleteOffers($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteOffers as a post method ?');
    }
    /**
     * Operation getSuggestedOfferMappings
     *
     * Просмотр карточек на Маркете, которые подходят вашим товарам.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getSuggestedOfferMappings($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getSuggestedOfferMappings as a post method ?');
    }
    /**
     * Operation deleteOffersFromArchive
     *
     * Удаление товаров из архива.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function deleteOffersFromArchive($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteOffersFromArchive as a post method ?');
    }
    /**
     * Operation updateOfferMappings
     *
     * Добавление товаров в каталог и изменение информации о них.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function updateOfferMappings($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateOfferMappings as a post method ?');
    }
    /**
     * Operation updateBusinessPrices
     *
     * Установка цен на товары во всех магазинах.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function updateBusinessPrices($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateBusinessPrices as a post method ?');
    }
    /**
     * Operation getOfferRecommendations
     *
     * Рекомендации Маркета, касающиеся цен.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getOfferRecommendations($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOfferRecommendations as a post method ?');
    }
    /**
     * Operation getBusinessQuarantineOffers
     *
     * Список товаров, находящихся в карантине по цене в кабинете.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getBusinessQuarantineOffers($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getBusinessQuarantineOffers as a post method ?');
    }
    /**
     * Operation confirmBusinessPrices
     *
     * Удаление товара из карантина по цене в кабинете.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function confirmBusinessPrices($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing confirmBusinessPrices as a post method ?');
    }
    /**
     * Operation getPromos
     *
     * Получение списка акций.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getPromos($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getPromos as a post method ?');
    }
    /**
     * Operation getPromoOffers
     *
     * Получение списка товаров, которые участвуют или могут участвовать в акции.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getPromoOffers($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getPromoOffers as a post method ?');
    }
    /**
     * Operation deletePromoOffers
     *
     * Удаление товаров из акции.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function deletePromoOffers($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deletePromoOffers as a post method ?');
    }
    /**
     * Operation updatePromoOffers
     *
     * Добавление товаров в акцию или изменение их цен.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function updatePromoOffers($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updatePromoOffers as a post method ?');
    }
    /**
     * Operation getQualityRatings
     *
     * Индекс качества магазинов.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getQualityRatings($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getQualityRatings as a post method ?');
    }
    /**
     * Operation getBusinessSettings
     *
     * Настройки кабинета.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getBusinessSettings($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getBusinessSettings as a post method ?');
    }
    /**
     * Operation getWarehouses
     *
     * Список складов и групп складов.
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getWarehouses($businessId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getWarehouses as a get method ?');
    }
    /**
     * Operation getCampaigns
     *
     * Список магазинов пользователя.
     *
     *
     * @return Http response
     */
    public function getCampaigns()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if ($input['page'] > 10000) {
            throw new \InvalidArgumentException('invalid value for $page when calling DbsController.getCampaigns, must be smaller than or equal to 10000.');
        }
        $page = $input['page'];

        $pageSize = $input['pageSize'];


        return response('How about implementing getCampaigns as a get method ?');
    }
    /**
     * Operation getCampaignsByLogin
     *
     * Магазины, доступные логину.
     *
     * @param string $login Логин пользователя. (required)
     *
     * @return Http response
     */
    public function getCampaignsByLogin($login)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getCampaignsByLogin as a get method ?');
    }
    /**
     * Operation getCampaign
     *
     * Информация о магазине.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getCampaign($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getCampaign as a get method ?');
    }
    /**
     * Operation putBidsForCampaign
     *
     * Включение буста продаж и установка ставок для магазина.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function putBidsForCampaign($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing putBidsForCampaign as a put method ?');
    }
    /**
     * Operation getFeedbackAndCommentUpdates
     *
     * Новые и обновленные отзывы о магазине.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getFeedbackAndCommentUpdates($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getFeedbackAndCommentUpdates as a get method ?');
    }
    /**
     * Operation getFeeds
     *
     * Список прайс-листов магазина.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getFeeds($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getFeeds as a get method ?');
    }
    /**
     * Operation getFeed
     *
     * Информация о прайс-листе.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getFeed($campaignId, $feedId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getFeed as a get method ?');
    }
    /**
     * Operation getFeedIndexLogs
     *
     * Отчет по индексации прайс-листа.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getFeedIndexLogs($campaignId, $feedId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getFeedIndexLogs as a get method ?');
    }
    /**
     * Operation setFeedParams
     *
     * Изменение параметров прайс-листа.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     *
     * @return Http response
     * @deprecated
     */
    public function setFeedParams($campaignId, $feedId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing setFeedParams as a post method ?');
    }
    /**
     * Operation refreshFeed
     *
     * Сообщить, что прайс-лист обновился.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     *
     * @return Http response
     * @deprecated
     */
    public function refreshFeed($campaignId, $feedId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing refreshFeed as a post method ?');
    }
    /**
     * Operation addHiddenOffers
     *
     * Скрытие товаров и настройки скрытия.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function addHiddenOffers($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing addHiddenOffers as a post method ?');
    }
    /**
     * Operation getHiddenOffers
     *
     * Информация о скрытых вами товарах.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getHiddenOffers($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getHiddenOffers as a get method ?');
    }
    /**
     * Operation deleteHiddenOffers
     *
     * Возобновление показа товаров.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function deleteHiddenOffers($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteHiddenOffers as a post method ?');
    }
    /**
     * Operation getCampaignLogins
     *
     * Логины, связанные с магазином.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getCampaignLogins($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getCampaignLogins as a get method ?');
    }
    /**
     * Operation getOfferMappingEntries
     *
     * Список товаров в каталоге.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getOfferMappingEntries($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOfferMappingEntries as a get method ?');
    }
    /**
     * Operation getSuggestedOfferMappingEntries
     *
     * Рекомендованные карточки для товаров.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getSuggestedOfferMappingEntries($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getSuggestedOfferMappingEntries as a post method ?');
    }
    /**
     * Operation updateOfferMappingEntries
     *
     * Добавление и редактирование товаров в каталоге.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function updateOfferMappingEntries($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateOfferMappingEntries as a post method ?');
    }
    /**
     * Operation getPrices
     *
     * Список цен.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getPrices($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getPrices as a get method ?');
    }
    /**
     * Operation getPricesByOfferIds
     *
     * Просмотр цен на указанные товары в магазине.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getPricesByOfferIds($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getPricesByOfferIds as a post method ?');
    }
    /**
     * Operation getSuggestedPrices
     *
     * Цены для продвижения товаров.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getSuggestedPrices($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getSuggestedPrices as a post method ?');
    }
    /**
     * Operation updatePrices
     *
     * Установка цен на товары в конкретном магазине.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function updatePrices($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updatePrices as a post method ?');
    }
    /**
     * Operation getCampaignOffers
     *
     * Информация о товарах, которые размещены в заданном магазине.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getCampaignOffers($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getCampaignOffers as a post method ?');
    }
    /**
     * Operation getOffers
     *
     * Предложения магазина.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getOffers($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOffers as a get method ?');
    }
    /**
     * Operation getAllOffers
     *
     * Все предложения магазина.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getAllOffers($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getAllOffers as a get method ?');
    }
    /**
     * Operation deleteCampaignOffers
     *
     * Удаление товаров из ассортимента магазина.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function deleteCampaignOffers($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteCampaignOffers as a post method ?');
    }
    /**
     * Operation getStocks
     *
     * Информация об остатках и оборачиваемости.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getStocks($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getStocks as a post method ?');
    }
    /**
     * Operation updateStocks
     *
     * Передача информации об остатках.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function updateStocks($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateStocks as a put method ?');
    }
    /**
     * Operation updateCampaignOffers
     *
     * Изменение условий продажи товаров в магазине.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function updateCampaignOffers($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateCampaignOffers as a post method ?');
    }
    /**
     * Operation getOrders
     *
     * Информация о нескольких заказах.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getOrders($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOrders as a get method ?');
    }
    /**
     * Operation updateOrderStatuses
     *
     * Изменение статусов нескольких заказов.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function updateOrderStatuses($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateOrderStatuses as a post method ?');
    }
    /**
     * Operation getOrder
     *
     * Информация об одном заказе.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return Http response
     */
    public function getOrder($campaignId, $orderId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOrder as a get method ?');
    }
    /**
     * Operation setOrderBoxLayout
     *
     * Подготовка заказа.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return Http response
     */
    public function setOrderBoxLayout($campaignId, $orderId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing setOrderBoxLayout as a put method ?');
    }
    /**
     * Operation getOrderBusinessBuyerInfo
     *
     * Информация о покупателе — юридическом лице.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return Http response
     */
    public function getOrderBusinessBuyerInfo($campaignId, $orderId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOrderBusinessBuyerInfo as a post method ?');
    }
    /**
     * Operation getOrderBuyerInfo
     *
     * Информация о покупателе — физическом лице.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return Http response
     */
    public function getOrderBuyerInfo($campaignId, $orderId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOrderBuyerInfo as a get method ?');
    }
    /**
     * Operation acceptOrderCancellation
     *
     * Отмена заказа покупателем.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return Http response
     */
    public function acceptOrderCancellation($campaignId, $orderId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing acceptOrderCancellation as a put method ?');
    }
    /**
     * Operation provideOrderDigitalCodes
     *
     * Передача ключей цифровых товаров.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return Http response
     */
    public function provideOrderDigitalCodes($campaignId, $orderId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing provideOrderDigitalCodes as a post method ?');
    }
    /**
     * Operation setOrderDeliveryDate
     *
     * Изменение даты доставки заказа.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return Http response
     */
    public function setOrderDeliveryDate($campaignId, $orderId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing setOrderDeliveryDate as a put method ?');
    }
    /**
     * Operation generateOrderLabels
     *
     * Готовые ярлыки‑наклейки на все коробки в одном заказе.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return Http response
     */
    public function generateOrderLabels($campaignId, $orderId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing generateOrderLabels as a get method ?');
    }
    /**
     * Operation getOrderLabelsData
     *
     * Данные для самостоятельного изготовления ярлыков.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return Http response
     */
    public function getOrderLabelsData($campaignId, $orderId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOrderLabelsData as a get method ?');
    }
    /**
     * Operation setOrderShipmentBoxes
     *
     * Передача количества грузовых мест в заказе.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param int $shipmentId Параметр больше не используется. Вставьте любое число — просто чтобы получился корректный URL. (required)
     *
     * @return Http response
     */
    public function setOrderShipmentBoxes($campaignId, $orderId, $shipmentId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing setOrderShipmentBoxes as a put method ?');
    }
    /**
     * Operation generateOrderLabel
     *
     * Готовый ярлык‑наклейка для коробки в заказе.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param int $shipmentId Идентификатор грузоместа. (required)
     * @param int $boxId Идентификатор коробки. (required)
     *
     * @return Http response
     */
    public function generateOrderLabel($campaignId, $orderId, $shipmentId, $boxId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing generateOrderLabel as a get method ?');
    }
    /**
     * Operation updateOrderStorageLimit
     *
     * Продление срока хранения заказа.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return Http response
     */
    public function updateOrderStorageLimit($campaignId, $orderId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateOrderStorageLimit as a put method ?');
    }
    /**
     * Operation setOrderDeliveryTrackCode
     *
     * Передача трек‑номера посылки.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return Http response
     */
    public function setOrderDeliveryTrackCode($campaignId, $orderId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing setOrderDeliveryTrackCode as a post method ?');
    }
    /**
     * Operation getOrderBusinessDocumentsInfo
     *
     * Информация о документах.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return Http response
     */
    public function getOrderBusinessDocumentsInfo($campaignId, $orderId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOrderBusinessDocumentsInfo as a post method ?');
    }
    /**
     * Operation provideOrderItemIdentifiers
     *
     * Передача кодов маркировки единиц товара.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return Http response
     */
    public function provideOrderItemIdentifiers($campaignId, $orderId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing provideOrderItemIdentifiers as a put method ?');
    }
    /**
     * Operation updateOrderItems
     *
     * Удаление товара из заказа или уменьшение числа единиц.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return Http response
     */
    public function updateOrderItems($campaignId, $orderId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateOrderItems as a put method ?');
    }
    /**
     * Operation getReturn
     *
     * Информация о невыкупе или возврате.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param int $returnId Идентификатор возврата. (required)
     *
     * @return Http response
     */
    public function getReturn($campaignId, $orderId, $returnId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getReturn as a get method ?');
    }
    /**
     * Operation getReturnApplication
     *
     * Получение заявления на возврат.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param int $returnId Идентификатор возврата. (required)
     *
     * @return Http response
     */
    public function getReturnApplication($campaignId, $orderId, $returnId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getReturnApplication as a get method ?');
    }
    /**
     * Operation setReturnDecision
     *
     * Принятие или изменение решения по возврату.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param int $returnId Идентификатор возврата. (required)
     *
     * @return Http response
     */
    public function setReturnDecision($campaignId, $orderId, $returnId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing setReturnDecision as a post method ?');
    }
    /**
     * Operation submitReturnDecision
     *
     * Подтверждение решения по возврату.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param int $returnId Идентификатор возврата. (required)
     *
     * @return Http response
     */
    public function submitReturnDecision($campaignId, $orderId, $returnId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing submitReturnDecision as a post method ?');
    }
    /**
     * Operation getReturnPhoto
     *
     * Получение фотографии возврата.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param int $returnId Идентификатор возврата. (required)
     * @param int $itemId Идентификатор товара в возврате. (required)
     * @param string $imageHash Хеш ссылки изображения для загрузки. (required)
     *
     * @return Http response
     */
    public function getReturnPhoto($campaignId, $orderId, $returnId, $itemId, $imageHash)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getReturnPhoto as a get method ?');
    }
    /**
     * Operation updateOrderStatus
     *
     * Изменение статуса одного заказа.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return Http response
     */
    public function updateOrderStatus($campaignId, $orderId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateOrderStatus as a put method ?');
    }
    /**
     * Operation createOutlet
     *
     * Создание точки продаж.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function createOutlet($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing createOutlet as a post method ?');
    }
    /**
     * Operation getOutlets
     *
     * Информация о нескольких точках продаж.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getOutlets($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOutlets as a get method ?');
    }
    /**
     * Operation deleteOutletLicenses
     *
     * Удаление лицензий для точек продаж.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function deleteOutletLicenses($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteOutletLicenses as a delete method ?');
    }
    /**
     * Operation getOutletLicenses
     *
     * Информация о лицензиях для точек продаж.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getOutletLicenses($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOutletLicenses as a get method ?');
    }
    /**
     * Operation updateOutletLicenses
     *
     * Создание и изменение лицензий для точек продаж.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function updateOutletLicenses($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateOutletLicenses as a post method ?');
    }
    /**
     * Operation deleteOutlet
     *
     * Удаление точки продаж.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $outletId Идентификатор точки продаж. (required)
     *
     * @return Http response
     */
    public function deleteOutlet($campaignId, $outletId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteOutlet as a delete method ?');
    }
    /**
     * Operation getOutlet
     *
     * Информация об одной точке продаж.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $outletId Идентификатор точки продаж. (required)
     *
     * @return Http response
     */
    public function getOutlet($campaignId, $outletId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOutlet as a get method ?');
    }
    /**
     * Operation updateOutlet
     *
     * Изменение информации о точке продаж.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $outletId Идентификатор точки продаж. (required)
     *
     * @return Http response
     */
    public function updateOutlet($campaignId, $outletId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateOutlet as a put method ?');
    }
    /**
     * Operation getCampaignQuarantineOffers
     *
     * Список товаров, находящихся в карантине по цене в магазине.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getCampaignQuarantineOffers($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getCampaignQuarantineOffers as a post method ?');
    }
    /**
     * Operation confirmCampaignPrices
     *
     * Удаление товара из карантина по цене в магазине.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function confirmCampaignPrices($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing confirmCampaignPrices as a post method ?');
    }
    /**
     * Operation getQualityRatingDetails
     *
     * Заказы, которые повлияли на индекс качества.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getQualityRatingDetails($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getQualityRatingDetails as a post method ?');
    }
    /**
     * Operation getCampaignRegion
     *
     * Регион магазина.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getCampaignRegion($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getCampaignRegion as a get method ?');
    }
    /**
     * Operation getReturns
     *
     * Список невыкупов и возвратов.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getReturns($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getReturns as a get method ?');
    }
    /**
     * Operation getCampaignSettings
     *
     * Настройки магазина.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getCampaignSettings($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getCampaignSettings as a get method ?');
    }
    /**
     * Operation getOrdersStats
     *
     * Детальная информация по заказам.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getOrdersStats($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOrdersStats as a post method ?');
    }
    /**
     * Operation getGoodsStats
     *
     * Отчет по товарам.
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getGoodsStats($campaignId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getGoodsStats as a post method ?');
    }
    /**
     * Operation getCategoriesMaxSaleQuantum
     *
     * Лимит на установку кванта продажи и минимального количества товаров в заказе.
     *
     *
     * @return Http response
     */
    public function getCategoriesMaxSaleQuantum()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['getCategoriesMaxSaleQuantumRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $getCategoriesMaxSaleQuantumRequest when calling getCategoriesMaxSaleQuantum');
        }
        $getCategoriesMaxSaleQuantumRequest = $input['getCategoriesMaxSaleQuantumRequest'];


        return response('How about implementing getCategoriesMaxSaleQuantum as a post method ?');
    }
    /**
     * Operation getCategoriesTree
     *
     * Дерево категорий.
     *
     *
     * @return Http response
     */
    public function getCategoriesTree()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $getCategoriesRequest = $input['getCategoriesRequest'];


        return response('How about implementing getCategoriesTree as a post method ?');
    }
    /**
     * Operation getCategoryContentParameters
     *
     * Списки характеристик товаров по категориям.
     *
     * @param int $categoryId Идентификатор категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится интересующий вас товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md). (required)
     *
     * @return Http response
     */
    public function getCategoryContentParameters($categoryId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getCategoryContentParameters as a post method ?');
    }
    /**
     * Operation getDeliveryServices
     *
     * Справочник служб доставки.
     *
     *
     * @return Http response
     */
    public function getDeliveryServices()
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getDeliveryServices as a get method ?');
    }
    /**
     * Operation getModels
     *
     * Информация о нескольких моделях.
     *
     *
     * @return Http response
     */
    public function getModels()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['regionId'])) {
            throw new \InvalidArgumentException('Missing the required parameter $regionId when calling getModels');
        }
        $regionId = $input['regionId'];

        if (!isset($input['getModelsRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $getModelsRequest when calling getModels');
        }
        $getModelsRequest = $input['getModelsRequest'];

        $currency = $input['currency'];


        return response('How about implementing getModels as a post method ?');
    }
    /**
     * Operation searchModels
     *
     * Поиск модели товара.
     *
     *
     * @return Http response
     */
    public function searchModels()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['query'])) {
            throw new \InvalidArgumentException('Missing the required parameter $query when calling searchModels');
        }
        $query = $input['query'];

        if (!isset($input['regionId'])) {
            throw new \InvalidArgumentException('Missing the required parameter $regionId when calling searchModels');
        }
        $regionId = $input['regionId'];

        $currency = $input['currency'];

        if ($input['page'] > 10000) {
            throw new \InvalidArgumentException('invalid value for $page when calling DbsController.searchModels, must be smaller than or equal to 10000.');
        }
        $page = $input['page'];

        $pageSize = $input['pageSize'];


        return response('How about implementing searchModels as a get method ?');
    }
    /**
     * Operation getModelsOffers
     *
     * Список предложений для нескольких моделей.
     *
     *
     * @return Http response
     */
    public function getModelsOffers()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['regionId'])) {
            throw new \InvalidArgumentException('Missing the required parameter $regionId when calling getModelsOffers');
        }
        $regionId = $input['regionId'];

        if (!isset($input['getModelsRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $getModelsRequest when calling getModelsOffers');
        }
        $getModelsRequest = $input['getModelsRequest'];

        $currency = $input['currency'];

        $orderByPrice = $input['orderByPrice'];


        return response('How about implementing getModelsOffers as a post method ?');
    }
    /**
     * Operation getModel
     *
     * Информация об одной модели.
     *
     * @param int $modelId Идентификатор модели товара. (required)
     *
     * @return Http response
     */
    public function getModel($modelId)
    {
        $input = Request::all();

        //path params validation
        if ($modelId <= 0) {
            throw new \InvalidArgumentException('invalid value for $modelId when calling DbsController.getModel, must be bigger than 0.');
        }


        //not path params validation

        return response('How about implementing getModel as a get method ?');
    }
    /**
     * Operation getModelOffers
     *
     * Список предложений для одной модели.
     *
     * @param int $modelId Идентификатор модели товара. (required)
     *
     * @return Http response
     */
    public function getModelOffers($modelId)
    {
        $input = Request::all();

        //path params validation
        if ($modelId <= 0) {
            throw new \InvalidArgumentException('invalid value for $modelId when calling DbsController.getModelOffers, must be bigger than 0.');
        }


        //not path params validation

        return response('How about implementing getModelOffers as a get method ?');
    }
    /**
     * Operation searchRegionsByName
     *
     * Поиск регионов по их имени.
     *
     *
     * @return Http response
     */
    public function searchRegionsByName()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['name'])) {
            throw new \InvalidArgumentException('Missing the required parameter $name when calling searchRegionsByName');
        }
        $name = $input['name'];

        $pageToken = $input['pageToken'];

        $limit = $input['limit'];


        return response('How about implementing searchRegionsByName as a get method ?');
    }
    /**
     * Operation searchRegionsById
     *
     * Информация о регионе.
     *
     * @param int $regionId Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). (required)
     *
     * @return Http response
     */
    public function searchRegionsById($regionId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing searchRegionsById as a get method ?');
    }
    /**
     * Operation searchRegionChildren
     *
     * Информация о дочерних регионах.
     *
     * @param int $regionId Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). (required)
     *
     * @return Http response
     */
    public function searchRegionChildren($regionId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing searchRegionChildren as a get method ?');
    }
    /**
     * Operation generateBoostConsolidatedReport
     *
     * Отчет по бусту продаж.
     *
     *
     * @return Http response
     */
    public function generateBoostConsolidatedReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateBoostConsolidatedRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateBoostConsolidatedRequest when calling generateBoostConsolidatedReport');
        }
        $generateBoostConsolidatedRequest = $input['generateBoostConsolidatedRequest'];

        $format = $input['format'];


        return response('How about implementing generateBoostConsolidatedReport as a post method ?');
    }
    /**
     * Operation generateCompetitorsPositionReport
     *
     * Отчет «Конкурентная позиция».
     *
     *
     * @return Http response
     */
    public function generateCompetitorsPositionReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateCompetitorsPositionReportRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateCompetitorsPositionReportRequest when calling generateCompetitorsPositionReport');
        }
        $generateCompetitorsPositionReportRequest = $input['generateCompetitorsPositionReportRequest'];

        $format = $input['format'];


        return response('How about implementing generateCompetitorsPositionReport as a post method ?');
    }
    /**
     * Operation generateMassOrderLabelsReport
     *
     * Готовые ярлыки‑наклейки на все коробки в нескольких заказах.
     *
     *
     * @return Http response
     */
    public function generateMassOrderLabelsReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateMassOrderLabelsRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateMassOrderLabelsRequest when calling generateMassOrderLabelsReport');
        }
        $generateMassOrderLabelsRequest = $input['generateMassOrderLabelsRequest'];

        $format = $input['format'];


        return response('How about implementing generateMassOrderLabelsReport as a post method ?');
    }
    /**
     * Operation generateGoodsFeedbackReport
     *
     * Отчет по отзывам о товарах.
     *
     *
     * @return Http response
     */
    public function generateGoodsFeedbackReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateGoodsFeedbackRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateGoodsFeedbackRequest when calling generateGoodsFeedbackReport');
        }
        $generateGoodsFeedbackRequest = $input['generateGoodsFeedbackRequest'];

        $format = $input['format'];


        return response('How about implementing generateGoodsFeedbackReport as a post method ?');
    }
    /**
     * Operation getReportInfo
     *
     * Получение заданного отчета.
     *
     * @param string $reportId Идентификатор отчета, который вы получили после запуска генерации. (required)
     *
     * @return Http response
     */
    public function getReportInfo($reportId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getReportInfo as a get method ?');
    }
    /**
     * Operation generatePricesReport
     *
     * Отчет «Цены на рынке».
     *
     *
     * @return Http response
     */
    public function generatePricesReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generatePricesReportRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generatePricesReportRequest when calling generatePricesReport');
        }
        $generatePricesReportRequest = $input['generatePricesReportRequest'];

        $format = $input['format'];


        return response('How about implementing generatePricesReport as a post method ?');
    }
    /**
     * Operation generateShelfsStatisticsReport
     *
     * Отчет по полкам.
     *
     *
     * @return Http response
     */
    public function generateShelfsStatisticsReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateShelfsStatisticsRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateShelfsStatisticsRequest when calling generateShelfsStatisticsReport');
        }
        $generateShelfsStatisticsRequest = $input['generateShelfsStatisticsRequest'];

        $format = $input['format'];


        return response('How about implementing generateShelfsStatisticsReport as a post method ?');
    }
    /**
     * Operation generateShowsSalesReport
     *
     * Отчет «Аналитика продаж».
     *
     *
     * @return Http response
     */
    public function generateShowsSalesReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateShowsSalesReportRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateShowsSalesReportRequest when calling generateShowsSalesReport');
        }
        $generateShowsSalesReportRequest = $input['generateShowsSalesReportRequest'];

        $format = $input['format'];


        return response('How about implementing generateShowsSalesReport as a post method ?');
    }
    /**
     * Operation generateStocksOnWarehousesReport
     *
     * Отчет по остаткам на складах.
     *
     *
     * @return Http response
     */
    public function generateStocksOnWarehousesReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateStocksOnWarehousesReportRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateStocksOnWarehousesReportRequest when calling generateStocksOnWarehousesReport');
        }
        $generateStocksOnWarehousesReportRequest = $input['generateStocksOnWarehousesReportRequest'];

        $format = $input['format'];


        return response('How about implementing generateStocksOnWarehousesReport as a post method ?');
    }
    /**
     * Operation generateUnitedMarketplaceServicesReport
     *
     * Отчет по стоимости услуг.
     *
     *
     * @return Http response
     */
    public function generateUnitedMarketplaceServicesReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateUnitedMarketplaceServicesReportRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateUnitedMarketplaceServicesReportRequest when calling generateUnitedMarketplaceServicesReport');
        }
        $generateUnitedMarketplaceServicesReportRequest = $input['generateUnitedMarketplaceServicesReportRequest'];

        $format = $input['format'];


        return response('How about implementing generateUnitedMarketplaceServicesReport as a post method ?');
    }
    /**
     * Operation generateUnitedNettingReport
     *
     * Отчет по платежам.
     *
     *
     * @return Http response
     */
    public function generateUnitedNettingReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateUnitedNettingReportRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateUnitedNettingReportRequest when calling generateUnitedNettingReport');
        }
        $generateUnitedNettingReportRequest = $input['generateUnitedNettingReportRequest'];

        $format = $input['format'];


        return response('How about implementing generateUnitedNettingReport as a post method ?');
    }
    /**
     * Operation generateUnitedOrdersReport
     *
     * Отчет по заказам.
     *
     *
     * @return Http response
     */
    public function generateUnitedOrdersReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateUnitedOrdersRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateUnitedOrdersRequest when calling generateUnitedOrdersReport');
        }
        $generateUnitedOrdersRequest = $input['generateUnitedOrdersRequest'];

        $format = $input['format'];


        return response('How about implementing generateUnitedOrdersReport as a post method ?');
    }
    /**
     * Operation calculateTariffs
     *
     * Калькулятор стоимости услуг.
     *
     *
     * @return Http response
     */
    public function calculateTariffs()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['calculateTariffsRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $calculateTariffsRequest when calling calculateTariffs');
        }
        $calculateTariffsRequest = $input['calculateTariffsRequest'];


        return response('How about implementing calculateTariffs as a post method ?');
    }
}
