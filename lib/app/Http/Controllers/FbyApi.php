<?php

/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 * PHP version 7.2.5
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class FbyApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation putBidsForBusiness
     *
     * Включение буста продаж и установка ставок.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function putBidsForBusiness($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing putBidsForBusiness as a put method ?');
    }
    /**
     * Operation getBidsInfoForBusiness
     *
     * Информация об установленных ставках.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getBidsInfoForBusiness($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getBidsInfoForBusiness as a post method ?');
    }
    /**
     * Operation getBidsRecommendations
     *
     * Рекомендованные ставки для заданных товаров.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getBidsRecommendations($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getBidsRecommendations as a post method ?');
    }
    /**
     * Operation getChats
     *
     * Получение доступных чатов.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getChats($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getChats as a post method ?');
    }
    /**
     * Operation sendFileToChat
     *
     * Отправка файла в чат.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function sendFileToChat($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing sendFileToChat as a post method ?');
    }
    /**
     * Operation getChatHistory
     *
     * Получение истории сообщений в чате.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getChatHistory($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getChatHistory as a post method ?');
    }
    /**
     * Operation sendMessageToChat
     *
     * Отправка сообщения в чат.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function sendMessageToChat($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing sendMessageToChat as a post method ?');
    }
    /**
     * Operation createChat
     *
     * Создание нового чата с покупателем.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function createChat($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing createChat as a post method ?');
    }
    /**
     * Operation getGoodsFeedbacks
     *
     * Получение отзывов о товарах продавца.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getGoodsFeedbacks($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getGoodsFeedbacks as a post method ?');
    }
    /**
     * Operation getGoodsFeedbackComments
     *
     * Получение комментариев к отзыву.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getGoodsFeedbackComments($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getGoodsFeedbackComments as a post method ?');
    }
    /**
     * Operation deleteGoodsFeedbackComment
     *
     * Удаление комментария к отзыву.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function deleteGoodsFeedbackComment($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteGoodsFeedbackComment as a post method ?');
    }
    /**
     * Operation updateGoodsFeedbackComment
     *
     * Добавление нового или изменение созданного комментария.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function updateGoodsFeedbackComment($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateGoodsFeedbackComment as a post method ?');
    }
    /**
     * Operation skipGoodsFeedbacksReaction
     *
     * Отказ от ответа на отзывы.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function skipGoodsFeedbacksReaction($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing skipGoodsFeedbacksReaction as a post method ?');
    }
    /**
     * Operation getOfferCardsContentStatus
     *
     * Получение информации о заполненности карточек магазина.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getOfferCardsContentStatus($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOfferCardsContentStatus as a post method ?');
    }
    /**
     * Operation updateOfferContent
     *
     * Редактирование категорийных характеристик товара.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function updateOfferContent($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateOfferContent as a post method ?');
    }
    /**
     * Operation getOfferMappings
     *
     * Информация о товарах в каталоге.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getOfferMappings($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOfferMappings as a post method ?');
    }
    /**
     * Operation addOffersToArchive
     *
     * Добавление товаров в архив.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function addOffersToArchive($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing addOffersToArchive as a post method ?');
    }
    /**
     * Operation deleteOffers
     *
     * Удаление товаров из каталога.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function deleteOffers($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteOffers as a post method ?');
    }
    /**
     * Operation getSuggestedOfferMappings
     *
     * Просмотр карточек на Маркете, которые подходят вашим товарам.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getSuggestedOfferMappings($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getSuggestedOfferMappings as a post method ?');
    }
    /**
     * Operation deleteOffersFromArchive
     *
     * Удаление товаров из архива.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function deleteOffersFromArchive($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteOffersFromArchive as a post method ?');
    }
    /**
     * Operation updateOfferMappings
     *
     * Добавление товаров в каталог и изменение информации о них.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function updateOfferMappings($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateOfferMappings as a post method ?');
    }
    /**
     * Operation updateBusinessPrices
     *
     * Установка цен на товары во всех магазинах.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function updateBusinessPrices($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateBusinessPrices as a post method ?');
    }
    /**
     * Operation getOfferRecommendations
     *
     * Рекомендации Маркета, касающиеся цен.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getOfferRecommendations($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOfferRecommendations as a post method ?');
    }
    /**
     * Operation getBusinessQuarantineOffers
     *
     * Список товаров, находящихся в карантине по цене в кабинете.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getBusinessQuarantineOffers($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getBusinessQuarantineOffers as a post method ?');
    }
    /**
     * Operation confirmBusinessPrices
     *
     * Удаление товара из карантина по цене в кабинете.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function confirmBusinessPrices($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing confirmBusinessPrices as a post method ?');
    }
    /**
     * Operation getPromos
     *
     * Получение списка акций.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getPromos($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getPromos as a post method ?');
    }
    /**
     * Operation getPromoOffers
     *
     * Получение списка товаров, которые участвуют или могут участвовать в акции.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getPromoOffers($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getPromoOffers as a post method ?');
    }
    /**
     * Operation deletePromoOffers
     *
     * Удаление товаров из акции.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function deletePromoOffers($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deletePromoOffers as a post method ?');
    }
    /**
     * Operation updatePromoOffers
     *
     * Добавление товаров в акцию или изменение их цен.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function updatePromoOffers($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updatePromoOffers as a post method ?');
    }
    /**
     * Operation getQualityRatings
     *
     * Индекс качества магазинов.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getQualityRatings($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getQualityRatings as a post method ?');
    }
    /**
     * Operation getBusinessSettings
     *
     * Настройки кабинета.
     *
     * @param int $business_id Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getBusinessSettings($business_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getBusinessSettings as a post method ?');
    }
    /**
     * Operation getCampaigns
     *
     * Список магазинов пользователя.
     *
     *
     * @return Http response
     */
    public function getCampaigns()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if ($input['page'] > 10000) {
            throw new \InvalidArgumentException('invalid value for $page when calling FbyApi.getCampaigns, must be smaller than or equal to 10000.');
        }
        $page = $input['page'];

        $page_size = $input['page_size'];


        return response('How about implementing getCampaigns as a get method ?');
    }
    /**
     * Operation getCampaignsByLogin
     *
     * Магазины, доступные логину.
     *
     * @param string $login Логин пользователя. (required)
     *
     * @return Http response
     */
    public function getCampaignsByLogin($login)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getCampaignsByLogin as a get method ?');
    }
    /**
     * Operation getCampaign
     *
     * Информация о магазине.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getCampaign($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getCampaign as a get method ?');
    }
    /**
     * Operation putBidsForCampaign
     *
     * Включение буста продаж и установка ставок для магазина.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function putBidsForCampaign($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing putBidsForCampaign as a put method ?');
    }
    /**
     * Operation getFeedbackAndCommentUpdates
     *
     * Новые и обновленные отзывы о магазине.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getFeedbackAndCommentUpdates($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getFeedbackAndCommentUpdates as a get method ?');
    }
    /**
     * Operation getFeeds
     *
     * Список прайс-листов магазина.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getFeeds($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getFeeds as a get method ?');
    }
    /**
     * Operation getFeed
     *
     * Информация о прайс-листе.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feed_id Идентификатор прайс-листа. (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getFeed($campaign_id, $feed_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getFeed as a get method ?');
    }
    /**
     * Operation getFeedIndexLogs
     *
     * Отчет по индексации прайс-листа.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feed_id Идентификатор прайс-листа. (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getFeedIndexLogs($campaign_id, $feed_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getFeedIndexLogs as a get method ?');
    }
    /**
     * Operation setFeedParams
     *
     * Изменение параметров прайс-листа.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feed_id Идентификатор прайс-листа. (required)
     *
     * @return Http response
     * @deprecated
     */
    public function setFeedParams($campaign_id, $feed_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing setFeedParams as a post method ?');
    }
    /**
     * Operation refreshFeed
     *
     * Сообщить, что прайс-лист обновился.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feed_id Идентификатор прайс-листа. (required)
     *
     * @return Http response
     * @deprecated
     */
    public function refreshFeed($campaign_id, $feed_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing refreshFeed as a post method ?');
    }
    /**
     * Operation addHiddenOffers
     *
     * Скрытие товаров и настройки скрытия.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function addHiddenOffers($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing addHiddenOffers as a post method ?');
    }
    /**
     * Operation getHiddenOffers
     *
     * Информация о скрытых вами товарах.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getHiddenOffers($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getHiddenOffers as a get method ?');
    }
    /**
     * Operation deleteHiddenOffers
     *
     * Возобновление показа товаров.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function deleteHiddenOffers($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteHiddenOffers as a post method ?');
    }
    /**
     * Operation getCampaignLogins
     *
     * Логины, связанные с магазином.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getCampaignLogins($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getCampaignLogins as a get method ?');
    }
    /**
     * Operation getOfferMappingEntries
     *
     * Список товаров в каталоге.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getOfferMappingEntries($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOfferMappingEntries as a get method ?');
    }
    /**
     * Operation getSuggestedOfferMappingEntries
     *
     * Рекомендованные карточки для товаров.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getSuggestedOfferMappingEntries($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getSuggestedOfferMappingEntries as a post method ?');
    }
    /**
     * Operation updateOfferMappingEntries
     *
     * Добавление и редактирование товаров в каталоге.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function updateOfferMappingEntries($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateOfferMappingEntries as a post method ?');
    }
    /**
     * Operation getPrices
     *
     * Список цен.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getPrices($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getPrices as a get method ?');
    }
    /**
     * Operation getPricesByOfferIds
     *
     * Просмотр цен на указанные товары в магазине.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getPricesByOfferIds($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getPricesByOfferIds as a post method ?');
    }
    /**
     * Operation getSuggestedPrices
     *
     * Цены для продвижения товаров.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getSuggestedPrices($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getSuggestedPrices as a post method ?');
    }
    /**
     * Operation updatePrices
     *
     * Установка цен на товары в конкретном магазине.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function updatePrices($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updatePrices as a post method ?');
    }
    /**
     * Operation getCampaignOffers
     *
     * Информация о товарах, которые размещены в заданном магазине.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getCampaignOffers($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getCampaignOffers as a post method ?');
    }
    /**
     * Operation getOffers
     *
     * Предложения магазина.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getOffers($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOffers as a get method ?');
    }
    /**
     * Operation getAllOffers
     *
     * Все предложения магазина.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getAllOffers($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getAllOffers as a get method ?');
    }
    /**
     * Operation deleteCampaignOffers
     *
     * Удаление товаров из ассортимента магазина.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function deleteCampaignOffers($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteCampaignOffers as a post method ?');
    }
    /**
     * Operation getStocks
     *
     * Информация об остатках и оборачиваемости.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getStocks($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getStocks as a post method ?');
    }
    /**
     * Operation updateCampaignOffers
     *
     * Изменение условий продажи товаров в магазине.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function updateCampaignOffers($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateCampaignOffers as a post method ?');
    }
    /**
     * Operation getOrders
     *
     * Информация о нескольких заказах.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getOrders($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOrders as a get method ?');
    }
    /**
     * Operation getOrder
     *
     * Информация об одном заказе.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $order_id Идентификатор заказа. (required)
     *
     * @return Http response
     */
    public function getOrder($campaign_id, $order_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOrder as a get method ?');
    }
    /**
     * Operation getOrderBusinessBuyerInfo
     *
     * Информация о покупателе — юридическом лице.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $order_id Идентификатор заказа. (required)
     *
     * @return Http response
     */
    public function getOrderBusinessBuyerInfo($campaign_id, $order_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOrderBusinessBuyerInfo as a post method ?');
    }
    /**
     * Operation getOrderBusinessDocumentsInfo
     *
     * Информация о документах.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $order_id Идентификатор заказа. (required)
     *
     * @return Http response
     */
    public function getOrderBusinessDocumentsInfo($campaign_id, $order_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOrderBusinessDocumentsInfo as a post method ?');
    }
    /**
     * Operation getReturn
     *
     * Информация о невыкупе или возврате.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $order_id Идентификатор заказа. (required)
     * @param int $return_id Идентификатор возврата. (required)
     *
     * @return Http response
     */
    public function getReturn($campaign_id, $order_id, $return_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getReturn as a get method ?');
    }
    /**
     * Operation getReturnPhoto
     *
     * Получение фотографии возврата.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $order_id Идентификатор заказа. (required)
     * @param int $return_id Идентификатор возврата. (required)
     * @param int $item_id Идентификатор товара в возврате. (required)
     * @param string $image_hash Хеш ссылки изображения для загрузки. (required)
     *
     * @return Http response
     */
    public function getReturnPhoto($campaign_id, $order_id, $return_id, $item_id, $image_hash)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getReturnPhoto as a get method ?');
    }
    /**
     * Operation getCampaignQuarantineOffers
     *
     * Список товаров, находящихся в карантине по цене в магазине.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getCampaignQuarantineOffers($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getCampaignQuarantineOffers as a post method ?');
    }
    /**
     * Operation confirmCampaignPrices
     *
     * Удаление товара из карантина по цене в магазине.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function confirmCampaignPrices($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing confirmCampaignPrices as a post method ?');
    }
    /**
     * Operation getCampaignRegion
     *
     * Регион магазина.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     * @deprecated
     */
    public function getCampaignRegion($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getCampaignRegion as a get method ?');
    }
    /**
     * Operation getReturns
     *
     * Список невыкупов и возвратов.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getReturns($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getReturns as a get method ?');
    }
    /**
     * Operation getCampaignSettings
     *
     * Настройки магазина.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getCampaignSettings($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getCampaignSettings as a get method ?');
    }
    /**
     * Operation getOrdersStats
     *
     * Детальная информация по заказам.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getOrdersStats($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getOrdersStats as a post method ?');
    }
    /**
     * Operation getGoodsStats
     *
     * Отчет по товарам.
     *
     * @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return Http response
     */
    public function getGoodsStats($campaign_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getGoodsStats as a post method ?');
    }
    /**
     * Operation getCategoriesMaxSaleQuantum
     *
     * Лимит на установку кванта продажи и минимального количества товаров в заказе.
     *
     *
     * @return Http response
     */
    public function getCategoriesMaxSaleQuantum()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['get_categories_max_sale_quantum_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $get_categories_max_sale_quantum_request when calling getCategoriesMaxSaleQuantum');
        }
        $get_categories_max_sale_quantum_request = $input['get_categories_max_sale_quantum_request'];


        return response('How about implementing getCategoriesMaxSaleQuantum as a post method ?');
    }
    /**
     * Operation getCategoriesTree
     *
     * Дерево категорий.
     *
     *
     * @return Http response
     */
    public function getCategoriesTree()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $get_categories_request = $input['get_categories_request'];


        return response('How about implementing getCategoriesTree as a post method ?');
    }
    /**
     * Operation getCategoryContentParameters
     *
     * Списки характеристик товаров по категориям.
     *
     * @param int $category_id Идентификатор категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится интересующий вас товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md). (required)
     *
     * @return Http response
     */
    public function getCategoryContentParameters($category_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getCategoryContentParameters as a post method ?');
    }
    /**
     * Operation searchRegionsByName
     *
     * Поиск регионов по их имени.
     *
     *
     * @return Http response
     */
    public function searchRegionsByName()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['name'])) {
            throw new \InvalidArgumentException('Missing the required parameter $name when calling searchRegionsByName');
        }
        $name = $input['name'];

        $page_token = $input['page_token'];

        $limit = $input['limit'];


        return response('How about implementing searchRegionsByName as a get method ?');
    }
    /**
     * Operation searchRegionsById
     *
     * Информация о регионе.
     *
     * @param int $region_id Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). (required)
     *
     * @return Http response
     */
    public function searchRegionsById($region_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing searchRegionsById as a get method ?');
    }
    /**
     * Operation searchRegionChildren
     *
     * Информация о дочерних регионах.
     *
     * @param int $region_id Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). (required)
     *
     * @return Http response
     */
    public function searchRegionChildren($region_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing searchRegionChildren as a get method ?');
    }
    /**
     * Operation generateBoostConsolidatedReport
     *
     * Отчет по бусту продаж.
     *
     *
     * @return Http response
     */
    public function generateBoostConsolidatedReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generate_boost_consolidated_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generate_boost_consolidated_request when calling generateBoostConsolidatedReport');
        }
        $generate_boost_consolidated_request = $input['generate_boost_consolidated_request'];

        $format = $input['format'];


        return response('How about implementing generateBoostConsolidatedReport as a post method ?');
    }
    /**
     * Operation generateCompetitorsPositionReport
     *
     * Отчет «Конкурентная позиция».
     *
     *
     * @return Http response
     */
    public function generateCompetitorsPositionReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generate_competitors_position_report_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generate_competitors_position_report_request when calling generateCompetitorsPositionReport');
        }
        $generate_competitors_position_report_request = $input['generate_competitors_position_report_request'];

        $format = $input['format'];


        return response('How about implementing generateCompetitorsPositionReport as a post method ?');
    }
    /**
     * Operation generateGoodsFeedbackReport
     *
     * Отчет по отзывам о товарах.
     *
     *
     * @return Http response
     */
    public function generateGoodsFeedbackReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generate_goods_feedback_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generate_goods_feedback_request when calling generateGoodsFeedbackReport');
        }
        $generate_goods_feedback_request = $input['generate_goods_feedback_request'];

        $format = $input['format'];


        return response('How about implementing generateGoodsFeedbackReport as a post method ?');
    }
    /**
     * Operation generateGoodsMovementReport
     *
     * Отчет по движению товаров.
     *
     *
     * @return Http response
     */
    public function generateGoodsMovementReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generate_goods_movement_report_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generate_goods_movement_report_request when calling generateGoodsMovementReport');
        }
        $generate_goods_movement_report_request = $input['generate_goods_movement_report_request'];

        $format = $input['format'];


        return response('How about implementing generateGoodsMovementReport as a post method ?');
    }
    /**
     * Operation generateGoodsRealizationReport
     *
     * Отчет по реализации.
     *
     *
     * @return Http response
     */
    public function generateGoodsRealizationReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generate_goods_realization_report_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generate_goods_realization_report_request when calling generateGoodsRealizationReport');
        }
        $generate_goods_realization_report_request = $input['generate_goods_realization_report_request'];

        $format = $input['format'];


        return response('How about implementing generateGoodsRealizationReport as a post method ?');
    }
    /**
     * Operation generateGoodsTurnoverReport
     *
     * Отчет по оборачиваемости.
     *
     *
     * @return Http response
     */
    public function generateGoodsTurnoverReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generate_goods_turnover_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generate_goods_turnover_request when calling generateGoodsTurnoverReport');
        }
        $generate_goods_turnover_request = $input['generate_goods_turnover_request'];

        $format = $input['format'];


        return response('How about implementing generateGoodsTurnoverReport as a post method ?');
    }
    /**
     * Operation getReportInfo
     *
     * Получение заданного отчета.
     *
     * @param string $report_id Идентификатор отчета, который вы получили после запуска генерации. (required)
     *
     * @return Http response
     */
    public function getReportInfo($report_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getReportInfo as a get method ?');
    }
    /**
     * Operation generatePricesReport
     *
     * Отчет «Цены на рынке».
     *
     *
     * @return Http response
     */
    public function generatePricesReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generate_prices_report_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generate_prices_report_request when calling generatePricesReport');
        }
        $generate_prices_report_request = $input['generate_prices_report_request'];

        $format = $input['format'];


        return response('How about implementing generatePricesReport as a post method ?');
    }
    /**
     * Operation generateShelfsStatisticsReport
     *
     * Отчет по полкам.
     *
     *
     * @return Http response
     */
    public function generateShelfsStatisticsReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generate_shelfs_statistics_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generate_shelfs_statistics_request when calling generateShelfsStatisticsReport');
        }
        $generate_shelfs_statistics_request = $input['generate_shelfs_statistics_request'];

        $format = $input['format'];


        return response('How about implementing generateShelfsStatisticsReport as a post method ?');
    }
    /**
     * Operation generateShowsSalesReport
     *
     * Отчет «Аналитика продаж».
     *
     *
     * @return Http response
     */
    public function generateShowsSalesReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generate_shows_sales_report_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generate_shows_sales_report_request when calling generateShowsSalesReport');
        }
        $generate_shows_sales_report_request = $input['generate_shows_sales_report_request'];

        $format = $input['format'];


        return response('How about implementing generateShowsSalesReport as a post method ?');
    }
    /**
     * Operation generateStocksOnWarehousesReport
     *
     * Отчет по остаткам на складах.
     *
     *
     * @return Http response
     */
    public function generateStocksOnWarehousesReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generate_stocks_on_warehouses_report_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generate_stocks_on_warehouses_report_request when calling generateStocksOnWarehousesReport');
        }
        $generate_stocks_on_warehouses_report_request = $input['generate_stocks_on_warehouses_report_request'];

        $format = $input['format'];


        return response('How about implementing generateStocksOnWarehousesReport as a post method ?');
    }
    /**
     * Operation generateUnitedMarketplaceServicesReport
     *
     * Отчет по стоимости услуг.
     *
     *
     * @return Http response
     */
    public function generateUnitedMarketplaceServicesReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generate_united_marketplace_services_report_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generate_united_marketplace_services_report_request when calling generateUnitedMarketplaceServicesReport');
        }
        $generate_united_marketplace_services_report_request = $input['generate_united_marketplace_services_report_request'];

        $format = $input['format'];


        return response('How about implementing generateUnitedMarketplaceServicesReport as a post method ?');
    }
    /**
     * Operation generateUnitedNettingReport
     *
     * Отчет по платежам.
     *
     *
     * @return Http response
     */
    public function generateUnitedNettingReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generate_united_netting_report_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generate_united_netting_report_request when calling generateUnitedNettingReport');
        }
        $generate_united_netting_report_request = $input['generate_united_netting_report_request'];

        $format = $input['format'];


        return response('How about implementing generateUnitedNettingReport as a post method ?');
    }
    /**
     * Operation generateUnitedOrdersReport
     *
     * Отчет по заказам.
     *
     *
     * @return Http response
     */
    public function generateUnitedOrdersReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generate_united_orders_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generate_united_orders_request when calling generateUnitedOrdersReport');
        }
        $generate_united_orders_request = $input['generate_united_orders_request'];

        $format = $input['format'];


        return response('How about implementing generateUnitedOrdersReport as a post method ?');
    }
    /**
     * Operation calculateTariffs
     *
     * Калькулятор стоимости услуг.
     *
     *
     * @return Http response
     */
    public function calculateTariffs()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['calculate_tariffs_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $calculate_tariffs_request when calling calculateTariffs');
        }
        $calculate_tariffs_request = $input['calculate_tariffs_request'];


        return response('How about implementing calculateTariffs as a post method ?');
    }
    /**
     * Operation getFulfillmentWarehouses
     *
     * Идентификаторы складов Маркета (FBY).
     *
     *
     * @return Http response
     */
    public function getFulfillmentWarehouses()
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getFulfillmentWarehouses as a get method ?');
    }
}
