<?php

/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 * PHP version 7.2.5
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class ModelsApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation getModels
     *
     * Информация о нескольких моделях.
     *
     *
     * @return Http response
     */
    public function getModels()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['region_id'])) {
            throw new \InvalidArgumentException('Missing the required parameter $region_id when calling getModels');
        }
        $region_id = $input['region_id'];

        if (!isset($input['get_models_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $get_models_request when calling getModels');
        }
        $get_models_request = $input['get_models_request'];

        $currency = $input['currency'];


        return response('How about implementing getModels as a post method ?');
    }
    /**
     * Operation searchModels
     *
     * Поиск модели товара.
     *
     *
     * @return Http response
     */
    public function searchModels()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['query'])) {
            throw new \InvalidArgumentException('Missing the required parameter $query when calling searchModels');
        }
        $query = $input['query'];

        if (!isset($input['region_id'])) {
            throw new \InvalidArgumentException('Missing the required parameter $region_id when calling searchModels');
        }
        $region_id = $input['region_id'];

        $currency = $input['currency'];

        if ($input['page'] > 10000) {
            throw new \InvalidArgumentException('invalid value for $page when calling ModelsApi.searchModels, must be smaller than or equal to 10000.');
        }
        $page = $input['page'];

        $page_size = $input['page_size'];


        return response('How about implementing searchModels as a get method ?');
    }
    /**
     * Operation getModelsOffers
     *
     * Список предложений для нескольких моделей.
     *
     *
     * @return Http response
     */
    public function getModelsOffers()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['region_id'])) {
            throw new \InvalidArgumentException('Missing the required parameter $region_id when calling getModelsOffers');
        }
        $region_id = $input['region_id'];

        if (!isset($input['get_models_request'])) {
            throw new \InvalidArgumentException('Missing the required parameter $get_models_request when calling getModelsOffers');
        }
        $get_models_request = $input['get_models_request'];

        $currency = $input['currency'];

        $order_by_price = $input['order_by_price'];


        return response('How about implementing getModelsOffers as a post method ?');
    }
    /**
     * Operation getModel
     *
     * Информация об одной модели.
     *
     * @param int $model_id Идентификатор модели товара. (required)
     *
     * @return Http response
     */
    public function getModel($model_id)
    {
        $input = Request::all();

        //path params validation
        if ($model_id <= 0) {
            throw new \InvalidArgumentException('invalid value for $model_id when calling ModelsApi.getModel, must be bigger than 0.');
        }


        //not path params validation

        return response('How about implementing getModel as a get method ?');
    }
    /**
     * Operation getModelOffers
     *
     * Список предложений для одной модели.
     *
     * @param int $model_id Идентификатор модели товара. (required)
     *
     * @return Http response
     */
    public function getModelOffers($model_id)
    {
        $input = Request::all();

        //path params validation
        if ($model_id <= 0) {
            throw new \InvalidArgumentException('invalid value for $model_id when calling ModelsApi.getModelOffers, must be bigger than 0.');
        }


        //not path params validation

        return response('How about implementing getModelOffers as a get method ?');
    }
}
