<?php

/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 * PHP version 7.2.5
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class ReportsController extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation generateBoostConsolidatedReport
     *
     * Отчет по бусту продаж.
     *
     *
     * @return Http response
     */
    public function generateBoostConsolidatedReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateBoostConsolidatedRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateBoostConsolidatedRequest when calling generateBoostConsolidatedReport');
        }
        $generateBoostConsolidatedRequest = $input['generateBoostConsolidatedRequest'];

        $format = $input['format'];


        return response('How about implementing generateBoostConsolidatedReport as a post method ?');
    }
    /**
     * Operation generateCompetitorsPositionReport
     *
     * Отчет «Конкурентная позиция».
     *
     *
     * @return Http response
     */
    public function generateCompetitorsPositionReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateCompetitorsPositionReportRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateCompetitorsPositionReportRequest when calling generateCompetitorsPositionReport');
        }
        $generateCompetitorsPositionReportRequest = $input['generateCompetitorsPositionReportRequest'];

        $format = $input['format'];


        return response('How about implementing generateCompetitorsPositionReport as a post method ?');
    }
    /**
     * Operation generateMassOrderLabelsReport
     *
     * Готовые ярлыки‑наклейки на все коробки в нескольких заказах.
     *
     *
     * @return Http response
     */
    public function generateMassOrderLabelsReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateMassOrderLabelsRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateMassOrderLabelsRequest when calling generateMassOrderLabelsReport');
        }
        $generateMassOrderLabelsRequest = $input['generateMassOrderLabelsRequest'];

        $format = $input['format'];


        return response('How about implementing generateMassOrderLabelsReport as a post method ?');
    }
    /**
     * Operation generateShipmentListDocumentReport
     *
     * Получение листа сборки.
     *
     *
     * @return Http response
     */
    public function generateShipmentListDocumentReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateShipmentListDocumentReportRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateShipmentListDocumentReportRequest when calling generateShipmentListDocumentReport');
        }
        $generateShipmentListDocumentReportRequest = $input['generateShipmentListDocumentReportRequest'];


        return response('How about implementing generateShipmentListDocumentReport as a post method ?');
    }
    /**
     * Operation generateGoodsFeedbackReport
     *
     * Отчет по отзывам о товарах.
     *
     *
     * @return Http response
     */
    public function generateGoodsFeedbackReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateGoodsFeedbackRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateGoodsFeedbackRequest when calling generateGoodsFeedbackReport');
        }
        $generateGoodsFeedbackRequest = $input['generateGoodsFeedbackRequest'];

        $format = $input['format'];


        return response('How about implementing generateGoodsFeedbackReport as a post method ?');
    }
    /**
     * Operation generateGoodsMovementReport
     *
     * Отчет по движению товаров.
     *
     *
     * @return Http response
     */
    public function generateGoodsMovementReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateGoodsMovementReportRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateGoodsMovementReportRequest when calling generateGoodsMovementReport');
        }
        $generateGoodsMovementReportRequest = $input['generateGoodsMovementReportRequest'];

        $format = $input['format'];


        return response('How about implementing generateGoodsMovementReport as a post method ?');
    }
    /**
     * Operation generateGoodsRealizationReport
     *
     * Отчет по реализации.
     *
     *
     * @return Http response
     */
    public function generateGoodsRealizationReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateGoodsRealizationReportRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateGoodsRealizationReportRequest when calling generateGoodsRealizationReport');
        }
        $generateGoodsRealizationReportRequest = $input['generateGoodsRealizationReportRequest'];

        $format = $input['format'];


        return response('How about implementing generateGoodsRealizationReport as a post method ?');
    }
    /**
     * Operation generateGoodsTurnoverReport
     *
     * Отчет по оборачиваемости.
     *
     *
     * @return Http response
     */
    public function generateGoodsTurnoverReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateGoodsTurnoverRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateGoodsTurnoverRequest when calling generateGoodsTurnoverReport');
        }
        $generateGoodsTurnoverRequest = $input['generateGoodsTurnoverRequest'];

        $format = $input['format'];


        return response('How about implementing generateGoodsTurnoverReport as a post method ?');
    }
    /**
     * Operation getReportInfo
     *
     * Получение заданного отчета.
     *
     * @param string $reportId Идентификатор отчета, который вы получили после запуска генерации. (required)
     *
     * @return Http response
     */
    public function getReportInfo($reportId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getReportInfo as a get method ?');
    }
    /**
     * Operation generatePricesReport
     *
     * Отчет «Цены на рынке».
     *
     *
     * @return Http response
     */
    public function generatePricesReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generatePricesReportRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generatePricesReportRequest when calling generatePricesReport');
        }
        $generatePricesReportRequest = $input['generatePricesReportRequest'];

        $format = $input['format'];


        return response('How about implementing generatePricesReport as a post method ?');
    }
    /**
     * Operation generateShelfsStatisticsReport
     *
     * Отчет по полкам.
     *
     *
     * @return Http response
     */
    public function generateShelfsStatisticsReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateShelfsStatisticsRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateShelfsStatisticsRequest when calling generateShelfsStatisticsReport');
        }
        $generateShelfsStatisticsRequest = $input['generateShelfsStatisticsRequest'];

        $format = $input['format'];


        return response('How about implementing generateShelfsStatisticsReport as a post method ?');
    }
    /**
     * Operation generateShowsSalesReport
     *
     * Отчет «Аналитика продаж».
     *
     *
     * @return Http response
     */
    public function generateShowsSalesReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateShowsSalesReportRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateShowsSalesReportRequest when calling generateShowsSalesReport');
        }
        $generateShowsSalesReportRequest = $input['generateShowsSalesReportRequest'];

        $format = $input['format'];


        return response('How about implementing generateShowsSalesReport as a post method ?');
    }
    /**
     * Operation generateStocksOnWarehousesReport
     *
     * Отчет по остаткам на складах.
     *
     *
     * @return Http response
     */
    public function generateStocksOnWarehousesReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateStocksOnWarehousesReportRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateStocksOnWarehousesReportRequest when calling generateStocksOnWarehousesReport');
        }
        $generateStocksOnWarehousesReportRequest = $input['generateStocksOnWarehousesReportRequest'];

        $format = $input['format'];


        return response('How about implementing generateStocksOnWarehousesReport as a post method ?');
    }
    /**
     * Operation generateUnitedMarketplaceServicesReport
     *
     * Отчет по стоимости услуг.
     *
     *
     * @return Http response
     */
    public function generateUnitedMarketplaceServicesReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateUnitedMarketplaceServicesReportRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateUnitedMarketplaceServicesReportRequest when calling generateUnitedMarketplaceServicesReport');
        }
        $generateUnitedMarketplaceServicesReportRequest = $input['generateUnitedMarketplaceServicesReportRequest'];

        $format = $input['format'];


        return response('How about implementing generateUnitedMarketplaceServicesReport as a post method ?');
    }
    /**
     * Operation generateUnitedNettingReport
     *
     * Отчет по платежам.
     *
     *
     * @return Http response
     */
    public function generateUnitedNettingReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateUnitedNettingReportRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateUnitedNettingReportRequest when calling generateUnitedNettingReport');
        }
        $generateUnitedNettingReportRequest = $input['generateUnitedNettingReportRequest'];

        $format = $input['format'];


        return response('How about implementing generateUnitedNettingReport as a post method ?');
    }
    /**
     * Operation generateUnitedOrdersReport
     *
     * Отчет по заказам.
     *
     *
     * @return Http response
     */
    public function generateUnitedOrdersReport()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['generateUnitedOrdersRequest'])) {
            throw new \InvalidArgumentException('Missing the required parameter $generateUnitedOrdersRequest when calling generateUnitedOrdersReport');
        }
        $generateUnitedOrdersRequest = $input['generateUnitedOrdersRequest'];

        $format = $input['format'];


        return response('How about implementing generateUnitedOrdersReport as a post method ?');
    }
}
