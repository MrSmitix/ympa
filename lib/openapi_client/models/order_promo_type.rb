=begin
#Партнерский API Маркета

#API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

The version of the OpenAPI document: LATEST

Generated by: https://openapi-generator.tech
Generator version: 7.8.0

=end

require 'date'
require 'time'

module OpenapiClient
  class OrderPromoType
    DIRECT_DISCOUNT = "DIRECT_DISCOUNT".freeze
    BLUE_SET = "BLUE_SET".freeze
    BLUE_FLASH = "BLUE_FLASH".freeze
    GENERIC_BUNDLE = "GENERIC_BUNDLE".freeze
    MARKET_COUPON = "MARKET_COUPON".freeze
    MARKET_PROMOCODE = "MARKET_PROMOCODE".freeze
    MARKET_DEAL = "MARKET_DEAL".freeze
    MARKET_BLUE = "MARKET_BLUE".freeze
    MARKET_PRIME = "MARKET_PRIME".freeze
    YANDEX_PLUS = "YANDEX_PLUS".freeze
    BERU_PLUS = "BERU_PLUS".freeze
    MARKET_COIN = "MARKET_COIN".freeze
    YANDEX_EMPLOYEE = "YANDEX_EMPLOYEE".freeze
    LIMITED_FREE_DELIVERY_PROMO = "LIMITED_FREE_DELIVERY_PROMO".freeze
    FREE_DELIVERY_THRESHOLD = "FREE_DELIVERY_THRESHOLD".freeze
    MULTICART_DISCOUNT = "MULTICART_DISCOUNT".freeze
    PRICE_DROP_AS_YOU_SHOP = "PRICE_DROP_AS_YOU_SHOP".freeze
    FREE_DELIVERY_FOR_LDI = "FREE_DELIVERY_FOR_LDI".freeze
    FREE_DELIVERY_FOR_LSC = "FREE_DELIVERY_FOR_LSC".freeze
    SECRET_SALE = "SECRET_SALE".freeze
    FREE_PICKUP = "FREE_PICKUP".freeze
    CHEAPEST_AS_GIFT = "CHEAPEST_AS_GIFT".freeze
    CASHBACK = "CASHBACK".freeze
    SUPPLIER_MULTICART_DISCOUNT = "SUPPLIER_MULTICART_DISCOUNT".freeze
    SPREAD_DISCOUNT_COUNT = "SPREAD_DISCOUNT_COUNT".freeze
    SPREAD_DISCOUNT_RECEIPT = "SPREAD_DISCOUNT_RECEIPT".freeze
    ANNOUNCEMENT_PROMO = "ANNOUNCEMENT_PROMO".freeze
    DISCOUNT_BY_PAYMENT_TYPE = "DISCOUNT_BY_PAYMENT_TYPE".freeze
    PERCENT_DISCOUNT = "PERCENT_DISCOUNT".freeze
    DCO_EXTRA_DISCOUNT = "DCO_EXTRA_DISCOUNT".freeze
    EMPTY_PROMO = "EMPTY_PROMO".freeze
    BLOCKING_PROMO = "BLOCKING_PROMO".freeze
    UNKNOWN = "UNKNOWN".freeze

    def self.all_vars
      @all_vars ||= [DIRECT_DISCOUNT, BLUE_SET, BLUE_FLASH, GENERIC_BUNDLE, MARKET_COUPON, MARKET_PROMOCODE, MARKET_DEAL, MARKET_BLUE, MARKET_PRIME, YANDEX_PLUS, BERU_PLUS, MARKET_COIN, YANDEX_EMPLOYEE, LIMITED_FREE_DELIVERY_PROMO, FREE_DELIVERY_THRESHOLD, MULTICART_DISCOUNT, PRICE_DROP_AS_YOU_SHOP, FREE_DELIVERY_FOR_LDI, FREE_DELIVERY_FOR_LSC, SECRET_SALE, FREE_PICKUP, CHEAPEST_AS_GIFT, CASHBACK, SUPPLIER_MULTICART_DISCOUNT, SPREAD_DISCOUNT_COUNT, SPREAD_DISCOUNT_RECEIPT, ANNOUNCEMENT_PROMO, DISCOUNT_BY_PAYMENT_TYPE, PERCENT_DISCOUNT, DCO_EXTRA_DISCOUNT, EMPTY_PROMO, BLOCKING_PROMO, UNKNOWN].freeze
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      return value if OrderPromoType.all_vars.include?(value)
      raise "Invalid ENUM value #{value} for class #OrderPromoType"
    end
  end
end
