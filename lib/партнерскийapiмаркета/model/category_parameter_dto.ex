# NOTE: This file is auto generated by OpenAPI Generator 7.8.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ПартнерскийAPIМаркета.Model.CategoryParameterDto do
  @moduledoc """
  Характеристика товара.
  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :name,
    :type,
    :unit,
    :description,
    :recommendationTypes,
    :required,
    :filtering,
    :distinctive,
    :multivalue,
    :allowCustomValues,
    :values,
    :constraints,
    :valueRestrictions
  ]

  @type t :: %__MODULE__{
    :id => integer(),
    :name => String.t | nil,
    :type => ПартнерскийAPIМаркета.Model.ParameterType.t,
    :unit => ПартнерскийAPIМаркета.Model.CategoryParameterUnitDto.t | nil,
    :description => String.t | nil,
    :recommendationTypes => [ПартнерскийAPIМаркета.Model.OfferCardRecommendationType.t] | nil,
    :required => boolean(),
    :filtering => boolean(),
    :distinctive => boolean(),
    :multivalue => boolean(),
    :allowCustomValues => boolean(),
    :values => [ПартнерскийAPIМаркета.Model.ParameterValueOptionDto.t] | nil,
    :constraints => ПартнерскийAPIМаркета.Model.ParameterValueConstraintsDto.t | nil,
    :valueRestrictions => [ПартнерскийAPIМаркета.Model.ValueRestrictionDto.t] | nil
  }

  alias ПартнерскийAPIМаркета.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:type, :struct, ПартнерскийAPIМаркета.Model.ParameterType)
     |> Deserializer.deserialize(:unit, :struct, ПартнерскийAPIМаркета.Model.CategoryParameterUnitDto)
     |> Deserializer.deserialize(:recommendationTypes, :list, ПартнерскийAPIМаркета.Model.OfferCardRecommendationType)
     |> Deserializer.deserialize(:values, :list, ПартнерскийAPIМаркета.Model.ParameterValueOptionDto)
     |> Deserializer.deserialize(:constraints, :struct, ПартнерскийAPIМаркета.Model.ParameterValueConstraintsDto)
     |> Deserializer.deserialize(:valueRestrictions, :list, ПартнерскийAPIМаркета.Model.ValueRestrictionDto)
  end
end

