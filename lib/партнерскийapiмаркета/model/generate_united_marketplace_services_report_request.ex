# NOTE: This file is auto generated by OpenAPI Generator 7.8.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ПартнерскийAPIМаркета.Model.GenerateUnitedMarketplaceServicesReportRequest do
  @moduledoc """
  Данные, необходимые для генерации отчета: идентификатор магазина, период, за который нужен отчет, а также фильтры. 
  """

  @derive Jason.Encoder
  defstruct [
    :businessId,
    :dateTimeFrom,
    :dateTimeTo,
    :dateFrom,
    :dateTo,
    :yearFrom,
    :monthFrom,
    :yearTo,
    :monthTo,
    :placementPrograms,
    :inns,
    :campaignIds
  ]

  @type t :: %__MODULE__{
    :businessId => integer(),
    :dateTimeFrom => DateTime.t | nil,
    :dateTimeTo => DateTime.t | nil,
    :dateFrom => Date.t | nil,
    :dateTo => Date.t | nil,
    :yearFrom => integer() | nil,
    :monthFrom => integer() | nil,
    :yearTo => integer() | nil,
    :monthTo => integer() | nil,
    :placementPrograms => [ПартнерскийAPIМаркета.Model.PlacementType.t] | nil,
    :inns => [String.t] | nil,
    :campaignIds => [integer()] | nil
  }

  alias ПартнерскийAPIМаркета.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:dateTimeFrom, :datetime, nil)
     |> Deserializer.deserialize(:dateTimeTo, :datetime, nil)
     |> Deserializer.deserialize(:dateFrom, :date, nil)
     |> Deserializer.deserialize(:dateTo, :date, nil)
     |> Deserializer.deserialize(:placementPrograms, :list, ПартнерскийAPIМаркета.Model.PlacementType)
  end
end

