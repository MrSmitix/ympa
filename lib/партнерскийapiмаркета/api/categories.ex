# NOTE: This file is auto generated by OpenAPI Generator 7.8.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ПартнерскийAPIМаркета.Api.Categories do
  @moduledoc """
  API calls for all endpoints tagged `Categories`.
  """

  alias ПартнерскийAPIМаркета.Connection
  import ПартнерскийAPIМаркета.RequestBuilder

  @doc """
  Лимит на установку кванта продажи и минимального количества товаров в заказе
  Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-| 

  ### Parameters

  - `connection` (ПартнерскийAPIМаркета.Connection): Connection to server
  - `get_categories_max_sale_quantum_request` (GetCategoriesMaxSaleQuantumRequest): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, ПартнерскийAPIМаркета.Model.GetCategoriesMaxSaleQuantumResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_categories_max_sale_quantum(Tesla.Env.client, ПартнерскийAPIМаркета.Model.GetCategoriesMaxSaleQuantumRequest.t, keyword()) :: {:ok, ПартнерскийAPIМаркета.Model.ApiUnauthorizedErrorResponse.t} | {:ok, ПартнерскийAPIМаркета.Model.ApiLimitErrorResponse.t} | {:ok, ПартнерскийAPIМаркета.Model.ApiNotFoundErrorResponse.t} | {:ok, ПартнерскийAPIМаркета.Model.GetCategoriesMaxSaleQuantumResponse.t} | {:ok, ПартнерскийAPIМаркета.Model.ApiClientDataErrorResponse.t} | {:ok, ПартнерскийAPIМаркета.Model.ApiForbiddenErrorResponse.t} | {:ok, ПартнерскийAPIМаркета.Model.ApiServerErrorResponse.t} | {:error, Tesla.Env.t}
  def get_categories_max_sale_quantum(connection, get_categories_max_sale_quantum_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/categories/max-sale-quantum")
      |> add_param(:body, :body, get_categories_max_sale_quantum_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, ПартнерскийAPIМаркета.Model.GetCategoriesMaxSaleQuantumResponse},
      {400, ПартнерскийAPIМаркета.Model.ApiClientDataErrorResponse},
      {401, ПартнерскийAPIМаркета.Model.ApiUnauthorizedErrorResponse},
      {403, ПартнерскийAPIМаркета.Model.ApiForbiddenErrorResponse},
      {404, ПартнерскийAPIМаркета.Model.ApiNotFoundErrorResponse},
      {420, ПартнерскийAPIМаркета.Model.ApiLimitErrorResponse},
      {500, ПартнерскийAPIМаркета.Model.ApiServerErrorResponse}
    ])
  end

  @doc """
  Дерево категорий
  Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 

  ### Parameters

  - `connection` (ПартнерскийAPIМаркета.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:body` (GetCategoriesRequest): 

  ### Returns

  - `{:ok, ПартнерскийAPIМаркета.Model.GetCategoriesResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_categories_tree(Tesla.Env.client, keyword()) :: {:ok, ПартнерскийAPIМаркета.Model.GetCategoriesResponse.t} | {:ok, ПартнерскийAPIМаркета.Model.ApiUnauthorizedErrorResponse.t} | {:ok, ПартнерскийAPIМаркета.Model.ApiLimitErrorResponse.t} | {:ok, ПартнерскийAPIМаркета.Model.ApiNotFoundErrorResponse.t} | {:ok, ПартнерскийAPIМаркета.Model.ApiClientDataErrorResponse.t} | {:ok, ПартнерскийAPIМаркета.Model.ApiForbiddenErrorResponse.t} | {:ok, ПартнерскийAPIМаркета.Model.ApiServerErrorResponse.t} | {:error, Tesla.Env.t}
  def get_categories_tree(connection, opts \\ []) do
    optional_params = %{
      :body => :body
    }

    request =
      %{}
      |> method(:post)
      |> url("/categories/tree")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, ПартнерскийAPIМаркета.Model.GetCategoriesResponse},
      {400, ПартнерскийAPIМаркета.Model.ApiClientDataErrorResponse},
      {401, ПартнерскийAPIМаркета.Model.ApiUnauthorizedErrorResponse},
      {403, ПартнерскийAPIМаркета.Model.ApiForbiddenErrorResponse},
      {404, ПартнерскийAPIМаркета.Model.ApiNotFoundErrorResponse},
      {420, ПартнерскийAPIМаркета.Model.ApiLimitErrorResponse},
      {500, ПартнерскийAPIМаркета.Model.ApiServerErrorResponse}
    ])
  end
end
