=begin comment

Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

The version of the OpenAPI document: LATEST

Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# Do not edit the class manually.
# Ref: https://openapi-generator.tech
#
package WWW::OpenAPIClient::ShipmentsApi;

require 5.6.0;
use strict;
use warnings;
use utf8;
use Exporter;
use Carp qw( croak );
use Log::Any qw($log);

use WWW::OpenAPIClient::ApiClient;

use base "Class::Data::Inheritable";

__PACKAGE__->mk_classdata('method_documentation' => {});

sub new {
    my $class = shift;
    my $api_client;

    if ($_[0] && ref $_[0] && ref $_[0] eq 'WWW::OpenAPIClient::ApiClient' ) {
        $api_client = $_[0];
    } else {
        $api_client = WWW::OpenAPIClient::ApiClient->new(@_);
    }

    bless { api_client => $api_client }, $class;

}


#
# confirm_shipment
#
# Подтверждение отгрузки
#
# @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
# @param int $shipment_id Идентификатор отгрузки. (required)
# @param ConfirmShipmentRequest $confirm_shipment_request  (optional)
{
    my $params = {
    'campaign_id' => {
        data_type => 'int',
        description => 'Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ',
        required => '1',
    },
    'shipment_id' => {
        data_type => 'int',
        description => 'Идентификатор отгрузки.',
        required => '1',
    },
    'confirm_shipment_request' => {
        data_type => 'ConfirmShipmentRequest',
        description => '',
        required => '0',
    },
    };
    __PACKAGE__->method_documentation->{ 'confirm_shipment' } = {
        summary => 'Подтверждение отгрузки',
        params => $params,
        returns => 'EmptyApiResponse',
        };
}
# @return EmptyApiResponse
#
sub confirm_shipment {
    my ($self, %args) = @_;

    # verify the required parameter 'campaign_id' is set
    unless (exists $args{'campaign_id'}) {
      croak("Missing the required parameter 'campaign_id' when calling confirm_shipment");
    }

    # verify the required parameter 'shipment_id' is set
    unless (exists $args{'shipment_id'}) {
      croak("Missing the required parameter 'shipment_id' when calling confirm_shipment");
    }

    # parse inputs
    my $_resource_path = '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/confirm';

    my $_method = 'POST';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type('application/json');

    # path params
    if ( exists $args{'campaign_id'}) {
        my $_base_variable = "{" . "campaignId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'campaign_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'shipment_id'}) {
        my $_base_variable = "{" . "shipmentId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'shipment_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # body params
    if ( exists $args{'confirm_shipment_request'}) {
        $_body_data = $args{'confirm_shipment_request'};
    }

    # authentication setting, if any
    my $auth_settings = [qw(OAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('EmptyApiResponse', $response);
    return $_response_object;
}

#
# download_shipment_act
#
# Получение акта приема-передачи
#
# @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
# @param int $shipment_id Идентификатор отгрузки. (required)
{
    my $params = {
    'campaign_id' => {
        data_type => 'int',
        description => 'Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ',
        required => '1',
    },
    'shipment_id' => {
        data_type => 'int',
        description => 'Идентификатор отгрузки.',
        required => '1',
    },
    };
    __PACKAGE__->method_documentation->{ 'download_shipment_act' } = {
        summary => 'Получение акта приема-передачи',
        params => $params,
        returns => 'string',
        };
}
# @return string
#
sub download_shipment_act {
    my ($self, %args) = @_;

    # verify the required parameter 'campaign_id' is set
    unless (exists $args{'campaign_id'}) {
      croak("Missing the required parameter 'campaign_id' when calling download_shipment_act");
    }

    # verify the required parameter 'shipment_id' is set
    unless (exists $args{'shipment_id'}) {
      croak("Missing the required parameter 'shipment_id' when calling download_shipment_act");
    }

    # parse inputs
    my $_resource_path = '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/act';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/pdf', 'application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    # path params
    if ( exists $args{'campaign_id'}) {
        my $_base_variable = "{" . "campaignId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'campaign_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'shipment_id'}) {
        my $_base_variable = "{" . "shipmentId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'shipment_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(OAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('string', $response);
    return $_response_object;
}

#
# download_shipment_discrepancy_act
#
# Получение акта расхождений
#
# @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
# @param int $shipment_id Идентификатор отгрузки. (required)
{
    my $params = {
    'campaign_id' => {
        data_type => 'int',
        description => 'Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ',
        required => '1',
    },
    'shipment_id' => {
        data_type => 'int',
        description => 'Идентификатор отгрузки.',
        required => '1',
    },
    };
    __PACKAGE__->method_documentation->{ 'download_shipment_discrepancy_act' } = {
        summary => 'Получение акта расхождений',
        params => $params,
        returns => 'string',
        };
}
# @return string
#
sub download_shipment_discrepancy_act {
    my ($self, %args) = @_;

    # verify the required parameter 'campaign_id' is set
    unless (exists $args{'campaign_id'}) {
      croak("Missing the required parameter 'campaign_id' when calling download_shipment_discrepancy_act");
    }

    # verify the required parameter 'shipment_id' is set
    unless (exists $args{'shipment_id'}) {
      croak("Missing the required parameter 'shipment_id' when calling download_shipment_discrepancy_act");
    }

    # parse inputs
    my $_resource_path = '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/discrepancy-act';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/vnd.ms-excel', 'application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    # path params
    if ( exists $args{'campaign_id'}) {
        my $_base_variable = "{" . "campaignId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'campaign_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'shipment_id'}) {
        my $_base_variable = "{" . "shipmentId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'shipment_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(OAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('string', $response);
    return $_response_object;
}

#
# download_shipment_inbound_act
#
# Получение фактического акта приема-передачи
#
# @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
# @param int $shipment_id Идентификатор отгрузки. (required)
{
    my $params = {
    'campaign_id' => {
        data_type => 'int',
        description => 'Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ',
        required => '1',
    },
    'shipment_id' => {
        data_type => 'int',
        description => 'Идентификатор отгрузки.',
        required => '1',
    },
    };
    __PACKAGE__->method_documentation->{ 'download_shipment_inbound_act' } = {
        summary => 'Получение фактического акта приема-передачи',
        params => $params,
        returns => 'string',
        };
}
# @return string
#
sub download_shipment_inbound_act {
    my ($self, %args) = @_;

    # verify the required parameter 'campaign_id' is set
    unless (exists $args{'campaign_id'}) {
      croak("Missing the required parameter 'campaign_id' when calling download_shipment_inbound_act");
    }

    # verify the required parameter 'shipment_id' is set
    unless (exists $args{'shipment_id'}) {
      croak("Missing the required parameter 'shipment_id' when calling download_shipment_inbound_act");
    }

    # parse inputs
    my $_resource_path = '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/inbound-act';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/pdf', 'application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    # path params
    if ( exists $args{'campaign_id'}) {
        my $_base_variable = "{" . "campaignId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'campaign_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'shipment_id'}) {
        my $_base_variable = "{" . "shipmentId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'shipment_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(OAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('string', $response);
    return $_response_object;
}

#
# download_shipment_pallet_labels
#
# Ярлыки для доверительной приемки (FBS)
#
# @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
# @param int $shipment_id Идентификатор отгрузки. (required)
# @param ShipmentPalletLabelPageFormatType $format Формат страниц PDF-файла с ярлыками:  * &#x60;A4&#x60; — по 16 ярлыков на странице. * &#x60;A8&#x60; — по одному ярлыку на странице.  (optional)
{
    my $params = {
    'campaign_id' => {
        data_type => 'int',
        description => 'Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ',
        required => '1',
    },
    'shipment_id' => {
        data_type => 'int',
        description => 'Идентификатор отгрузки.',
        required => '1',
    },
    'format' => {
        data_type => 'ShipmentPalletLabelPageFormatType',
        description => 'Формат страниц PDF-файла с ярлыками:  * &#x60;A4&#x60; — по 16 ярлыков на странице. * &#x60;A8&#x60; — по одному ярлыку на странице. ',
        required => '0',
    },
    };
    __PACKAGE__->method_documentation->{ 'download_shipment_pallet_labels' } = {
        summary => 'Ярлыки для доверительной приемки (FBS)',
        params => $params,
        returns => 'string',
        };
}
# @return string
#
sub download_shipment_pallet_labels {
    my ($self, %args) = @_;

    # verify the required parameter 'campaign_id' is set
    unless (exists $args{'campaign_id'}) {
      croak("Missing the required parameter 'campaign_id' when calling download_shipment_pallet_labels");
    }

    # verify the required parameter 'shipment_id' is set
    unless (exists $args{'shipment_id'}) {
      croak("Missing the required parameter 'shipment_id' when calling download_shipment_pallet_labels");
    }

    # parse inputs
    my $_resource_path = '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/pdf', 'application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    # query params
    if ( exists $args{'format'}) {
        $query_params->{'format'} = $self->{api_client}->to_query_value($args{'format'});
    }

    # path params
    if ( exists $args{'campaign_id'}) {
        my $_base_variable = "{" . "campaignId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'campaign_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'shipment_id'}) {
        my $_base_variable = "{" . "shipmentId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'shipment_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(OAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('string', $response);
    return $_response_object;
}

#
# download_shipment_reception_transfer_act
#
# Подтверждение ближайшей отгрузки и получение акта приема-передачи для нее
#
# @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
# @param int $warehouse_id Идентификатор склада. (optional)
{
    my $params = {
    'campaign_id' => {
        data_type => 'int',
        description => 'Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ',
        required => '1',
    },
    'warehouse_id' => {
        data_type => 'int',
        description => 'Идентификатор склада.',
        required => '0',
    },
    };
    __PACKAGE__->method_documentation->{ 'download_shipment_reception_transfer_act' } = {
        summary => 'Подтверждение ближайшей отгрузки и получение акта приема-передачи для нее',
        params => $params,
        returns => 'string',
        };
}
# @return string
#
sub download_shipment_reception_transfer_act {
    my ($self, %args) = @_;

    # verify the required parameter 'campaign_id' is set
    unless (exists $args{'campaign_id'}) {
      croak("Missing the required parameter 'campaign_id' when calling download_shipment_reception_transfer_act");
    }

    # parse inputs
    my $_resource_path = '/campaigns/{campaignId}/shipments/reception-transfer-act';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/pdf', 'application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    # query params
    if ( exists $args{'warehouse_id'}) {
        $query_params->{'warehouse_id'} = $self->{api_client}->to_query_value($args{'warehouse_id'});
    }

    # path params
    if ( exists $args{'campaign_id'}) {
        my $_base_variable = "{" . "campaignId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'campaign_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(OAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('string', $response);
    return $_response_object;
}

#
# download_shipment_transportation_waybill
#
# Получение транспортной накладной
#
# @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
# @param int $shipment_id Идентификатор отгрузки. (required)
{
    my $params = {
    'campaign_id' => {
        data_type => 'int',
        description => 'Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ',
        required => '1',
    },
    'shipment_id' => {
        data_type => 'int',
        description => 'Идентификатор отгрузки.',
        required => '1',
    },
    };
    __PACKAGE__->method_documentation->{ 'download_shipment_transportation_waybill' } = {
        summary => 'Получение транспортной накладной',
        params => $params,
        returns => 'string',
        };
}
# @return string
#
sub download_shipment_transportation_waybill {
    my ($self, %args) = @_;

    # verify the required parameter 'campaign_id' is set
    unless (exists $args{'campaign_id'}) {
      croak("Missing the required parameter 'campaign_id' when calling download_shipment_transportation_waybill");
    }

    # verify the required parameter 'shipment_id' is set
    unless (exists $args{'shipment_id'}) {
      croak("Missing the required parameter 'shipment_id' when calling download_shipment_transportation_waybill");
    }

    # parse inputs
    my $_resource_path = '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/transportation-waybill';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/vnd.ms-excel', 'application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    # path params
    if ( exists $args{'campaign_id'}) {
        my $_base_variable = "{" . "campaignId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'campaign_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'shipment_id'}) {
        my $_base_variable = "{" . "shipmentId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'shipment_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(OAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('string', $response);
    return $_response_object;
}

#
# get_shipment
#
# Получение информации об одной отгрузке
#
# @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
# @param int $shipment_id Идентификатор отгрузки. (required)
# @param boolean $cancelled_orders Возвращать ли отмененные заказы.  Значение по умолчанию — &#x60;true&#x60;. Если возвращать отмененные заказы не нужно, передайте значение &#x60;false&#x60;.  (optional, default to true)
{
    my $params = {
    'campaign_id' => {
        data_type => 'int',
        description => 'Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ',
        required => '1',
    },
    'shipment_id' => {
        data_type => 'int',
        description => 'Идентификатор отгрузки.',
        required => '1',
    },
    'cancelled_orders' => {
        data_type => 'boolean',
        description => 'Возвращать ли отмененные заказы.  Значение по умолчанию — &#x60;true&#x60;. Если возвращать отмененные заказы не нужно, передайте значение &#x60;false&#x60;. ',
        required => '0',
    },
    };
    __PACKAGE__->method_documentation->{ 'get_shipment' } = {
        summary => 'Получение информации об одной отгрузке',
        params => $params,
        returns => 'GetShipmentResponse',
        };
}
# @return GetShipmentResponse
#
sub get_shipment {
    my ($self, %args) = @_;

    # verify the required parameter 'campaign_id' is set
    unless (exists $args{'campaign_id'}) {
      croak("Missing the required parameter 'campaign_id' when calling get_shipment");
    }

    # verify the required parameter 'shipment_id' is set
    unless (exists $args{'shipment_id'}) {
      croak("Missing the required parameter 'shipment_id' when calling get_shipment");
    }

    # parse inputs
    my $_resource_path = '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    # query params
    if ( exists $args{'cancelled_orders'}) {
        $query_params->{'cancelledOrders'} = $self->{api_client}->to_query_value($args{'cancelled_orders'});
    }

    # path params
    if ( exists $args{'campaign_id'}) {
        my $_base_variable = "{" . "campaignId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'campaign_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'shipment_id'}) {
        my $_base_variable = "{" . "shipmentId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'shipment_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(OAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('GetShipmentResponse', $response);
    return $_response_object;
}

#
# get_shipment_orders_info
#
# Получение информации о возможности печати ярлыков (FBS)
#
# @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
# @param int $shipment_id Идентификатор отгрузки. (required)
{
    my $params = {
    'campaign_id' => {
        data_type => 'int',
        description => 'Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ',
        required => '1',
    },
    'shipment_id' => {
        data_type => 'int',
        description => 'Идентификатор отгрузки.',
        required => '1',
    },
    };
    __PACKAGE__->method_documentation->{ 'get_shipment_orders_info' } = {
        summary => 'Получение информации о возможности печати ярлыков (FBS)',
        params => $params,
        returns => 'GetShipmentOrdersInfoResponse',
        };
}
# @return GetShipmentOrdersInfoResponse
#
sub get_shipment_orders_info {
    my ($self, %args) = @_;

    # verify the required parameter 'campaign_id' is set
    unless (exists $args{'campaign_id'}) {
      croak("Missing the required parameter 'campaign_id' when calling get_shipment_orders_info");
    }

    # verify the required parameter 'shipment_id' is set
    unless (exists $args{'shipment_id'}) {
      croak("Missing the required parameter 'shipment_id' when calling get_shipment_orders_info");
    }

    # parse inputs
    my $_resource_path = '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/info';

    my $_method = 'GET';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    # path params
    if ( exists $args{'campaign_id'}) {
        my $_base_variable = "{" . "campaignId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'campaign_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'shipment_id'}) {
        my $_base_variable = "{" . "shipmentId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'shipment_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(OAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('GetShipmentOrdersInfoResponse', $response);
    return $_response_object;
}

#
# search_shipments
#
# Получение информации о нескольких отгрузках
#
# @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
# @param SearchShipmentsRequest $search_shipments_request  (required)
# @param string $page_token Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.  (optional)
# @param int $limit Количество значений на одной странице.  (optional)
{
    my $params = {
    'campaign_id' => {
        data_type => 'int',
        description => 'Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ',
        required => '1',
    },
    'search_shipments_request' => {
        data_type => 'SearchShipmentsRequest',
        description => '',
        required => '1',
    },
    'page_token' => {
        data_type => 'string',
        description => 'Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. ',
        required => '0',
    },
    'limit' => {
        data_type => 'int',
        description => 'Количество значений на одной странице. ',
        required => '0',
    },
    };
    __PACKAGE__->method_documentation->{ 'search_shipments' } = {
        summary => 'Получение информации о нескольких отгрузках',
        params => $params,
        returns => 'SearchShipmentsResponse',
        };
}
# @return SearchShipmentsResponse
#
sub search_shipments {
    my ($self, %args) = @_;

    # verify the required parameter 'campaign_id' is set
    unless (exists $args{'campaign_id'}) {
      croak("Missing the required parameter 'campaign_id' when calling search_shipments");
    }

    # verify the required parameter 'search_shipments_request' is set
    unless (exists $args{'search_shipments_request'}) {
      croak("Missing the required parameter 'search_shipments_request' when calling search_shipments");
    }

    # parse inputs
    my $_resource_path = '/campaigns/{campaignId}/first-mile/shipments';

    my $_method = 'PUT';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type('application/json');

    # query params
    if ( exists $args{'page_token'}) {
        $query_params->{'page_token'} = $self->{api_client}->to_query_value($args{'page_token'});
    }

    # query params
    if ( exists $args{'limit'}) {
        $query_params->{'limit'} = $self->{api_client}->to_query_value($args{'limit'});
    }

    # path params
    if ( exists $args{'campaign_id'}) {
        my $_base_variable = "{" . "campaignId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'campaign_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # body params
    if ( exists $args{'search_shipments_request'}) {
        $_body_data = $args{'search_shipments_request'};
    }

    # authentication setting, if any
    my $auth_settings = [qw(OAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('SearchShipmentsResponse', $response);
    return $_response_object;
}

#
# set_shipment_pallets_count
#
# Передача количества упаковок в отгрузке
#
# @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
# @param int $shipment_id Идентификатор отгрузки. (required)
# @param SetShipmentPalletsCountRequest $set_shipment_pallets_count_request  (required)
{
    my $params = {
    'campaign_id' => {
        data_type => 'int',
        description => 'Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ',
        required => '1',
    },
    'shipment_id' => {
        data_type => 'int',
        description => 'Идентификатор отгрузки.',
        required => '1',
    },
    'set_shipment_pallets_count_request' => {
        data_type => 'SetShipmentPalletsCountRequest',
        description => '',
        required => '1',
    },
    };
    __PACKAGE__->method_documentation->{ 'set_shipment_pallets_count' } = {
        summary => 'Передача количества упаковок в отгрузке',
        params => $params,
        returns => 'EmptyApiResponse',
        };
}
# @return EmptyApiResponse
#
sub set_shipment_pallets_count {
    my ($self, %args) = @_;

    # verify the required parameter 'campaign_id' is set
    unless (exists $args{'campaign_id'}) {
      croak("Missing the required parameter 'campaign_id' when calling set_shipment_pallets_count");
    }

    # verify the required parameter 'shipment_id' is set
    unless (exists $args{'shipment_id'}) {
      croak("Missing the required parameter 'shipment_id' when calling set_shipment_pallets_count");
    }

    # verify the required parameter 'set_shipment_pallets_count_request' is set
    unless (exists $args{'set_shipment_pallets_count_request'}) {
      croak("Missing the required parameter 'set_shipment_pallets_count_request' when calling set_shipment_pallets_count");
    }

    # parse inputs
    my $_resource_path = '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets';

    my $_method = 'PUT';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type('application/json');

    # path params
    if ( exists $args{'campaign_id'}) {
        my $_base_variable = "{" . "campaignId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'campaign_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'shipment_id'}) {
        my $_base_variable = "{" . "shipmentId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'shipment_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # body params
    if ( exists $args{'set_shipment_pallets_count_request'}) {
        $_body_data = $args{'set_shipment_pallets_count_request'};
    }

    # authentication setting, if any
    my $auth_settings = [qw(OAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('EmptyApiResponse', $response);
    return $_response_object;
}

#
# transfer_orders_from_shipment
#
# Перенос заказов в следующую отгрузку
#
# @param int $campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
# @param int $shipment_id Идентификатор отгрузки. (required)
# @param TransferOrdersFromShipmentRequest $transfer_orders_from_shipment_request  (required)
{
    my $params = {
    'campaign_id' => {
        data_type => 'int',
        description => 'Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ',
        required => '1',
    },
    'shipment_id' => {
        data_type => 'int',
        description => 'Идентификатор отгрузки.',
        required => '1',
    },
    'transfer_orders_from_shipment_request' => {
        data_type => 'TransferOrdersFromShipmentRequest',
        description => '',
        required => '1',
    },
    };
    __PACKAGE__->method_documentation->{ 'transfer_orders_from_shipment' } = {
        summary => 'Перенос заказов в следующую отгрузку',
        params => $params,
        returns => 'EmptyApiResponse',
        };
}
# @return EmptyApiResponse
#
sub transfer_orders_from_shipment {
    my ($self, %args) = @_;

    # verify the required parameter 'campaign_id' is set
    unless (exists $args{'campaign_id'}) {
      croak("Missing the required parameter 'campaign_id' when calling transfer_orders_from_shipment");
    }

    # verify the required parameter 'shipment_id' is set
    unless (exists $args{'shipment_id'}) {
      croak("Missing the required parameter 'shipment_id' when calling transfer_orders_from_shipment");
    }

    # verify the required parameter 'transfer_orders_from_shipment_request' is set
    unless (exists $args{'transfer_orders_from_shipment_request'}) {
      croak("Missing the required parameter 'transfer_orders_from_shipment_request' when calling transfer_orders_from_shipment");
    }

    # parse inputs
    my $_resource_path = '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/transfer';

    my $_method = 'POST';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('application/json');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type('application/json');

    # path params
    if ( exists $args{'campaign_id'}) {
        my $_base_variable = "{" . "campaignId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'campaign_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    # path params
    if ( exists $args{'shipment_id'}) {
        my $_base_variable = "{" . "shipmentId" . "}";
        my $_base_value = $self->{api_client}->to_path_value($args{'shipment_id'});
        $_resource_path =~ s/$_base_variable/$_base_value/g;
    }

    my $_body_data;
    # body params
    if ( exists $args{'transfer_orders_from_shipment_request'}) {
        $_body_data = $args{'transfer_orders_from_shipment_request'};
    }

    # authentication setting, if any
    my $auth_settings = [qw(OAuth )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('EmptyApiResponse', $response);
    return $_response_object;
}

1;
