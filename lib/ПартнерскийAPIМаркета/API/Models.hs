{-
   Партнерский API Маркета

   API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

   OpenAPI Version: 3.0.3
   Партнерский API Маркета API version: LATEST
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : ПартнерскийAPIМаркета.API.Models
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module ПартнерскийAPIМаркета.API.Models where

import ПартнерскийAPIМаркета.Core
import ПартнерскийAPIМаркета.MimeTypes
import ПартнерскийAPIМаркета.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Models

-- *** getModel

-- | @GET \/models\/{modelId}@
-- 
-- Информация об одной модели
-- 
-- Возвращает информацию о модели товара.  Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.) 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
getModel
  :: ModelId -- ^ "modelId" -  Идентификатор модели товара.
  -> RegionId -- ^ "regionId" -  Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). 
  -> ПартнерскийAPIМаркетаRequest GetModel MimeNoContent GetModelsResponse MimeJSON
getModel (ModelId modelId) (RegionId regionId) =
  _mkRequest "GET" ["/models/",toPath modelId]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `addQuery` toQuery ("regionId", Just regionId)

data GetModel  

-- | /Optional Param/ "currency" - Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). 
instance HasOptionalParam GetModel Currency where
  applyOptionalParam req (Currency xs) =
    req `addQuery` toQuery ("currency", Just xs)
-- | @application/json@
instance Produces GetModel MimeJSON


-- *** getModelOffers

-- | @GET \/models\/{modelId}\/offers@
-- 
-- Список предложений для одной модели
-- 
-- Возвращает информацию о первых десяти предложениях, расположенных на карточке модели.  Предложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.  Для групповых моделей метод не поддерживается. Идентификатор групповой модели игнорируется.  Для методов `GET models/{modelId}/offers` и `POST models/offers` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.) 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
getModelOffers
  :: ModelId -- ^ "modelId" -  Идентификатор модели товара.
  -> RegionId -- ^ "regionId" -  Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). 
  -> ПартнерскийAPIМаркетаRequest GetModelOffers MimeNoContent GetModelsOffersResponse MimeJSON
getModelOffers (ModelId modelId) (RegionId regionId) =
  _mkRequest "GET" ["/models/",toPath modelId,"/offers"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `addQuery` toQuery ("regionId", Just regionId)

data GetModelOffers  

-- | /Optional Param/ "currency" - Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). 
instance HasOptionalParam GetModelOffers Currency where
  applyOptionalParam req (Currency xs) =
    req `addQuery` toQuery ("currency", Just xs)

-- | /Optional Param/ "orderByPrice" - Направление сортировки по цене.  Возможные значения: * `ASC` — сортировка по возрастанию. * `DESC` — сортировка по убыванию.  Значение по умолчанию: предложения выводятся в произвольном порядке. 
instance HasOptionalParam GetModelOffers OrderByPrice where
  applyOptionalParam req (OrderByPrice xs) =
    req `addQuery` toQuery ("orderByPrice", Just xs)

-- | /Optional Param/ "count" - Количество предложений на странице ответа.
instance HasOptionalParam GetModelOffers Count where
  applyOptionalParam req (Count xs) =
    req `addQuery` toQuery ("count", Just xs)

-- | /Optional Param/ "page" - Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
instance HasOptionalParam GetModelOffers Page where
  applyOptionalParam req (Page xs) =
    req `addQuery` toQuery ("page", Just xs)
-- | @application/json@
instance Produces GetModelOffers MimeJSON


-- *** getModels

-- | @POST \/models@
-- 
-- Информация о нескольких моделях
-- 
-- Возвращает информацию о моделях товаров.  В одном запросе можно получить информацию не более чем о 100 моделях.  Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.) 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
getModels
  :: (Consumes GetModels MimeJSON, MimeRender MimeJSON GetModelsRequest)
  => GetModelsRequest -- ^ "getModelsRequest"
  -> RegionId -- ^ "regionId" -  Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). 
  -> ПартнерскийAPIМаркетаRequest GetModels MimeJSON GetModelsResponse MimeJSON
getModels getModelsRequest (RegionId regionId) =
  _mkRequest "POST" ["/models"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` getModelsRequest
    `addQuery` toQuery ("regionId", Just regionId)

data GetModels 
instance HasBodyParam GetModels GetModelsRequest 

-- | /Optional Param/ "currency" - Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). 
instance HasOptionalParam GetModels Currency where
  applyOptionalParam req (Currency xs) =
    req `addQuery` toQuery ("currency", Just xs)

-- | @application/json@
instance Consumes GetModels MimeJSON

-- | @application/json@
instance Produces GetModels MimeJSON


-- *** getModelsOffers

-- | @POST \/models\/offers@
-- 
-- Список предложений для нескольких моделей
-- 
-- Возвращает информацию о первых десяти предложениях, расположенных на карточках моделей, идентификаторы которых указаны в запросе.  Предложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.  Для групповых моделей выдача предложений не поддерживается. Идентификаторы групповых моделей игнорируются.  В одном запросе можно получить информацию о предложениях не более чем для 100 моделей.  Для методов `GET models/{modelId}/offers` и `POST models/offers` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.) 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
getModelsOffers
  :: (Consumes GetModelsOffers MimeJSON, MimeRender MimeJSON GetModelsRequest)
  => GetModelsRequest -- ^ "getModelsRequest"
  -> RegionId -- ^ "regionId" -  Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). 
  -> ПартнерскийAPIМаркетаRequest GetModelsOffers MimeJSON GetModelsOffersResponse MimeJSON
getModelsOffers getModelsRequest (RegionId regionId) =
  _mkRequest "POST" ["/models/offers"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` getModelsRequest
    `addQuery` toQuery ("regionId", Just regionId)

data GetModelsOffers 
instance HasBodyParam GetModelsOffers GetModelsRequest 

-- | /Optional Param/ "currency" - Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). 
instance HasOptionalParam GetModelsOffers Currency where
  applyOptionalParam req (Currency xs) =
    req `addQuery` toQuery ("currency", Just xs)

-- | /Optional Param/ "orderByPrice" - Направление сортировки по цене.  Возможные значения: * `ASC` — сортировка по возрастанию. * `DESC` — сортировка по убыванию.  Значение по умолчанию: предложения выводятся в произвольном порядке. 
instance HasOptionalParam GetModelsOffers OrderByPrice where
  applyOptionalParam req (OrderByPrice xs) =
    req `addQuery` toQuery ("orderByPrice", Just xs)

-- | @application/json@
instance Consumes GetModelsOffers MimeJSON

-- | @application/json@
instance Produces GetModelsOffers MimeJSON


-- *** searchModels

-- | @GET \/models@
-- 
-- Поиск модели товара
-- 
-- Возвращает информацию о моделях, удовлетворяющих заданным в запросе условиям поиска.  В одном запросе можно получить информацию не более чем о 100 моделях.  Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.) 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
searchModels
  :: Query -- ^ "query" -  Поисковый запрос по названию модели товара.
  -> RegionId -- ^ "regionId" -  Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). 
  -> ПартнерскийAPIМаркетаRequest SearchModels MimeNoContent SearchModelsResponse MimeJSON
searchModels (Query query) (RegionId regionId) =
  _mkRequest "GET" ["/models"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `addQuery` toQuery ("query", Just query)
    `addQuery` toQuery ("regionId", Just regionId)

data SearchModels  

-- | /Optional Param/ "currency" - Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). 
instance HasOptionalParam SearchModels Currency where
  applyOptionalParam req (Currency xs) =
    req `addQuery` toQuery ("currency", Just xs)

-- | /Optional Param/ "page" - Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
instance HasOptionalParam SearchModels Page where
  applyOptionalParam req (Page xs) =
    req `addQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "pageSize" - Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
instance HasOptionalParam SearchModels PageSize where
  applyOptionalParam req (PageSize xs) =
    req `addQuery` toQuery ("pageSize", Just xs)
-- | @application/json@
instance Produces SearchModels MimeJSON

