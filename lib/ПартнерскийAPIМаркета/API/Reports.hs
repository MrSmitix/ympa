{-
   Партнерский API Маркета

   API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

   OpenAPI Version: 3.0.3
   Партнерский API Маркета API version: LATEST
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : ПартнерскийAPIМаркета.API.Reports
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module ПартнерскийAPIМаркета.API.Reports where

import ПартнерскийAPIМаркета.Core
import ПартнерскийAPIМаркета.MimeTypes
import ПартнерскийAPIМаркета.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Reports

-- *** generateBoostConsolidatedReport

-- | @POST \/reports\/boost-consolidated\/generate@
-- 
-- Отчет по бусту продаж
-- 
-- Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
generateBoostConsolidatedReport
  :: (Consumes GenerateBoostConsolidatedReport MimeJSON, MimeRender MimeJSON GenerateBoostConsolidatedRequest)
  => GenerateBoostConsolidatedRequest -- ^ "generateBoostConsolidatedRequest"
  -> ПартнерскийAPIМаркетаRequest GenerateBoostConsolidatedReport MimeJSON GenerateReportResponse MimeJSON
generateBoostConsolidatedReport generateBoostConsolidatedRequest =
  _mkRequest "POST" ["/reports/boost-consolidated/generate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` generateBoostConsolidatedRequest

data GenerateBoostConsolidatedReport 
instance HasBodyParam GenerateBoostConsolidatedReport GenerateBoostConsolidatedRequest 

-- | /Optional Param/ "format" - Формат отчета.
instance HasOptionalParam GenerateBoostConsolidatedReport Format3 where
  applyOptionalParam req (Format3 xs) =
    req `addQuery` toQuery ("format", Just xs)

-- | @application/json@
instance Consumes GenerateBoostConsolidatedReport MimeJSON

-- | @application/json@
instance Produces GenerateBoostConsolidatedReport MimeJSON


-- *** generateCompetitorsPositionReport

-- | @POST \/reports\/competitors-position\/generate@
-- 
-- Отчет «Конкурентная позиция»
-- 
-- Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \"Значение -1 в отчете\" %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
generateCompetitorsPositionReport
  :: (Consumes GenerateCompetitorsPositionReport MimeJSON, MimeRender MimeJSON GenerateCompetitorsPositionReportRequest)
  => GenerateCompetitorsPositionReportRequest -- ^ "generateCompetitorsPositionReportRequest"
  -> ПартнерскийAPIМаркетаRequest GenerateCompetitorsPositionReport MimeJSON GenerateReportResponse MimeJSON
generateCompetitorsPositionReport generateCompetitorsPositionReportRequest =
  _mkRequest "POST" ["/reports/competitors-position/generate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` generateCompetitorsPositionReportRequest

data GenerateCompetitorsPositionReport 
instance HasBodyParam GenerateCompetitorsPositionReport GenerateCompetitorsPositionReportRequest 

-- | /Optional Param/ "format" - Формат отчета.
instance HasOptionalParam GenerateCompetitorsPositionReport Format3 where
  applyOptionalParam req (Format3 xs) =
    req `addQuery` toQuery ("format", Just xs)

-- | @application/json@
instance Consumes GenerateCompetitorsPositionReport MimeJSON

-- | @application/json@
instance Produces GenerateCompetitorsPositionReport MimeJSON


-- *** generateGoodsFeedbackReport

-- | @POST \/reports\/goods-feedback\/generate@
-- 
-- Отчет по отзывам о товарах
-- 
-- Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
generateGoodsFeedbackReport
  :: (Consumes GenerateGoodsFeedbackReport MimeJSON, MimeRender MimeJSON GenerateGoodsFeedbackRequest)
  => GenerateGoodsFeedbackRequest -- ^ "generateGoodsFeedbackRequest"
  -> ПартнерскийAPIМаркетаRequest GenerateGoodsFeedbackReport MimeJSON GenerateReportResponse MimeJSON
generateGoodsFeedbackReport generateGoodsFeedbackRequest =
  _mkRequest "POST" ["/reports/goods-feedback/generate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` generateGoodsFeedbackRequest

data GenerateGoodsFeedbackReport 
instance HasBodyParam GenerateGoodsFeedbackReport GenerateGoodsFeedbackRequest 

-- | /Optional Param/ "format" - Формат отчета.
instance HasOptionalParam GenerateGoodsFeedbackReport Format3 where
  applyOptionalParam req (Format3 xs) =
    req `addQuery` toQuery ("format", Just xs)

-- | @application/json@
instance Consumes GenerateGoodsFeedbackReport MimeJSON

-- | @application/json@
instance Produces GenerateGoodsFeedbackReport MimeJSON


-- *** generateGoodsMovementReport

-- | @POST \/reports\/goods-movement\/generate@
-- 
-- Отчет по движению товаров
-- 
-- Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
generateGoodsMovementReport
  :: (Consumes GenerateGoodsMovementReport MimeJSON, MimeRender MimeJSON GenerateGoodsMovementReportRequest)
  => GenerateGoodsMovementReportRequest -- ^ "generateGoodsMovementReportRequest"
  -> ПартнерскийAPIМаркетаRequest GenerateGoodsMovementReport MimeJSON GenerateReportResponse MimeJSON
generateGoodsMovementReport generateGoodsMovementReportRequest =
  _mkRequest "POST" ["/reports/goods-movement/generate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` generateGoodsMovementReportRequest

data GenerateGoodsMovementReport 
instance HasBodyParam GenerateGoodsMovementReport GenerateGoodsMovementReportRequest 

-- | /Optional Param/ "format" - Формат отчета.
instance HasOptionalParam GenerateGoodsMovementReport Format3 where
  applyOptionalParam req (Format3 xs) =
    req `addQuery` toQuery ("format", Just xs)

-- | @application/json@
instance Consumes GenerateGoodsMovementReport MimeJSON

-- | @application/json@
instance Produces GenerateGoodsMovementReport MimeJSON


-- *** generateGoodsRealizationReport

-- | @POST \/reports\/goods-realization\/generate@
-- 
-- Отчет по реализации
-- 
-- Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
generateGoodsRealizationReport
  :: (Consumes GenerateGoodsRealizationReport MimeJSON, MimeRender MimeJSON GenerateGoodsRealizationReportRequest)
  => GenerateGoodsRealizationReportRequest -- ^ "generateGoodsRealizationReportRequest"
  -> ПартнерскийAPIМаркетаRequest GenerateGoodsRealizationReport MimeJSON GenerateReportResponse MimeJSON
generateGoodsRealizationReport generateGoodsRealizationReportRequest =
  _mkRequest "POST" ["/reports/goods-realization/generate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` generateGoodsRealizationReportRequest

data GenerateGoodsRealizationReport 
instance HasBodyParam GenerateGoodsRealizationReport GenerateGoodsRealizationReportRequest 

-- | /Optional Param/ "format" - Формат отчета.
instance HasOptionalParam GenerateGoodsRealizationReport Format3 where
  applyOptionalParam req (Format3 xs) =
    req `addQuery` toQuery ("format", Just xs)

-- | @application/json@
instance Consumes GenerateGoodsRealizationReport MimeJSON

-- | @application/json@
instance Produces GenerateGoodsRealizationReport MimeJSON


-- *** generateGoodsTurnoverReport

-- | @POST \/reports\/goods-turnover\/generate@
-- 
-- Отчет по оборачиваемости
-- 
-- Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
generateGoodsTurnoverReport
  :: (Consumes GenerateGoodsTurnoverReport MimeJSON, MimeRender MimeJSON GenerateGoodsTurnoverRequest)
  => GenerateGoodsTurnoverRequest -- ^ "generateGoodsTurnoverRequest"
  -> ПартнерскийAPIМаркетаRequest GenerateGoodsTurnoverReport MimeJSON GenerateReportResponse MimeJSON
generateGoodsTurnoverReport generateGoodsTurnoverRequest =
  _mkRequest "POST" ["/reports/goods-turnover/generate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` generateGoodsTurnoverRequest

data GenerateGoodsTurnoverReport 
instance HasBodyParam GenerateGoodsTurnoverReport GenerateGoodsTurnoverRequest 

-- | /Optional Param/ "format" - Формат отчета.
instance HasOptionalParam GenerateGoodsTurnoverReport Format3 where
  applyOptionalParam req (Format3 xs) =
    req `addQuery` toQuery ("format", Just xs)

-- | @application/json@
instance Consumes GenerateGoodsTurnoverReport MimeJSON

-- | @application/json@
instance Produces GenerateGoodsTurnoverReport MimeJSON


-- *** generateMassOrderLabelsReport

-- | @POST \/reports\/documents\/labels\/generate@
-- 
-- Готовые ярлыки‑наклейки на все коробки в нескольких заказах
-- 
-- Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
generateMassOrderLabelsReport
  :: (Consumes GenerateMassOrderLabelsReport MimeJSON, MimeRender MimeJSON GenerateMassOrderLabelsRequest)
  => GenerateMassOrderLabelsRequest -- ^ "generateMassOrderLabelsRequest"
  -> ПартнерскийAPIМаркетаRequest GenerateMassOrderLabelsReport MimeJSON GenerateReportResponse MimeJSON
generateMassOrderLabelsReport generateMassOrderLabelsRequest =
  _mkRequest "POST" ["/reports/documents/labels/generate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` generateMassOrderLabelsRequest

data GenerateMassOrderLabelsReport 
instance HasBodyParam GenerateMassOrderLabelsReport GenerateMassOrderLabelsRequest 

-- | /Optional Param/ "format" - Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7.
instance HasOptionalParam GenerateMassOrderLabelsReport Format where
  applyOptionalParam req (Format xs) =
    req `addQuery` toQuery ("format", Just xs)

-- | @application/json@
instance Consumes GenerateMassOrderLabelsReport MimeJSON

-- | @application/json@
instance Produces GenerateMassOrderLabelsReport MimeJSON


-- *** generatePricesReport

-- | @POST \/reports\/prices\/generate@
-- 
-- Отчет «Цены на рынке»
-- 
-- Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
generatePricesReport
  :: (Consumes GeneratePricesReport MimeJSON, MimeRender MimeJSON GeneratePricesReportRequest)
  => GeneratePricesReportRequest -- ^ "generatePricesReportRequest"
  -> ПартнерскийAPIМаркетаRequest GeneratePricesReport MimeJSON GenerateReportResponse MimeJSON
generatePricesReport generatePricesReportRequest =
  _mkRequest "POST" ["/reports/prices/generate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` generatePricesReportRequest

data GeneratePricesReport 
instance HasBodyParam GeneratePricesReport GeneratePricesReportRequest 

-- | /Optional Param/ "format" - Формат отчета.
instance HasOptionalParam GeneratePricesReport Format3 where
  applyOptionalParam req (Format3 xs) =
    req `addQuery` toQuery ("format", Just xs)

-- | @application/json@
instance Consumes GeneratePricesReport MimeJSON

-- | @application/json@
instance Produces GeneratePricesReport MimeJSON


-- *** generateShelfsStatisticsReport

-- | @POST \/reports\/shelf-statistics\/generate@
-- 
-- Отчет по полкам
-- 
-- Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
generateShelfsStatisticsReport
  :: (Consumes GenerateShelfsStatisticsReport MimeJSON, MimeRender MimeJSON GenerateShelfsStatisticsRequest)
  => GenerateShelfsStatisticsRequest -- ^ "generateShelfsStatisticsRequest"
  -> ПартнерскийAPIМаркетаRequest GenerateShelfsStatisticsReport MimeJSON GenerateReportResponse MimeJSON
generateShelfsStatisticsReport generateShelfsStatisticsRequest =
  _mkRequest "POST" ["/reports/shelf-statistics/generate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` generateShelfsStatisticsRequest

data GenerateShelfsStatisticsReport 
instance HasBodyParam GenerateShelfsStatisticsReport GenerateShelfsStatisticsRequest 

-- | /Optional Param/ "format" - Формат отчета.
instance HasOptionalParam GenerateShelfsStatisticsReport Format3 where
  applyOptionalParam req (Format3 xs) =
    req `addQuery` toQuery ("format", Just xs)

-- | @application/json@
instance Consumes GenerateShelfsStatisticsReport MimeJSON

-- | @application/json@
instance Produces GenerateShelfsStatisticsReport MimeJSON


-- *** generateShipmentListDocumentReport

-- | @POST \/reports\/documents\/shipment-list\/generate@
-- 
-- Получение листа сборки
-- 
-- Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
generateShipmentListDocumentReport
  :: (Consumes GenerateShipmentListDocumentReport MimeJSON, MimeRender MimeJSON GenerateShipmentListDocumentReportRequest)
  => GenerateShipmentListDocumentReportRequest -- ^ "generateShipmentListDocumentReportRequest"
  -> ПартнерскийAPIМаркетаRequest GenerateShipmentListDocumentReport MimeJSON GenerateReportResponse MimeJSON
generateShipmentListDocumentReport generateShipmentListDocumentReportRequest =
  _mkRequest "POST" ["/reports/documents/shipment-list/generate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` generateShipmentListDocumentReportRequest

data GenerateShipmentListDocumentReport 
instance HasBodyParam GenerateShipmentListDocumentReport GenerateShipmentListDocumentReportRequest 

-- | @application/json@
instance Consumes GenerateShipmentListDocumentReport MimeJSON

-- | @application/json@
instance Produces GenerateShipmentListDocumentReport MimeJSON


-- *** generateShowsSalesReport

-- | @POST \/reports\/shows-sales\/generate@
-- 
-- Отчет «Аналитика продаж»
-- 
-- Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
generateShowsSalesReport
  :: (Consumes GenerateShowsSalesReport MimeJSON, MimeRender MimeJSON GenerateShowsSalesReportRequest)
  => GenerateShowsSalesReportRequest -- ^ "generateShowsSalesReportRequest"
  -> ПартнерскийAPIМаркетаRequest GenerateShowsSalesReport MimeJSON GenerateReportResponse MimeJSON
generateShowsSalesReport generateShowsSalesReportRequest =
  _mkRequest "POST" ["/reports/shows-sales/generate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` generateShowsSalesReportRequest

data GenerateShowsSalesReport 
instance HasBodyParam GenerateShowsSalesReport GenerateShowsSalesReportRequest 

-- | /Optional Param/ "format" - Формат отчета.
instance HasOptionalParam GenerateShowsSalesReport Format3 where
  applyOptionalParam req (Format3 xs) =
    req `addQuery` toQuery ("format", Just xs)

-- | @application/json@
instance Consumes GenerateShowsSalesReport MimeJSON

-- | @application/json@
instance Produces GenerateShowsSalesReport MimeJSON


-- *** generateStocksOnWarehousesReport

-- | @POST \/reports\/stocks-on-warehouses\/generate@
-- 
-- Отчет по остаткам на складах
-- 
-- Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
generateStocksOnWarehousesReport
  :: (Consumes GenerateStocksOnWarehousesReport MimeJSON, MimeRender MimeJSON GenerateStocksOnWarehousesReportRequest)
  => GenerateStocksOnWarehousesReportRequest -- ^ "generateStocksOnWarehousesReportRequest"
  -> ПартнерскийAPIМаркетаRequest GenerateStocksOnWarehousesReport MimeJSON GenerateReportResponse MimeJSON
generateStocksOnWarehousesReport generateStocksOnWarehousesReportRequest =
  _mkRequest "POST" ["/reports/stocks-on-warehouses/generate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` generateStocksOnWarehousesReportRequest

data GenerateStocksOnWarehousesReport 
instance HasBodyParam GenerateStocksOnWarehousesReport GenerateStocksOnWarehousesReportRequest 

-- | /Optional Param/ "format" - Формат отчета.
instance HasOptionalParam GenerateStocksOnWarehousesReport Format3 where
  applyOptionalParam req (Format3 xs) =
    req `addQuery` toQuery ("format", Just xs)

-- | @application/json@
instance Consumes GenerateStocksOnWarehousesReport MimeJSON

-- | @application/json@
instance Produces GenerateStocksOnWarehousesReport MimeJSON


-- *** generateUnitedMarketplaceServicesReport

-- | @POST \/reports\/united-marketplace-services\/generate@
-- 
-- Отчет по стоимости услуг
-- 
-- Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |-----------------------------|---------------------------------| |По дате начисления услуги    |`dateFrom` и `dateTo`            | |По дате формирования акта    |`year` и `month`                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
generateUnitedMarketplaceServicesReport
  :: (Consumes GenerateUnitedMarketplaceServicesReport MimeJSON, MimeRender MimeJSON GenerateUnitedMarketplaceServicesReportRequest)
  => GenerateUnitedMarketplaceServicesReportRequest -- ^ "generateUnitedMarketplaceServicesReportRequest"
  -> ПартнерскийAPIМаркетаRequest GenerateUnitedMarketplaceServicesReport MimeJSON GenerateReportResponse MimeJSON
generateUnitedMarketplaceServicesReport generateUnitedMarketplaceServicesReportRequest =
  _mkRequest "POST" ["/reports/united-marketplace-services/generate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` generateUnitedMarketplaceServicesReportRequest

data GenerateUnitedMarketplaceServicesReport 
instance HasBodyParam GenerateUnitedMarketplaceServicesReport GenerateUnitedMarketplaceServicesReportRequest 

-- | /Optional Param/ "format" - Формат отчета.
instance HasOptionalParam GenerateUnitedMarketplaceServicesReport Format3 where
  applyOptionalParam req (Format3 xs) =
    req `addQuery` toQuery ("format", Just xs)

-- | @application/json@
instance Consumes GenerateUnitedMarketplaceServicesReport MimeJSON

-- | @application/json@
instance Produces GenerateUnitedMarketplaceServicesReport MimeJSON


-- *** generateUnitedNettingReport

-- | @POST \/reports\/united-netting\/generate@
-- 
-- Отчет по платежам
-- 
-- Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |-------------------------|---------------------------------------| |О платежах за период     |`dateFrom` и `dateTo`                  | |О платежном поручении    |`bankOrderId` и `bankOrderDateTime`    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
generateUnitedNettingReport
  :: (Consumes GenerateUnitedNettingReport MimeJSON, MimeRender MimeJSON GenerateUnitedNettingReportRequest)
  => GenerateUnitedNettingReportRequest -- ^ "generateUnitedNettingReportRequest"
  -> ПартнерскийAPIМаркетаRequest GenerateUnitedNettingReport MimeJSON GenerateReportResponse MimeJSON
generateUnitedNettingReport generateUnitedNettingReportRequest =
  _mkRequest "POST" ["/reports/united-netting/generate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` generateUnitedNettingReportRequest

data GenerateUnitedNettingReport 
instance HasBodyParam GenerateUnitedNettingReport GenerateUnitedNettingReportRequest 

-- | /Optional Param/ "format" - Формат отчета.
instance HasOptionalParam GenerateUnitedNettingReport Format3 where
  applyOptionalParam req (Format3 xs) =
    req `addQuery` toQuery ("format", Just xs)

-- | @application/json@
instance Consumes GenerateUnitedNettingReport MimeJSON

-- | @application/json@
instance Produces GenerateUnitedNettingReport MimeJSON


-- *** generateUnitedOrdersReport

-- | @POST \/reports\/united-orders\/generate@
-- 
-- Отчет по заказам
-- 
-- Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \"\" %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
generateUnitedOrdersReport
  :: (Consumes GenerateUnitedOrdersReport MimeJSON, MimeRender MimeJSON GenerateUnitedOrdersRequest)
  => GenerateUnitedOrdersRequest -- ^ "generateUnitedOrdersRequest"
  -> ПартнерскийAPIМаркетаRequest GenerateUnitedOrdersReport MimeJSON GenerateReportResponse MimeJSON
generateUnitedOrdersReport generateUnitedOrdersRequest =
  _mkRequest "POST" ["/reports/united-orders/generate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` generateUnitedOrdersRequest

data GenerateUnitedOrdersReport 
instance HasBodyParam GenerateUnitedOrdersReport GenerateUnitedOrdersRequest 

-- | /Optional Param/ "format" - Формат отчета.
instance HasOptionalParam GenerateUnitedOrdersReport Format3 where
  applyOptionalParam req (Format3 xs) =
    req `addQuery` toQuery ("format", Just xs)

-- | @application/json@
instance Consumes GenerateUnitedOrdersReport MimeJSON

-- | @application/json@
instance Produces GenerateUnitedOrdersReport MimeJSON


-- *** getReportInfo

-- | @GET \/reports\/info\/{reportId}@
-- 
-- Получение заданного отчета
-- 
-- Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
getReportInfo
  :: ReportId -- ^ "reportId" -  Идентификатор отчета, который вы получили после запуска генерации. 
  -> ПартнерскийAPIМаркетаRequest GetReportInfo MimeNoContent GetReportInfoResponse MimeJSON
getReportInfo (ReportId reportId) =
  _mkRequest "GET" ["/reports/info/",toPath reportId]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)

data GetReportInfo  
-- | @application/json@
instance Produces GetReportInfo MimeJSON

