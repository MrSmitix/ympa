{-
   Партнерский API Маркета

   API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

   OpenAPI Version: 3.0.3
   Партнерский API Маркета API version: LATEST
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : ПартнерскийAPIМаркета.API.BusinessOfferMappings
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module ПартнерскийAPIМаркета.API.BusinessOfferMappings where

import ПартнерскийAPIМаркета.Core
import ПартнерскийAPIМаркета.MimeTypes
import ПартнерскийAPIМаркета.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** BusinessOfferMappings

-- *** addOffersToArchive

-- | @POST \/businesses\/{businessId}\/offer-mappings\/archive@
-- 
-- Добавление товаров в архив
-- 
-- Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.  {% note warning \"В архив нельзя отправить товар, который хранится на складе Маркета\" %}  Вначале такой товар нужно распродать или вывезти.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
addOffersToArchive
  :: (Consumes AddOffersToArchive MimeJSON, MimeRender MimeJSON AddOffersToArchiveRequest)
  => AddOffersToArchiveRequest -- ^ "addOffersToArchiveRequest"
  -> BusinessId -- ^ "businessId" -  Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  -> ПартнерскийAPIМаркетаRequest AddOffersToArchive MimeJSON AddOffersToArchiveResponse MimeJSON
addOffersToArchive addOffersToArchiveRequest (BusinessId businessId) =
  _mkRequest "POST" ["/businesses/",toPath businessId,"/offer-mappings/archive"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` addOffersToArchiveRequest

data AddOffersToArchive 
instance HasBodyParam AddOffersToArchive AddOffersToArchiveRequest 

-- | @application/json@
instance Consumes AddOffersToArchive MimeJSON

-- | @application/json@
instance Produces AddOffersToArchive MimeJSON


-- *** deleteOffers

-- | @POST \/businesses\/{businessId}\/offer-mappings\/delete@
-- 
-- Удаление товаров из каталога
-- 
-- Удаляет товары из каталога.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
deleteOffers
  :: (Consumes DeleteOffers MimeJSON, MimeRender MimeJSON DeleteOffersRequest)
  => DeleteOffersRequest -- ^ "deleteOffersRequest"
  -> BusinessId -- ^ "businessId" -  Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  -> ПартнерскийAPIМаркетаRequest DeleteOffers MimeJSON DeleteOffersResponse MimeJSON
deleteOffers deleteOffersRequest (BusinessId businessId) =
  _mkRequest "POST" ["/businesses/",toPath businessId,"/offer-mappings/delete"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` deleteOffersRequest

data DeleteOffers 
instance HasBodyParam DeleteOffers DeleteOffersRequest 

-- | @application/json@
instance Consumes DeleteOffers MimeJSON

-- | @application/json@
instance Produces DeleteOffers MimeJSON


-- *** deleteOffersFromArchive

-- | @POST \/businesses\/{businessId}\/offer-mappings\/unarchive@
-- 
-- Удаление товаров из архива
-- 
-- Восстанавливает товары из архива.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
deleteOffersFromArchive
  :: (Consumes DeleteOffersFromArchive MimeJSON, MimeRender MimeJSON DeleteOffersFromArchiveRequest)
  => DeleteOffersFromArchiveRequest -- ^ "deleteOffersFromArchiveRequest"
  -> BusinessId -- ^ "businessId" -  Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  -> ПартнерскийAPIМаркетаRequest DeleteOffersFromArchive MimeJSON DeleteOffersFromArchiveResponse MimeJSON
deleteOffersFromArchive deleteOffersFromArchiveRequest (BusinessId businessId) =
  _mkRequest "POST" ["/businesses/",toPath businessId,"/offer-mappings/unarchive"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` deleteOffersFromArchiveRequest

data DeleteOffersFromArchive 
instance HasBodyParam DeleteOffersFromArchive DeleteOffersFromArchiveRequest 

-- | @application/json@
instance Consumes DeleteOffersFromArchive MimeJSON

-- | @application/json@
instance Produces DeleteOffersFromArchive MimeJSON


-- *** getOfferMappings

-- | @POST \/businesses\/{businessId}\/offer-mappings@
-- 
-- Информация о товарах в каталоге
-- 
-- Возвращает список товаров в каталоге, их категории на Маркете и характеристики каждого товара.  Можно использовать тремя способами: * задать список интересующих SKU; * задать фильтр — в этом случае результаты возвращаются постранично; * не передавать тело запроса, чтобы получить список всех товаров в каталоге.  |**⚙️ Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
getOfferMappings
  :: (Consumes GetOfferMappings MimeJSON)
  => BusinessId -- ^ "businessId" -  Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  -> ПартнерскийAPIМаркетаRequest GetOfferMappings MimeJSON GetOfferMappingsResponse MimeJSON
getOfferMappings (BusinessId businessId) =
  _mkRequest "POST" ["/businesses/",toPath businessId,"/offer-mappings"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)

data GetOfferMappings 
instance HasBodyParam GetOfferMappings GetOfferMappingsRequest 

-- | /Optional Param/ "page_token" - Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
instance HasOptionalParam GetOfferMappings PageToken where
  applyOptionalParam req (PageToken xs) =
    req `addQuery` toQuery ("page_token", Just xs)

-- | /Optional Param/ "limit" - Количество значений на одной странице. 
instance HasOptionalParam GetOfferMappings Limit where
  applyOptionalParam req (Limit xs) =
    req `addQuery` toQuery ("limit", Just xs)

-- | @application/json@
instance Consumes GetOfferMappings MimeJSON

-- | @application/json@
instance Produces GetOfferMappings MimeJSON


-- *** getSuggestedOfferMappings

-- | @POST \/businesses\/{businessId}\/offer-mappings\/suggestions@
-- 
-- Просмотр карточек на Маркете, которые подходят вашим товарам
-- 
-- Возвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.  Пользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточки по предоставленным вами данным.  **Как пользоваться запросом**  1. Передайте Маркету список товаров, которые нужно проверить. 2. В ответ вы получите список SKU на Маркете с расшифровкой: названием, идентификатором модели, категорией. 3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида `https://market.yandex.ru/product/<marketModelId>?sku=<marketSku>`. 4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать `marketSKU`, который ему подходит по вашему мнению.  {% note info \"𝓠 Как определить `marketSku` товара, найденного на Маркете?\" %}  𝓐 Он есть в адресе страницы товара — расположен после `sku=`.  Например, `https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016`  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
getSuggestedOfferMappings
  :: (Consumes GetSuggestedOfferMappings MimeJSON)
  => BusinessId -- ^ "businessId" -  Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  -> ПартнерскийAPIМаркетаRequest GetSuggestedOfferMappings MimeJSON GetSuggestedOfferMappingsResponse MimeJSON
getSuggestedOfferMappings (BusinessId businessId) =
  _mkRequest "POST" ["/businesses/",toPath businessId,"/offer-mappings/suggestions"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)

data GetSuggestedOfferMappings 
instance HasBodyParam GetSuggestedOfferMappings GetSuggestedOfferMappingsRequest 

-- | @application/json@
instance Consumes GetSuggestedOfferMappings MimeJSON

-- | @application/json@
instance Produces GetSuggestedOfferMappings MimeJSON


-- *** updateOfferMappings

-- | @POST \/businesses\/{businessId}\/offer-mappings\/update@
-- 
-- Добавление товаров в каталог и изменение информации о них
-- 
-- Добавляет товары в каталог, передает их категории на Маркете и характеристики, необходимые для этих категории. Также редактирует информацию об уже имеющихся товарах.  Список категорий Маркета можно получить с помощью запроса [POST categories/tree](../../reference/categories/getCategoriesTree.md), а характеристики товаров по категориям с помощью [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).  Чтобы **добавить новый товар**, передайте его с новым идентификатором, который раньше никогда не использовался в каталоге. Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой. Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**SKU на Маркете**) в поле `marketSKU`.  Для **новых товаров** обязательно укажите параметры: `offerId`, `name`, `marketCategoryId` или `category`, `pictures`, `vendor`, `description`.  Чтобы **отредактировать информацию о товаре**, передайте новые данные, указав в `offerId` соответствующий **ваш SKU**. Поля, в которых ничего не меняется, можно не передавать.  Чтобы **удалить характеристики**, которые заданы в параметрах с типом `string`, передайте пустое значение.  Параметр `offerId` должен быть **уникальным** для всех товаров, которые вы передаете.  {% note warning \"Правила использования SKU\" %}  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
updateOfferMappings
  :: (Consumes UpdateOfferMappings MimeJSON, MimeRender MimeJSON UpdateOfferMappingsRequest)
  => UpdateOfferMappingsRequest -- ^ "updateOfferMappingsRequest"
  -> BusinessId -- ^ "businessId" -  Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  -> ПартнерскийAPIМаркетаRequest UpdateOfferMappings MimeJSON UpdateOfferMappingsResponse MimeJSON
updateOfferMappings updateOfferMappingsRequest (BusinessId businessId) =
  _mkRequest "POST" ["/businesses/",toPath businessId,"/offer-mappings/update"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` updateOfferMappingsRequest

data UpdateOfferMappings 
instance HasBodyParam UpdateOfferMappings UpdateOfferMappingsRequest 

-- | @application/json@
instance Consumes UpdateOfferMappings MimeJSON

-- | @application/json@
instance Produces UpdateOfferMappings MimeJSON

