{-
   Партнерский API Маркета

   API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

   OpenAPI Version: 3.0.3
   Партнерский API Маркета API version: LATEST
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : ПартнерскийAPIМаркета.API.Campaigns
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module ПартнерскийAPIМаркета.API.Campaigns where

import ПартнерскийAPIМаркета.Core
import ПартнерскийAPIМаркета.MimeTypes
import ПартнерскийAPIМаркета.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Campaigns

-- *** getCampaign

-- | @GET \/campaigns\/{campaignId}@
-- 
-- Информация о магазине
-- 
-- Возвращает информацию о магазине. |**⚙️ Лимит:** 1000 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
getCampaign
  :: CampaignId -- ^ "campaignId" -  Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  -> ПартнерскийAPIМаркетаRequest GetCampaign MimeNoContent GetCampaignResponse MimeJSON
getCampaign (CampaignId campaignId) =
  _mkRequest "GET" ["/campaigns/",toPath campaignId]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)

data GetCampaign  
-- | @application/json@
instance Produces GetCampaign MimeJSON


-- *** getCampaignLogins

-- | @GET \/campaigns\/{campaignId}\/logins@
-- 
-- Логины, связанные с магазином
-- 
-- Возвращает список логинов, у которых есть доступ к магазину. |**⚙️ Лимит:** 1000 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
getCampaignLogins
  :: CampaignId -- ^ "campaignId" -  Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  -> ПартнерскийAPIМаркетаRequest GetCampaignLogins MimeNoContent GetCampaignLoginsResponse MimeJSON
getCampaignLogins (CampaignId campaignId) =
  _mkRequest "GET" ["/campaigns/",toPath campaignId,"/logins"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)

data GetCampaignLogins  
-- | @application/json@
instance Produces GetCampaignLogins MimeJSON


-- *** getCampaignRegion

-- | @GET \/campaigns\/{campaignId}\/region@
-- 
-- Регион магазина
-- 
-- {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [GET campaigns/{campaignId}/settings](../../reference/campaigns/getCampaignSettings.md).  {% endnote %}  Возвращает регион, в котором находится магазин. |**⚙️ Лимит:** 5 000 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
getCampaignRegion
  :: CampaignId -- ^ "campaignId" -  Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  -> ПартнерскийAPIМаркетаRequest GetCampaignRegion MimeNoContent GetCampaignRegionResponse MimeJSON
getCampaignRegion (CampaignId campaignId) =
  _mkRequest "GET" ["/campaigns/",toPath campaignId,"/region"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)

{-# DEPRECATED getCampaignRegion "" #-}

data GetCampaignRegion  
-- | @application/json@
instance Produces GetCampaignRegion MimeJSON


-- *** getCampaignSettings

-- | @GET \/campaigns\/{campaignId}\/settings@
-- 
-- Настройки магазина
-- 
-- Возвращает информацию о настройках магазина, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
getCampaignSettings
  :: CampaignId -- ^ "campaignId" -  Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  -> ПартнерскийAPIМаркетаRequest GetCampaignSettings MimeNoContent GetCampaignSettingsResponse MimeJSON
getCampaignSettings (CampaignId campaignId) =
  _mkRequest "GET" ["/campaigns/",toPath campaignId,"/settings"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)

data GetCampaignSettings  
-- | @application/json@
instance Produces GetCampaignSettings MimeJSON


-- *** getCampaigns

-- | @GET \/campaigns@
-- 
-- Список магазинов пользователя
-- 
-- Возвращает список магазинов, к которым имеет доступ пользователь — владелец авторизационного токена, использованного в запросе. Для агентских пользователей список состоит из подагентских магазинов. |**⚙️ Лимит:** 1000 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
getCampaigns
  :: ПартнерскийAPIМаркетаRequest GetCampaigns MimeNoContent GetCampaignsResponse MimeJSON
getCampaigns =
  _mkRequest "GET" ["/campaigns"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)

data GetCampaigns  

-- | /Optional Param/ "page" - Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
instance HasOptionalParam GetCampaigns Page where
  applyOptionalParam req (Page xs) =
    req `addQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "pageSize" - Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
instance HasOptionalParam GetCampaigns PageSize where
  applyOptionalParam req (PageSize xs) =
    req `addQuery` toQuery ("pageSize", Just xs)
-- | @application/json@
instance Produces GetCampaigns MimeJSON


-- *** getCampaignsByLogin

-- | @GET \/campaigns\/by_login\/{login}@
-- 
-- Магазины, доступные логину
-- 
-- Возвращает список магазинов, к которым у пользователя с указанным логином есть доступ. |**⚙️ Лимит:** 100 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
getCampaignsByLogin
  :: Login -- ^ "login" -  Логин пользователя.
  -> ПартнерскийAPIМаркетаRequest GetCampaignsByLogin MimeNoContent GetCampaignsResponse MimeJSON
getCampaignsByLogin (Login login) =
  _mkRequest "GET" ["/campaigns/by_login/",toPath login]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)

data GetCampaignsByLogin  

-- | /Optional Param/ "page" - Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
instance HasOptionalParam GetCampaignsByLogin Page where
  applyOptionalParam req (Page xs) =
    req `addQuery` toQuery ("page", Just xs)

-- | /Optional Param/ "pageSize" - Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
instance HasOptionalParam GetCampaignsByLogin PageSize where
  applyOptionalParam req (PageSize xs) =
    req `addQuery` toQuery ("pageSize", Just xs)
-- | @application/json@
instance Produces GetCampaignsByLogin MimeJSON

