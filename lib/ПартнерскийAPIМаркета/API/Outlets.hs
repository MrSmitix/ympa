{-
   Партнерский API Маркета

   API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

   OpenAPI Version: 3.0.3
   Партнерский API Маркета API version: LATEST
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : ПартнерскийAPIМаркета.API.Outlets
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module ПартнерскийAPIМаркета.API.Outlets where

import ПартнерскийAPIМаркета.Core
import ПартнерскийAPIМаркета.MimeTypes
import ПартнерскийAPIМаркета.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Outlets

-- *** createOutlet

-- | @POST \/campaigns\/{campaignId}\/outlets@
-- 
-- Создание точки продаж
-- 
-- Создает точку продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
createOutlet
  :: (Consumes CreateOutlet MimeJSON, MimeRender MimeJSON ChangeOutletRequest)
  => ChangeOutletRequest -- ^ "changeOutletRequest"
  -> CampaignId -- ^ "campaignId" -  Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  -> ПартнерскийAPIМаркетаRequest CreateOutlet MimeJSON CreateOutletResponse MimeJSON
createOutlet changeOutletRequest (CampaignId campaignId) =
  _mkRequest "POST" ["/campaigns/",toPath campaignId,"/outlets"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` changeOutletRequest

data CreateOutlet 
instance HasBodyParam CreateOutlet ChangeOutletRequest 

-- | @application/json@
instance Consumes CreateOutlet MimeJSON

-- | @application/json@
instance Produces CreateOutlet MimeJSON


-- *** deleteOutlet

-- | @DELETE \/campaigns\/{campaignId}\/outlets\/{outletId}@
-- 
-- Удаление точки продаж
-- 
-- Удаляет точку продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
deleteOutlet
  :: CampaignId -- ^ "campaignId" -  Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  -> OutletId -- ^ "outletId" -  Идентификатор точки продаж.
  -> ПартнерскийAPIМаркетаRequest DeleteOutlet MimeNoContent EmptyApiResponse MimeJSON
deleteOutlet (CampaignId campaignId) (OutletId outletId) =
  _mkRequest "DELETE" ["/campaigns/",toPath campaignId,"/outlets/",toPath outletId]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)

data DeleteOutlet  
-- | @application/json@
instance Produces DeleteOutlet MimeJSON


-- *** getOutlet

-- | @GET \/campaigns\/{campaignId}\/outlets\/{outletId}@
-- 
-- Информация об одной точке продаж
-- 
-- Возвращает информацию о точках продаж магазина.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
getOutlet
  :: CampaignId -- ^ "campaignId" -  Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  -> OutletId -- ^ "outletId" -  Идентификатор точки продаж.
  -> ПартнерскийAPIМаркетаRequest GetOutlet MimeNoContent GetOutletResponse MimeJSON
getOutlet (CampaignId campaignId) (OutletId outletId) =
  _mkRequest "GET" ["/campaigns/",toPath campaignId,"/outlets/",toPath outletId]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)

data GetOutlet  
-- | @application/json@
instance Produces GetOutlet MimeJSON


-- *** getOutlets

-- | @GET \/campaigns\/{campaignId}\/outlets@
-- 
-- Информация о нескольких точках продаж
-- 
-- Возвращает список точек продаж магазина.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
getOutlets
  :: CampaignId -- ^ "campaignId" -  Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  -> ПартнерскийAPIМаркетаRequest GetOutlets MimeNoContent GetOutletsResponse MimeJSON
getOutlets (CampaignId campaignId) =
  _mkRequest "GET" ["/campaigns/",toPath campaignId,"/outlets"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)

data GetOutlets  

-- | /Optional Param/ "page_token" - Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
instance HasOptionalParam GetOutlets PageToken where
  applyOptionalParam req (PageToken xs) =
    req `addQuery` toQuery ("page_token", Just xs)

-- | /Optional Param/ "region_id" - Идентификатор региона. Если задать идентификатор родительского региона любого уровня, в выходных данных будут отображены точки продаж всех дочерних регионов. Идентификатор региона можно получить c помощью метода [GET regions](../../reference/regions/searchRegionsByName.md). 
instance HasOptionalParam GetOutlets RegionId where
  applyOptionalParam req (RegionId xs) =
    req `addQuery` toQuery ("region_id", Just xs)

-- | /Optional Param/ "shop_outlet_code" - Идентификатор точки продаж, присвоенный магазином.
instance HasOptionalParam GetOutlets ShopOutletCode where
  applyOptionalParam req (ShopOutletCode xs) =
    req `addQuery` toQuery ("shop_outlet_code", Just xs)

-- | /Optional Param/ "regionId" - {% note warning \"\" %}  Этот параметр устарел. Для указания региона используйте `region_id`.  {% endnote %} 
instance HasOptionalParam GetOutlets RegionId2 where
  applyOptionalParam req (RegionId2 xs) =
    req `addQuery` toQuery ("regionId", Just xs)
-- | @application/json@
instance Produces GetOutlets MimeJSON


-- *** updateOutlet

-- | @PUT \/campaigns\/{campaignId}\/outlets\/{outletId}@
-- 
-- Изменение информации о точке продаж
-- 
-- Изменяет информацию о точке продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| 
-- 
-- AuthMethod: 'AuthOAuthOAuth'
-- 
updateOutlet
  :: (Consumes UpdateOutlet MimeJSON, MimeRender MimeJSON ChangeOutletRequest)
  => ChangeOutletRequest -- ^ "changeOutletRequest"
  -> CampaignId -- ^ "campaignId" -  Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  -> OutletId -- ^ "outletId" -  Идентификатор точки продаж.
  -> ПартнерскийAPIМаркетаRequest UpdateOutlet MimeJSON EmptyApiResponse MimeJSON
updateOutlet changeOutletRequest (CampaignId campaignId) (OutletId outletId) =
  _mkRequest "PUT" ["/campaigns/",toPath campaignId,"/outlets/",toPath outletId]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthOAuthOAuth)
    `setBodyParam` changeOutletRequest

data UpdateOutlet 
instance HasBodyParam UpdateOutlet ChangeOutletRequest 

-- | @application/json@
instance Consumes UpdateOutlet MimeJSON

-- | @application/json@
instance Produces UpdateOutlet MimeJSON

