{-# LANGUAGE DataKinds                  #-}
{-# LANGUAGE DeriveDataTypeable         #-}
{-# LANGUAGE DeriveGeneric              #-}
{-# LANGUAGE DeriveTraversable          #-}
{-# LANGUAGE FlexibleContexts           #-}
{-# LANGUAGE FlexibleInstances          #-}
{-# LANGUAGE GeneralizedNewtypeDeriving #-}
{-# LANGUAGE OverloadedStrings          #-}
{-# LANGUAGE RecordWildCards            #-}
{-# LANGUAGE TypeFamilies               #-}
{-# LANGUAGE TypeOperators              #-}
{-# LANGUAGE ViewPatterns               #-}
{-# OPTIONS_GHC
-fno-warn-unused-binds -fno-warn-unused-imports -freduction-depth=328 #-}

module ПартнерскийAPIМаркета.API
  ( -- * Client and Server
    Config(..)
  , ПартнерскийAPIМаркетаBackend(..)
  , createПартнерскийAPIМаркетаClient
  , runПартнерскийAPIМаркетаServer
  , runПартнерскийAPIМаркетаMiddlewareServer
  , runПартнерскийAPIМаркетаClient
  , runПартнерскийAPIМаркетаClientWithManager
  , callПартнерскийAPIМаркета
  , ПартнерскийAPIМаркетаClient
  , ПартнерскийAPIМаркетаClientError(..)
  -- ** Servant
  , ПартнерскийAPIМаркетаAPI
  -- ** Plain WAI Application
  , serverWaiApplicationПартнерскийAPIМаркета
  -- ** Authentication
  , ПартнерскийAPIМаркетаAuth(..)
  , clientAuth
  , Protected
  ) where

import           ПартнерскийAPIМаркета.Types

import           Control.Monad.Catch                (Exception, MonadThrow, throwM)
import           Control.Monad.Except               (ExceptT, runExceptT)
import           Control.Monad.IO.Class
import           Control.Monad.Trans.Reader         (ReaderT (..))
import           Data.Aeson                         (Value)
import qualified Data.Aeson                         as Aeson
import qualified Data.ByteString.Lazy               as BSL
import           Data.Coerce                        (coerce)
import           Data.Data                          (Data)
import           Data.Function                      ((&))
import qualified Data.Map                           as Map
import           Data.Monoid                        ((<>))
import           Data.Proxy                         (Proxy (..))
import           Data.Set                           (Set)
import           Data.Text                          (Text)
import qualified Data.Text                          as T
import qualified Data.Text.Encoding                 as T
import           Data.Time
import           Data.UUID                          (UUID)
import           GHC.Exts                           (IsString (..))
import           GHC.Generics                       (Generic)
import           Network.HTTP.Client                (Manager, newManager)
import           Network.HTTP.Client.TLS            (tlsManagerSettings)
import           Network.HTTP.Types.Method          (methodOptions)
import           Network.Wai                        (Middleware, Request, requestHeaders)
import qualified Network.Wai.Handler.Warp           as Warp
import           Servant                            (ServerError, serveWithContextT, throwError)
import           Servant.API                        hiding (addHeader)
import           Servant.API.Verbs                  (StdMethod (..), Verb)
import           Servant.API.Experimental.Auth      (AuthProtect)
import           Servant.Client                     (ClientEnv, Scheme (Http), ClientError, client,
                                                     mkClientEnv, parseBaseUrl)
import           Servant.Client.Core                (baseUrlPort, baseUrlHost, AuthClientData, AuthenticatedRequest, addHeader, mkAuthenticatedRequest)
import           Servant.Client.Internal.HttpClient (ClientM (..))
import           Servant.Server                     (Handler (..), Application, Context ((:.), EmptyContext))
import           Servant.Server.Experimental.Auth   (AuthHandler, AuthServerData, mkAuthHandler)
import           Servant.Server.StaticFiles         (serveDirectoryFileServer)
import           Web.FormUrlEncoded
import           Web.HttpApiData



data FormSendFileToChat = FormSendFileToChat
  { sendFileToChatFile :: FilePath
  } deriving (Show, Eq, Generic, Data)

instance FromForm FormSendFileToChat
instance ToForm FormSendFileToChat

data FormSendFileToChat = FormSendFileToChat
  { sendFileToChatFile :: FilePath
  } deriving (Show, Eq, Generic, Data)

instance FromForm FormSendFileToChat
instance ToForm FormSendFileToChat

data FormSendFileToChat = FormSendFileToChat
  { sendFileToChatFile :: FilePath
  } deriving (Show, Eq, Generic, Data)

instance FromForm FormSendFileToChat
instance ToForm FormSendFileToChat

data FormSendFileToChat = FormSendFileToChat
  { sendFileToChatFile :: FilePath
  } deriving (Show, Eq, Generic, Data)

instance FromForm FormSendFileToChat
instance ToForm FormSendFileToChat

data FormSendFileToChat = FormSendFileToChat
  { sendFileToChatFile :: FilePath
  } deriving (Show, Eq, Generic, Data)

instance FromForm FormSendFileToChat
instance ToForm FormSendFileToChat


-- | List of elements parsed from a query.
newtype QueryList (p :: CollectionFormat) a = QueryList
  { fromQueryList :: [a]
  } deriving (Functor, Applicative, Monad, Foldable, Traversable)

-- | Formats in which a list can be encoded into a HTTP path.
data CollectionFormat
  = CommaSeparated -- ^ CSV format for multiple parameters.
  | SpaceSeparated -- ^ Also called "SSV"
  | TabSeparated -- ^ Also called "TSV"
  | PipeSeparated -- ^ `value1|value2|value2`
  | MultiParamArray -- ^ Using multiple GET parameters, e.g. `foo=bar&foo=baz`. Only for GET params.

instance FromHttpApiData a => FromHttpApiData (QueryList 'CommaSeparated a) where
  parseQueryParam = parseSeparatedQueryList ','

instance FromHttpApiData a => FromHttpApiData (QueryList 'TabSeparated a) where
  parseQueryParam = parseSeparatedQueryList '\t'

instance FromHttpApiData a => FromHttpApiData (QueryList 'SpaceSeparated a) where
  parseQueryParam = parseSeparatedQueryList ' '

instance FromHttpApiData a => FromHttpApiData (QueryList 'PipeSeparated a) where
  parseQueryParam = parseSeparatedQueryList '|'

instance FromHttpApiData a => FromHttpApiData (QueryList 'MultiParamArray a) where
  parseQueryParam = error "unimplemented FromHttpApiData for MultiParamArray collection format"

parseSeparatedQueryList :: FromHttpApiData a => Char -> Text -> Either Text (QueryList p a)
parseSeparatedQueryList char = fmap QueryList . mapM parseQueryParam . T.split (== char)

instance ToHttpApiData a => ToHttpApiData (QueryList 'CommaSeparated a) where
  toQueryParam = formatSeparatedQueryList ','

instance ToHttpApiData a => ToHttpApiData (QueryList 'TabSeparated a) where
  toQueryParam = formatSeparatedQueryList '\t'

instance ToHttpApiData a => ToHttpApiData (QueryList 'SpaceSeparated a) where
  toQueryParam = formatSeparatedQueryList ' '

instance ToHttpApiData a => ToHttpApiData (QueryList 'PipeSeparated a) where
  toQueryParam = formatSeparatedQueryList '|'

instance ToHttpApiData a => ToHttpApiData (QueryList 'MultiParamArray a) where
  toQueryParam = error "unimplemented ToHttpApiData for MultiParamArray collection format"

formatSeparatedQueryList :: ToHttpApiData a => Char ->  QueryList p a -> Text
formatSeparatedQueryList char = T.intercalate (T.singleton char) . map toQueryParam . fromQueryList

newtype JSONQueryParam a = JSONQueryParam
  { fromJsonQueryParam :: a
  } deriving (Functor, Foldable, Traversable)

instance Aeson.ToJSON a => ToHttpApiData (JSONQueryParam a) where
  toQueryParam = T.decodeUtf8 . BSL.toStrict . Aeson.encode . fromJsonQueryParam

instance Aeson.FromJSON a => FromHttpApiData (JSONQueryParam a) where
  parseQueryParam = either (Left . T.pack) (Right . JSONQueryParam) . Aeson.eitherDecodeStrict . T.encodeUtf8


-- | Servant type-level API, generated from the OpenAPI spec for ПартнерскийAPIМаркета.
type ПартнерскийAPIМаркетаAPI
    =    Protected :> "businesses" :> Capture "businessId" Integer :> "bids" :> "info" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetBidsInfoRequest :> Verb 'POST 200 '[JSON] GetBidsInfoResponse -- 'getBidsInfoForBusiness' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "bids" :> "recommendations" :> ReqBody '[JSON] GetBidsRecommendationsRequest :> Verb 'POST 200 '[JSON] GetBidsRecommendationsResponse -- 'getBidsRecommendations' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "bids" :> ReqBody '[JSON] PutSkuBidsRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'putBidsForBusiness' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "bids" :> ReqBody '[JSON] PutSkuBidsRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'putBidsForCampaign' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "archive" :> ReqBody '[JSON] AddOffersToArchiveRequest :> Verb 'POST 200 '[JSON] AddOffersToArchiveResponse -- 'addOffersToArchive' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "delete" :> ReqBody '[JSON] DeleteOffersRequest :> Verb 'POST 200 '[JSON] DeleteOffersResponse -- 'deleteOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "unarchive" :> ReqBody '[JSON] DeleteOffersFromArchiveRequest :> Verb 'POST 200 '[JSON] DeleteOffersFromArchiveResponse -- 'deleteOffersFromArchive' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOfferMappingsRequest :> Verb 'POST 200 '[JSON] GetOfferMappingsResponse -- 'getOfferMappings' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "suggestions" :> ReqBody '[JSON] GetSuggestedOfferMappingsRequest :> Verb 'POST 200 '[JSON] GetSuggestedOfferMappingsResponse -- 'getSuggestedOfferMappings' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "update" :> ReqBody '[JSON] UpdateOfferMappingsRequest :> Verb 'POST 200 '[JSON] UpdateOfferMappingsResponse -- 'updateOfferMappings' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "settings" :> Verb 'POST 200 '[JSON] GetBusinessSettingsResponse -- 'getBusinessSettings' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> Verb 'GET 200 '[JSON] GetCampaignResponse -- 'getCampaign' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "logins" :> Verb 'GET 200 '[JSON] GetCampaignLoginsResponse -- 'getCampaignLogins' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "region" :> Verb 'GET 200 '[JSON] GetCampaignRegionResponse -- 'getCampaignRegion' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "settings" :> Verb 'GET 200 '[JSON] GetCampaignSettingsResponse -- 'getCampaignSettings' route
    :<|> Protected :> "campaigns" :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetCampaignsResponse -- 'getCampaigns' route
    :<|> Protected :> "campaigns" :> "by_login" :> Capture "login" Text :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetCampaignsResponse -- 'getCampaignsByLogin' route
    :<|> Protected :> "categories" :> "max-sale-quantum" :> ReqBody '[JSON] GetCategoriesMaxSaleQuantumRequest :> Verb 'POST 200 '[JSON] GetCategoriesMaxSaleQuantumResponse -- 'getCategoriesMaxSaleQuantum' route
    :<|> Protected :> "categories" :> "tree" :> ReqBody '[JSON] GetCategoriesRequest :> Verb 'POST 200 '[JSON] GetCategoriesResponse -- 'getCategoriesTree' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "new" :> ReqBody '[JSON] CreateChatRequest :> Verb 'POST 200 '[JSON] CreateChatResponse -- 'createChat' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "history" :> QueryParam "chatId" Integer :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetChatHistoryRequest :> Verb 'POST 200 '[JSON] GetChatHistoryResponse -- 'getChatHistory' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetChatsRequest :> Verb 'POST 200 '[JSON] GetChatsResponse -- 'getChats' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "file" :> "send" :> QueryParam "chatId" Integer :> ReqBody '[FormUrlEncoded] FormSendFileToChat :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'sendFileToChat' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "message" :> QueryParam "chatId" Integer :> ReqBody '[JSON] SendMessageToChatRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'sendMessageToChat' route
    :<|> Protected :> "category" :> Capture "categoryId" Integer :> "parameters" :> Verb 'POST 200 '[JSON] GetCategoryContentParametersResponse -- 'getCategoryContentParameters' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-cards" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOfferCardsContentStatusRequest :> Verb 'POST 200 '[JSON] GetOfferCardsContentStatusResponse -- 'getOfferCardsContentStatus' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-cards" :> "update" :> ReqBody '[JSON] UpdateOfferContentRequest :> Verb 'POST 200 '[JSON] UpdateOfferContentResponse -- 'updateOfferContent' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "cancellation" :> "accept" :> ReqBody '[JSON] AcceptOrderCancellationRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'acceptOrderCancellation' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "hidden-offers" :> ReqBody '[JSON] AddHiddenOffersRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'addHiddenOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "archive" :> ReqBody '[JSON] AddOffersToArchiveRequest :> Verb 'POST 200 '[JSON] AddOffersToArchiveResponse -- 'addOffersToArchive' route
    :<|> Protected :> "tariffs" :> "calculate" :> ReqBody '[JSON] CalculateTariffsRequest :> Verb 'POST 200 '[JSON] CalculateTariffsResponse -- 'calculateTariffs' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "price-quarantine" :> "confirm" :> ReqBody '[JSON] ConfirmPricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'confirmBusinessPrices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "price-quarantine" :> "confirm" :> ReqBody '[JSON] ConfirmPricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'confirmCampaignPrices' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "new" :> ReqBody '[JSON] CreateChatRequest :> Verb 'POST 200 '[JSON] CreateChatResponse -- 'createChat' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "outlets" :> ReqBody '[JSON] ChangeOutletRequest :> Verb 'POST 200 '[JSON] CreateOutletResponse -- 'createOutlet' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "delete" :> ReqBody '[JSON] DeleteCampaignOffersRequest :> Verb 'POST 200 '[JSON] DeleteCampaignOffersResponse -- 'deleteCampaignOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "comments" :> "delete" :> ReqBody '[JSON] DeleteGoodsFeedbackCommentRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'deleteGoodsFeedbackComment' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "hidden-offers" :> "delete" :> ReqBody '[JSON] DeleteHiddenOffersRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'deleteHiddenOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "delete" :> ReqBody '[JSON] DeleteOffersRequest :> Verb 'POST 200 '[JSON] DeleteOffersResponse -- 'deleteOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "unarchive" :> ReqBody '[JSON] DeleteOffersFromArchiveRequest :> Verb 'POST 200 '[JSON] DeleteOffersFromArchiveResponse -- 'deleteOffersFromArchive' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "outlets" :> Capture "outletId" Integer :> Verb 'DELETE 200 '[JSON] EmptyApiResponse -- 'deleteOutlet' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "outlets" :> "licenses" :> QueryParam "ids" (QueryList 'CommaSeparated (Integer)) :> Verb 'DELETE 200 '[JSON] EmptyApiResponse -- 'deleteOutletLicenses' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> "offers" :> "delete" :> ReqBody '[JSON] DeletePromoOffersRequest :> Verb 'POST 200 '[JSON] DeletePromoOffersResponse -- 'deletePromoOffers' route
    :<|> Protected :> "reports" :> "boost-consolidated" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateBoostConsolidatedRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateBoostConsolidatedReport' route
    :<|> Protected :> "reports" :> "competitors-position" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateCompetitorsPositionReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateCompetitorsPositionReport' route
    :<|> Protected :> "reports" :> "goods-feedback" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateGoodsFeedbackRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateGoodsFeedbackReport' route
    :<|> Protected :> "reports" :> "documents" :> "labels" :> "generate" :> QueryParam "format" PageFormatType :> ReqBody '[JSON] GenerateMassOrderLabelsRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateMassOrderLabelsReport' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "shipments" :> Capture "shipmentId" Integer :> "boxes" :> Capture "boxId" Integer :> "label" :> QueryParam "format" PageFormatType :> Verb 'GET 200 '[JSON] FilePath -- 'generateOrderLabel' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "labels" :> QueryParam "format" PageFormatType :> Verb 'GET 200 '[JSON] FilePath -- 'generateOrderLabels' route
    :<|> Protected :> "reports" :> "prices" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GeneratePricesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generatePricesReport' route
    :<|> Protected :> "reports" :> "shelf-statistics" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateShelfsStatisticsRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateShelfsStatisticsReport' route
    :<|> Protected :> "reports" :> "shows-sales" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateShowsSalesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateShowsSalesReport' route
    :<|> Protected :> "reports" :> "stocks-on-warehouses" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateStocksOnWarehousesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateStocksOnWarehousesReport' route
    :<|> Protected :> "reports" :> "united-marketplace-services" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateUnitedMarketplaceServicesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateUnitedMarketplaceServicesReport' route
    :<|> Protected :> "reports" :> "united-netting" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateUnitedNettingReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateUnitedNettingReport' route
    :<|> Protected :> "reports" :> "united-orders" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateUnitedOrdersRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateUnitedOrdersReport' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "all" :> QueryParam "feedId" Integer :> QueryParam "chunk" Int :> Verb 'GET 200 '[JSON] GetAllOffersResponse -- 'getAllOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "bids" :> "info" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetBidsInfoRequest :> Verb 'POST 200 '[JSON] GetBidsInfoResponse -- 'getBidsInfoForBusiness' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "bids" :> "recommendations" :> ReqBody '[JSON] GetBidsRecommendationsRequest :> Verb 'POST 200 '[JSON] GetBidsRecommendationsResponse -- 'getBidsRecommendations' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "price-quarantine" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetQuarantineOffersRequest :> Verb 'POST 200 '[JSON] GetQuarantineOffersResponse -- 'getBusinessQuarantineOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "settings" :> Verb 'POST 200 '[JSON] GetBusinessSettingsResponse -- 'getBusinessSettings' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> Verb 'GET 200 '[JSON] GetCampaignResponse -- 'getCampaign' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "logins" :> Verb 'GET 200 '[JSON] GetCampaignLoginsResponse -- 'getCampaignLogins' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetCampaignOffersRequest :> Verb 'POST 200 '[JSON] GetCampaignOffersResponse -- 'getCampaignOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "price-quarantine" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetQuarantineOffersRequest :> Verb 'POST 200 '[JSON] GetQuarantineOffersResponse -- 'getCampaignQuarantineOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "region" :> Verb 'GET 200 '[JSON] GetCampaignRegionResponse -- 'getCampaignRegion' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "settings" :> Verb 'GET 200 '[JSON] GetCampaignSettingsResponse -- 'getCampaignSettings' route
    :<|> Protected :> "campaigns" :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetCampaignsResponse -- 'getCampaigns' route
    :<|> Protected :> "campaigns" :> "by_login" :> Capture "login" Text :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetCampaignsResponse -- 'getCampaignsByLogin' route
    :<|> Protected :> "categories" :> "max-sale-quantum" :> ReqBody '[JSON] GetCategoriesMaxSaleQuantumRequest :> Verb 'POST 200 '[JSON] GetCategoriesMaxSaleQuantumResponse -- 'getCategoriesMaxSaleQuantum' route
    :<|> Protected :> "categories" :> "tree" :> ReqBody '[JSON] GetCategoriesRequest :> Verb 'POST 200 '[JSON] GetCategoriesResponse -- 'getCategoriesTree' route
    :<|> Protected :> "category" :> Capture "categoryId" Integer :> "parameters" :> Verb 'POST 200 '[JSON] GetCategoryContentParametersResponse -- 'getCategoryContentParameters' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "history" :> QueryParam "chatId" Integer :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetChatHistoryRequest :> Verb 'POST 200 '[JSON] GetChatHistoryResponse -- 'getChatHistory' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetChatsRequest :> Verb 'POST 200 '[JSON] GetChatsResponse -- 'getChats' route
    :<|> Protected :> "delivery" :> "services" :> Verb 'GET 200 '[JSON] GetDeliveryServicesResponse -- 'getDeliveryServices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> Verb 'GET 200 '[JSON] GetFeedResponse -- 'getFeed' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> "index-logs" :> QueryParam "limit" Int :> QueryParam "published_time_from" UTCTime :> QueryParam "published_time_to" UTCTime :> QueryParam "status" FeedIndexLogsStatusType :> Verb 'GET 200 '[JSON] GetFeedIndexLogsResponse -- 'getFeedIndexLogs' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feedback" :> "updates" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "from_date" Day :> Verb 'GET 200 '[JSON] GetFeedbackListResponse -- 'getFeedbackAndCommentUpdates' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Verb 'GET 200 '[JSON] GetFeedsResponse -- 'getFeeds' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "comments" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetGoodsFeedbackCommentsRequest :> Verb 'POST 200 '[JSON] GetGoodsFeedbackCommentsResponse -- 'getGoodsFeedbackComments' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetGoodsFeedbackRequest :> Verb 'POST 200 '[JSON] GetGoodsFeedbackResponse -- 'getGoodsFeedbacks' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "stats" :> "skus" :> ReqBody '[JSON] GetGoodsStatsRequest :> Verb 'POST 200 '[JSON] GetGoodsStatsResponse -- 'getGoodsStats' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "hidden-offers" :> QueryParam "offer_id" (QueryList 'CommaSeparated (Text)) :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "offset" Int :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetHiddenOffersResponse -- 'getHiddenOffers' route
    :<|> Protected :> "models" :> Capture "modelId" Integer :> QueryParam "regionId" Integer :> QueryParam "currency" CurrencyType :> Verb 'GET 200 '[JSON] GetModelsResponse -- 'getModel' route
    :<|> Protected :> "models" :> Capture "modelId" Integer :> "offers" :> QueryParam "regionId" Integer :> QueryParam "currency" CurrencyType :> QueryParam "orderByPrice" SortOrderType :> QueryParam "count" Int :> QueryParam "page" Int :> Verb 'GET 200 '[JSON] GetModelsOffersResponse -- 'getModelOffers' route
    :<|> Protected :> "models" :> QueryParam "regionId" Integer :> QueryParam "currency" CurrencyType :> ReqBody '[JSON] GetModelsRequest :> Verb 'POST 200 '[JSON] GetModelsResponse -- 'getModels' route
    :<|> Protected :> "models" :> "offers" :> QueryParam "regionId" Integer :> QueryParam "currency" CurrencyType :> QueryParam "orderByPrice" SortOrderType :> ReqBody '[JSON] GetModelsRequest :> Verb 'POST 200 '[JSON] GetModelsOffersResponse -- 'getModelsOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-cards" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOfferCardsContentStatusRequest :> Verb 'POST 200 '[JSON] GetOfferCardsContentStatusResponse -- 'getOfferCardsContentStatus' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-mapping-entries" :> QueryParam "offer_id" (QueryList 'CommaSeparated (Text)) :> QueryParam "shop_sku" (QueryList 'CommaSeparated (Text)) :> QueryParam "mapping_kind" OfferMappingKindType :> QueryParam "status" (QueryList 'CommaSeparated (OfferProcessingStatusType)) :> QueryParam "availability" (QueryList 'CommaSeparated (OfferAvailabilityStatusType)) :> QueryParam "category_id" (QueryList 'CommaSeparated (Int)) :> QueryParam "vendor" (QueryList 'CommaSeparated (Text)) :> QueryParam "page_token" Text :> QueryParam "limit" Int :> Verb 'GET 200 '[JSON] GetOfferMappingEntriesResponse -- 'getOfferMappingEntries' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOfferMappingsRequest :> Verb 'POST 200 '[JSON] GetOfferMappingsResponse -- 'getOfferMappings' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offers" :> "recommendations" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOfferRecommendationsRequest :> Verb 'POST 200 '[JSON] GetOfferRecommendationsResponse -- 'getOfferRecommendations' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> QueryParam "query" Text :> QueryParam "feedId" Integer :> QueryParam "shopCategoryId" Text :> QueryParam "currency" CurrencyType :> QueryParam "matched" Bool :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetOffersResponse -- 'getOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> Verb 'GET 200 '[JSON] GetOrderResponse -- 'getOrder' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "business-buyer" :> Verb 'POST 200 '[JSON] GetBusinessBuyerInfoResponse -- 'getOrderBusinessBuyerInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "documents" :> Verb 'POST 200 '[JSON] GetBusinessDocumentsInfoResponse -- 'getOrderBusinessDocumentsInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "buyer" :> Verb 'GET 200 '[JSON] GetOrderBuyerInfoResponse -- 'getOrderBuyerInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "labels" :> "data" :> Verb 'GET 200 '[JSON] GetOrderLabelsDataResponse -- 'getOrderLabelsData' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> QueryParam "orderIds" (QueryList 'CommaSeparated (Integer)) :> QueryParam "status" (QueryList 'CommaSeparated (OrderStatusType)) :> QueryParam "substatus" (QueryList 'CommaSeparated (OrderSubstatusType)) :> QueryParam "fromDate" Day :> QueryParam "toDate" Day :> QueryParam "supplierShipmentDateFrom" Day :> QueryParam "supplierShipmentDateTo" Day :> QueryParam "updatedAtFrom" UTCTime :> QueryParam "updatedAtTo" UTCTime :> QueryParam "dispatchType" OrderDeliveryDispatchType :> QueryParam "fake" Bool :> QueryParam "hasCis" Bool :> QueryParam "onlyWaitingForCancellationApprove" Bool :> QueryParam "onlyEstimatedDelivery" Bool :> QueryParam "buyerType" OrderBuyerType :> QueryParam "page" Int :> QueryParam "pageSize" Int :> QueryParam "page_token" Text :> QueryParam "limit" Int :> Verb 'GET 200 '[JSON] GetOrdersResponse -- 'getOrders' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "stats" :> "orders" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOrdersStatsRequest :> Verb 'POST 200 '[JSON] GetOrdersStatsResponse -- 'getOrdersStats' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "outlets" :> Capture "outletId" Integer :> Verb 'GET 200 '[JSON] GetOutletResponse -- 'getOutlet' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "outlets" :> "licenses" :> QueryParam "outletIds" (QueryList 'CommaSeparated (Integer)) :> QueryParam "ids" (QueryList 'CommaSeparated (Integer)) :> Verb 'GET 200 '[JSON] GetOutletLicensesResponse -- 'getOutletLicenses' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "outlets" :> QueryParam "page_token" Text :> QueryParam "region_id" Integer :> QueryParam "shop_outlet_code" Text :> QueryParam "regionId" Integer :> Verb 'GET 200 '[JSON] GetOutletsResponse -- 'getOutlets' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "archived" Bool :> Verb 'GET 200 '[JSON] GetPricesResponse -- 'getPrices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetPricesByOfferIdsRequest :> Verb 'POST 200 '[JSON] GetPricesByOfferIdsResponse -- 'getPricesByOfferIds' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> "offers" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetPromoOffersRequest :> Verb 'POST 200 '[JSON] GetPromoOffersResponse -- 'getPromoOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> ReqBody '[JSON] GetPromosRequest :> Verb 'POST 200 '[JSON] GetPromosResponse -- 'getPromos' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "ratings" :> "quality" :> "details" :> Verb 'POST 200 '[JSON] GetQualityRatingDetailsResponse -- 'getQualityRatingDetails' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "ratings" :> "quality" :> ReqBody '[JSON] GetQualityRatingRequest :> Verb 'POST 200 '[JSON] GetQualityRatingResponse -- 'getQualityRatings' route
    :<|> Protected :> "reports" :> "info" :> Capture "reportId" Text :> Verb 'GET 200 '[JSON] GetReportInfoResponse -- 'getReportInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "returns" :> Capture "returnId" Integer :> Verb 'GET 200 '[JSON] GetReturnResponse -- 'getReturn' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "returns" :> Capture "returnId" Integer :> "application" :> Verb 'GET 200 '[JSON] FilePath -- 'getReturnApplication' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "returns" :> Capture "returnId" Integer :> "decision" :> Capture "itemId" Integer :> "image" :> Capture "imageHash" Text :> Verb 'GET 200 '[JSON] FilePath -- 'getReturnPhoto' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "returns" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "orderIds" (QueryList 'CommaSeparated (Integer)) :> QueryParam "statuses" (QueryList 'CommaSeparated (RefundStatusType)) :> QueryParam "type" ReturnType :> QueryParam "fromDate" Day :> QueryParam "toDate" Day :> QueryParam "from_date" Day :> QueryParam "to_date" Day :> Verb 'GET 200 '[JSON] GetReturnsResponse -- 'getReturns' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "stocks" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetWarehouseStocksRequest :> Verb 'POST 200 '[JSON] GetWarehouseStocksResponse -- 'getStocks' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-mapping-entries" :> "suggestions" :> ReqBody '[JSON] GetSuggestedOfferMappingEntriesRequest :> Verb 'POST 200 '[JSON] GetSuggestedOfferMappingEntriesResponse -- 'getSuggestedOfferMappingEntries' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "suggestions" :> ReqBody '[JSON] GetSuggestedOfferMappingsRequest :> Verb 'POST 200 '[JSON] GetSuggestedOfferMappingsResponse -- 'getSuggestedOfferMappings' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> "suggestions" :> ReqBody '[JSON] SuggestPricesRequest :> Verb 'POST 200 '[JSON] SuggestPricesResponse -- 'getSuggestedPrices' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "warehouses" :> Verb 'GET 200 '[JSON] GetWarehousesResponse -- 'getWarehouses' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "deliverDigitalGoods" :> ReqBody '[JSON] ProvideOrderDigitalCodesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'provideOrderDigitalCodes' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "identifiers" :> ReqBody '[JSON] ProvideOrderItemIdentifiersRequest :> Verb 'PUT 200 '[JSON] ProvideOrderItemIdentifiersResponse -- 'provideOrderItemIdentifiers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "bids" :> ReqBody '[JSON] PutSkuBidsRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'putBidsForBusiness' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "bids" :> ReqBody '[JSON] PutSkuBidsRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'putBidsForCampaign' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> "refresh" :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'refreshFeed' route
    :<|> Protected :> "models" :> QueryParam "query" Text :> QueryParam "regionId" Integer :> QueryParam "currency" CurrencyType :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] SearchModelsResponse -- 'searchModels' route
    :<|> Protected :> "regions" :> Capture "regionId" Integer :> "children" :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetRegionWithChildrenResponse -- 'searchRegionChildren' route
    :<|> Protected :> "regions" :> Capture "regionId" Integer :> Verb 'GET 200 '[JSON] GetRegionsResponse -- 'searchRegionsById' route
    :<|> Protected :> "regions" :> QueryParam "name" Text :> QueryParam "page_token" Text :> QueryParam "limit" Int :> Verb 'GET 200 '[JSON] GetRegionsResponse -- 'searchRegionsByName' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "file" :> "send" :> QueryParam "chatId" Integer :> ReqBody '[FormUrlEncoded] FormSendFileToChat :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'sendFileToChat' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "message" :> QueryParam "chatId" Integer :> ReqBody '[JSON] SendMessageToChatRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'sendMessageToChat' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> "params" :> ReqBody '[JSON] SetFeedParamsRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'setFeedParams' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "boxes" :> ReqBody '[JSON] SetOrderBoxLayoutRequest :> Verb 'PUT 200 '[JSON] SetOrderBoxLayoutResponse -- 'setOrderBoxLayout' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "date" :> ReqBody '[JSON] SetOrderDeliveryDateRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'setOrderDeliveryDate' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "track" :> ReqBody '[JSON] SetOrderDeliveryTrackCodeRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'setOrderDeliveryTrackCode' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "shipments" :> Capture "shipmentId" Integer :> "boxes" :> ReqBody '[JSON] SetOrderShipmentBoxesRequest :> Verb 'PUT 200 '[JSON] SetOrderShipmentBoxesResponse -- 'setOrderShipmentBoxes' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "returns" :> Capture "returnId" Integer :> "decision" :> ReqBody '[JSON] SetReturnDecisionRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'setReturnDecision' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "skip-reaction" :> ReqBody '[JSON] SkipGoodsFeedbackReactionRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'skipGoodsFeedbacksReaction' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "returns" :> Capture "returnId" Integer :> "decision" :> "submit" :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'submitReturnDecision' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-prices" :> "updates" :> ReqBody '[JSON] UpdateBusinessPricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updateBusinessPrices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "update" :> ReqBody '[JSON] UpdateCampaignOffersRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updateCampaignOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "comments" :> "update" :> ReqBody '[JSON] UpdateGoodsFeedbackCommentRequest :> Verb 'POST 200 '[JSON] UpdateGoodsFeedbackCommentResponse -- 'updateGoodsFeedbackComment' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-cards" :> "update" :> ReqBody '[JSON] UpdateOfferContentRequest :> Verb 'POST 200 '[JSON] UpdateOfferContentResponse -- 'updateOfferContent' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-mapping-entries" :> "updates" :> ReqBody '[JSON] UpdateOfferMappingEntryRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updateOfferMappingEntries' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "update" :> ReqBody '[JSON] UpdateOfferMappingsRequest :> Verb 'POST 200 '[JSON] UpdateOfferMappingsResponse -- 'updateOfferMappings' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "items" :> ReqBody '[JSON] UpdateOrderItemRequest :> Verb 'PUT 200 '[JSON] NoContent -- 'updateOrderItems' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "status" :> ReqBody '[JSON] UpdateOrderStatusRequest :> Verb 'PUT 200 '[JSON] UpdateOrderStatusResponse -- 'updateOrderStatus' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> "status-update" :> ReqBody '[JSON] UpdateOrderStatusesRequest :> Verb 'POST 200 '[JSON] UpdateOrderStatusesResponse -- 'updateOrderStatuses' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "storage-limit" :> ReqBody '[JSON] UpdateOrderStorageLimitRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'updateOrderStorageLimit' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "outlets" :> Capture "outletId" Integer :> ReqBody '[JSON] ChangeOutletRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'updateOutlet' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "outlets" :> "licenses" :> ReqBody '[JSON] UpdateOutletLicenseRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updateOutletLicenses' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> "updates" :> ReqBody '[JSON] UpdatePricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updatePrices' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> "offers" :> "update" :> ReqBody '[JSON] UpdatePromoOffersRequest :> Verb 'POST 200 '[JSON] UpdatePromoOffersResponse -- 'updatePromoOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "stocks" :> ReqBody '[JSON] UpdateStocksRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'updateStocks' route
    :<|> Protected :> "delivery" :> "services" :> Verb 'GET 200 '[JSON] GetDeliveryServicesResponse -- 'getDeliveryServices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "hidden-offers" :> ReqBody '[JSON] AddHiddenOffersRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'addHiddenOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "archive" :> ReqBody '[JSON] AddOffersToArchiveRequest :> Verb 'POST 200 '[JSON] AddOffersToArchiveResponse -- 'addOffersToArchive' route
    :<|> Protected :> "tariffs" :> "calculate" :> ReqBody '[JSON] CalculateTariffsRequest :> Verb 'POST 200 '[JSON] CalculateTariffsResponse -- 'calculateTariffs' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "price-quarantine" :> "confirm" :> ReqBody '[JSON] ConfirmPricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'confirmBusinessPrices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "price-quarantine" :> "confirm" :> ReqBody '[JSON] ConfirmPricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'confirmCampaignPrices' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "new" :> ReqBody '[JSON] CreateChatRequest :> Verb 'POST 200 '[JSON] CreateChatResponse -- 'createChat' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "delete" :> ReqBody '[JSON] DeleteCampaignOffersRequest :> Verb 'POST 200 '[JSON] DeleteCampaignOffersResponse -- 'deleteCampaignOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "comments" :> "delete" :> ReqBody '[JSON] DeleteGoodsFeedbackCommentRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'deleteGoodsFeedbackComment' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "hidden-offers" :> "delete" :> ReqBody '[JSON] DeleteHiddenOffersRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'deleteHiddenOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "delete" :> ReqBody '[JSON] DeleteOffersRequest :> Verb 'POST 200 '[JSON] DeleteOffersResponse -- 'deleteOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "unarchive" :> ReqBody '[JSON] DeleteOffersFromArchiveRequest :> Verb 'POST 200 '[JSON] DeleteOffersFromArchiveResponse -- 'deleteOffersFromArchive' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> "offers" :> "delete" :> ReqBody '[JSON] DeletePromoOffersRequest :> Verb 'POST 200 '[JSON] DeletePromoOffersResponse -- 'deletePromoOffers' route
    :<|> Protected :> "reports" :> "boost-consolidated" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateBoostConsolidatedRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateBoostConsolidatedReport' route
    :<|> Protected :> "reports" :> "competitors-position" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateCompetitorsPositionReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateCompetitorsPositionReport' route
    :<|> Protected :> "reports" :> "goods-feedback" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateGoodsFeedbackRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateGoodsFeedbackReport' route
    :<|> Protected :> "reports" :> "goods-realization" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateGoodsRealizationReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateGoodsRealizationReport' route
    :<|> Protected :> "reports" :> "documents" :> "labels" :> "generate" :> QueryParam "format" PageFormatType :> ReqBody '[JSON] GenerateMassOrderLabelsRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateMassOrderLabelsReport' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "shipments" :> Capture "shipmentId" Integer :> "boxes" :> Capture "boxId" Integer :> "label" :> QueryParam "format" PageFormatType :> Verb 'GET 200 '[JSON] FilePath -- 'generateOrderLabel' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "labels" :> QueryParam "format" PageFormatType :> Verb 'GET 200 '[JSON] FilePath -- 'generateOrderLabels' route
    :<|> Protected :> "reports" :> "prices" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GeneratePricesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generatePricesReport' route
    :<|> Protected :> "reports" :> "shelf-statistics" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateShelfsStatisticsRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateShelfsStatisticsReport' route
    :<|> Protected :> "reports" :> "shows-sales" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateShowsSalesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateShowsSalesReport' route
    :<|> Protected :> "reports" :> "stocks-on-warehouses" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateStocksOnWarehousesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateStocksOnWarehousesReport' route
    :<|> Protected :> "reports" :> "united-marketplace-services" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateUnitedMarketplaceServicesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateUnitedMarketplaceServicesReport' route
    :<|> Protected :> "reports" :> "united-netting" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateUnitedNettingReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateUnitedNettingReport' route
    :<|> Protected :> "reports" :> "united-orders" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateUnitedOrdersRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateUnitedOrdersReport' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "all" :> QueryParam "feedId" Integer :> QueryParam "chunk" Int :> Verb 'GET 200 '[JSON] GetAllOffersResponse -- 'getAllOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "bids" :> "info" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetBidsInfoRequest :> Verb 'POST 200 '[JSON] GetBidsInfoResponse -- 'getBidsInfoForBusiness' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "bids" :> "recommendations" :> ReqBody '[JSON] GetBidsRecommendationsRequest :> Verb 'POST 200 '[JSON] GetBidsRecommendationsResponse -- 'getBidsRecommendations' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "price-quarantine" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetQuarantineOffersRequest :> Verb 'POST 200 '[JSON] GetQuarantineOffersResponse -- 'getBusinessQuarantineOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "settings" :> Verb 'POST 200 '[JSON] GetBusinessSettingsResponse -- 'getBusinessSettings' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> Verb 'GET 200 '[JSON] GetCampaignResponse -- 'getCampaign' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "logins" :> Verb 'GET 200 '[JSON] GetCampaignLoginsResponse -- 'getCampaignLogins' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetCampaignOffersRequest :> Verb 'POST 200 '[JSON] GetCampaignOffersResponse -- 'getCampaignOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "price-quarantine" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetQuarantineOffersRequest :> Verb 'POST 200 '[JSON] GetQuarantineOffersResponse -- 'getCampaignQuarantineOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "region" :> Verb 'GET 200 '[JSON] GetCampaignRegionResponse -- 'getCampaignRegion' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "settings" :> Verb 'GET 200 '[JSON] GetCampaignSettingsResponse -- 'getCampaignSettings' route
    :<|> Protected :> "campaigns" :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetCampaignsResponse -- 'getCampaigns' route
    :<|> Protected :> "campaigns" :> "by_login" :> Capture "login" Text :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetCampaignsResponse -- 'getCampaignsByLogin' route
    :<|> Protected :> "categories" :> "max-sale-quantum" :> ReqBody '[JSON] GetCategoriesMaxSaleQuantumRequest :> Verb 'POST 200 '[JSON] GetCategoriesMaxSaleQuantumResponse -- 'getCategoriesMaxSaleQuantum' route
    :<|> Protected :> "categories" :> "tree" :> ReqBody '[JSON] GetCategoriesRequest :> Verb 'POST 200 '[JSON] GetCategoriesResponse -- 'getCategoriesTree' route
    :<|> Protected :> "category" :> Capture "categoryId" Integer :> "parameters" :> Verb 'POST 200 '[JSON] GetCategoryContentParametersResponse -- 'getCategoryContentParameters' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "history" :> QueryParam "chatId" Integer :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetChatHistoryRequest :> Verb 'POST 200 '[JSON] GetChatHistoryResponse -- 'getChatHistory' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetChatsRequest :> Verb 'POST 200 '[JSON] GetChatsResponse -- 'getChats' route
    :<|> Protected :> "delivery" :> "services" :> Verb 'GET 200 '[JSON] GetDeliveryServicesResponse -- 'getDeliveryServices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> Verb 'GET 200 '[JSON] GetFeedResponse -- 'getFeed' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> "index-logs" :> QueryParam "limit" Int :> QueryParam "published_time_from" UTCTime :> QueryParam "published_time_to" UTCTime :> QueryParam "status" FeedIndexLogsStatusType :> Verb 'GET 200 '[JSON] GetFeedIndexLogsResponse -- 'getFeedIndexLogs' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feedback" :> "updates" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "from_date" Day :> Verb 'GET 200 '[JSON] GetFeedbackListResponse -- 'getFeedbackAndCommentUpdates' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Verb 'GET 200 '[JSON] GetFeedsResponse -- 'getFeeds' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "comments" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetGoodsFeedbackCommentsRequest :> Verb 'POST 200 '[JSON] GetGoodsFeedbackCommentsResponse -- 'getGoodsFeedbackComments' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetGoodsFeedbackRequest :> Verb 'POST 200 '[JSON] GetGoodsFeedbackResponse -- 'getGoodsFeedbacks' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "stats" :> "skus" :> ReqBody '[JSON] GetGoodsStatsRequest :> Verb 'POST 200 '[JSON] GetGoodsStatsResponse -- 'getGoodsStats' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "hidden-offers" :> QueryParam "offer_id" (QueryList 'CommaSeparated (Text)) :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "offset" Int :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetHiddenOffersResponse -- 'getHiddenOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-cards" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOfferCardsContentStatusRequest :> Verb 'POST 200 '[JSON] GetOfferCardsContentStatusResponse -- 'getOfferCardsContentStatus' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-mapping-entries" :> QueryParam "offer_id" (QueryList 'CommaSeparated (Text)) :> QueryParam "shop_sku" (QueryList 'CommaSeparated (Text)) :> QueryParam "mapping_kind" OfferMappingKindType :> QueryParam "status" (QueryList 'CommaSeparated (OfferProcessingStatusType)) :> QueryParam "availability" (QueryList 'CommaSeparated (OfferAvailabilityStatusType)) :> QueryParam "category_id" (QueryList 'CommaSeparated (Int)) :> QueryParam "vendor" (QueryList 'CommaSeparated (Text)) :> QueryParam "page_token" Text :> QueryParam "limit" Int :> Verb 'GET 200 '[JSON] GetOfferMappingEntriesResponse -- 'getOfferMappingEntries' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOfferMappingsRequest :> Verb 'POST 200 '[JSON] GetOfferMappingsResponse -- 'getOfferMappings' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offers" :> "recommendations" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOfferRecommendationsRequest :> Verb 'POST 200 '[JSON] GetOfferRecommendationsResponse -- 'getOfferRecommendations' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> QueryParam "query" Text :> QueryParam "feedId" Integer :> QueryParam "shopCategoryId" Text :> QueryParam "currency" CurrencyType :> QueryParam "matched" Bool :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetOffersResponse -- 'getOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> Verb 'GET 200 '[JSON] GetOrderResponse -- 'getOrder' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "business-buyer" :> Verb 'POST 200 '[JSON] GetBusinessBuyerInfoResponse -- 'getOrderBusinessBuyerInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "documents" :> Verb 'POST 200 '[JSON] GetBusinessDocumentsInfoResponse -- 'getOrderBusinessDocumentsInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "labels" :> "data" :> Verb 'GET 200 '[JSON] GetOrderLabelsDataResponse -- 'getOrderLabelsData' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> QueryParam "orderIds" (QueryList 'CommaSeparated (Integer)) :> QueryParam "status" (QueryList 'CommaSeparated (OrderStatusType)) :> QueryParam "substatus" (QueryList 'CommaSeparated (OrderSubstatusType)) :> QueryParam "fromDate" Day :> QueryParam "toDate" Day :> QueryParam "supplierShipmentDateFrom" Day :> QueryParam "supplierShipmentDateTo" Day :> QueryParam "updatedAtFrom" UTCTime :> QueryParam "updatedAtTo" UTCTime :> QueryParam "dispatchType" OrderDeliveryDispatchType :> QueryParam "fake" Bool :> QueryParam "hasCis" Bool :> QueryParam "onlyWaitingForCancellationApprove" Bool :> QueryParam "onlyEstimatedDelivery" Bool :> QueryParam "buyerType" OrderBuyerType :> QueryParam "page" Int :> QueryParam "pageSize" Int :> QueryParam "page_token" Text :> QueryParam "limit" Int :> Verb 'GET 200 '[JSON] GetOrdersResponse -- 'getOrders' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "stats" :> "orders" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOrdersStatsRequest :> Verb 'POST 200 '[JSON] GetOrdersStatsResponse -- 'getOrdersStats' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "archived" Bool :> Verb 'GET 200 '[JSON] GetPricesResponse -- 'getPrices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetPricesByOfferIdsRequest :> Verb 'POST 200 '[JSON] GetPricesByOfferIdsResponse -- 'getPricesByOfferIds' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> "offers" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetPromoOffersRequest :> Verb 'POST 200 '[JSON] GetPromoOffersResponse -- 'getPromoOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> ReqBody '[JSON] GetPromosRequest :> Verb 'POST 200 '[JSON] GetPromosResponse -- 'getPromos' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "ratings" :> "quality" :> "details" :> Verb 'POST 200 '[JSON] GetQualityRatingDetailsResponse -- 'getQualityRatingDetails' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "ratings" :> "quality" :> ReqBody '[JSON] GetQualityRatingRequest :> Verb 'POST 200 '[JSON] GetQualityRatingResponse -- 'getQualityRatings' route
    :<|> Protected :> "reports" :> "info" :> Capture "reportId" Text :> Verb 'GET 200 '[JSON] GetReportInfoResponse -- 'getReportInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "returns" :> Capture "returnId" Integer :> Verb 'GET 200 '[JSON] GetReturnResponse -- 'getReturn' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "returns" :> Capture "returnId" Integer :> "application" :> Verb 'GET 200 '[JSON] FilePath -- 'getReturnApplication' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "returns" :> Capture "returnId" Integer :> "decision" :> Capture "itemId" Integer :> "image" :> Capture "imageHash" Text :> Verb 'GET 200 '[JSON] FilePath -- 'getReturnPhoto' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "returns" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "orderIds" (QueryList 'CommaSeparated (Integer)) :> QueryParam "statuses" (QueryList 'CommaSeparated (RefundStatusType)) :> QueryParam "type" ReturnType :> QueryParam "fromDate" Day :> QueryParam "toDate" Day :> QueryParam "from_date" Day :> QueryParam "to_date" Day :> Verb 'GET 200 '[JSON] GetReturnsResponse -- 'getReturns' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "stocks" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetWarehouseStocksRequest :> Verb 'POST 200 '[JSON] GetWarehouseStocksResponse -- 'getStocks' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-mapping-entries" :> "suggestions" :> ReqBody '[JSON] GetSuggestedOfferMappingEntriesRequest :> Verb 'POST 200 '[JSON] GetSuggestedOfferMappingEntriesResponse -- 'getSuggestedOfferMappingEntries' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "suggestions" :> ReqBody '[JSON] GetSuggestedOfferMappingsRequest :> Verb 'POST 200 '[JSON] GetSuggestedOfferMappingsResponse -- 'getSuggestedOfferMappings' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> "suggestions" :> ReqBody '[JSON] SuggestPricesRequest :> Verb 'POST 200 '[JSON] SuggestPricesResponse -- 'getSuggestedPrices' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "warehouses" :> Verb 'GET 200 '[JSON] GetWarehousesResponse -- 'getWarehouses' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "identifiers" :> ReqBody '[JSON] ProvideOrderItemIdentifiersRequest :> Verb 'PUT 200 '[JSON] ProvideOrderItemIdentifiersResponse -- 'provideOrderItemIdentifiers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "bids" :> ReqBody '[JSON] PutSkuBidsRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'putBidsForBusiness' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "bids" :> ReqBody '[JSON] PutSkuBidsRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'putBidsForCampaign' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> "refresh" :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'refreshFeed' route
    :<|> Protected :> "regions" :> Capture "regionId" Integer :> "children" :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetRegionWithChildrenResponse -- 'searchRegionChildren' route
    :<|> Protected :> "regions" :> Capture "regionId" Integer :> Verb 'GET 200 '[JSON] GetRegionsResponse -- 'searchRegionsById' route
    :<|> Protected :> "regions" :> QueryParam "name" Text :> QueryParam "page_token" Text :> QueryParam "limit" Int :> Verb 'GET 200 '[JSON] GetRegionsResponse -- 'searchRegionsByName' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "file" :> "send" :> QueryParam "chatId" Integer :> ReqBody '[FormUrlEncoded] FormSendFileToChat :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'sendFileToChat' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "message" :> QueryParam "chatId" Integer :> ReqBody '[JSON] SendMessageToChatRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'sendMessageToChat' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> "params" :> ReqBody '[JSON] SetFeedParamsRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'setFeedParams' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "boxes" :> ReqBody '[JSON] SetOrderBoxLayoutRequest :> Verb 'PUT 200 '[JSON] SetOrderBoxLayoutResponse -- 'setOrderBoxLayout' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "shipments" :> Capture "shipmentId" Integer :> "boxes" :> ReqBody '[JSON] SetOrderShipmentBoxesRequest :> Verb 'PUT 200 '[JSON] SetOrderShipmentBoxesResponse -- 'setOrderShipmentBoxes' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "skip-reaction" :> ReqBody '[JSON] SkipGoodsFeedbackReactionRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'skipGoodsFeedbacksReaction' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-prices" :> "updates" :> ReqBody '[JSON] UpdateBusinessPricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updateBusinessPrices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "update" :> ReqBody '[JSON] UpdateCampaignOffersRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updateCampaignOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "comments" :> "update" :> ReqBody '[JSON] UpdateGoodsFeedbackCommentRequest :> Verb 'POST 200 '[JSON] UpdateGoodsFeedbackCommentResponse -- 'updateGoodsFeedbackComment' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-cards" :> "update" :> ReqBody '[JSON] UpdateOfferContentRequest :> Verb 'POST 200 '[JSON] UpdateOfferContentResponse -- 'updateOfferContent' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-mapping-entries" :> "updates" :> ReqBody '[JSON] UpdateOfferMappingEntryRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updateOfferMappingEntries' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "update" :> ReqBody '[JSON] UpdateOfferMappingsRequest :> Verb 'POST 200 '[JSON] UpdateOfferMappingsResponse -- 'updateOfferMappings' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "items" :> ReqBody '[JSON] UpdateOrderItemRequest :> Verb 'PUT 200 '[JSON] NoContent -- 'updateOrderItems' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "status" :> ReqBody '[JSON] UpdateOrderStatusRequest :> Verb 'PUT 200 '[JSON] UpdateOrderStatusResponse -- 'updateOrderStatus' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> "status-update" :> ReqBody '[JSON] UpdateOrderStatusesRequest :> Verb 'POST 200 '[JSON] UpdateOrderStatusesResponse -- 'updateOrderStatuses' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> "updates" :> ReqBody '[JSON] UpdatePricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updatePrices' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> "offers" :> "update" :> ReqBody '[JSON] UpdatePromoOffersRequest :> Verb 'POST 200 '[JSON] UpdatePromoOffersResponse -- 'updatePromoOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "stocks" :> ReqBody '[JSON] UpdateStocksRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'updateStocks' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "verifyEac" :> ReqBody '[JSON] VerifyOrderEacRequest :> Verb 'PUT 200 '[JSON] VerifyOrderEacResponse -- 'verifyOrderEac' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "hidden-offers" :> ReqBody '[JSON] AddHiddenOffersRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'addHiddenOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "archive" :> ReqBody '[JSON] AddOffersToArchiveRequest :> Verb 'POST 200 '[JSON] AddOffersToArchiveResponse -- 'addOffersToArchive' route
    :<|> Protected :> "tariffs" :> "calculate" :> ReqBody '[JSON] CalculateTariffsRequest :> Verb 'POST 200 '[JSON] CalculateTariffsResponse -- 'calculateTariffs' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "price-quarantine" :> "confirm" :> ReqBody '[JSON] ConfirmPricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'confirmBusinessPrices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "price-quarantine" :> "confirm" :> ReqBody '[JSON] ConfirmPricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'confirmCampaignPrices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> "confirm" :> ReqBody '[JSON] ConfirmShipmentRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'confirmShipment' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "new" :> ReqBody '[JSON] CreateChatRequest :> Verb 'POST 200 '[JSON] CreateChatResponse -- 'createChat' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "delete" :> ReqBody '[JSON] DeleteCampaignOffersRequest :> Verb 'POST 200 '[JSON] DeleteCampaignOffersResponse -- 'deleteCampaignOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "comments" :> "delete" :> ReqBody '[JSON] DeleteGoodsFeedbackCommentRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'deleteGoodsFeedbackComment' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "hidden-offers" :> "delete" :> ReqBody '[JSON] DeleteHiddenOffersRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'deleteHiddenOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "delete" :> ReqBody '[JSON] DeleteOffersRequest :> Verb 'POST 200 '[JSON] DeleteOffersResponse -- 'deleteOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "unarchive" :> ReqBody '[JSON] DeleteOffersFromArchiveRequest :> Verb 'POST 200 '[JSON] DeleteOffersFromArchiveResponse -- 'deleteOffersFromArchive' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> "offers" :> "delete" :> ReqBody '[JSON] DeletePromoOffersRequest :> Verb 'POST 200 '[JSON] DeletePromoOffersResponse -- 'deletePromoOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> "act" :> Verb 'GET 200 '[JSON] FilePath -- 'downloadShipmentAct' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> "discrepancy-act" :> Verb 'GET 200 '[JSON] FilePath -- 'downloadShipmentDiscrepancyAct' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> "inbound-act" :> Verb 'GET 200 '[JSON] FilePath -- 'downloadShipmentInboundAct' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> "pallet" :> "labels" :> QueryParam "format" ShipmentPalletLabelPageFormatType :> Verb 'GET 200 '[JSON] FilePath -- 'downloadShipmentPalletLabels' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "shipments" :> "reception-transfer-act" :> QueryParam "warehouse_id" Int :> Verb 'GET 200 '[JSON] FilePath -- 'downloadShipmentReceptionTransferAct' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> "transportation-waybill" :> Verb 'GET 200 '[JSON] FilePath -- 'downloadShipmentTransportationWaybill' route
    :<|> Protected :> "reports" :> "boost-consolidated" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateBoostConsolidatedRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateBoostConsolidatedReport' route
    :<|> Protected :> "reports" :> "competitors-position" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateCompetitorsPositionReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateCompetitorsPositionReport' route
    :<|> Protected :> "reports" :> "goods-feedback" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateGoodsFeedbackRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateGoodsFeedbackReport' route
    :<|> Protected :> "reports" :> "goods-realization" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateGoodsRealizationReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateGoodsRealizationReport' route
    :<|> Protected :> "reports" :> "documents" :> "labels" :> "generate" :> QueryParam "format" PageFormatType :> ReqBody '[JSON] GenerateMassOrderLabelsRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateMassOrderLabelsReport' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "shipments" :> Capture "shipmentId" Integer :> "boxes" :> Capture "boxId" Integer :> "label" :> QueryParam "format" PageFormatType :> Verb 'GET 200 '[JSON] FilePath -- 'generateOrderLabel' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "labels" :> QueryParam "format" PageFormatType :> Verb 'GET 200 '[JSON] FilePath -- 'generateOrderLabels' route
    :<|> Protected :> "reports" :> "prices" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GeneratePricesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generatePricesReport' route
    :<|> Protected :> "reports" :> "shelf-statistics" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateShelfsStatisticsRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateShelfsStatisticsReport' route
    :<|> Protected :> "reports" :> "documents" :> "shipment-list" :> "generate" :> ReqBody '[JSON] GenerateShipmentListDocumentReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateShipmentListDocumentReport' route
    :<|> Protected :> "reports" :> "shows-sales" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateShowsSalesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateShowsSalesReport' route
    :<|> Protected :> "reports" :> "stocks-on-warehouses" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateStocksOnWarehousesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateStocksOnWarehousesReport' route
    :<|> Protected :> "reports" :> "united-marketplace-services" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateUnitedMarketplaceServicesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateUnitedMarketplaceServicesReport' route
    :<|> Protected :> "reports" :> "united-netting" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateUnitedNettingReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateUnitedNettingReport' route
    :<|> Protected :> "reports" :> "united-orders" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateUnitedOrdersRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateUnitedOrdersReport' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "all" :> QueryParam "feedId" Integer :> QueryParam "chunk" Int :> Verb 'GET 200 '[JSON] GetAllOffersResponse -- 'getAllOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "bids" :> "info" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetBidsInfoRequest :> Verb 'POST 200 '[JSON] GetBidsInfoResponse -- 'getBidsInfoForBusiness' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "bids" :> "recommendations" :> ReqBody '[JSON] GetBidsRecommendationsRequest :> Verb 'POST 200 '[JSON] GetBidsRecommendationsResponse -- 'getBidsRecommendations' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "price-quarantine" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetQuarantineOffersRequest :> Verb 'POST 200 '[JSON] GetQuarantineOffersResponse -- 'getBusinessQuarantineOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "settings" :> Verb 'POST 200 '[JSON] GetBusinessSettingsResponse -- 'getBusinessSettings' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> Verb 'GET 200 '[JSON] GetCampaignResponse -- 'getCampaign' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "logins" :> Verb 'GET 200 '[JSON] GetCampaignLoginsResponse -- 'getCampaignLogins' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetCampaignOffersRequest :> Verb 'POST 200 '[JSON] GetCampaignOffersResponse -- 'getCampaignOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "price-quarantine" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetQuarantineOffersRequest :> Verb 'POST 200 '[JSON] GetQuarantineOffersResponse -- 'getCampaignQuarantineOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "region" :> Verb 'GET 200 '[JSON] GetCampaignRegionResponse -- 'getCampaignRegion' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "settings" :> Verb 'GET 200 '[JSON] GetCampaignSettingsResponse -- 'getCampaignSettings' route
    :<|> Protected :> "campaigns" :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetCampaignsResponse -- 'getCampaigns' route
    :<|> Protected :> "campaigns" :> "by_login" :> Capture "login" Text :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetCampaignsResponse -- 'getCampaignsByLogin' route
    :<|> Protected :> "categories" :> "max-sale-quantum" :> ReqBody '[JSON] GetCategoriesMaxSaleQuantumRequest :> Verb 'POST 200 '[JSON] GetCategoriesMaxSaleQuantumResponse -- 'getCategoriesMaxSaleQuantum' route
    :<|> Protected :> "categories" :> "tree" :> ReqBody '[JSON] GetCategoriesRequest :> Verb 'POST 200 '[JSON] GetCategoriesResponse -- 'getCategoriesTree' route
    :<|> Protected :> "category" :> Capture "categoryId" Integer :> "parameters" :> Verb 'POST 200 '[JSON] GetCategoryContentParametersResponse -- 'getCategoryContentParameters' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "history" :> QueryParam "chatId" Integer :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetChatHistoryRequest :> Verb 'POST 200 '[JSON] GetChatHistoryResponse -- 'getChatHistory' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetChatsRequest :> Verb 'POST 200 '[JSON] GetChatsResponse -- 'getChats' route
    :<|> Protected :> "delivery" :> "services" :> Verb 'GET 200 '[JSON] GetDeliveryServicesResponse -- 'getDeliveryServices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> Verb 'GET 200 '[JSON] GetFeedResponse -- 'getFeed' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> "index-logs" :> QueryParam "limit" Int :> QueryParam "published_time_from" UTCTime :> QueryParam "published_time_to" UTCTime :> QueryParam "status" FeedIndexLogsStatusType :> Verb 'GET 200 '[JSON] GetFeedIndexLogsResponse -- 'getFeedIndexLogs' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feedback" :> "updates" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "from_date" Day :> Verb 'GET 200 '[JSON] GetFeedbackListResponse -- 'getFeedbackAndCommentUpdates' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Verb 'GET 200 '[JSON] GetFeedsResponse -- 'getFeeds' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "comments" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetGoodsFeedbackCommentsRequest :> Verb 'POST 200 '[JSON] GetGoodsFeedbackCommentsResponse -- 'getGoodsFeedbackComments' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetGoodsFeedbackRequest :> Verb 'POST 200 '[JSON] GetGoodsFeedbackResponse -- 'getGoodsFeedbacks' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "stats" :> "skus" :> ReqBody '[JSON] GetGoodsStatsRequest :> Verb 'POST 200 '[JSON] GetGoodsStatsResponse -- 'getGoodsStats' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "hidden-offers" :> QueryParam "offer_id" (QueryList 'CommaSeparated (Text)) :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "offset" Int :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetHiddenOffersResponse -- 'getHiddenOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-cards" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOfferCardsContentStatusRequest :> Verb 'POST 200 '[JSON] GetOfferCardsContentStatusResponse -- 'getOfferCardsContentStatus' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-mapping-entries" :> QueryParam "offer_id" (QueryList 'CommaSeparated (Text)) :> QueryParam "shop_sku" (QueryList 'CommaSeparated (Text)) :> QueryParam "mapping_kind" OfferMappingKindType :> QueryParam "status" (QueryList 'CommaSeparated (OfferProcessingStatusType)) :> QueryParam "availability" (QueryList 'CommaSeparated (OfferAvailabilityStatusType)) :> QueryParam "category_id" (QueryList 'CommaSeparated (Int)) :> QueryParam "vendor" (QueryList 'CommaSeparated (Text)) :> QueryParam "page_token" Text :> QueryParam "limit" Int :> Verb 'GET 200 '[JSON] GetOfferMappingEntriesResponse -- 'getOfferMappingEntries' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOfferMappingsRequest :> Verb 'POST 200 '[JSON] GetOfferMappingsResponse -- 'getOfferMappings' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offers" :> "recommendations" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOfferRecommendationsRequest :> Verb 'POST 200 '[JSON] GetOfferRecommendationsResponse -- 'getOfferRecommendations' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> QueryParam "query" Text :> QueryParam "feedId" Integer :> QueryParam "shopCategoryId" Text :> QueryParam "currency" CurrencyType :> QueryParam "matched" Bool :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetOffersResponse -- 'getOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> Verb 'GET 200 '[JSON] GetOrderResponse -- 'getOrder' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "business-buyer" :> Verb 'POST 200 '[JSON] GetBusinessBuyerInfoResponse -- 'getOrderBusinessBuyerInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "documents" :> Verb 'POST 200 '[JSON] GetBusinessDocumentsInfoResponse -- 'getOrderBusinessDocumentsInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "labels" :> "data" :> Verb 'GET 200 '[JSON] GetOrderLabelsDataResponse -- 'getOrderLabelsData' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> QueryParam "orderIds" (QueryList 'CommaSeparated (Integer)) :> QueryParam "status" (QueryList 'CommaSeparated (OrderStatusType)) :> QueryParam "substatus" (QueryList 'CommaSeparated (OrderSubstatusType)) :> QueryParam "fromDate" Day :> QueryParam "toDate" Day :> QueryParam "supplierShipmentDateFrom" Day :> QueryParam "supplierShipmentDateTo" Day :> QueryParam "updatedAtFrom" UTCTime :> QueryParam "updatedAtTo" UTCTime :> QueryParam "dispatchType" OrderDeliveryDispatchType :> QueryParam "fake" Bool :> QueryParam "hasCis" Bool :> QueryParam "onlyWaitingForCancellationApprove" Bool :> QueryParam "onlyEstimatedDelivery" Bool :> QueryParam "buyerType" OrderBuyerType :> QueryParam "page" Int :> QueryParam "pageSize" Int :> QueryParam "page_token" Text :> QueryParam "limit" Int :> Verb 'GET 200 '[JSON] GetOrdersResponse -- 'getOrders' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "stats" :> "orders" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOrdersStatsRequest :> Verb 'POST 200 '[JSON] GetOrdersStatsResponse -- 'getOrdersStats' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "archived" Bool :> Verb 'GET 200 '[JSON] GetPricesResponse -- 'getPrices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetPricesByOfferIdsRequest :> Verb 'POST 200 '[JSON] GetPricesByOfferIdsResponse -- 'getPricesByOfferIds' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> "offers" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetPromoOffersRequest :> Verb 'POST 200 '[JSON] GetPromoOffersResponse -- 'getPromoOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> ReqBody '[JSON] GetPromosRequest :> Verb 'POST 200 '[JSON] GetPromosResponse -- 'getPromos' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "ratings" :> "quality" :> "details" :> Verb 'POST 200 '[JSON] GetQualityRatingDetailsResponse -- 'getQualityRatingDetails' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "ratings" :> "quality" :> ReqBody '[JSON] GetQualityRatingRequest :> Verb 'POST 200 '[JSON] GetQualityRatingResponse -- 'getQualityRatings' route
    :<|> Protected :> "reports" :> "info" :> Capture "reportId" Text :> Verb 'GET 200 '[JSON] GetReportInfoResponse -- 'getReportInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "returns" :> Capture "returnId" Integer :> Verb 'GET 200 '[JSON] GetReturnResponse -- 'getReturn' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "returns" :> Capture "returnId" Integer :> "application" :> Verb 'GET 200 '[JSON] FilePath -- 'getReturnApplication' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "returns" :> Capture "returnId" Integer :> "decision" :> Capture "itemId" Integer :> "image" :> Capture "imageHash" Text :> Verb 'GET 200 '[JSON] FilePath -- 'getReturnPhoto' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "returns" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "orderIds" (QueryList 'CommaSeparated (Integer)) :> QueryParam "statuses" (QueryList 'CommaSeparated (RefundStatusType)) :> QueryParam "type" ReturnType :> QueryParam "fromDate" Day :> QueryParam "toDate" Day :> QueryParam "from_date" Day :> QueryParam "to_date" Day :> Verb 'GET 200 '[JSON] GetReturnsResponse -- 'getReturns' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> QueryParam "cancelledOrders" Bool :> Verb 'GET 200 '[JSON] GetShipmentResponse -- 'getShipment' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> "orders" :> "info" :> Verb 'GET 200 '[JSON] GetShipmentOrdersInfoResponse -- 'getShipmentOrdersInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "stocks" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetWarehouseStocksRequest :> Verb 'POST 200 '[JSON] GetWarehouseStocksResponse -- 'getStocks' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-mapping-entries" :> "suggestions" :> ReqBody '[JSON] GetSuggestedOfferMappingEntriesRequest :> Verb 'POST 200 '[JSON] GetSuggestedOfferMappingEntriesResponse -- 'getSuggestedOfferMappingEntries' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "suggestions" :> ReqBody '[JSON] GetSuggestedOfferMappingsRequest :> Verb 'POST 200 '[JSON] GetSuggestedOfferMappingsResponse -- 'getSuggestedOfferMappings' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> "suggestions" :> ReqBody '[JSON] SuggestPricesRequest :> Verb 'POST 200 '[JSON] SuggestPricesResponse -- 'getSuggestedPrices' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "warehouses" :> Verb 'GET 200 '[JSON] GetWarehousesResponse -- 'getWarehouses' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "identifiers" :> ReqBody '[JSON] ProvideOrderItemIdentifiersRequest :> Verb 'PUT 200 '[JSON] ProvideOrderItemIdentifiersResponse -- 'provideOrderItemIdentifiers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "bids" :> ReqBody '[JSON] PutSkuBidsRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'putBidsForBusiness' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "bids" :> ReqBody '[JSON] PutSkuBidsRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'putBidsForCampaign' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> "refresh" :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'refreshFeed' route
    :<|> Protected :> "regions" :> Capture "regionId" Integer :> "children" :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetRegionWithChildrenResponse -- 'searchRegionChildren' route
    :<|> Protected :> "regions" :> Capture "regionId" Integer :> Verb 'GET 200 '[JSON] GetRegionsResponse -- 'searchRegionsById' route
    :<|> Protected :> "regions" :> QueryParam "name" Text :> QueryParam "page_token" Text :> QueryParam "limit" Int :> Verb 'GET 200 '[JSON] GetRegionsResponse -- 'searchRegionsByName' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] SearchShipmentsRequest :> Verb 'PUT 200 '[JSON] SearchShipmentsResponse -- 'searchShipments' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "file" :> "send" :> QueryParam "chatId" Integer :> ReqBody '[FormUrlEncoded] FormSendFileToChat :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'sendFileToChat' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "message" :> QueryParam "chatId" Integer :> ReqBody '[JSON] SendMessageToChatRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'sendMessageToChat' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> "params" :> ReqBody '[JSON] SetFeedParamsRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'setFeedParams' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "boxes" :> ReqBody '[JSON] SetOrderBoxLayoutRequest :> Verb 'PUT 200 '[JSON] SetOrderBoxLayoutResponse -- 'setOrderBoxLayout' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "shipments" :> Capture "shipmentId" Integer :> "boxes" :> ReqBody '[JSON] SetOrderShipmentBoxesRequest :> Verb 'PUT 200 '[JSON] SetOrderShipmentBoxesResponse -- 'setOrderShipmentBoxes' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> "pallets" :> ReqBody '[JSON] SetShipmentPalletsCountRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'setShipmentPalletsCount' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "skip-reaction" :> ReqBody '[JSON] SkipGoodsFeedbackReactionRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'skipGoodsFeedbacksReaction' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> "orders" :> "transfer" :> ReqBody '[JSON] TransferOrdersFromShipmentRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'transferOrdersFromShipment' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-prices" :> "updates" :> ReqBody '[JSON] UpdateBusinessPricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updateBusinessPrices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "update" :> ReqBody '[JSON] UpdateCampaignOffersRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updateCampaignOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "comments" :> "update" :> ReqBody '[JSON] UpdateGoodsFeedbackCommentRequest :> Verb 'POST 200 '[JSON] UpdateGoodsFeedbackCommentResponse -- 'updateGoodsFeedbackComment' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-cards" :> "update" :> ReqBody '[JSON] UpdateOfferContentRequest :> Verb 'POST 200 '[JSON] UpdateOfferContentResponse -- 'updateOfferContent' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-mapping-entries" :> "updates" :> ReqBody '[JSON] UpdateOfferMappingEntryRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updateOfferMappingEntries' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "update" :> ReqBody '[JSON] UpdateOfferMappingsRequest :> Verb 'POST 200 '[JSON] UpdateOfferMappingsResponse -- 'updateOfferMappings' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "items" :> ReqBody '[JSON] UpdateOrderItemRequest :> Verb 'PUT 200 '[JSON] NoContent -- 'updateOrderItems' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "status" :> ReqBody '[JSON] UpdateOrderStatusRequest :> Verb 'PUT 200 '[JSON] UpdateOrderStatusResponse -- 'updateOrderStatus' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> "status-update" :> ReqBody '[JSON] UpdateOrderStatusesRequest :> Verb 'POST 200 '[JSON] UpdateOrderStatusesResponse -- 'updateOrderStatuses' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> "updates" :> ReqBody '[JSON] UpdatePricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updatePrices' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> "offers" :> "update" :> ReqBody '[JSON] UpdatePromoOffersRequest :> Verb 'POST 200 '[JSON] UpdatePromoOffersResponse -- 'updatePromoOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "stocks" :> ReqBody '[JSON] UpdateStocksRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'updateStocks' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "hidden-offers" :> ReqBody '[JSON] AddHiddenOffersRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'addHiddenOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "archive" :> ReqBody '[JSON] AddOffersToArchiveRequest :> Verb 'POST 200 '[JSON] AddOffersToArchiveResponse -- 'addOffersToArchive' route
    :<|> Protected :> "tariffs" :> "calculate" :> ReqBody '[JSON] CalculateTariffsRequest :> Verb 'POST 200 '[JSON] CalculateTariffsResponse -- 'calculateTariffs' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "price-quarantine" :> "confirm" :> ReqBody '[JSON] ConfirmPricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'confirmBusinessPrices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "price-quarantine" :> "confirm" :> ReqBody '[JSON] ConfirmPricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'confirmCampaignPrices' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "new" :> ReqBody '[JSON] CreateChatRequest :> Verb 'POST 200 '[JSON] CreateChatResponse -- 'createChat' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "delete" :> ReqBody '[JSON] DeleteCampaignOffersRequest :> Verb 'POST 200 '[JSON] DeleteCampaignOffersResponse -- 'deleteCampaignOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "comments" :> "delete" :> ReqBody '[JSON] DeleteGoodsFeedbackCommentRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'deleteGoodsFeedbackComment' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "hidden-offers" :> "delete" :> ReqBody '[JSON] DeleteHiddenOffersRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'deleteHiddenOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "delete" :> ReqBody '[JSON] DeleteOffersRequest :> Verb 'POST 200 '[JSON] DeleteOffersResponse -- 'deleteOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "unarchive" :> ReqBody '[JSON] DeleteOffersFromArchiveRequest :> Verb 'POST 200 '[JSON] DeleteOffersFromArchiveResponse -- 'deleteOffersFromArchive' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> "offers" :> "delete" :> ReqBody '[JSON] DeletePromoOffersRequest :> Verb 'POST 200 '[JSON] DeletePromoOffersResponse -- 'deletePromoOffers' route
    :<|> Protected :> "reports" :> "boost-consolidated" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateBoostConsolidatedRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateBoostConsolidatedReport' route
    :<|> Protected :> "reports" :> "competitors-position" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateCompetitorsPositionReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateCompetitorsPositionReport' route
    :<|> Protected :> "reports" :> "goods-feedback" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateGoodsFeedbackRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateGoodsFeedbackReport' route
    :<|> Protected :> "reports" :> "goods-movement" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateGoodsMovementReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateGoodsMovementReport' route
    :<|> Protected :> "reports" :> "goods-realization" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateGoodsRealizationReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateGoodsRealizationReport' route
    :<|> Protected :> "reports" :> "goods-turnover" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateGoodsTurnoverRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateGoodsTurnoverReport' route
    :<|> Protected :> "reports" :> "prices" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GeneratePricesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generatePricesReport' route
    :<|> Protected :> "reports" :> "shelf-statistics" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateShelfsStatisticsRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateShelfsStatisticsReport' route
    :<|> Protected :> "reports" :> "shows-sales" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateShowsSalesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateShowsSalesReport' route
    :<|> Protected :> "reports" :> "stocks-on-warehouses" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateStocksOnWarehousesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateStocksOnWarehousesReport' route
    :<|> Protected :> "reports" :> "united-marketplace-services" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateUnitedMarketplaceServicesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateUnitedMarketplaceServicesReport' route
    :<|> Protected :> "reports" :> "united-netting" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateUnitedNettingReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateUnitedNettingReport' route
    :<|> Protected :> "reports" :> "united-orders" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateUnitedOrdersRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateUnitedOrdersReport' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "all" :> QueryParam "feedId" Integer :> QueryParam "chunk" Int :> Verb 'GET 200 '[JSON] GetAllOffersResponse -- 'getAllOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "bids" :> "info" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetBidsInfoRequest :> Verb 'POST 200 '[JSON] GetBidsInfoResponse -- 'getBidsInfoForBusiness' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "bids" :> "recommendations" :> ReqBody '[JSON] GetBidsRecommendationsRequest :> Verb 'POST 200 '[JSON] GetBidsRecommendationsResponse -- 'getBidsRecommendations' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "price-quarantine" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetQuarantineOffersRequest :> Verb 'POST 200 '[JSON] GetQuarantineOffersResponse -- 'getBusinessQuarantineOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "settings" :> Verb 'POST 200 '[JSON] GetBusinessSettingsResponse -- 'getBusinessSettings' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> Verb 'GET 200 '[JSON] GetCampaignResponse -- 'getCampaign' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "logins" :> Verb 'GET 200 '[JSON] GetCampaignLoginsResponse -- 'getCampaignLogins' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetCampaignOffersRequest :> Verb 'POST 200 '[JSON] GetCampaignOffersResponse -- 'getCampaignOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "price-quarantine" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetQuarantineOffersRequest :> Verb 'POST 200 '[JSON] GetQuarantineOffersResponse -- 'getCampaignQuarantineOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "region" :> Verb 'GET 200 '[JSON] GetCampaignRegionResponse -- 'getCampaignRegion' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "settings" :> Verb 'GET 200 '[JSON] GetCampaignSettingsResponse -- 'getCampaignSettings' route
    :<|> Protected :> "campaigns" :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetCampaignsResponse -- 'getCampaigns' route
    :<|> Protected :> "campaigns" :> "by_login" :> Capture "login" Text :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetCampaignsResponse -- 'getCampaignsByLogin' route
    :<|> Protected :> "categories" :> "max-sale-quantum" :> ReqBody '[JSON] GetCategoriesMaxSaleQuantumRequest :> Verb 'POST 200 '[JSON] GetCategoriesMaxSaleQuantumResponse -- 'getCategoriesMaxSaleQuantum' route
    :<|> Protected :> "categories" :> "tree" :> ReqBody '[JSON] GetCategoriesRequest :> Verb 'POST 200 '[JSON] GetCategoriesResponse -- 'getCategoriesTree' route
    :<|> Protected :> "category" :> Capture "categoryId" Integer :> "parameters" :> Verb 'POST 200 '[JSON] GetCategoryContentParametersResponse -- 'getCategoryContentParameters' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "history" :> QueryParam "chatId" Integer :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetChatHistoryRequest :> Verb 'POST 200 '[JSON] GetChatHistoryResponse -- 'getChatHistory' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetChatsRequest :> Verb 'POST 200 '[JSON] GetChatsResponse -- 'getChats' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> Verb 'GET 200 '[JSON] GetFeedResponse -- 'getFeed' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> "index-logs" :> QueryParam "limit" Int :> QueryParam "published_time_from" UTCTime :> QueryParam "published_time_to" UTCTime :> QueryParam "status" FeedIndexLogsStatusType :> Verb 'GET 200 '[JSON] GetFeedIndexLogsResponse -- 'getFeedIndexLogs' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feedback" :> "updates" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "from_date" Day :> Verb 'GET 200 '[JSON] GetFeedbackListResponse -- 'getFeedbackAndCommentUpdates' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Verb 'GET 200 '[JSON] GetFeedsResponse -- 'getFeeds' route
    :<|> Protected :> "warehouses" :> Verb 'GET 200 '[JSON] GetFulfillmentWarehousesResponse -- 'getFulfillmentWarehouses' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "comments" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetGoodsFeedbackCommentsRequest :> Verb 'POST 200 '[JSON] GetGoodsFeedbackCommentsResponse -- 'getGoodsFeedbackComments' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetGoodsFeedbackRequest :> Verb 'POST 200 '[JSON] GetGoodsFeedbackResponse -- 'getGoodsFeedbacks' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "stats" :> "skus" :> ReqBody '[JSON] GetGoodsStatsRequest :> Verb 'POST 200 '[JSON] GetGoodsStatsResponse -- 'getGoodsStats' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "hidden-offers" :> QueryParam "offer_id" (QueryList 'CommaSeparated (Text)) :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "offset" Int :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetHiddenOffersResponse -- 'getHiddenOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-cards" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOfferCardsContentStatusRequest :> Verb 'POST 200 '[JSON] GetOfferCardsContentStatusResponse -- 'getOfferCardsContentStatus' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-mapping-entries" :> QueryParam "offer_id" (QueryList 'CommaSeparated (Text)) :> QueryParam "shop_sku" (QueryList 'CommaSeparated (Text)) :> QueryParam "mapping_kind" OfferMappingKindType :> QueryParam "status" (QueryList 'CommaSeparated (OfferProcessingStatusType)) :> QueryParam "availability" (QueryList 'CommaSeparated (OfferAvailabilityStatusType)) :> QueryParam "category_id" (QueryList 'CommaSeparated (Int)) :> QueryParam "vendor" (QueryList 'CommaSeparated (Text)) :> QueryParam "page_token" Text :> QueryParam "limit" Int :> Verb 'GET 200 '[JSON] GetOfferMappingEntriesResponse -- 'getOfferMappingEntries' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOfferMappingsRequest :> Verb 'POST 200 '[JSON] GetOfferMappingsResponse -- 'getOfferMappings' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offers" :> "recommendations" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOfferRecommendationsRequest :> Verb 'POST 200 '[JSON] GetOfferRecommendationsResponse -- 'getOfferRecommendations' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> QueryParam "query" Text :> QueryParam "feedId" Integer :> QueryParam "shopCategoryId" Text :> QueryParam "currency" CurrencyType :> QueryParam "matched" Bool :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetOffersResponse -- 'getOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> Verb 'GET 200 '[JSON] GetOrderResponse -- 'getOrder' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "business-buyer" :> Verb 'POST 200 '[JSON] GetBusinessBuyerInfoResponse -- 'getOrderBusinessBuyerInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "documents" :> Verb 'POST 200 '[JSON] GetBusinessDocumentsInfoResponse -- 'getOrderBusinessDocumentsInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> QueryParam "orderIds" (QueryList 'CommaSeparated (Integer)) :> QueryParam "status" (QueryList 'CommaSeparated (OrderStatusType)) :> QueryParam "substatus" (QueryList 'CommaSeparated (OrderSubstatusType)) :> QueryParam "fromDate" Day :> QueryParam "toDate" Day :> QueryParam "supplierShipmentDateFrom" Day :> QueryParam "supplierShipmentDateTo" Day :> QueryParam "updatedAtFrom" UTCTime :> QueryParam "updatedAtTo" UTCTime :> QueryParam "dispatchType" OrderDeliveryDispatchType :> QueryParam "fake" Bool :> QueryParam "hasCis" Bool :> QueryParam "onlyWaitingForCancellationApprove" Bool :> QueryParam "onlyEstimatedDelivery" Bool :> QueryParam "buyerType" OrderBuyerType :> QueryParam "page" Int :> QueryParam "pageSize" Int :> QueryParam "page_token" Text :> QueryParam "limit" Int :> Verb 'GET 200 '[JSON] GetOrdersResponse -- 'getOrders' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "stats" :> "orders" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOrdersStatsRequest :> Verb 'POST 200 '[JSON] GetOrdersStatsResponse -- 'getOrdersStats' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "archived" Bool :> Verb 'GET 200 '[JSON] GetPricesResponse -- 'getPrices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetPricesByOfferIdsRequest :> Verb 'POST 200 '[JSON] GetPricesByOfferIdsResponse -- 'getPricesByOfferIds' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> "offers" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetPromoOffersRequest :> Verb 'POST 200 '[JSON] GetPromoOffersResponse -- 'getPromoOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> ReqBody '[JSON] GetPromosRequest :> Verb 'POST 200 '[JSON] GetPromosResponse -- 'getPromos' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "ratings" :> "quality" :> ReqBody '[JSON] GetQualityRatingRequest :> Verb 'POST 200 '[JSON] GetQualityRatingResponse -- 'getQualityRatings' route
    :<|> Protected :> "reports" :> "info" :> Capture "reportId" Text :> Verb 'GET 200 '[JSON] GetReportInfoResponse -- 'getReportInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "returns" :> Capture "returnId" Integer :> Verb 'GET 200 '[JSON] GetReturnResponse -- 'getReturn' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "returns" :> Capture "returnId" Integer :> "decision" :> Capture "itemId" Integer :> "image" :> Capture "imageHash" Text :> Verb 'GET 200 '[JSON] FilePath -- 'getReturnPhoto' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "returns" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "orderIds" (QueryList 'CommaSeparated (Integer)) :> QueryParam "statuses" (QueryList 'CommaSeparated (RefundStatusType)) :> QueryParam "type" ReturnType :> QueryParam "fromDate" Day :> QueryParam "toDate" Day :> QueryParam "from_date" Day :> QueryParam "to_date" Day :> Verb 'GET 200 '[JSON] GetReturnsResponse -- 'getReturns' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "stocks" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetWarehouseStocksRequest :> Verb 'POST 200 '[JSON] GetWarehouseStocksResponse -- 'getStocks' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-mapping-entries" :> "suggestions" :> ReqBody '[JSON] GetSuggestedOfferMappingEntriesRequest :> Verb 'POST 200 '[JSON] GetSuggestedOfferMappingEntriesResponse -- 'getSuggestedOfferMappingEntries' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "suggestions" :> ReqBody '[JSON] GetSuggestedOfferMappingsRequest :> Verb 'POST 200 '[JSON] GetSuggestedOfferMappingsResponse -- 'getSuggestedOfferMappings' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> "suggestions" :> ReqBody '[JSON] SuggestPricesRequest :> Verb 'POST 200 '[JSON] SuggestPricesResponse -- 'getSuggestedPrices' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "bids" :> ReqBody '[JSON] PutSkuBidsRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'putBidsForBusiness' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "bids" :> ReqBody '[JSON] PutSkuBidsRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'putBidsForCampaign' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> "refresh" :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'refreshFeed' route
    :<|> Protected :> "regions" :> Capture "regionId" Integer :> "children" :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetRegionWithChildrenResponse -- 'searchRegionChildren' route
    :<|> Protected :> "regions" :> Capture "regionId" Integer :> Verb 'GET 200 '[JSON] GetRegionsResponse -- 'searchRegionsById' route
    :<|> Protected :> "regions" :> QueryParam "name" Text :> QueryParam "page_token" Text :> QueryParam "limit" Int :> Verb 'GET 200 '[JSON] GetRegionsResponse -- 'searchRegionsByName' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "file" :> "send" :> QueryParam "chatId" Integer :> ReqBody '[FormUrlEncoded] FormSendFileToChat :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'sendFileToChat' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "chats" :> "message" :> QueryParam "chatId" Integer :> ReqBody '[JSON] SendMessageToChatRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'sendMessageToChat' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> "params" :> ReqBody '[JSON] SetFeedParamsRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'setFeedParams' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "skip-reaction" :> ReqBody '[JSON] SkipGoodsFeedbackReactionRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'skipGoodsFeedbacksReaction' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-prices" :> "updates" :> ReqBody '[JSON] UpdateBusinessPricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updateBusinessPrices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "update" :> ReqBody '[JSON] UpdateCampaignOffersRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updateCampaignOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "comments" :> "update" :> ReqBody '[JSON] UpdateGoodsFeedbackCommentRequest :> Verb 'POST 200 '[JSON] UpdateGoodsFeedbackCommentResponse -- 'updateGoodsFeedbackComment' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-cards" :> "update" :> ReqBody '[JSON] UpdateOfferContentRequest :> Verb 'POST 200 '[JSON] UpdateOfferContentResponse -- 'updateOfferContent' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-mapping-entries" :> "updates" :> ReqBody '[JSON] UpdateOfferMappingEntryRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updateOfferMappingEntries' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-mappings" :> "update" :> ReqBody '[JSON] UpdateOfferMappingsRequest :> Verb 'POST 200 '[JSON] UpdateOfferMappingsResponse -- 'updateOfferMappings' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> "updates" :> ReqBody '[JSON] UpdatePricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updatePrices' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> "offers" :> "update" :> ReqBody '[JSON] UpdatePromoOffersRequest :> Verb 'POST 200 '[JSON] UpdatePromoOffersResponse -- 'updatePromoOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feedback" :> "updates" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "from_date" Day :> Verb 'GET 200 '[JSON] GetFeedbackListResponse -- 'getFeedbackAndCommentUpdates' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> Verb 'GET 200 '[JSON] GetFeedResponse -- 'getFeed' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> "index-logs" :> QueryParam "limit" Int :> QueryParam "published_time_from" UTCTime :> QueryParam "published_time_to" UTCTime :> QueryParam "status" FeedIndexLogsStatusType :> Verb 'GET 200 '[JSON] GetFeedIndexLogsResponse -- 'getFeedIndexLogs' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Verb 'GET 200 '[JSON] GetFeedsResponse -- 'getFeeds' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> "refresh" :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'refreshFeed' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "feeds" :> Capture "feedId" Integer :> "params" :> ReqBody '[JSON] SetFeedParamsRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'setFeedParams' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "comments" :> "delete" :> ReqBody '[JSON] DeleteGoodsFeedbackCommentRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'deleteGoodsFeedbackComment' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "comments" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetGoodsFeedbackCommentsRequest :> Verb 'POST 200 '[JSON] GetGoodsFeedbackCommentsResponse -- 'getGoodsFeedbackComments' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetGoodsFeedbackRequest :> Verb 'POST 200 '[JSON] GetGoodsFeedbackResponse -- 'getGoodsFeedbacks' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "skip-reaction" :> ReqBody '[JSON] SkipGoodsFeedbackReactionRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'skipGoodsFeedbacksReaction' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "goods-feedback" :> "comments" :> "update" :> ReqBody '[JSON] UpdateGoodsFeedbackCommentRequest :> Verb 'POST 200 '[JSON] UpdateGoodsFeedbackCommentResponse -- 'updateGoodsFeedbackComment' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "stats" :> "skus" :> ReqBody '[JSON] GetGoodsStatsRequest :> Verb 'POST 200 '[JSON] GetGoodsStatsResponse -- 'getGoodsStats' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "hidden-offers" :> ReqBody '[JSON] AddHiddenOffersRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'addHiddenOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "hidden-offers" :> "delete" :> ReqBody '[JSON] DeleteHiddenOffersRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'deleteHiddenOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "hidden-offers" :> QueryParam "offer_id" (QueryList 'CommaSeparated (Text)) :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "offset" Int :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetHiddenOffersResponse -- 'getHiddenOffers' route
    :<|> Protected :> "models" :> Capture "modelId" Integer :> QueryParam "regionId" Integer :> QueryParam "currency" CurrencyType :> Verb 'GET 200 '[JSON] GetModelsResponse -- 'getModel' route
    :<|> Protected :> "models" :> Capture "modelId" Integer :> "offers" :> QueryParam "regionId" Integer :> QueryParam "currency" CurrencyType :> QueryParam "orderByPrice" SortOrderType :> QueryParam "count" Int :> QueryParam "page" Int :> Verb 'GET 200 '[JSON] GetModelsOffersResponse -- 'getModelOffers' route
    :<|> Protected :> "models" :> QueryParam "regionId" Integer :> QueryParam "currency" CurrencyType :> ReqBody '[JSON] GetModelsRequest :> Verb 'POST 200 '[JSON] GetModelsResponse -- 'getModels' route
    :<|> Protected :> "models" :> "offers" :> QueryParam "regionId" Integer :> QueryParam "currency" CurrencyType :> QueryParam "orderByPrice" SortOrderType :> ReqBody '[JSON] GetModelsRequest :> Verb 'POST 200 '[JSON] GetModelsOffersResponse -- 'getModelsOffers' route
    :<|> Protected :> "models" :> QueryParam "query" Text :> QueryParam "regionId" Integer :> QueryParam "currency" CurrencyType :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] SearchModelsResponse -- 'searchModels' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-mapping-entries" :> QueryParam "offer_id" (QueryList 'CommaSeparated (Text)) :> QueryParam "shop_sku" (QueryList 'CommaSeparated (Text)) :> QueryParam "mapping_kind" OfferMappingKindType :> QueryParam "status" (QueryList 'CommaSeparated (OfferProcessingStatusType)) :> QueryParam "availability" (QueryList 'CommaSeparated (OfferAvailabilityStatusType)) :> QueryParam "category_id" (QueryList 'CommaSeparated (Int)) :> QueryParam "vendor" (QueryList 'CommaSeparated (Text)) :> QueryParam "page_token" Text :> QueryParam "limit" Int :> Verb 'GET 200 '[JSON] GetOfferMappingEntriesResponse -- 'getOfferMappingEntries' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-mapping-entries" :> "suggestions" :> ReqBody '[JSON] GetSuggestedOfferMappingEntriesRequest :> Verb 'POST 200 '[JSON] GetSuggestedOfferMappingEntriesResponse -- 'getSuggestedOfferMappingEntries' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-mapping-entries" :> "updates" :> ReqBody '[JSON] UpdateOfferMappingEntryRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updateOfferMappingEntries' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "delete" :> ReqBody '[JSON] DeleteCampaignOffersRequest :> Verb 'POST 200 '[JSON] DeleteCampaignOffersResponse -- 'deleteCampaignOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "all" :> QueryParam "feedId" Integer :> QueryParam "chunk" Int :> Verb 'GET 200 '[JSON] GetAllOffersResponse -- 'getAllOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetCampaignOffersRequest :> Verb 'POST 200 '[JSON] GetCampaignOffersResponse -- 'getCampaignOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offers" :> "recommendations" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOfferRecommendationsRequest :> Verb 'POST 200 '[JSON] GetOfferRecommendationsResponse -- 'getOfferRecommendations' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> QueryParam "query" Text :> QueryParam "feedId" Integer :> QueryParam "shopCategoryId" Text :> QueryParam "currency" CurrencyType :> QueryParam "matched" Bool :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetOffersResponse -- 'getOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "update" :> ReqBody '[JSON] UpdateCampaignOffersRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updateCampaignOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "business-buyer" :> Verb 'POST 200 '[JSON] GetBusinessBuyerInfoResponse -- 'getOrderBusinessBuyerInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "documents" :> Verb 'POST 200 '[JSON] GetBusinessDocumentsInfoResponse -- 'getOrderBusinessDocumentsInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "buyer" :> Verb 'GET 200 '[JSON] GetOrderBuyerInfoResponse -- 'getOrderBuyerInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "date" :> ReqBody '[JSON] SetOrderDeliveryDateRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'setOrderDeliveryDate' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "track" :> ReqBody '[JSON] SetOrderDeliveryTrackCodeRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'setOrderDeliveryTrackCode' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "storage-limit" :> ReqBody '[JSON] UpdateOrderStorageLimitRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'updateOrderStorageLimit' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "verifyEac" :> ReqBody '[JSON] VerifyOrderEacRequest :> Verb 'PUT 200 '[JSON] VerifyOrderEacResponse -- 'verifyOrderEac' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "shipments" :> Capture "shipmentId" Integer :> "boxes" :> Capture "boxId" Integer :> "label" :> QueryParam "format" PageFormatType :> Verb 'GET 200 '[JSON] FilePath -- 'generateOrderLabel' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "labels" :> QueryParam "format" PageFormatType :> Verb 'GET 200 '[JSON] FilePath -- 'generateOrderLabels' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "labels" :> "data" :> Verb 'GET 200 '[JSON] GetOrderLabelsDataResponse -- 'getOrderLabelsData' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "cancellation" :> "accept" :> ReqBody '[JSON] AcceptOrderCancellationRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'acceptOrderCancellation' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> Verb 'GET 200 '[JSON] GetOrderResponse -- 'getOrder' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> QueryParam "orderIds" (QueryList 'CommaSeparated (Integer)) :> QueryParam "status" (QueryList 'CommaSeparated (OrderStatusType)) :> QueryParam "substatus" (QueryList 'CommaSeparated (OrderSubstatusType)) :> QueryParam "fromDate" Day :> QueryParam "toDate" Day :> QueryParam "supplierShipmentDateFrom" Day :> QueryParam "supplierShipmentDateTo" Day :> QueryParam "updatedAtFrom" UTCTime :> QueryParam "updatedAtTo" UTCTime :> QueryParam "dispatchType" OrderDeliveryDispatchType :> QueryParam "fake" Bool :> QueryParam "hasCis" Bool :> QueryParam "onlyWaitingForCancellationApprove" Bool :> QueryParam "onlyEstimatedDelivery" Bool :> QueryParam "buyerType" OrderBuyerType :> QueryParam "page" Int :> QueryParam "pageSize" Int :> QueryParam "page_token" Text :> QueryParam "limit" Int :> Verb 'GET 200 '[JSON] GetOrdersResponse -- 'getOrders' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "deliverDigitalGoods" :> ReqBody '[JSON] ProvideOrderDigitalCodesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'provideOrderDigitalCodes' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "identifiers" :> ReqBody '[JSON] ProvideOrderItemIdentifiersRequest :> Verb 'PUT 200 '[JSON] ProvideOrderItemIdentifiersResponse -- 'provideOrderItemIdentifiers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "boxes" :> ReqBody '[JSON] SetOrderBoxLayoutRequest :> Verb 'PUT 200 '[JSON] SetOrderBoxLayoutResponse -- 'setOrderBoxLayout' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "delivery" :> "shipments" :> Capture "shipmentId" Integer :> "boxes" :> ReqBody '[JSON] SetOrderShipmentBoxesRequest :> Verb 'PUT 200 '[JSON] SetOrderShipmentBoxesResponse -- 'setOrderShipmentBoxes' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "items" :> ReqBody '[JSON] UpdateOrderItemRequest :> Verb 'PUT 200 '[JSON] NoContent -- 'updateOrderItems' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "status" :> ReqBody '[JSON] UpdateOrderStatusRequest :> Verb 'PUT 200 '[JSON] UpdateOrderStatusResponse -- 'updateOrderStatus' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> "status-update" :> ReqBody '[JSON] UpdateOrderStatusesRequest :> Verb 'POST 200 '[JSON] UpdateOrderStatusesResponse -- 'updateOrderStatuses' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "stats" :> "orders" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetOrdersStatsRequest :> Verb 'POST 200 '[JSON] GetOrdersStatsResponse -- 'getOrdersStats' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "outlets" :> "licenses" :> QueryParam "ids" (QueryList 'CommaSeparated (Integer)) :> Verb 'DELETE 200 '[JSON] EmptyApiResponse -- 'deleteOutletLicenses' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "outlets" :> "licenses" :> QueryParam "outletIds" (QueryList 'CommaSeparated (Integer)) :> QueryParam "ids" (QueryList 'CommaSeparated (Integer)) :> Verb 'GET 200 '[JSON] GetOutletLicensesResponse -- 'getOutletLicenses' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "outlets" :> "licenses" :> ReqBody '[JSON] UpdateOutletLicenseRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updateOutletLicenses' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "outlets" :> ReqBody '[JSON] ChangeOutletRequest :> Verb 'POST 200 '[JSON] CreateOutletResponse -- 'createOutlet' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "outlets" :> Capture "outletId" Integer :> Verb 'DELETE 200 '[JSON] EmptyApiResponse -- 'deleteOutlet' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "outlets" :> Capture "outletId" Integer :> Verb 'GET 200 '[JSON] GetOutletResponse -- 'getOutlet' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "outlets" :> QueryParam "page_token" Text :> QueryParam "region_id" Integer :> QueryParam "shop_outlet_code" Text :> QueryParam "regionId" Integer :> Verb 'GET 200 '[JSON] GetOutletsResponse -- 'getOutlets' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "outlets" :> Capture "outletId" Integer :> ReqBody '[JSON] ChangeOutletRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'updateOutlet' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "price-quarantine" :> "confirm" :> ReqBody '[JSON] ConfirmPricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'confirmBusinessPrices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "price-quarantine" :> "confirm" :> ReqBody '[JSON] ConfirmPricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'confirmCampaignPrices' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "price-quarantine" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetQuarantineOffersRequest :> Verb 'POST 200 '[JSON] GetQuarantineOffersResponse -- 'getBusinessQuarantineOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "price-quarantine" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetQuarantineOffersRequest :> Verb 'POST 200 '[JSON] GetQuarantineOffersResponse -- 'getCampaignQuarantineOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "archived" Bool :> Verb 'GET 200 '[JSON] GetPricesResponse -- 'getPrices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetPricesByOfferIdsRequest :> Verb 'POST 200 '[JSON] GetPricesByOfferIdsResponse -- 'getPricesByOfferIds' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> "suggestions" :> ReqBody '[JSON] SuggestPricesRequest :> Verb 'POST 200 '[JSON] SuggestPricesResponse -- 'getSuggestedPrices' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "offer-prices" :> "updates" :> ReqBody '[JSON] UpdateBusinessPricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updateBusinessPrices' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offer-prices" :> "updates" :> ReqBody '[JSON] UpdatePricesRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'updatePrices' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> "offers" :> "delete" :> ReqBody '[JSON] DeletePromoOffersRequest :> Verb 'POST 200 '[JSON] DeletePromoOffersResponse -- 'deletePromoOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> "offers" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetPromoOffersRequest :> Verb 'POST 200 '[JSON] GetPromoOffersResponse -- 'getPromoOffers' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> ReqBody '[JSON] GetPromosRequest :> Verb 'POST 200 '[JSON] GetPromosResponse -- 'getPromos' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "promos" :> "offers" :> "update" :> ReqBody '[JSON] UpdatePromoOffersRequest :> Verb 'POST 200 '[JSON] UpdatePromoOffersResponse -- 'updatePromoOffers' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "ratings" :> "quality" :> "details" :> Verb 'POST 200 '[JSON] GetQualityRatingDetailsResponse -- 'getQualityRatingDetails' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "ratings" :> "quality" :> ReqBody '[JSON] GetQualityRatingRequest :> Verb 'POST 200 '[JSON] GetQualityRatingResponse -- 'getQualityRatings' route
    :<|> Protected :> "regions" :> Capture "regionId" Integer :> "children" :> QueryParam "page" Int :> QueryParam "pageSize" Int :> Verb 'GET 200 '[JSON] GetRegionWithChildrenResponse -- 'searchRegionChildren' route
    :<|> Protected :> "regions" :> Capture "regionId" Integer :> Verb 'GET 200 '[JSON] GetRegionsResponse -- 'searchRegionsById' route
    :<|> Protected :> "regions" :> QueryParam "name" Text :> QueryParam "page_token" Text :> QueryParam "limit" Int :> Verb 'GET 200 '[JSON] GetRegionsResponse -- 'searchRegionsByName' route
    :<|> Protected :> "reports" :> "boost-consolidated" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateBoostConsolidatedRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateBoostConsolidatedReport' route
    :<|> Protected :> "reports" :> "competitors-position" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateCompetitorsPositionReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateCompetitorsPositionReport' route
    :<|> Protected :> "reports" :> "goods-feedback" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateGoodsFeedbackRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateGoodsFeedbackReport' route
    :<|> Protected :> "reports" :> "goods-movement" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateGoodsMovementReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateGoodsMovementReport' route
    :<|> Protected :> "reports" :> "goods-realization" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateGoodsRealizationReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateGoodsRealizationReport' route
    :<|> Protected :> "reports" :> "goods-turnover" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateGoodsTurnoverRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateGoodsTurnoverReport' route
    :<|> Protected :> "reports" :> "documents" :> "labels" :> "generate" :> QueryParam "format" PageFormatType :> ReqBody '[JSON] GenerateMassOrderLabelsRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateMassOrderLabelsReport' route
    :<|> Protected :> "reports" :> "prices" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GeneratePricesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generatePricesReport' route
    :<|> Protected :> "reports" :> "shelf-statistics" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateShelfsStatisticsRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateShelfsStatisticsReport' route
    :<|> Protected :> "reports" :> "documents" :> "shipment-list" :> "generate" :> ReqBody '[JSON] GenerateShipmentListDocumentReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateShipmentListDocumentReport' route
    :<|> Protected :> "reports" :> "shows-sales" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateShowsSalesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateShowsSalesReport' route
    :<|> Protected :> "reports" :> "stocks-on-warehouses" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateStocksOnWarehousesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateStocksOnWarehousesReport' route
    :<|> Protected :> "reports" :> "united-marketplace-services" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateUnitedMarketplaceServicesReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateUnitedMarketplaceServicesReport' route
    :<|> Protected :> "reports" :> "united-netting" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateUnitedNettingReportRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateUnitedNettingReport' route
    :<|> Protected :> "reports" :> "united-orders" :> "generate" :> QueryParam "format" ReportFormatType :> ReqBody '[JSON] GenerateUnitedOrdersRequest :> Verb 'POST 200 '[JSON] GenerateReportResponse -- 'generateUnitedOrdersReport' route
    :<|> Protected :> "reports" :> "info" :> Capture "reportId" Text :> Verb 'GET 200 '[JSON] GetReportInfoResponse -- 'getReportInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "returns" :> Capture "returnId" Integer :> Verb 'GET 200 '[JSON] GetReturnResponse -- 'getReturn' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "returns" :> Capture "returnId" Integer :> "application" :> Verb 'GET 200 '[JSON] FilePath -- 'getReturnApplication' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "returns" :> Capture "returnId" Integer :> "decision" :> Capture "itemId" Integer :> "image" :> Capture "imageHash" Text :> Verb 'GET 200 '[JSON] FilePath -- 'getReturnPhoto' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "returns" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> QueryParam "orderIds" (QueryList 'CommaSeparated (Integer)) :> QueryParam "statuses" (QueryList 'CommaSeparated (RefundStatusType)) :> QueryParam "type" ReturnType :> QueryParam "fromDate" Day :> QueryParam "toDate" Day :> QueryParam "from_date" Day :> QueryParam "to_date" Day :> Verb 'GET 200 '[JSON] GetReturnsResponse -- 'getReturns' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "returns" :> Capture "returnId" Integer :> "decision" :> ReqBody '[JSON] SetReturnDecisionRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'setReturnDecision' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "orders" :> Capture "orderId" Integer :> "returns" :> Capture "returnId" Integer :> "decision" :> "submit" :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'submitReturnDecision' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> "confirm" :> ReqBody '[JSON] ConfirmShipmentRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'confirmShipment' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> "act" :> Verb 'GET 200 '[JSON] FilePath -- 'downloadShipmentAct' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> "discrepancy-act" :> Verb 'GET 200 '[JSON] FilePath -- 'downloadShipmentDiscrepancyAct' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> "inbound-act" :> Verb 'GET 200 '[JSON] FilePath -- 'downloadShipmentInboundAct' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> "pallet" :> "labels" :> QueryParam "format" ShipmentPalletLabelPageFormatType :> Verb 'GET 200 '[JSON] FilePath -- 'downloadShipmentPalletLabels' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "shipments" :> "reception-transfer-act" :> QueryParam "warehouse_id" Int :> Verb 'GET 200 '[JSON] FilePath -- 'downloadShipmentReceptionTransferAct' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> "transportation-waybill" :> Verb 'GET 200 '[JSON] FilePath -- 'downloadShipmentTransportationWaybill' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> QueryParam "cancelledOrders" Bool :> Verb 'GET 200 '[JSON] GetShipmentResponse -- 'getShipment' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> "orders" :> "info" :> Verb 'GET 200 '[JSON] GetShipmentOrdersInfoResponse -- 'getShipmentOrdersInfo' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] SearchShipmentsRequest :> Verb 'PUT 200 '[JSON] SearchShipmentsResponse -- 'searchShipments' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> "pallets" :> ReqBody '[JSON] SetShipmentPalletsCountRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'setShipmentPalletsCount' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "first-mile" :> "shipments" :> Capture "shipmentId" Integer :> "orders" :> "transfer" :> ReqBody '[JSON] TransferOrdersFromShipmentRequest :> Verb 'POST 200 '[JSON] EmptyApiResponse -- 'transferOrdersFromShipment' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "stocks" :> QueryParam "page_token" Text :> QueryParam "limit" Int :> ReqBody '[JSON] GetWarehouseStocksRequest :> Verb 'POST 200 '[JSON] GetWarehouseStocksResponse -- 'getStocks' route
    :<|> Protected :> "campaigns" :> Capture "campaignId" Integer :> "offers" :> "stocks" :> ReqBody '[JSON] UpdateStocksRequest :> Verb 'PUT 200 '[JSON] EmptyApiResponse -- 'updateStocks' route
    :<|> Protected :> "tariffs" :> "calculate" :> ReqBody '[JSON] CalculateTariffsRequest :> Verb 'POST 200 '[JSON] CalculateTariffsResponse -- 'calculateTariffs' route
    :<|> Protected :> "warehouses" :> Verb 'GET 200 '[JSON] GetFulfillmentWarehousesResponse -- 'getFulfillmentWarehouses' route
    :<|> Protected :> "businesses" :> Capture "businessId" Integer :> "warehouses" :> Verb 'GET 200 '[JSON] GetWarehousesResponse -- 'getWarehouses' route
    :<|> Raw


-- | Server or client configuration, specifying the host and port to query or serve on.
data Config = Config
  { configUrl :: String  -- ^ scheme://hostname:port/path, e.g. "http://localhost:8080/"
  } deriving (Eq, Ord, Show, Read)


-- | Custom exception type for our errors.
newtype ПартнерскийAPIМаркетаClientError = ПартнерскийAPIМаркетаClientError ClientError
  deriving (Show, Exception)
-- | Configuration, specifying the full url of the service.


-- | Backend for ПартнерскийAPIМаркета.
-- The backend can be used both for the client and the server. The client generated from the ПартнерскийAPIМаркета OpenAPI spec
-- is a backend that executes actions by sending HTTP requests (see @createПартнерскийAPIМаркетаClient@). Alternatively, provided
-- a backend, the API can be served using @runПартнерскийAPIМаркетаMiddlewareServer@.
data ПартнерскийAPIМаркетаBackend a m = ПартнерскийAPIМаркетаBackend
  { getBidsInfoForBusiness :: a -> Integer -> Maybe Text -> Maybe Int -> GetBidsInfoRequest -> m GetBidsInfoResponse{- ^ Возвращает значения ставок для заданных товаров.  {% note warning \"\" %}  В ответе возвращаются значения только тех ставок, которые вы установили через запрос [PUT businesses/{businessId}/bids](../../reference/bids/putBidsForBusiness.md). Получить информацию по кампаниям, созданным в кабинете, не получится.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , getBidsRecommendations :: a -> Integer -> GetBidsRecommendationsRequest -> m GetBidsRecommendationsResponse{- ^ Возвращает рекомендованные ставки для заданных товаров — такие ставки обеспечивают вашим предложениям определенную долю показов, если цена не превышает рекомендованную.  Для одного товара может возвращаться одна рекомендованная ставка или несколько. Во втором случае разные ставки предназначены для достижения разной доли показов.  Если товар только добавлен в каталог, но пока не продается, рекомендованной ставки для него не будет.  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , putBidsForBusiness :: a -> Integer -> PutSkuBidsRequest -> m EmptyApiResponse{- ^ Запускает буст продаж — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  {% cut \"Как в кабинете выглядит кампания, созданная через API\" %}  ![](../../_images/api-boost.png)  {% endcut %}  При первом использовании запроса Маркет: создаст единую на все магазины бизнес-аккаунта кампанию, добавит в нее товары с указанными ставками, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же созданной через API кампанией. Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. Другими кампаниями управлять через API не получится. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , putBidsForCampaign :: a -> Integer -> PutSkuBidsRequest -> m EmptyApiResponse{- ^ Запускает буст продаж в указанном магазине — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  При первом использовании запроса Маркет: создаст кампанию, добавит в нее товары с указанными ставками для заданного магазина, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же кампанией, созданной через этот запрос или [PUT businesses/{businessId}/bids](/reference/bids/putBidsForBusiness). Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , addOffersToArchive :: a -> Integer -> AddOffersToArchiveRequest -> m AddOffersToArchiveResponse{- ^ Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.  {% note warning \"В архив нельзя отправить товар, который хранится на складе Маркета\" %}  Вначале такой товар нужно распродать или вывезти.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , deleteOffers :: a -> Integer -> DeleteOffersRequest -> m DeleteOffersResponse{- ^ Удаляет товары из каталога.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , deleteOffersFromArchive :: a -> Integer -> DeleteOffersFromArchiveRequest -> m DeleteOffersFromArchiveResponse{- ^ Восстанавливает товары из архива.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , getOfferMappings :: a -> Integer -> Maybe Text -> Maybe Int -> GetOfferMappingsRequest -> m GetOfferMappingsResponse{- ^ Возвращает список товаров в каталоге, их категории на Маркете и характеристики каждого товара.  Можно использовать тремя способами: * задать список интересующих SKU; * задать фильтр — в этом случае результаты возвращаются постранично; * не передавать тело запроса, чтобы получить список всех товаров в каталоге.  |**⚙️ Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе| |-|  -}
  , getSuggestedOfferMappings :: a -> Integer -> GetSuggestedOfferMappingsRequest -> m GetSuggestedOfferMappingsResponse{- ^ Возвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.  Пользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточки по предоставленным вами данным.  **Как пользоваться запросом**  1. Передайте Маркету список товаров, которые нужно проверить. 2. В ответ вы получите список SKU на Маркете с расшифровкой: названием, идентификатором модели, категорией. 3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида `https://market.yandex.ru/product/<marketModelId>?sku=<marketSku>`. 4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать `marketSKU`, который ему подходит по вашему мнению.  {% note info \"𝓠 Как определить `marketSku` товара, найденного на Маркете?\" %}  𝓐 Он есть в адресе страницы товара — расположен после `sku=`.  Например, `https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016`  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в час| |-|  -}
  , updateOfferMappings :: a -> Integer -> UpdateOfferMappingsRequest -> m UpdateOfferMappingsResponse{- ^ Добавляет товары в каталог, передает их категории на Маркете и характеристики, необходимые для этих категории. Также редактирует информацию об уже имеющихся товарах.  Список категорий Маркета можно получить с помощью запроса [POST categories/tree](../../reference/categories/getCategoriesTree.md), а характеристики товаров по категориям с помощью [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).  Чтобы **добавить новый товар**, передайте его с новым идентификатором, который раньше никогда не использовался в каталоге. Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой. Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**SKU на Маркете**) в поле `marketSKU`.  Для **новых товаров** обязательно укажите параметры: `offerId`, `name`, `marketCategoryId` или `category`, `pictures`, `vendor`, `description`.  Чтобы **отредактировать информацию о товаре**, передайте новые данные, указав в `offerId` соответствующий **ваш SKU**. Поля, в которых ничего не меняется, можно не передавать.  Чтобы **удалить характеристики**, которые заданы в параметрах с типом `string`, передайте пустое значение.  Параметр `offerId` должен быть **уникальным** для всех товаров, которые вы передаете.  {% note warning \"Правила использования SKU\" %}  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , getBusinessSettings :: a -> Integer -> m GetBusinessSettingsResponse{- ^ Возвращает информацию о настройках кабинета, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaign :: a -> Integer -> m GetCampaignResponse{- ^ Возвращает информацию о магазине. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaignLogins :: a -> Integer -> m GetCampaignLoginsResponse{- ^ Возвращает список логинов, у которых есть доступ к магазину. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaignRegion :: a -> Integer -> m GetCampaignRegionResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [GET campaigns/{campaignId}/settings](../../reference/campaigns/getCampaignSettings.md).  {% endnote %}  Возвращает регион, в котором находится магазин. |**⚙️ Лимит:** 5 000 запросов в час| |-|  -}
  , getCampaignSettings :: a -> Integer -> m GetCampaignSettingsResponse{- ^ Возвращает информацию о настройках магазина, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaigns :: a -> Maybe Int -> Maybe Int -> m GetCampaignsResponse{- ^ Возвращает список магазинов, к которым имеет доступ пользователь — владелец авторизационного токена, использованного в запросе. Для агентских пользователей список состоит из подагентских магазинов. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaignsByLogin :: a -> Text -> Maybe Int -> Maybe Int -> m GetCampaignsResponse{- ^ Возвращает список магазинов, к которым у пользователя с указанным логином есть доступ. |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , getCategoriesMaxSaleQuantum :: a -> GetCategoriesMaxSaleQuantumRequest -> m GetCategoriesMaxSaleQuantumResponse{- ^ Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getCategoriesTree :: a -> GetCategoriesRequest -> m GetCategoriesResponse{- ^ Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , createChat :: a -> Integer -> CreateChatRequest -> m CreateChatResponse{- ^ Создает новый чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getChatHistory :: a -> Integer -> Maybe Integer -> Maybe Text -> Maybe Int -> GetChatHistoryRequest -> m GetChatHistoryResponse{- ^ Возвращает историю сообщений в чате с покупателем.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getChats :: a -> Integer -> Maybe Text -> Maybe Int -> GetChatsRequest -> m GetChatsResponse{- ^ Возвращает ваши чаты с покупателями.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , sendFileToChat :: a -> Integer -> Maybe Integer -> FormSendFileToChat -> m EmptyApiResponse{- ^ Отправляет файл в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , sendMessageToChat :: a -> Integer -> Maybe Integer -> SendMessageToChatRequest -> m EmptyApiResponse{- ^ Отправляет сообщение в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCategoryContentParameters :: a -> Integer -> m GetCategoryContentParametersResponse{- ^ Возвращает список характеристик с допустимыми значениями для заданной категории.  |**⚙️ Лимит:** 50 категорий в минуту | |-|  -}
  , getOfferCardsContentStatus :: a -> Integer -> Maybe Text -> Maybe Int -> GetOfferCardsContentStatusRequest -> m GetOfferCardsContentStatusResponse{- ^ Возвращает сведения о состоянии контента для заданных товаров:  * создана ли карточка товара и в каком она статусе; * заполненность карточки в процентах; * переданные характеристики товаров; * есть ли ошибки или предупреждения, связанные с контентом; * рекомендации по заполнению карточки.  |**⚙️ Лимит:** 600 запросов в минуту| |-|  -}
  , updateOfferContent :: a -> Integer -> UpdateOfferContentRequest -> m UpdateOfferContentResponse{- ^ Редактирует характеристики товара, которые специфичны для категории, к которой он относится.  {% note warning \"Здесь только то, что относится к конкретной категории\" %}  Если вам нужно изменить основные параметры товара (название, описание, изображения, видео, производитель, штрихкод), воспользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Чтобы удалить характеристики, которые заданы в параметрах с типом `string`, передайте пустое значение.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , acceptOrderCancellation :: a -> Integer -> Integer -> AcceptOrderCancellationRequest -> m EmptyApiResponse{- ^ Подтверждает или отклоняет запрос покупателя на отмену заказа, который передан службе доставки.  Покупатель может отменить заказ в течение его обработки или доставки. Если заказ еще обрабатывается (имеет статус PROCESSING), вам не нужно подтверждать отмену заказа — он будет отменен автоматически.  Если заказ уже передан службе доставки (принимает статус `DELIVERY` или `PICKUP`) и пользователь отменил его, вы можете предупредить службу об отмене в течение 48 часов. Если служба доставки узнала об отмене до передачи заказа покупателю, подтвердите отмену с помощью запроса [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation.md). Если заказ уже доставлен, отклоните отмену с помощью этого же запроса. Тогда у покупателя останется заказ, и деньги за него возвращаться не будут.  Чтобы узнать, какие заказы были отменены в статусе `DELIVERY` или `PICKUP`, отправьте запрос [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md). В его URL добавьте входной параметр `onlyWaitingForCancellationApprove=true`. Вы также можете узнать об отмененных заказах в кабинете или через почту — на нее придет уведомление об отмене.  Если в течение 48 часов вы не подтвердите или отклоните отмену, заказ будет отменен автоматически.  |**⚙️ Лимит:** 500 запросов в час| |-|  -}
  , addHiddenOffers :: a -> Integer -> AddHiddenOffersRequest -> m EmptyApiResponse{- ^ Скрывает товары магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , addOffersToArchive :: a -> Integer -> AddOffersToArchiveRequest -> m AddOffersToArchiveResponse{- ^ Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.  {% note warning \"В архив нельзя отправить товар, который хранится на складе Маркета\" %}  Вначале такой товар нужно распродать или вывезти.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , calculateTariffs :: a -> CalculateTariffsRequest -> m CalculateTariffsResponse{- ^ Рассчитывает стоимость услуг Маркета для товаров с заданными параметрами. Порядок товаров в запросе и ответе сохраняется, чтобы определить, для какого товара рассчитана стоимость услуги.  Обратите внимание: калькулятор осуществляет примерные расчеты. Финальная стоимость для каждого заказа зависит от предоставленных услуг.  В запросе можно указать либо параметр `campaignId`, либо `sellingProgram`. Совместное использование параметров приведет к ошибке.  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , confirmBusinessPrices :: a -> Integer -> ConfirmPricesRequest -> m EmptyApiResponse{- ^ Подтверждает основную цену на товары, которые попали в карантин, и удаляет их из карантина.  Основная цена задается в каталоге и действует во всех магазинах кабинета.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , confirmCampaignPrices :: a -> Integer -> ConfirmPricesRequest -> m EmptyApiResponse{- ^ Подтверждает в заданном магазине цену на товары, которые попали в карантин, и удаляет их из карантина.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , createChat :: a -> Integer -> CreateChatRequest -> m CreateChatResponse{- ^ Создает новый чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , createOutlet :: a -> Integer -> ChangeOutletRequest -> m CreateOutletResponse{- ^ Создает точку продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-|  -}
  , deleteCampaignOffers :: a -> Integer -> DeleteCampaignOffersRequest -> m DeleteCampaignOffersResponse{- ^ Удаляет заданные товары из заданного магазина.  {% note warning \"Запрос удаляет товары именно из конкретного магазина\" %}  На продажи в других магазинах и на наличие товара в общем каталоге он не влияет.  {% endnote %}  Товар не получится удалить, если он хранится на складах Маркета.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , deleteGoodsFeedbackComment :: a -> Integer -> DeleteGoodsFeedbackCommentRequest -> m EmptyApiResponse{- ^ Удаляет комментарий магазина.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , deleteHiddenOffers :: a -> Integer -> DeleteHiddenOffersRequest -> m EmptyApiResponse{- ^ Возобновляет показ скрытых вами товаров магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , deleteOffers :: a -> Integer -> DeleteOffersRequest -> m DeleteOffersResponse{- ^ Удаляет товары из каталога.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , deleteOffersFromArchive :: a -> Integer -> DeleteOffersFromArchiveRequest -> m DeleteOffersFromArchiveResponse{- ^ Восстанавливает товары из архива.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , deleteOutlet :: a -> Integer -> Integer -> m EmptyApiResponse{- ^ Удаляет точку продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-|  -}
  , deleteOutletLicenses :: a -> Integer -> Maybe [Integer] -> m EmptyApiResponse{- ^ Удаляет информацию о лицензиях для точек продаж.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-|  -}
  , deletePromoOffers :: a -> Integer -> DeletePromoOffersRequest -> m DeletePromoOffersResponse{- ^ Убирает товары из акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , generateBoostConsolidatedReport :: a -> Maybe ReportFormatType -> GenerateBoostConsolidatedRequest -> m GenerateReportResponse{- ^ Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateCompetitorsPositionReport :: a -> Maybe ReportFormatType -> GenerateCompetitorsPositionReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \"Значение -1 в отчете\" %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-|  -}
  , generateGoodsFeedbackReport :: a -> Maybe ReportFormatType -> GenerateGoodsFeedbackRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateMassOrderLabelsReport :: a -> Maybe PageFormatType -> GenerateMassOrderLabelsRequest -> m GenerateReportResponse{- ^ Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , generateOrderLabel :: a -> Integer -> Integer -> Integer -> Integer -> Maybe PageFormatType -> m FilePath{- ^ Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , generateOrderLabels :: a -> Integer -> Integer -> Maybe PageFormatType -> m FilePath{- ^ Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , generatePricesReport :: a -> Maybe ReportFormatType -> GeneratePricesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateShelfsStatisticsReport :: a -> Maybe ReportFormatType -> GenerateShelfsStatisticsRequest -> m GenerateReportResponse{- ^ Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateShowsSalesReport :: a -> Maybe ReportFormatType -> GenerateShowsSalesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-|  -}
  , generateStocksOnWarehousesReport :: a -> Maybe ReportFormatType -> GenerateStocksOnWarehousesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateUnitedMarketplaceServicesReport :: a -> Maybe ReportFormatType -> GenerateUnitedMarketplaceServicesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |-----------------------------|---------------------------------| |По дате начисления услуги    |`dateFrom` и `dateTo`            | |По дате формирования акта    |`year` и `month`                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateUnitedNettingReport :: a -> Maybe ReportFormatType -> GenerateUnitedNettingReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |-------------------------|---------------------------------------| |О платежах за период     |`dateFrom` и `dateTo`                  | |О платежном поручении    |`bankOrderId` и `bankOrderDateTime`    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateUnitedOrdersReport :: a -> Maybe ReportFormatType -> GenerateUnitedOrdersRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \"\" %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , getAllOffers :: a -> Integer -> Maybe Integer -> Maybe Int -> m GetAllOffersResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет максимально быстро получить информацию обо всех предложениях магазина, размещенных на Маркете. Возвращает результат в виде сегментов нефиксированного размера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Яндекс Маркета, с которой соотнесено предложение, а также аукционные ставки на него.  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — среднее количество таваров в каталоге за неделю * 25)  -}
  , getBidsInfoForBusiness :: a -> Integer -> Maybe Text -> Maybe Int -> GetBidsInfoRequest -> m GetBidsInfoResponse{- ^ Возвращает значения ставок для заданных товаров.  {% note warning \"\" %}  В ответе возвращаются значения только тех ставок, которые вы установили через запрос [PUT businesses/{businessId}/bids](../../reference/bids/putBidsForBusiness.md). Получить информацию по кампаниям, созданным в кабинете, не получится.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , getBidsRecommendations :: a -> Integer -> GetBidsRecommendationsRequest -> m GetBidsRecommendationsResponse{- ^ Возвращает рекомендованные ставки для заданных товаров — такие ставки обеспечивают вашим предложениям определенную долю показов, если цена не превышает рекомендованную.  Для одного товара может возвращаться одна рекомендованная ставка или несколько. Во втором случае разные ставки предназначены для достижения разной доли показов.  Если товар только добавлен в каталог, но пока не продается, рекомендованной ставки для него не будет.  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , getBusinessQuarantineOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetQuarantineOffersRequest -> m GetQuarantineOffersResponse{- ^ Возвращает список товаров, которые находятся в карантине по **основной цене**. Основная цена задается в каталоге и действует во всех магазинах кабинета.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , getBusinessSettings :: a -> Integer -> m GetBusinessSettingsResponse{- ^ Возвращает информацию о настройках кабинета, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaign :: a -> Integer -> m GetCampaignResponse{- ^ Возвращает информацию о магазине. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaignLogins :: a -> Integer -> m GetCampaignLoginsResponse{- ^ Возвращает список логинов, у которых есть доступ к магазину. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaignOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetCampaignOffersRequest -> m GetCampaignOffersResponse{- ^ Возвращает список товаров, которые размещены в заданном магазине. Для каждого товара указываются параметры размещения.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , getCampaignQuarantineOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetQuarantineOffersRequest -> m GetQuarantineOffersResponse{- ^ Возвращает список товаров, которые находятся в карантине по цене, установленной в заданном магазине.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , getCampaignRegion :: a -> Integer -> m GetCampaignRegionResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [GET campaigns/{campaignId}/settings](../../reference/campaigns/getCampaignSettings.md).  {% endnote %}  Возвращает регион, в котором находится магазин. |**⚙️ Лимит:** 5 000 запросов в час| |-|  -}
  , getCampaignSettings :: a -> Integer -> m GetCampaignSettingsResponse{- ^ Возвращает информацию о настройках магазина, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaigns :: a -> Maybe Int -> Maybe Int -> m GetCampaignsResponse{- ^ Возвращает список магазинов, к которым имеет доступ пользователь — владелец авторизационного токена, использованного в запросе. Для агентских пользователей список состоит из подагентских магазинов. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaignsByLogin :: a -> Text -> Maybe Int -> Maybe Int -> m GetCampaignsResponse{- ^ Возвращает список магазинов, к которым у пользователя с указанным логином есть доступ. |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , getCategoriesMaxSaleQuantum :: a -> GetCategoriesMaxSaleQuantumRequest -> m GetCategoriesMaxSaleQuantumResponse{- ^ Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getCategoriesTree :: a -> GetCategoriesRequest -> m GetCategoriesResponse{- ^ Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getCategoryContentParameters :: a -> Integer -> m GetCategoryContentParametersResponse{- ^ Возвращает список характеристик с допустимыми значениями для заданной категории.  |**⚙️ Лимит:** 50 категорий в минуту | |-|  -}
  , getChatHistory :: a -> Integer -> Maybe Integer -> Maybe Text -> Maybe Int -> GetChatHistoryRequest -> m GetChatHistoryResponse{- ^ Возвращает историю сообщений в чате с покупателем.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getChats :: a -> Integer -> Maybe Text -> Maybe Int -> GetChatsRequest -> m GetChatsResponse{- ^ Возвращает ваши чаты с покупателями.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getDeliveryServices :: a -> m GetDeliveryServicesResponse{- ^ Возвращает справочник служб доставки: идентификаторы и наименования. |**⚙️ Лимит:** 5 000 запросов в час| |-|  -}
  , getFeed :: a -> Integer -> Integer -> m GetFeedResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает информацию о прайс-листе, размещенном на Маркете для заданного магазина. Также ресурс возвращает результаты автоматических проверок прайс-листа. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getFeedIndexLogs :: a -> Integer -> Integer -> Maybe Int -> Maybe UTCTime -> Maybe UTCTime -> Maybe FeedIndexLogsStatusType -> m GetFeedIndexLogsResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает отчет по индексации прайс-листа для заданного магазина. Отчет позволяет получить статистику загрузки прайс-листа и результаты его автоматических проверок.  Данные в отчете возвращаются в порядке убывания значений параметра `generationId`.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getFeedbackAndCommentUpdates :: a -> Integer -> Maybe Text -> Maybe Int -> Maybe Day -> m GetFeedbackListResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает новые и обновленные отзывы о магазине на Маркете.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов. Выходные данные содержат идентификатор следующей страницы.  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , getFeeds :: a -> Integer -> m GetFeedsResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает список прайс-листов, размещенных на Маркете для магазина. Также ресурс возвращает результаты автоматических проверок прайс-листов. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getGoodsFeedbackComments :: a -> Integer -> Maybe Text -> Maybe Int -> GetGoodsFeedbackCommentsRequest -> m GetGoodsFeedbackCommentsResponse{- ^ Возвращает комментарии к отзыву.  Результаты возвращаются постранично, одна страница содержит не более 20 комментариев.  Комментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getGoodsFeedbacks :: a -> Integer -> Maybe Text -> Maybe Int -> GetGoodsFeedbackRequest -> m GetGoodsFeedbackResponse{- ^ Возвращает все отзывы о товарах продавца по указанным фильтрам.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов.  Отзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getGoodsStats :: a -> Integer -> GetGoodsStatsRequest -> m GetGoodsStatsResponse{- ^ Возвращает подробный отчет по товарам, которые вы разместили на Маркете. С помощью отчета вы можете узнать, например, об остатках на складе, об условиях хранения ваших товаров и т. д.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , getHiddenOffers :: a -> Integer -> Maybe [Text] -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> m GetHiddenOffersResponse{- ^ Возвращает список скрытых вами товаров для заданного магазина.  В списке будут товары, скрытые любым способом — по API, с помощью YML-фида, в кабинете и так далее.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , getModel :: a -> Integer -> Maybe Integer -> Maybe CurrencyType -> m GetModelsResponse{- ^ Возвращает информацию о модели товара.  Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)  -}
  , getModelOffers :: a -> Integer -> Maybe Integer -> Maybe CurrencyType -> Maybe SortOrderType -> Maybe Int -> Maybe Int -> m GetModelsOffersResponse{- ^ Возвращает информацию о первых десяти предложениях, расположенных на карточке модели.  Предложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.  Для групповых моделей метод не поддерживается. Идентификатор групповой модели игнорируется.  Для методов `GET models/{modelId}/offers` и `POST models/offers` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)  -}
  , getModels :: a -> Maybe Integer -> Maybe CurrencyType -> GetModelsRequest -> m GetModelsResponse{- ^ Возвращает информацию о моделях товаров.  В одном запросе можно получить информацию не более чем о 100 моделях.  Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)  -}
  , getModelsOffers :: a -> Maybe Integer -> Maybe CurrencyType -> Maybe SortOrderType -> GetModelsRequest -> m GetModelsOffersResponse{- ^ Возвращает информацию о первых десяти предложениях, расположенных на карточках моделей, идентификаторы которых указаны в запросе.  Предложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.  Для групповых моделей выдача предложений не поддерживается. Идентификаторы групповых моделей игнорируются.  В одном запросе можно получить информацию о предложениях не более чем для 100 моделей.  Для методов `GET models/{modelId}/offers` и `POST models/offers` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)  -}
  , getOfferCardsContentStatus :: a -> Integer -> Maybe Text -> Maybe Int -> GetOfferCardsContentStatusRequest -> m GetOfferCardsContentStatusResponse{- ^ Возвращает сведения о состоянии контента для заданных товаров:  * создана ли карточка товара и в каком она статусе; * заполненность карточки в процентах; * переданные характеристики товаров; * есть ли ошибки или предупреждения, связанные с контентом; * рекомендации по заполнению карточки.  |**⚙️ Лимит:** 600 запросов в минуту| |-|  -}
  , getOfferMappingEntries :: a -> Integer -> Maybe [Text] -> Maybe [Text] -> Maybe OfferMappingKindType -> Maybe [OfferProcessingStatusType] -> Maybe [OfferAvailabilityStatusType] -> Maybe [Int] -> Maybe [Text] -> Maybe Text -> Maybe Int -> m GetOfferMappingEntriesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  Для каждого товара, который вы размещаете на Маркете, возвращается информация о карточках Маркета, к которым привязан этот товар:  * Идентификатор текущей карточки (marketSku), карточки, которая проходит модерацию и последней отклоненной карточки. * Описание товара, которое указано на карточке Маркета. Например, размер упаковки и вес товара.  Результаты возвращаются постранично. Выходные данные содержат идентификатор следующей страницы.  {% note info %}  Количество товаров в каталоге магазина считается по данным за последние семь дней (не включая сегодня).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров в каталоге магазина * 25)  -}
  , getOfferMappings :: a -> Integer -> Maybe Text -> Maybe Int -> GetOfferMappingsRequest -> m GetOfferMappingsResponse{- ^ Возвращает список товаров в каталоге, их категории на Маркете и характеристики каждого товара.  Можно использовать тремя способами: * задать список интересующих SKU; * задать фильтр — в этом случае результаты возвращаются постранично; * не передавать тело запроса, чтобы получить список всех товаров в каталоге.  |**⚙️ Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе| |-|  -}
  , getOfferRecommendations :: a -> Integer -> Maybe Text -> Maybe Int -> GetOfferRecommendationsRequest -> m GetOfferRecommendationsResponse{- ^ Метод возвращает рекомендации нескольких типов.  **1. Порог для привлекательной цены. Он нужен для участия в софинансировании скидок.**  Показывает, какие **цены для участия** нужно установить, чтобы получить максимальные шансы на срабатывание скидок, софинансируемых Маркетом. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)  **2. Оценка привлекательности цен на витрине.**  Привлекательность влияет на вероятность срабатывания скидок за счет Маркета. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#validation)  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , getOffers :: a -> Integer -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe CurrencyType -> Maybe Bool -> Maybe Int -> Maybe Int -> m GetOffersResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет фильтровать информацию о предложениях магазина, размещенных на Маркете, и искать предложения по заданному поисковому запросу.  Поиск предложений, размещенных на Маркете, работает по поисковому запросу аналогично поиску Маркета. Результаты возвращаются с использованием пейджера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Маркета, с которой соотнесено предложение, и аукционные ставки на него.  {% note info %}  Из-за особенностей поиска Маркета иногда на последних страницах пейджера фактическое количество результатов оказывается меньше количества, указанного ранее на предыдущих страницах.  В связи с этим настоятельно рекомендуется анализировать содержимое параметра pager для каждой полученной страницы.  {% endnote %}  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лисит товаров — среднее количество таваров в каталоге за неделю * 25)  -}
  , getOrder :: a -> Integer -> Integer -> m GetOrderResponse{- ^ Возвращает информацию о заказе.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , getOrderBusinessBuyerInfo :: a -> Integer -> Integer -> m GetBusinessBuyerInfoResponse{- ^ Возвращает информацию о покупателе по идентификатору заказа.  {% note info \"\" %}  Чтобы получить информацию о покупателе, который является физическим лицом, воспользуйтесь запросом [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  {% endnote %}  Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY`, `PICKUP` или `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-|  -}
  , getOrderBusinessDocumentsInfo :: a -> Integer -> Integer -> m GetBusinessDocumentsInfoResponse{- ^ Возвращает информацию о документах по идентификатору заказа.  Получить данные можно после того, как заказ перейдет в статус `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-|  -}
  , getOrderBuyerInfo :: a -> Integer -> Integer -> m GetOrderBuyerInfoResponse{- ^ Возвращает информацию о покупателе по идентификатору заказа.  {% note info \"\" %}  Чтобы получить информацию о покупателе, который является юридическим лицом, воспользуйтесь запросом [POST campaigns/{campaignId}/orders/{orderId}/business-buyer](../../reference/order-business-information/getOrderBusinessBuyerInfo.md).  {% endnote %}  Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY` или `PICKUP`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-|  -}
  , getOrderLabelsData :: a -> Integer -> Integer -> m GetOrderLabelsDataResponse{- ^ Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , getOrders :: a -> Integer -> Maybe [Integer] -> Maybe [OrderStatusType] -> Maybe [OrderSubstatusType] -> Maybe Day -> Maybe Day -> Maybe Day -> Maybe Day -> Maybe UTCTime -> Maybe UTCTime -> Maybe OrderDeliveryDispatchType -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe OrderBuyerType -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> m GetOrdersResponse{- ^ Возвращает информацию о заказах. Запрос можно использовать, чтобы узнать, нет ли новых заказов.  Доступна фильтрация по нескольким характеристикам заказов:  * дате оформления;  * статусу;  * идентификаторам заказов;  * этапу обработки или причине отмены;  * типу (настоящий или тестовый);  * дате отгрузки в службу доставки;  * дате и времени обновления заказа.  Информация о заказах, доставленных или отмененных больше 30 дней назад, не возвращается. Ее можно получить с помощью запроса информации об отдельном заказе [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) (если у вас есть идентификатор заказа) или запроса отчета по заказам [POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md).  Максимальный диапазон дат за один запрос к ресурсу — 30 дней. Максимальное количество заказов в выходных данных запроса — 50.  Результаты возвращаются постранично. Для навигации по страницам используйте параметры `page_token` и `limit`.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , getOrdersStats :: a -> Integer -> Maybe Text -> Maybe Int -> GetOrdersStatsRequest -> m GetOrdersStatsResponse{- ^ Возвращает информацию по заказам на Маркете, в которых есть ваши товары. С помощью нее вы можете собрать статистику по вашим заказам и узнать, например, какие из товаров чаще всего возвращаются покупателями, какие, наоборот, пользуются большим спросом, какая комиссия начисляется за заказы и т. п.  {% note info \"\" %}  Раньше генерация детальной информации по заказам называлась **Отчет по заказам**. Сейчас это новый отчет. [Подробнее об отчете](../../reference/reports/generateUnitedOrdersReport.md)  {% endnote %}  В одном запросе можно получить информацию не более чем по 200 заказам.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , getOutlet :: a -> Integer -> Integer -> m GetOutletResponse{- ^ Возвращает информацию о точках продаж магазина.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-|  -}
  , getOutletLicenses :: a -> Integer -> Maybe [Integer] -> Maybe [Integer] -> m GetOutletLicensesResponse{- ^ Возвращает информацию о лицензиях для точек продаж.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-|  -}
  , getOutlets :: a -> Integer -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Integer -> m GetOutletsResponse{- ^ Возвращает список точек продаж магазина.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-|  -}
  , getPrices :: a -> Integer -> Maybe Text -> Maybe Int -> Maybe Bool -> m GetPricesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST campaigns/{campaignId}/offer-prices](../../reference/assortment/getPricesByOfferIds.md).  {% endnote %}  Возвращает список цен, установленных вами на товары любым способом: например, через партнерский API или в файле с каталогом.  {% note info %}  Общее количество товаров считается по данным за последние семь дней (не включая сегодня) и не может быть выше 2 миллионов.  {% endnote %}  Способы установки цен описаны [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/assortment/operations/prices.html).  |**⚙️ Лимит:** ```(количество товаров партнера на витрине) * 25``` товаров в сутки| |-|  -}
  , getPricesByOfferIds :: a -> Integer -> Maybe Text -> Maybe Int -> GetPricesByOfferIdsRequest -> m GetPricesByOfferIdsResponse{- ^ Возвращает список цен на указанные товары в магазине.  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для просмотра базовых цен используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров на витрине * 25)  -}
  , getPromoOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetPromoOffersRequest -> m GetPromoOffersResponse{- ^ Возвращает список товаров, которые участвуют или могут участвовать в акции.  {% note warning %}  В параметре `limit` не передавайте значение больше 500.  {% endnote %}  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getPromos :: a -> Integer -> GetPromosRequest -> m GetPromosResponse{- ^ Возвращает информацию об акциях Маркета.  По умолчанию возвращаются акции, в которых продавец участвует или может принять участие.  Чтобы получить текущие или завершенные акции, передайте параметр `participation`.  Типы акций, которые возвращаются в ответе:  * прямая скидка; * флеш-акция; * скидка по промокоду.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getQualityRatingDetails :: a -> Integer -> m GetQualityRatingDetailsResponse{- ^ Возвращает список заказов, которые повлияли на индекс качества магазина. Чтобы узнать значение индекса качества, выполните запрос [POST businesses/{businessId}/ratings/quality](../../reference/ratings/getQualityRatings.md).  |**⚙️ Лимит:** 100000 запросов в час| |-|  -}
  , getQualityRatings :: a -> Integer -> GetQualityRatingRequest -> m GetQualityRatingResponse{- ^ Возвращает значение индекса качества магазинов и его составляющие.  Подробнее об индексе качества читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/score/).  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getReportInfo :: a -> Text -> m GetReportInfoResponse{- ^ Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , getReturn :: a -> Integer -> Integer -> Integer -> m GetReturnResponse{- ^ Получает информацию по одному невыкупу или возврату.  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , getReturnApplication :: a -> Integer -> Integer -> Integer -> m FilePath{- ^ Загружает заявление покупателя на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , getReturnPhoto :: a -> Integer -> Integer -> Integer -> Integer -> Text -> m FilePath{- ^ Получает фотографии, которые покупатель приложил к заявлению на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , getReturns :: a -> Integer -> Maybe Text -> Maybe Int -> Maybe [Integer] -> Maybe [RefundStatusType] -> Maybe ReturnType -> Maybe Day -> Maybe Day -> Maybe Day -> Maybe Day -> m GetReturnsResponse{- ^ Получает список невыкупов и возвратов.  Чтобы получить информацию по одному возврату или невыкупу, выполните запрос [GET campaigns/{campaignId}/orders/{orderId}/returns/{returnId}](../../reference/orders/getReturn.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , getStocks :: a -> Integer -> Maybe Text -> Maybe Int -> GetWarehouseStocksRequest -> m GetWarehouseStocksResponse{- ^ Возвращает данные об остатках товаров (для всех моделей) и об [оборачиваемости](*turnover) товаров (для модели FBY).  {% note info \"По умолчанию данные по оборачивамости не возращаются\" %}  Чтобы они были в ответе, передавайте `true` в поле `withTurnover`.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-|  [//]: <> (turnover: Среднее количество дней, за которое товар продается. Подробно об оборачиваемости рассказано в Справке Маркета для продавцов https://yandex.ru/support/marketplace/analytics/turnover.html.)  -}
  , getSuggestedOfferMappingEntries :: a -> Integer -> GetSuggestedOfferMappingEntriesRequest -> m GetSuggestedOfferMappingEntriesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/suggestions](../../reference/business-assortment/getSuggestedOfferMappings.md).  {% endnote %}  Возвращает идентификаторы карточек товаров на Маркете, рекомендованных для ваших товаров.  Каждому товару, который вы размещаете, должна соответствовать карточка товара на Маркете со своим идентификатором — SKU на Маркете. Он указывается в URL карточки товара, после «...sku=», например:  ##https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016…##  Чтобы получить для товаров рекомендованные SKU на Маркете, передайте в теле POST-запроса как можно больше информации о них: названия, производителей, штрихкоды, цены и т. д.  Полученные SKU можно передать вместе с информацией о ваших товарах с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/updates](../../reference/offer-mappings/updateOfferMappingEntries.md).  В одном запросе можно получить не более 500 рекомендаций.  |**⚙️ Лимит:** 100 000 рекомендаций в час| |-|  -}
  , getSuggestedOfferMappings :: a -> Integer -> GetSuggestedOfferMappingsRequest -> m GetSuggestedOfferMappingsResponse{- ^ Возвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.  Пользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточки по предоставленным вами данным.  **Как пользоваться запросом**  1. Передайте Маркету список товаров, которые нужно проверить. 2. В ответ вы получите список SKU на Маркете с расшифровкой: названием, идентификатором модели, категорией. 3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида `https://market.yandex.ru/product/<marketModelId>?sku=<marketSku>`. 4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать `marketSKU`, который ему подходит по вашему мнению.  {% note info \"𝓠 Как определить `marketSku` товара, найденного на Маркете?\" %}  𝓐 Он есть в адресе страницы товара — расположен после `sku=`.  Например, `https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016`  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в час| |-|  -}
  , getSuggestedPrices :: a -> Integer -> SuggestPricesRequest -> m SuggestPricesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [отчет «Цены на рынке»](../../reference/reports/generatePricesReport.md).  {% endnote %}  {% note warning \"\" %}  Этот метод подходит только тем магазинам, которые устанавливают цены на товары в рублях.  {% endnote %}  Возвращает цены для продвижения товаров, которые вы размещаете на Маркете.  Товары, для которых нужно получить цены, передаются в теле POST-запроса.  Цены для продвижения зависят от цен, установленных на товары другими партнерами. Если один товар поставляют несколько партнеров, на Маркете сначала продается товар с более низкой ценой. Когда закончится товар по низкой цене, начнет продаваться товар по более высокой цене.  Выходные данные содержат для каждого товара несколько цен, соответствующих разным типам продвижения.  Установить цены на товары можно с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md) или другими способами: например, указать их в файле с каталогом. Также вы можете использовать стратегии для автоматической установки рекомендованных цен или минимальных цен на Маркете.  Подробно об автоматическом управлении ценами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/prices.html).  |**⚙️ Лимит:** 100 000 товаров в час| |-|  -}
  , getWarehouses :: a -> Integer -> m GetWarehousesResponse{- ^ Возвращает список складов и, если склады объединены, список групп складов. [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)  Среди прочего запрос позволяет определить идентификатор, который нужно использовать при передаче остатков для группы складов.  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , provideOrderDigitalCodes :: a -> Integer -> Integer -> ProvideOrderDigitalCodesRequest -> m EmptyApiResponse{- ^ Передает ключи цифровых товаров, которые покупатель заказал и оплатил. После выполнения запроса Маркет отправит ему письмо с ключами и инструкциями по активации, а также переведет заказ в финальный статус `DELIVERED`.  Ключ нужно передать в течение 30 минут после перехода заказа в статус `PROCESSING`.  Если в один заказ входят несколько ключей, передавайте их все в одном запросе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , provideOrderItemIdentifiers :: a -> Integer -> Integer -> ProvideOrderItemIdentifiersRequest -> m ProvideOrderItemIdentifiersResponse{- ^ {% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Передает Маркету коды маркировки для единиц товара в указанном заказе.  Принимаются коды следующих типов:  * Коды «Честного знака». * УИН для ювелирных изделий. * РНПТ и ГТД для импортных прослеживаемых товаров.  {% note warning %}  Прежде чем работать с этим методом, обязательно прочтите [статью о работе с маркируемыми товарами](https://yandex.ru/support/marketplace/orders/cz.html).  {% endnote %}  Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , putBidsForBusiness :: a -> Integer -> PutSkuBidsRequest -> m EmptyApiResponse{- ^ Запускает буст продаж — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  {% cut \"Как в кабинете выглядит кампания, созданная через API\" %}  ![](../../_images/api-boost.png)  {% endcut %}  При первом использовании запроса Маркет: создаст единую на все магазины бизнес-аккаунта кампанию, добавит в нее товары с указанными ставками, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же созданной через API кампанией. Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. Другими кампаниями управлять через API не получится. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , putBidsForCampaign :: a -> Integer -> PutSkuBidsRequest -> m EmptyApiResponse{- ^ Запускает буст продаж в указанном магазине — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  При первом использовании запроса Маркет: создаст кампанию, добавит в нее товары с указанными ставками для заданного магазина, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же кампанией, созданной через этот запрос или [PUT businesses/{businessId}/bids](/reference/bids/putBidsForBusiness). Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , refreshFeed :: a -> Integer -> Integer -> m EmptyApiResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет сообщить, что магазин обновил прайс-лист. После этого Маркет начнет обновление данных на сервисе. 1. Магазин обновляет прайс-лист, ссылку на который он указал в кабинете. 2. Магазин отправляет Маркету запрос методом `POST campaigns/{campaignId}/feeds/{feedId}/refresh`. 3. Маркет начинает обновление данных магазина на сервисе.  {% note alert %}  Запрос работает только для включенных магазинов. Если магазин выключен, данные на Маркете не обновятся, даже если HTTP-код — `200 OK`. Проверить статус магазина можно с помощью базовых запросов или на странице бизнес-аккаунта.  {% endnote %}  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-|  -}
  , searchModels :: a -> Maybe Text -> Maybe Integer -> Maybe CurrencyType -> Maybe Int -> Maybe Int -> m SearchModelsResponse{- ^ Возвращает информацию о моделях, удовлетворяющих заданным в запросе условиям поиска.  В одном запросе можно получить информацию не более чем о 100 моделях.  Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)  -}
  , searchRegionChildren :: a -> Integer -> Maybe Int -> Maybe Int -> m GetRegionWithChildrenResponse{- ^ Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-|  -}
  , searchRegionsById :: a -> Integer -> m GetRegionsResponse{- ^ Возвращает информацию о регионе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-|  -}
  , searchRegionsByName :: a -> Maybe Text -> Maybe Text -> Maybe Int -> m GetRegionsResponse{- ^ Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.  Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-|  -}
  , sendFileToChat :: a -> Integer -> Maybe Integer -> FormSendFileToChat -> m EmptyApiResponse{- ^ Отправляет файл в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , sendMessageToChat :: a -> Integer -> Maybe Integer -> SendMessageToChatRequest -> m EmptyApiResponse{- ^ Отправляет сообщение в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , setFeedParams :: a -> Integer -> Integer -> SetFeedParamsRequest -> m EmptyApiResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет магазину изменить параметры прайс-листа.  Чтобы отредактировать параметр прайс-листа, передайте в теле запроса: `name` (название параметра) и `value` (значение параметра).  Чтобы отменить установленное значение, передайте в теле запроса: `name` (название параметра) и `delete=true` (удалить значение).  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-|  -}
  , setOrderBoxLayout :: a -> Integer -> Integer -> SetOrderBoxLayoutRequest -> m SetOrderBoxLayoutResponse{- ^ {% note tip \"Подходит и для DBS\" %}  Запрос предназначен для работы с FBS-заказами, но вы можете использовать его для обработки DBS-заказов, если это удобно.  {% endnote %}  Позволяет выполнить три операции:  * передать Маркету информацию о распределении товаров по коробкам; * передать Маркету коды маркировки для товаров; * удалить товар из заказа, если его не оказалось на складе.  Если нужно что-то поправить в переданных данных, просто повторите запрос — это можно делать сколько угодно раз до перевода заказа в статус **Готов к отгрузке**. ⚠️ Если вы меняете раскладку уже после печати и расклейки ярлыков, не забудье перепечатать их и наклеить заново.  ## Как передать информацию о распределении товаров  В этом запросе вам нужно передать Маркету список коробок и указать, какие именно товары лежат в каждой из них. Коробки могут быть двух типов:  * **Содержащие товары целиком.** Такая коробка может содержать сколько угодно единиц любых товаров.  * **Содержащие часть товара.** Такие коробки содержат по одной части одного товара. Например, одна содержит внешний блок кондиционера, а другая — внутренний блок.  ⚠️ Одна коробка не может содержать и товары целиком, и части товаров.  ## Как передавать коды маркировки  Если в заказе есть товары, подлежащие маркировке, в запросе нужно передать соответствующие уникальные коды. [Что такое маркировка?](https://yandex.ru/support/marketplace/orders/cz.html)  Принимаются коды следующих типов:  * Коды «Честного знака». * УИН для ювелирных изделий. * РНПТ и ГТД для импортных прослеживаемых товаров.  Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.  Если товар едет в нескольких коробках, код маркировки нужно передать для каждой из них.  ## Как удалить товар из заказа  Чтобы удалить товар из заказа:  1. Добавьте в запрос `allowRemove: true`. 2. Передайте распределение по коробкам без товара, который нужно удалить.  {% note warning \"Удаление нельзя отменить\" %}  Эта операция необратима: покупатель сразу получит уведомление, а состав заказа изменится.  {% endnote %}  Чтобы удалить позицию целиком, не передавайте соответствующий `OrderBoxLayoutItemDTO`. Чтобы уменьшить количество товара, передайте уменьшенное значение в поле `fullCount`.  Нельзя удалить или уменьшить количество товара, если он:  * добавлен по акции; * составляет 99% стоимости заказа; * единственный товар в заказе.  Если вы не можете отгрузить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.  {% note info \"Увеличить заказ нельзя\" %}  С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.  {% endnote %}  ## Примеры  {% cut \"Товар умещается в коробку\" %}  Вот как будет выглядеть запрос, если в одной коробке едут:    * три единицы одного товара, требующего маркировки;   * одна единица другого товара, не требущего маркировки.    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"fullCount\": 3,                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           },                           {                               \"cis\": \"010304109478gftJ14545762!\\u001dhGt264\"                           },                           {                               \"cis\": \"010304109478fRs28323ks23!\\u001dhet201\"                           }                       ]                   },                   {                       \"id\": 654321,                       \"fullCount\": 1                   }               ]           }       ]   }   ```  {% endcut %}  {% cut \"Товар едет в разных коробках\" %}  Вот как будет выглядеть запрос, если товар едет в двух коробках:    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           }       ]   }   ```  {% endcut %}  {% cut \"Одинаковые товары, где каждый едет в нескольких коробках\" %}  Вот как будет выглядеть запрос, если каждый из двух одинаковых товаров едет в двух коробках:    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           }       ]   }   ```  {% endcut %}  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , setOrderDeliveryDate :: a -> Integer -> Integer -> SetOrderDeliveryDateRequest -> m EmptyApiResponse{- ^ Метод изменяет дату доставки заказа в статусе `PROCESSING` или `DELIVERY`. Для заказов с другими статусами дату доставки изменить нельзя.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , setOrderDeliveryTrackCode :: a -> Integer -> Integer -> SetOrderDeliveryTrackCodeRequest -> m EmptyApiResponse{- ^ {% note warning \"Этот запрос только для DBS\" %}  Вы можете использовать запрос, чтобы повысить лояльность покупателей. Если они могут узнать, на каком этапе доставки находятся их заказы, доверие покупателей к вашему магазину может возрасти.  {% endnote %}  Передает Маркету трек‑номер, по которому покупатель может отследить посылку со своим заказом через службу доставки.  Передать трек‑номер можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY` или `PICKUP`.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , setOrderShipmentBoxes :: a -> Integer -> Integer -> Integer -> SetOrderShipmentBoxesRequest -> m SetOrderShipmentBoxesResponse{- ^ {% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Отгружаемый Маркету заказ может не влезть в одну коробку или упаковку — в этом случае получается, что он занимает несколько грузовых мест.  Количество грузовых мест нужно обязательно передавать Маркету, если оно не равно 1. Это делается перед переводом его в статус **Готов к отгрузке**. Подробно о том, что в какой момент нужно передавать, рассказано в [пошаговой инструкции](../../step-by-step/fbs.md).  Метод устроен немного нестандартно: количество задается длиной массива пустых объектов.  Раньше метод требовал передачи большего количества данных. Запросы, оформленные по старому образцу, работают, но лучше делать по-новому.  {% cut \"Как было раньше\" %}  Структура тела PUT-запроса:  ``` {   \"boxes\":   [     {       \"fulfilmentId\": \"{string}\",       \"weight\": {int64},       \"width\": {int64},       \"height\": {int64},       \"depth\": {int64},       \"items\":       [         {           \"id\": {int64},           \"count\": {int32}         },         ...       ]     },     ...   ] } ``` | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `boxes`       |           | Список грузовых мест.       |  **Параметры, вложенные в `boxes`** | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `fulfilmentId`       |  String   | Идентификатор грузового места в информационной системе магазина. Сформируйте идентификатор по шаблону: `номер заказа на Маркете-номер грузового места`. Например, `7206821‑1, 7206821‑2` и т. д. | | `weight`       | Int64        | Масса брутто грузового места (суммарная масса упаковки и содержимого) в граммах. | | `width`       | Int64   | Ширина грузового места в сантиметрах.       | | `height`       | Int64   | Высота грузового места в сантиметрах.       | | `depth`       | Int64   | Глубина грузового места в сантиметрах.        | | `items`       | Int64   | Список товаров в грузовом месте.       |  **Параметры, вложенные в `items`** | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `id`       | Int64     | Идентификатор товара в рамках заказа.   | | `count`    | Int32     | Количество единиц товара в грузовом месте.       |  {% endcut %}  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , setReturnDecision :: a -> Integer -> Integer -> Integer -> SetReturnDecisionRequest -> m EmptyApiResponse{- ^ Выбирает решение по возврату от покупателя. После этого для подтверждения решения нужно выполнить запрос [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit](../../reference/orders/submitReturnDecision.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , skipGoodsFeedbacksReaction :: a -> Integer -> SkipGoodsFeedbackReactionRequest -> m EmptyApiResponse{- ^ Пропускает отзывы — они больше не будут возвращаться в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , submitReturnDecision :: a -> Integer -> Integer -> Integer -> m EmptyApiResponse{- ^ Подтверждает выбранное решение по возврату, отправленное в запросе [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision](../../reference/orders/setReturnDecision.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , updateBusinessPrices :: a -> Integer -> UpdateBusinessPricesRequest -> m EmptyApiResponse{- ^ Устанавливает [базовые цены](*default-price). Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , updateCampaignOffers :: a -> Integer -> UpdateCampaignOffersRequest -> m EmptyApiResponse{- ^ Изменяет параметры продажи товаров в конкретном магазине: доступность товара, условия доставки и самовывоза, применяемую ставку НДС.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , updateGoodsFeedbackComment :: a -> Integer -> UpdateGoodsFeedbackCommentRequest -> m UpdateGoodsFeedbackCommentResponse{- ^ Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.  Для создания комментария к отзыву передайте только идентификатор отзыва `feedbackId`.  Чтобы добавить комментарий к другому комментарию, передайте:  * `feedbackId` — идентификатор отзыва; * `comment.parentId` — идентификатор родительского комментария.  Чтобы изменить комментарий, передайте:  * `feedbackId`— идентификатор отзыва; * `comment.id` — идентификатор комментария, который нужно изменить.  Если передать одновременно `comment.parentId` и `comment.id`, будет изменен существующий комментарий.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , updateOfferContent :: a -> Integer -> UpdateOfferContentRequest -> m UpdateOfferContentResponse{- ^ Редактирует характеристики товара, которые специфичны для категории, к которой он относится.  {% note warning \"Здесь только то, что относится к конкретной категории\" %}  Если вам нужно изменить основные параметры товара (название, описание, изображения, видео, производитель, штрихкод), воспользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Чтобы удалить характеристики, которые заданы в параметрах с типом `string`, передайте пустое значение.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , updateOfferMappingEntries :: a -> Integer -> UpdateOfferMappingEntryRequest -> m EmptyApiResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Добавляет товары, указанные в запросе, в ваш каталог товаров и редактирует уже имеющиеся товары.  Информацию о товарах нужно передать в теле POST-запроса.  У каждого товара должен быть ваш SKU — уникальный код, который вы используете для идентификации товара:  * Чтобы добавить в каталог новый товар, укажите в параметре `shopSku` ваш SKU, которого еще нет в каталоге. * Чтобы отредактировать товар из каталога, укажите в параметре `shopSku` ваш SKU этого товара в каталоге.  В обоих случаях в запросе нужно передать полное описание товара, даже если вы хотите изменить только несколько характеристик.  Если вы знаете, какой карточке товара на Маркете соответствует ваш товар, укажите ее идентификатор (SKU на Маркете) во входном параметре mapping. Получить SKU на Маркете рекомендованной карточки товара можно с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/suggestions](../../reference/offer-mappings/getSuggestedOfferMappingEntries.md) или через кабинет. Если SKU на Маркете не указан, сотрудники Маркета сами подберут или создадут подходящую карточку товара, либо у него появится статус `NEED_CONTENT` (нужно найти карточку или создать ее самостоятельно) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  Перед публикацией товары проходят модерацию. Если в одном из отправленных товаров найдена ошибка, ответ на запрос будет иметь HTTP-код 400 Bad Request, и ни один из товаров не отправится на модерацию. При этом если вы не передадите все обязательные параметры для какого‑либо товара, после модерации у него появится статус `NEED_INFO` (в описании товара не хватает информации) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  В одном запросе можно добавить не более 500 товаров.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5 000 товаров в минуту| |-|  -}
  , updateOfferMappings :: a -> Integer -> UpdateOfferMappingsRequest -> m UpdateOfferMappingsResponse{- ^ Добавляет товары в каталог, передает их категории на Маркете и характеристики, необходимые для этих категории. Также редактирует информацию об уже имеющихся товарах.  Список категорий Маркета можно получить с помощью запроса [POST categories/tree](../../reference/categories/getCategoriesTree.md), а характеристики товаров по категориям с помощью [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).  Чтобы **добавить новый товар**, передайте его с новым идентификатором, который раньше никогда не использовался в каталоге. Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой. Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**SKU на Маркете**) в поле `marketSKU`.  Для **новых товаров** обязательно укажите параметры: `offerId`, `name`, `marketCategoryId` или `category`, `pictures`, `vendor`, `description`.  Чтобы **отредактировать информацию о товаре**, передайте новые данные, указав в `offerId` соответствующий **ваш SKU**. Поля, в которых ничего не меняется, можно не передавать.  Чтобы **удалить характеристики**, которые заданы в параметрах с типом `string`, передайте пустое значение.  Параметр `offerId` должен быть **уникальным** для всех товаров, которые вы передаете.  {% note warning \"Правила использования SKU\" %}  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , updateOrderItems :: a -> Integer -> Integer -> UpdateOrderItemRequest -> m NoContent{- ^ {% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Изменяет состав заказа, если позволяет выбранная служба доставки, в случаях:  * покупатель уменьшил количество товара; * магазин не может поставить все товары в заказе.  Для этого заказ должен находится в статусе `\"status\": \"PROCESSING\"` этапа обработки `\"substatus\": \"STARTED\"`. После передачи статуса `\"substatus\": \"READY_TO_SHIP\"` изменить состав невозможно.  Если одинаковых товаров несколько, для уменьшения количества передайте обновленное значение в атрибуте `count` параметра `item`.  Чтобы полностью удалить товар из заказа:  * передайте значение `0`; или * не передавайте параметр `item`.  Нельзя удалить или уменьшить количество товара, если он:  * добавлен по акции; * составляет 99% стоимости заказа; * единственный товар в заказе.  Если необходимо удалить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.  {% note info \"Увеличить заказ нельзя\" %}  С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.  {% endnote %}  **Возврат денег покупателю**  Если покупатель оплатил товар при оформлении, Маркет вернет ему деньги за удаленные из заказа товары в течение двух дней:  * при оплате банковской картой — с момента, когда магазин переведет заказ в статус `SHIPPED`;  * при оплате через Apple Pay или Google Pay — с момента, когда магазин удалит товар из заказа.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , updateOrderStatus :: a -> Integer -> Integer -> UpdateOrderStatusRequest -> m UpdateOrderStatusResponse{- ^ Изменяет статус заказа. Возможные изменения статусов:  * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`. * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`. * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , updateOrderStatuses :: a -> Integer -> UpdateOrderStatusesRequest -> m UpdateOrderStatusesResponse{- ^ Изменяет статусы нескольких заказов.  Возможные изменения статусов:  * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"`и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`. * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`. * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.  Максимальное количество заказов, у которых можно изменить статус в одном запросе, — 30.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , updateOrderStorageLimit :: a -> Integer -> Integer -> UpdateOrderStorageLimitRequest -> m EmptyApiResponse{- ^ Продлевает срок хранения заказа в пункте выдачи продавца.  Заказ должен быть в статусе `PICKUP`. Продлить срок можно только один раз, не больше чем на 30 дней.  Новый срок хранения можно получить в параметре `outletStorageLimitDate` запроса [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , updateOutlet :: a -> Integer -> Integer -> ChangeOutletRequest -> m EmptyApiResponse{- ^ Изменяет информацию о точке продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-|  -}
  , updateOutletLicenses :: a -> Integer -> UpdateOutletLicenseRequest -> m EmptyApiResponse{- ^ Передает информацию о новых и существующих лицензиях для точек продаж. Поддерживаются только лицензии на розничную продажу алкоголя.  Чтобы размещать алкогольную продукцию на Маркете, надо также прислать гарантийное письмо (если вы еще не делали этого раньше) и правильно оформить предложения в прайс-листе. Далее информация о лицензиях проходит проверку.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-|  -}
  , updatePrices :: a -> Integer -> UpdatePricesRequest -> m EmptyApiResponse{- ^ Устанавливает цены на товары в магазине. Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для управления базовыми ценами используйте [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , updatePromoOffers :: a -> Integer -> UpdatePromoOffersRequest -> m UpdatePromoOffersResponse{- ^ Добавляет товары в акцию или изменяет цены на товары, которые участвуют в акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , updateStocks :: a -> Integer -> UpdateStocksRequest -> m EmptyApiResponse{- ^ Передает данные об остатках товаров на витрине.  Обязательно указывайте SKU **в точности** так, как он указан в каталоге. Например, _557722_ и _0557722_ — это два разных SKU.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-|  -}
  , getDeliveryServices :: a -> m GetDeliveryServicesResponse{- ^ Возвращает справочник служб доставки: идентификаторы и наименования. |**⚙️ Лимит:** 5 000 запросов в час| |-|  -}
  , addHiddenOffers :: a -> Integer -> AddHiddenOffersRequest -> m EmptyApiResponse{- ^ Скрывает товары магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , addOffersToArchive :: a -> Integer -> AddOffersToArchiveRequest -> m AddOffersToArchiveResponse{- ^ Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.  {% note warning \"В архив нельзя отправить товар, который хранится на складе Маркета\" %}  Вначале такой товар нужно распродать или вывезти.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , calculateTariffs :: a -> CalculateTariffsRequest -> m CalculateTariffsResponse{- ^ Рассчитывает стоимость услуг Маркета для товаров с заданными параметрами. Порядок товаров в запросе и ответе сохраняется, чтобы определить, для какого товара рассчитана стоимость услуги.  Обратите внимание: калькулятор осуществляет примерные расчеты. Финальная стоимость для каждого заказа зависит от предоставленных услуг.  В запросе можно указать либо параметр `campaignId`, либо `sellingProgram`. Совместное использование параметров приведет к ошибке.  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , confirmBusinessPrices :: a -> Integer -> ConfirmPricesRequest -> m EmptyApiResponse{- ^ Подтверждает основную цену на товары, которые попали в карантин, и удаляет их из карантина.  Основная цена задается в каталоге и действует во всех магазинах кабинета.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , confirmCampaignPrices :: a -> Integer -> ConfirmPricesRequest -> m EmptyApiResponse{- ^ Подтверждает в заданном магазине цену на товары, которые попали в карантин, и удаляет их из карантина.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , createChat :: a -> Integer -> CreateChatRequest -> m CreateChatResponse{- ^ Создает новый чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , deleteCampaignOffers :: a -> Integer -> DeleteCampaignOffersRequest -> m DeleteCampaignOffersResponse{- ^ Удаляет заданные товары из заданного магазина.  {% note warning \"Запрос удаляет товары именно из конкретного магазина\" %}  На продажи в других магазинах и на наличие товара в общем каталоге он не влияет.  {% endnote %}  Товар не получится удалить, если он хранится на складах Маркета.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , deleteGoodsFeedbackComment :: a -> Integer -> DeleteGoodsFeedbackCommentRequest -> m EmptyApiResponse{- ^ Удаляет комментарий магазина.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , deleteHiddenOffers :: a -> Integer -> DeleteHiddenOffersRequest -> m EmptyApiResponse{- ^ Возобновляет показ скрытых вами товаров магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , deleteOffers :: a -> Integer -> DeleteOffersRequest -> m DeleteOffersResponse{- ^ Удаляет товары из каталога.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , deleteOffersFromArchive :: a -> Integer -> DeleteOffersFromArchiveRequest -> m DeleteOffersFromArchiveResponse{- ^ Восстанавливает товары из архива.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , deletePromoOffers :: a -> Integer -> DeletePromoOffersRequest -> m DeletePromoOffersResponse{- ^ Убирает товары из акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , generateBoostConsolidatedReport :: a -> Maybe ReportFormatType -> GenerateBoostConsolidatedRequest -> m GenerateReportResponse{- ^ Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateCompetitorsPositionReport :: a -> Maybe ReportFormatType -> GenerateCompetitorsPositionReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \"Значение -1 в отчете\" %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-|  -}
  , generateGoodsFeedbackReport :: a -> Maybe ReportFormatType -> GenerateGoodsFeedbackRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateGoodsRealizationReport :: a -> Maybe ReportFormatType -> GenerateGoodsRealizationReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateMassOrderLabelsReport :: a -> Maybe PageFormatType -> GenerateMassOrderLabelsRequest -> m GenerateReportResponse{- ^ Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , generateOrderLabel :: a -> Integer -> Integer -> Integer -> Integer -> Maybe PageFormatType -> m FilePath{- ^ Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , generateOrderLabels :: a -> Integer -> Integer -> Maybe PageFormatType -> m FilePath{- ^ Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , generatePricesReport :: a -> Maybe ReportFormatType -> GeneratePricesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateShelfsStatisticsReport :: a -> Maybe ReportFormatType -> GenerateShelfsStatisticsRequest -> m GenerateReportResponse{- ^ Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateShowsSalesReport :: a -> Maybe ReportFormatType -> GenerateShowsSalesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-|  -}
  , generateStocksOnWarehousesReport :: a -> Maybe ReportFormatType -> GenerateStocksOnWarehousesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateUnitedMarketplaceServicesReport :: a -> Maybe ReportFormatType -> GenerateUnitedMarketplaceServicesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |-----------------------------|---------------------------------| |По дате начисления услуги    |`dateFrom` и `dateTo`            | |По дате формирования акта    |`year` и `month`                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateUnitedNettingReport :: a -> Maybe ReportFormatType -> GenerateUnitedNettingReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |-------------------------|---------------------------------------| |О платежах за период     |`dateFrom` и `dateTo`                  | |О платежном поручении    |`bankOrderId` и `bankOrderDateTime`    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateUnitedOrdersReport :: a -> Maybe ReportFormatType -> GenerateUnitedOrdersRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \"\" %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , getAllOffers :: a -> Integer -> Maybe Integer -> Maybe Int -> m GetAllOffersResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет максимально быстро получить информацию обо всех предложениях магазина, размещенных на Маркете. Возвращает результат в виде сегментов нефиксированного размера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Яндекс Маркета, с которой соотнесено предложение, а также аукционные ставки на него.  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — среднее количество таваров в каталоге за неделю * 25)  -}
  , getBidsInfoForBusiness :: a -> Integer -> Maybe Text -> Maybe Int -> GetBidsInfoRequest -> m GetBidsInfoResponse{- ^ Возвращает значения ставок для заданных товаров.  {% note warning \"\" %}  В ответе возвращаются значения только тех ставок, которые вы установили через запрос [PUT businesses/{businessId}/bids](../../reference/bids/putBidsForBusiness.md). Получить информацию по кампаниям, созданным в кабинете, не получится.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , getBidsRecommendations :: a -> Integer -> GetBidsRecommendationsRequest -> m GetBidsRecommendationsResponse{- ^ Возвращает рекомендованные ставки для заданных товаров — такие ставки обеспечивают вашим предложениям определенную долю показов, если цена не превышает рекомендованную.  Для одного товара может возвращаться одна рекомендованная ставка или несколько. Во втором случае разные ставки предназначены для достижения разной доли показов.  Если товар только добавлен в каталог, но пока не продается, рекомендованной ставки для него не будет.  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , getBusinessQuarantineOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetQuarantineOffersRequest -> m GetQuarantineOffersResponse{- ^ Возвращает список товаров, которые находятся в карантине по **основной цене**. Основная цена задается в каталоге и действует во всех магазинах кабинета.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , getBusinessSettings :: a -> Integer -> m GetBusinessSettingsResponse{- ^ Возвращает информацию о настройках кабинета, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaign :: a -> Integer -> m GetCampaignResponse{- ^ Возвращает информацию о магазине. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaignLogins :: a -> Integer -> m GetCampaignLoginsResponse{- ^ Возвращает список логинов, у которых есть доступ к магазину. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaignOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetCampaignOffersRequest -> m GetCampaignOffersResponse{- ^ Возвращает список товаров, которые размещены в заданном магазине. Для каждого товара указываются параметры размещения.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , getCampaignQuarantineOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetQuarantineOffersRequest -> m GetQuarantineOffersResponse{- ^ Возвращает список товаров, которые находятся в карантине по цене, установленной в заданном магазине.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , getCampaignRegion :: a -> Integer -> m GetCampaignRegionResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [GET campaigns/{campaignId}/settings](../../reference/campaigns/getCampaignSettings.md).  {% endnote %}  Возвращает регион, в котором находится магазин. |**⚙️ Лимит:** 5 000 запросов в час| |-|  -}
  , getCampaignSettings :: a -> Integer -> m GetCampaignSettingsResponse{- ^ Возвращает информацию о настройках магазина, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaigns :: a -> Maybe Int -> Maybe Int -> m GetCampaignsResponse{- ^ Возвращает список магазинов, к которым имеет доступ пользователь — владелец авторизационного токена, использованного в запросе. Для агентских пользователей список состоит из подагентских магазинов. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaignsByLogin :: a -> Text -> Maybe Int -> Maybe Int -> m GetCampaignsResponse{- ^ Возвращает список магазинов, к которым у пользователя с указанным логином есть доступ. |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , getCategoriesMaxSaleQuantum :: a -> GetCategoriesMaxSaleQuantumRequest -> m GetCategoriesMaxSaleQuantumResponse{- ^ Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getCategoriesTree :: a -> GetCategoriesRequest -> m GetCategoriesResponse{- ^ Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getCategoryContentParameters :: a -> Integer -> m GetCategoryContentParametersResponse{- ^ Возвращает список характеристик с допустимыми значениями для заданной категории.  |**⚙️ Лимит:** 50 категорий в минуту | |-|  -}
  , getChatHistory :: a -> Integer -> Maybe Integer -> Maybe Text -> Maybe Int -> GetChatHistoryRequest -> m GetChatHistoryResponse{- ^ Возвращает историю сообщений в чате с покупателем.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getChats :: a -> Integer -> Maybe Text -> Maybe Int -> GetChatsRequest -> m GetChatsResponse{- ^ Возвращает ваши чаты с покупателями.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getDeliveryServices :: a -> m GetDeliveryServicesResponse{- ^ Возвращает справочник служб доставки: идентификаторы и наименования. |**⚙️ Лимит:** 5 000 запросов в час| |-|  -}
  , getFeed :: a -> Integer -> Integer -> m GetFeedResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает информацию о прайс-листе, размещенном на Маркете для заданного магазина. Также ресурс возвращает результаты автоматических проверок прайс-листа. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getFeedIndexLogs :: a -> Integer -> Integer -> Maybe Int -> Maybe UTCTime -> Maybe UTCTime -> Maybe FeedIndexLogsStatusType -> m GetFeedIndexLogsResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает отчет по индексации прайс-листа для заданного магазина. Отчет позволяет получить статистику загрузки прайс-листа и результаты его автоматических проверок.  Данные в отчете возвращаются в порядке убывания значений параметра `generationId`.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getFeedbackAndCommentUpdates :: a -> Integer -> Maybe Text -> Maybe Int -> Maybe Day -> m GetFeedbackListResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает новые и обновленные отзывы о магазине на Маркете.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов. Выходные данные содержат идентификатор следующей страницы.  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , getFeeds :: a -> Integer -> m GetFeedsResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает список прайс-листов, размещенных на Маркете для магазина. Также ресурс возвращает результаты автоматических проверок прайс-листов. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getGoodsFeedbackComments :: a -> Integer -> Maybe Text -> Maybe Int -> GetGoodsFeedbackCommentsRequest -> m GetGoodsFeedbackCommentsResponse{- ^ Возвращает комментарии к отзыву.  Результаты возвращаются постранично, одна страница содержит не более 20 комментариев.  Комментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getGoodsFeedbacks :: a -> Integer -> Maybe Text -> Maybe Int -> GetGoodsFeedbackRequest -> m GetGoodsFeedbackResponse{- ^ Возвращает все отзывы о товарах продавца по указанным фильтрам.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов.  Отзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getGoodsStats :: a -> Integer -> GetGoodsStatsRequest -> m GetGoodsStatsResponse{- ^ Возвращает подробный отчет по товарам, которые вы разместили на Маркете. С помощью отчета вы можете узнать, например, об остатках на складе, об условиях хранения ваших товаров и т. д.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , getHiddenOffers :: a -> Integer -> Maybe [Text] -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> m GetHiddenOffersResponse{- ^ Возвращает список скрытых вами товаров для заданного магазина.  В списке будут товары, скрытые любым способом — по API, с помощью YML-фида, в кабинете и так далее.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , getOfferCardsContentStatus :: a -> Integer -> Maybe Text -> Maybe Int -> GetOfferCardsContentStatusRequest -> m GetOfferCardsContentStatusResponse{- ^ Возвращает сведения о состоянии контента для заданных товаров:  * создана ли карточка товара и в каком она статусе; * заполненность карточки в процентах; * переданные характеристики товаров; * есть ли ошибки или предупреждения, связанные с контентом; * рекомендации по заполнению карточки.  |**⚙️ Лимит:** 600 запросов в минуту| |-|  -}
  , getOfferMappingEntries :: a -> Integer -> Maybe [Text] -> Maybe [Text] -> Maybe OfferMappingKindType -> Maybe [OfferProcessingStatusType] -> Maybe [OfferAvailabilityStatusType] -> Maybe [Int] -> Maybe [Text] -> Maybe Text -> Maybe Int -> m GetOfferMappingEntriesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  Для каждого товара, который вы размещаете на Маркете, возвращается информация о карточках Маркета, к которым привязан этот товар:  * Идентификатор текущей карточки (marketSku), карточки, которая проходит модерацию и последней отклоненной карточки. * Описание товара, которое указано на карточке Маркета. Например, размер упаковки и вес товара.  Результаты возвращаются постранично. Выходные данные содержат идентификатор следующей страницы.  {% note info %}  Количество товаров в каталоге магазина считается по данным за последние семь дней (не включая сегодня).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров в каталоге магазина * 25)  -}
  , getOfferMappings :: a -> Integer -> Maybe Text -> Maybe Int -> GetOfferMappingsRequest -> m GetOfferMappingsResponse{- ^ Возвращает список товаров в каталоге, их категории на Маркете и характеристики каждого товара.  Можно использовать тремя способами: * задать список интересующих SKU; * задать фильтр — в этом случае результаты возвращаются постранично; * не передавать тело запроса, чтобы получить список всех товаров в каталоге.  |**⚙️ Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе| |-|  -}
  , getOfferRecommendations :: a -> Integer -> Maybe Text -> Maybe Int -> GetOfferRecommendationsRequest -> m GetOfferRecommendationsResponse{- ^ Метод возвращает рекомендации нескольких типов.  **1. Порог для привлекательной цены. Он нужен для участия в софинансировании скидок.**  Показывает, какие **цены для участия** нужно установить, чтобы получить максимальные шансы на срабатывание скидок, софинансируемых Маркетом. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)  **2. Оценка привлекательности цен на витрине.**  Привлекательность влияет на вероятность срабатывания скидок за счет Маркета. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#validation)  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , getOffers :: a -> Integer -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe CurrencyType -> Maybe Bool -> Maybe Int -> Maybe Int -> m GetOffersResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет фильтровать информацию о предложениях магазина, размещенных на Маркете, и искать предложения по заданному поисковому запросу.  Поиск предложений, размещенных на Маркете, работает по поисковому запросу аналогично поиску Маркета. Результаты возвращаются с использованием пейджера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Маркета, с которой соотнесено предложение, и аукционные ставки на него.  {% note info %}  Из-за особенностей поиска Маркета иногда на последних страницах пейджера фактическое количество результатов оказывается меньше количества, указанного ранее на предыдущих страницах.  В связи с этим настоятельно рекомендуется анализировать содержимое параметра pager для каждой полученной страницы.  {% endnote %}  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лисит товаров — среднее количество таваров в каталоге за неделю * 25)  -}
  , getOrder :: a -> Integer -> Integer -> m GetOrderResponse{- ^ Возвращает информацию о заказе.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , getOrderBusinessBuyerInfo :: a -> Integer -> Integer -> m GetBusinessBuyerInfoResponse{- ^ Возвращает информацию о покупателе по идентификатору заказа.  {% note info \"\" %}  Чтобы получить информацию о покупателе, который является физическим лицом, воспользуйтесь запросом [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  {% endnote %}  Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY`, `PICKUP` или `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-|  -}
  , getOrderBusinessDocumentsInfo :: a -> Integer -> Integer -> m GetBusinessDocumentsInfoResponse{- ^ Возвращает информацию о документах по идентификатору заказа.  Получить данные можно после того, как заказ перейдет в статус `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-|  -}
  , getOrderLabelsData :: a -> Integer -> Integer -> m GetOrderLabelsDataResponse{- ^ Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , getOrders :: a -> Integer -> Maybe [Integer] -> Maybe [OrderStatusType] -> Maybe [OrderSubstatusType] -> Maybe Day -> Maybe Day -> Maybe Day -> Maybe Day -> Maybe UTCTime -> Maybe UTCTime -> Maybe OrderDeliveryDispatchType -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe OrderBuyerType -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> m GetOrdersResponse{- ^ Возвращает информацию о заказах. Запрос можно использовать, чтобы узнать, нет ли новых заказов.  Доступна фильтрация по нескольким характеристикам заказов:  * дате оформления;  * статусу;  * идентификаторам заказов;  * этапу обработки или причине отмены;  * типу (настоящий или тестовый);  * дате отгрузки в службу доставки;  * дате и времени обновления заказа.  Информация о заказах, доставленных или отмененных больше 30 дней назад, не возвращается. Ее можно получить с помощью запроса информации об отдельном заказе [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) (если у вас есть идентификатор заказа) или запроса отчета по заказам [POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md).  Максимальный диапазон дат за один запрос к ресурсу — 30 дней. Максимальное количество заказов в выходных данных запроса — 50.  Результаты возвращаются постранично. Для навигации по страницам используйте параметры `page_token` и `limit`.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , getOrdersStats :: a -> Integer -> Maybe Text -> Maybe Int -> GetOrdersStatsRequest -> m GetOrdersStatsResponse{- ^ Возвращает информацию по заказам на Маркете, в которых есть ваши товары. С помощью нее вы можете собрать статистику по вашим заказам и узнать, например, какие из товаров чаще всего возвращаются покупателями, какие, наоборот, пользуются большим спросом, какая комиссия начисляется за заказы и т. п.  {% note info \"\" %}  Раньше генерация детальной информации по заказам называлась **Отчет по заказам**. Сейчас это новый отчет. [Подробнее об отчете](../../reference/reports/generateUnitedOrdersReport.md)  {% endnote %}  В одном запросе можно получить информацию не более чем по 200 заказам.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , getPrices :: a -> Integer -> Maybe Text -> Maybe Int -> Maybe Bool -> m GetPricesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST campaigns/{campaignId}/offer-prices](../../reference/assortment/getPricesByOfferIds.md).  {% endnote %}  Возвращает список цен, установленных вами на товары любым способом: например, через партнерский API или в файле с каталогом.  {% note info %}  Общее количество товаров считается по данным за последние семь дней (не включая сегодня) и не может быть выше 2 миллионов.  {% endnote %}  Способы установки цен описаны [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/assortment/operations/prices.html).  |**⚙️ Лимит:** ```(количество товаров партнера на витрине) * 25``` товаров в сутки| |-|  -}
  , getPricesByOfferIds :: a -> Integer -> Maybe Text -> Maybe Int -> GetPricesByOfferIdsRequest -> m GetPricesByOfferIdsResponse{- ^ Возвращает список цен на указанные товары в магазине.  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для просмотра базовых цен используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров на витрине * 25)  -}
  , getPromoOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetPromoOffersRequest -> m GetPromoOffersResponse{- ^ Возвращает список товаров, которые участвуют или могут участвовать в акции.  {% note warning %}  В параметре `limit` не передавайте значение больше 500.  {% endnote %}  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getPromos :: a -> Integer -> GetPromosRequest -> m GetPromosResponse{- ^ Возвращает информацию об акциях Маркета.  По умолчанию возвращаются акции, в которых продавец участвует или может принять участие.  Чтобы получить текущие или завершенные акции, передайте параметр `participation`.  Типы акций, которые возвращаются в ответе:  * прямая скидка; * флеш-акция; * скидка по промокоду.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getQualityRatingDetails :: a -> Integer -> m GetQualityRatingDetailsResponse{- ^ Возвращает список заказов, которые повлияли на индекс качества магазина. Чтобы узнать значение индекса качества, выполните запрос [POST businesses/{businessId}/ratings/quality](../../reference/ratings/getQualityRatings.md).  |**⚙️ Лимит:** 100000 запросов в час| |-|  -}
  , getQualityRatings :: a -> Integer -> GetQualityRatingRequest -> m GetQualityRatingResponse{- ^ Возвращает значение индекса качества магазинов и его составляющие.  Подробнее об индексе качества читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/score/).  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getReportInfo :: a -> Text -> m GetReportInfoResponse{- ^ Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , getReturn :: a -> Integer -> Integer -> Integer -> m GetReturnResponse{- ^ Получает информацию по одному невыкупу или возврату.  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , getReturnApplication :: a -> Integer -> Integer -> Integer -> m FilePath{- ^ Загружает заявление покупателя на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , getReturnPhoto :: a -> Integer -> Integer -> Integer -> Integer -> Text -> m FilePath{- ^ Получает фотографии, которые покупатель приложил к заявлению на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , getReturns :: a -> Integer -> Maybe Text -> Maybe Int -> Maybe [Integer] -> Maybe [RefundStatusType] -> Maybe ReturnType -> Maybe Day -> Maybe Day -> Maybe Day -> Maybe Day -> m GetReturnsResponse{- ^ Получает список невыкупов и возвратов.  Чтобы получить информацию по одному возврату или невыкупу, выполните запрос [GET campaigns/{campaignId}/orders/{orderId}/returns/{returnId}](../../reference/orders/getReturn.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , getStocks :: a -> Integer -> Maybe Text -> Maybe Int -> GetWarehouseStocksRequest -> m GetWarehouseStocksResponse{- ^ Возвращает данные об остатках товаров (для всех моделей) и об [оборачиваемости](*turnover) товаров (для модели FBY).  {% note info \"По умолчанию данные по оборачивамости не возращаются\" %}  Чтобы они были в ответе, передавайте `true` в поле `withTurnover`.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-|  [//]: <> (turnover: Среднее количество дней, за которое товар продается. Подробно об оборачиваемости рассказано в Справке Маркета для продавцов https://yandex.ru/support/marketplace/analytics/turnover.html.)  -}
  , getSuggestedOfferMappingEntries :: a -> Integer -> GetSuggestedOfferMappingEntriesRequest -> m GetSuggestedOfferMappingEntriesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/suggestions](../../reference/business-assortment/getSuggestedOfferMappings.md).  {% endnote %}  Возвращает идентификаторы карточек товаров на Маркете, рекомендованных для ваших товаров.  Каждому товару, который вы размещаете, должна соответствовать карточка товара на Маркете со своим идентификатором — SKU на Маркете. Он указывается в URL карточки товара, после «...sku=», например:  ##https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016…##  Чтобы получить для товаров рекомендованные SKU на Маркете, передайте в теле POST-запроса как можно больше информации о них: названия, производителей, штрихкоды, цены и т. д.  Полученные SKU можно передать вместе с информацией о ваших товарах с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/updates](../../reference/offer-mappings/updateOfferMappingEntries.md).  В одном запросе можно получить не более 500 рекомендаций.  |**⚙️ Лимит:** 100 000 рекомендаций в час| |-|  -}
  , getSuggestedOfferMappings :: a -> Integer -> GetSuggestedOfferMappingsRequest -> m GetSuggestedOfferMappingsResponse{- ^ Возвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.  Пользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточки по предоставленным вами данным.  **Как пользоваться запросом**  1. Передайте Маркету список товаров, которые нужно проверить. 2. В ответ вы получите список SKU на Маркете с расшифровкой: названием, идентификатором модели, категорией. 3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида `https://market.yandex.ru/product/<marketModelId>?sku=<marketSku>`. 4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать `marketSKU`, который ему подходит по вашему мнению.  {% note info \"𝓠 Как определить `marketSku` товара, найденного на Маркете?\" %}  𝓐 Он есть в адресе страницы товара — расположен после `sku=`.  Например, `https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016`  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в час| |-|  -}
  , getSuggestedPrices :: a -> Integer -> SuggestPricesRequest -> m SuggestPricesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [отчет «Цены на рынке»](../../reference/reports/generatePricesReport.md).  {% endnote %}  {% note warning \"\" %}  Этот метод подходит только тем магазинам, которые устанавливают цены на товары в рублях.  {% endnote %}  Возвращает цены для продвижения товаров, которые вы размещаете на Маркете.  Товары, для которых нужно получить цены, передаются в теле POST-запроса.  Цены для продвижения зависят от цен, установленных на товары другими партнерами. Если один товар поставляют несколько партнеров, на Маркете сначала продается товар с более низкой ценой. Когда закончится товар по низкой цене, начнет продаваться товар по более высокой цене.  Выходные данные содержат для каждого товара несколько цен, соответствующих разным типам продвижения.  Установить цены на товары можно с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md) или другими способами: например, указать их в файле с каталогом. Также вы можете использовать стратегии для автоматической установки рекомендованных цен или минимальных цен на Маркете.  Подробно об автоматическом управлении ценами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/prices.html).  |**⚙️ Лимит:** 100 000 товаров в час| |-|  -}
  , getWarehouses :: a -> Integer -> m GetWarehousesResponse{- ^ Возвращает список складов и, если склады объединены, список групп складов. [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)  Среди прочего запрос позволяет определить идентификатор, который нужно использовать при передаче остатков для группы складов.  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , provideOrderItemIdentifiers :: a -> Integer -> Integer -> ProvideOrderItemIdentifiersRequest -> m ProvideOrderItemIdentifiersResponse{- ^ {% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Передает Маркету коды маркировки для единиц товара в указанном заказе.  Принимаются коды следующих типов:  * Коды «Честного знака». * УИН для ювелирных изделий. * РНПТ и ГТД для импортных прослеживаемых товаров.  {% note warning %}  Прежде чем работать с этим методом, обязательно прочтите [статью о работе с маркируемыми товарами](https://yandex.ru/support/marketplace/orders/cz.html).  {% endnote %}  Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , putBidsForBusiness :: a -> Integer -> PutSkuBidsRequest -> m EmptyApiResponse{- ^ Запускает буст продаж — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  {% cut \"Как в кабинете выглядит кампания, созданная через API\" %}  ![](../../_images/api-boost.png)  {% endcut %}  При первом использовании запроса Маркет: создаст единую на все магазины бизнес-аккаунта кампанию, добавит в нее товары с указанными ставками, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же созданной через API кампанией. Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. Другими кампаниями управлять через API не получится. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , putBidsForCampaign :: a -> Integer -> PutSkuBidsRequest -> m EmptyApiResponse{- ^ Запускает буст продаж в указанном магазине — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  При первом использовании запроса Маркет: создаст кампанию, добавит в нее товары с указанными ставками для заданного магазина, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же кампанией, созданной через этот запрос или [PUT businesses/{businessId}/bids](/reference/bids/putBidsForBusiness). Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , refreshFeed :: a -> Integer -> Integer -> m EmptyApiResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет сообщить, что магазин обновил прайс-лист. После этого Маркет начнет обновление данных на сервисе. 1. Магазин обновляет прайс-лист, ссылку на который он указал в кабинете. 2. Магазин отправляет Маркету запрос методом `POST campaigns/{campaignId}/feeds/{feedId}/refresh`. 3. Маркет начинает обновление данных магазина на сервисе.  {% note alert %}  Запрос работает только для включенных магазинов. Если магазин выключен, данные на Маркете не обновятся, даже если HTTP-код — `200 OK`. Проверить статус магазина можно с помощью базовых запросов или на странице бизнес-аккаунта.  {% endnote %}  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-|  -}
  , searchRegionChildren :: a -> Integer -> Maybe Int -> Maybe Int -> m GetRegionWithChildrenResponse{- ^ Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-|  -}
  , searchRegionsById :: a -> Integer -> m GetRegionsResponse{- ^ Возвращает информацию о регионе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-|  -}
  , searchRegionsByName :: a -> Maybe Text -> Maybe Text -> Maybe Int -> m GetRegionsResponse{- ^ Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.  Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-|  -}
  , sendFileToChat :: a -> Integer -> Maybe Integer -> FormSendFileToChat -> m EmptyApiResponse{- ^ Отправляет файл в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , sendMessageToChat :: a -> Integer -> Maybe Integer -> SendMessageToChatRequest -> m EmptyApiResponse{- ^ Отправляет сообщение в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , setFeedParams :: a -> Integer -> Integer -> SetFeedParamsRequest -> m EmptyApiResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет магазину изменить параметры прайс-листа.  Чтобы отредактировать параметр прайс-листа, передайте в теле запроса: `name` (название параметра) и `value` (значение параметра).  Чтобы отменить установленное значение, передайте в теле запроса: `name` (название параметра) и `delete=true` (удалить значение).  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-|  -}
  , setOrderBoxLayout :: a -> Integer -> Integer -> SetOrderBoxLayoutRequest -> m SetOrderBoxLayoutResponse{- ^ {% note tip \"Подходит и для DBS\" %}  Запрос предназначен для работы с FBS-заказами, но вы можете использовать его для обработки DBS-заказов, если это удобно.  {% endnote %}  Позволяет выполнить три операции:  * передать Маркету информацию о распределении товаров по коробкам; * передать Маркету коды маркировки для товаров; * удалить товар из заказа, если его не оказалось на складе.  Если нужно что-то поправить в переданных данных, просто повторите запрос — это можно делать сколько угодно раз до перевода заказа в статус **Готов к отгрузке**. ⚠️ Если вы меняете раскладку уже после печати и расклейки ярлыков, не забудье перепечатать их и наклеить заново.  ## Как передать информацию о распределении товаров  В этом запросе вам нужно передать Маркету список коробок и указать, какие именно товары лежат в каждой из них. Коробки могут быть двух типов:  * **Содержащие товары целиком.** Такая коробка может содержать сколько угодно единиц любых товаров.  * **Содержащие часть товара.** Такие коробки содержат по одной части одного товара. Например, одна содержит внешний блок кондиционера, а другая — внутренний блок.  ⚠️ Одна коробка не может содержать и товары целиком, и части товаров.  ## Как передавать коды маркировки  Если в заказе есть товары, подлежащие маркировке, в запросе нужно передать соответствующие уникальные коды. [Что такое маркировка?](https://yandex.ru/support/marketplace/orders/cz.html)  Принимаются коды следующих типов:  * Коды «Честного знака». * УИН для ювелирных изделий. * РНПТ и ГТД для импортных прослеживаемых товаров.  Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.  Если товар едет в нескольких коробках, код маркировки нужно передать для каждой из них.  ## Как удалить товар из заказа  Чтобы удалить товар из заказа:  1. Добавьте в запрос `allowRemove: true`. 2. Передайте распределение по коробкам без товара, который нужно удалить.  {% note warning \"Удаление нельзя отменить\" %}  Эта операция необратима: покупатель сразу получит уведомление, а состав заказа изменится.  {% endnote %}  Чтобы удалить позицию целиком, не передавайте соответствующий `OrderBoxLayoutItemDTO`. Чтобы уменьшить количество товара, передайте уменьшенное значение в поле `fullCount`.  Нельзя удалить или уменьшить количество товара, если он:  * добавлен по акции; * составляет 99% стоимости заказа; * единственный товар в заказе.  Если вы не можете отгрузить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.  {% note info \"Увеличить заказ нельзя\" %}  С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.  {% endnote %}  ## Примеры  {% cut \"Товар умещается в коробку\" %}  Вот как будет выглядеть запрос, если в одной коробке едут:    * три единицы одного товара, требующего маркировки;   * одна единица другого товара, не требущего маркировки.    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"fullCount\": 3,                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           },                           {                               \"cis\": \"010304109478gftJ14545762!\\u001dhGt264\"                           },                           {                               \"cis\": \"010304109478fRs28323ks23!\\u001dhet201\"                           }                       ]                   },                   {                       \"id\": 654321,                       \"fullCount\": 1                   }               ]           }       ]   }   ```  {% endcut %}  {% cut \"Товар едет в разных коробках\" %}  Вот как будет выглядеть запрос, если товар едет в двух коробках:    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           }       ]   }   ```  {% endcut %}  {% cut \"Одинаковые товары, где каждый едет в нескольких коробках\" %}  Вот как будет выглядеть запрос, если каждый из двух одинаковых товаров едет в двух коробках:    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           }       ]   }   ```  {% endcut %}  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , setOrderShipmentBoxes :: a -> Integer -> Integer -> Integer -> SetOrderShipmentBoxesRequest -> m SetOrderShipmentBoxesResponse{- ^ {% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Отгружаемый Маркету заказ может не влезть в одну коробку или упаковку — в этом случае получается, что он занимает несколько грузовых мест.  Количество грузовых мест нужно обязательно передавать Маркету, если оно не равно 1. Это делается перед переводом его в статус **Готов к отгрузке**. Подробно о том, что в какой момент нужно передавать, рассказано в [пошаговой инструкции](../../step-by-step/fbs.md).  Метод устроен немного нестандартно: количество задается длиной массива пустых объектов.  Раньше метод требовал передачи большего количества данных. Запросы, оформленные по старому образцу, работают, но лучше делать по-новому.  {% cut \"Как было раньше\" %}  Структура тела PUT-запроса:  ``` {   \"boxes\":   [     {       \"fulfilmentId\": \"{string}\",       \"weight\": {int64},       \"width\": {int64},       \"height\": {int64},       \"depth\": {int64},       \"items\":       [         {           \"id\": {int64},           \"count\": {int32}         },         ...       ]     },     ...   ] } ``` | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `boxes`       |           | Список грузовых мест.       |  **Параметры, вложенные в `boxes`** | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `fulfilmentId`       |  String   | Идентификатор грузового места в информационной системе магазина. Сформируйте идентификатор по шаблону: `номер заказа на Маркете-номер грузового места`. Например, `7206821‑1, 7206821‑2` и т. д. | | `weight`       | Int64        | Масса брутто грузового места (суммарная масса упаковки и содержимого) в граммах. | | `width`       | Int64   | Ширина грузового места в сантиметрах.       | | `height`       | Int64   | Высота грузового места в сантиметрах.       | | `depth`       | Int64   | Глубина грузового места в сантиметрах.        | | `items`       | Int64   | Список товаров в грузовом месте.       |  **Параметры, вложенные в `items`** | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `id`       | Int64     | Идентификатор товара в рамках заказа.   | | `count`    | Int32     | Количество единиц товара в грузовом месте.       |  {% endcut %}  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , skipGoodsFeedbacksReaction :: a -> Integer -> SkipGoodsFeedbackReactionRequest -> m EmptyApiResponse{- ^ Пропускает отзывы — они больше не будут возвращаться в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , updateBusinessPrices :: a -> Integer -> UpdateBusinessPricesRequest -> m EmptyApiResponse{- ^ Устанавливает [базовые цены](*default-price). Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , updateCampaignOffers :: a -> Integer -> UpdateCampaignOffersRequest -> m EmptyApiResponse{- ^ Изменяет параметры продажи товаров в конкретном магазине: доступность товара, условия доставки и самовывоза, применяемую ставку НДС.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , updateGoodsFeedbackComment :: a -> Integer -> UpdateGoodsFeedbackCommentRequest -> m UpdateGoodsFeedbackCommentResponse{- ^ Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.  Для создания комментария к отзыву передайте только идентификатор отзыва `feedbackId`.  Чтобы добавить комментарий к другому комментарию, передайте:  * `feedbackId` — идентификатор отзыва; * `comment.parentId` — идентификатор родительского комментария.  Чтобы изменить комментарий, передайте:  * `feedbackId`— идентификатор отзыва; * `comment.id` — идентификатор комментария, который нужно изменить.  Если передать одновременно `comment.parentId` и `comment.id`, будет изменен существующий комментарий.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , updateOfferContent :: a -> Integer -> UpdateOfferContentRequest -> m UpdateOfferContentResponse{- ^ Редактирует характеристики товара, которые специфичны для категории, к которой он относится.  {% note warning \"Здесь только то, что относится к конкретной категории\" %}  Если вам нужно изменить основные параметры товара (название, описание, изображения, видео, производитель, штрихкод), воспользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Чтобы удалить характеристики, которые заданы в параметрах с типом `string`, передайте пустое значение.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , updateOfferMappingEntries :: a -> Integer -> UpdateOfferMappingEntryRequest -> m EmptyApiResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Добавляет товары, указанные в запросе, в ваш каталог товаров и редактирует уже имеющиеся товары.  Информацию о товарах нужно передать в теле POST-запроса.  У каждого товара должен быть ваш SKU — уникальный код, который вы используете для идентификации товара:  * Чтобы добавить в каталог новый товар, укажите в параметре `shopSku` ваш SKU, которого еще нет в каталоге. * Чтобы отредактировать товар из каталога, укажите в параметре `shopSku` ваш SKU этого товара в каталоге.  В обоих случаях в запросе нужно передать полное описание товара, даже если вы хотите изменить только несколько характеристик.  Если вы знаете, какой карточке товара на Маркете соответствует ваш товар, укажите ее идентификатор (SKU на Маркете) во входном параметре mapping. Получить SKU на Маркете рекомендованной карточки товара можно с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/suggestions](../../reference/offer-mappings/getSuggestedOfferMappingEntries.md) или через кабинет. Если SKU на Маркете не указан, сотрудники Маркета сами подберут или создадут подходящую карточку товара, либо у него появится статус `NEED_CONTENT` (нужно найти карточку или создать ее самостоятельно) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  Перед публикацией товары проходят модерацию. Если в одном из отправленных товаров найдена ошибка, ответ на запрос будет иметь HTTP-код 400 Bad Request, и ни один из товаров не отправится на модерацию. При этом если вы не передадите все обязательные параметры для какого‑либо товара, после модерации у него появится статус `NEED_INFO` (в описании товара не хватает информации) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  В одном запросе можно добавить не более 500 товаров.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5 000 товаров в минуту| |-|  -}
  , updateOfferMappings :: a -> Integer -> UpdateOfferMappingsRequest -> m UpdateOfferMappingsResponse{- ^ Добавляет товары в каталог, передает их категории на Маркете и характеристики, необходимые для этих категории. Также редактирует информацию об уже имеющихся товарах.  Список категорий Маркета можно получить с помощью запроса [POST categories/tree](../../reference/categories/getCategoriesTree.md), а характеристики товаров по категориям с помощью [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).  Чтобы **добавить новый товар**, передайте его с новым идентификатором, который раньше никогда не использовался в каталоге. Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой. Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**SKU на Маркете**) в поле `marketSKU`.  Для **новых товаров** обязательно укажите параметры: `offerId`, `name`, `marketCategoryId` или `category`, `pictures`, `vendor`, `description`.  Чтобы **отредактировать информацию о товаре**, передайте новые данные, указав в `offerId` соответствующий **ваш SKU**. Поля, в которых ничего не меняется, можно не передавать.  Чтобы **удалить характеристики**, которые заданы в параметрах с типом `string`, передайте пустое значение.  Параметр `offerId` должен быть **уникальным** для всех товаров, которые вы передаете.  {% note warning \"Правила использования SKU\" %}  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , updateOrderItems :: a -> Integer -> Integer -> UpdateOrderItemRequest -> m NoContent{- ^ {% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Изменяет состав заказа, если позволяет выбранная служба доставки, в случаях:  * покупатель уменьшил количество товара; * магазин не может поставить все товары в заказе.  Для этого заказ должен находится в статусе `\"status\": \"PROCESSING\"` этапа обработки `\"substatus\": \"STARTED\"`. После передачи статуса `\"substatus\": \"READY_TO_SHIP\"` изменить состав невозможно.  Если одинаковых товаров несколько, для уменьшения количества передайте обновленное значение в атрибуте `count` параметра `item`.  Чтобы полностью удалить товар из заказа:  * передайте значение `0`; или * не передавайте параметр `item`.  Нельзя удалить или уменьшить количество товара, если он:  * добавлен по акции; * составляет 99% стоимости заказа; * единственный товар в заказе.  Если необходимо удалить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.  {% note info \"Увеличить заказ нельзя\" %}  С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.  {% endnote %}  **Возврат денег покупателю**  Если покупатель оплатил товар при оформлении, Маркет вернет ему деньги за удаленные из заказа товары в течение двух дней:  * при оплате банковской картой — с момента, когда магазин переведет заказ в статус `SHIPPED`;  * при оплате через Apple Pay или Google Pay — с момента, когда магазин удалит товар из заказа.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , updateOrderStatus :: a -> Integer -> Integer -> UpdateOrderStatusRequest -> m UpdateOrderStatusResponse{- ^ Изменяет статус заказа. Возможные изменения статусов:  * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`. * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`. * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , updateOrderStatuses :: a -> Integer -> UpdateOrderStatusesRequest -> m UpdateOrderStatusesResponse{- ^ Изменяет статусы нескольких заказов.  Возможные изменения статусов:  * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"`и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`. * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`. * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.  Максимальное количество заказов, у которых можно изменить статус в одном запросе, — 30.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , updatePrices :: a -> Integer -> UpdatePricesRequest -> m EmptyApiResponse{- ^ Устанавливает цены на товары в магазине. Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для управления базовыми ценами используйте [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , updatePromoOffers :: a -> Integer -> UpdatePromoOffersRequest -> m UpdatePromoOffersResponse{- ^ Добавляет товары в акцию или изменяет цены на товары, которые участвуют в акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , updateStocks :: a -> Integer -> UpdateStocksRequest -> m EmptyApiResponse{- ^ Передает данные об остатках товаров на витрине.  Обязательно указывайте SKU **в точности** так, как он указан в каталоге. Например, _557722_ и _0557722_ — это два разных SKU.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-|  -}
  , verifyOrderEac :: a -> Integer -> Integer -> VerifyOrderEacRequest -> m VerifyOrderEacResponse{- ^ Отправляет Маркету код подтверждения для его проверки.  Код подтверждает передачу заказа или невыкупа:  * курьеру — курьер должен назвать магазину код; * магазину — магазин называет код курьеру.  Если магазин получает невыкупленный заказ, то ему нужно назвать курьеру код из кабинета или приложения.  Если у магазина настроена работа с кодами подтверждения, в запросах [POST order/status](../../pushapi/reference/postOrderStatus.md), [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md), [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md), [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) в параметре `delivery`, вложенном в `order` будет возвращаться параметр `eacType` с типом `Enum` — тип кода подтверждения для передачи заказа.  Возможные значения: `MERCHANT_TO_COURIER` — магазин называет код курьеру, `COURIER_TO_MERCHANT` — курьер называет код магазину.  Параметр `eacType` возвращается при статусах заказа `COURIER_FOUND`, `COURIER_ARRIVED_TO_SENDER` и `DELIVERY_SERVICE_UNDELIVERED`. Если заказ в других статусах, параметр может отсутствовать.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , addHiddenOffers :: a -> Integer -> AddHiddenOffersRequest -> m EmptyApiResponse{- ^ Скрывает товары магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , addOffersToArchive :: a -> Integer -> AddOffersToArchiveRequest -> m AddOffersToArchiveResponse{- ^ Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.  {% note warning \"В архив нельзя отправить товар, который хранится на складе Маркета\" %}  Вначале такой товар нужно распродать или вывезти.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , calculateTariffs :: a -> CalculateTariffsRequest -> m CalculateTariffsResponse{- ^ Рассчитывает стоимость услуг Маркета для товаров с заданными параметрами. Порядок товаров в запросе и ответе сохраняется, чтобы определить, для какого товара рассчитана стоимость услуги.  Обратите внимание: калькулятор осуществляет примерные расчеты. Финальная стоимость для каждого заказа зависит от предоставленных услуг.  В запросе можно указать либо параметр `campaignId`, либо `sellingProgram`. Совместное использование параметров приведет к ошибке.  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , confirmBusinessPrices :: a -> Integer -> ConfirmPricesRequest -> m EmptyApiResponse{- ^ Подтверждает основную цену на товары, которые попали в карантин, и удаляет их из карантина.  Основная цена задается в каталоге и действует во всех магазинах кабинета.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , confirmCampaignPrices :: a -> Integer -> ConfirmPricesRequest -> m EmptyApiResponse{- ^ Подтверждает в заданном магазине цену на товары, которые попали в карантин, и удаляет их из карантина.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , confirmShipment :: a -> Integer -> Integer -> ConfirmShipmentRequest -> m EmptyApiResponse{- ^ Подтверждает отгрузку товаров в сортировочный центр или пункт приема заказов. |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , createChat :: a -> Integer -> CreateChatRequest -> m CreateChatResponse{- ^ Создает новый чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , deleteCampaignOffers :: a -> Integer -> DeleteCampaignOffersRequest -> m DeleteCampaignOffersResponse{- ^ Удаляет заданные товары из заданного магазина.  {% note warning \"Запрос удаляет товары именно из конкретного магазина\" %}  На продажи в других магазинах и на наличие товара в общем каталоге он не влияет.  {% endnote %}  Товар не получится удалить, если он хранится на складах Маркета.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , deleteGoodsFeedbackComment :: a -> Integer -> DeleteGoodsFeedbackCommentRequest -> m EmptyApiResponse{- ^ Удаляет комментарий магазина.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , deleteHiddenOffers :: a -> Integer -> DeleteHiddenOffersRequest -> m EmptyApiResponse{- ^ Возобновляет показ скрытых вами товаров магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , deleteOffers :: a -> Integer -> DeleteOffersRequest -> m DeleteOffersResponse{- ^ Удаляет товары из каталога.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , deleteOffersFromArchive :: a -> Integer -> DeleteOffersFromArchiveRequest -> m DeleteOffersFromArchiveResponse{- ^ Восстанавливает товары из архива.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , deletePromoOffers :: a -> Integer -> DeletePromoOffersRequest -> m DeletePromoOffersResponse{- ^ Убирает товары из акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , downloadShipmentAct :: a -> Integer -> Integer -> m FilePath{- ^ {% note warning \"Экспресс‑доставка\" %}  Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам Яндекс Go, подготавливать акт приема‑передачи не нужно.  {% endnote %}  Запрос формирует акт приема-передачи заказов, входящих в отгрузку, и возвращает акт в формате PDF. В акте содержатся собранные и готовые к отправке заказы.  При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:  {% cut \"Данные, из которых Маркет формирует акт\" %}  | **Данные в акте**                                         | **Описание**                                                                                                                                                                                                                                                         | | --------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Дата                                                      | Дата запроса.                                                                                                                                                                                                                                                        | | Отправитель                                               | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         | | Исполнитель                                               | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                | | № отправления в системе заказчика                         | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              | | № отправления в системе исполнителя (субподрядчика)       | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             | | Объявленная ценность                                      | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       | | Вес                                                       | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). | | Количество мест                                           | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |  {% endcut %}  Остальные поля нужно заполнить самостоятельно в распечатанном акте. |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , downloadShipmentDiscrepancyAct :: a -> Integer -> Integer -> m FilePath{- ^ Возвращает акт расхождений для заданной отгрузки. |**⚙️ Лимит:** 200 запросов в час| |-|  -}
  , downloadShipmentInboundAct :: a -> Integer -> Integer -> m FilePath{- ^ Возвращает фактический акт приема-передачи для заданной отгрузки.  Такой акт становится доступен спустя несколько часов после завершения отгрузки. Он может понадобиться, если после отгрузки обнаружатся расхождения.  |**⚙️ Лимит:** 200 запросов в час| |-|  -}
  , downloadShipmentPalletLabels :: a -> Integer -> Integer -> Maybe ShipmentPalletLabelPageFormatType -> m FilePath{- ^ PDF-файл с ярлыками на каждый короб или палету в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).  Распечатайте по несколько копий каждого ярлыка: на одну тару нужно наклеить минимум 2 ярлыка с разных сторон.  Количество упаковок в отгрузке задается в запросе [PUT campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets](../../reference/shipments/setShipmentPalletsCount.md). |**⚙️ Лимит:** 200 запросов в час| |-|  -}
  , downloadShipmentReceptionTransferAct :: a -> Integer -> Maybe Int -> m FilePath{- ^ Запрос подтверждает ближайшую отгрузку и возвращает акт приема-передачи в формате PDF.  {% note warning \"Экспресс‑доставка\" %}  Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам [Яндекс Go](https://go.yandex/), подготавливать акт приема‑передачи не нужно.  {% endnote %}  В акт входят собранные и готовые к отправке заказы, которые отгружаются в сортировочный центр или пункт приема или курьерам Маркета.  При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:  {% cut \"Данные, из которых Маркет формирует акт\" %}  | **Данные в акте**                                   | **Описание**                                                                                                                                                                                                                                                         | | --------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Отправитель                                         | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         | | Исполнитель                                         | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                | | № отправления в системе заказчика                   | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              | | № отправления в системе исполнителя (субподрядчика) | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             | | Объявленная ценность                                | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       | | Стоимость всех товаров в заказе                     | Стоимость всех заказанных товаров.                                                                                                                                                                                                                                   | | Вес                                                 | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). | | Количество мест                                     | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |  {% endcut %}  Остальные поля нужно заполнить самостоятельно в распечатанном акте. |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , downloadShipmentTransportationWaybill :: a -> Integer -> Integer -> m FilePath{- ^ Возвращает транспортную накладную для заданной отгрузки.  Транспортная накладная понадобится, если вы отгружаете товары непосредственно со своего склада. [Подробно об этом способе отгрузки](https://yandex.ru/support/marketplace/orders/fbs/settings/shipment.html#at-your-warehouse)  |**⚙️ Лимит:** 200 запросов в час| |-|  -}
  , generateBoostConsolidatedReport :: a -> Maybe ReportFormatType -> GenerateBoostConsolidatedRequest -> m GenerateReportResponse{- ^ Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateCompetitorsPositionReport :: a -> Maybe ReportFormatType -> GenerateCompetitorsPositionReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \"Значение -1 в отчете\" %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-|  -}
  , generateGoodsFeedbackReport :: a -> Maybe ReportFormatType -> GenerateGoodsFeedbackRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateGoodsRealizationReport :: a -> Maybe ReportFormatType -> GenerateGoodsRealizationReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateMassOrderLabelsReport :: a -> Maybe PageFormatType -> GenerateMassOrderLabelsRequest -> m GenerateReportResponse{- ^ Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , generateOrderLabel :: a -> Integer -> Integer -> Integer -> Integer -> Maybe PageFormatType -> m FilePath{- ^ Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , generateOrderLabels :: a -> Integer -> Integer -> Maybe PageFormatType -> m FilePath{- ^ Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , generatePricesReport :: a -> Maybe ReportFormatType -> GeneratePricesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateShelfsStatisticsReport :: a -> Maybe ReportFormatType -> GenerateShelfsStatisticsRequest -> m GenerateReportResponse{- ^ Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateShipmentListDocumentReport :: a -> GenerateShipmentListDocumentReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateShowsSalesReport :: a -> Maybe ReportFormatType -> GenerateShowsSalesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-|  -}
  , generateStocksOnWarehousesReport :: a -> Maybe ReportFormatType -> GenerateStocksOnWarehousesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateUnitedMarketplaceServicesReport :: a -> Maybe ReportFormatType -> GenerateUnitedMarketplaceServicesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |-----------------------------|---------------------------------| |По дате начисления услуги    |`dateFrom` и `dateTo`            | |По дате формирования акта    |`year` и `month`                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateUnitedNettingReport :: a -> Maybe ReportFormatType -> GenerateUnitedNettingReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |-------------------------|---------------------------------------| |О платежах за период     |`dateFrom` и `dateTo`                  | |О платежном поручении    |`bankOrderId` и `bankOrderDateTime`    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateUnitedOrdersReport :: a -> Maybe ReportFormatType -> GenerateUnitedOrdersRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \"\" %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , getAllOffers :: a -> Integer -> Maybe Integer -> Maybe Int -> m GetAllOffersResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет максимально быстро получить информацию обо всех предложениях магазина, размещенных на Маркете. Возвращает результат в виде сегментов нефиксированного размера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Яндекс Маркета, с которой соотнесено предложение, а также аукционные ставки на него.  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — среднее количество таваров в каталоге за неделю * 25)  -}
  , getBidsInfoForBusiness :: a -> Integer -> Maybe Text -> Maybe Int -> GetBidsInfoRequest -> m GetBidsInfoResponse{- ^ Возвращает значения ставок для заданных товаров.  {% note warning \"\" %}  В ответе возвращаются значения только тех ставок, которые вы установили через запрос [PUT businesses/{businessId}/bids](../../reference/bids/putBidsForBusiness.md). Получить информацию по кампаниям, созданным в кабинете, не получится.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , getBidsRecommendations :: a -> Integer -> GetBidsRecommendationsRequest -> m GetBidsRecommendationsResponse{- ^ Возвращает рекомендованные ставки для заданных товаров — такие ставки обеспечивают вашим предложениям определенную долю показов, если цена не превышает рекомендованную.  Для одного товара может возвращаться одна рекомендованная ставка или несколько. Во втором случае разные ставки предназначены для достижения разной доли показов.  Если товар только добавлен в каталог, но пока не продается, рекомендованной ставки для него не будет.  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , getBusinessQuarantineOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetQuarantineOffersRequest -> m GetQuarantineOffersResponse{- ^ Возвращает список товаров, которые находятся в карантине по **основной цене**. Основная цена задается в каталоге и действует во всех магазинах кабинета.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , getBusinessSettings :: a -> Integer -> m GetBusinessSettingsResponse{- ^ Возвращает информацию о настройках кабинета, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaign :: a -> Integer -> m GetCampaignResponse{- ^ Возвращает информацию о магазине. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaignLogins :: a -> Integer -> m GetCampaignLoginsResponse{- ^ Возвращает список логинов, у которых есть доступ к магазину. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaignOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetCampaignOffersRequest -> m GetCampaignOffersResponse{- ^ Возвращает список товаров, которые размещены в заданном магазине. Для каждого товара указываются параметры размещения.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , getCampaignQuarantineOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetQuarantineOffersRequest -> m GetQuarantineOffersResponse{- ^ Возвращает список товаров, которые находятся в карантине по цене, установленной в заданном магазине.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , getCampaignRegion :: a -> Integer -> m GetCampaignRegionResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [GET campaigns/{campaignId}/settings](../../reference/campaigns/getCampaignSettings.md).  {% endnote %}  Возвращает регион, в котором находится магазин. |**⚙️ Лимит:** 5 000 запросов в час| |-|  -}
  , getCampaignSettings :: a -> Integer -> m GetCampaignSettingsResponse{- ^ Возвращает информацию о настройках магазина, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaigns :: a -> Maybe Int -> Maybe Int -> m GetCampaignsResponse{- ^ Возвращает список магазинов, к которым имеет доступ пользователь — владелец авторизационного токена, использованного в запросе. Для агентских пользователей список состоит из подагентских магазинов. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaignsByLogin :: a -> Text -> Maybe Int -> Maybe Int -> m GetCampaignsResponse{- ^ Возвращает список магазинов, к которым у пользователя с указанным логином есть доступ. |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , getCategoriesMaxSaleQuantum :: a -> GetCategoriesMaxSaleQuantumRequest -> m GetCategoriesMaxSaleQuantumResponse{- ^ Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getCategoriesTree :: a -> GetCategoriesRequest -> m GetCategoriesResponse{- ^ Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getCategoryContentParameters :: a -> Integer -> m GetCategoryContentParametersResponse{- ^ Возвращает список характеристик с допустимыми значениями для заданной категории.  |**⚙️ Лимит:** 50 категорий в минуту | |-|  -}
  , getChatHistory :: a -> Integer -> Maybe Integer -> Maybe Text -> Maybe Int -> GetChatHistoryRequest -> m GetChatHistoryResponse{- ^ Возвращает историю сообщений в чате с покупателем.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getChats :: a -> Integer -> Maybe Text -> Maybe Int -> GetChatsRequest -> m GetChatsResponse{- ^ Возвращает ваши чаты с покупателями.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getDeliveryServices :: a -> m GetDeliveryServicesResponse{- ^ Возвращает справочник служб доставки: идентификаторы и наименования. |**⚙️ Лимит:** 5 000 запросов в час| |-|  -}
  , getFeed :: a -> Integer -> Integer -> m GetFeedResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает информацию о прайс-листе, размещенном на Маркете для заданного магазина. Также ресурс возвращает результаты автоматических проверок прайс-листа. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getFeedIndexLogs :: a -> Integer -> Integer -> Maybe Int -> Maybe UTCTime -> Maybe UTCTime -> Maybe FeedIndexLogsStatusType -> m GetFeedIndexLogsResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает отчет по индексации прайс-листа для заданного магазина. Отчет позволяет получить статистику загрузки прайс-листа и результаты его автоматических проверок.  Данные в отчете возвращаются в порядке убывания значений параметра `generationId`.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getFeedbackAndCommentUpdates :: a -> Integer -> Maybe Text -> Maybe Int -> Maybe Day -> m GetFeedbackListResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает новые и обновленные отзывы о магазине на Маркете.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов. Выходные данные содержат идентификатор следующей страницы.  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , getFeeds :: a -> Integer -> m GetFeedsResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает список прайс-листов, размещенных на Маркете для магазина. Также ресурс возвращает результаты автоматических проверок прайс-листов. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getGoodsFeedbackComments :: a -> Integer -> Maybe Text -> Maybe Int -> GetGoodsFeedbackCommentsRequest -> m GetGoodsFeedbackCommentsResponse{- ^ Возвращает комментарии к отзыву.  Результаты возвращаются постранично, одна страница содержит не более 20 комментариев.  Комментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getGoodsFeedbacks :: a -> Integer -> Maybe Text -> Maybe Int -> GetGoodsFeedbackRequest -> m GetGoodsFeedbackResponse{- ^ Возвращает все отзывы о товарах продавца по указанным фильтрам.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов.  Отзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getGoodsStats :: a -> Integer -> GetGoodsStatsRequest -> m GetGoodsStatsResponse{- ^ Возвращает подробный отчет по товарам, которые вы разместили на Маркете. С помощью отчета вы можете узнать, например, об остатках на складе, об условиях хранения ваших товаров и т. д.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , getHiddenOffers :: a -> Integer -> Maybe [Text] -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> m GetHiddenOffersResponse{- ^ Возвращает список скрытых вами товаров для заданного магазина.  В списке будут товары, скрытые любым способом — по API, с помощью YML-фида, в кабинете и так далее.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , getOfferCardsContentStatus :: a -> Integer -> Maybe Text -> Maybe Int -> GetOfferCardsContentStatusRequest -> m GetOfferCardsContentStatusResponse{- ^ Возвращает сведения о состоянии контента для заданных товаров:  * создана ли карточка товара и в каком она статусе; * заполненность карточки в процентах; * переданные характеристики товаров; * есть ли ошибки или предупреждения, связанные с контентом; * рекомендации по заполнению карточки.  |**⚙️ Лимит:** 600 запросов в минуту| |-|  -}
  , getOfferMappingEntries :: a -> Integer -> Maybe [Text] -> Maybe [Text] -> Maybe OfferMappingKindType -> Maybe [OfferProcessingStatusType] -> Maybe [OfferAvailabilityStatusType] -> Maybe [Int] -> Maybe [Text] -> Maybe Text -> Maybe Int -> m GetOfferMappingEntriesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  Для каждого товара, который вы размещаете на Маркете, возвращается информация о карточках Маркета, к которым привязан этот товар:  * Идентификатор текущей карточки (marketSku), карточки, которая проходит модерацию и последней отклоненной карточки. * Описание товара, которое указано на карточке Маркета. Например, размер упаковки и вес товара.  Результаты возвращаются постранично. Выходные данные содержат идентификатор следующей страницы.  {% note info %}  Количество товаров в каталоге магазина считается по данным за последние семь дней (не включая сегодня).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров в каталоге магазина * 25)  -}
  , getOfferMappings :: a -> Integer -> Maybe Text -> Maybe Int -> GetOfferMappingsRequest -> m GetOfferMappingsResponse{- ^ Возвращает список товаров в каталоге, их категории на Маркете и характеристики каждого товара.  Можно использовать тремя способами: * задать список интересующих SKU; * задать фильтр — в этом случае результаты возвращаются постранично; * не передавать тело запроса, чтобы получить список всех товаров в каталоге.  |**⚙️ Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе| |-|  -}
  , getOfferRecommendations :: a -> Integer -> Maybe Text -> Maybe Int -> GetOfferRecommendationsRequest -> m GetOfferRecommendationsResponse{- ^ Метод возвращает рекомендации нескольких типов.  **1. Порог для привлекательной цены. Он нужен для участия в софинансировании скидок.**  Показывает, какие **цены для участия** нужно установить, чтобы получить максимальные шансы на срабатывание скидок, софинансируемых Маркетом. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)  **2. Оценка привлекательности цен на витрине.**  Привлекательность влияет на вероятность срабатывания скидок за счет Маркета. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#validation)  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , getOffers :: a -> Integer -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe CurrencyType -> Maybe Bool -> Maybe Int -> Maybe Int -> m GetOffersResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет фильтровать информацию о предложениях магазина, размещенных на Маркете, и искать предложения по заданному поисковому запросу.  Поиск предложений, размещенных на Маркете, работает по поисковому запросу аналогично поиску Маркета. Результаты возвращаются с использованием пейджера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Маркета, с которой соотнесено предложение, и аукционные ставки на него.  {% note info %}  Из-за особенностей поиска Маркета иногда на последних страницах пейджера фактическое количество результатов оказывается меньше количества, указанного ранее на предыдущих страницах.  В связи с этим настоятельно рекомендуется анализировать содержимое параметра pager для каждой полученной страницы.  {% endnote %}  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лисит товаров — среднее количество таваров в каталоге за неделю * 25)  -}
  , getOrder :: a -> Integer -> Integer -> m GetOrderResponse{- ^ Возвращает информацию о заказе.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , getOrderBusinessBuyerInfo :: a -> Integer -> Integer -> m GetBusinessBuyerInfoResponse{- ^ Возвращает информацию о покупателе по идентификатору заказа.  {% note info \"\" %}  Чтобы получить информацию о покупателе, который является физическим лицом, воспользуйтесь запросом [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  {% endnote %}  Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY`, `PICKUP` или `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-|  -}
  , getOrderBusinessDocumentsInfo :: a -> Integer -> Integer -> m GetBusinessDocumentsInfoResponse{- ^ Возвращает информацию о документах по идентификатору заказа.  Получить данные можно после того, как заказ перейдет в статус `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-|  -}
  , getOrderLabelsData :: a -> Integer -> Integer -> m GetOrderLabelsDataResponse{- ^ Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , getOrders :: a -> Integer -> Maybe [Integer] -> Maybe [OrderStatusType] -> Maybe [OrderSubstatusType] -> Maybe Day -> Maybe Day -> Maybe Day -> Maybe Day -> Maybe UTCTime -> Maybe UTCTime -> Maybe OrderDeliveryDispatchType -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe OrderBuyerType -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> m GetOrdersResponse{- ^ Возвращает информацию о заказах. Запрос можно использовать, чтобы узнать, нет ли новых заказов.  Доступна фильтрация по нескольким характеристикам заказов:  * дате оформления;  * статусу;  * идентификаторам заказов;  * этапу обработки или причине отмены;  * типу (настоящий или тестовый);  * дате отгрузки в службу доставки;  * дате и времени обновления заказа.  Информация о заказах, доставленных или отмененных больше 30 дней назад, не возвращается. Ее можно получить с помощью запроса информации об отдельном заказе [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) (если у вас есть идентификатор заказа) или запроса отчета по заказам [POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md).  Максимальный диапазон дат за один запрос к ресурсу — 30 дней. Максимальное количество заказов в выходных данных запроса — 50.  Результаты возвращаются постранично. Для навигации по страницам используйте параметры `page_token` и `limit`.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , getOrdersStats :: a -> Integer -> Maybe Text -> Maybe Int -> GetOrdersStatsRequest -> m GetOrdersStatsResponse{- ^ Возвращает информацию по заказам на Маркете, в которых есть ваши товары. С помощью нее вы можете собрать статистику по вашим заказам и узнать, например, какие из товаров чаще всего возвращаются покупателями, какие, наоборот, пользуются большим спросом, какая комиссия начисляется за заказы и т. п.  {% note info \"\" %}  Раньше генерация детальной информации по заказам называлась **Отчет по заказам**. Сейчас это новый отчет. [Подробнее об отчете](../../reference/reports/generateUnitedOrdersReport.md)  {% endnote %}  В одном запросе можно получить информацию не более чем по 200 заказам.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , getPrices :: a -> Integer -> Maybe Text -> Maybe Int -> Maybe Bool -> m GetPricesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST campaigns/{campaignId}/offer-prices](../../reference/assortment/getPricesByOfferIds.md).  {% endnote %}  Возвращает список цен, установленных вами на товары любым способом: например, через партнерский API или в файле с каталогом.  {% note info %}  Общее количество товаров считается по данным за последние семь дней (не включая сегодня) и не может быть выше 2 миллионов.  {% endnote %}  Способы установки цен описаны [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/assortment/operations/prices.html).  |**⚙️ Лимит:** ```(количество товаров партнера на витрине) * 25``` товаров в сутки| |-|  -}
  , getPricesByOfferIds :: a -> Integer -> Maybe Text -> Maybe Int -> GetPricesByOfferIdsRequest -> m GetPricesByOfferIdsResponse{- ^ Возвращает список цен на указанные товары в магазине.  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для просмотра базовых цен используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров на витрине * 25)  -}
  , getPromoOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetPromoOffersRequest -> m GetPromoOffersResponse{- ^ Возвращает список товаров, которые участвуют или могут участвовать в акции.  {% note warning %}  В параметре `limit` не передавайте значение больше 500.  {% endnote %}  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getPromos :: a -> Integer -> GetPromosRequest -> m GetPromosResponse{- ^ Возвращает информацию об акциях Маркета.  По умолчанию возвращаются акции, в которых продавец участвует или может принять участие.  Чтобы получить текущие или завершенные акции, передайте параметр `participation`.  Типы акций, которые возвращаются в ответе:  * прямая скидка; * флеш-акция; * скидка по промокоду.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getQualityRatingDetails :: a -> Integer -> m GetQualityRatingDetailsResponse{- ^ Возвращает список заказов, которые повлияли на индекс качества магазина. Чтобы узнать значение индекса качества, выполните запрос [POST businesses/{businessId}/ratings/quality](../../reference/ratings/getQualityRatings.md).  |**⚙️ Лимит:** 100000 запросов в час| |-|  -}
  , getQualityRatings :: a -> Integer -> GetQualityRatingRequest -> m GetQualityRatingResponse{- ^ Возвращает значение индекса качества магазинов и его составляющие.  Подробнее об индексе качества читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/score/).  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getReportInfo :: a -> Text -> m GetReportInfoResponse{- ^ Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , getReturn :: a -> Integer -> Integer -> Integer -> m GetReturnResponse{- ^ Получает информацию по одному невыкупу или возврату.  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , getReturnApplication :: a -> Integer -> Integer -> Integer -> m FilePath{- ^ Загружает заявление покупателя на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , getReturnPhoto :: a -> Integer -> Integer -> Integer -> Integer -> Text -> m FilePath{- ^ Получает фотографии, которые покупатель приложил к заявлению на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , getReturns :: a -> Integer -> Maybe Text -> Maybe Int -> Maybe [Integer] -> Maybe [RefundStatusType] -> Maybe ReturnType -> Maybe Day -> Maybe Day -> Maybe Day -> Maybe Day -> m GetReturnsResponse{- ^ Получает список невыкупов и возвратов.  Чтобы получить информацию по одному возврату или невыкупу, выполните запрос [GET campaigns/{campaignId}/orders/{orderId}/returns/{returnId}](../../reference/orders/getReturn.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , getShipment :: a -> Integer -> Integer -> Maybe Bool -> m GetShipmentResponse{- ^ Возвращает информацию об отгрузке по ее идентификатору. |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , getShipmentOrdersInfo :: a -> Integer -> Integer -> m GetShipmentOrdersInfoResponse{- ^ Возвращает информацию о возможности печати ярлыков-наклеек для заказов в отгрузке. |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , getStocks :: a -> Integer -> Maybe Text -> Maybe Int -> GetWarehouseStocksRequest -> m GetWarehouseStocksResponse{- ^ Возвращает данные об остатках товаров (для всех моделей) и об [оборачиваемости](*turnover) товаров (для модели FBY).  {% note info \"По умолчанию данные по оборачивамости не возращаются\" %}  Чтобы они были в ответе, передавайте `true` в поле `withTurnover`.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-|  [//]: <> (turnover: Среднее количество дней, за которое товар продается. Подробно об оборачиваемости рассказано в Справке Маркета для продавцов https://yandex.ru/support/marketplace/analytics/turnover.html.)  -}
  , getSuggestedOfferMappingEntries :: a -> Integer -> GetSuggestedOfferMappingEntriesRequest -> m GetSuggestedOfferMappingEntriesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/suggestions](../../reference/business-assortment/getSuggestedOfferMappings.md).  {% endnote %}  Возвращает идентификаторы карточек товаров на Маркете, рекомендованных для ваших товаров.  Каждому товару, который вы размещаете, должна соответствовать карточка товара на Маркете со своим идентификатором — SKU на Маркете. Он указывается в URL карточки товара, после «...sku=», например:  ##https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016…##  Чтобы получить для товаров рекомендованные SKU на Маркете, передайте в теле POST-запроса как можно больше информации о них: названия, производителей, штрихкоды, цены и т. д.  Полученные SKU можно передать вместе с информацией о ваших товарах с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/updates](../../reference/offer-mappings/updateOfferMappingEntries.md).  В одном запросе можно получить не более 500 рекомендаций.  |**⚙️ Лимит:** 100 000 рекомендаций в час| |-|  -}
  , getSuggestedOfferMappings :: a -> Integer -> GetSuggestedOfferMappingsRequest -> m GetSuggestedOfferMappingsResponse{- ^ Возвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.  Пользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточки по предоставленным вами данным.  **Как пользоваться запросом**  1. Передайте Маркету список товаров, которые нужно проверить. 2. В ответ вы получите список SKU на Маркете с расшифровкой: названием, идентификатором модели, категорией. 3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида `https://market.yandex.ru/product/<marketModelId>?sku=<marketSku>`. 4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать `marketSKU`, который ему подходит по вашему мнению.  {% note info \"𝓠 Как определить `marketSku` товара, найденного на Маркете?\" %}  𝓐 Он есть в адресе страницы товара — расположен после `sku=`.  Например, `https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016`  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в час| |-|  -}
  , getSuggestedPrices :: a -> Integer -> SuggestPricesRequest -> m SuggestPricesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [отчет «Цены на рынке»](../../reference/reports/generatePricesReport.md).  {% endnote %}  {% note warning \"\" %}  Этот метод подходит только тем магазинам, которые устанавливают цены на товары в рублях.  {% endnote %}  Возвращает цены для продвижения товаров, которые вы размещаете на Маркете.  Товары, для которых нужно получить цены, передаются в теле POST-запроса.  Цены для продвижения зависят от цен, установленных на товары другими партнерами. Если один товар поставляют несколько партнеров, на Маркете сначала продается товар с более низкой ценой. Когда закончится товар по низкой цене, начнет продаваться товар по более высокой цене.  Выходные данные содержат для каждого товара несколько цен, соответствующих разным типам продвижения.  Установить цены на товары можно с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md) или другими способами: например, указать их в файле с каталогом. Также вы можете использовать стратегии для автоматической установки рекомендованных цен или минимальных цен на Маркете.  Подробно об автоматическом управлении ценами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/prices.html).  |**⚙️ Лимит:** 100 000 товаров в час| |-|  -}
  , getWarehouses :: a -> Integer -> m GetWarehousesResponse{- ^ Возвращает список складов и, если склады объединены, список групп складов. [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)  Среди прочего запрос позволяет определить идентификатор, который нужно использовать при передаче остатков для группы складов.  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , provideOrderItemIdentifiers :: a -> Integer -> Integer -> ProvideOrderItemIdentifiersRequest -> m ProvideOrderItemIdentifiersResponse{- ^ {% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Передает Маркету коды маркировки для единиц товара в указанном заказе.  Принимаются коды следующих типов:  * Коды «Честного знака». * УИН для ювелирных изделий. * РНПТ и ГТД для импортных прослеживаемых товаров.  {% note warning %}  Прежде чем работать с этим методом, обязательно прочтите [статью о работе с маркируемыми товарами](https://yandex.ru/support/marketplace/orders/cz.html).  {% endnote %}  Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , putBidsForBusiness :: a -> Integer -> PutSkuBidsRequest -> m EmptyApiResponse{- ^ Запускает буст продаж — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  {% cut \"Как в кабинете выглядит кампания, созданная через API\" %}  ![](../../_images/api-boost.png)  {% endcut %}  При первом использовании запроса Маркет: создаст единую на все магазины бизнес-аккаунта кампанию, добавит в нее товары с указанными ставками, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же созданной через API кампанией. Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. Другими кампаниями управлять через API не получится. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , putBidsForCampaign :: a -> Integer -> PutSkuBidsRequest -> m EmptyApiResponse{- ^ Запускает буст продаж в указанном магазине — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  При первом использовании запроса Маркет: создаст кампанию, добавит в нее товары с указанными ставками для заданного магазина, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же кампанией, созданной через этот запрос или [PUT businesses/{businessId}/bids](/reference/bids/putBidsForBusiness). Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , refreshFeed :: a -> Integer -> Integer -> m EmptyApiResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет сообщить, что магазин обновил прайс-лист. После этого Маркет начнет обновление данных на сервисе. 1. Магазин обновляет прайс-лист, ссылку на который он указал в кабинете. 2. Магазин отправляет Маркету запрос методом `POST campaigns/{campaignId}/feeds/{feedId}/refresh`. 3. Маркет начинает обновление данных магазина на сервисе.  {% note alert %}  Запрос работает только для включенных магазинов. Если магазин выключен, данные на Маркете не обновятся, даже если HTTP-код — `200 OK`. Проверить статус магазина можно с помощью базовых запросов или на странице бизнес-аккаунта.  {% endnote %}  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-|  -}
  , searchRegionChildren :: a -> Integer -> Maybe Int -> Maybe Int -> m GetRegionWithChildrenResponse{- ^ Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-|  -}
  , searchRegionsById :: a -> Integer -> m GetRegionsResponse{- ^ Возвращает информацию о регионе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-|  -}
  , searchRegionsByName :: a -> Maybe Text -> Maybe Text -> Maybe Int -> m GetRegionsResponse{- ^ Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.  Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-|  -}
  , searchShipments :: a -> Integer -> Maybe Text -> Maybe Int -> SearchShipmentsRequest -> m SearchShipmentsResponse{- ^ Возвращает информацию об отгрузках по заданным параметрам:  * дате; * статусу; * идентификаторам заказов.  Результаты возвращаются постранично. |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , sendFileToChat :: a -> Integer -> Maybe Integer -> FormSendFileToChat -> m EmptyApiResponse{- ^ Отправляет файл в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , sendMessageToChat :: a -> Integer -> Maybe Integer -> SendMessageToChatRequest -> m EmptyApiResponse{- ^ Отправляет сообщение в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , setFeedParams :: a -> Integer -> Integer -> SetFeedParamsRequest -> m EmptyApiResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет магазину изменить параметры прайс-листа.  Чтобы отредактировать параметр прайс-листа, передайте в теле запроса: `name` (название параметра) и `value` (значение параметра).  Чтобы отменить установленное значение, передайте в теле запроса: `name` (название параметра) и `delete=true` (удалить значение).  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-|  -}
  , setOrderBoxLayout :: a -> Integer -> Integer -> SetOrderBoxLayoutRequest -> m SetOrderBoxLayoutResponse{- ^ {% note tip \"Подходит и для DBS\" %}  Запрос предназначен для работы с FBS-заказами, но вы можете использовать его для обработки DBS-заказов, если это удобно.  {% endnote %}  Позволяет выполнить три операции:  * передать Маркету информацию о распределении товаров по коробкам; * передать Маркету коды маркировки для товаров; * удалить товар из заказа, если его не оказалось на складе.  Если нужно что-то поправить в переданных данных, просто повторите запрос — это можно делать сколько угодно раз до перевода заказа в статус **Готов к отгрузке**. ⚠️ Если вы меняете раскладку уже после печати и расклейки ярлыков, не забудье перепечатать их и наклеить заново.  ## Как передать информацию о распределении товаров  В этом запросе вам нужно передать Маркету список коробок и указать, какие именно товары лежат в каждой из них. Коробки могут быть двух типов:  * **Содержащие товары целиком.** Такая коробка может содержать сколько угодно единиц любых товаров.  * **Содержащие часть товара.** Такие коробки содержат по одной части одного товара. Например, одна содержит внешний блок кондиционера, а другая — внутренний блок.  ⚠️ Одна коробка не может содержать и товары целиком, и части товаров.  ## Как передавать коды маркировки  Если в заказе есть товары, подлежащие маркировке, в запросе нужно передать соответствующие уникальные коды. [Что такое маркировка?](https://yandex.ru/support/marketplace/orders/cz.html)  Принимаются коды следующих типов:  * Коды «Честного знака». * УИН для ювелирных изделий. * РНПТ и ГТД для импортных прослеживаемых товаров.  Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.  Если товар едет в нескольких коробках, код маркировки нужно передать для каждой из них.  ## Как удалить товар из заказа  Чтобы удалить товар из заказа:  1. Добавьте в запрос `allowRemove: true`. 2. Передайте распределение по коробкам без товара, который нужно удалить.  {% note warning \"Удаление нельзя отменить\" %}  Эта операция необратима: покупатель сразу получит уведомление, а состав заказа изменится.  {% endnote %}  Чтобы удалить позицию целиком, не передавайте соответствующий `OrderBoxLayoutItemDTO`. Чтобы уменьшить количество товара, передайте уменьшенное значение в поле `fullCount`.  Нельзя удалить или уменьшить количество товара, если он:  * добавлен по акции; * составляет 99% стоимости заказа; * единственный товар в заказе.  Если вы не можете отгрузить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.  {% note info \"Увеличить заказ нельзя\" %}  С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.  {% endnote %}  ## Примеры  {% cut \"Товар умещается в коробку\" %}  Вот как будет выглядеть запрос, если в одной коробке едут:    * три единицы одного товара, требующего маркировки;   * одна единица другого товара, не требущего маркировки.    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"fullCount\": 3,                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           },                           {                               \"cis\": \"010304109478gftJ14545762!\\u001dhGt264\"                           },                           {                               \"cis\": \"010304109478fRs28323ks23!\\u001dhet201\"                           }                       ]                   },                   {                       \"id\": 654321,                       \"fullCount\": 1                   }               ]           }       ]   }   ```  {% endcut %}  {% cut \"Товар едет в разных коробках\" %}  Вот как будет выглядеть запрос, если товар едет в двух коробках:    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           }       ]   }   ```  {% endcut %}  {% cut \"Одинаковые товары, где каждый едет в нескольких коробках\" %}  Вот как будет выглядеть запрос, если каждый из двух одинаковых товаров едет в двух коробках:    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           }       ]   }   ```  {% endcut %}  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , setOrderShipmentBoxes :: a -> Integer -> Integer -> Integer -> SetOrderShipmentBoxesRequest -> m SetOrderShipmentBoxesResponse{- ^ {% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Отгружаемый Маркету заказ может не влезть в одну коробку или упаковку — в этом случае получается, что он занимает несколько грузовых мест.  Количество грузовых мест нужно обязательно передавать Маркету, если оно не равно 1. Это делается перед переводом его в статус **Готов к отгрузке**. Подробно о том, что в какой момент нужно передавать, рассказано в [пошаговой инструкции](../../step-by-step/fbs.md).  Метод устроен немного нестандартно: количество задается длиной массива пустых объектов.  Раньше метод требовал передачи большего количества данных. Запросы, оформленные по старому образцу, работают, но лучше делать по-новому.  {% cut \"Как было раньше\" %}  Структура тела PUT-запроса:  ``` {   \"boxes\":   [     {       \"fulfilmentId\": \"{string}\",       \"weight\": {int64},       \"width\": {int64},       \"height\": {int64},       \"depth\": {int64},       \"items\":       [         {           \"id\": {int64},           \"count\": {int32}         },         ...       ]     },     ...   ] } ``` | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `boxes`       |           | Список грузовых мест.       |  **Параметры, вложенные в `boxes`** | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `fulfilmentId`       |  String   | Идентификатор грузового места в информационной системе магазина. Сформируйте идентификатор по шаблону: `номер заказа на Маркете-номер грузового места`. Например, `7206821‑1, 7206821‑2` и т. д. | | `weight`       | Int64        | Масса брутто грузового места (суммарная масса упаковки и содержимого) в граммах. | | `width`       | Int64   | Ширина грузового места в сантиметрах.       | | `height`       | Int64   | Высота грузового места в сантиметрах.       | | `depth`       | Int64   | Глубина грузового места в сантиметрах.        | | `items`       | Int64   | Список товаров в грузовом месте.       |  **Параметры, вложенные в `items`** | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `id`       | Int64     | Идентификатор товара в рамках заказа.   | | `count`    | Int32     | Количество единиц товара в грузовом месте.       |  {% endcut %}  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , setShipmentPalletsCount :: a -> Integer -> Integer -> SetShipmentPalletsCountRequest -> m EmptyApiResponse{- ^ Передает Маркету количество коробов или палет в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).  Получить PDF-файл с ярлыками для упаковок можно с помощью запроса [GET campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels](../../reference/shipments/downloadShipmentPalletLabels.md). |**⚙️ Лимит:** 200 запросов в час| |-|  -}
  , skipGoodsFeedbacksReaction :: a -> Integer -> SkipGoodsFeedbackReactionRequest -> m EmptyApiResponse{- ^ Пропускает отзывы — они больше не будут возвращаться в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , transferOrdersFromShipment :: a -> Integer -> Integer -> TransferOrdersFromShipmentRequest -> m EmptyApiResponse{- ^ Переносит указанные заказы из указанной отгрузки в следующую отгрузку. [Что такое отгрузка?](https://yandex.ru/support/marketplace/orders/fbs/process.html#ship)  Используйте этот запрос, если не успеваете собрать и упаковать заказы вовремя.  {% note warning \"Такие переносы снижают индекс качества магазина\" %}  Этот запрос предназначен для исключительных случаев. Если вы будете переносить заказы слишком часто, магазин столкнется с ограничениями. [Что за ограничения?](https://yandex.ru/support/marketplace/quality/score/fbs.html)  {% endnote %}  Переносить заказы можно, если до формирования отгрузки осталось больше получаса.  Перенос происходит не мгновенно, а занимает несколько минут.  |**⚙️ Лимит:** 200 запросов в час| |-|  -}
  , updateBusinessPrices :: a -> Integer -> UpdateBusinessPricesRequest -> m EmptyApiResponse{- ^ Устанавливает [базовые цены](*default-price). Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , updateCampaignOffers :: a -> Integer -> UpdateCampaignOffersRequest -> m EmptyApiResponse{- ^ Изменяет параметры продажи товаров в конкретном магазине: доступность товара, условия доставки и самовывоза, применяемую ставку НДС.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , updateGoodsFeedbackComment :: a -> Integer -> UpdateGoodsFeedbackCommentRequest -> m UpdateGoodsFeedbackCommentResponse{- ^ Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.  Для создания комментария к отзыву передайте только идентификатор отзыва `feedbackId`.  Чтобы добавить комментарий к другому комментарию, передайте:  * `feedbackId` — идентификатор отзыва; * `comment.parentId` — идентификатор родительского комментария.  Чтобы изменить комментарий, передайте:  * `feedbackId`— идентификатор отзыва; * `comment.id` — идентификатор комментария, который нужно изменить.  Если передать одновременно `comment.parentId` и `comment.id`, будет изменен существующий комментарий.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , updateOfferContent :: a -> Integer -> UpdateOfferContentRequest -> m UpdateOfferContentResponse{- ^ Редактирует характеристики товара, которые специфичны для категории, к которой он относится.  {% note warning \"Здесь только то, что относится к конкретной категории\" %}  Если вам нужно изменить основные параметры товара (название, описание, изображения, видео, производитель, штрихкод), воспользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Чтобы удалить характеристики, которые заданы в параметрах с типом `string`, передайте пустое значение.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , updateOfferMappingEntries :: a -> Integer -> UpdateOfferMappingEntryRequest -> m EmptyApiResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Добавляет товары, указанные в запросе, в ваш каталог товаров и редактирует уже имеющиеся товары.  Информацию о товарах нужно передать в теле POST-запроса.  У каждого товара должен быть ваш SKU — уникальный код, который вы используете для идентификации товара:  * Чтобы добавить в каталог новый товар, укажите в параметре `shopSku` ваш SKU, которого еще нет в каталоге. * Чтобы отредактировать товар из каталога, укажите в параметре `shopSku` ваш SKU этого товара в каталоге.  В обоих случаях в запросе нужно передать полное описание товара, даже если вы хотите изменить только несколько характеристик.  Если вы знаете, какой карточке товара на Маркете соответствует ваш товар, укажите ее идентификатор (SKU на Маркете) во входном параметре mapping. Получить SKU на Маркете рекомендованной карточки товара можно с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/suggestions](../../reference/offer-mappings/getSuggestedOfferMappingEntries.md) или через кабинет. Если SKU на Маркете не указан, сотрудники Маркета сами подберут или создадут подходящую карточку товара, либо у него появится статус `NEED_CONTENT` (нужно найти карточку или создать ее самостоятельно) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  Перед публикацией товары проходят модерацию. Если в одном из отправленных товаров найдена ошибка, ответ на запрос будет иметь HTTP-код 400 Bad Request, и ни один из товаров не отправится на модерацию. При этом если вы не передадите все обязательные параметры для какого‑либо товара, после модерации у него появится статус `NEED_INFO` (в описании товара не хватает информации) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  В одном запросе можно добавить не более 500 товаров.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5 000 товаров в минуту| |-|  -}
  , updateOfferMappings :: a -> Integer -> UpdateOfferMappingsRequest -> m UpdateOfferMappingsResponse{- ^ Добавляет товары в каталог, передает их категории на Маркете и характеристики, необходимые для этих категории. Также редактирует информацию об уже имеющихся товарах.  Список категорий Маркета можно получить с помощью запроса [POST categories/tree](../../reference/categories/getCategoriesTree.md), а характеристики товаров по категориям с помощью [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).  Чтобы **добавить новый товар**, передайте его с новым идентификатором, который раньше никогда не использовался в каталоге. Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой. Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**SKU на Маркете**) в поле `marketSKU`.  Для **новых товаров** обязательно укажите параметры: `offerId`, `name`, `marketCategoryId` или `category`, `pictures`, `vendor`, `description`.  Чтобы **отредактировать информацию о товаре**, передайте новые данные, указав в `offerId` соответствующий **ваш SKU**. Поля, в которых ничего не меняется, можно не передавать.  Чтобы **удалить характеристики**, которые заданы в параметрах с типом `string`, передайте пустое значение.  Параметр `offerId` должен быть **уникальным** для всех товаров, которые вы передаете.  {% note warning \"Правила использования SKU\" %}  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , updateOrderItems :: a -> Integer -> Integer -> UpdateOrderItemRequest -> m NoContent{- ^ {% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Изменяет состав заказа, если позволяет выбранная служба доставки, в случаях:  * покупатель уменьшил количество товара; * магазин не может поставить все товары в заказе.  Для этого заказ должен находится в статусе `\"status\": \"PROCESSING\"` этапа обработки `\"substatus\": \"STARTED\"`. После передачи статуса `\"substatus\": \"READY_TO_SHIP\"` изменить состав невозможно.  Если одинаковых товаров несколько, для уменьшения количества передайте обновленное значение в атрибуте `count` параметра `item`.  Чтобы полностью удалить товар из заказа:  * передайте значение `0`; или * не передавайте параметр `item`.  Нельзя удалить или уменьшить количество товара, если он:  * добавлен по акции; * составляет 99% стоимости заказа; * единственный товар в заказе.  Если необходимо удалить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.  {% note info \"Увеличить заказ нельзя\" %}  С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.  {% endnote %}  **Возврат денег покупателю**  Если покупатель оплатил товар при оформлении, Маркет вернет ему деньги за удаленные из заказа товары в течение двух дней:  * при оплате банковской картой — с момента, когда магазин переведет заказ в статус `SHIPPED`;  * при оплате через Apple Pay или Google Pay — с момента, когда магазин удалит товар из заказа.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , updateOrderStatus :: a -> Integer -> Integer -> UpdateOrderStatusRequest -> m UpdateOrderStatusResponse{- ^ Изменяет статус заказа. Возможные изменения статусов:  * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`. * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`. * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , updateOrderStatuses :: a -> Integer -> UpdateOrderStatusesRequest -> m UpdateOrderStatusesResponse{- ^ Изменяет статусы нескольких заказов.  Возможные изменения статусов:  * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"`и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`. * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`. * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.  Максимальное количество заказов, у которых можно изменить статус в одном запросе, — 30.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , updatePrices :: a -> Integer -> UpdatePricesRequest -> m EmptyApiResponse{- ^ Устанавливает цены на товары в магазине. Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для управления базовыми ценами используйте [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , updatePromoOffers :: a -> Integer -> UpdatePromoOffersRequest -> m UpdatePromoOffersResponse{- ^ Добавляет товары в акцию или изменяет цены на товары, которые участвуют в акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , updateStocks :: a -> Integer -> UpdateStocksRequest -> m EmptyApiResponse{- ^ Передает данные об остатках товаров на витрине.  Обязательно указывайте SKU **в точности** так, как он указан в каталоге. Например, _557722_ и _0557722_ — это два разных SKU.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-|  -}
  , addHiddenOffers :: a -> Integer -> AddHiddenOffersRequest -> m EmptyApiResponse{- ^ Скрывает товары магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , addOffersToArchive :: a -> Integer -> AddOffersToArchiveRequest -> m AddOffersToArchiveResponse{- ^ Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.  {% note warning \"В архив нельзя отправить товар, который хранится на складе Маркета\" %}  Вначале такой товар нужно распродать или вывезти.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , calculateTariffs :: a -> CalculateTariffsRequest -> m CalculateTariffsResponse{- ^ Рассчитывает стоимость услуг Маркета для товаров с заданными параметрами. Порядок товаров в запросе и ответе сохраняется, чтобы определить, для какого товара рассчитана стоимость услуги.  Обратите внимание: калькулятор осуществляет примерные расчеты. Финальная стоимость для каждого заказа зависит от предоставленных услуг.  В запросе можно указать либо параметр `campaignId`, либо `sellingProgram`. Совместное использование параметров приведет к ошибке.  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , confirmBusinessPrices :: a -> Integer -> ConfirmPricesRequest -> m EmptyApiResponse{- ^ Подтверждает основную цену на товары, которые попали в карантин, и удаляет их из карантина.  Основная цена задается в каталоге и действует во всех магазинах кабинета.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , confirmCampaignPrices :: a -> Integer -> ConfirmPricesRequest -> m EmptyApiResponse{- ^ Подтверждает в заданном магазине цену на товары, которые попали в карантин, и удаляет их из карантина.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , createChat :: a -> Integer -> CreateChatRequest -> m CreateChatResponse{- ^ Создает новый чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , deleteCampaignOffers :: a -> Integer -> DeleteCampaignOffersRequest -> m DeleteCampaignOffersResponse{- ^ Удаляет заданные товары из заданного магазина.  {% note warning \"Запрос удаляет товары именно из конкретного магазина\" %}  На продажи в других магазинах и на наличие товара в общем каталоге он не влияет.  {% endnote %}  Товар не получится удалить, если он хранится на складах Маркета.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , deleteGoodsFeedbackComment :: a -> Integer -> DeleteGoodsFeedbackCommentRequest -> m EmptyApiResponse{- ^ Удаляет комментарий магазина.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , deleteHiddenOffers :: a -> Integer -> DeleteHiddenOffersRequest -> m EmptyApiResponse{- ^ Возобновляет показ скрытых вами товаров магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , deleteOffers :: a -> Integer -> DeleteOffersRequest -> m DeleteOffersResponse{- ^ Удаляет товары из каталога.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , deleteOffersFromArchive :: a -> Integer -> DeleteOffersFromArchiveRequest -> m DeleteOffersFromArchiveResponse{- ^ Восстанавливает товары из архива.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , deletePromoOffers :: a -> Integer -> DeletePromoOffersRequest -> m DeletePromoOffersResponse{- ^ Убирает товары из акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , generateBoostConsolidatedReport :: a -> Maybe ReportFormatType -> GenerateBoostConsolidatedRequest -> m GenerateReportResponse{- ^ Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateCompetitorsPositionReport :: a -> Maybe ReportFormatType -> GenerateCompetitorsPositionReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \"Значение -1 в отчете\" %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-|  -}
  , generateGoodsFeedbackReport :: a -> Maybe ReportFormatType -> GenerateGoodsFeedbackRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateGoodsMovementReport :: a -> Maybe ReportFormatType -> GenerateGoodsMovementReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateGoodsRealizationReport :: a -> Maybe ReportFormatType -> GenerateGoodsRealizationReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateGoodsTurnoverReport :: a -> Maybe ReportFormatType -> GenerateGoodsTurnoverRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generatePricesReport :: a -> Maybe ReportFormatType -> GeneratePricesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateShelfsStatisticsReport :: a -> Maybe ReportFormatType -> GenerateShelfsStatisticsRequest -> m GenerateReportResponse{- ^ Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateShowsSalesReport :: a -> Maybe ReportFormatType -> GenerateShowsSalesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-|  -}
  , generateStocksOnWarehousesReport :: a -> Maybe ReportFormatType -> GenerateStocksOnWarehousesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateUnitedMarketplaceServicesReport :: a -> Maybe ReportFormatType -> GenerateUnitedMarketplaceServicesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |-----------------------------|---------------------------------| |По дате начисления услуги    |`dateFrom` и `dateTo`            | |По дате формирования акта    |`year` и `month`                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateUnitedNettingReport :: a -> Maybe ReportFormatType -> GenerateUnitedNettingReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |-------------------------|---------------------------------------| |О платежах за период     |`dateFrom` и `dateTo`                  | |О платежном поручении    |`bankOrderId` и `bankOrderDateTime`    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateUnitedOrdersReport :: a -> Maybe ReportFormatType -> GenerateUnitedOrdersRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \"\" %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , getAllOffers :: a -> Integer -> Maybe Integer -> Maybe Int -> m GetAllOffersResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет максимально быстро получить информацию обо всех предложениях магазина, размещенных на Маркете. Возвращает результат в виде сегментов нефиксированного размера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Яндекс Маркета, с которой соотнесено предложение, а также аукционные ставки на него.  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — среднее количество таваров в каталоге за неделю * 25)  -}
  , getBidsInfoForBusiness :: a -> Integer -> Maybe Text -> Maybe Int -> GetBidsInfoRequest -> m GetBidsInfoResponse{- ^ Возвращает значения ставок для заданных товаров.  {% note warning \"\" %}  В ответе возвращаются значения только тех ставок, которые вы установили через запрос [PUT businesses/{businessId}/bids](../../reference/bids/putBidsForBusiness.md). Получить информацию по кампаниям, созданным в кабинете, не получится.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , getBidsRecommendations :: a -> Integer -> GetBidsRecommendationsRequest -> m GetBidsRecommendationsResponse{- ^ Возвращает рекомендованные ставки для заданных товаров — такие ставки обеспечивают вашим предложениям определенную долю показов, если цена не превышает рекомендованную.  Для одного товара может возвращаться одна рекомендованная ставка или несколько. Во втором случае разные ставки предназначены для достижения разной доли показов.  Если товар только добавлен в каталог, но пока не продается, рекомендованной ставки для него не будет.  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , getBusinessQuarantineOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetQuarantineOffersRequest -> m GetQuarantineOffersResponse{- ^ Возвращает список товаров, которые находятся в карантине по **основной цене**. Основная цена задается в каталоге и действует во всех магазинах кабинета.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , getBusinessSettings :: a -> Integer -> m GetBusinessSettingsResponse{- ^ Возвращает информацию о настройках кабинета, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaign :: a -> Integer -> m GetCampaignResponse{- ^ Возвращает информацию о магазине. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaignLogins :: a -> Integer -> m GetCampaignLoginsResponse{- ^ Возвращает список логинов, у которых есть доступ к магазину. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaignOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetCampaignOffersRequest -> m GetCampaignOffersResponse{- ^ Возвращает список товаров, которые размещены в заданном магазине. Для каждого товара указываются параметры размещения.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , getCampaignQuarantineOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetQuarantineOffersRequest -> m GetQuarantineOffersResponse{- ^ Возвращает список товаров, которые находятся в карантине по цене, установленной в заданном магазине.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , getCampaignRegion :: a -> Integer -> m GetCampaignRegionResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [GET campaigns/{campaignId}/settings](../../reference/campaigns/getCampaignSettings.md).  {% endnote %}  Возвращает регион, в котором находится магазин. |**⚙️ Лимит:** 5 000 запросов в час| |-|  -}
  , getCampaignSettings :: a -> Integer -> m GetCampaignSettingsResponse{- ^ Возвращает информацию о настройках магазина, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaigns :: a -> Maybe Int -> Maybe Int -> m GetCampaignsResponse{- ^ Возвращает список магазинов, к которым имеет доступ пользователь — владелец авторизационного токена, использованного в запросе. Для агентских пользователей список состоит из подагентских магазинов. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getCampaignsByLogin :: a -> Text -> Maybe Int -> Maybe Int -> m GetCampaignsResponse{- ^ Возвращает список магазинов, к которым у пользователя с указанным логином есть доступ. |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , getCategoriesMaxSaleQuantum :: a -> GetCategoriesMaxSaleQuantumRequest -> m GetCategoriesMaxSaleQuantumResponse{- ^ Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getCategoriesTree :: a -> GetCategoriesRequest -> m GetCategoriesResponse{- ^ Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getCategoryContentParameters :: a -> Integer -> m GetCategoryContentParametersResponse{- ^ Возвращает список характеристик с допустимыми значениями для заданной категории.  |**⚙️ Лимит:** 50 категорий в минуту | |-|  -}
  , getChatHistory :: a -> Integer -> Maybe Integer -> Maybe Text -> Maybe Int -> GetChatHistoryRequest -> m GetChatHistoryResponse{- ^ Возвращает историю сообщений в чате с покупателем.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getChats :: a -> Integer -> Maybe Text -> Maybe Int -> GetChatsRequest -> m GetChatsResponse{- ^ Возвращает ваши чаты с покупателями.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getFeed :: a -> Integer -> Integer -> m GetFeedResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает информацию о прайс-листе, размещенном на Маркете для заданного магазина. Также ресурс возвращает результаты автоматических проверок прайс-листа. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getFeedIndexLogs :: a -> Integer -> Integer -> Maybe Int -> Maybe UTCTime -> Maybe UTCTime -> Maybe FeedIndexLogsStatusType -> m GetFeedIndexLogsResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает отчет по индексации прайс-листа для заданного магазина. Отчет позволяет получить статистику загрузки прайс-листа и результаты его автоматических проверок.  Данные в отчете возвращаются в порядке убывания значений параметра `generationId`.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getFeedbackAndCommentUpdates :: a -> Integer -> Maybe Text -> Maybe Int -> Maybe Day -> m GetFeedbackListResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает новые и обновленные отзывы о магазине на Маркете.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов. Выходные данные содержат идентификатор следующей страницы.  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , getFeeds :: a -> Integer -> m GetFeedsResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает список прайс-листов, размещенных на Маркете для магазина. Также ресурс возвращает результаты автоматических проверок прайс-листов. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getFulfillmentWarehouses :: a -> m GetFulfillmentWarehousesResponse{- ^ Возвращает список складов Маркета с их идентификаторами.  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , getGoodsFeedbackComments :: a -> Integer -> Maybe Text -> Maybe Int -> GetGoodsFeedbackCommentsRequest -> m GetGoodsFeedbackCommentsResponse{- ^ Возвращает комментарии к отзыву.  Результаты возвращаются постранично, одна страница содержит не более 20 комментариев.  Комментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getGoodsFeedbacks :: a -> Integer -> Maybe Text -> Maybe Int -> GetGoodsFeedbackRequest -> m GetGoodsFeedbackResponse{- ^ Возвращает все отзывы о товарах продавца по указанным фильтрам.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов.  Отзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getGoodsStats :: a -> Integer -> GetGoodsStatsRequest -> m GetGoodsStatsResponse{- ^ Возвращает подробный отчет по товарам, которые вы разместили на Маркете. С помощью отчета вы можете узнать, например, об остатках на складе, об условиях хранения ваших товаров и т. д.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , getHiddenOffers :: a -> Integer -> Maybe [Text] -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> m GetHiddenOffersResponse{- ^ Возвращает список скрытых вами товаров для заданного магазина.  В списке будут товары, скрытые любым способом — по API, с помощью YML-фида, в кабинете и так далее.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , getOfferCardsContentStatus :: a -> Integer -> Maybe Text -> Maybe Int -> GetOfferCardsContentStatusRequest -> m GetOfferCardsContentStatusResponse{- ^ Возвращает сведения о состоянии контента для заданных товаров:  * создана ли карточка товара и в каком она статусе; * заполненность карточки в процентах; * переданные характеристики товаров; * есть ли ошибки или предупреждения, связанные с контентом; * рекомендации по заполнению карточки.  |**⚙️ Лимит:** 600 запросов в минуту| |-|  -}
  , getOfferMappingEntries :: a -> Integer -> Maybe [Text] -> Maybe [Text] -> Maybe OfferMappingKindType -> Maybe [OfferProcessingStatusType] -> Maybe [OfferAvailabilityStatusType] -> Maybe [Int] -> Maybe [Text] -> Maybe Text -> Maybe Int -> m GetOfferMappingEntriesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  Для каждого товара, который вы размещаете на Маркете, возвращается информация о карточках Маркета, к которым привязан этот товар:  * Идентификатор текущей карточки (marketSku), карточки, которая проходит модерацию и последней отклоненной карточки. * Описание товара, которое указано на карточке Маркета. Например, размер упаковки и вес товара.  Результаты возвращаются постранично. Выходные данные содержат идентификатор следующей страницы.  {% note info %}  Количество товаров в каталоге магазина считается по данным за последние семь дней (не включая сегодня).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров в каталоге магазина * 25)  -}
  , getOfferMappings :: a -> Integer -> Maybe Text -> Maybe Int -> GetOfferMappingsRequest -> m GetOfferMappingsResponse{- ^ Возвращает список товаров в каталоге, их категории на Маркете и характеристики каждого товара.  Можно использовать тремя способами: * задать список интересующих SKU; * задать фильтр — в этом случае результаты возвращаются постранично; * не передавать тело запроса, чтобы получить список всех товаров в каталоге.  |**⚙️ Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе| |-|  -}
  , getOfferRecommendations :: a -> Integer -> Maybe Text -> Maybe Int -> GetOfferRecommendationsRequest -> m GetOfferRecommendationsResponse{- ^ Метод возвращает рекомендации нескольких типов.  **1. Порог для привлекательной цены. Он нужен для участия в софинансировании скидок.**  Показывает, какие **цены для участия** нужно установить, чтобы получить максимальные шансы на срабатывание скидок, софинансируемых Маркетом. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)  **2. Оценка привлекательности цен на витрине.**  Привлекательность влияет на вероятность срабатывания скидок за счет Маркета. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#validation)  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , getOffers :: a -> Integer -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe CurrencyType -> Maybe Bool -> Maybe Int -> Maybe Int -> m GetOffersResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет фильтровать информацию о предложениях магазина, размещенных на Маркете, и искать предложения по заданному поисковому запросу.  Поиск предложений, размещенных на Маркете, работает по поисковому запросу аналогично поиску Маркета. Результаты возвращаются с использованием пейджера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Маркета, с которой соотнесено предложение, и аукционные ставки на него.  {% note info %}  Из-за особенностей поиска Маркета иногда на последних страницах пейджера фактическое количество результатов оказывается меньше количества, указанного ранее на предыдущих страницах.  В связи с этим настоятельно рекомендуется анализировать содержимое параметра pager для каждой полученной страницы.  {% endnote %}  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лисит товаров — среднее количество таваров в каталоге за неделю * 25)  -}
  , getOrder :: a -> Integer -> Integer -> m GetOrderResponse{- ^ Возвращает информацию о заказе.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , getOrderBusinessBuyerInfo :: a -> Integer -> Integer -> m GetBusinessBuyerInfoResponse{- ^ Возвращает информацию о покупателе по идентификатору заказа.  {% note info \"\" %}  Чтобы получить информацию о покупателе, который является физическим лицом, воспользуйтесь запросом [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  {% endnote %}  Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY`, `PICKUP` или `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-|  -}
  , getOrderBusinessDocumentsInfo :: a -> Integer -> Integer -> m GetBusinessDocumentsInfoResponse{- ^ Возвращает информацию о документах по идентификатору заказа.  Получить данные можно после того, как заказ перейдет в статус `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-|  -}
  , getOrders :: a -> Integer -> Maybe [Integer] -> Maybe [OrderStatusType] -> Maybe [OrderSubstatusType] -> Maybe Day -> Maybe Day -> Maybe Day -> Maybe Day -> Maybe UTCTime -> Maybe UTCTime -> Maybe OrderDeliveryDispatchType -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe OrderBuyerType -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> m GetOrdersResponse{- ^ Возвращает информацию о заказах. Запрос можно использовать, чтобы узнать, нет ли новых заказов.  Доступна фильтрация по нескольким характеристикам заказов:  * дате оформления;  * статусу;  * идентификаторам заказов;  * этапу обработки или причине отмены;  * типу (настоящий или тестовый);  * дате отгрузки в службу доставки;  * дате и времени обновления заказа.  Информация о заказах, доставленных или отмененных больше 30 дней назад, не возвращается. Ее можно получить с помощью запроса информации об отдельном заказе [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) (если у вас есть идентификатор заказа) или запроса отчета по заказам [POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md).  Максимальный диапазон дат за один запрос к ресурсу — 30 дней. Максимальное количество заказов в выходных данных запроса — 50.  Результаты возвращаются постранично. Для навигации по страницам используйте параметры `page_token` и `limit`.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , getOrdersStats :: a -> Integer -> Maybe Text -> Maybe Int -> GetOrdersStatsRequest -> m GetOrdersStatsResponse{- ^ Возвращает информацию по заказам на Маркете, в которых есть ваши товары. С помощью нее вы можете собрать статистику по вашим заказам и узнать, например, какие из товаров чаще всего возвращаются покупателями, какие, наоборот, пользуются большим спросом, какая комиссия начисляется за заказы и т. п.  {% note info \"\" %}  Раньше генерация детальной информации по заказам называлась **Отчет по заказам**. Сейчас это новый отчет. [Подробнее об отчете](../../reference/reports/generateUnitedOrdersReport.md)  {% endnote %}  В одном запросе можно получить информацию не более чем по 200 заказам.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , getPrices :: a -> Integer -> Maybe Text -> Maybe Int -> Maybe Bool -> m GetPricesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST campaigns/{campaignId}/offer-prices](../../reference/assortment/getPricesByOfferIds.md).  {% endnote %}  Возвращает список цен, установленных вами на товары любым способом: например, через партнерский API или в файле с каталогом.  {% note info %}  Общее количество товаров считается по данным за последние семь дней (не включая сегодня) и не может быть выше 2 миллионов.  {% endnote %}  Способы установки цен описаны [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/assortment/operations/prices.html).  |**⚙️ Лимит:** ```(количество товаров партнера на витрине) * 25``` товаров в сутки| |-|  -}
  , getPricesByOfferIds :: a -> Integer -> Maybe Text -> Maybe Int -> GetPricesByOfferIdsRequest -> m GetPricesByOfferIdsResponse{- ^ Возвращает список цен на указанные товары в магазине.  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для просмотра базовых цен используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров на витрине * 25)  -}
  , getPromoOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetPromoOffersRequest -> m GetPromoOffersResponse{- ^ Возвращает список товаров, которые участвуют или могут участвовать в акции.  {% note warning %}  В параметре `limit` не передавайте значение больше 500.  {% endnote %}  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getPromos :: a -> Integer -> GetPromosRequest -> m GetPromosResponse{- ^ Возвращает информацию об акциях Маркета.  По умолчанию возвращаются акции, в которых продавец участвует или может принять участие.  Чтобы получить текущие или завершенные акции, передайте параметр `participation`.  Типы акций, которые возвращаются в ответе:  * прямая скидка; * флеш-акция; * скидка по промокоду.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getQualityRatings :: a -> Integer -> GetQualityRatingRequest -> m GetQualityRatingResponse{- ^ Возвращает значение индекса качества магазинов и его составляющие.  Подробнее об индексе качества читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/score/).  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getReportInfo :: a -> Text -> m GetReportInfoResponse{- ^ Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , getReturn :: a -> Integer -> Integer -> Integer -> m GetReturnResponse{- ^ Получает информацию по одному невыкупу или возврату.  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , getReturnPhoto :: a -> Integer -> Integer -> Integer -> Integer -> Text -> m FilePath{- ^ Получает фотографии, которые покупатель приложил к заявлению на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , getReturns :: a -> Integer -> Maybe Text -> Maybe Int -> Maybe [Integer] -> Maybe [RefundStatusType] -> Maybe ReturnType -> Maybe Day -> Maybe Day -> Maybe Day -> Maybe Day -> m GetReturnsResponse{- ^ Получает список невыкупов и возвратов.  Чтобы получить информацию по одному возврату или невыкупу, выполните запрос [GET campaigns/{campaignId}/orders/{orderId}/returns/{returnId}](../../reference/orders/getReturn.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , getStocks :: a -> Integer -> Maybe Text -> Maybe Int -> GetWarehouseStocksRequest -> m GetWarehouseStocksResponse{- ^ Возвращает данные об остатках товаров (для всех моделей) и об [оборачиваемости](*turnover) товаров (для модели FBY).  {% note info \"По умолчанию данные по оборачивамости не возращаются\" %}  Чтобы они были в ответе, передавайте `true` в поле `withTurnover`.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-|  [//]: <> (turnover: Среднее количество дней, за которое товар продается. Подробно об оборачиваемости рассказано в Справке Маркета для продавцов https://yandex.ru/support/marketplace/analytics/turnover.html.)  -}
  , getSuggestedOfferMappingEntries :: a -> Integer -> GetSuggestedOfferMappingEntriesRequest -> m GetSuggestedOfferMappingEntriesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/suggestions](../../reference/business-assortment/getSuggestedOfferMappings.md).  {% endnote %}  Возвращает идентификаторы карточек товаров на Маркете, рекомендованных для ваших товаров.  Каждому товару, который вы размещаете, должна соответствовать карточка товара на Маркете со своим идентификатором — SKU на Маркете. Он указывается в URL карточки товара, после «...sku=», например:  ##https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016…##  Чтобы получить для товаров рекомендованные SKU на Маркете, передайте в теле POST-запроса как можно больше информации о них: названия, производителей, штрихкоды, цены и т. д.  Полученные SKU можно передать вместе с информацией о ваших товарах с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/updates](../../reference/offer-mappings/updateOfferMappingEntries.md).  В одном запросе можно получить не более 500 рекомендаций.  |**⚙️ Лимит:** 100 000 рекомендаций в час| |-|  -}
  , getSuggestedOfferMappings :: a -> Integer -> GetSuggestedOfferMappingsRequest -> m GetSuggestedOfferMappingsResponse{- ^ Возвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.  Пользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточки по предоставленным вами данным.  **Как пользоваться запросом**  1. Передайте Маркету список товаров, которые нужно проверить. 2. В ответ вы получите список SKU на Маркете с расшифровкой: названием, идентификатором модели, категорией. 3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида `https://market.yandex.ru/product/<marketModelId>?sku=<marketSku>`. 4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать `marketSKU`, который ему подходит по вашему мнению.  {% note info \"𝓠 Как определить `marketSku` товара, найденного на Маркете?\" %}  𝓐 Он есть в адресе страницы товара — расположен после `sku=`.  Например, `https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016`  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в час| |-|  -}
  , getSuggestedPrices :: a -> Integer -> SuggestPricesRequest -> m SuggestPricesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [отчет «Цены на рынке»](../../reference/reports/generatePricesReport.md).  {% endnote %}  {% note warning \"\" %}  Этот метод подходит только тем магазинам, которые устанавливают цены на товары в рублях.  {% endnote %}  Возвращает цены для продвижения товаров, которые вы размещаете на Маркете.  Товары, для которых нужно получить цены, передаются в теле POST-запроса.  Цены для продвижения зависят от цен, установленных на товары другими партнерами. Если один товар поставляют несколько партнеров, на Маркете сначала продается товар с более низкой ценой. Когда закончится товар по низкой цене, начнет продаваться товар по более высокой цене.  Выходные данные содержат для каждого товара несколько цен, соответствующих разным типам продвижения.  Установить цены на товары можно с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md) или другими способами: например, указать их в файле с каталогом. Также вы можете использовать стратегии для автоматической установки рекомендованных цен или минимальных цен на Маркете.  Подробно об автоматическом управлении ценами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/prices.html).  |**⚙️ Лимит:** 100 000 товаров в час| |-|  -}
  , putBidsForBusiness :: a -> Integer -> PutSkuBidsRequest -> m EmptyApiResponse{- ^ Запускает буст продаж — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  {% cut \"Как в кабинете выглядит кампания, созданная через API\" %}  ![](../../_images/api-boost.png)  {% endcut %}  При первом использовании запроса Маркет: создаст единую на все магазины бизнес-аккаунта кампанию, добавит в нее товары с указанными ставками, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же созданной через API кампанией. Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. Другими кампаниями управлять через API не получится. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , putBidsForCampaign :: a -> Integer -> PutSkuBidsRequest -> m EmptyApiResponse{- ^ Запускает буст продаж в указанном магазине — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  При первом использовании запроса Маркет: создаст кампанию, добавит в нее товары с указанными ставками для заданного магазина, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же кампанией, созданной через этот запрос или [PUT businesses/{businessId}/bids](/reference/bids/putBidsForBusiness). Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-|  -}
  , refreshFeed :: a -> Integer -> Integer -> m EmptyApiResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет сообщить, что магазин обновил прайс-лист. После этого Маркет начнет обновление данных на сервисе. 1. Магазин обновляет прайс-лист, ссылку на который он указал в кабинете. 2. Магазин отправляет Маркету запрос методом `POST campaigns/{campaignId}/feeds/{feedId}/refresh`. 3. Маркет начинает обновление данных магазина на сервисе.  {% note alert %}  Запрос работает только для включенных магазинов. Если магазин выключен, данные на Маркете не обновятся, даже если HTTP-код — `200 OK`. Проверить статус магазина можно с помощью базовых запросов или на странице бизнес-аккаунта.  {% endnote %}  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-|  -}
  , searchRegionChildren :: a -> Integer -> Maybe Int -> Maybe Int -> m GetRegionWithChildrenResponse{- ^ Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-|  -}
  , searchRegionsById :: a -> Integer -> m GetRegionsResponse{- ^ Возвращает информацию о регионе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-|  -}
  , searchRegionsByName :: a -> Maybe Text -> Maybe Text -> Maybe Int -> m GetRegionsResponse{- ^ Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.  Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-|  -}
  , sendFileToChat :: a -> Integer -> Maybe Integer -> FormSendFileToChat -> m EmptyApiResponse{- ^ Отправляет файл в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , sendMessageToChat :: a -> Integer -> Maybe Integer -> SendMessageToChatRequest -> m EmptyApiResponse{- ^ Отправляет сообщение в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , setFeedParams :: a -> Integer -> Integer -> SetFeedParamsRequest -> m EmptyApiResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет магазину изменить параметры прайс-листа.  Чтобы отредактировать параметр прайс-листа, передайте в теле запроса: `name` (название параметра) и `value` (значение параметра).  Чтобы отменить установленное значение, передайте в теле запроса: `name` (название параметра) и `delete=true` (удалить значение).  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-|  -}
  , skipGoodsFeedbacksReaction :: a -> Integer -> SkipGoodsFeedbackReactionRequest -> m EmptyApiResponse{- ^ Пропускает отзывы — они больше не будут возвращаться в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , updateBusinessPrices :: a -> Integer -> UpdateBusinessPricesRequest -> m EmptyApiResponse{- ^ Устанавливает [базовые цены](*default-price). Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , updateCampaignOffers :: a -> Integer -> UpdateCampaignOffersRequest -> m EmptyApiResponse{- ^ Изменяет параметры продажи товаров в конкретном магазине: доступность товара, условия доставки и самовывоза, применяемую ставку НДС.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , updateGoodsFeedbackComment :: a -> Integer -> UpdateGoodsFeedbackCommentRequest -> m UpdateGoodsFeedbackCommentResponse{- ^ Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.  Для создания комментария к отзыву передайте только идентификатор отзыва `feedbackId`.  Чтобы добавить комментарий к другому комментарию, передайте:  * `feedbackId` — идентификатор отзыва; * `comment.parentId` — идентификатор родительского комментария.  Чтобы изменить комментарий, передайте:  * `feedbackId`— идентификатор отзыва; * `comment.id` — идентификатор комментария, который нужно изменить.  Если передать одновременно `comment.parentId` и `comment.id`, будет изменен существующий комментарий.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , updateOfferContent :: a -> Integer -> UpdateOfferContentRequest -> m UpdateOfferContentResponse{- ^ Редактирует характеристики товара, которые специфичны для категории, к которой он относится.  {% note warning \"Здесь только то, что относится к конкретной категории\" %}  Если вам нужно изменить основные параметры товара (название, описание, изображения, видео, производитель, штрихкод), воспользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Чтобы удалить характеристики, которые заданы в параметрах с типом `string`, передайте пустое значение.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , updateOfferMappingEntries :: a -> Integer -> UpdateOfferMappingEntryRequest -> m EmptyApiResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Добавляет товары, указанные в запросе, в ваш каталог товаров и редактирует уже имеющиеся товары.  Информацию о товарах нужно передать в теле POST-запроса.  У каждого товара должен быть ваш SKU — уникальный код, который вы используете для идентификации товара:  * Чтобы добавить в каталог новый товар, укажите в параметре `shopSku` ваш SKU, которого еще нет в каталоге. * Чтобы отредактировать товар из каталога, укажите в параметре `shopSku` ваш SKU этого товара в каталоге.  В обоих случаях в запросе нужно передать полное описание товара, даже если вы хотите изменить только несколько характеристик.  Если вы знаете, какой карточке товара на Маркете соответствует ваш товар, укажите ее идентификатор (SKU на Маркете) во входном параметре mapping. Получить SKU на Маркете рекомендованной карточки товара можно с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/suggestions](../../reference/offer-mappings/getSuggestedOfferMappingEntries.md) или через кабинет. Если SKU на Маркете не указан, сотрудники Маркета сами подберут или создадут подходящую карточку товара, либо у него появится статус `NEED_CONTENT` (нужно найти карточку или создать ее самостоятельно) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  Перед публикацией товары проходят модерацию. Если в одном из отправленных товаров найдена ошибка, ответ на запрос будет иметь HTTP-код 400 Bad Request, и ни один из товаров не отправится на модерацию. При этом если вы не передадите все обязательные параметры для какого‑либо товара, после модерации у него появится статус `NEED_INFO` (в описании товара не хватает информации) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  В одном запросе можно добавить не более 500 товаров.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5 000 товаров в минуту| |-|  -}
  , updateOfferMappings :: a -> Integer -> UpdateOfferMappingsRequest -> m UpdateOfferMappingsResponse{- ^ Добавляет товары в каталог, передает их категории на Маркете и характеристики, необходимые для этих категории. Также редактирует информацию об уже имеющихся товарах.  Список категорий Маркета можно получить с помощью запроса [POST categories/tree](../../reference/categories/getCategoriesTree.md), а характеристики товаров по категориям с помощью [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).  Чтобы **добавить новый товар**, передайте его с новым идентификатором, который раньше никогда не использовался в каталоге. Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой. Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**SKU на Маркете**) в поле `marketSKU`.  Для **новых товаров** обязательно укажите параметры: `offerId`, `name`, `marketCategoryId` или `category`, `pictures`, `vendor`, `description`.  Чтобы **отредактировать информацию о товаре**, передайте новые данные, указав в `offerId` соответствующий **ваш SKU**. Поля, в которых ничего не меняется, можно не передавать.  Чтобы **удалить характеристики**, которые заданы в параметрах с типом `string`, передайте пустое значение.  Параметр `offerId` должен быть **уникальным** для всех товаров, которые вы передаете.  {% note warning \"Правила использования SKU\" %}  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , updatePrices :: a -> Integer -> UpdatePricesRequest -> m EmptyApiResponse{- ^ Устанавливает цены на товары в магазине. Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для управления базовыми ценами используйте [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , updatePromoOffers :: a -> Integer -> UpdatePromoOffersRequest -> m UpdatePromoOffersResponse{- ^ Добавляет товары в акцию или изменяет цены на товары, которые участвуют в акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getFeedbackAndCommentUpdates :: a -> Integer -> Maybe Text -> Maybe Int -> Maybe Day -> m GetFeedbackListResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает новые и обновленные отзывы о магазине на Маркете.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов. Выходные данные содержат идентификатор следующей страницы.  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , getFeed :: a -> Integer -> Integer -> m GetFeedResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает информацию о прайс-листе, размещенном на Маркете для заданного магазина. Также ресурс возвращает результаты автоматических проверок прайс-листа. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , getFeedIndexLogs :: a -> Integer -> Integer -> Maybe Int -> Maybe UTCTime -> Maybe UTCTime -> Maybe FeedIndexLogsStatusType -> m GetFeedIndexLogsResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает отчет по индексации прайс-листа для заданного магазина. Отчет позволяет получить статистику загрузки прайс-листа и результаты его автоматических проверок.  Данные в отчете возвращаются в порядке убывания значений параметра `generationId`.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getFeeds :: a -> Integer -> m GetFeedsResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает список прайс-листов, размещенных на Маркете для магазина. Также ресурс возвращает результаты автоматических проверок прайс-листов. |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , refreshFeed :: a -> Integer -> Integer -> m EmptyApiResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет сообщить, что магазин обновил прайс-лист. После этого Маркет начнет обновление данных на сервисе. 1. Магазин обновляет прайс-лист, ссылку на который он указал в кабинете. 2. Магазин отправляет Маркету запрос методом `POST campaigns/{campaignId}/feeds/{feedId}/refresh`. 3. Маркет начинает обновление данных магазина на сервисе.  {% note alert %}  Запрос работает только для включенных магазинов. Если магазин выключен, данные на Маркете не обновятся, даже если HTTP-код — `200 OK`. Проверить статус магазина можно с помощью базовых запросов или на странице бизнес-аккаунта.  {% endnote %}  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-|  -}
  , setFeedParams :: a -> Integer -> Integer -> SetFeedParamsRequest -> m EmptyApiResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет магазину изменить параметры прайс-листа.  Чтобы отредактировать параметр прайс-листа, передайте в теле запроса: `name` (название параметра) и `value` (значение параметра).  Чтобы отменить установленное значение, передайте в теле запроса: `name` (название параметра) и `delete=true` (удалить значение).  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-|  -}
  , deleteGoodsFeedbackComment :: a -> Integer -> DeleteGoodsFeedbackCommentRequest -> m EmptyApiResponse{- ^ Удаляет комментарий магазина.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getGoodsFeedbackComments :: a -> Integer -> Maybe Text -> Maybe Int -> GetGoodsFeedbackCommentsRequest -> m GetGoodsFeedbackCommentsResponse{- ^ Возвращает комментарии к отзыву.  Результаты возвращаются постранично, одна страница содержит не более 20 комментариев.  Комментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getGoodsFeedbacks :: a -> Integer -> Maybe Text -> Maybe Int -> GetGoodsFeedbackRequest -> m GetGoodsFeedbackResponse{- ^ Возвращает все отзывы о товарах продавца по указанным фильтрам.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов.  Отзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , skipGoodsFeedbacksReaction :: a -> Integer -> SkipGoodsFeedbackReactionRequest -> m EmptyApiResponse{- ^ Пропускает отзывы — они больше не будут возвращаться в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , updateGoodsFeedbackComment :: a -> Integer -> UpdateGoodsFeedbackCommentRequest -> m UpdateGoodsFeedbackCommentResponse{- ^ Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.  Для создания комментария к отзыву передайте только идентификатор отзыва `feedbackId`.  Чтобы добавить комментарий к другому комментарию, передайте:  * `feedbackId` — идентификатор отзыва; * `comment.parentId` — идентификатор родительского комментария.  Чтобы изменить комментарий, передайте:  * `feedbackId`— идентификатор отзыва; * `comment.id` — идентификатор комментария, который нужно изменить.  Если передать одновременно `comment.parentId` и `comment.id`, будет изменен существующий комментарий.  |**⚙️ Лимит:** 1 000 запросов в час| |-|  -}
  , getGoodsStats :: a -> Integer -> GetGoodsStatsRequest -> m GetGoodsStatsResponse{- ^ Возвращает подробный отчет по товарам, которые вы разместили на Маркете. С помощью отчета вы можете узнать, например, об остатках на складе, об условиях хранения ваших товаров и т. д.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , addHiddenOffers :: a -> Integer -> AddHiddenOffersRequest -> m EmptyApiResponse{- ^ Скрывает товары магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , deleteHiddenOffers :: a -> Integer -> DeleteHiddenOffersRequest -> m EmptyApiResponse{- ^ Возобновляет показ скрытых вами товаров магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , getHiddenOffers :: a -> Integer -> Maybe [Text] -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> m GetHiddenOffersResponse{- ^ Возвращает список скрытых вами товаров для заданного магазина.  В списке будут товары, скрытые любым способом — по API, с помощью YML-фида, в кабинете и так далее.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , getModel :: a -> Integer -> Maybe Integer -> Maybe CurrencyType -> m GetModelsResponse{- ^ Возвращает информацию о модели товара.  Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)  -}
  , getModelOffers :: a -> Integer -> Maybe Integer -> Maybe CurrencyType -> Maybe SortOrderType -> Maybe Int -> Maybe Int -> m GetModelsOffersResponse{- ^ Возвращает информацию о первых десяти предложениях, расположенных на карточке модели.  Предложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.  Для групповых моделей метод не поддерживается. Идентификатор групповой модели игнорируется.  Для методов `GET models/{modelId}/offers` и `POST models/offers` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)  -}
  , getModels :: a -> Maybe Integer -> Maybe CurrencyType -> GetModelsRequest -> m GetModelsResponse{- ^ Возвращает информацию о моделях товаров.  В одном запросе можно получить информацию не более чем о 100 моделях.  Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)  -}
  , getModelsOffers :: a -> Maybe Integer -> Maybe CurrencyType -> Maybe SortOrderType -> GetModelsRequest -> m GetModelsOffersResponse{- ^ Возвращает информацию о первых десяти предложениях, расположенных на карточках моделей, идентификаторы которых указаны в запросе.  Предложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.  Для групповых моделей выдача предложений не поддерживается. Идентификаторы групповых моделей игнорируются.  В одном запросе можно получить информацию о предложениях не более чем для 100 моделей.  Для методов `GET models/{modelId}/offers` и `POST models/offers` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)  -}
  , searchModels :: a -> Maybe Text -> Maybe Integer -> Maybe CurrencyType -> Maybe Int -> Maybe Int -> m SearchModelsResponse{- ^ Возвращает информацию о моделях, удовлетворяющих заданным в запросе условиям поиска.  В одном запросе можно получить информацию не более чем о 100 моделях.  Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)  -}
  , getOfferMappingEntries :: a -> Integer -> Maybe [Text] -> Maybe [Text] -> Maybe OfferMappingKindType -> Maybe [OfferProcessingStatusType] -> Maybe [OfferAvailabilityStatusType] -> Maybe [Int] -> Maybe [Text] -> Maybe Text -> Maybe Int -> m GetOfferMappingEntriesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  Для каждого товара, который вы размещаете на Маркете, возвращается информация о карточках Маркета, к которым привязан этот товар:  * Идентификатор текущей карточки (marketSku), карточки, которая проходит модерацию и последней отклоненной карточки. * Описание товара, которое указано на карточке Маркета. Например, размер упаковки и вес товара.  Результаты возвращаются постранично. Выходные данные содержат идентификатор следующей страницы.  {% note info %}  Количество товаров в каталоге магазина считается по данным за последние семь дней (не включая сегодня).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров в каталоге магазина * 25)  -}
  , getSuggestedOfferMappingEntries :: a -> Integer -> GetSuggestedOfferMappingEntriesRequest -> m GetSuggestedOfferMappingEntriesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/suggestions](../../reference/business-assortment/getSuggestedOfferMappings.md).  {% endnote %}  Возвращает идентификаторы карточек товаров на Маркете, рекомендованных для ваших товаров.  Каждому товару, который вы размещаете, должна соответствовать карточка товара на Маркете со своим идентификатором — SKU на Маркете. Он указывается в URL карточки товара, после «...sku=», например:  ##https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016…##  Чтобы получить для товаров рекомендованные SKU на Маркете, передайте в теле POST-запроса как можно больше информации о них: названия, производителей, штрихкоды, цены и т. д.  Полученные SKU можно передать вместе с информацией о ваших товарах с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/updates](../../reference/offer-mappings/updateOfferMappingEntries.md).  В одном запросе можно получить не более 500 рекомендаций.  |**⚙️ Лимит:** 100 000 рекомендаций в час| |-|  -}
  , updateOfferMappingEntries :: a -> Integer -> UpdateOfferMappingEntryRequest -> m EmptyApiResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Добавляет товары, указанные в запросе, в ваш каталог товаров и редактирует уже имеющиеся товары.  Информацию о товарах нужно передать в теле POST-запроса.  У каждого товара должен быть ваш SKU — уникальный код, который вы используете для идентификации товара:  * Чтобы добавить в каталог новый товар, укажите в параметре `shopSku` ваш SKU, которого еще нет в каталоге. * Чтобы отредактировать товар из каталога, укажите в параметре `shopSku` ваш SKU этого товара в каталоге.  В обоих случаях в запросе нужно передать полное описание товара, даже если вы хотите изменить только несколько характеристик.  Если вы знаете, какой карточке товара на Маркете соответствует ваш товар, укажите ее идентификатор (SKU на Маркете) во входном параметре mapping. Получить SKU на Маркете рекомендованной карточки товара можно с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/suggestions](../../reference/offer-mappings/getSuggestedOfferMappingEntries.md) или через кабинет. Если SKU на Маркете не указан, сотрудники Маркета сами подберут или создадут подходящую карточку товара, либо у него появится статус `NEED_CONTENT` (нужно найти карточку или создать ее самостоятельно) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  Перед публикацией товары проходят модерацию. Если в одном из отправленных товаров найдена ошибка, ответ на запрос будет иметь HTTP-код 400 Bad Request, и ни один из товаров не отправится на модерацию. При этом если вы не передадите все обязательные параметры для какого‑либо товара, после модерации у него появится статус `NEED_INFO` (в описании товара не хватает информации) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  В одном запросе можно добавить не более 500 товаров.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5 000 товаров в минуту| |-|  -}
  , deleteCampaignOffers :: a -> Integer -> DeleteCampaignOffersRequest -> m DeleteCampaignOffersResponse{- ^ Удаляет заданные товары из заданного магазина.  {% note warning \"Запрос удаляет товары именно из конкретного магазина\" %}  На продажи в других магазинах и на наличие товара в общем каталоге он не влияет.  {% endnote %}  Товар не получится удалить, если он хранится на складах Маркета.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , getAllOffers :: a -> Integer -> Maybe Integer -> Maybe Int -> m GetAllOffersResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет максимально быстро получить информацию обо всех предложениях магазина, размещенных на Маркете. Возвращает результат в виде сегментов нефиксированного размера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Яндекс Маркета, с которой соотнесено предложение, а также аукционные ставки на него.  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — среднее количество таваров в каталоге за неделю * 25)  -}
  , getCampaignOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetCampaignOffersRequest -> m GetCampaignOffersResponse{- ^ Возвращает список товаров, которые размещены в заданном магазине. Для каждого товара указываются параметры размещения.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , getOfferRecommendations :: a -> Integer -> Maybe Text -> Maybe Int -> GetOfferRecommendationsRequest -> m GetOfferRecommendationsResponse{- ^ Метод возвращает рекомендации нескольких типов.  **1. Порог для привлекательной цены. Он нужен для участия в софинансировании скидок.**  Показывает, какие **цены для участия** нужно установить, чтобы получить максимальные шансы на срабатывание скидок, софинансируемых Маркетом. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)  **2. Оценка привлекательности цен на витрине.**  Привлекательность влияет на вероятность срабатывания скидок за счет Маркета. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#validation)  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , getOffers :: a -> Integer -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe CurrencyType -> Maybe Bool -> Maybe Int -> Maybe Int -> m GetOffersResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет фильтровать информацию о предложениях магазина, размещенных на Маркете, и искать предложения по заданному поисковому запросу.  Поиск предложений, размещенных на Маркете, работает по поисковому запросу аналогично поиску Маркета. Результаты возвращаются с использованием пейджера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Маркета, с которой соотнесено предложение, и аукционные ставки на него.  {% note info %}  Из-за особенностей поиска Маркета иногда на последних страницах пейджера фактическое количество результатов оказывается меньше количества, указанного ранее на предыдущих страницах.  В связи с этим настоятельно рекомендуется анализировать содержимое параметра pager для каждой полученной страницы.  {% endnote %}  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лисит товаров — среднее количество таваров в каталоге за неделю * 25)  -}
  , updateCampaignOffers :: a -> Integer -> UpdateCampaignOffersRequest -> m EmptyApiResponse{- ^ Изменяет параметры продажи товаров в конкретном магазине: доступность товара, условия доставки и самовывоза, применяемую ставку НДС.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , getOrderBusinessBuyerInfo :: a -> Integer -> Integer -> m GetBusinessBuyerInfoResponse{- ^ Возвращает информацию о покупателе по идентификатору заказа.  {% note info \"\" %}  Чтобы получить информацию о покупателе, который является физическим лицом, воспользуйтесь запросом [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  {% endnote %}  Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY`, `PICKUP` или `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-|  -}
  , getOrderBusinessDocumentsInfo :: a -> Integer -> Integer -> m GetBusinessDocumentsInfoResponse{- ^ Возвращает информацию о документах по идентификатору заказа.  Получить данные можно после того, как заказ перейдет в статус `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-|  -}
  , getOrderBuyerInfo :: a -> Integer -> Integer -> m GetOrderBuyerInfoResponse{- ^ Возвращает информацию о покупателе по идентификатору заказа.  {% note info \"\" %}  Чтобы получить информацию о покупателе, который является юридическим лицом, воспользуйтесь запросом [POST campaigns/{campaignId}/orders/{orderId}/business-buyer](../../reference/order-business-information/getOrderBusinessBuyerInfo.md).  {% endnote %}  Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY` или `PICKUP`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-|  -}
  , setOrderDeliveryDate :: a -> Integer -> Integer -> SetOrderDeliveryDateRequest -> m EmptyApiResponse{- ^ Метод изменяет дату доставки заказа в статусе `PROCESSING` или `DELIVERY`. Для заказов с другими статусами дату доставки изменить нельзя.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , setOrderDeliveryTrackCode :: a -> Integer -> Integer -> SetOrderDeliveryTrackCodeRequest -> m EmptyApiResponse{- ^ {% note warning \"Этот запрос только для DBS\" %}  Вы можете использовать запрос, чтобы повысить лояльность покупателей. Если они могут узнать, на каком этапе доставки находятся их заказы, доверие покупателей к вашему магазину может возрасти.  {% endnote %}  Передает Маркету трек‑номер, по которому покупатель может отследить посылку со своим заказом через службу доставки.  Передать трек‑номер можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY` или `PICKUP`.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , updateOrderStorageLimit :: a -> Integer -> Integer -> UpdateOrderStorageLimitRequest -> m EmptyApiResponse{- ^ Продлевает срок хранения заказа в пункте выдачи продавца.  Заказ должен быть в статусе `PICKUP`. Продлить срок можно только один раз, не больше чем на 30 дней.  Новый срок хранения можно получить в параметре `outletStorageLimitDate` запроса [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , verifyOrderEac :: a -> Integer -> Integer -> VerifyOrderEacRequest -> m VerifyOrderEacResponse{- ^ Отправляет Маркету код подтверждения для его проверки.  Код подтверждает передачу заказа или невыкупа:  * курьеру — курьер должен назвать магазину код; * магазину — магазин называет код курьеру.  Если магазин получает невыкупленный заказ, то ему нужно назвать курьеру код из кабинета или приложения.  Если у магазина настроена работа с кодами подтверждения, в запросах [POST order/status](../../pushapi/reference/postOrderStatus.md), [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md), [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md), [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) в параметре `delivery`, вложенном в `order` будет возвращаться параметр `eacType` с типом `Enum` — тип кода подтверждения для передачи заказа.  Возможные значения: `MERCHANT_TO_COURIER` — магазин называет код курьеру, `COURIER_TO_MERCHANT` — курьер называет код магазину.  Параметр `eacType` возвращается при статусах заказа `COURIER_FOUND`, `COURIER_ARRIVED_TO_SENDER` и `DELIVERY_SERVICE_UNDELIVERED`. Если заказ в других статусах, параметр может отсутствовать.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , generateOrderLabel :: a -> Integer -> Integer -> Integer -> Integer -> Maybe PageFormatType -> m FilePath{- ^ Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , generateOrderLabels :: a -> Integer -> Integer -> Maybe PageFormatType -> m FilePath{- ^ Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , getOrderLabelsData :: a -> Integer -> Integer -> m GetOrderLabelsDataResponse{- ^ Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , acceptOrderCancellation :: a -> Integer -> Integer -> AcceptOrderCancellationRequest -> m EmptyApiResponse{- ^ Подтверждает или отклоняет запрос покупателя на отмену заказа, который передан службе доставки.  Покупатель может отменить заказ в течение его обработки или доставки. Если заказ еще обрабатывается (имеет статус PROCESSING), вам не нужно подтверждать отмену заказа — он будет отменен автоматически.  Если заказ уже передан службе доставки (принимает статус `DELIVERY` или `PICKUP`) и пользователь отменил его, вы можете предупредить службу об отмене в течение 48 часов. Если служба доставки узнала об отмене до передачи заказа покупателю, подтвердите отмену с помощью запроса [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation.md). Если заказ уже доставлен, отклоните отмену с помощью этого же запроса. Тогда у покупателя останется заказ, и деньги за него возвращаться не будут.  Чтобы узнать, какие заказы были отменены в статусе `DELIVERY` или `PICKUP`, отправьте запрос [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md). В его URL добавьте входной параметр `onlyWaitingForCancellationApprove=true`. Вы также можете узнать об отмененных заказах в кабинете или через почту — на нее придет уведомление об отмене.  Если в течение 48 часов вы не подтвердите или отклоните отмену, заказ будет отменен автоматически.  |**⚙️ Лимит:** 500 запросов в час| |-|  -}
  , getOrder :: a -> Integer -> Integer -> m GetOrderResponse{- ^ Возвращает информацию о заказе.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , getOrders :: a -> Integer -> Maybe [Integer] -> Maybe [OrderStatusType] -> Maybe [OrderSubstatusType] -> Maybe Day -> Maybe Day -> Maybe Day -> Maybe Day -> Maybe UTCTime -> Maybe UTCTime -> Maybe OrderDeliveryDispatchType -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe OrderBuyerType -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Int -> m GetOrdersResponse{- ^ Возвращает информацию о заказах. Запрос можно использовать, чтобы узнать, нет ли новых заказов.  Доступна фильтрация по нескольким характеристикам заказов:  * дате оформления;  * статусу;  * идентификаторам заказов;  * этапу обработки или причине отмены;  * типу (настоящий или тестовый);  * дате отгрузки в службу доставки;  * дате и времени обновления заказа.  Информация о заказах, доставленных или отмененных больше 30 дней назад, не возвращается. Ее можно получить с помощью запроса информации об отдельном заказе [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) (если у вас есть идентификатор заказа) или запроса отчета по заказам [POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md).  Максимальный диапазон дат за один запрос к ресурсу — 30 дней. Максимальное количество заказов в выходных данных запроса — 50.  Результаты возвращаются постранично. Для навигации по страницам используйте параметры `page_token` и `limit`.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , provideOrderDigitalCodes :: a -> Integer -> Integer -> ProvideOrderDigitalCodesRequest -> m EmptyApiResponse{- ^ Передает ключи цифровых товаров, которые покупатель заказал и оплатил. После выполнения запроса Маркет отправит ему письмо с ключами и инструкциями по активации, а также переведет заказ в финальный статус `DELIVERED`.  Ключ нужно передать в течение 30 минут после перехода заказа в статус `PROCESSING`.  Если в один заказ входят несколько ключей, передавайте их все в одном запросе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , provideOrderItemIdentifiers :: a -> Integer -> Integer -> ProvideOrderItemIdentifiersRequest -> m ProvideOrderItemIdentifiersResponse{- ^ {% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Передает Маркету коды маркировки для единиц товара в указанном заказе.  Принимаются коды следующих типов:  * Коды «Честного знака». * УИН для ювелирных изделий. * РНПТ и ГТД для импортных прослеживаемых товаров.  {% note warning %}  Прежде чем работать с этим методом, обязательно прочтите [статью о работе с маркируемыми товарами](https://yandex.ru/support/marketplace/orders/cz.html).  {% endnote %}  Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , setOrderBoxLayout :: a -> Integer -> Integer -> SetOrderBoxLayoutRequest -> m SetOrderBoxLayoutResponse{- ^ {% note tip \"Подходит и для DBS\" %}  Запрос предназначен для работы с FBS-заказами, но вы можете использовать его для обработки DBS-заказов, если это удобно.  {% endnote %}  Позволяет выполнить три операции:  * передать Маркету информацию о распределении товаров по коробкам; * передать Маркету коды маркировки для товаров; * удалить товар из заказа, если его не оказалось на складе.  Если нужно что-то поправить в переданных данных, просто повторите запрос — это можно делать сколько угодно раз до перевода заказа в статус **Готов к отгрузке**. ⚠️ Если вы меняете раскладку уже после печати и расклейки ярлыков, не забудье перепечатать их и наклеить заново.  ## Как передать информацию о распределении товаров  В этом запросе вам нужно передать Маркету список коробок и указать, какие именно товары лежат в каждой из них. Коробки могут быть двух типов:  * **Содержащие товары целиком.** Такая коробка может содержать сколько угодно единиц любых товаров.  * **Содержащие часть товара.** Такие коробки содержат по одной части одного товара. Например, одна содержит внешний блок кондиционера, а другая — внутренний блок.  ⚠️ Одна коробка не может содержать и товары целиком, и части товаров.  ## Как передавать коды маркировки  Если в заказе есть товары, подлежащие маркировке, в запросе нужно передать соответствующие уникальные коды. [Что такое маркировка?](https://yandex.ru/support/marketplace/orders/cz.html)  Принимаются коды следующих типов:  * Коды «Честного знака». * УИН для ювелирных изделий. * РНПТ и ГТД для импортных прослеживаемых товаров.  Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.  Если товар едет в нескольких коробках, код маркировки нужно передать для каждой из них.  ## Как удалить товар из заказа  Чтобы удалить товар из заказа:  1. Добавьте в запрос `allowRemove: true`. 2. Передайте распределение по коробкам без товара, который нужно удалить.  {% note warning \"Удаление нельзя отменить\" %}  Эта операция необратима: покупатель сразу получит уведомление, а состав заказа изменится.  {% endnote %}  Чтобы удалить позицию целиком, не передавайте соответствующий `OrderBoxLayoutItemDTO`. Чтобы уменьшить количество товара, передайте уменьшенное значение в поле `fullCount`.  Нельзя удалить или уменьшить количество товара, если он:  * добавлен по акции; * составляет 99% стоимости заказа; * единственный товар в заказе.  Если вы не можете отгрузить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.  {% note info \"Увеличить заказ нельзя\" %}  С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.  {% endnote %}  ## Примеры  {% cut \"Товар умещается в коробку\" %}  Вот как будет выглядеть запрос, если в одной коробке едут:    * три единицы одного товара, требующего маркировки;   * одна единица другого товара, не требущего маркировки.    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"fullCount\": 3,                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           },                           {                               \"cis\": \"010304109478gftJ14545762!\\u001dhGt264\"                           },                           {                               \"cis\": \"010304109478fRs28323ks23!\\u001dhet201\"                           }                       ]                   },                   {                       \"id\": 654321,                       \"fullCount\": 1                   }               ]           }       ]   }   ```  {% endcut %}  {% cut \"Товар едет в разных коробках\" %}  Вот как будет выглядеть запрос, если товар едет в двух коробках:    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           }       ]   }   ```  {% endcut %}  {% cut \"Одинаковые товары, где каждый едет в нескольких коробках\" %}  Вот как будет выглядеть запрос, если каждый из двух одинаковых товаров едет в двух коробках:    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           }       ]   }   ```  {% endcut %}  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , setOrderShipmentBoxes :: a -> Integer -> Integer -> Integer -> SetOrderShipmentBoxesRequest -> m SetOrderShipmentBoxesResponse{- ^ {% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Отгружаемый Маркету заказ может не влезть в одну коробку или упаковку — в этом случае получается, что он занимает несколько грузовых мест.  Количество грузовых мест нужно обязательно передавать Маркету, если оно не равно 1. Это делается перед переводом его в статус **Готов к отгрузке**. Подробно о том, что в какой момент нужно передавать, рассказано в [пошаговой инструкции](../../step-by-step/fbs.md).  Метод устроен немного нестандартно: количество задается длиной массива пустых объектов.  Раньше метод требовал передачи большего количества данных. Запросы, оформленные по старому образцу, работают, но лучше делать по-новому.  {% cut \"Как было раньше\" %}  Структура тела PUT-запроса:  ``` {   \"boxes\":   [     {       \"fulfilmentId\": \"{string}\",       \"weight\": {int64},       \"width\": {int64},       \"height\": {int64},       \"depth\": {int64},       \"items\":       [         {           \"id\": {int64},           \"count\": {int32}         },         ...       ]     },     ...   ] } ``` | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `boxes`       |           | Список грузовых мест.       |  **Параметры, вложенные в `boxes`** | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `fulfilmentId`       |  String   | Идентификатор грузового места в информационной системе магазина. Сформируйте идентификатор по шаблону: `номер заказа на Маркете-номер грузового места`. Например, `7206821‑1, 7206821‑2` и т. д. | | `weight`       | Int64        | Масса брутто грузового места (суммарная масса упаковки и содержимого) в граммах. | | `width`       | Int64   | Ширина грузового места в сантиметрах.       | | `height`       | Int64   | Высота грузового места в сантиметрах.       | | `depth`       | Int64   | Глубина грузового места в сантиметрах.        | | `items`       | Int64   | Список товаров в грузовом месте.       |  **Параметры, вложенные в `items`** | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `id`       | Int64     | Идентификатор товара в рамках заказа.   | | `count`    | Int32     | Количество единиц товара в грузовом месте.       |  {% endcut %}  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , updateOrderItems :: a -> Integer -> Integer -> UpdateOrderItemRequest -> m NoContent{- ^ {% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Изменяет состав заказа, если позволяет выбранная служба доставки, в случаях:  * покупатель уменьшил количество товара; * магазин не может поставить все товары в заказе.  Для этого заказ должен находится в статусе `\"status\": \"PROCESSING\"` этапа обработки `\"substatus\": \"STARTED\"`. После передачи статуса `\"substatus\": \"READY_TO_SHIP\"` изменить состав невозможно.  Если одинаковых товаров несколько, для уменьшения количества передайте обновленное значение в атрибуте `count` параметра `item`.  Чтобы полностью удалить товар из заказа:  * передайте значение `0`; или * не передавайте параметр `item`.  Нельзя удалить или уменьшить количество товара, если он:  * добавлен по акции; * составляет 99% стоимости заказа; * единственный товар в заказе.  Если необходимо удалить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.  {% note info \"Увеличить заказ нельзя\" %}  С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.  {% endnote %}  **Возврат денег покупателю**  Если покупатель оплатил товар при оформлении, Маркет вернет ему деньги за удаленные из заказа товары в течение двух дней:  * при оплате банковской картой — с момента, когда магазин переведет заказ в статус `SHIPPED`;  * при оплате через Apple Pay или Google Pay — с момента, когда магазин удалит товар из заказа.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , updateOrderStatus :: a -> Integer -> Integer -> UpdateOrderStatusRequest -> m UpdateOrderStatusResponse{- ^ Изменяет статус заказа. Возможные изменения статусов:  * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`. * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`. * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , updateOrderStatuses :: a -> Integer -> UpdateOrderStatusesRequest -> m UpdateOrderStatusesResponse{- ^ Изменяет статусы нескольких заказов.  Возможные изменения статусов:  * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"`и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`. * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`. * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.  Максимальное количество заказов, у которых можно изменить статус в одном запросе, — 30.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , getOrdersStats :: a -> Integer -> Maybe Text -> Maybe Int -> GetOrdersStatsRequest -> m GetOrdersStatsResponse{- ^ Возвращает информацию по заказам на Маркете, в которых есть ваши товары. С помощью нее вы можете собрать статистику по вашим заказам и узнать, например, какие из товаров чаще всего возвращаются покупателями, какие, наоборот, пользуются большим спросом, какая комиссия начисляется за заказы и т. п.  {% note info \"\" %}  Раньше генерация детальной информации по заказам называлась **Отчет по заказам**. Сейчас это новый отчет. [Подробнее об отчете](../../reference/reports/generateUnitedOrdersReport.md)  {% endnote %}  В одном запросе можно получить информацию не более чем по 200 заказам.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-|  -}
  , deleteOutletLicenses :: a -> Integer -> Maybe [Integer] -> m EmptyApiResponse{- ^ Удаляет информацию о лицензиях для точек продаж.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-|  -}
  , getOutletLicenses :: a -> Integer -> Maybe [Integer] -> Maybe [Integer] -> m GetOutletLicensesResponse{- ^ Возвращает информацию о лицензиях для точек продаж.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-|  -}
  , updateOutletLicenses :: a -> Integer -> UpdateOutletLicenseRequest -> m EmptyApiResponse{- ^ Передает информацию о новых и существующих лицензиях для точек продаж. Поддерживаются только лицензии на розничную продажу алкоголя.  Чтобы размещать алкогольную продукцию на Маркете, надо также прислать гарантийное письмо (если вы еще не делали этого раньше) и правильно оформить предложения в прайс-листе. Далее информация о лицензиях проходит проверку.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-|  -}
  , createOutlet :: a -> Integer -> ChangeOutletRequest -> m CreateOutletResponse{- ^ Создает точку продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-|  -}
  , deleteOutlet :: a -> Integer -> Integer -> m EmptyApiResponse{- ^ Удаляет точку продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-|  -}
  , getOutlet :: a -> Integer -> Integer -> m GetOutletResponse{- ^ Возвращает информацию о точках продаж магазина.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-|  -}
  , getOutlets :: a -> Integer -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Integer -> m GetOutletsResponse{- ^ Возвращает список точек продаж магазина.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-|  -}
  , updateOutlet :: a -> Integer -> Integer -> ChangeOutletRequest -> m EmptyApiResponse{- ^ Изменяет информацию о точке продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-|  -}
  , confirmBusinessPrices :: a -> Integer -> ConfirmPricesRequest -> m EmptyApiResponse{- ^ Подтверждает основную цену на товары, которые попали в карантин, и удаляет их из карантина.  Основная цена задается в каталоге и действует во всех магазинах кабинета.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-|  -}
  , confirmCampaignPrices :: a -> Integer -> ConfirmPricesRequest -> m EmptyApiResponse{- ^ Подтверждает в заданном магазине цену на товары, которые попали в карантин, и удаляет их из карантина.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , getBusinessQuarantineOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetQuarantineOffersRequest -> m GetQuarantineOffersResponse{- ^ Возвращает список товаров, которые находятся в карантине по **основной цене**. Основная цена задается в каталоге и действует во всех магазинах кабинета.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , getCampaignQuarantineOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetQuarantineOffersRequest -> m GetQuarantineOffersResponse{- ^ Возвращает список товаров, которые находятся в карантине по цене, установленной в заданном магазине.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , getPrices :: a -> Integer -> Maybe Text -> Maybe Int -> Maybe Bool -> m GetPricesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST campaigns/{campaignId}/offer-prices](../../reference/assortment/getPricesByOfferIds.md).  {% endnote %}  Возвращает список цен, установленных вами на товары любым способом: например, через партнерский API или в файле с каталогом.  {% note info %}  Общее количество товаров считается по данным за последние семь дней (не включая сегодня) и не может быть выше 2 миллионов.  {% endnote %}  Способы установки цен описаны [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/assortment/operations/prices.html).  |**⚙️ Лимит:** ```(количество товаров партнера на витрине) * 25``` товаров в сутки| |-|  -}
  , getPricesByOfferIds :: a -> Integer -> Maybe Text -> Maybe Int -> GetPricesByOfferIdsRequest -> m GetPricesByOfferIdsResponse{- ^ Возвращает список цен на указанные товары в магазине.  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для просмотра базовых цен используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров на витрине * 25)  -}
  , getSuggestedPrices :: a -> Integer -> SuggestPricesRequest -> m SuggestPricesResponse{- ^ {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [отчет «Цены на рынке»](../../reference/reports/generatePricesReport.md).  {% endnote %}  {% note warning \"\" %}  Этот метод подходит только тем магазинам, которые устанавливают цены на товары в рублях.  {% endnote %}  Возвращает цены для продвижения товаров, которые вы размещаете на Маркете.  Товары, для которых нужно получить цены, передаются в теле POST-запроса.  Цены для продвижения зависят от цен, установленных на товары другими партнерами. Если один товар поставляют несколько партнеров, на Маркете сначала продается товар с более низкой ценой. Когда закончится товар по низкой цене, начнет продаваться товар по более высокой цене.  Выходные данные содержат для каждого товара несколько цен, соответствующих разным типам продвижения.  Установить цены на товары можно с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md) или другими способами: например, указать их в файле с каталогом. Также вы можете использовать стратегии для автоматической установки рекомендованных цен или минимальных цен на Маркете.  Подробно об автоматическом управлении ценами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/prices.html).  |**⚙️ Лимит:** 100 000 товаров в час| |-|  -}
  , updateBusinessPrices :: a -> Integer -> UpdateBusinessPricesRequest -> m EmptyApiResponse{- ^ Устанавливает [базовые цены](*default-price). Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-|  -}
  , updatePrices :: a -> Integer -> UpdatePricesRequest -> m EmptyApiResponse{- ^ Устанавливает цены на товары в магазине. Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для управления базовыми ценами используйте [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-|  -}
  , deletePromoOffers :: a -> Integer -> DeletePromoOffersRequest -> m DeletePromoOffersResponse{- ^ Убирает товары из акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getPromoOffers :: a -> Integer -> Maybe Text -> Maybe Int -> GetPromoOffersRequest -> m GetPromoOffersResponse{- ^ Возвращает список товаров, которые участвуют или могут участвовать в акции.  {% note warning %}  В параметре `limit` не передавайте значение больше 500.  {% endnote %}  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getPromos :: a -> Integer -> GetPromosRequest -> m GetPromosResponse{- ^ Возвращает информацию об акциях Маркета.  По умолчанию возвращаются акции, в которых продавец участвует или может принять участие.  Чтобы получить текущие или завершенные акции, передайте параметр `participation`.  Типы акций, которые возвращаются в ответе:  * прямая скидка; * флеш-акция; * скидка по промокоду.  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , updatePromoOffers :: a -> Integer -> UpdatePromoOffersRequest -> m UpdatePromoOffersResponse{- ^ Добавляет товары в акцию или изменяет цены на товары, которые участвуют в акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , getQualityRatingDetails :: a -> Integer -> m GetQualityRatingDetailsResponse{- ^ Возвращает список заказов, которые повлияли на индекс качества магазина. Чтобы узнать значение индекса качества, выполните запрос [POST businesses/{businessId}/ratings/quality](../../reference/ratings/getQualityRatings.md).  |**⚙️ Лимит:** 100000 запросов в час| |-|  -}
  , getQualityRatings :: a -> Integer -> GetQualityRatingRequest -> m GetQualityRatingResponse{- ^ Возвращает значение индекса качества магазинов и его составляющие.  Подробнее об индексе качества читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/score/).  |**⚙️ Лимит:** 10000 запросов в час| |-|  -}
  , searchRegionChildren :: a -> Integer -> Maybe Int -> Maybe Int -> m GetRegionWithChildrenResponse{- ^ Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-|  -}
  , searchRegionsById :: a -> Integer -> m GetRegionsResponse{- ^ Возвращает информацию о регионе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-|  -}
  , searchRegionsByName :: a -> Maybe Text -> Maybe Text -> Maybe Int -> m GetRegionsResponse{- ^ Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.  Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-|  -}
  , generateBoostConsolidatedReport :: a -> Maybe ReportFormatType -> GenerateBoostConsolidatedRequest -> m GenerateReportResponse{- ^ Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateCompetitorsPositionReport :: a -> Maybe ReportFormatType -> GenerateCompetitorsPositionReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \"Значение -1 в отчете\" %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-|  -}
  , generateGoodsFeedbackReport :: a -> Maybe ReportFormatType -> GenerateGoodsFeedbackRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateGoodsMovementReport :: a -> Maybe ReportFormatType -> GenerateGoodsMovementReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateGoodsRealizationReport :: a -> Maybe ReportFormatType -> GenerateGoodsRealizationReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateGoodsTurnoverReport :: a -> Maybe ReportFormatType -> GenerateGoodsTurnoverRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateMassOrderLabelsReport :: a -> Maybe PageFormatType -> GenerateMassOrderLabelsRequest -> m GenerateReportResponse{- ^ Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-|  -}
  , generatePricesReport :: a -> Maybe ReportFormatType -> GeneratePricesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateShelfsStatisticsReport :: a -> Maybe ReportFormatType -> GenerateShelfsStatisticsRequest -> m GenerateReportResponse{- ^ Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateShipmentListDocumentReport :: a -> GenerateShipmentListDocumentReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateShowsSalesReport :: a -> Maybe ReportFormatType -> GenerateShowsSalesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-|  -}
  , generateStocksOnWarehousesReport :: a -> Maybe ReportFormatType -> GenerateStocksOnWarehousesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateUnitedMarketplaceServicesReport :: a -> Maybe ReportFormatType -> GenerateUnitedMarketplaceServicesReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |-----------------------------|---------------------------------| |По дате начисления услуги    |`dateFrom` и `dateTo`            | |По дате формирования акта    |`year` и `month`                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateUnitedNettingReport :: a -> Maybe ReportFormatType -> GenerateUnitedNettingReportRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |-------------------------|---------------------------------------| |О платежах за период     |`dateFrom` и `dateTo`                  | |О платежном поручении    |`bankOrderId` и `bankOrderDateTime`    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , generateUnitedOrdersReport :: a -> Maybe ReportFormatType -> GenerateUnitedOrdersRequest -> m GenerateReportResponse{- ^ Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \"\" %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , getReportInfo :: a -> Text -> m GetReportInfoResponse{- ^ Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , getReturn :: a -> Integer -> Integer -> Integer -> m GetReturnResponse{- ^ Получает информацию по одному невыкупу или возврату.  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , getReturnApplication :: a -> Integer -> Integer -> Integer -> m FilePath{- ^ Загружает заявление покупателя на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , getReturnPhoto :: a -> Integer -> Integer -> Integer -> Integer -> Text -> m FilePath{- ^ Получает фотографии, которые покупатель приложил к заявлению на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , getReturns :: a -> Integer -> Maybe Text -> Maybe Int -> Maybe [Integer] -> Maybe [RefundStatusType] -> Maybe ReturnType -> Maybe Day -> Maybe Day -> Maybe Day -> Maybe Day -> m GetReturnsResponse{- ^ Получает список невыкупов и возвратов.  Чтобы получить информацию по одному возврату или невыкупу, выполните запрос [GET campaigns/{campaignId}/orders/{orderId}/returns/{returnId}](../../reference/orders/getReturn.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , setReturnDecision :: a -> Integer -> Integer -> Integer -> SetReturnDecisionRequest -> m EmptyApiResponse{- ^ Выбирает решение по возврату от покупателя. После этого для подтверждения решения нужно выполнить запрос [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit](../../reference/orders/submitReturnDecision.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , submitReturnDecision :: a -> Integer -> Integer -> Integer -> m EmptyApiResponse{- ^ Подтверждает выбранное решение по возврату, отправленное в запросе [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision](../../reference/orders/setReturnDecision.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-|  -}
  , confirmShipment :: a -> Integer -> Integer -> ConfirmShipmentRequest -> m EmptyApiResponse{- ^ Подтверждает отгрузку товаров в сортировочный центр или пункт приема заказов. |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , downloadShipmentAct :: a -> Integer -> Integer -> m FilePath{- ^ {% note warning \"Экспресс‑доставка\" %}  Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам Яндекс Go, подготавливать акт приема‑передачи не нужно.  {% endnote %}  Запрос формирует акт приема-передачи заказов, входящих в отгрузку, и возвращает акт в формате PDF. В акте содержатся собранные и готовые к отправке заказы.  При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:  {% cut \"Данные, из которых Маркет формирует акт\" %}  | **Данные в акте**                                         | **Описание**                                                                                                                                                                                                                                                         | | --------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Дата                                                      | Дата запроса.                                                                                                                                                                                                                                                        | | Отправитель                                               | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         | | Исполнитель                                               | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                | | № отправления в системе заказчика                         | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              | | № отправления в системе исполнителя (субподрядчика)       | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             | | Объявленная ценность                                      | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       | | Вес                                                       | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). | | Количество мест                                           | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |  {% endcut %}  Остальные поля нужно заполнить самостоятельно в распечатанном акте. |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , downloadShipmentDiscrepancyAct :: a -> Integer -> Integer -> m FilePath{- ^ Возвращает акт расхождений для заданной отгрузки. |**⚙️ Лимит:** 200 запросов в час| |-|  -}
  , downloadShipmentInboundAct :: a -> Integer -> Integer -> m FilePath{- ^ Возвращает фактический акт приема-передачи для заданной отгрузки.  Такой акт становится доступен спустя несколько часов после завершения отгрузки. Он может понадобиться, если после отгрузки обнаружатся расхождения.  |**⚙️ Лимит:** 200 запросов в час| |-|  -}
  , downloadShipmentPalletLabels :: a -> Integer -> Integer -> Maybe ShipmentPalletLabelPageFormatType -> m FilePath{- ^ PDF-файл с ярлыками на каждый короб или палету в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).  Распечатайте по несколько копий каждого ярлыка: на одну тару нужно наклеить минимум 2 ярлыка с разных сторон.  Количество упаковок в отгрузке задается в запросе [PUT campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets](../../reference/shipments/setShipmentPalletsCount.md). |**⚙️ Лимит:** 200 запросов в час| |-|  -}
  , downloadShipmentReceptionTransferAct :: a -> Integer -> Maybe Int -> m FilePath{- ^ Запрос подтверждает ближайшую отгрузку и возвращает акт приема-передачи в формате PDF.  {% note warning \"Экспресс‑доставка\" %}  Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам [Яндекс Go](https://go.yandex/), подготавливать акт приема‑передачи не нужно.  {% endnote %}  В акт входят собранные и готовые к отправке заказы, которые отгружаются в сортировочный центр или пункт приема или курьерам Маркета.  При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:  {% cut \"Данные, из которых Маркет формирует акт\" %}  | **Данные в акте**                                   | **Описание**                                                                                                                                                                                                                                                         | | --------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Отправитель                                         | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         | | Исполнитель                                         | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                | | № отправления в системе заказчика                   | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              | | № отправления в системе исполнителя (субподрядчика) | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             | | Объявленная ценность                                | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       | | Стоимость всех товаров в заказе                     | Стоимость всех заказанных товаров.                                                                                                                                                                                                                                   | | Вес                                                 | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). | | Количество мест                                     | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |  {% endcut %}  Остальные поля нужно заполнить самостоятельно в распечатанном акте. |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , downloadShipmentTransportationWaybill :: a -> Integer -> Integer -> m FilePath{- ^ Возвращает транспортную накладную для заданной отгрузки.  Транспортная накладная понадобится, если вы отгружаете товары непосредственно со своего склада. [Подробно об этом способе отгрузки](https://yandex.ru/support/marketplace/orders/fbs/settings/shipment.html#at-your-warehouse)  |**⚙️ Лимит:** 200 запросов в час| |-|  -}
  , getShipment :: a -> Integer -> Integer -> Maybe Bool -> m GetShipmentResponse{- ^ Возвращает информацию об отгрузке по ее идентификатору. |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , getShipmentOrdersInfo :: a -> Integer -> Integer -> m GetShipmentOrdersInfoResponse{- ^ Возвращает информацию о возможности печати ярлыков-наклеек для заказов в отгрузке. |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , searchShipments :: a -> Integer -> Maybe Text -> Maybe Int -> SearchShipmentsRequest -> m SearchShipmentsResponse{- ^ Возвращает информацию об отгрузках по заданным параметрам:  * дате; * статусу; * идентификаторам заказов.  Результаты возвращаются постранично. |**⚙️ Лимит:** 100 запросов в час| |-|  -}
  , setShipmentPalletsCount :: a -> Integer -> Integer -> SetShipmentPalletsCountRequest -> m EmptyApiResponse{- ^ Передает Маркету количество коробов или палет в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).  Получить PDF-файл с ярлыками для упаковок можно с помощью запроса [GET campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels](../../reference/shipments/downloadShipmentPalletLabels.md). |**⚙️ Лимит:** 200 запросов в час| |-|  -}
  , transferOrdersFromShipment :: a -> Integer -> Integer -> TransferOrdersFromShipmentRequest -> m EmptyApiResponse{- ^ Переносит указанные заказы из указанной отгрузки в следующую отгрузку. [Что такое отгрузка?](https://yandex.ru/support/marketplace/orders/fbs/process.html#ship)  Используйте этот запрос, если не успеваете собрать и упаковать заказы вовремя.  {% note warning \"Такие переносы снижают индекс качества магазина\" %}  Этот запрос предназначен для исключительных случаев. Если вы будете переносить заказы слишком часто, магазин столкнется с ограничениями. [Что за ограничения?](https://yandex.ru/support/marketplace/quality/score/fbs.html)  {% endnote %}  Переносить заказы можно, если до формирования отгрузки осталось больше получаса.  Перенос происходит не мгновенно, а занимает несколько минут.  |**⚙️ Лимит:** 200 запросов в час| |-|  -}
  , getStocks :: a -> Integer -> Maybe Text -> Maybe Int -> GetWarehouseStocksRequest -> m GetWarehouseStocksResponse{- ^ Возвращает данные об остатках товаров (для всех моделей) и об [оборачиваемости](*turnover) товаров (для модели FBY).  {% note info \"По умолчанию данные по оборачивамости не возращаются\" %}  Чтобы они были в ответе, передавайте `true` в поле `withTurnover`.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-|  [//]: <> (turnover: Среднее количество дней, за которое товар продается. Подробно об оборачиваемости рассказано в Справке Маркета для продавцов https://yandex.ru/support/marketplace/analytics/turnover.html.)  -}
  , updateStocks :: a -> Integer -> UpdateStocksRequest -> m EmptyApiResponse{- ^ Передает данные об остатках товаров на витрине.  Обязательно указывайте SKU **в точности** так, как он указан в каталоге. Например, _557722_ и _0557722_ — это два разных SKU.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-|  -}
  , calculateTariffs :: a -> CalculateTariffsRequest -> m CalculateTariffsResponse{- ^ Рассчитывает стоимость услуг Маркета для товаров с заданными параметрами. Порядок товаров в запросе и ответе сохраняется, чтобы определить, для какого товара рассчитана стоимость услуги.  Обратите внимание: калькулятор осуществляет примерные расчеты. Финальная стоимость для каждого заказа зависит от предоставленных услуг.  В запросе можно указать либо параметр `campaignId`, либо `sellingProgram`. Совместное использование параметров приведет к ошибке.  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , getFulfillmentWarehouses :: a -> m GetFulfillmentWarehousesResponse{- ^ Возвращает список складов Маркета с их идентификаторами.  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  , getWarehouses :: a -> Integer -> m GetWarehousesResponse{- ^ Возвращает список складов и, если склады объединены, список групп складов. [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)  Среди прочего запрос позволяет определить идентификатор, который нужно использовать при передаче остатков для группы складов.  |**⚙️ Лимит:** 100 запросов в минуту| |-|  -}
  }


newtype ПартнерскийAPIМаркетаClient a = ПартнерскийAPIМаркетаClient
  { runClient :: ClientEnv -> ExceptT ClientError IO a
  } deriving Functor

instance Applicative ПартнерскийAPIМаркетаClient where
  pure x = ПартнерскийAPIМаркетаClient (\_ -> pure x)
  (ПартнерскийAPIМаркетаClient f) <*> (ПартнерскийAPIМаркетаClient x) =
    ПартнерскийAPIМаркетаClient (\env -> f env <*> x env)

instance Monad ПартнерскийAPIМаркетаClient where
  (ПартнерскийAPIМаркетаClient a) >>= f =
    ПартнерскийAPIМаркетаClient (\env -> do
      value <- a env
      runClient (f value) env)

instance MonadIO ПартнерскийAPIМаркетаClient where
  liftIO io = ПартнерскийAPIМаркетаClient (\_ -> liftIO io)

createПартнерскийAPIМаркетаClient :: ПартнерскийAPIМаркетаBackend AuthClient ПартнерскийAPIМаркетаClient
createПартнерскийAPIМаркетаClient = ПартнерскийAPIМаркетаBackend{..}
  where
    ((coerce -> getBidsInfoForBusiness) :<|>
     (coerce -> getBidsRecommendations) :<|>
     (coerce -> putBidsForBusiness) :<|>
     (coerce -> putBidsForCampaign) :<|>
     (coerce -> addOffersToArchive) :<|>
     (coerce -> deleteOffers) :<|>
     (coerce -> deleteOffersFromArchive) :<|>
     (coerce -> getOfferMappings) :<|>
     (coerce -> getSuggestedOfferMappings) :<|>
     (coerce -> updateOfferMappings) :<|>
     (coerce -> getBusinessSettings) :<|>
     (coerce -> getCampaign) :<|>
     (coerce -> getCampaignLogins) :<|>
     (coerce -> getCampaignRegion) :<|>
     (coerce -> getCampaignSettings) :<|>
     (coerce -> getCampaigns) :<|>
     (coerce -> getCampaignsByLogin) :<|>
     (coerce -> getCategoriesMaxSaleQuantum) :<|>
     (coerce -> getCategoriesTree) :<|>
     (coerce -> createChat) :<|>
     (coerce -> getChatHistory) :<|>
     (coerce -> getChats) :<|>
     (coerce -> sendFileToChat) :<|>
     (coerce -> sendMessageToChat) :<|>
     (coerce -> getCategoryContentParameters) :<|>
     (coerce -> getOfferCardsContentStatus) :<|>
     (coerce -> updateOfferContent) :<|>
     (coerce -> acceptOrderCancellation) :<|>
     (coerce -> addHiddenOffers) :<|>
     (coerce -> addOffersToArchive) :<|>
     (coerce -> calculateTariffs) :<|>
     (coerce -> confirmBusinessPrices) :<|>
     (coerce -> confirmCampaignPrices) :<|>
     (coerce -> createChat) :<|>
     (coerce -> createOutlet) :<|>
     (coerce -> deleteCampaignOffers) :<|>
     (coerce -> deleteGoodsFeedbackComment) :<|>
     (coerce -> deleteHiddenOffers) :<|>
     (coerce -> deleteOffers) :<|>
     (coerce -> deleteOffersFromArchive) :<|>
     (coerce -> deleteOutlet) :<|>
     (coerce -> deleteOutletLicenses) :<|>
     (coerce -> deletePromoOffers) :<|>
     (coerce -> generateBoostConsolidatedReport) :<|>
     (coerce -> generateCompetitorsPositionReport) :<|>
     (coerce -> generateGoodsFeedbackReport) :<|>
     (coerce -> generateMassOrderLabelsReport) :<|>
     (coerce -> generateOrderLabel) :<|>
     (coerce -> generateOrderLabels) :<|>
     (coerce -> generatePricesReport) :<|>
     (coerce -> generateShelfsStatisticsReport) :<|>
     (coerce -> generateShowsSalesReport) :<|>
     (coerce -> generateStocksOnWarehousesReport) :<|>
     (coerce -> generateUnitedMarketplaceServicesReport) :<|>
     (coerce -> generateUnitedNettingReport) :<|>
     (coerce -> generateUnitedOrdersReport) :<|>
     (coerce -> getAllOffers) :<|>
     (coerce -> getBidsInfoForBusiness) :<|>
     (coerce -> getBidsRecommendations) :<|>
     (coerce -> getBusinessQuarantineOffers) :<|>
     (coerce -> getBusinessSettings) :<|>
     (coerce -> getCampaign) :<|>
     (coerce -> getCampaignLogins) :<|>
     (coerce -> getCampaignOffers) :<|>
     (coerce -> getCampaignQuarantineOffers) :<|>
     (coerce -> getCampaignRegion) :<|>
     (coerce -> getCampaignSettings) :<|>
     (coerce -> getCampaigns) :<|>
     (coerce -> getCampaignsByLogin) :<|>
     (coerce -> getCategoriesMaxSaleQuantum) :<|>
     (coerce -> getCategoriesTree) :<|>
     (coerce -> getCategoryContentParameters) :<|>
     (coerce -> getChatHistory) :<|>
     (coerce -> getChats) :<|>
     (coerce -> getDeliveryServices) :<|>
     (coerce -> getFeed) :<|>
     (coerce -> getFeedIndexLogs) :<|>
     (coerce -> getFeedbackAndCommentUpdates) :<|>
     (coerce -> getFeeds) :<|>
     (coerce -> getGoodsFeedbackComments) :<|>
     (coerce -> getGoodsFeedbacks) :<|>
     (coerce -> getGoodsStats) :<|>
     (coerce -> getHiddenOffers) :<|>
     (coerce -> getModel) :<|>
     (coerce -> getModelOffers) :<|>
     (coerce -> getModels) :<|>
     (coerce -> getModelsOffers) :<|>
     (coerce -> getOfferCardsContentStatus) :<|>
     (coerce -> getOfferMappingEntries) :<|>
     (coerce -> getOfferMappings) :<|>
     (coerce -> getOfferRecommendations) :<|>
     (coerce -> getOffers) :<|>
     (coerce -> getOrder) :<|>
     (coerce -> getOrderBusinessBuyerInfo) :<|>
     (coerce -> getOrderBusinessDocumentsInfo) :<|>
     (coerce -> getOrderBuyerInfo) :<|>
     (coerce -> getOrderLabelsData) :<|>
     (coerce -> getOrders) :<|>
     (coerce -> getOrdersStats) :<|>
     (coerce -> getOutlet) :<|>
     (coerce -> getOutletLicenses) :<|>
     (coerce -> getOutlets) :<|>
     (coerce -> getPrices) :<|>
     (coerce -> getPricesByOfferIds) :<|>
     (coerce -> getPromoOffers) :<|>
     (coerce -> getPromos) :<|>
     (coerce -> getQualityRatingDetails) :<|>
     (coerce -> getQualityRatings) :<|>
     (coerce -> getReportInfo) :<|>
     (coerce -> getReturn) :<|>
     (coerce -> getReturnApplication) :<|>
     (coerce -> getReturnPhoto) :<|>
     (coerce -> getReturns) :<|>
     (coerce -> getStocks) :<|>
     (coerce -> getSuggestedOfferMappingEntries) :<|>
     (coerce -> getSuggestedOfferMappings) :<|>
     (coerce -> getSuggestedPrices) :<|>
     (coerce -> getWarehouses) :<|>
     (coerce -> provideOrderDigitalCodes) :<|>
     (coerce -> provideOrderItemIdentifiers) :<|>
     (coerce -> putBidsForBusiness) :<|>
     (coerce -> putBidsForCampaign) :<|>
     (coerce -> refreshFeed) :<|>
     (coerce -> searchModels) :<|>
     (coerce -> searchRegionChildren) :<|>
     (coerce -> searchRegionsById) :<|>
     (coerce -> searchRegionsByName) :<|>
     (coerce -> sendFileToChat) :<|>
     (coerce -> sendMessageToChat) :<|>
     (coerce -> setFeedParams) :<|>
     (coerce -> setOrderBoxLayout) :<|>
     (coerce -> setOrderDeliveryDate) :<|>
     (coerce -> setOrderDeliveryTrackCode) :<|>
     (coerce -> setOrderShipmentBoxes) :<|>
     (coerce -> setReturnDecision) :<|>
     (coerce -> skipGoodsFeedbacksReaction) :<|>
     (coerce -> submitReturnDecision) :<|>
     (coerce -> updateBusinessPrices) :<|>
     (coerce -> updateCampaignOffers) :<|>
     (coerce -> updateGoodsFeedbackComment) :<|>
     (coerce -> updateOfferContent) :<|>
     (coerce -> updateOfferMappingEntries) :<|>
     (coerce -> updateOfferMappings) :<|>
     (coerce -> updateOrderItems) :<|>
     (coerce -> updateOrderStatus) :<|>
     (coerce -> updateOrderStatuses) :<|>
     (coerce -> updateOrderStorageLimit) :<|>
     (coerce -> updateOutlet) :<|>
     (coerce -> updateOutletLicenses) :<|>
     (coerce -> updatePrices) :<|>
     (coerce -> updatePromoOffers) :<|>
     (coerce -> updateStocks) :<|>
     (coerce -> getDeliveryServices) :<|>
     (coerce -> addHiddenOffers) :<|>
     (coerce -> addOffersToArchive) :<|>
     (coerce -> calculateTariffs) :<|>
     (coerce -> confirmBusinessPrices) :<|>
     (coerce -> confirmCampaignPrices) :<|>
     (coerce -> createChat) :<|>
     (coerce -> deleteCampaignOffers) :<|>
     (coerce -> deleteGoodsFeedbackComment) :<|>
     (coerce -> deleteHiddenOffers) :<|>
     (coerce -> deleteOffers) :<|>
     (coerce -> deleteOffersFromArchive) :<|>
     (coerce -> deletePromoOffers) :<|>
     (coerce -> generateBoostConsolidatedReport) :<|>
     (coerce -> generateCompetitorsPositionReport) :<|>
     (coerce -> generateGoodsFeedbackReport) :<|>
     (coerce -> generateGoodsRealizationReport) :<|>
     (coerce -> generateMassOrderLabelsReport) :<|>
     (coerce -> generateOrderLabel) :<|>
     (coerce -> generateOrderLabels) :<|>
     (coerce -> generatePricesReport) :<|>
     (coerce -> generateShelfsStatisticsReport) :<|>
     (coerce -> generateShowsSalesReport) :<|>
     (coerce -> generateStocksOnWarehousesReport) :<|>
     (coerce -> generateUnitedMarketplaceServicesReport) :<|>
     (coerce -> generateUnitedNettingReport) :<|>
     (coerce -> generateUnitedOrdersReport) :<|>
     (coerce -> getAllOffers) :<|>
     (coerce -> getBidsInfoForBusiness) :<|>
     (coerce -> getBidsRecommendations) :<|>
     (coerce -> getBusinessQuarantineOffers) :<|>
     (coerce -> getBusinessSettings) :<|>
     (coerce -> getCampaign) :<|>
     (coerce -> getCampaignLogins) :<|>
     (coerce -> getCampaignOffers) :<|>
     (coerce -> getCampaignQuarantineOffers) :<|>
     (coerce -> getCampaignRegion) :<|>
     (coerce -> getCampaignSettings) :<|>
     (coerce -> getCampaigns) :<|>
     (coerce -> getCampaignsByLogin) :<|>
     (coerce -> getCategoriesMaxSaleQuantum) :<|>
     (coerce -> getCategoriesTree) :<|>
     (coerce -> getCategoryContentParameters) :<|>
     (coerce -> getChatHistory) :<|>
     (coerce -> getChats) :<|>
     (coerce -> getDeliveryServices) :<|>
     (coerce -> getFeed) :<|>
     (coerce -> getFeedIndexLogs) :<|>
     (coerce -> getFeedbackAndCommentUpdates) :<|>
     (coerce -> getFeeds) :<|>
     (coerce -> getGoodsFeedbackComments) :<|>
     (coerce -> getGoodsFeedbacks) :<|>
     (coerce -> getGoodsStats) :<|>
     (coerce -> getHiddenOffers) :<|>
     (coerce -> getOfferCardsContentStatus) :<|>
     (coerce -> getOfferMappingEntries) :<|>
     (coerce -> getOfferMappings) :<|>
     (coerce -> getOfferRecommendations) :<|>
     (coerce -> getOffers) :<|>
     (coerce -> getOrder) :<|>
     (coerce -> getOrderBusinessBuyerInfo) :<|>
     (coerce -> getOrderBusinessDocumentsInfo) :<|>
     (coerce -> getOrderLabelsData) :<|>
     (coerce -> getOrders) :<|>
     (coerce -> getOrdersStats) :<|>
     (coerce -> getPrices) :<|>
     (coerce -> getPricesByOfferIds) :<|>
     (coerce -> getPromoOffers) :<|>
     (coerce -> getPromos) :<|>
     (coerce -> getQualityRatingDetails) :<|>
     (coerce -> getQualityRatings) :<|>
     (coerce -> getReportInfo) :<|>
     (coerce -> getReturn) :<|>
     (coerce -> getReturnApplication) :<|>
     (coerce -> getReturnPhoto) :<|>
     (coerce -> getReturns) :<|>
     (coerce -> getStocks) :<|>
     (coerce -> getSuggestedOfferMappingEntries) :<|>
     (coerce -> getSuggestedOfferMappings) :<|>
     (coerce -> getSuggestedPrices) :<|>
     (coerce -> getWarehouses) :<|>
     (coerce -> provideOrderItemIdentifiers) :<|>
     (coerce -> putBidsForBusiness) :<|>
     (coerce -> putBidsForCampaign) :<|>
     (coerce -> refreshFeed) :<|>
     (coerce -> searchRegionChildren) :<|>
     (coerce -> searchRegionsById) :<|>
     (coerce -> searchRegionsByName) :<|>
     (coerce -> sendFileToChat) :<|>
     (coerce -> sendMessageToChat) :<|>
     (coerce -> setFeedParams) :<|>
     (coerce -> setOrderBoxLayout) :<|>
     (coerce -> setOrderShipmentBoxes) :<|>
     (coerce -> skipGoodsFeedbacksReaction) :<|>
     (coerce -> updateBusinessPrices) :<|>
     (coerce -> updateCampaignOffers) :<|>
     (coerce -> updateGoodsFeedbackComment) :<|>
     (coerce -> updateOfferContent) :<|>
     (coerce -> updateOfferMappingEntries) :<|>
     (coerce -> updateOfferMappings) :<|>
     (coerce -> updateOrderItems) :<|>
     (coerce -> updateOrderStatus) :<|>
     (coerce -> updateOrderStatuses) :<|>
     (coerce -> updatePrices) :<|>
     (coerce -> updatePromoOffers) :<|>
     (coerce -> updateStocks) :<|>
     (coerce -> verifyOrderEac) :<|>
     (coerce -> addHiddenOffers) :<|>
     (coerce -> addOffersToArchive) :<|>
     (coerce -> calculateTariffs) :<|>
     (coerce -> confirmBusinessPrices) :<|>
     (coerce -> confirmCampaignPrices) :<|>
     (coerce -> confirmShipment) :<|>
     (coerce -> createChat) :<|>
     (coerce -> deleteCampaignOffers) :<|>
     (coerce -> deleteGoodsFeedbackComment) :<|>
     (coerce -> deleteHiddenOffers) :<|>
     (coerce -> deleteOffers) :<|>
     (coerce -> deleteOffersFromArchive) :<|>
     (coerce -> deletePromoOffers) :<|>
     (coerce -> downloadShipmentAct) :<|>
     (coerce -> downloadShipmentDiscrepancyAct) :<|>
     (coerce -> downloadShipmentInboundAct) :<|>
     (coerce -> downloadShipmentPalletLabels) :<|>
     (coerce -> downloadShipmentReceptionTransferAct) :<|>
     (coerce -> downloadShipmentTransportationWaybill) :<|>
     (coerce -> generateBoostConsolidatedReport) :<|>
     (coerce -> generateCompetitorsPositionReport) :<|>
     (coerce -> generateGoodsFeedbackReport) :<|>
     (coerce -> generateGoodsRealizationReport) :<|>
     (coerce -> generateMassOrderLabelsReport) :<|>
     (coerce -> generateOrderLabel) :<|>
     (coerce -> generateOrderLabels) :<|>
     (coerce -> generatePricesReport) :<|>
     (coerce -> generateShelfsStatisticsReport) :<|>
     (coerce -> generateShipmentListDocumentReport) :<|>
     (coerce -> generateShowsSalesReport) :<|>
     (coerce -> generateStocksOnWarehousesReport) :<|>
     (coerce -> generateUnitedMarketplaceServicesReport) :<|>
     (coerce -> generateUnitedNettingReport) :<|>
     (coerce -> generateUnitedOrdersReport) :<|>
     (coerce -> getAllOffers) :<|>
     (coerce -> getBidsInfoForBusiness) :<|>
     (coerce -> getBidsRecommendations) :<|>
     (coerce -> getBusinessQuarantineOffers) :<|>
     (coerce -> getBusinessSettings) :<|>
     (coerce -> getCampaign) :<|>
     (coerce -> getCampaignLogins) :<|>
     (coerce -> getCampaignOffers) :<|>
     (coerce -> getCampaignQuarantineOffers) :<|>
     (coerce -> getCampaignRegion) :<|>
     (coerce -> getCampaignSettings) :<|>
     (coerce -> getCampaigns) :<|>
     (coerce -> getCampaignsByLogin) :<|>
     (coerce -> getCategoriesMaxSaleQuantum) :<|>
     (coerce -> getCategoriesTree) :<|>
     (coerce -> getCategoryContentParameters) :<|>
     (coerce -> getChatHistory) :<|>
     (coerce -> getChats) :<|>
     (coerce -> getDeliveryServices) :<|>
     (coerce -> getFeed) :<|>
     (coerce -> getFeedIndexLogs) :<|>
     (coerce -> getFeedbackAndCommentUpdates) :<|>
     (coerce -> getFeeds) :<|>
     (coerce -> getGoodsFeedbackComments) :<|>
     (coerce -> getGoodsFeedbacks) :<|>
     (coerce -> getGoodsStats) :<|>
     (coerce -> getHiddenOffers) :<|>
     (coerce -> getOfferCardsContentStatus) :<|>
     (coerce -> getOfferMappingEntries) :<|>
     (coerce -> getOfferMappings) :<|>
     (coerce -> getOfferRecommendations) :<|>
     (coerce -> getOffers) :<|>
     (coerce -> getOrder) :<|>
     (coerce -> getOrderBusinessBuyerInfo) :<|>
     (coerce -> getOrderBusinessDocumentsInfo) :<|>
     (coerce -> getOrderLabelsData) :<|>
     (coerce -> getOrders) :<|>
     (coerce -> getOrdersStats) :<|>
     (coerce -> getPrices) :<|>
     (coerce -> getPricesByOfferIds) :<|>
     (coerce -> getPromoOffers) :<|>
     (coerce -> getPromos) :<|>
     (coerce -> getQualityRatingDetails) :<|>
     (coerce -> getQualityRatings) :<|>
     (coerce -> getReportInfo) :<|>
     (coerce -> getReturn) :<|>
     (coerce -> getReturnApplication) :<|>
     (coerce -> getReturnPhoto) :<|>
     (coerce -> getReturns) :<|>
     (coerce -> getShipment) :<|>
     (coerce -> getShipmentOrdersInfo) :<|>
     (coerce -> getStocks) :<|>
     (coerce -> getSuggestedOfferMappingEntries) :<|>
     (coerce -> getSuggestedOfferMappings) :<|>
     (coerce -> getSuggestedPrices) :<|>
     (coerce -> getWarehouses) :<|>
     (coerce -> provideOrderItemIdentifiers) :<|>
     (coerce -> putBidsForBusiness) :<|>
     (coerce -> putBidsForCampaign) :<|>
     (coerce -> refreshFeed) :<|>
     (coerce -> searchRegionChildren) :<|>
     (coerce -> searchRegionsById) :<|>
     (coerce -> searchRegionsByName) :<|>
     (coerce -> searchShipments) :<|>
     (coerce -> sendFileToChat) :<|>
     (coerce -> sendMessageToChat) :<|>
     (coerce -> setFeedParams) :<|>
     (coerce -> setOrderBoxLayout) :<|>
     (coerce -> setOrderShipmentBoxes) :<|>
     (coerce -> setShipmentPalletsCount) :<|>
     (coerce -> skipGoodsFeedbacksReaction) :<|>
     (coerce -> transferOrdersFromShipment) :<|>
     (coerce -> updateBusinessPrices) :<|>
     (coerce -> updateCampaignOffers) :<|>
     (coerce -> updateGoodsFeedbackComment) :<|>
     (coerce -> updateOfferContent) :<|>
     (coerce -> updateOfferMappingEntries) :<|>
     (coerce -> updateOfferMappings) :<|>
     (coerce -> updateOrderItems) :<|>
     (coerce -> updateOrderStatus) :<|>
     (coerce -> updateOrderStatuses) :<|>
     (coerce -> updatePrices) :<|>
     (coerce -> updatePromoOffers) :<|>
     (coerce -> updateStocks) :<|>
     (coerce -> addHiddenOffers) :<|>
     (coerce -> addOffersToArchive) :<|>
     (coerce -> calculateTariffs) :<|>
     (coerce -> confirmBusinessPrices) :<|>
     (coerce -> confirmCampaignPrices) :<|>
     (coerce -> createChat) :<|>
     (coerce -> deleteCampaignOffers) :<|>
     (coerce -> deleteGoodsFeedbackComment) :<|>
     (coerce -> deleteHiddenOffers) :<|>
     (coerce -> deleteOffers) :<|>
     (coerce -> deleteOffersFromArchive) :<|>
     (coerce -> deletePromoOffers) :<|>
     (coerce -> generateBoostConsolidatedReport) :<|>
     (coerce -> generateCompetitorsPositionReport) :<|>
     (coerce -> generateGoodsFeedbackReport) :<|>
     (coerce -> generateGoodsMovementReport) :<|>
     (coerce -> generateGoodsRealizationReport) :<|>
     (coerce -> generateGoodsTurnoverReport) :<|>
     (coerce -> generatePricesReport) :<|>
     (coerce -> generateShelfsStatisticsReport) :<|>
     (coerce -> generateShowsSalesReport) :<|>
     (coerce -> generateStocksOnWarehousesReport) :<|>
     (coerce -> generateUnitedMarketplaceServicesReport) :<|>
     (coerce -> generateUnitedNettingReport) :<|>
     (coerce -> generateUnitedOrdersReport) :<|>
     (coerce -> getAllOffers) :<|>
     (coerce -> getBidsInfoForBusiness) :<|>
     (coerce -> getBidsRecommendations) :<|>
     (coerce -> getBusinessQuarantineOffers) :<|>
     (coerce -> getBusinessSettings) :<|>
     (coerce -> getCampaign) :<|>
     (coerce -> getCampaignLogins) :<|>
     (coerce -> getCampaignOffers) :<|>
     (coerce -> getCampaignQuarantineOffers) :<|>
     (coerce -> getCampaignRegion) :<|>
     (coerce -> getCampaignSettings) :<|>
     (coerce -> getCampaigns) :<|>
     (coerce -> getCampaignsByLogin) :<|>
     (coerce -> getCategoriesMaxSaleQuantum) :<|>
     (coerce -> getCategoriesTree) :<|>
     (coerce -> getCategoryContentParameters) :<|>
     (coerce -> getChatHistory) :<|>
     (coerce -> getChats) :<|>
     (coerce -> getFeed) :<|>
     (coerce -> getFeedIndexLogs) :<|>
     (coerce -> getFeedbackAndCommentUpdates) :<|>
     (coerce -> getFeeds) :<|>
     (coerce -> getFulfillmentWarehouses) :<|>
     (coerce -> getGoodsFeedbackComments) :<|>
     (coerce -> getGoodsFeedbacks) :<|>
     (coerce -> getGoodsStats) :<|>
     (coerce -> getHiddenOffers) :<|>
     (coerce -> getOfferCardsContentStatus) :<|>
     (coerce -> getOfferMappingEntries) :<|>
     (coerce -> getOfferMappings) :<|>
     (coerce -> getOfferRecommendations) :<|>
     (coerce -> getOffers) :<|>
     (coerce -> getOrder) :<|>
     (coerce -> getOrderBusinessBuyerInfo) :<|>
     (coerce -> getOrderBusinessDocumentsInfo) :<|>
     (coerce -> getOrders) :<|>
     (coerce -> getOrdersStats) :<|>
     (coerce -> getPrices) :<|>
     (coerce -> getPricesByOfferIds) :<|>
     (coerce -> getPromoOffers) :<|>
     (coerce -> getPromos) :<|>
     (coerce -> getQualityRatings) :<|>
     (coerce -> getReportInfo) :<|>
     (coerce -> getReturn) :<|>
     (coerce -> getReturnPhoto) :<|>
     (coerce -> getReturns) :<|>
     (coerce -> getStocks) :<|>
     (coerce -> getSuggestedOfferMappingEntries) :<|>
     (coerce -> getSuggestedOfferMappings) :<|>
     (coerce -> getSuggestedPrices) :<|>
     (coerce -> putBidsForBusiness) :<|>
     (coerce -> putBidsForCampaign) :<|>
     (coerce -> refreshFeed) :<|>
     (coerce -> searchRegionChildren) :<|>
     (coerce -> searchRegionsById) :<|>
     (coerce -> searchRegionsByName) :<|>
     (coerce -> sendFileToChat) :<|>
     (coerce -> sendMessageToChat) :<|>
     (coerce -> setFeedParams) :<|>
     (coerce -> skipGoodsFeedbacksReaction) :<|>
     (coerce -> updateBusinessPrices) :<|>
     (coerce -> updateCampaignOffers) :<|>
     (coerce -> updateGoodsFeedbackComment) :<|>
     (coerce -> updateOfferContent) :<|>
     (coerce -> updateOfferMappingEntries) :<|>
     (coerce -> updateOfferMappings) :<|>
     (coerce -> updatePrices) :<|>
     (coerce -> updatePromoOffers) :<|>
     (coerce -> getFeedbackAndCommentUpdates) :<|>
     (coerce -> getFeed) :<|>
     (coerce -> getFeedIndexLogs) :<|>
     (coerce -> getFeeds) :<|>
     (coerce -> refreshFeed) :<|>
     (coerce -> setFeedParams) :<|>
     (coerce -> deleteGoodsFeedbackComment) :<|>
     (coerce -> getGoodsFeedbackComments) :<|>
     (coerce -> getGoodsFeedbacks) :<|>
     (coerce -> skipGoodsFeedbacksReaction) :<|>
     (coerce -> updateGoodsFeedbackComment) :<|>
     (coerce -> getGoodsStats) :<|>
     (coerce -> addHiddenOffers) :<|>
     (coerce -> deleteHiddenOffers) :<|>
     (coerce -> getHiddenOffers) :<|>
     (coerce -> getModel) :<|>
     (coerce -> getModelOffers) :<|>
     (coerce -> getModels) :<|>
     (coerce -> getModelsOffers) :<|>
     (coerce -> searchModels) :<|>
     (coerce -> getOfferMappingEntries) :<|>
     (coerce -> getSuggestedOfferMappingEntries) :<|>
     (coerce -> updateOfferMappingEntries) :<|>
     (coerce -> deleteCampaignOffers) :<|>
     (coerce -> getAllOffers) :<|>
     (coerce -> getCampaignOffers) :<|>
     (coerce -> getOfferRecommendations) :<|>
     (coerce -> getOffers) :<|>
     (coerce -> updateCampaignOffers) :<|>
     (coerce -> getOrderBusinessBuyerInfo) :<|>
     (coerce -> getOrderBusinessDocumentsInfo) :<|>
     (coerce -> getOrderBuyerInfo) :<|>
     (coerce -> setOrderDeliveryDate) :<|>
     (coerce -> setOrderDeliveryTrackCode) :<|>
     (coerce -> updateOrderStorageLimit) :<|>
     (coerce -> verifyOrderEac) :<|>
     (coerce -> generateOrderLabel) :<|>
     (coerce -> generateOrderLabels) :<|>
     (coerce -> getOrderLabelsData) :<|>
     (coerce -> acceptOrderCancellation) :<|>
     (coerce -> getOrder) :<|>
     (coerce -> getOrders) :<|>
     (coerce -> provideOrderDigitalCodes) :<|>
     (coerce -> provideOrderItemIdentifiers) :<|>
     (coerce -> setOrderBoxLayout) :<|>
     (coerce -> setOrderShipmentBoxes) :<|>
     (coerce -> updateOrderItems) :<|>
     (coerce -> updateOrderStatus) :<|>
     (coerce -> updateOrderStatuses) :<|>
     (coerce -> getOrdersStats) :<|>
     (coerce -> deleteOutletLicenses) :<|>
     (coerce -> getOutletLicenses) :<|>
     (coerce -> updateOutletLicenses) :<|>
     (coerce -> createOutlet) :<|>
     (coerce -> deleteOutlet) :<|>
     (coerce -> getOutlet) :<|>
     (coerce -> getOutlets) :<|>
     (coerce -> updateOutlet) :<|>
     (coerce -> confirmBusinessPrices) :<|>
     (coerce -> confirmCampaignPrices) :<|>
     (coerce -> getBusinessQuarantineOffers) :<|>
     (coerce -> getCampaignQuarantineOffers) :<|>
     (coerce -> getPrices) :<|>
     (coerce -> getPricesByOfferIds) :<|>
     (coerce -> getSuggestedPrices) :<|>
     (coerce -> updateBusinessPrices) :<|>
     (coerce -> updatePrices) :<|>
     (coerce -> deletePromoOffers) :<|>
     (coerce -> getPromoOffers) :<|>
     (coerce -> getPromos) :<|>
     (coerce -> updatePromoOffers) :<|>
     (coerce -> getQualityRatingDetails) :<|>
     (coerce -> getQualityRatings) :<|>
     (coerce -> searchRegionChildren) :<|>
     (coerce -> searchRegionsById) :<|>
     (coerce -> searchRegionsByName) :<|>
     (coerce -> generateBoostConsolidatedReport) :<|>
     (coerce -> generateCompetitorsPositionReport) :<|>
     (coerce -> generateGoodsFeedbackReport) :<|>
     (coerce -> generateGoodsMovementReport) :<|>
     (coerce -> generateGoodsRealizationReport) :<|>
     (coerce -> generateGoodsTurnoverReport) :<|>
     (coerce -> generateMassOrderLabelsReport) :<|>
     (coerce -> generatePricesReport) :<|>
     (coerce -> generateShelfsStatisticsReport) :<|>
     (coerce -> generateShipmentListDocumentReport) :<|>
     (coerce -> generateShowsSalesReport) :<|>
     (coerce -> generateStocksOnWarehousesReport) :<|>
     (coerce -> generateUnitedMarketplaceServicesReport) :<|>
     (coerce -> generateUnitedNettingReport) :<|>
     (coerce -> generateUnitedOrdersReport) :<|>
     (coerce -> getReportInfo) :<|>
     (coerce -> getReturn) :<|>
     (coerce -> getReturnApplication) :<|>
     (coerce -> getReturnPhoto) :<|>
     (coerce -> getReturns) :<|>
     (coerce -> setReturnDecision) :<|>
     (coerce -> submitReturnDecision) :<|>
     (coerce -> confirmShipment) :<|>
     (coerce -> downloadShipmentAct) :<|>
     (coerce -> downloadShipmentDiscrepancyAct) :<|>
     (coerce -> downloadShipmentInboundAct) :<|>
     (coerce -> downloadShipmentPalletLabels) :<|>
     (coerce -> downloadShipmentReceptionTransferAct) :<|>
     (coerce -> downloadShipmentTransportationWaybill) :<|>
     (coerce -> getShipment) :<|>
     (coerce -> getShipmentOrdersInfo) :<|>
     (coerce -> searchShipments) :<|>
     (coerce -> setShipmentPalletsCount) :<|>
     (coerce -> transferOrdersFromShipment) :<|>
     (coerce -> getStocks) :<|>
     (coerce -> updateStocks) :<|>
     (coerce -> calculateTariffs) :<|>
     (coerce -> getFulfillmentWarehouses) :<|>
     (coerce -> getWarehouses) :<|>
     _) = client (Proxy :: Proxy ПартнерскийAPIМаркетаAPI)

-- | Run requests in the ПартнерскийAPIМаркетаClient monad.
runПартнерскийAPIМаркетаClient :: Config -> ПартнерскийAPIМаркетаClient a -> ExceptT ClientError IO a
runПартнерскийAPIМаркетаClient clientConfig cl = do
  manager <- liftIO $ newManager tlsManagerSettings
  runПартнерскийAPIМаркетаClientWithManager manager clientConfig cl

-- | Run requests in the ПартнерскийAPIМаркетаClient monad using a custom manager.
runПартнерскийAPIМаркетаClientWithManager :: Manager -> Config -> ПартнерскийAPIМаркетаClient a -> ExceptT ClientError IO a
runПартнерскийAPIМаркетаClientWithManager manager Config{..} cl = do
  url <- parseBaseUrl configUrl
  runClient cl $ mkClientEnv manager url

-- | Like @runClient@, but returns the response or throws
--   a ПартнерскийAPIМаркетаClientError
callПартнерскийAPIМаркета
  :: (MonadIO m, MonadThrow m)
  => ClientEnv -> ПартнерскийAPIМаркетаClient a -> m a
callПартнерскийAPIМаркета env f = do
  res <- liftIO $ runExceptT $ runClient f env
  case res of
    Left err       -> throwM (ПартнерскийAPIМаркетаClientError err)
    Right response -> pure response


requestMiddlewareId :: Application -> Application
requestMiddlewareId a = a

-- | Run the ПартнерскийAPIМаркета server at the provided host and port.
runПартнерскийAPIМаркетаServer
  :: (MonadIO m, MonadThrow m)
  => Config -> ПартнерскийAPIМаркетаAuth -> ПартнерскийAPIМаркетаBackend AuthServer (ExceptT ServerError IO) -> m ()
runПартнерскийAPIМаркетаServer config auth backend = runПартнерскийAPIМаркетаMiddlewareServer config requestMiddlewareId auth backend

-- | Run the ПартнерскийAPIМаркета server at the provided host and port.
runПартнерскийAPIМаркетаMiddlewareServer
  :: (MonadIO m, MonadThrow m)
  => Config -> Middleware -> ПартнерскийAPIМаркетаAuth -> ПартнерскийAPIМаркетаBackend AuthServer (ExceptT ServerError IO) -> m ()
runПартнерскийAPIМаркетаMiddlewareServer Config{..} middleware auth backend = do
  url <- parseBaseUrl configUrl
  let warpSettings = Warp.defaultSettings
        & Warp.setPort (baseUrlPort url)
        & Warp.setHost (fromString $ baseUrlHost url)
  liftIO $ Warp.runSettings warpSettings $ middleware $ serverWaiApplicationПартнерскийAPIМаркета auth backend

-- | Plain "Network.Wai" Application for the ПартнерскийAPIМаркета server.
--
-- Can be used to implement e.g. tests that call the API without a full webserver.
serverWaiApplicationПартнерскийAPIМаркета :: ПартнерскийAPIМаркетаAuth -> ПартнерскийAPIМаркетаBackend AuthServer (ExceptT ServerError IO) -> Application
serverWaiApplicationПартнерскийAPIМаркета auth backend = serveWithContextT (Proxy :: Proxy ПартнерскийAPIМаркетаAPI) context id (serverFromBackend backend)
  where
    context = serverContext auth
    serverFromBackend ПартнерскийAPIМаркетаBackend{..} =
      (coerce getBidsInfoForBusiness :<|>
       coerce getBidsRecommendations :<|>
       coerce putBidsForBusiness :<|>
       coerce putBidsForCampaign :<|>
       coerce addOffersToArchive :<|>
       coerce deleteOffers :<|>
       coerce deleteOffersFromArchive :<|>
       coerce getOfferMappings :<|>
       coerce getSuggestedOfferMappings :<|>
       coerce updateOfferMappings :<|>
       coerce getBusinessSettings :<|>
       coerce getCampaign :<|>
       coerce getCampaignLogins :<|>
       coerce getCampaignRegion :<|>
       coerce getCampaignSettings :<|>
       coerce getCampaigns :<|>
       coerce getCampaignsByLogin :<|>
       coerce getCategoriesMaxSaleQuantum :<|>
       coerce getCategoriesTree :<|>
       coerce createChat :<|>
       coerce getChatHistory :<|>
       coerce getChats :<|>
       coerce sendFileToChat :<|>
       coerce sendMessageToChat :<|>
       coerce getCategoryContentParameters :<|>
       coerce getOfferCardsContentStatus :<|>
       coerce updateOfferContent :<|>
       coerce acceptOrderCancellation :<|>
       coerce addHiddenOffers :<|>
       coerce addOffersToArchive :<|>
       coerce calculateTariffs :<|>
       coerce confirmBusinessPrices :<|>
       coerce confirmCampaignPrices :<|>
       coerce createChat :<|>
       coerce createOutlet :<|>
       coerce deleteCampaignOffers :<|>
       coerce deleteGoodsFeedbackComment :<|>
       coerce deleteHiddenOffers :<|>
       coerce deleteOffers :<|>
       coerce deleteOffersFromArchive :<|>
       coerce deleteOutlet :<|>
       coerce deleteOutletLicenses :<|>
       coerce deletePromoOffers :<|>
       coerce generateBoostConsolidatedReport :<|>
       coerce generateCompetitorsPositionReport :<|>
       coerce generateGoodsFeedbackReport :<|>
       coerce generateMassOrderLabelsReport :<|>
       coerce generateOrderLabel :<|>
       coerce generateOrderLabels :<|>
       coerce generatePricesReport :<|>
       coerce generateShelfsStatisticsReport :<|>
       coerce generateShowsSalesReport :<|>
       coerce generateStocksOnWarehousesReport :<|>
       coerce generateUnitedMarketplaceServicesReport :<|>
       coerce generateUnitedNettingReport :<|>
       coerce generateUnitedOrdersReport :<|>
       coerce getAllOffers :<|>
       coerce getBidsInfoForBusiness :<|>
       coerce getBidsRecommendations :<|>
       coerce getBusinessQuarantineOffers :<|>
       coerce getBusinessSettings :<|>
       coerce getCampaign :<|>
       coerce getCampaignLogins :<|>
       coerce getCampaignOffers :<|>
       coerce getCampaignQuarantineOffers :<|>
       coerce getCampaignRegion :<|>
       coerce getCampaignSettings :<|>
       coerce getCampaigns :<|>
       coerce getCampaignsByLogin :<|>
       coerce getCategoriesMaxSaleQuantum :<|>
       coerce getCategoriesTree :<|>
       coerce getCategoryContentParameters :<|>
       coerce getChatHistory :<|>
       coerce getChats :<|>
       coerce getDeliveryServices :<|>
       coerce getFeed :<|>
       coerce getFeedIndexLogs :<|>
       coerce getFeedbackAndCommentUpdates :<|>
       coerce getFeeds :<|>
       coerce getGoodsFeedbackComments :<|>
       coerce getGoodsFeedbacks :<|>
       coerce getGoodsStats :<|>
       coerce getHiddenOffers :<|>
       coerce getModel :<|>
       coerce getModelOffers :<|>
       coerce getModels :<|>
       coerce getModelsOffers :<|>
       coerce getOfferCardsContentStatus :<|>
       coerce getOfferMappingEntries :<|>
       coerce getOfferMappings :<|>
       coerce getOfferRecommendations :<|>
       coerce getOffers :<|>
       coerce getOrder :<|>
       coerce getOrderBusinessBuyerInfo :<|>
       coerce getOrderBusinessDocumentsInfo :<|>
       coerce getOrderBuyerInfo :<|>
       coerce getOrderLabelsData :<|>
       coerce getOrders :<|>
       coerce getOrdersStats :<|>
       coerce getOutlet :<|>
       coerce getOutletLicenses :<|>
       coerce getOutlets :<|>
       coerce getPrices :<|>
       coerce getPricesByOfferIds :<|>
       coerce getPromoOffers :<|>
       coerce getPromos :<|>
       coerce getQualityRatingDetails :<|>
       coerce getQualityRatings :<|>
       coerce getReportInfo :<|>
       coerce getReturn :<|>
       coerce getReturnApplication :<|>
       coerce getReturnPhoto :<|>
       coerce getReturns :<|>
       coerce getStocks :<|>
       coerce getSuggestedOfferMappingEntries :<|>
       coerce getSuggestedOfferMappings :<|>
       coerce getSuggestedPrices :<|>
       coerce getWarehouses :<|>
       coerce provideOrderDigitalCodes :<|>
       coerce provideOrderItemIdentifiers :<|>
       coerce putBidsForBusiness :<|>
       coerce putBidsForCampaign :<|>
       coerce refreshFeed :<|>
       coerce searchModels :<|>
       coerce searchRegionChildren :<|>
       coerce searchRegionsById :<|>
       coerce searchRegionsByName :<|>
       coerce sendFileToChat :<|>
       coerce sendMessageToChat :<|>
       coerce setFeedParams :<|>
       coerce setOrderBoxLayout :<|>
       coerce setOrderDeliveryDate :<|>
       coerce setOrderDeliveryTrackCode :<|>
       coerce setOrderShipmentBoxes :<|>
       coerce setReturnDecision :<|>
       coerce skipGoodsFeedbacksReaction :<|>
       coerce submitReturnDecision :<|>
       coerce updateBusinessPrices :<|>
       coerce updateCampaignOffers :<|>
       coerce updateGoodsFeedbackComment :<|>
       coerce updateOfferContent :<|>
       coerce updateOfferMappingEntries :<|>
       coerce updateOfferMappings :<|>
       coerce updateOrderItems :<|>
       coerce updateOrderStatus :<|>
       coerce updateOrderStatuses :<|>
       coerce updateOrderStorageLimit :<|>
       coerce updateOutlet :<|>
       coerce updateOutletLicenses :<|>
       coerce updatePrices :<|>
       coerce updatePromoOffers :<|>
       coerce updateStocks :<|>
       coerce getDeliveryServices :<|>
       coerce addHiddenOffers :<|>
       coerce addOffersToArchive :<|>
       coerce calculateTariffs :<|>
       coerce confirmBusinessPrices :<|>
       coerce confirmCampaignPrices :<|>
       coerce createChat :<|>
       coerce deleteCampaignOffers :<|>
       coerce deleteGoodsFeedbackComment :<|>
       coerce deleteHiddenOffers :<|>
       coerce deleteOffers :<|>
       coerce deleteOffersFromArchive :<|>
       coerce deletePromoOffers :<|>
       coerce generateBoostConsolidatedReport :<|>
       coerce generateCompetitorsPositionReport :<|>
       coerce generateGoodsFeedbackReport :<|>
       coerce generateGoodsRealizationReport :<|>
       coerce generateMassOrderLabelsReport :<|>
       coerce generateOrderLabel :<|>
       coerce generateOrderLabels :<|>
       coerce generatePricesReport :<|>
       coerce generateShelfsStatisticsReport :<|>
       coerce generateShowsSalesReport :<|>
       coerce generateStocksOnWarehousesReport :<|>
       coerce generateUnitedMarketplaceServicesReport :<|>
       coerce generateUnitedNettingReport :<|>
       coerce generateUnitedOrdersReport :<|>
       coerce getAllOffers :<|>
       coerce getBidsInfoForBusiness :<|>
       coerce getBidsRecommendations :<|>
       coerce getBusinessQuarantineOffers :<|>
       coerce getBusinessSettings :<|>
       coerce getCampaign :<|>
       coerce getCampaignLogins :<|>
       coerce getCampaignOffers :<|>
       coerce getCampaignQuarantineOffers :<|>
       coerce getCampaignRegion :<|>
       coerce getCampaignSettings :<|>
       coerce getCampaigns :<|>
       coerce getCampaignsByLogin :<|>
       coerce getCategoriesMaxSaleQuantum :<|>
       coerce getCategoriesTree :<|>
       coerce getCategoryContentParameters :<|>
       coerce getChatHistory :<|>
       coerce getChats :<|>
       coerce getDeliveryServices :<|>
       coerce getFeed :<|>
       coerce getFeedIndexLogs :<|>
       coerce getFeedbackAndCommentUpdates :<|>
       coerce getFeeds :<|>
       coerce getGoodsFeedbackComments :<|>
       coerce getGoodsFeedbacks :<|>
       coerce getGoodsStats :<|>
       coerce getHiddenOffers :<|>
       coerce getOfferCardsContentStatus :<|>
       coerce getOfferMappingEntries :<|>
       coerce getOfferMappings :<|>
       coerce getOfferRecommendations :<|>
       coerce getOffers :<|>
       coerce getOrder :<|>
       coerce getOrderBusinessBuyerInfo :<|>
       coerce getOrderBusinessDocumentsInfo :<|>
       coerce getOrderLabelsData :<|>
       coerce getOrders :<|>
       coerce getOrdersStats :<|>
       coerce getPrices :<|>
       coerce getPricesByOfferIds :<|>
       coerce getPromoOffers :<|>
       coerce getPromos :<|>
       coerce getQualityRatingDetails :<|>
       coerce getQualityRatings :<|>
       coerce getReportInfo :<|>
       coerce getReturn :<|>
       coerce getReturnApplication :<|>
       coerce getReturnPhoto :<|>
       coerce getReturns :<|>
       coerce getStocks :<|>
       coerce getSuggestedOfferMappingEntries :<|>
       coerce getSuggestedOfferMappings :<|>
       coerce getSuggestedPrices :<|>
       coerce getWarehouses :<|>
       coerce provideOrderItemIdentifiers :<|>
       coerce putBidsForBusiness :<|>
       coerce putBidsForCampaign :<|>
       coerce refreshFeed :<|>
       coerce searchRegionChildren :<|>
       coerce searchRegionsById :<|>
       coerce searchRegionsByName :<|>
       coerce sendFileToChat :<|>
       coerce sendMessageToChat :<|>
       coerce setFeedParams :<|>
       coerce setOrderBoxLayout :<|>
       coerce setOrderShipmentBoxes :<|>
       coerce skipGoodsFeedbacksReaction :<|>
       coerce updateBusinessPrices :<|>
       coerce updateCampaignOffers :<|>
       coerce updateGoodsFeedbackComment :<|>
       coerce updateOfferContent :<|>
       coerce updateOfferMappingEntries :<|>
       coerce updateOfferMappings :<|>
       coerce updateOrderItems :<|>
       coerce updateOrderStatus :<|>
       coerce updateOrderStatuses :<|>
       coerce updatePrices :<|>
       coerce updatePromoOffers :<|>
       coerce updateStocks :<|>
       coerce verifyOrderEac :<|>
       coerce addHiddenOffers :<|>
       coerce addOffersToArchive :<|>
       coerce calculateTariffs :<|>
       coerce confirmBusinessPrices :<|>
       coerce confirmCampaignPrices :<|>
       coerce confirmShipment :<|>
       coerce createChat :<|>
       coerce deleteCampaignOffers :<|>
       coerce deleteGoodsFeedbackComment :<|>
       coerce deleteHiddenOffers :<|>
       coerce deleteOffers :<|>
       coerce deleteOffersFromArchive :<|>
       coerce deletePromoOffers :<|>
       coerce downloadShipmentAct :<|>
       coerce downloadShipmentDiscrepancyAct :<|>
       coerce downloadShipmentInboundAct :<|>
       coerce downloadShipmentPalletLabels :<|>
       coerce downloadShipmentReceptionTransferAct :<|>
       coerce downloadShipmentTransportationWaybill :<|>
       coerce generateBoostConsolidatedReport :<|>
       coerce generateCompetitorsPositionReport :<|>
       coerce generateGoodsFeedbackReport :<|>
       coerce generateGoodsRealizationReport :<|>
       coerce generateMassOrderLabelsReport :<|>
       coerce generateOrderLabel :<|>
       coerce generateOrderLabels :<|>
       coerce generatePricesReport :<|>
       coerce generateShelfsStatisticsReport :<|>
       coerce generateShipmentListDocumentReport :<|>
       coerce generateShowsSalesReport :<|>
       coerce generateStocksOnWarehousesReport :<|>
       coerce generateUnitedMarketplaceServicesReport :<|>
       coerce generateUnitedNettingReport :<|>
       coerce generateUnitedOrdersReport :<|>
       coerce getAllOffers :<|>
       coerce getBidsInfoForBusiness :<|>
       coerce getBidsRecommendations :<|>
       coerce getBusinessQuarantineOffers :<|>
       coerce getBusinessSettings :<|>
       coerce getCampaign :<|>
       coerce getCampaignLogins :<|>
       coerce getCampaignOffers :<|>
       coerce getCampaignQuarantineOffers :<|>
       coerce getCampaignRegion :<|>
       coerce getCampaignSettings :<|>
       coerce getCampaigns :<|>
       coerce getCampaignsByLogin :<|>
       coerce getCategoriesMaxSaleQuantum :<|>
       coerce getCategoriesTree :<|>
       coerce getCategoryContentParameters :<|>
       coerce getChatHistory :<|>
       coerce getChats :<|>
       coerce getDeliveryServices :<|>
       coerce getFeed :<|>
       coerce getFeedIndexLogs :<|>
       coerce getFeedbackAndCommentUpdates :<|>
       coerce getFeeds :<|>
       coerce getGoodsFeedbackComments :<|>
       coerce getGoodsFeedbacks :<|>
       coerce getGoodsStats :<|>
       coerce getHiddenOffers :<|>
       coerce getOfferCardsContentStatus :<|>
       coerce getOfferMappingEntries :<|>
       coerce getOfferMappings :<|>
       coerce getOfferRecommendations :<|>
       coerce getOffers :<|>
       coerce getOrder :<|>
       coerce getOrderBusinessBuyerInfo :<|>
       coerce getOrderBusinessDocumentsInfo :<|>
       coerce getOrderLabelsData :<|>
       coerce getOrders :<|>
       coerce getOrdersStats :<|>
       coerce getPrices :<|>
       coerce getPricesByOfferIds :<|>
       coerce getPromoOffers :<|>
       coerce getPromos :<|>
       coerce getQualityRatingDetails :<|>
       coerce getQualityRatings :<|>
       coerce getReportInfo :<|>
       coerce getReturn :<|>
       coerce getReturnApplication :<|>
       coerce getReturnPhoto :<|>
       coerce getReturns :<|>
       coerce getShipment :<|>
       coerce getShipmentOrdersInfo :<|>
       coerce getStocks :<|>
       coerce getSuggestedOfferMappingEntries :<|>
       coerce getSuggestedOfferMappings :<|>
       coerce getSuggestedPrices :<|>
       coerce getWarehouses :<|>
       coerce provideOrderItemIdentifiers :<|>
       coerce putBidsForBusiness :<|>
       coerce putBidsForCampaign :<|>
       coerce refreshFeed :<|>
       coerce searchRegionChildren :<|>
       coerce searchRegionsById :<|>
       coerce searchRegionsByName :<|>
       coerce searchShipments :<|>
       coerce sendFileToChat :<|>
       coerce sendMessageToChat :<|>
       coerce setFeedParams :<|>
       coerce setOrderBoxLayout :<|>
       coerce setOrderShipmentBoxes :<|>
       coerce setShipmentPalletsCount :<|>
       coerce skipGoodsFeedbacksReaction :<|>
       coerce transferOrdersFromShipment :<|>
       coerce updateBusinessPrices :<|>
       coerce updateCampaignOffers :<|>
       coerce updateGoodsFeedbackComment :<|>
       coerce updateOfferContent :<|>
       coerce updateOfferMappingEntries :<|>
       coerce updateOfferMappings :<|>
       coerce updateOrderItems :<|>
       coerce updateOrderStatus :<|>
       coerce updateOrderStatuses :<|>
       coerce updatePrices :<|>
       coerce updatePromoOffers :<|>
       coerce updateStocks :<|>
       coerce addHiddenOffers :<|>
       coerce addOffersToArchive :<|>
       coerce calculateTariffs :<|>
       coerce confirmBusinessPrices :<|>
       coerce confirmCampaignPrices :<|>
       coerce createChat :<|>
       coerce deleteCampaignOffers :<|>
       coerce deleteGoodsFeedbackComment :<|>
       coerce deleteHiddenOffers :<|>
       coerce deleteOffers :<|>
       coerce deleteOffersFromArchive :<|>
       coerce deletePromoOffers :<|>
       coerce generateBoostConsolidatedReport :<|>
       coerce generateCompetitorsPositionReport :<|>
       coerce generateGoodsFeedbackReport :<|>
       coerce generateGoodsMovementReport :<|>
       coerce generateGoodsRealizationReport :<|>
       coerce generateGoodsTurnoverReport :<|>
       coerce generatePricesReport :<|>
       coerce generateShelfsStatisticsReport :<|>
       coerce generateShowsSalesReport :<|>
       coerce generateStocksOnWarehousesReport :<|>
       coerce generateUnitedMarketplaceServicesReport :<|>
       coerce generateUnitedNettingReport :<|>
       coerce generateUnitedOrdersReport :<|>
       coerce getAllOffers :<|>
       coerce getBidsInfoForBusiness :<|>
       coerce getBidsRecommendations :<|>
       coerce getBusinessQuarantineOffers :<|>
       coerce getBusinessSettings :<|>
       coerce getCampaign :<|>
       coerce getCampaignLogins :<|>
       coerce getCampaignOffers :<|>
       coerce getCampaignQuarantineOffers :<|>
       coerce getCampaignRegion :<|>
       coerce getCampaignSettings :<|>
       coerce getCampaigns :<|>
       coerce getCampaignsByLogin :<|>
       coerce getCategoriesMaxSaleQuantum :<|>
       coerce getCategoriesTree :<|>
       coerce getCategoryContentParameters :<|>
       coerce getChatHistory :<|>
       coerce getChats :<|>
       coerce getFeed :<|>
       coerce getFeedIndexLogs :<|>
       coerce getFeedbackAndCommentUpdates :<|>
       coerce getFeeds :<|>
       coerce getFulfillmentWarehouses :<|>
       coerce getGoodsFeedbackComments :<|>
       coerce getGoodsFeedbacks :<|>
       coerce getGoodsStats :<|>
       coerce getHiddenOffers :<|>
       coerce getOfferCardsContentStatus :<|>
       coerce getOfferMappingEntries :<|>
       coerce getOfferMappings :<|>
       coerce getOfferRecommendations :<|>
       coerce getOffers :<|>
       coerce getOrder :<|>
       coerce getOrderBusinessBuyerInfo :<|>
       coerce getOrderBusinessDocumentsInfo :<|>
       coerce getOrders :<|>
       coerce getOrdersStats :<|>
       coerce getPrices :<|>
       coerce getPricesByOfferIds :<|>
       coerce getPromoOffers :<|>
       coerce getPromos :<|>
       coerce getQualityRatings :<|>
       coerce getReportInfo :<|>
       coerce getReturn :<|>
       coerce getReturnPhoto :<|>
       coerce getReturns :<|>
       coerce getStocks :<|>
       coerce getSuggestedOfferMappingEntries :<|>
       coerce getSuggestedOfferMappings :<|>
       coerce getSuggestedPrices :<|>
       coerce putBidsForBusiness :<|>
       coerce putBidsForCampaign :<|>
       coerce refreshFeed :<|>
       coerce searchRegionChildren :<|>
       coerce searchRegionsById :<|>
       coerce searchRegionsByName :<|>
       coerce sendFileToChat :<|>
       coerce sendMessageToChat :<|>
       coerce setFeedParams :<|>
       coerce skipGoodsFeedbacksReaction :<|>
       coerce updateBusinessPrices :<|>
       coerce updateCampaignOffers :<|>
       coerce updateGoodsFeedbackComment :<|>
       coerce updateOfferContent :<|>
       coerce updateOfferMappingEntries :<|>
       coerce updateOfferMappings :<|>
       coerce updatePrices :<|>
       coerce updatePromoOffers :<|>
       coerce getFeedbackAndCommentUpdates :<|>
       coerce getFeed :<|>
       coerce getFeedIndexLogs :<|>
       coerce getFeeds :<|>
       coerce refreshFeed :<|>
       coerce setFeedParams :<|>
       coerce deleteGoodsFeedbackComment :<|>
       coerce getGoodsFeedbackComments :<|>
       coerce getGoodsFeedbacks :<|>
       coerce skipGoodsFeedbacksReaction :<|>
       coerce updateGoodsFeedbackComment :<|>
       coerce getGoodsStats :<|>
       coerce addHiddenOffers :<|>
       coerce deleteHiddenOffers :<|>
       coerce getHiddenOffers :<|>
       coerce getModel :<|>
       coerce getModelOffers :<|>
       coerce getModels :<|>
       coerce getModelsOffers :<|>
       coerce searchModels :<|>
       coerce getOfferMappingEntries :<|>
       coerce getSuggestedOfferMappingEntries :<|>
       coerce updateOfferMappingEntries :<|>
       coerce deleteCampaignOffers :<|>
       coerce getAllOffers :<|>
       coerce getCampaignOffers :<|>
       coerce getOfferRecommendations :<|>
       coerce getOffers :<|>
       coerce updateCampaignOffers :<|>
       coerce getOrderBusinessBuyerInfo :<|>
       coerce getOrderBusinessDocumentsInfo :<|>
       coerce getOrderBuyerInfo :<|>
       coerce setOrderDeliveryDate :<|>
       coerce setOrderDeliveryTrackCode :<|>
       coerce updateOrderStorageLimit :<|>
       coerce verifyOrderEac :<|>
       coerce generateOrderLabel :<|>
       coerce generateOrderLabels :<|>
       coerce getOrderLabelsData :<|>
       coerce acceptOrderCancellation :<|>
       coerce getOrder :<|>
       coerce getOrders :<|>
       coerce provideOrderDigitalCodes :<|>
       coerce provideOrderItemIdentifiers :<|>
       coerce setOrderBoxLayout :<|>
       coerce setOrderShipmentBoxes :<|>
       coerce updateOrderItems :<|>
       coerce updateOrderStatus :<|>
       coerce updateOrderStatuses :<|>
       coerce getOrdersStats :<|>
       coerce deleteOutletLicenses :<|>
       coerce getOutletLicenses :<|>
       coerce updateOutletLicenses :<|>
       coerce createOutlet :<|>
       coerce deleteOutlet :<|>
       coerce getOutlet :<|>
       coerce getOutlets :<|>
       coerce updateOutlet :<|>
       coerce confirmBusinessPrices :<|>
       coerce confirmCampaignPrices :<|>
       coerce getBusinessQuarantineOffers :<|>
       coerce getCampaignQuarantineOffers :<|>
       coerce getPrices :<|>
       coerce getPricesByOfferIds :<|>
       coerce getSuggestedPrices :<|>
       coerce updateBusinessPrices :<|>
       coerce updatePrices :<|>
       coerce deletePromoOffers :<|>
       coerce getPromoOffers :<|>
       coerce getPromos :<|>
       coerce updatePromoOffers :<|>
       coerce getQualityRatingDetails :<|>
       coerce getQualityRatings :<|>
       coerce searchRegionChildren :<|>
       coerce searchRegionsById :<|>
       coerce searchRegionsByName :<|>
       coerce generateBoostConsolidatedReport :<|>
       coerce generateCompetitorsPositionReport :<|>
       coerce generateGoodsFeedbackReport :<|>
       coerce generateGoodsMovementReport :<|>
       coerce generateGoodsRealizationReport :<|>
       coerce generateGoodsTurnoverReport :<|>
       coerce generateMassOrderLabelsReport :<|>
       coerce generatePricesReport :<|>
       coerce generateShelfsStatisticsReport :<|>
       coerce generateShipmentListDocumentReport :<|>
       coerce generateShowsSalesReport :<|>
       coerce generateStocksOnWarehousesReport :<|>
       coerce generateUnitedMarketplaceServicesReport :<|>
       coerce generateUnitedNettingReport :<|>
       coerce generateUnitedOrdersReport :<|>
       coerce getReportInfo :<|>
       coerce getReturn :<|>
       coerce getReturnApplication :<|>
       coerce getReturnPhoto :<|>
       coerce getReturns :<|>
       coerce setReturnDecision :<|>
       coerce submitReturnDecision :<|>
       coerce confirmShipment :<|>
       coerce downloadShipmentAct :<|>
       coerce downloadShipmentDiscrepancyAct :<|>
       coerce downloadShipmentInboundAct :<|>
       coerce downloadShipmentPalletLabels :<|>
       coerce downloadShipmentReceptionTransferAct :<|>
       coerce downloadShipmentTransportationWaybill :<|>
       coerce getShipment :<|>
       coerce getShipmentOrdersInfo :<|>
       coerce searchShipments :<|>
       coerce setShipmentPalletsCount :<|>
       coerce transferOrdersFromShipment :<|>
       coerce getStocks :<|>
       coerce updateStocks :<|>
       coerce calculateTariffs :<|>
       coerce getFulfillmentWarehouses :<|>
       coerce getWarehouses :<|>
       serveDirectoryFileServer "static")


serverContext :: ПартнерскийAPIМаркетаAuth -> Context (AuthHandler Request AuthServer ': '[])
serverContext auth = authHandler auth :. EmptyContext
