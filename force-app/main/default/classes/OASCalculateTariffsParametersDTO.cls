/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Параметры для расчета стоимости услуг.
 */
public class OASCalculateTariffsParametersDTO {
    /**
     * Идентификатор кампании. У пользователя, который выполняет запрос, должен быть доступ к этой кампании.\n\nИспользуйте параметр `campaignId`, если уже завершили подключение магазина на Маркете. Иначе вернется пустой список.\n\nОбязательный параметр, если не указан параметр `sellingProgram`. Совместное использование параметров приведет к ошибке.\n
     * @return campaignId
     */
    public Long campaignId { get; set; }

    /**
     * Get sellingProgram
     * @return sellingProgram
     */
    public OASSellingProgramType sellingProgram { get; set; }

    /**
     * Get frequency
     * @return frequency
     */
    public OASPaymentFrequencyType frequency { get; set; }

    public static OASCalculateTariffsParametersDTO getExample() {
        OASCalculateTariffsParametersDTO calculateTariffsParametersDTO = new OASCalculateTariffsParametersDTO();
          calculateTariffsParametersDTO.campaignId = 123456789L;
          calculateTariffsParametersDTO.sellingProgram = OASSellingProgramType.getExample();
          calculateTariffsParametersDTO.frequency = OASPaymentFrequencyType.getExample();
        return calculateTariffsParametersDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCalculateTariffsParametersDTO) {           
            OASCalculateTariffsParametersDTO calculateTariffsParametersDTO = (OASCalculateTariffsParametersDTO) obj;
            return this.campaignId == calculateTariffsParametersDTO.campaignId
                && this.sellingProgram == calculateTariffsParametersDTO.sellingProgram
                && this.frequency == calculateTariffsParametersDTO.frequency;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (campaignId == null ? 0 : System.hashCode(campaignId));
        hashCode = (17 * hashCode) + (sellingProgram == null ? 0 : System.hashCode(sellingProgram));
        hashCode = (17 * hashCode) + (frequency == null ? 0 : System.hashCode(frequency));
        return hashCode;
    }
}

