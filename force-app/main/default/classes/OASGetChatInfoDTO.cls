/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация о чатах.
 */
public class OASGetChatInfoDTO {
    /**
     * Идентификатор чата.
     * @return chatId
     */
    public Long chatId { get; set; }

    /**
     * Идентификатор заказа.
     * @return orderId
     */
    public Long orderId { get; set; }

    /**
     * Get type
     * @return type
     */
    public OASChatType type { get; set; }

    /**
     * Get status
     * @return status
     */
    public OASChatStatusType status { get; set; }

    /**
     * Дата и время создания чата.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`.\n
     * @return createdAt
     */
    public Datetime createdAt { get; set; }

    /**
     * Дата и время последнего сообщения в чате.
     * @return updatedAt
     */
    public Datetime updatedAt { get; set; }

    public static OASGetChatInfoDTO getExample() {
        OASGetChatInfoDTO getChatInfoDTO = new OASGetChatInfoDTO();
          getChatInfoDTO.chatId = 123456789L;
          getChatInfoDTO.orderId = 123456789L;
          getChatInfoDTO.type = OASChatType.getExample();
          getChatInfoDTO.status = OASChatStatusType.getExample();
          getChatInfoDTO.createdAt = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          getChatInfoDTO.updatedAt = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
        return getChatInfoDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASGetChatInfoDTO) {           
            OASGetChatInfoDTO getChatInfoDTO = (OASGetChatInfoDTO) obj;
            return this.chatId == getChatInfoDTO.chatId
                && this.orderId == getChatInfoDTO.orderId
                && this.type == getChatInfoDTO.type
                && this.status == getChatInfoDTO.status
                && this.createdAt == getChatInfoDTO.createdAt
                && this.updatedAt == getChatInfoDTO.updatedAt;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (chatId == null ? 0 : System.hashCode(chatId));
        hashCode = (17 * hashCode) + (orderId == null ? 0 : System.hashCode(orderId));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (status == null ? 0 : System.hashCode(status));
        hashCode = (17 * hashCode) + (createdAt == null ? 0 : System.hashCode(createdAt));
        hashCode = (17 * hashCode) + (updatedAt == null ? 0 : System.hashCode(updatedAt));
        return hashCode;
    }
}

