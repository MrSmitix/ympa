/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Регион доставки.
 */
public class OASRegionDTO {
    /**
     * Идентификатор региона.
     * @return id
     */
    public Long id { get; set; }

    /**
     * Название региона.
     * @return name
     */
    public String name { get; set; }

    /**
     * Get type
     * @return type
     */
    public OASRegionType type { get; set; }

    /**
     * Get parent
     * @return parent
     */
    public OASRegionDTO parent { get; set; }

    /**
     * Дочерние регионы.
     * @return children
     */
    public List<OASRegionDTO> children { get; set; }

    public OASRegionDTO() {
        children = new List<OASRegionDTO>();
    }

    public static OASRegionDTO getExample() {
        OASRegionDTO regionDTO = new OASRegionDTO();
          regionDTO.id = 123456789L;
          regionDTO.name = '';
          regionDTO.type = OASRegionType.getExample();
          regionDTO.parent = OASRegionDTO.getExample();
          regionDTO.children = new List<OASRegionDTO>{OASRegionDTO.getExample()};
        return regionDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASRegionDTO) {           
            OASRegionDTO regionDTO = (OASRegionDTO) obj;
            return this.id == regionDTO.id
                && this.name == regionDTO.name
                && this.type == regionDTO.type
                && this.parent == regionDTO.parent
                && this.children == regionDTO.children;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (parent == null ? 0 : System.hashCode(parent));
        hashCode = (17 * hashCode) + (children == null ? 0 : System.hashCode(children));
        return hashCode;
    }
}

