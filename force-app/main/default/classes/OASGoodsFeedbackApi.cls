/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASGoodsFeedbackApi {
    OASClient client;

    public OASGoodsFeedbackApi(OASClient client) {
        this.client = client;
    }

    public OASGoodsFeedbackApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Удаление комментария к отзыву
     * Удаляет комментарий магазина.\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSDeleteGoodsFeedbackCommentRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse deleteGoodsFeedbackComment(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSDeleteGoodsFeedbackCommentRequest'), 'oaSDeleteGoodsFeedbackCommentRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/businesses/{businessId}/goods-feedback/comments/delete',
            (OASDeleteGoodsFeedbackCommentRequest) params.get('oaSDeleteGoodsFeedbackCommentRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Получение комментариев к отзыву
     * Возвращает комментарии к отзыву.\n\nРезультаты возвращаются постранично, одна страница содержит не более 20 комментариев.\n\nКомментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в &#x60;page_token&#x60;, если вы получали его ранее.\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSGetGoodsFeedbackCommentsRequest  (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @return OASGetGoodsFeedbackCommentsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetGoodsFeedbackCommentsResponse getGoodsFeedbackComments(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSGetGoodsFeedbackCommentsRequest'), 'oaSGetGoodsFeedbackCommentsRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetGoodsFeedbackCommentsResponse) client.invoke(
            'POST', '/businesses/{businessId}/goods-feedback/comments',
            (OASGetGoodsFeedbackCommentsRequest) params.get('oaSGetGoodsFeedbackCommentsRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetGoodsFeedbackCommentsResponse.class
        );
    }
    /**
     * Получение отзывов о товарах продавца
     * Возвращает все отзывы о товарах продавца по указанным фильтрам.\n\nРезультаты возвращаются постранично, одна страница содержит не более 20 отзывов.\n\nОтзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в &#x60;page_token&#x60;, если вы получали его ранее.\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @param oaSGetGoodsFeedbackRequest  (optional)
     * @return OASGetGoodsFeedbackResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetGoodsFeedbackResponse getGoodsFeedbacks(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetGoodsFeedbackResponse) client.invoke(
            'POST', '/businesses/{businessId}/goods-feedback',
            (OASGetGoodsFeedbackRequest) params.get('oaSGetGoodsFeedbackRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetGoodsFeedbackResponse.class
        );
    }
    /**
     * Отказ от ответа на отзывы
     * Пропускает отзывы — они больше не будут возвращаться в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSSkipGoodsFeedbackReactionRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse skipGoodsFeedbacksReaction(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSSkipGoodsFeedbackReactionRequest'), 'oaSSkipGoodsFeedbackReactionRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/businesses/{businessId}/goods-feedback/skip-reaction',
            (OASSkipGoodsFeedbackReactionRequest) params.get('oaSSkipGoodsFeedbackReactionRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Добавление нового или изменение созданного комментария
     * Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.\n\nДля создания комментария к отзыву передайте только идентификатор отзыва &#x60;feedbackId&#x60;.\n\nЧтобы добавить комментарий к другому комментарию, передайте:\n\n* &#x60;feedbackId&#x60; — идентификатор отзыва;\n* &#x60;comment.parentId&#x60; — идентификатор родительского комментария.\n\nЧтобы изменить комментарий, передайте:\n\n* &#x60;feedbackId&#x60;— идентификатор отзыва;\n* &#x60;comment.id&#x60; — идентификатор комментария, который нужно изменить.\n\nЕсли передать одновременно &#x60;comment.parentId&#x60; и &#x60;comment.id&#x60;, будет изменен существующий комментарий.\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSUpdateGoodsFeedbackCommentRequest  (required)
     * @return OASUpdateGoodsFeedbackCommentRespons
     * @throws OAS.ApiException if fails to make API call
     */
    public OASUpdateGoodsFeedbackCommentRespons updateGoodsFeedbackComment(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSUpdateGoodsFeedbackCommentRequest'), 'oaSUpdateGoodsFeedbackCommentRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASUpdateGoodsFeedbackCommentRespons) client.invoke(
            'POST', '/businesses/{businessId}/goods-feedback/comments/update',
            (OASUpdateGoodsFeedbackCommentRequest) params.get('oaSUpdateGoodsFeedbackCommentRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASUpdateGoodsFeedbackCommentRespons.class
        );
    }
}
