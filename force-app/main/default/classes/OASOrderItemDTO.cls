/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Список товаров в заказе.
 */
public class OASOrderItemDTO {
    /**
     * Идентификатор товара в заказе.\n\nПозволяет идентифицировать товар в рамках данного заказа.\n
     * @return id
     */
    public Long id { get; set; }

    /**
     * Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n
     * @return offerId
     */
    public String offerId { get; set; }

    /**
     * Название товара.
     * @return offerName
     */
    public String offerName { get; set; }

    /**
     * Цена на товар в валюте заказа без учета вознаграждения партнеру за скидки по промокодам, купонам и акциям (параметр `subsidies`).\n
     * @return price
     */
    public Double price { get; set; }

    /**
     * Цена на товар в валюте покупателя. В цене уже учтены скидки по:\n\n* акциям;\n* купонам;\n* промокодам.\n
     * @return buyerPrice
     */
    public Double buyerPrice { get; set; }

    /**
     * Стоимость товара в валюте покупателя до применения скидок по:\n\n* акциям;\n* купонам;\n* промокодам.\n
     * @return buyerPriceBeforeDiscount
     */
    public Double buyerPriceBeforeDiscount { get; set; }

    /**
     * {% note warning "" %}\n\nЭтот параметр устарел.\n\n{% endnote %}\n\nСтоимость товара в валюте магазина до применения скидок.\n
     * @return priceBeforeDiscount
     */
    public Double priceBeforeDiscount { get; set; }

    /**
     * Количество единиц товара.
     * @return count
     */
    public Integer count { get; set; }

    /**
     * Get vat
     * @return vat
     */
    public OASOrderVatType vat { get; set; }

    /**
     * Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n
     * @return shopSku
     */
    public String shopSku { get; set; }

    /**
     * {% note warning "" %}\n\nЭтот параметр устарел. Вместо него используйте `subsidies`.\n\n{% endnote %}\n\nОбщее вознаграждение партнеру за DBS-доставку и все скидки на товар:\n\n* по промокодам;\n* по купонам;\n* по баллам Плюса;\n* по акциям.\n\nПередается в валюте заказа.\n
     * @return subsidy
     */
    public Double subsidy { get; set; }

    /**
     * {% note warning "" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nИдентификатор склада в системе партнера, на который сформирован заказ.\n
     * @return partnerWarehouseId
     */
    public String partnerWarehouseId { get; set; }

    /**
     * Информация о вознаграждениях партнеру за скидки на товар по промокодам, купонам и акциям.
     * @return promos
     */
    public List<OASOrderItemPromoDTO> promos { get; set; }

    /**
     * Информация о маркировке единиц товара.\n\nВозвращаются данные для маркировки, переданные в запросе [PUT campaigns/{campaignId}/orders/{orderId}/cis](../../reference/orders/provideOrderItemCis.md).\n\nЕсли магазин еще не передавал коды для этого заказа, `instances` отсутствует.\n
     * @return instances
     */
    public List<OASOrderItemInstanceDTO> instances { get; set; }

    /**
     * Информация об удалении товара из заказа.\n
     * @return details
     */
    public List<OASOrderItemDetailDTO> details { get; set; }

    /**
     * Список субсидий по типам.
     * @return subsidies
     */
    public List<OASOrderItemSubsidyDTO> subsidies { get; set; }

    /**
     * Список необходимых маркировок товара.
     * @return requiredInstanceTypes
     */
    public List<OASOrderItemInstanceType> requiredInstanceTypes { get; set; }

    public OASOrderItemDTO() {
        promos = new List<OASOrderItemPromoDTO>();
        instances = new List<OASOrderItemInstanceDTO>();
        details = new List<OASOrderItemDetailDTO>();
        subsidies = new List<OASOrderItemSubsidyDTO>();
        requiredInstanceTypes = new List<OASOrderItemInstanceType>();
    }

    public static OASOrderItemDTO getExample() {
        OASOrderItemDTO orderItemDTO = new OASOrderItemDTO();
          orderItemDTO.id = 123456789L;
          orderItemDTO.offerId = '';
          orderItemDTO.offerName = '';
          orderItemDTO.price = 1.3579;
          orderItemDTO.buyerPrice = 1.3579;
          orderItemDTO.buyerPriceBeforeDiscount = 1.3579;
          orderItemDTO.priceBeforeDiscount = 1.3579;
          orderItemDTO.count = 0;
          orderItemDTO.vat = OASOrderVatType.getExample();
          orderItemDTO.shopSku = '';
          orderItemDTO.subsidy = 1.3579;
          orderItemDTO.partnerWarehouseId = '';
          orderItemDTO.promos = new List<OASOrderItemPromoDTO>{OASOrderItemPromoDTO.getExample()};
          orderItemDTO.instances = new List<OASOrderItemInstanceDTO>{OASOrderItemInstanceDTO.getExample()};
          orderItemDTO.details = new List<OASOrderItemDetailDTO>{OASOrderItemDetailDTO.getExample()};
          orderItemDTO.subsidies = new List<OASOrderItemSubsidyDTO>{OASOrderItemSubsidyDTO.getExample()};
          orderItemDTO.requiredInstanceTypes = new List<OASOrderItemInstanceType>{OASOrderItemInstanceType.getExample()};
        return orderItemDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOrderItemDTO) {           
            OASOrderItemDTO orderItemDTO = (OASOrderItemDTO) obj;
            return this.id == orderItemDTO.id
                && this.offerId == orderItemDTO.offerId
                && this.offerName == orderItemDTO.offerName
                && this.price == orderItemDTO.price
                && this.buyerPrice == orderItemDTO.buyerPrice
                && this.buyerPriceBeforeDiscount == orderItemDTO.buyerPriceBeforeDiscount
                && this.priceBeforeDiscount == orderItemDTO.priceBeforeDiscount
                && this.count == orderItemDTO.count
                && this.vat == orderItemDTO.vat
                && this.shopSku == orderItemDTO.shopSku
                && this.subsidy == orderItemDTO.subsidy
                && this.partnerWarehouseId == orderItemDTO.partnerWarehouseId
                && this.promos == orderItemDTO.promos
                && this.instances == orderItemDTO.instances
                && this.details == orderItemDTO.details
                && this.subsidies == orderItemDTO.subsidies
                && this.requiredInstanceTypes == orderItemDTO.requiredInstanceTypes;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (offerId == null ? 0 : System.hashCode(offerId));
        hashCode = (17 * hashCode) + (offerName == null ? 0 : System.hashCode(offerName));
        hashCode = (17 * hashCode) + (price == null ? 0 : System.hashCode(price));
        hashCode = (17 * hashCode) + (buyerPrice == null ? 0 : System.hashCode(buyerPrice));
        hashCode = (17 * hashCode) + (buyerPriceBeforeDiscount == null ? 0 : System.hashCode(buyerPriceBeforeDiscount));
        hashCode = (17 * hashCode) + (priceBeforeDiscount == null ? 0 : System.hashCode(priceBeforeDiscount));
        hashCode = (17 * hashCode) + (count == null ? 0 : System.hashCode(count));
        hashCode = (17 * hashCode) + (vat == null ? 0 : System.hashCode(vat));
        hashCode = (17 * hashCode) + (shopSku == null ? 0 : System.hashCode(shopSku));
        hashCode = (17 * hashCode) + (subsidy == null ? 0 : System.hashCode(subsidy));
        hashCode = (17 * hashCode) + (partnerWarehouseId == null ? 0 : System.hashCode(partnerWarehouseId));
        hashCode = (17 * hashCode) + (promos == null ? 0 : System.hashCode(promos));
        hashCode = (17 * hashCode) + (instances == null ? 0 : System.hashCode(instances));
        hashCode = (17 * hashCode) + (details == null ? 0 : System.hashCode(details));
        hashCode = (17 * hashCode) + (subsidies == null ? 0 : System.hashCode(subsidies));
        hashCode = (17 * hashCode) + (requiredInstanceTypes == null ? 0 : System.hashCode(requiredInstanceTypes));
        return hashCode;
    }
}

