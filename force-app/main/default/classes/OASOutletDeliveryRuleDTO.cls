/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация об условиях доставки для данной точки продаж.
 */
public class OASOutletDeliveryRuleDTO {
    /**
     * Минимальный срок доставки товаров в точку продаж. Указан в рабочих днях.\n\nМинимальное значение: `0` — доставка в день заказа.\n\nМаксимальное значение: `60`.\n\nДопустимые сроки доставки (разница между `minDeliveryDays` и `maxDeliveryDays`) зависят от региона.\n\nДля доставки по своему региону разница не должна превышать двух дней. Например, если `minDeliveryDays` равно 1, то для `maxDeliveryDays` допускаются значения от 1 до 3.\n\nДля доставки в другие регионы:\n\n* Если `minDeliveryDays` до 18 дней, разница не должна превышать четырех дней. Например, если `minDeliveryDays` равно 10, то для `maxDeliveryDays` допускаются значения от 10 до 14.\n* Если `minDeliveryDays` больше 18 дней, разница должна быть не больше чем в два раза. Например, если `minDeliveryDays` равно 21, то для `maxDeliveryDays` допускаются значения от 21 до 42.\n\nОбязательный параметр, если `type="DEPOT"` или `type="MIXED"`.\n\nВзаимоисключающий с параметром `unspecifiedDeliveryInterval`.\n
     * @return minDeliveryDays
     */
    public Integer minDeliveryDays { get; set; }

    /**
     * Максимальный срок доставки товаров в точку продаж. Указан в рабочих днях.\n\nМинимальное значение: `0` — доставка в день заказа.\n\nМаксимальное значение: `60`.\n\nДопустимые сроки доставки (разница между `minDeliveryDays` и `maxDeliveryDays`) зависят от региона.\n\nДля доставки по своему региону разница не должна превышать двух дней. Например, если `minDeliveryDays` равно 1, то для `maxDeliveryDays` допускаются значения от 1 до 3.\n\nДля доставки в другие регионы:\n\n* Если `minDeliveryDays` до 18 дней, разница не должна превышать четырех дней. Например, если `minDeliveryDays` равно 10, то для `maxDeliveryDays` допускаются значения от 10 до 14.\n* Если `minDeliveryDays` больше 18 дней, разница должна быть не больше чем в два раза. Например, если `minDeliveryDays` равно 21, то для `maxDeliveryDays` допускаются значения от 21 до 42.\n\nОбязательный параметр, если `type="DEPOT"` или `type="MIXED"`.\n\nВзаимоисключающий с параметром `unspecifiedDeliveryInterval`.\n
     * @return maxDeliveryDays
     */
    public Integer maxDeliveryDays { get; set; }

    /**
     * Идентификатор службы доставки товаров в точку продаж.\n\nИнформацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).\n
     * @return deliveryServiceId
     */
    public Long deliveryServiceId { get; set; }

    /**
     * Час, до которого покупателю нужно сделать заказ, чтобы он был доставлен в точку продаж в сроки от `minDeliveryDays` до `maxDeliveryDays`.\n\nЕсли покупатель оформит заказ после указанного часа, он будет доставлен в сроки от `minDeliveryDays` + 1 рабочий день до `maxDeliveryDays` + 1 рабочий день.\n\nЗначение по умолчанию: `24`.\n
     * minimum: 0
     * maximum: 24
     * @return orderBefore
     */
    public Integer orderBefore { get; set; }

    /**
     * Цена на товар, начиная с которой действует бесплатный самовывоз товара из точки продаж.
     * @return priceFreePickup
     */
    public Double priceFreePickup { get; set; }

    /**
     * Признак доставки товаров в точку продаж на заказ.\n\nПризнак выставлен, если:\n\n* точный срок доставки в точку продаж заранее неизвестен (например, если магазин собирает несколько заказов для отправки в точку или населенный пункт);\n* все товары изготавливаются или поставляются на заказ.\n\nВозможные значения:\n* `true` — товары доставляются в точку продаж на заказ.\n\nПараметр указывается только со значением `true`.\n\nВзаимоисключающий с параметрами `minDeliveryDays` и `maxDeliveryDays`.\n
     * @return unspecifiedDeliveryInterval
     */
    public Boolean unspecifiedDeliveryInterval { get; set; }

    public static OASOutletDeliveryRuleDTO getExample() {
        OASOutletDeliveryRuleDTO outletDeliveryRuleDTO = new OASOutletDeliveryRuleDTO();
          outletDeliveryRuleDTO.minDeliveryDays = 0;
          outletDeliveryRuleDTO.maxDeliveryDays = 0;
          outletDeliveryRuleDTO.deliveryServiceId = 123456789L;
          outletDeliveryRuleDTO.orderBefore = 0;
          outletDeliveryRuleDTO.priceFreePickup = 1.3579;
          outletDeliveryRuleDTO.unspecifiedDeliveryInterval = true;
        return outletDeliveryRuleDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOutletDeliveryRuleDTO) {           
            OASOutletDeliveryRuleDTO outletDeliveryRuleDTO = (OASOutletDeliveryRuleDTO) obj;
            return this.minDeliveryDays == outletDeliveryRuleDTO.minDeliveryDays
                && this.maxDeliveryDays == outletDeliveryRuleDTO.maxDeliveryDays
                && this.deliveryServiceId == outletDeliveryRuleDTO.deliveryServiceId
                && this.orderBefore == outletDeliveryRuleDTO.orderBefore
                && this.priceFreePickup == outletDeliveryRuleDTO.priceFreePickup
                && this.unspecifiedDeliveryInterval == outletDeliveryRuleDTO.unspecifiedDeliveryInterval;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (minDeliveryDays == null ? 0 : System.hashCode(minDeliveryDays));
        hashCode = (17 * hashCode) + (maxDeliveryDays == null ? 0 : System.hashCode(maxDeliveryDays));
        hashCode = (17 * hashCode) + (deliveryServiceId == null ? 0 : System.hashCode(deliveryServiceId));
        hashCode = (17 * hashCode) + (orderBefore == null ? 0 : System.hashCode(orderBefore));
        hashCode = (17 * hashCode) + (priceFreePickup == null ? 0 : System.hashCode(priceFreePickup));
        hashCode = (17 * hashCode) + (unspecifiedDeliveryInterval == null ? 0 : System.hashCode(unspecifiedDeliveryInterval));
        return hashCode;
    }
}

