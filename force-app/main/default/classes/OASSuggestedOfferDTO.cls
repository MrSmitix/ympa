/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация о товаре.
 */
public class OASSuggestedOfferDTO {
    /**
     * Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n
     * @return offerId
     */
    public String offerId { get; set; }

    /**
     * Составляйте название по схеме: тип + бренд или производитель + модель + особенности, если есть (например, цвет, размер или вес) и количество в упаковке.\n\nНе включайте в название условия продажи (например, «скидка», «бесплатная доставка» и т. д.), эмоциональные характеристики («хит», «супер» и т. д.). Не пишите слова большими буквами — кроме устоявшихся названий брендов и моделей.\n\nОптимальная длина — 50–60 символов, максимальная — 256.\n\n[Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/title.html)\n
     * @return name
     */
    public String name { get; set; }

    /**
     * Категория товара в вашем магазине. Значение будет использовано для определения категории товара на Маркете в случае, если вы не передали категорию в параметре `marketCategoryId`.\n\nУказывайте конкретные категории — например, набор ножей лучше отнести к категории **Столовые приборы**, а не просто **Посуда**.\n\nВыбирайте категории, которые описывают товар, а не абстрактный признак — например, **Духи**, а не **Подарки**.\n\nЗначение будет использовано для определения категории товара на Маркете в случае, если вы не передали категорию в параметре `marketCategoryId`.\n
     * @return category
     */
    public String category { get; set; }

    /**
     * Название бренда или производителя. Должно быть записано так, как его пишет сам бренд.
     * @return vendor
     */
    public String vendor { get; set; }

    /**
     * Указывайте в виде последовательности цифр. Подойдут коды EAN-13, EAN-8, UPC-A, UPC-E или Code 128.\n\nДля книг указывайте ISBN.\n\nДля товаров [определенных категорий и торговых марок](https://yastatic.net/s3/doc-binary/src/support/market/ru/yandex-market-list-for-gtin.xlsx) штрихкод должен быть действительным кодом GTIN. Обратите внимание: внутренние штрихкоды, начинающиеся на 2 или 02, и коды формата Code 128 не являются GTIN.\n\n[Что такое GTIN](*gtin)\n\n
     * @return barcodes
     */
    public List<String> barcodes { get; set; }

    /**
     * Подробное описание товара: например, его преимущества и особенности.\n\nНе давайте в описании инструкций по установке и сборке. Не используйте слова «скидка», «распродажа», «дешевый», «подарок» (кроме подарочных категорий), «бесплатно», «акция», «специальная цена», «новинка», «new», «аналог», «заказ», «хит». Не указывайте никакой контактной информации и не давайте ссылок.\n\nМожно использовать теги:\n\n* \<h>, \<h1>, \<h2> и так далее — для заголовков;\n* \<br> и \<p> — для переноса строки;\n* \<ol> — для нумерованного списка;\n* \<ul> — для маркированного списка;\n* \<li> — для создания элементов списка (должен находиться внутри \<ol> или \<ul>);\n* \<div> — поддерживается, но не влияет на отображение текста.\n\nОптимальная длина — 400–600 символов, максимальная — 6000.\n\n[Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/description.html)\n
     * @return description
     */
    public String description { get; set; }

    /**
     * Артикул товара от производителя.
     * @return vendorCode
     */
    public String vendorCode { get; set; }

    /**
     * Get basicPrice
     * @return basicPrice
     */
    public OASBasePriceDTO basicPrice { get; set; }

    public OASSuggestedOfferDTO() {
        barcodes = new List<String>();
    }

    public static OASSuggestedOfferDTO getExample() {
        OASSuggestedOfferDTO suggestedOfferDTO = new OASSuggestedOfferDTO();
          suggestedOfferDTO.offerId = '';
          suggestedOfferDTO.name = 'Ударная дрель Makita HP1630, 710 Вт';
          suggestedOfferDTO.category = '';
          suggestedOfferDTO.vendor = 'LEVENHUK';
          suggestedOfferDTO.barcodes = new List<String>{'46012300000000'};
          suggestedOfferDTO.description = '';
          suggestedOfferDTO.vendorCode = 'VNDR-0005A';
          suggestedOfferDTO.basicPrice = OASBasePriceDTO.getExample();
        return suggestedOfferDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASSuggestedOfferDTO) {           
            OASSuggestedOfferDTO suggestedOfferDTO = (OASSuggestedOfferDTO) obj;
            return this.offerId == suggestedOfferDTO.offerId
                && this.name == suggestedOfferDTO.name
                && this.category == suggestedOfferDTO.category
                && this.vendor == suggestedOfferDTO.vendor
                && this.barcodes == suggestedOfferDTO.barcodes
                && this.description == suggestedOfferDTO.description
                && this.vendorCode == suggestedOfferDTO.vendorCode
                && this.basicPrice == suggestedOfferDTO.basicPrice;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (offerId == null ? 0 : System.hashCode(offerId));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (category == null ? 0 : System.hashCode(category));
        hashCode = (17 * hashCode) + (vendor == null ? 0 : System.hashCode(vendor));
        hashCode = (17 * hashCode) + (barcodes == null ? 0 : System.hashCode(barcodes));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (vendorCode == null ? 0 : System.hashCode(vendorCode));
        hashCode = (17 * hashCode) + (basicPrice == null ? 0 : System.hashCode(basicPrice));
        return hashCode;
    }
}

