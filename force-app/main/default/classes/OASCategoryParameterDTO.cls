/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Характеристика товара.
 */
public class OASCategoryParameterDTO {
    /**
     * Идентификатор характеристики.
     * @return id
     */
    public Long id { get; set; }

    /**
     * Название характеристики.
     * @return name
     */
    public String name { get; set; }

    /**
     * Get type
     * @return type
     */
    public OASParameterType type { get; set; }

    /**
     * Get unit
     * @return unit
     */
    public OASCategoryParameterUnitDTO unit { get; set; }

    /**
     * Описание характеристики.
     * @return description
     */
    public String description { get; set; }

    /**
     * Перечень возможных рекомендаций по заполнению карточки, к которым относится данная характеристика.
     * @return recommendationTypes
     */
    public List<OASOfferCardRecommendationType> recommendationTypes { get; set; }

    /**
     * Обязательность характеристики.
     * @return required
     */
    public Boolean required { get; set; }

    /**
     * Используется ли характеристика в фильтре.
     * @return filtering
     */
    public Boolean filtering { get; set; }

    /**
     * Является ли характеристика особенностью варианта.
     * @return distinctive
     */
    public Boolean distinctive { get; set; }

    /**
     * Можно ли передать сразу несколько значений.
     * @return multivalue
     */
    public Boolean multivalue { get; set; }

    /**
     * Можно ли передавать собственное значение, которого нет в списке вариантов Маркета. Только для характеристик типа `ENUM`.
     * @return allowCustomValues
     */
    public Boolean allowCustomValues { get; set; }

    /**
     * Список допустимых значений параметра. Только для характеристик типа `ENUM`.
     * @return values
     */
    public List<OASParameterValueOptionDTO> values { get; set; }

    /**
     * Get constraints
     * @return constraints
     */
    public OASParameterValueConstraintsDTO constraints { get; set; }

    /**
     * Ограничения на значения, накладываемые другими характеристиками. Только для характеристик типа `ENUM`.
     * @return valueRestrictions
     */
    public List<OASValueRestrictionDTO> valueRestrictions { get; set; }

    public OASCategoryParameterDTO() {
        recommendationTypes = new List<OASOfferCardRecommendationType>();
        values = new List<OASParameterValueOptionDTO>();
        valueRestrictions = new List<OASValueRestrictionDTO>();
    }

    public static OASCategoryParameterDTO getExample() {
        OASCategoryParameterDTO categoryParameterDTO = new OASCategoryParameterDTO();
          categoryParameterDTO.id = 123456789L;
          categoryParameterDTO.name = '';
          categoryParameterDTO.type = OASParameterType.getExample();
          categoryParameterDTO.unit = OASCategoryParameterUnitDTO.getExample();
          categoryParameterDTO.description = '';
          categoryParameterDTO.recommendationTypes = new List<OASOfferCardRecommendationType>{OASOfferCardRecommendationType.getExample()};
          categoryParameterDTO.required = true;
          categoryParameterDTO.filtering = true;
          categoryParameterDTO.distinctive = true;
          categoryParameterDTO.multivalue = true;
          categoryParameterDTO.allowCustomValues = true;
          categoryParameterDTO.values = new List<OASParameterValueOptionDTO>{OASParameterValueOptionDTO.getExample()};
          categoryParameterDTO.constraints = OASParameterValueConstraintsDTO.getExample();
          categoryParameterDTO.valueRestrictions = new List<OASValueRestrictionDTO>{OASValueRestrictionDTO.getExample()};
        return categoryParameterDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCategoryParameterDTO) {           
            OASCategoryParameterDTO categoryParameterDTO = (OASCategoryParameterDTO) obj;
            return this.id == categoryParameterDTO.id
                && this.name == categoryParameterDTO.name
                && this.type == categoryParameterDTO.type
                && this.unit == categoryParameterDTO.unit
                && this.description == categoryParameterDTO.description
                && this.recommendationTypes == categoryParameterDTO.recommendationTypes
                && this.required == categoryParameterDTO.required
                && this.filtering == categoryParameterDTO.filtering
                && this.distinctive == categoryParameterDTO.distinctive
                && this.multivalue == categoryParameterDTO.multivalue
                && this.allowCustomValues == categoryParameterDTO.allowCustomValues
                && this.values == categoryParameterDTO.values
                && this.constraints == categoryParameterDTO.constraints
                && this.valueRestrictions == categoryParameterDTO.valueRestrictions;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (unit == null ? 0 : System.hashCode(unit));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (recommendationTypes == null ? 0 : System.hashCode(recommendationTypes));
        hashCode = (17 * hashCode) + (required == null ? 0 : System.hashCode(required));
        hashCode = (17 * hashCode) + (filtering == null ? 0 : System.hashCode(filtering));
        hashCode = (17 * hashCode) + (distinctive == null ? 0 : System.hashCode(distinctive));
        hashCode = (17 * hashCode) + (multivalue == null ? 0 : System.hashCode(multivalue));
        hashCode = (17 * hashCode) + (allowCustomValues == null ? 0 : System.hashCode(allowCustomValues));
        hashCode = (17 * hashCode) + (values == null ? 0 : System.hashCode(values));
        hashCode = (17 * hashCode) + (constraints == null ? 0 : System.hashCode(constraints));
        hashCode = (17 * hashCode) + (valueRestrictions == null ? 0 : System.hashCode(valueRestrictions));
        return hashCode;
    }
}

