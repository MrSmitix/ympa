/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASReportsApi {
    OASClient client;

    public OASReportsApi(OASClient client) {
        this.client = client;
    }

    public OASReportsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Отчет по бусту продаж
     * Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGenerateBoostConsolidatedRequest  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateBoostConsolidatedReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateBoostConsolidatedRequest'), 'oaSGenerateBoostConsolidatedRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/boost-consolidated/generate',
            (OASGenerateBoostConsolidatedRequest) params.get('oaSGenerateBoostConsolidatedRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет «Конкурентная позиция»
     * Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n{% note info &quot;Значение -1 в отчете&quot; %}\n\nЕсли в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 10 запросов в час|\n|-|\n
     * @param oaSGenerateCompetitorsPositionReport  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateCompetitorsPositionReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateCompetitorsPositionReport'), 'oaSGenerateCompetitorsPositionReport');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/competitors-position/generate',
            (OASGenerateCompetitorsPositionReport) params.get('oaSGenerateCompetitorsPositionReport'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет по отзывам о товарах
     * Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGenerateGoodsFeedbackRequest  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateGoodsFeedbackReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateGoodsFeedbackRequest'), 'oaSGenerateGoodsFeedbackRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/goods-feedback/generate',
            (OASGenerateGoodsFeedbackRequest) params.get('oaSGenerateGoodsFeedbackRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет по движению товаров
     * Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGenerateGoodsMovementReportReques  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateGoodsMovementReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateGoodsMovementReportReques'), 'oaSGenerateGoodsMovementReportReques');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/goods-movement/generate',
            (OASGenerateGoodsMovementReportReques) params.get('oaSGenerateGoodsMovementReportReques'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет по реализации
     * Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGenerateGoodsRealizationReportReq  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateGoodsRealizationReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateGoodsRealizationReportReq'), 'oaSGenerateGoodsRealizationReportReq');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/goods-realization/generate',
            (OASGenerateGoodsRealizationReportReq) params.get('oaSGenerateGoodsRealizationReportReq'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет по оборачиваемости
     * Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGenerateGoodsTurnoverRequest  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateGoodsTurnoverReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateGoodsTurnoverRequest'), 'oaSGenerateGoodsTurnoverRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/goods-turnover/generate',
            (OASGenerateGoodsTurnoverRequest) params.get('oaSGenerateGoodsTurnoverRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Готовые ярлыки‑наклейки на все коробки в нескольких заказах
     * Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).\n\nУзнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n
     * @param oaSGenerateMassOrderLabelsRequest  (required)
     * @param format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateMassOrderLabelsReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateMassOrderLabelsRequest'), 'oaSGenerateMassOrderLabelsRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASPageFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/documents/labels/generate',
            (OASGenerateMassOrderLabelsRequest) params.get('oaSGenerateMassOrderLabelsRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет «Цены на рынке»
     * Запускает генерацию **отчета «Цены на рынке»**.\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGeneratePricesReportRequest  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generatePricesReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGeneratePricesReportRequest'), 'oaSGeneratePricesReportRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/prices/generate',
            (OASGeneratePricesReportRequest) params.get('oaSGeneratePricesReportRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет по полкам
     * Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGenerateShelfsStatisticsRequest  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateShelfsStatisticsReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateShelfsStatisticsRequest'), 'oaSGenerateShelfsStatisticsRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/shelf-statistics/generate',
            (OASGenerateShelfsStatisticsRequest) params.get('oaSGenerateShelfsStatisticsRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Получение листа сборки
     * Запускает генерацию **листа сборки** для отгрузки.\n\nУзнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGenerateShipmentListDocumentRepor  (required)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateShipmentListDocumentReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateShipmentListDocumentRepor'), 'oaSGenerateShipmentListDocumentRepor');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/documents/shipment-list/generate',
            (OASGenerateShipmentListDocumentRepor) params.get('oaSGenerateShipmentListDocumentRepor'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет «Аналитика продаж»
     * Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 10 запросов в час|\n|-|\n
     * @param oaSGenerateShowsSalesReportRequest  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateShowsSalesReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateShowsSalesReportRequest'), 'oaSGenerateShowsSalesReportRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/shows-sales/generate',
            (OASGenerateShowsSalesReportRequest) params.get('oaSGenerateShowsSalesReportRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет по остаткам на складах
     * Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:\n\n* Для модели FBY — об остатках на складах Маркета.\n* Для остальных моделей — об остатках на соответствующем складе магазина.\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGenerateStocksOnWarehousesReportR  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateStocksOnWarehousesReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateStocksOnWarehousesReportR'), 'oaSGenerateStocksOnWarehousesReportR');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/stocks-on-warehouses/generate',
            (OASGenerateStocksOnWarehousesReportR) params.get('oaSGenerateStocksOnWarehousesReportR'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет по стоимости услуг
     * Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)\n\nТип отчета зависит от того, какие поля заполнены в запросе:\n\n|**Тип отчета**               |**Какие поля нужны**             |\n|-----------------------------|---------------------------------|\n|По дате начисления услуги    |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;            |\n|По дате формирования акта    |&#x60;year&#x60; и &#x60;month&#x60;                 |\n\nЗаказать отчеты обоих типов одним запросом нельзя.\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGenerateUnitedMarketplaceServices  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateUnitedMarketplaceServicesReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateUnitedMarketplaceServices'), 'oaSGenerateUnitedMarketplaceServices');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/united-marketplace-services/generate',
            (OASGenerateUnitedMarketplaceServices) params.get('oaSGenerateUnitedMarketplaceServices'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет по платежам
     * Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\nТип отчета зависит от того, какие поля заполнены в запросе:\n\n|**Тип отчета**           |**Какие поля нужны**                   |\n|-------------------------|---------------------------------------|\n|О платежах за период     |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;                  |\n|О платежном поручении    |&#x60;bankOrderId&#x60; и &#x60;bankOrderDateTime&#x60;    |\n\nЗаказать отчеты обоих типов одним запросом нельзя.\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGenerateUnitedNettingReportReques  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateUnitedNettingReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateUnitedNettingReportReques'), 'oaSGenerateUnitedNettingReportReques');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/united-netting/generate',
            (OASGenerateUnitedNettingReportReques) params.get('oaSGenerateUnitedNettingReportReques'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет по заказам
     * Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)\n\n{% note info &quot;&quot; %}\n\nЭто новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)\n\n{% endnote %}\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGenerateUnitedOrdersRequest  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateUnitedOrdersReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateUnitedOrdersRequest'), 'oaSGenerateUnitedOrdersRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/united-orders/generate',
            (OASGenerateUnitedOrdersRequest) params.get('oaSGenerateUnitedOrdersRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Получение заданного отчета
     * Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.\n\nЧтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)\n\n|**⚙️ Лимит:** 100 запросов в минуту|\n|-|\n
     * @param reportId Идентификатор отчета, который вы получили после запуска генерации.\n (required)
     * @return OASGetReportInfoResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetReportInfoResponse getReportInfo(Map<String, Object> params) {
        client.assertNotNull(params.get('reportId'), 'reportId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetReportInfoResponse) client.invoke(
            'GET', '/reports/info/{reportId}', '',
            query, form,
            new Map<String, Object>{
                'reportId' => (String) params.get('reportId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetReportInfoResponse.class
        );
    }
}
