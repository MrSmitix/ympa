/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация о лицензии.
 */
public class OASOutletLicenseDTO implements OAS.MappedProperties {
    /**
     * Идентификатор лицензии.\n\nПараметр указывается, только если нужно изменить информацию о существующей лицензии. Ее идентификатор можно узнать с помощью запроса [GET campaigns/{campaignId}/outlets/licenses](../../reference/outlets/getOutletLicenses.md). При передаче информации о новой лицензии указывать идентификатор не нужно.\n\nИдентификатор лицензии присваивается Маркетом. Не путайте его с номером, указанным на лицензии: он передается в параметре `number`.\n
     * @return id
     */
    public Long id { get; set; }

    /**
     * Идентификатор точки продаж, для которой действительна лицензия.
     * @return outletId
     */
    public Long outletId { get; set; }

    /**
     * Get licenseType
     * @return licenseType
     */
    public OASLicenseType licenseType { get; set; }

    /**
     * Номер лицензии.
     * @return r_number
     */
    public String r_number { get; set; }

    /**
     * Дата выдачи лицензии.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Нужно передать дату, указанную на лицензии, время `00:00:00` и часовой пояс, соответствующий региону точки продаж. Например, если лицензия для точки продаж в Москве выдана 13 ноября 2017 года, то параметр должен иметь значение `2017-11-13T00:00:00+03:00`.\n\nОбязательный параметр.\n\nНе может быть позже даты окончания срока действия, указанной в параметре `dateOfExpiry`.\n
     * @return dateOfIssue
     */
    public Datetime dateOfIssue { get; set; }

    /**
     * Дата окончания действия лицензии.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Нужно передать дату, указанную на лицензии, время `00:00:00` и часовой пояс, соответствующий региону точки продаж. Например, если действие лицензии для точки продаж в Москве заканчивается 20 ноября 2022 года, то параметр должен иметь значение `2022-11-20T00:00:00+03:00`.\n\nОбязательный параметр.\n\nНе может быть раньше даты выдачи, указанной в параметре `dateOfIssue`.\n
     * @return dateOfExpiry
     */
    public Datetime dateOfExpiry { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'number' => 'r_number'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASOutletLicenseDTO getExample() {
        OASOutletLicenseDTO outletLicenseDTO = new OASOutletLicenseDTO();
          outletLicenseDTO.id = 123456789L;
          outletLicenseDTO.outletId = 123456789L;
          outletLicenseDTO.licenseType = OASLicenseType.getExample();
          outletLicenseDTO.r_number = '';
          outletLicenseDTO.dateOfIssue = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          outletLicenseDTO.dateOfExpiry = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
        return outletLicenseDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOutletLicenseDTO) {           
            OASOutletLicenseDTO outletLicenseDTO = (OASOutletLicenseDTO) obj;
            return this.id == outletLicenseDTO.id
                && this.outletId == outletLicenseDTO.outletId
                && this.licenseType == outletLicenseDTO.licenseType
                && this.r_number == outletLicenseDTO.r_number
                && this.dateOfIssue == outletLicenseDTO.dateOfIssue
                && this.dateOfExpiry == outletLicenseDTO.dateOfExpiry;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (outletId == null ? 0 : System.hashCode(outletId));
        hashCode = (17 * hashCode) + (licenseType == null ? 0 : System.hashCode(licenseType));
        hashCode = (17 * hashCode) + (r_number == null ? 0 : System.hashCode(r_number));
        hashCode = (17 * hashCode) + (dateOfIssue == null ? 0 : System.hashCode(dateOfIssue));
        hashCode = (17 * hashCode) + (dateOfExpiry == null ? 0 : System.hashCode(dateOfExpiry));
        return hashCode;
    }
}

