/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Ограничение на возможные значения, накладываемое другой характеристикой.\n\nЕсли ограничивающая характеристика принимает определенное значение, список возможных значений ограничиваемой характеристики сокращается.\n\n**Пример**\n\nХарактеристика **размер** сама по себе может принимать девять разных значений: &#x60;S&#x60;, &#x60;M&#x60;, &#x60;L&#x60;, &#x60;44&#x60;, &#x60;46&#x60;, &#x60;48&#x60;, &#x60;42/164&#x60;, &#x60;46/176&#x60;, &#x60;44S&#x60;.\n\nЕсли ограничивающая характеристика **размерная сетка** принимает значение &#x60;RU&#x60;, список возможных значений размера сокращается до &#x60;44&#x60;, &#x60;46&#x60;, &#x60;48&#x60;.\n
 */
public class OASValueRestrictionDTO {
    /**
     * Идентификатор ограничивающей характеристики.
     * @return limitingParameterId
     */
    public Long limitingParameterId { get; set; }

    /**
     * Значения ограничивающей характеристики и соответствующие допустимые значения текущей характеристики.
     * @return limitedValues
     */
    public List<OASOptionValuesLimitedDTO> limitedValues { get; set; }

    public OASValueRestrictionDTO() {
        limitedValues = new List<OASOptionValuesLimitedDTO>();
    }

    public static OASValueRestrictionDTO getExample() {
        OASValueRestrictionDTO valueRestrictionDTO = new OASValueRestrictionDTO();
          valueRestrictionDTO.limitingParameterId = 123456789L;
          valueRestrictionDTO.limitedValues = new List<OASOptionValuesLimitedDTO>{OASOptionValuesLimitedDTO.getExample()};
        return valueRestrictionDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASValueRestrictionDTO) {           
            OASValueRestrictionDTO valueRestrictionDTO = (OASValueRestrictionDTO) obj;
            return this.limitingParameterId == valueRestrictionDTO.limitingParameterId
                && this.limitedValues == valueRestrictionDTO.limitedValues;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (limitingParameterId == null ? 0 : System.hashCode(limitingParameterId));
        hashCode = (17 * hashCode) + (limitedValues == null ? 0 : System.hashCode(limitedValues));
        return hashCode;
    }
}

