/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASContentApi {
    OASClient client;

    public OASContentApi(OASClient client) {
        this.client = client;
    }

    public OASContentApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Списки характеристик товаров по категориям
     * Возвращает список характеристик с допустимыми значениями для заданной категории.\n\n|**⚙️ Лимит:** 50 категорий в минуту |\n|-|\n
     * @param categoryId Идентификатор категории на Маркете.\n\nЧтобы узнать идентификатор категории, к которой относится интересующий вас товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).\n (required)
     * @return OASGetCategoryContentParametersRespo
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetCategoryContentParametersRespo getCategoryContentParameters(Map<String, Object> params) {
        client.assertNotNull(params.get('categoryId'), 'categoryId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetCategoryContentParametersRespo) client.invoke(
            'POST', '/category/{categoryId}/parameters', '',
            query, form,
            new Map<String, Object>{
                'categoryId' => (Long) params.get('categoryId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetCategoryContentParametersRespo.class
        );
    }
    /**
     * Получение информации о заполненности карточек магазина
     * Возвращает сведения о состоянии контента для заданных товаров:\n\n* создана ли карточка товара и в каком она статусе;\n* заполненность карточки в процентах;\n* переданные характеристики товаров;\n* есть ли ошибки или предупреждения, связанные с контентом;\n* рекомендации по заполнению карточки.\n\n|**⚙️ Лимит:** 600 запросов в минуту|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @param oaSGetOfferCardsContentStatusRequest  (optional)
     * @return OASGetOfferCardsContentStatusRespons
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetOfferCardsContentStatusRespons getOfferCardsContentStatus(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetOfferCardsContentStatusRespons) client.invoke(
            'POST', '/businesses/{businessId}/offer-cards',
            (OASGetOfferCardsContentStatusRequest) params.get('oaSGetOfferCardsContentStatusRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetOfferCardsContentStatusRespons.class
        );
    }
    /**
     * Редактирование категорийных характеристик товара
     * Редактирует характеристики товара, которые специфичны для категории, к которой он относится.\n\n{% note warning &quot;Здесь только то, что относится к конкретной категории&quot; %}\n\nЕсли вам нужно изменить основные параметры товара (название, описание, изображения, видео, производитель, штрихкод), воспользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).\n\n{% endnote %}\n\nЧтобы удалить характеристики, которые заданы в параметрах с типом &#x60;string&#x60;, передайте пустое значение.\n\n{% note info &quot;Данные в каталоге обновляются не мгновенно&quot; %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSUpdateOfferContentRequest  (required)
     * @return OASUpdateOfferContentResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASUpdateOfferContentResponse updateOfferContent(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSUpdateOfferContentRequest'), 'oaSUpdateOfferContentRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASUpdateOfferContentResponse) client.invoke(
            'POST', '/businesses/{businessId}/offer-cards/update',
            (OASUpdateOfferContentRequest) params.get('oaSUpdateOfferContentRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASUpdateOfferContentResponse.class
        );
    }
}
