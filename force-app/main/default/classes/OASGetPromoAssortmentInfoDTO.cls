/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация о товарах в акции.
 */
public class OASGetPromoAssortmentInfoDTO {
    /**
     * Количество товаров, которые участвуют или участвовали в акции.\n\nУчитываются только товары, которые были добавлены вручную.\n\nОб автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).\n
     * @return activeOffers
     */
    public Integer activeOffers { get; set; }

    /**
     * Количество доступных товаров в акции.\n\nПараметр возвращается только для текущих и будущих акций.\n
     * @return potentialOffers
     */
    public Integer potentialOffers { get; set; }

    /**
     * Есть ли изменения в ассортименте, которые еще не применились. Сохранение изменений занимает некоторое время.\n\nПараметр возвращается только для текущих и будущих акций.\n
     * @return processing
     */
    public Boolean processing { get; set; }

    public static OASGetPromoAssortmentInfoDTO getExample() {
        OASGetPromoAssortmentInfoDTO getPromoAssortmentInfoDTO = new OASGetPromoAssortmentInfoDTO();
          getPromoAssortmentInfoDTO.activeOffers = 0;
          getPromoAssortmentInfoDTO.potentialOffers = 0;
          getPromoAssortmentInfoDTO.processing = true;
        return getPromoAssortmentInfoDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASGetPromoAssortmentInfoDTO) {           
            OASGetPromoAssortmentInfoDTO getPromoAssortmentInfoDTO = (OASGetPromoAssortmentInfoDTO) obj;
            return this.activeOffers == getPromoAssortmentInfoDTO.activeOffers
                && this.potentialOffers == getPromoAssortmentInfoDTO.potentialOffers
                && this.processing == getPromoAssortmentInfoDTO.processing;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (activeOffers == null ? 0 : System.hashCode(activeOffers));
        hashCode = (17 * hashCode) + (potentialOffers == null ? 0 : System.hashCode(potentialOffers));
        hashCode = (17 * hashCode) + (processing == null ? 0 : System.hashCode(processing));
        return hashCode;
    }
}

