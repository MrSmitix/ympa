/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Цена с указанием ставки НДС и времени последнего обновления.
 */
public class OASGetPriceWithVatDTO implements OASPriceDTO, OASUpdateTimeDTO {
    /**
     * Цена на товар.
     * @return value
     */
    public Double value { get; set; }

    /**
     * Цена на товар без скидки.\n\nЧисло должно быть целым. Вы можете указать цену со скидкой от 5 до 99%.\n\nПередавайте этот параметр при каждом обновлении цены, если предоставляете скидку на товар.\n
     * @return discountBase
     */
    public Double discountBase { get; set; }

    /**
     * Get currencyId
     * @return currencyId
     */
    public OASCurrencyType currencyId { get; set; }

    /**
     * Идентификатор ставки НДС, применяемой для товара:\n\n* `2` — 10%.\n* `5` — 0%.\n* `6` — не облагается НДС.\n* `7` — 20%.\n\nЕсли параметр не указан, используется ставка НДС, установленная в кабинете.\n
     * @return vat
     */
    public Integer vat { get; set; }

    /**
     * Время последнего обновления.
     * @return updatedAt
     */
    public Datetime updatedAt { get; set; }

    public static OASGetPriceWithVatDTO getExample() {
        OASGetPriceWithVatDTO getPriceWithVatDTO = new OASGetPriceWithVatDTO();
          getPriceWithVatDTO.value = 1.3579;
          getPriceWithVatDTO.discountBase = 1.3579;
          getPriceWithVatDTO.currencyId = OASCurrencyType.getExample();
          getPriceWithVatDTO.vat = 0;
          getPriceWithVatDTO.updatedAt = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
        return getPriceWithVatDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASGetPriceWithVatDTO) {           
            OASGetPriceWithVatDTO getPriceWithVatDTO = (OASGetPriceWithVatDTO) obj;
            return this.value == getPriceWithVatDTO.value
                && this.discountBase == getPriceWithVatDTO.discountBase
                && this.currencyId == getPriceWithVatDTO.currencyId
                && this.vat == getPriceWithVatDTO.vat
                && this.updatedAt == getPriceWithVatDTO.updatedAt;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (value == null ? 0 : System.hashCode(value));
        hashCode = (17 * hashCode) + (discountBase == null ? 0 : System.hashCode(discountBase));
        hashCode = (17 * hashCode) + (currencyId == null ? 0 : System.hashCode(currencyId));
        hashCode = (17 * hashCode) + (vat == null ? 0 : System.hashCode(vat));
        hashCode = (17 * hashCode) + (updatedAt == null ? 0 : System.hashCode(updatedAt));
        return hashCode;
    }
}

