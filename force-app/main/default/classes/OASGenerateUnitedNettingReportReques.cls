/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Данные, необходимые для генерации отчета: идентификатор магазина, период, за который нужен отчет, а также фильтры.\n
 */
public class OASGenerateUnitedNettingReportReques {
    /**
     * Идентификатор бизнеса.
     * @return businessId
     */
    public Long businessId { get; set; }

    /**
     * {% note warning "" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nНачало периода, включительно.\n
     * @return dateTimeFrom
     */
    public Datetime dateTimeFrom { get; set; }

    /**
     * {% note warning "" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nКонец периода, включительно. Максимальный период — 1 год.\n
     * @return dateTimeTo
     */
    public Datetime dateTimeTo { get; set; }

    /**
     * Начало периода, включительно.
     * @return dateFrom
     */
    public Date dateFrom { get; set; }

    /**
     * Конец периода, включительно. Максимальный период — 1 год.
     * @return dateTo
     */
    public Date dateTo { get; set; }

    /**
     * Номер платежного поручения.
     * @return bankOrderId
     */
    public Long bankOrderId { get; set; }

    /**
     * Дата платежного поручения.
     * @return bankOrderDateTime
     */
    public Datetime bankOrderDateTime { get; set; }

    /**
     * Список моделей, которые нужны в отчете.\n
     * @return placementPrograms
     */
    public List<OASPlacementType> placementPrograms { get; set; }

    /**
     * Список ИНН, которые нужны в отчете.
     * @return inns
     */
    public List<String> inns { get; set; }

    /**
     * Список магазинов, которые нужны в отчете.
     * @return campaignIds
     */
    public List<Long> campaignIds { get; set; }

    public OASGenerateUnitedNettingReportReques() {
        placementPrograms = new List<OASPlacementType>();
        inns = new List<String>();
        campaignIds = new List<Long>();
    }

    public static OASGenerateUnitedNettingReportReques getExample() {
        OASGenerateUnitedNettingReportReques generateUnitedNettingReportRequest = new OASGenerateUnitedNettingReportReques();
          generateUnitedNettingReportRequest.businessId = 123456789L;
          generateUnitedNettingReportRequest.dateTimeFrom = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          generateUnitedNettingReportRequest.dateTimeTo = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          generateUnitedNettingReportRequest.dateFrom = Date.newInstance(2000, 1, 23);
          generateUnitedNettingReportRequest.dateTo = Date.newInstance(2000, 1, 23);
          generateUnitedNettingReportRequest.bankOrderId = 123456789L;
          generateUnitedNettingReportRequest.bankOrderDateTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          generateUnitedNettingReportRequest.placementPrograms = new List<OASPlacementType>{OASPlacementType.getExample()};
          generateUnitedNettingReportRequest.inns = new List<String>{''};
          generateUnitedNettingReportRequest.campaignIds = new List<Long>{123456789L};
        return generateUnitedNettingReportRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASGenerateUnitedNettingReportReques) {           
            OASGenerateUnitedNettingReportReques generateUnitedNettingReportRequest = (OASGenerateUnitedNettingReportReques) obj;
            return this.businessId == generateUnitedNettingReportRequest.businessId
                && this.dateTimeFrom == generateUnitedNettingReportRequest.dateTimeFrom
                && this.dateTimeTo == generateUnitedNettingReportRequest.dateTimeTo
                && this.dateFrom == generateUnitedNettingReportRequest.dateFrom
                && this.dateTo == generateUnitedNettingReportRequest.dateTo
                && this.bankOrderId == generateUnitedNettingReportRequest.bankOrderId
                && this.bankOrderDateTime == generateUnitedNettingReportRequest.bankOrderDateTime
                && this.placementPrograms == generateUnitedNettingReportRequest.placementPrograms
                && this.inns == generateUnitedNettingReportRequest.inns
                && this.campaignIds == generateUnitedNettingReportRequest.campaignIds;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (businessId == null ? 0 : System.hashCode(businessId));
        hashCode = (17 * hashCode) + (dateTimeFrom == null ? 0 : System.hashCode(dateTimeFrom));
        hashCode = (17 * hashCode) + (dateTimeTo == null ? 0 : System.hashCode(dateTimeTo));
        hashCode = (17 * hashCode) + (dateFrom == null ? 0 : System.hashCode(dateFrom));
        hashCode = (17 * hashCode) + (dateTo == null ? 0 : System.hashCode(dateTo));
        hashCode = (17 * hashCode) + (bankOrderId == null ? 0 : System.hashCode(bankOrderId));
        hashCode = (17 * hashCode) + (bankOrderDateTime == null ? 0 : System.hashCode(bankOrderDateTime));
        hashCode = (17 * hashCode) + (placementPrograms == null ? 0 : System.hashCode(placementPrograms));
        hashCode = (17 * hashCode) + (inns == null ? 0 : System.hashCode(inns));
        hashCode = (17 * hashCode) + (campaignIds == null ? 0 : System.hashCode(campaignIds));
        return hashCode;
    }
}

