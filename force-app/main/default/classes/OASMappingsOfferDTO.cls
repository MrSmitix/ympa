/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация о товарах в каталоге.
 */
public class OASMappingsOfferDTO implements OASMappingsOfferInfoDTO {
    /**
     * Составляйте название по схеме: тип + бренд или производитель + модель + особенности, если есть (например, цвет, размер или вес) и количество в упаковке.\n\nНе включайте в название условия продажи (например, «скидка», «бесплатная доставка» и т. д.), эмоциональные характеристики («хит», «супер» и т. д.). Не пишите слова большими буквами — кроме устоявшихся названий брендов и моделей.\n\nОптимальная длина — 50–60 символов, максимальная — 256.\n\n[Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/title.html)\n
     * @return name
     */
    public String name { get; set; }

    /**
     * Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n
     * @return shopSku
     */
    public String shopSku { get; set; }

    /**
     * Категория товара в вашем магазине. Значение будет использовано для определения категории товара на Маркете в случае, если вы не передали категорию в параметре `marketCategoryId`.\n\nУказывайте конкретные категории — например, набор ножей лучше отнести к категории **Столовые приборы**, а не просто **Посуда**.\n\nВыбирайте категории, которые описывают товар, а не абстрактный признак — например, **Духи**, а не **Подарки**.\n\nЗначение будет использовано для определения категории товара на Маркете в случае, если вы не передали категорию в параметре `marketCategoryId`.\n
     * @return category
     */
    public String category { get; set; }

    /**
     * Название бренда или производителя. Должно быть записано так, как его пишет сам бренд.
     * @return vendor
     */
    public String vendor { get; set; }

    /**
     * Артикул товара от производителя.
     * @return vendorCode
     */
    public String vendorCode { get; set; }

    /**
     * Подробное описание товара: например, его преимущества и особенности.\n\nНе давайте в описании инструкций по установке и сборке. Не используйте слова «скидка», «распродажа», «дешевый», «подарок» (кроме подарочных категорий), «бесплатно», «акция», «специальная цена», «новинка», «new», «аналог», «заказ», «хит». Не указывайте никакой контактной информации и не давайте ссылок.\n\nМожно использовать теги:\n\n* \<h>, \<h1>, \<h2> и так далее — для заголовков;\n* \<br> и \<p> — для переноса строки;\n* \<ol> — для нумерованного списка;\n* \<ul> — для маркированного списка;\n* \<li> — для создания элементов списка (должен находиться внутри \<ol> или \<ul>);\n* \<div> — поддерживается, но не влияет на отображение текста.\n\nОптимальная длина — 400–600 символов, максимальная — 6000.\n\n[Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/description.html)\n
     * @return description
     */
    public String description { get; set; }

    /**
     * Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n
     * @return id
     */
    public String id { get; set; }

    /**
     * Идентификатор фида.
     * @return feedId
     */
    public Long feedId { get; set; }

    /**
     * Указывайте в виде последовательности цифр. Подойдут коды EAN-13, EAN-8, UPC-A, UPC-E или Code 128.\n\nДля книг указывайте ISBN.\n\nДля товаров [определенных категорий и торговых марок](https://yastatic.net/s3/doc-binary/src/support/market/ru/yandex-market-list-for-gtin.xlsx) штрихкод должен быть действительным кодом GTIN. Обратите внимание: внутренние штрихкоды, начинающиеся на 2 или 02, и коды формата Code 128 не являются GTIN.\n\n[Что такое GTIN](*gtin)\n\n
     * @return barcodes
     */
    public List<String> barcodes { get; set; }

    /**
     * URL фотографии товара или страницы с описанием на вашем сайте.\n\nПереданные данные не будут отображаться на витрине, но они помогут специалистам Маркета найти карточку для вашего товара.\n\nДолжен содержать один вложенный параметр url.\n
     * @return urls
     */
    public List<String> urls { get; set; }

    /**
     * Ссылки (URL) изображений товара в хорошем качестве.\n\nМожно указать до 30 ссылок. При этом изображение по первой ссылке будет основным. Оно используется в качестве изображения товара в поиске Маркета и на карточке товара. Другие изображения товара доступны в режиме просмотра увеличенных изображений.\n\nОбязательный параметр.\n\nДолжен содержать хотя бы один вложенный параметр `picture`.\n
     * @return pictures
     */
    public List<String> pictures { get; set; }

    /**
     * Изготовитель товара: компания, которая произвела товар, ее адрес и регистрационный номер (если есть).\n\nНеобязательный параметр.\n
     * @return manufacturer
     */
    public String manufacturer { get; set; }

    /**
     * Список стран, в которых произведен товар.\n\nОбязательный параметр.\n\nДолжен содержать хотя бы одну, но не больше 5 стран.\n
     * @return manufacturerCountries
     */
    public List<String> manufacturerCountries { get; set; }

    /**
     * Минимальное количество единиц товара, которое вы поставляете на склад.\n\nНапример, если вы поставляете детское питание партиями минимум по 10 коробок, а в каждой коробке по 6 баночек, укажите значение 60.\n
     * @return minShipment
     */
    public Integer minShipment { get; set; }

    /**
     * Количество единиц товара в одной упаковке, которую вы поставляете на склад.\n\nНапример, если вы поставляете детское питание коробками по 6 баночек, укажите значение 6.\n
     * @return transportUnitSize
     */
    public Integer transportUnitSize { get; set; }

    /**
     * Добавочная партия: по сколько единиц товара можно добавлять к минимальному количеству minShipment.\n\nНапример, если вы поставляете детское питание партиями минимум по 10 коробок и хотите добавлять к минимальной партии по 2 коробки, а в каждой коробке по 6 баночек, укажите значение 12.\n
     * @return quantumOfSupply
     */
    public Integer quantumOfSupply { get; set; }

    /**
     * Срок, за который продавец поставляет товары на склад, в днях.
     * @return deliveryDurationDays
     */
    public Integer deliveryDurationDays { get; set; }

    /**
     * Сколько мест (если больше одного) занимает товар.\n\nПараметр указывается, только если товар занимает больше одного места (например, кондиционер занимает два места: внешний и внутренний блоки в двух коробках). Если товар занимает одно место, не указывайте этот параметр.\n
     * @return boxCount
     */
    public Integer boxCount { get; set; }

    /**
     * Список кодов товара в единой Товарной номенклатуре внешнеэкономической деятельности (ТН ВЭД).\n\nОбязательный параметр, если товар подлежит особому учету (например, в системе «Меркурий» как продукция животного происхождения или в системе «Честный ЗНАК»).\n\nМожет содержать только один вложенный код ТН ВЭД.\n
     * @return customsCommodityCodes
     */
    public List<String> customsCommodityCodes { get; set; }

    /**
     * Get weightDimensions
     * @return weightDimensions
     */
    public OASOfferWeightDimensionsDTO weightDimensions { get; set; }

    /**
     * Дни недели, в которые продавец поставляет товары на склад.
     * @return supplyScheduleDays
     */
    public List<OASDayOfWeekType> supplyScheduleDays { get; set; }

    /**
     * {% note warning "" %}\n\nЭтот параметр устарел. Вместо него используйте `shelfLife`. Совместное использование обоих параметров приведет к ошибке.\n\n{% endnote %}\n\nСрок годности: через сколько дней товар станет непригоден для использования.\n
     * @return shelfLifeDays
     */
    public Integer shelfLifeDays { get; set; }

    /**
     * {% note warning "" %}\n\nЭтот параметр устарел. Вместо него используйте `lifeTime`. Совместное использование обоих параметров приведет к ошибке.\n\n{% endnote %}\n\nСрок службы: сколько дней товар будет исправно выполнять свою функцию, а изготовитель — нести ответственность за его существенные недостатки.\n
     * @return lifeTimeDays
     */
    public Integer lifeTimeDays { get; set; }

    /**
     * Гарантийный срок товара: сколько дней возможно обслуживание и ремонт товара или возврат денег, а изготовитель или продавец будет нести ответственность за недостатки товара.\n
     * @return guaranteePeriodDays
     */
    public Integer guaranteePeriodDays { get; set; }

    /**
     * Get processingState
     * @return processingState
     */
    public OASOfferProcessingStateDTO processingState { get; set; }

    /**
     * Get availability
     * @return availability
     */
    public OASOfferAvailabilityStatusType availability { get; set; }

    /**
     * Get shelfLife
     * @return shelfLife
     */
    public OASTimePeriodDTO shelfLife { get; set; }

    /**
     * Get lifeTime
     * @return lifeTime
     */
    public OASTimePeriodDTO lifeTime { get; set; }

    /**
     * Get guaranteePeriod
     * @return guaranteePeriod
     */
    public OASTimePeriodDTO guaranteePeriod { get; set; }

    /**
     * Номер документа на товар.\n\nПеред указанием номера документ нужно загрузить в кабинете продавца на Маркете. [Инструкция](https://yandex.ru/support/marketplace/assortment/restrictions/certificates.html)\n
     * @return certificate
     */
    public String certificate { get; set; }

    /**
     * Цена на товар в рублях.
     * @return price
     */
    public Double price { get; set; }

    public OASMappingsOfferDTO() {
        barcodes = new List<String>();
        urls = new List<String>();
        pictures = new List<String>();
        manufacturerCountries = new List<String>();
        customsCommodityCodes = new List<String>();
        supplyScheduleDays = new List<OASDayOfWeekType>();
    }

    public static OASMappingsOfferDTO getExample() {
        OASMappingsOfferDTO mappingsOfferDTO = new OASMappingsOfferDTO();
          mappingsOfferDTO.name = 'Ударная дрель Makita HP1630, 710 Вт';
          mappingsOfferDTO.shopSku = '';
          mappingsOfferDTO.category = '';
          mappingsOfferDTO.vendor = 'LEVENHUK';
          mappingsOfferDTO.vendorCode = 'VNDR-0005A';
          mappingsOfferDTO.description = '';
          mappingsOfferDTO.id = '';
          mappingsOfferDTO.feedId = 123456789L;
          mappingsOfferDTO.barcodes = new List<String>{'46012300000000'};
          mappingsOfferDTO.urls = new List<String>{''};
          mappingsOfferDTO.pictures = new List<String>{''};
          mappingsOfferDTO.manufacturer = '';
          mappingsOfferDTO.manufacturerCountries = new List<String>{''};
          mappingsOfferDTO.minShipment = 0;
          mappingsOfferDTO.transportUnitSize = 0;
          mappingsOfferDTO.quantumOfSupply = 0;
          mappingsOfferDTO.deliveryDurationDays = 0;
          mappingsOfferDTO.boxCount = 0;
          mappingsOfferDTO.customsCommodityCodes = new List<String>{''};
          mappingsOfferDTO.weightDimensions = OASOfferWeightDimensionsDTO.getExample();
          mappingsOfferDTO.supplyScheduleDays = new List<OASDayOfWeekType>{OASDayOfWeekType.getExample()};
          mappingsOfferDTO.shelfLifeDays = 0;
          mappingsOfferDTO.lifeTimeDays = 0;
          mappingsOfferDTO.guaranteePeriodDays = 0;
          mappingsOfferDTO.processingState = OASOfferProcessingStateDTO.getExample();
          mappingsOfferDTO.availability = OASOfferAvailabilityStatusType.getExample();
          mappingsOfferDTO.shelfLife = OASTimePeriodDTO.getExample();
          mappingsOfferDTO.lifeTime = OASTimePeriodDTO.getExample();
          mappingsOfferDTO.guaranteePeriod = OASTimePeriodDTO.getExample();
          mappingsOfferDTO.certificate = '';
          mappingsOfferDTO.price = 1.3579;
        return mappingsOfferDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASMappingsOfferDTO) {           
            OASMappingsOfferDTO mappingsOfferDTO = (OASMappingsOfferDTO) obj;
            return this.name == mappingsOfferDTO.name
                && this.shopSku == mappingsOfferDTO.shopSku
                && this.category == mappingsOfferDTO.category
                && this.vendor == mappingsOfferDTO.vendor
                && this.vendorCode == mappingsOfferDTO.vendorCode
                && this.description == mappingsOfferDTO.description
                && this.id == mappingsOfferDTO.id
                && this.feedId == mappingsOfferDTO.feedId
                && this.barcodes == mappingsOfferDTO.barcodes
                && this.urls == mappingsOfferDTO.urls
                && this.pictures == mappingsOfferDTO.pictures
                && this.manufacturer == mappingsOfferDTO.manufacturer
                && this.manufacturerCountries == mappingsOfferDTO.manufacturerCountries
                && this.minShipment == mappingsOfferDTO.minShipment
                && this.transportUnitSize == mappingsOfferDTO.transportUnitSize
                && this.quantumOfSupply == mappingsOfferDTO.quantumOfSupply
                && this.deliveryDurationDays == mappingsOfferDTO.deliveryDurationDays
                && this.boxCount == mappingsOfferDTO.boxCount
                && this.customsCommodityCodes == mappingsOfferDTO.customsCommodityCodes
                && this.weightDimensions == mappingsOfferDTO.weightDimensions
                && this.supplyScheduleDays == mappingsOfferDTO.supplyScheduleDays
                && this.shelfLifeDays == mappingsOfferDTO.shelfLifeDays
                && this.lifeTimeDays == mappingsOfferDTO.lifeTimeDays
                && this.guaranteePeriodDays == mappingsOfferDTO.guaranteePeriodDays
                && this.processingState == mappingsOfferDTO.processingState
                && this.availability == mappingsOfferDTO.availability
                && this.shelfLife == mappingsOfferDTO.shelfLife
                && this.lifeTime == mappingsOfferDTO.lifeTime
                && this.guaranteePeriod == mappingsOfferDTO.guaranteePeriod
                && this.certificate == mappingsOfferDTO.certificate
                && this.price == mappingsOfferDTO.price;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (shopSku == null ? 0 : System.hashCode(shopSku));
        hashCode = (17 * hashCode) + (category == null ? 0 : System.hashCode(category));
        hashCode = (17 * hashCode) + (vendor == null ? 0 : System.hashCode(vendor));
        hashCode = (17 * hashCode) + (vendorCode == null ? 0 : System.hashCode(vendorCode));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (feedId == null ? 0 : System.hashCode(feedId));
        hashCode = (17 * hashCode) + (barcodes == null ? 0 : System.hashCode(barcodes));
        hashCode = (17 * hashCode) + (urls == null ? 0 : System.hashCode(urls));
        hashCode = (17 * hashCode) + (pictures == null ? 0 : System.hashCode(pictures));
        hashCode = (17 * hashCode) + (manufacturer == null ? 0 : System.hashCode(manufacturer));
        hashCode = (17 * hashCode) + (manufacturerCountries == null ? 0 : System.hashCode(manufacturerCountries));
        hashCode = (17 * hashCode) + (minShipment == null ? 0 : System.hashCode(minShipment));
        hashCode = (17 * hashCode) + (transportUnitSize == null ? 0 : System.hashCode(transportUnitSize));
        hashCode = (17 * hashCode) + (quantumOfSupply == null ? 0 : System.hashCode(quantumOfSupply));
        hashCode = (17 * hashCode) + (deliveryDurationDays == null ? 0 : System.hashCode(deliveryDurationDays));
        hashCode = (17 * hashCode) + (boxCount == null ? 0 : System.hashCode(boxCount));
        hashCode = (17 * hashCode) + (customsCommodityCodes == null ? 0 : System.hashCode(customsCommodityCodes));
        hashCode = (17 * hashCode) + (weightDimensions == null ? 0 : System.hashCode(weightDimensions));
        hashCode = (17 * hashCode) + (supplyScheduleDays == null ? 0 : System.hashCode(supplyScheduleDays));
        hashCode = (17 * hashCode) + (shelfLifeDays == null ? 0 : System.hashCode(shelfLifeDays));
        hashCode = (17 * hashCode) + (lifeTimeDays == null ? 0 : System.hashCode(lifeTimeDays));
        hashCode = (17 * hashCode) + (guaranteePeriodDays == null ? 0 : System.hashCode(guaranteePeriodDays));
        hashCode = (17 * hashCode) + (processingState == null ? 0 : System.hashCode(processingState));
        hashCode = (17 * hashCode) + (availability == null ? 0 : System.hashCode(availability));
        hashCode = (17 * hashCode) + (shelfLife == null ? 0 : System.hashCode(shelfLife));
        hashCode = (17 * hashCode) + (lifeTime == null ? 0 : System.hashCode(lifeTime));
        hashCode = (17 * hashCode) + (guaranteePeriod == null ? 0 : System.hashCode(guaranteePeriod));
        hashCode = (17 * hashCode) + (certificate == null ? 0 : System.hashCode(certificate));
        hashCode = (17 * hashCode) + (price == null ? 0 : System.hashCode(price));
        return hashCode;
    }
}

