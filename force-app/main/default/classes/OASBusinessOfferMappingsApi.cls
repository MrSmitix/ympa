/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASBusinessOfferMappingsApi {
    OASClient client;

    public OASBusinessOfferMappingsApi(OASClient client) {
        this.client = client;
    }

    public OASBusinessOfferMappingsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Добавление товаров в архив
     * Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.\n\n{% note warning &quot;В архив нельзя отправить товар, который хранится на складе Маркета&quot; %}\n\nВначале такой товар нужно распродать или вывезти.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSAddOffersToArchiveRequest  (required)
     * @return OASAddOffersToArchiveResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAddOffersToArchiveResponse addOffersToArchive(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSAddOffersToArchiveRequest'), 'oaSAddOffersToArchiveRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAddOffersToArchiveResponse) client.invoke(
            'POST', '/businesses/{businessId}/offer-mappings/archive',
            (OASAddOffersToArchiveRequest) params.get('oaSAddOffersToArchiveRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASAddOffersToArchiveResponse.class
        );
    }
    /**
     * Удаление товаров из каталога
     * Удаляет товары из каталога.\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSDeleteOffersRequest  (required)
     * @return OASDeleteOffersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASDeleteOffersResponse deleteOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSDeleteOffersRequest'), 'oaSDeleteOffersRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASDeleteOffersResponse) client.invoke(
            'POST', '/businesses/{businessId}/offer-mappings/delete',
            (OASDeleteOffersRequest) params.get('oaSDeleteOffersRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASDeleteOffersResponse.class
        );
    }
    /**
     * Удаление товаров из архива
     * Восстанавливает товары из архива.\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSDeleteOffersFromArchiveRequest  (required)
     * @return OASDeleteOffersFromArchiveResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASDeleteOffersFromArchiveResponse deleteOffersFromArchive(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSDeleteOffersFromArchiveRequest'), 'oaSDeleteOffersFromArchiveRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASDeleteOffersFromArchiveResponse) client.invoke(
            'POST', '/businesses/{businessId}/offer-mappings/unarchive',
            (OASDeleteOffersFromArchiveRequest) params.get('oaSDeleteOffersFromArchiveRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASDeleteOffersFromArchiveResponse.class
        );
    }
    /**
     * Информация о товарах в каталоге
     * Возвращает список товаров в каталоге, их категории на Маркете и характеристики каждого товара.\n\nМожно использовать тремя способами:\n* задать список интересующих SKU;\n* задать фильтр — в этом случае результаты возвращаются постранично;\n* не передавать тело запроса, чтобы получить список всех товаров в каталоге.\n\n|**⚙️ Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @param oaSGetOfferMappingsRequest  (optional)
     * @return OASGetOfferMappingsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetOfferMappingsResponse getOfferMappings(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetOfferMappingsResponse) client.invoke(
            'POST', '/businesses/{businessId}/offer-mappings',
            (OASGetOfferMappingsRequest) params.get('oaSGetOfferMappingsRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetOfferMappingsResponse.class
        );
    }
    /**
     * Просмотр карточек на Маркете, которые подходят вашим товарам
     * Возвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.\n\nПользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточки по предоставленным вами данным.\n\n**Как пользоваться запросом**\n\n1. Передайте Маркету список товаров, которые нужно проверить.\n2. В ответ вы получите список SKU на Маркете с расшифровкой: названием, идентификатором модели, категорией.\n3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида &#x60;https://market.yandex.ru/product/&lt;marketModelId&gt;?sku&#x3D;&lt;marketSku&gt;&#x60;.\n4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать &#x60;marketSKU&#x60;, который ему подходит по вашему мнению.\n\n{% note info &quot;𝓠 Как определить &#x60;marketSku&#x60; товара, найденного на Маркете?&quot; %}\n\n𝓐 Он есть в адресе страницы товара — расположен после &#x60;sku&#x3D;&#x60;.\n\nНапример, &#x60;https://market.yandex.ru/product--yandex-kniga/484830016?sku&#x3D;484830016&#x60;\n\n{% endnote %}\n\n|**⚙️ Лимит:** 100 000 товаров в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSGetSuggestedOfferMappingsRequest  (optional)
     * @return OASGetSuggestedOfferMappingsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetSuggestedOfferMappingsResponse getSuggestedOfferMappings(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetSuggestedOfferMappingsResponse) client.invoke(
            'POST', '/businesses/{businessId}/offer-mappings/suggestions',
            (OASGetSuggestedOfferMappingsRequest) params.get('oaSGetSuggestedOfferMappingsRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetSuggestedOfferMappingsResponse.class
        );
    }
    /**
     * Добавление товаров в каталог и изменение информации о них
     * Добавляет товары в каталог, передает их категории на Маркете и характеристики, необходимые для этих категории. Также редактирует информацию об уже имеющихся товарах.\n\nСписок категорий Маркета можно получить с помощью запроса [POST categories/tree](../../reference/categories/getCategoriesTree.md), а характеристики товаров по категориям с помощью [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).\n\nЧтобы **добавить новый товар**, передайте его с новым идентификатором, который раньше никогда не использовался в каталоге. Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой. Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**SKU на Маркете**) в поле &#x60;marketSKU&#x60;.\n\nДля **новых товаров** обязательно укажите параметры: &#x60;offerId&#x60;, &#x60;name&#x60;, &#x60;marketCategoryId&#x60; или &#x60;category&#x60;, &#x60;pictures&#x60;, &#x60;vendor&#x60;, &#x60;description&#x60;.\n\nЧтобы **отредактировать информацию о товаре**, передайте новые данные, указав в &#x60;offerId&#x60; соответствующий **ваш SKU**. Поля, в которых ничего не меняется, можно не передавать.\n\nЧтобы **удалить характеристики**, которые заданы в параметрах с типом &#x60;string&#x60;, передайте пустое значение.\n\nПараметр &#x60;offerId&#x60; должен быть **уникальным** для всех товаров, которые вы передаете.\n\n{% note warning &quot;Правила использования SKU&quot; %}\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n{% endnote %}\n\n{% note info &quot;Данные в каталоге обновляются не мгновенно&quot; %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSUpdateOfferMappingsRequest  (required)
     * @return OASUpdateOfferMappingsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASUpdateOfferMappingsResponse updateOfferMappings(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSUpdateOfferMappingsRequest'), 'oaSUpdateOfferMappingsRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASUpdateOfferMappingsResponse) client.invoke(
            'POST', '/businesses/{businessId}/offer-mappings/update',
            (OASUpdateOfferMappingsRequest) params.get('oaSUpdateOfferMappingsRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASUpdateOfferMappingsResponse.class
        );
    }
}
