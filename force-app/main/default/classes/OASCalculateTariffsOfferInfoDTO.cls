/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Стоимость услуг.
 */
public class OASCalculateTariffsOfferInfoDTO {
    /**
     * Get offer
     * @return offer
     */
    public OASCalculateTariffsOfferDTO offer { get; set; }

    /**
     * Список услуг и их стоимость.\n\nПо некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели FBS стоимость услуги `SORTING` (обработка заказа) зависит от способа отгрузки и количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/).\n
     * @return tariffs
     */
    public List<OASCalculatedTariffDTO> tariffs { get; set; }

    public OASCalculateTariffsOfferInfoDTO() {
        tariffs = new List<OASCalculatedTariffDTO>();
    }

    public static OASCalculateTariffsOfferInfoDTO getExample() {
        OASCalculateTariffsOfferInfoDTO calculateTariffsOfferInfoDTO = new OASCalculateTariffsOfferInfoDTO();
          calculateTariffsOfferInfoDTO.offer = OASCalculateTariffsOfferDTO.getExample();
          calculateTariffsOfferInfoDTO.tariffs = new List<OASCalculatedTariffDTO>{OASCalculatedTariffDTO.getExample()};
        return calculateTariffsOfferInfoDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCalculateTariffsOfferInfoDTO) {           
            OASCalculateTariffsOfferInfoDTO calculateTariffsOfferInfoDTO = (OASCalculateTariffsOfferInfoDTO) obj;
            return this.offer == calculateTariffsOfferInfoDTO.offer
                && this.tariffs == calculateTariffsOfferInfoDTO.tariffs;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (offer == null ? 0 : System.hashCode(offer));
        hashCode = (17 * hashCode) + (tariffs == null ? 0 : System.hashCode(tariffs));
        return hashCode;
    }
}

