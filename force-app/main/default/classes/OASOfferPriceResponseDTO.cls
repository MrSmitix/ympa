/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация об установленной цене на товар.
 */
public class OASOfferPriceResponseDTO {
    /**
     * Идентификатор предложения из прайс-листа.
     * @return id
     */
    public String id { get; set; }

    /**
     * Get price
     * @return price
     */
    public OASPriceDTO price { get; set; }

    /**
     * SKU на Маркете.
     * @return marketSku
     */
    public Long marketSku { get; set; }

    /**
     * Дата и время последнего обновления цены на товар.
     * @return updatedAt
     */
    public Datetime updatedAt { get; set; }

    public static OASOfferPriceResponseDTO getExample() {
        OASOfferPriceResponseDTO offerPriceResponseDTO = new OASOfferPriceResponseDTO();
          offerPriceResponseDTO.id = '';
          offerPriceResponseDTO.price = OASPriceDTO.getExample();
          offerPriceResponseDTO.marketSku = 123456789L;
          offerPriceResponseDTO.updatedAt = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
        return offerPriceResponseDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOfferPriceResponseDTO) {           
            OASOfferPriceResponseDTO offerPriceResponseDTO = (OASOfferPriceResponseDTO) obj;
            return this.id == offerPriceResponseDTO.id
                && this.price == offerPriceResponseDTO.price
                && this.marketSku == offerPriceResponseDTO.marketSku
                && this.updatedAt == offerPriceResponseDTO.updatedAt;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (price == null ? 0 : System.hashCode(price));
        hashCode = (17 * hashCode) + (marketSku == null ? 0 : System.hashCode(marketSku));
        hashCode = (17 * hashCode) + (updatedAt == null ? 0 : System.hashCode(updatedAt));
        return hashCode;
    }
}

