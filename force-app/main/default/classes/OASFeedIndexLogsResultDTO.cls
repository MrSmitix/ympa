/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Результат выполнения запроса отчета по индексации прайс-листа.
 */
public class OASFeedIndexLogsResultDTO {
    /**
     * Get feed
     * @return feed
     */
    public OASFeedIndexLogsFeedDTO feed { get; set; }

    /**
     * Список отчетов по индексации прайс-листа.
     * @return indexLogRecords
     */
    public List<OASFeedIndexLogsRecordDTO> indexLogRecords { get; set; }

    /**
     * Количество отчетов на всех страницах выходных данных.
     * @return total
     */
    public Long total { get; set; }

    public OASFeedIndexLogsResultDTO() {
        indexLogRecords = new List<OASFeedIndexLogsRecordDTO>();
    }

    public static OASFeedIndexLogsResultDTO getExample() {
        OASFeedIndexLogsResultDTO feedIndexLogsResultDTO = new OASFeedIndexLogsResultDTO();
          feedIndexLogsResultDTO.feed = OASFeedIndexLogsFeedDTO.getExample();
          feedIndexLogsResultDTO.indexLogRecords = new List<OASFeedIndexLogsRecordDTO>{OASFeedIndexLogsRecordDTO.getExample()};
          feedIndexLogsResultDTO.total = 123456789L;
        return feedIndexLogsResultDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASFeedIndexLogsResultDTO) {           
            OASFeedIndexLogsResultDTO feedIndexLogsResultDTO = (OASFeedIndexLogsResultDTO) obj;
            return this.feed == feedIndexLogsResultDTO.feed
                && this.indexLogRecords == feedIndexLogsResultDTO.indexLogRecords
                && this.total == feedIndexLogsResultDTO.total;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (feed == null ? 0 : System.hashCode(feed));
        hashCode = (17 * hashCode) + (indexLogRecords == null ? 0 : System.hashCode(indexLogRecords));
        hashCode = (17 * hashCode) + (total == null ? 0 : System.hashCode(total));
        return hashCode;
    }
}

