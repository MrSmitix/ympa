/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Данные, необходимые для генерации отчета.
 */
public class OASGenerateShowsSalesReportRequest {
    /**
     * Идентификатор бизнеса.\n\nУказывается, если нужно составить отчет по всем магазинам бизнеса. В запросе обязательно должен быть либо `businessID`, либо `campaignId`, но не оба сразу.\n
     * @return businessId
     */
    public Long businessId { get; set; }

    /**
     * Идентификатор кампании.\n\nУказывается, если нужно составить отчет по конкретному магазину. В запросе обязательно должен быть либо `businessID`, либо `campaignId`, но не оба сразу.\n
     * @return campaignId
     */
    public Long campaignId { get; set; }

    /**
     * Начало периода, включительно.
     * @return dateFrom
     */
    public Date dateFrom { get; set; }

    /**
     * Конец периода, включительно.
     * @return dateTo
     */
    public Date dateTo { get; set; }

    /**
     * Get grouping
     * @return grouping
     */
    public OASShowsSalesGroupingType grouping { get; set; }

    public static OASGenerateShowsSalesReportRequest getExample() {
        OASGenerateShowsSalesReportRequest generateShowsSalesReportRequest = new OASGenerateShowsSalesReportRequest();
          generateShowsSalesReportRequest.businessId = 123456789L;
          generateShowsSalesReportRequest.campaignId = 123456789L;
          generateShowsSalesReportRequest.dateFrom = Date.newInstance(2000, 1, 23);
          generateShowsSalesReportRequest.dateTo = Date.newInstance(2000, 1, 23);
          generateShowsSalesReportRequest.grouping = OASShowsSalesGroupingType.getExample();
        return generateShowsSalesReportRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASGenerateShowsSalesReportRequest) {           
            OASGenerateShowsSalesReportRequest generateShowsSalesReportRequest = (OASGenerateShowsSalesReportRequest) obj;
            return this.businessId == generateShowsSalesReportRequest.businessId
                && this.campaignId == generateShowsSalesReportRequest.campaignId
                && this.dateFrom == generateShowsSalesReportRequest.dateFrom
                && this.dateTo == generateShowsSalesReportRequest.dateTo
                && this.grouping == generateShowsSalesReportRequest.grouping;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (businessId == null ? 0 : System.hashCode(businessId));
        hashCode = (17 * hashCode) + (campaignId == null ? 0 : System.hashCode(campaignId));
        hashCode = (17 * hashCode) + (dateFrom == null ? 0 : System.hashCode(dateFrom));
        hashCode = (17 * hashCode) + (dateTo == null ? 0 : System.hashCode(dateTo));
        hashCode = (17 * hashCode) + (grouping == null ? 0 : System.hashCode(grouping));
        return hashCode;
    }
}

