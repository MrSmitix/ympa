/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация о заказе.
 */
public class OASOrdersStatsOrderDTO {
    /**
     * Идентификатор заказа.
     * @return id
     */
    public Long id { get; set; }

    /**
     * Дата создания заказа.\n\nФормат даты: `ГГГГ-ММ-ДД`.\n
     * @return creationDate
     */
    public Date creationDate { get; set; }

    /**
     * Дата и время, когда статус заказа был изменен в последний раз.\n\nФормат даты и времени: ISO 8601. Например, `2017-11-21T00:00:00`. Часовой пояс — UTC+03:00 (Москва).\n
     * @return statusUpdateDate
     */
    public Datetime statusUpdateDate { get; set; }

    /**
     * Get status
     * @return status
     */
    public OASOrderStatsStatusType status { get; set; }

    /**
     * Идентификатор заказа в информационной системе магазина.
     * @return partnerOrderId
     */
    public String partnerOrderId { get; set; }

    /**
     * Get paymentType
     * @return paymentType
     */
    public OASOrdersStatsOrderPaymentType paymentType { get; set; }

    /**
     * Тип заказа:\n\n* `false` — настоящий заказ покупателя.\n\n* `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета.\n
     * @return fake
     */
    public Boolean fake { get; set; }

    /**
     * Get deliveryRegion
     * @return deliveryRegion
     */
    public OASOrdersStatsDeliveryRegionDTO deliveryRegion { get; set; }

    /**
     * Список товаров в заказе после возможных изменений.
     * @return items
     */
    public List<OASOrdersStatsItemDTO> items { get; set; }

    /**
     * Список товаров в заказе до изменений.
     * @return initialItems
     */
    public List<OASOrdersStatsItemDTO> initialItems { get; set; }

    /**
     * Информация о денежных переводах по заказу.
     * @return payments
     */
    public List<OASOrdersStatsPaymentDTO> payments { get; set; }

    /**
     * Информация о комиссиях за заказ.
     * @return commissions
     */
    public List<OASOrdersStatsCommissionDTO> commissions { get; set; }

    public OASOrdersStatsOrderDTO() {
        items = new List<OASOrdersStatsItemDTO>();
        initialItems = new List<OASOrdersStatsItemDTO>();
        payments = new List<OASOrdersStatsPaymentDTO>();
        commissions = new List<OASOrdersStatsCommissionDTO>();
    }

    public static OASOrdersStatsOrderDTO getExample() {
        OASOrdersStatsOrderDTO ordersStatsOrderDTO = new OASOrdersStatsOrderDTO();
          ordersStatsOrderDTO.id = 123456789L;
          ordersStatsOrderDTO.creationDate = Date.newInstance(2000, 1, 23);
          ordersStatsOrderDTO.statusUpdateDate = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          ordersStatsOrderDTO.status = OASOrderStatsStatusType.getExample();
          ordersStatsOrderDTO.partnerOrderId = '';
          ordersStatsOrderDTO.paymentType = OASOrdersStatsOrderPaymentType.getExample();
          ordersStatsOrderDTO.fake = true;
          ordersStatsOrderDTO.deliveryRegion = OASOrdersStatsDeliveryRegionDTO.getExample();
          ordersStatsOrderDTO.items = new List<OASOrdersStatsItemDTO>{OASOrdersStatsItemDTO.getExample()};
          ordersStatsOrderDTO.initialItems = new List<OASOrdersStatsItemDTO>{OASOrdersStatsItemDTO.getExample()};
          ordersStatsOrderDTO.payments = new List<OASOrdersStatsPaymentDTO>{OASOrdersStatsPaymentDTO.getExample()};
          ordersStatsOrderDTO.commissions = new List<OASOrdersStatsCommissionDTO>{OASOrdersStatsCommissionDTO.getExample()};
        return ordersStatsOrderDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOrdersStatsOrderDTO) {           
            OASOrdersStatsOrderDTO ordersStatsOrderDTO = (OASOrdersStatsOrderDTO) obj;
            return this.id == ordersStatsOrderDTO.id
                && this.creationDate == ordersStatsOrderDTO.creationDate
                && this.statusUpdateDate == ordersStatsOrderDTO.statusUpdateDate
                && this.status == ordersStatsOrderDTO.status
                && this.partnerOrderId == ordersStatsOrderDTO.partnerOrderId
                && this.paymentType == ordersStatsOrderDTO.paymentType
                && this.fake == ordersStatsOrderDTO.fake
                && this.deliveryRegion == ordersStatsOrderDTO.deliveryRegion
                && this.items == ordersStatsOrderDTO.items
                && this.initialItems == ordersStatsOrderDTO.initialItems
                && this.payments == ordersStatsOrderDTO.payments
                && this.commissions == ordersStatsOrderDTO.commissions;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (creationDate == null ? 0 : System.hashCode(creationDate));
        hashCode = (17 * hashCode) + (statusUpdateDate == null ? 0 : System.hashCode(statusUpdateDate));
        hashCode = (17 * hashCode) + (status == null ? 0 : System.hashCode(status));
        hashCode = (17 * hashCode) + (partnerOrderId == null ? 0 : System.hashCode(partnerOrderId));
        hashCode = (17 * hashCode) + (paymentType == null ? 0 : System.hashCode(paymentType));
        hashCode = (17 * hashCode) + (fake == null ? 0 : System.hashCode(fake));
        hashCode = (17 * hashCode) + (deliveryRegion == null ? 0 : System.hashCode(deliveryRegion));
        hashCode = (17 * hashCode) + (items == null ? 0 : System.hashCode(items));
        hashCode = (17 * hashCode) + (initialItems == null ? 0 : System.hashCode(initialItems));
        hashCode = (17 * hashCode) + (payments == null ? 0 : System.hashCode(payments));
        hashCode = (17 * hashCode) + (commissions == null ? 0 : System.hashCode(commissions));
        return hashCode;
    }
}

