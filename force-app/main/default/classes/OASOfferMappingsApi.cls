/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASOfferMappingsApi {
    OASClient client;

    public OASOfferMappingsApi(OASClient client) {
        this.client = client;
    }

    public OASOfferMappingsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Список товаров в каталоге
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).\n\n{% endnote %}\n\nДля каждого товара, который вы размещаете на Маркете, возвращается информация о карточках Маркета, к которым привязан этот товар:\n\n* Идентификатор текущей карточки (marketSku), карточки, которая проходит модерацию и последней отклоненной карточки.\n* Описание товара, которое указано на карточке Маркета. Например, размер упаковки и вес товара.\n\nРезультаты возвращаются постранично. Выходные данные содержат идентификатор следующей страницы.\n\n{% note info %}\n\nКоличество товаров в каталоге магазина считается по данным за последние семь дней (не включая сегодня).\n\n{% endnote %}\n\n|**⚙️ Лимит:** рассчитывается по [формуле](*rule)|\n|-|\n\n[//]: &lt;&gt; (rule: суточный лимит товаров — количество товаров в каталоге магазина * 25)\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param offerId Идентификатор товара в каталоге. (optional, default to new List<String>())
     * @param shopSku Ваш SKU товара.\n\nПараметр может быть указан несколько раз, например:\n\n&#x60;&#x60;&#x60;\n...shop_sku&#x3D;123&amp;shop_sku&#x3D;129&amp;shop_sku&#x3D;141...\n&#x60;&#x60;&#x60;\n\nВ запросе можно указать либо параметр &#x60;shopSku&#x60;, либо любые параметры для фильтрации товаров. Совместное использование параметра &#x60;shopSku&#x60; и параметров для фильтрации приведет к ошибке.\n (optional, default to new List<String>())
     * @param mappingKind Тип маппинга. (optional)
     * @param status Фильтрация по статусу публикации товара:\n\n* &#x60;READY&#x60; — товар прошел модерацию.\n* &#x60;IN_WORK&#x60; — товар проходит модерацию.\n* &#x60;NEED_CONTENT&#x60; — для товара без SKU на Маркете marketSku нужно найти карточку самостоятельно или создать ее.\n* &#x60;NEED_INFO&#x60; — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара.\n* &#x60;REJECTED&#x60; — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары.\n* &#x60;SUSPENDED&#x60; — товар не прошел модерацию, так как Маркет пока не размещает подобные товары.\n* &#x60;OTHER&#x60; — товар не прошел модерацию по другой причине.\n\nМожно указать несколько статусов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:\n\n&#x60;&#x60;&#x60;\n...status&#x3D;READY,IN_WORK...\n...status&#x3D;READY&amp;status&#x3D;IN_WORK...\n&#x60;&#x60;&#x60;\n\nВ запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке.\n (optional, default to new List<OASOfferProcessingStatusType>())
     * @param availability Фильтрация по планам поставок товара:\n\n* &#x60;ACTIVE&#x60; — поставки будут.\n* &#x60;INACTIVE&#x60; — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять.\n* &#x60;DELISTED&#x60; — архив: товар закончился на складе, и его поставок больше не будет.\n\nМожно указать несколько значений в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:\n\n&#x60;&#x60;&#x60;\n...availability&#x3D;INACTIVE,DELISTED...\n...availability&#x3D;INACTIVE&amp;availability&#x3D;DELISTED...\n&#x60;&#x60;&#x60;\n\nВ запросе можно указать либо параметр &#x60;shopSku&#x60;, либо любые параметры для фильтрации товаров. Совместное использование параметра &#x60;shopSku&#x60; и параметров для фильтрации приведет к ошибке.\n (optional, default to new List<OASOfferAvailabilityStatusType>())
     * @param categoryId Фильтрация по идентификатору категории на Маркете.\n\nЧтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).\n\nМожно указать несколько идентификаторов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:\n\n&#x60;&#x60;&#x60;\n...category_id&#x3D;14727164,14382343...\n...category_id&#x3D;14727164&amp;category_id&#x3D;14382343...\n&#x60;&#x60;&#x60;\n\nВ запросе можно указать либо параметр &#x60;shopSku&#x60;, либо любые параметры для фильтрации товаров. Совместное использование параметра &#x60;shopSku&#x60; и параметров для фильтрации приведет к ошибке.\n (optional, default to new List<Integer>())
     * @param vendor Фильтрация по бренду товара.\n\nМожно указать несколько брендов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:\n\n&#x60;&#x60;&#x60;\n...vendor&#x3D;Aqua%20Minerale,Borjomi...\n...vendor&#x3D;Aqua%20Minerale&amp;vendor&#x3D;Borjomi...\n&#x60;&#x60;&#x60;\n\nЧтобы товар попал в результаты фильтрации, его бренд должен точно совпадать с одним из указанных в запросе. Например, если указан бренд Schwarzkopf, то в результатах не будет товаров Schwarzkopf Professional.\n\nЕсли в названии бренда есть символы, которые не входят в таблицу ASCII (в том числе кириллические символы), используйте для них URL-кодирование. Например, пробел — %20, апостроф «\&#39;» — %27 и т. д. Подробнее см. в разделе [Кодирование URL русскоязычной Википедии](https://ru.wikipedia.org/wiki/URL#Кодирование_URL).\n\nВ запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке.\n (optional, default to new List<String>())
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @return OASGetOfferMappingEntriesResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetOfferMappingEntriesResponse getOfferMappingEntries(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('offer_id', (List<String>) params.get('offerId'), 'csv'));
        query.addAll(client.makeParam('shop_sku', (List<String>) params.get('shopSku'), 'csv'));
        query.addAll(client.makeParam('mapping_kind', (OASOfferMappingKindType) params.get('mappingKind')));
        query.addAll(client.makeParam('status', (List<OASOfferProcessingStatusType>) params.get('status'), 'csv'));
        query.addAll(client.makeParam('availability', (List<OASOfferAvailabilityStatusType>) params.get('availability'), 'csv'));
        query.addAll(client.makeParam('category_id', (List<Integer>) params.get('categoryId'), 'csv'));
        query.addAll(client.makeParam('vendor', (List<String>) params.get('vendor'), 'csv'));
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetOfferMappingEntriesResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/offer-mapping-entries', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetOfferMappingEntriesResponse.class
        );
    }
    /**
     * Рекомендованные карточки для товаров
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/suggestions](../../reference/business-assortment/getSuggestedOfferMappings.md).\n\n{% endnote %}\n\nВозвращает идентификаторы карточек товаров на Маркете, рекомендованных для ваших товаров.\n\nКаждому товару, который вы размещаете, должна соответствовать карточка товара на Маркете со своим идентификатором — SKU на Маркете. Он указывается в URL карточки товара, после «...sku&#x3D;», например:\n\n##https://market.yandex.ru/product--yandex-kniga/484830016?sku&#x3D;484830016…##\n\nЧтобы получить для товаров рекомендованные SKU на Маркете, передайте в теле POST-запроса как можно больше информации о них: названия, производителей, штрихкоды, цены и т. д.\n\nПолученные SKU можно передать вместе с информацией о ваших товарах с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/updates](../../reference/offer-mappings/updateOfferMappingEntries.md).\n\nВ одном запросе можно получить не более 500 рекомендаций.\n\n|**⚙️ Лимит:** 100 000 рекомендаций в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSGetSuggestedOfferMappingEntriesRe  (required)
     * @return OASGetSuggestedOfferMappingEntriesRe
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetSuggestedOfferMappingEntriesRe getSuggestedOfferMappingEntries(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSGetSuggestedOfferMappingEntriesRe'), 'oaSGetSuggestedOfferMappingEntriesRe');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetSuggestedOfferMappingEntriesRe) client.invoke(
            'POST', '/campaigns/{campaignId}/offer-mapping-entries/suggestions',
            (OASGetSuggestedOfferMappingEntriesRe) params.get('oaSGetSuggestedOfferMappingEntriesRe'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetSuggestedOfferMappingEntriesRe.class
        );
    }
    /**
     * Добавление и редактирование товаров в каталоге
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).\n\n{% endnote %}\n\nДобавляет товары, указанные в запросе, в ваш каталог товаров и редактирует уже имеющиеся товары.\n\nИнформацию о товарах нужно передать в теле POST-запроса.\n\nУ каждого товара должен быть ваш SKU — уникальный код, который вы используете для идентификации товара:\n\n* Чтобы добавить в каталог новый товар, укажите в параметре &#x60;shopSku&#x60; ваш SKU, которого еще нет в каталоге.\n* Чтобы отредактировать товар из каталога, укажите в параметре &#x60;shopSku&#x60; ваш SKU этого товара в каталоге.\n\nВ обоих случаях в запросе нужно передать полное описание товара, даже если вы хотите изменить только несколько характеристик.\n\nЕсли вы знаете, какой карточке товара на Маркете соответствует ваш товар, укажите ее идентификатор (SKU на Маркете) во входном параметре mapping. Получить SKU на Маркете рекомендованной карточки товара можно с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/suggestions](../../reference/offer-mappings/getSuggestedOfferMappingEntries.md) или через кабинет. Если SKU на Маркете не указан, сотрудники Маркета сами подберут или создадут подходящую карточку товара, либо у него появится статус &#x60;NEED_CONTENT&#x60; (нужно найти карточку или создать ее самостоятельно) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).\n\nПеред публикацией товары проходят модерацию. Если в одном из отправленных товаров найдена ошибка, ответ на запрос будет иметь HTTP-код 400 Bad Request, и ни один из товаров не отправится на модерацию. При этом если вы не передадите все обязательные параметры для какого‑либо товара, после модерации у него появится статус &#x60;NEED_INFO&#x60; (в описании товара не хватает информации) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).\n\nВ одном запросе можно добавить не более 500 товаров.\n\n{% note info &quot;Данные в каталоге обновляются не мгновенно&quot; %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5 000 товаров в минуту|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSUpdateOfferMappingEntryRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse updateOfferMappingEntries(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSUpdateOfferMappingEntryRequest'), 'oaSUpdateOfferMappingEntryRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/offer-mapping-entries/updates',
            (OASUpdateOfferMappingEntryRequest) params.get('oaSUpdateOfferMappingEntryRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
}
