/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация об оценках, которые поставил автор отзыва магазину, и об оценках полезности отзыва от других пользователей Маркета.
 */
public class OASFeedbackGradesDTO {
    /**
     * Общая оценка, указанная в отзыве: от `1` («Ужасный магазин») до `5` («Отличный магазин»).
     * @return average
     */
    public Double average { get; set; }

    /**
     * Количество пользователей, считающих отзыв полезным.
     * @return agreeCount
     */
    public Long agreeCount { get; set; }

    /**
     * Количество пользователей, считающих отзыв бесполезным.
     * @return rejectCount
     */
    public Long rejectCount { get; set; }

    /**
     * Информация об оценках по параметрам, указанных в отзыве.\n\nПри создании отзыва автору предлагается поставить оценки магазину по нескольким параметрам: например, за скорость обработки заказа или удобство самовывоза. Набор параметров зависит от того, какой способ покупки (параметр `delivery`) указал автор.\n
     * @return factors
     */
    public List<OASFeedbackFactorDTO> factors { get; set; }

    public OASFeedbackGradesDTO() {
        factors = new List<OASFeedbackFactorDTO>();
    }

    public static OASFeedbackGradesDTO getExample() {
        OASFeedbackGradesDTO feedbackGradesDTO = new OASFeedbackGradesDTO();
          feedbackGradesDTO.average = 1.3579;
          feedbackGradesDTO.agreeCount = 123456789L;
          feedbackGradesDTO.rejectCount = 123456789L;
          feedbackGradesDTO.factors = new List<OASFeedbackFactorDTO>{OASFeedbackFactorDTO.getExample()};
        return feedbackGradesDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASFeedbackGradesDTO) {           
            OASFeedbackGradesDTO feedbackGradesDTO = (OASFeedbackGradesDTO) obj;
            return this.average == feedbackGradesDTO.average
                && this.agreeCount == feedbackGradesDTO.agreeCount
                && this.rejectCount == feedbackGradesDTO.rejectCount
                && this.factors == feedbackGradesDTO.factors;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (average == null ? 0 : System.hashCode(average));
        hashCode = (17 * hashCode) + (agreeCount == null ? 0 : System.hashCode(agreeCount));
        hashCode = (17 * hashCode) + (rejectCount == null ? 0 : System.hashCode(rejectCount));
        hashCode = (17 * hashCode) + (factors == null ? 0 : System.hashCode(factors));
        return hashCode;
    }
}

