/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Настройки магазина.
 */
public class OASCampaignSettingsDTO {
    /**
     * Идентификатор региона, в котором находится магазин.
     * @return countryRegion
     */
    public Long countryRegion { get; set; }

    /**
     * Наименование магазина на Яндекс Маркете.\nЕсли наименование отсутствует, значение параметра выводится — `null`.\n
     * @return shopName
     */
    public String shopName { get; set; }

    /**
     * Признак размещения магазина на сайтах партнеров Яндекс Дистрибуции.\nВозможные значения:\n* `false` — магазин не размещен на сайтах партнеров Яндекс Дистрибуции.\n* `true` — магазин размещен на сайтах партнеров Яндекс Дистрибуции.\n
     * @return showInContext
     */
    public Boolean showInContext { get; set; }

    /**
     * Признак показа предложений магазина в рекламном блоке над результатами поиска (cпецразмещение).\nВозможные значения:\n* `false` — предложения не показываются в блоке cпецразмещения.\n* `true` — предложения показываются в блоке cпецразмещения.\n
     * @return showInPremium
     */
    public Boolean showInPremium { get; set; }

    /**
     * Признак использования внешней интернет-статистики.\nВозможные значения:\n* `false` — внешняя интернет-статистика не используется.\n* `true` — внешняя интернет-статистика используется.\n
     * @return useOpenStat
     */
    public Boolean useOpenStat { get; set; }

    /**
     * Get localRegion
     * @return localRegion
     */
    public OASCampaignSettingsLocalRegionDTO localRegion { get; set; }

    public static OASCampaignSettingsDTO getExample() {
        OASCampaignSettingsDTO campaignSettingsDTO = new OASCampaignSettingsDTO();
          campaignSettingsDTO.countryRegion = 123456789L;
          campaignSettingsDTO.shopName = '';
          campaignSettingsDTO.showInContext = true;
          campaignSettingsDTO.showInPremium = true;
          campaignSettingsDTO.useOpenStat = true;
          campaignSettingsDTO.localRegion = OASCampaignSettingsLocalRegionDTO.getExample();
        return campaignSettingsDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCampaignSettingsDTO) {           
            OASCampaignSettingsDTO campaignSettingsDTO = (OASCampaignSettingsDTO) obj;
            return this.countryRegion == campaignSettingsDTO.countryRegion
                && this.shopName == campaignSettingsDTO.shopName
                && this.showInContext == campaignSettingsDTO.showInContext
                && this.showInPremium == campaignSettingsDTO.showInPremium
                && this.useOpenStat == campaignSettingsDTO.useOpenStat
                && this.localRegion == campaignSettingsDTO.localRegion;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (countryRegion == null ? 0 : System.hashCode(countryRegion));
        hashCode = (17 * hashCode) + (shopName == null ? 0 : System.hashCode(shopName));
        hashCode = (17 * hashCode) + (showInContext == null ? 0 : System.hashCode(showInContext));
        hashCode = (17 * hashCode) + (showInPremium == null ? 0 : System.hashCode(showInPremium));
        hashCode = (17 * hashCode) + (useOpenStat == null ? 0 : System.hashCode(useOpenStat));
        hashCode = (17 * hashCode) + (localRegion == null ? 0 : System.hashCode(localRegion));
        return hashCode;
    }
}

