/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Данные, необходимые для генерации отчета: идентификатор магазина, период, за который нужен отчет, а также фильтры.\n
 */
public class OASGenerateUnitedMarketplaceServices {
    /**
     * Идентификатор бизнеса.
     * @return businessId
     */
    public Long businessId { get; set; }

    /**
     * {% note warning "" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nНачало периода, включительно.\n
     * @return dateTimeFrom
     */
    public Datetime dateTimeFrom { get; set; }

    /**
     * {% note warning "" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nКонец периода, включительно. Максимальный период — 1 год.\n
     * @return dateTimeTo
     */
    public Datetime dateTimeTo { get; set; }

    /**
     * Начало периода, включительно.
     * @return dateFrom
     */
    public Date dateFrom { get; set; }

    /**
     * Конец периода, включительно. Максимальный период — 1 год.
     * @return dateTo
     */
    public Date dateTo { get; set; }

    /**
     * Начальный год формирования акта.
     * @return yearFrom
     */
    public Integer yearFrom { get; set; }

    /**
     * Начальный номер месяца формирования акта.
     * minimum: 1
     * maximum: 12
     * @return monthFrom
     */
    public Integer monthFrom { get; set; }

    /**
     * Конечный год формирования акта.
     * @return yearTo
     */
    public Integer yearTo { get; set; }

    /**
     * Конечный номер месяца формирования акта.
     * minimum: 1
     * maximum: 12
     * @return monthTo
     */
    public Integer monthTo { get; set; }

    /**
     * Список моделей, которые нужны в отчете.\n
     * @return placementPrograms
     */
    public List<OASPlacementType> placementPrograms { get; set; }

    /**
     * Список ИНН, которые нужны в отчете.
     * @return inns
     */
    public List<String> inns { get; set; }

    /**
     * Список магазинов, которые нужны в отчете.
     * @return campaignIds
     */
    public List<Long> campaignIds { get; set; }

    public OASGenerateUnitedMarketplaceServices() {
        placementPrograms = new List<OASPlacementType>();
        inns = new List<String>();
        campaignIds = new List<Long>();
    }

    public static OASGenerateUnitedMarketplaceServices getExample() {
        OASGenerateUnitedMarketplaceServices generateUnitedMarketplaceServicesReportRequest = new OASGenerateUnitedMarketplaceServices();
          generateUnitedMarketplaceServicesReportRequest.businessId = 123456789L;
          generateUnitedMarketplaceServicesReportRequest.dateTimeFrom = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          generateUnitedMarketplaceServicesReportRequest.dateTimeTo = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          generateUnitedMarketplaceServicesReportRequest.dateFrom = Date.newInstance(2000, 1, 23);
          generateUnitedMarketplaceServicesReportRequest.dateTo = Date.newInstance(2000, 1, 23);
          generateUnitedMarketplaceServicesReportRequest.yearFrom = 0;
          generateUnitedMarketplaceServicesReportRequest.monthFrom = 0;
          generateUnitedMarketplaceServicesReportRequest.yearTo = 0;
          generateUnitedMarketplaceServicesReportRequest.monthTo = 0;
          generateUnitedMarketplaceServicesReportRequest.placementPrograms = new List<OASPlacementType>{OASPlacementType.getExample()};
          generateUnitedMarketplaceServicesReportRequest.inns = new List<String>{''};
          generateUnitedMarketplaceServicesReportRequest.campaignIds = new List<Long>{123456789L};
        return generateUnitedMarketplaceServicesReportRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASGenerateUnitedMarketplaceServices) {           
            OASGenerateUnitedMarketplaceServices generateUnitedMarketplaceServicesReportRequest = (OASGenerateUnitedMarketplaceServices) obj;
            return this.businessId == generateUnitedMarketplaceServicesReportRequest.businessId
                && this.dateTimeFrom == generateUnitedMarketplaceServicesReportRequest.dateTimeFrom
                && this.dateTimeTo == generateUnitedMarketplaceServicesReportRequest.dateTimeTo
                && this.dateFrom == generateUnitedMarketplaceServicesReportRequest.dateFrom
                && this.dateTo == generateUnitedMarketplaceServicesReportRequest.dateTo
                && this.yearFrom == generateUnitedMarketplaceServicesReportRequest.yearFrom
                && this.monthFrom == generateUnitedMarketplaceServicesReportRequest.monthFrom
                && this.yearTo == generateUnitedMarketplaceServicesReportRequest.yearTo
                && this.monthTo == generateUnitedMarketplaceServicesReportRequest.monthTo
                && this.placementPrograms == generateUnitedMarketplaceServicesReportRequest.placementPrograms
                && this.inns == generateUnitedMarketplaceServicesReportRequest.inns
                && this.campaignIds == generateUnitedMarketplaceServicesReportRequest.campaignIds;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (businessId == null ? 0 : System.hashCode(businessId));
        hashCode = (17 * hashCode) + (dateTimeFrom == null ? 0 : System.hashCode(dateTimeFrom));
        hashCode = (17 * hashCode) + (dateTimeTo == null ? 0 : System.hashCode(dateTimeTo));
        hashCode = (17 * hashCode) + (dateFrom == null ? 0 : System.hashCode(dateFrom));
        hashCode = (17 * hashCode) + (dateTo == null ? 0 : System.hashCode(dateTo));
        hashCode = (17 * hashCode) + (yearFrom == null ? 0 : System.hashCode(yearFrom));
        hashCode = (17 * hashCode) + (monthFrom == null ? 0 : System.hashCode(monthFrom));
        hashCode = (17 * hashCode) + (yearTo == null ? 0 : System.hashCode(yearTo));
        hashCode = (17 * hashCode) + (monthTo == null ? 0 : System.hashCode(monthTo));
        hashCode = (17 * hashCode) + (placementPrograms == null ? 0 : System.hashCode(placementPrograms));
        hashCode = (17 * hashCode) + (inns == null ? 0 : System.hashCode(inns));
        hashCode = (17 * hashCode) + (campaignIds == null ? 0 : System.hashCode(campaignIds));
        return hashCode;
    }
}

