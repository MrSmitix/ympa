/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Расписание работы службы доставки в своем регионе.
 */
public class OASCampaignSettingsScheduleDTO {
    /**
     * Признак работы службы доставки в государственные праздники.\nВозможные значения.\n* `false` — служба доставки не работает в праздничные дни.\n* `true` — служба доставки работает в праздничные дни.\n
     * @return availableOnHolidays
     */
    public Boolean availableOnHolidays { get; set; }

    /**
     * Список дней, в которые служба доставки не работает. Дни магазин указал в кабинете продавца на Маркете.
     * @return customHolidays
     */
    public List<String> customHolidays { get; set; }

    /**
     * Список выходных и праздничных дней, в которые служба доставки работает. Дни магазин указал в кабинете продавца на Маркете.
     * @return customWorkingDays
     */
    public List<String> customWorkingDays { get; set; }

    /**
     * Get period
     * @return period
     */
    public OASCampaignSettingsTimePeriodDTO period { get; set; }

    /**
     * Итоговый список нерабочих дней службы доставки. Список рассчитывается с учетом выходных, нерабочих дней и государственных праздников. Информацию по ним магазин указывает в кабинете продавца на Маркете.
     * @return totalHolidays
     */
    public List<String> totalHolidays { get; set; }

    /**
     * Список выходных дней недели и государственных праздников.
     * @return weeklyHolidays
     */
    public List<Integer> weeklyHolidays { get; set; }

    public OASCampaignSettingsScheduleDTO() {
        customHolidays = new List<String>();
        customWorkingDays = new List<String>();
        totalHolidays = new List<String>();
        weeklyHolidays = new List<Integer>();
    }

    public static OASCampaignSettingsScheduleDTO getExample() {
        OASCampaignSettingsScheduleDTO campaignSettingsScheduleDTO = new OASCampaignSettingsScheduleDTO();
          campaignSettingsScheduleDTO.availableOnHolidays = true;
          campaignSettingsScheduleDTO.customHolidays = new List<String>{String.getExample()};
          campaignSettingsScheduleDTO.customWorkingDays = new List<String>{String.getExample()};
          campaignSettingsScheduleDTO.period = OASCampaignSettingsTimePeriodDTO.getExample();
          campaignSettingsScheduleDTO.totalHolidays = new List<String>{String.getExample()};
          campaignSettingsScheduleDTO.weeklyHolidays = new List<Integer>{0};
        return campaignSettingsScheduleDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCampaignSettingsScheduleDTO) {           
            OASCampaignSettingsScheduleDTO campaignSettingsScheduleDTO = (OASCampaignSettingsScheduleDTO) obj;
            return this.availableOnHolidays == campaignSettingsScheduleDTO.availableOnHolidays
                && this.customHolidays == campaignSettingsScheduleDTO.customHolidays
                && this.customWorkingDays == campaignSettingsScheduleDTO.customWorkingDays
                && this.period == campaignSettingsScheduleDTO.period
                && this.totalHolidays == campaignSettingsScheduleDTO.totalHolidays
                && this.weeklyHolidays == campaignSettingsScheduleDTO.weeklyHolidays;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (availableOnHolidays == null ? 0 : System.hashCode(availableOnHolidays));
        hashCode = (17 * hashCode) + (customHolidays == null ? 0 : System.hashCode(customHolidays));
        hashCode = (17 * hashCode) + (customWorkingDays == null ? 0 : System.hashCode(customWorkingDays));
        hashCode = (17 * hashCode) + (period == null ? 0 : System.hashCode(period));
        hashCode = (17 * hashCode) + (totalHolidays == null ? 0 : System.hashCode(totalHolidays));
        hashCode = (17 * hashCode) + (weeklyHolidays == null ? 0 : System.hashCode(weeklyHolidays));
        return hashCode;
    }
}

