/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Предложение.
 */
public class OASOfferDTO implements OAS.MappedProperties {
    /**
     * Цена предложения.\n\nДо версии 2.0 партнерского API у параметра был тип String.\n
     * @return price
     */
    public Double price { get; set; }

    /**
     * Идентификатор прайс-листа, содержащего предложение.\n\nПараметр доступен начиная с версии 2.0 партнерского API.\n
     * @return feedId
     */
    public Long feedId { get; set; }

    /**
     * Идентификатор предложения из прайс-листа.\n\nПараметр выводится, если в прайс-листе задан уникальный идентификатор. Если в прайс-листе содержится несколько предложений с одинаковыми идентификаторами, параметр `id` указывается только для первого из них, для остальных параметры `id` и `feedId` не выводятся.\n\nПараметр доступен начиная с версии 2.0 партнерского API.\n
     * @return id
     */
    public String id { get; set; }

    /**
     * Идентификатор категории предложения, указанный магазином в прайс-листе.\n\nПараметр выводится только для предложений, у которых указана категория в прайс-листе.\n\nПараметр доступен начиная с версии 2.0 партнерского API.\n
     * @return shopCategoryId
     */
    public String shopCategoryId { get; set; }

    /**
     * Идентификатор категории предложения в дереве категорий Маркета.\nПараметр доступен начиная с версии 2.0 партнерского API.\n
     * @return marketCategoryId
     */
    public Integer marketCategoryId { get; set; }

    /**
     * Цена предложения без скидки.
     * @return preDiscountPrice
     */
    public Double preDiscountPrice { get; set; }

    /**
     * Скидка на предложение в процентах.
     * @return discount
     */
    public Integer discount { get; set; }

    /**
     * Является ли предложение уцененным:\n\n* `true` — да.\n* `false` — нет.\n\nПараметр доступен начиная с версии 2.58 партнерского API.\n
     * @return cutPrice
     */
    public Boolean cutPrice { get; set; }

    /**
     * URL-адрес предложения на сайте магазина.
     * @return url
     */
    public String url { get; set; }

    /**
     * Идентификатор модели Маркета, с которой соотнесено предложение.\n\nЕсли предложение не соотнесено ни с какой карточкой модели, то параметр `modelid` содержит значение `0`.\n\n{% note info %}\n\nИдентификатор модели присутствует в URL карточки модели в виде значения параметра `product`. Например: `https://market.yandex.ru/product/13584121`.\n\n{% endnote %}\n
     * @return modelId
     */
    public Long modelId { get; set; }

    /**
     * Наименование предложения.
     * @return name
     */
    public String name { get; set; }

    /**
     * Get r_currency
     * @return r_currency
     */
    public OASCurrencyType r_currency { get; set; }

    /**
     * {% note warning "" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nСтавка на клик.\n
     * @return bid
     */
    public Double bid { get; set; }

    /**
     * {% note warning "" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nСтавка на клик.\n
     * @return cbid
     */
    public Double cbid { get; set; }

    /**
     * {% note warning "" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nПроцент комиссии на товар при продаже по CPA.\n
     * @return fee
     */
    public Double fee { get; set; }

    /**
     * Признак блокировки предложения.\nВозможные значения:\n* `false` — предложение активно, параметр не выводится.\n* `true` — предложение заблокировано.\nПараметр выводится, если предложение заблокировано и не попадает в выдачу Маркета. Это может произойти из-за отключения магазина.\n
     * @return blocked
     */
    public Boolean blocked { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'currency' => 'r_currency'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASOfferDTO getExample() {
        OASOfferDTO offerDTO = new OASOfferDTO();
          offerDTO.price = 1.3579;
          offerDTO.feedId = 123456789L;
          offerDTO.id = '';
          offerDTO.shopCategoryId = '';
          offerDTO.marketCategoryId = 0;
          offerDTO.preDiscountPrice = 1.3579;
          offerDTO.discount = 0;
          offerDTO.cutPrice = true;
          offerDTO.url = '';
          offerDTO.modelId = 123456789L;
          offerDTO.name = '';
          offerDTO.r_currency = OASCurrencyType.getExample();
          offerDTO.bid = 1.3579;
          offerDTO.cbid = 1.3579;
          offerDTO.fee = 1.3579;
          offerDTO.blocked = true;
        return offerDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOfferDTO) {           
            OASOfferDTO offerDTO = (OASOfferDTO) obj;
            return this.price == offerDTO.price
                && this.feedId == offerDTO.feedId
                && this.id == offerDTO.id
                && this.shopCategoryId == offerDTO.shopCategoryId
                && this.marketCategoryId == offerDTO.marketCategoryId
                && this.preDiscountPrice == offerDTO.preDiscountPrice
                && this.discount == offerDTO.discount
                && this.cutPrice == offerDTO.cutPrice
                && this.url == offerDTO.url
                && this.modelId == offerDTO.modelId
                && this.name == offerDTO.name
                && this.r_currency == offerDTO.r_currency
                && this.bid == offerDTO.bid
                && this.cbid == offerDTO.cbid
                && this.fee == offerDTO.fee
                && this.blocked == offerDTO.blocked;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (price == null ? 0 : System.hashCode(price));
        hashCode = (17 * hashCode) + (feedId == null ? 0 : System.hashCode(feedId));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (shopCategoryId == null ? 0 : System.hashCode(shopCategoryId));
        hashCode = (17 * hashCode) + (marketCategoryId == null ? 0 : System.hashCode(marketCategoryId));
        hashCode = (17 * hashCode) + (preDiscountPrice == null ? 0 : System.hashCode(preDiscountPrice));
        hashCode = (17 * hashCode) + (discount == null ? 0 : System.hashCode(discount));
        hashCode = (17 * hashCode) + (cutPrice == null ? 0 : System.hashCode(cutPrice));
        hashCode = (17 * hashCode) + (url == null ? 0 : System.hashCode(url));
        hashCode = (17 * hashCode) + (modelId == null ? 0 : System.hashCode(modelId));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (r_currency == null ? 0 : System.hashCode(r_currency));
        hashCode = (17 * hashCode) + (bid == null ? 0 : System.hashCode(bid));
        hashCode = (17 * hashCode) + (cbid == null ? 0 : System.hashCode(cbid));
        hashCode = (17 * hashCode) + (fee == null ? 0 : System.hashCode(fee));
        hashCode = (17 * hashCode) + (blocked == null ? 0 : System.hashCode(blocked));
        return hashCode;
    }
}

