/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация о товаре.
 */
public class OASGoodsStatsGoodsDTO {
    /**
     * Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n
     * @return shopSku
     */
    public String shopSku { get; set; }

    /**
     * SKU на Маркете.
     * @return marketSku
     */
    public Long marketSku { get; set; }

    /**
     * Название товара.
     * @return name
     */
    public String name { get; set; }

    /**
     * Цена на товар в валюте, которая установлена [в кабинете продавца на Маркете](https://partner.market.yandex.ru/).
     * @return price
     */
    public Double price { get; set; }

    /**
     * Идентификатор категории товара на Маркете.
     * @return categoryId
     */
    public Long categoryId { get; set; }

    /**
     * Название категории товара на Маркете.
     * @return categoryName
     */
    public String categoryName { get; set; }

    /**
     * Get weightDimensions
     * @return weightDimensions
     */
    public OASGoodsStatsWeightDimensionsDTO weightDimensions { get; set; }

    /**
     * Информация о складах, на которых хранится товар.\n\nПараметр не приходит, если товара нет ни на одном складе.\n
     * @return warehouses
     */
    public List<OASGoodsStatsWarehouseDTO> warehouses { get; set; }

    /**
     * Информация о тарифах, по которым нужно заплатить за услуги Маркета.\n\nПо некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели FBS стоимость услуги `SORTING` (обработка заказа) зависит от способа отгрузки\nи количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/).\n
     * @return tariffs
     */
    public List<OASTariffDTO> tariffs { get; set; }

    /**
     * Ссылки (URL) изображений товара в хорошем качестве.
     * @return pictures
     */
    public List<String> pictures { get; set; }

    public OASGoodsStatsGoodsDTO() {
        warehouses = new List<OASGoodsStatsWarehouseDTO>();
        tariffs = new List<OASTariffDTO>();
        pictures = new List<String>();
    }

    public static OASGoodsStatsGoodsDTO getExample() {
        OASGoodsStatsGoodsDTO goodsStatsGoodsDTO = new OASGoodsStatsGoodsDTO();
          goodsStatsGoodsDTO.shopSku = '';
          goodsStatsGoodsDTO.marketSku = 123456789L;
          goodsStatsGoodsDTO.name = '';
          goodsStatsGoodsDTO.price = 1.3579;
          goodsStatsGoodsDTO.categoryId = 123456789L;
          goodsStatsGoodsDTO.categoryName = '';
          goodsStatsGoodsDTO.weightDimensions = OASGoodsStatsWeightDimensionsDTO.getExample();
          goodsStatsGoodsDTO.warehouses = new List<OASGoodsStatsWarehouseDTO>{OASGoodsStatsWarehouseDTO.getExample()};
          goodsStatsGoodsDTO.tariffs = new List<OASTariffDTO>{OASTariffDTO.getExample()};
          goodsStatsGoodsDTO.pictures = new List<String>{''};
        return goodsStatsGoodsDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASGoodsStatsGoodsDTO) {           
            OASGoodsStatsGoodsDTO goodsStatsGoodsDTO = (OASGoodsStatsGoodsDTO) obj;
            return this.shopSku == goodsStatsGoodsDTO.shopSku
                && this.marketSku == goodsStatsGoodsDTO.marketSku
                && this.name == goodsStatsGoodsDTO.name
                && this.price == goodsStatsGoodsDTO.price
                && this.categoryId == goodsStatsGoodsDTO.categoryId
                && this.categoryName == goodsStatsGoodsDTO.categoryName
                && this.weightDimensions == goodsStatsGoodsDTO.weightDimensions
                && this.warehouses == goodsStatsGoodsDTO.warehouses
                && this.tariffs == goodsStatsGoodsDTO.tariffs
                && this.pictures == goodsStatsGoodsDTO.pictures;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (shopSku == null ? 0 : System.hashCode(shopSku));
        hashCode = (17 * hashCode) + (marketSku == null ? 0 : System.hashCode(marketSku));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (price == null ? 0 : System.hashCode(price));
        hashCode = (17 * hashCode) + (categoryId == null ? 0 : System.hashCode(categoryId));
        hashCode = (17 * hashCode) + (categoryName == null ? 0 : System.hashCode(categoryName));
        hashCode = (17 * hashCode) + (weightDimensions == null ? 0 : System.hashCode(weightDimensions));
        hashCode = (17 * hashCode) + (warehouses == null ? 0 : System.hashCode(warehouses));
        hashCode = (17 * hashCode) + (tariffs == null ? 0 : System.hashCode(tariffs));
        hashCode = (17 * hashCode) + (pictures == null ? 0 : System.hashCode(pictures));
        return hashCode;
    }
}

