/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASModelsApi {
    OASClient client;

    public OASModelsApi(OASClient client) {
        this.client = client;
    }

    public OASModelsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Информация об одной модели
     * Возвращает информацию о модели товара.\n\nДля методов &#x60;GET models&#x60;, &#x60;GET models/{modelId}&#x60; и &#x60;POST models&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.\n\n|**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|\n|-|\n\n[//]: &lt;&gt; (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)\n
     * @param modelId Идентификатор модели товара. (required)
     * @param regionId Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n (required)
     * @param r_currency Валюта, в которой отображаются цены предложений на страницах с результатами поиска.\n\nВозможные значения:\n\n* &#x60;BYN&#x60; — белорусский рубль.\n\n* &#x60;KZT&#x60; — казахстанский тенге.\n\n* &#x60;RUR&#x60; — российский рубль.\n\n* &#x60;UAH&#x60; — украинская гривна.\n\nЗначение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).\n (optional)
     * @return OASGetModelsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetModelsResponse getModel(Map<String, Object> params) {
        client.assertNotNull(params.get('modelId'), 'modelId');
        client.assertNotNull(params.get('regionId'), 'regionId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('regionId', (Long) params.get('regionId')));
        query.addAll(client.makeParam('currency', (OASCurrencyType) params.get('r_currency')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetModelsResponse) client.invoke(
            'GET', '/models/{modelId}', '',
            query, form,
            new Map<String, Object>{
                'modelId' => (Long) params.get('modelId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetModelsResponse.class
        );
    }
    /**
     * Список предложений для одной модели
     * Возвращает информацию о первых десяти предложениях, расположенных на карточке модели.\n\nПредложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.\n\nДля групповых моделей метод не поддерживается. Идентификатор групповой модели игнорируется.\n\nДля методов &#x60;GET models/{modelId}/offers&#x60; и &#x60;POST models/offers&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.\n\n|**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|\n|-|\n\n[//]: &lt;&gt; (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)\n
     * @param modelId Идентификатор модели товара. (required)
     * @param regionId Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n (required)
     * @param r_currency Валюта, в которой отображаются цены предложений на страницах с результатами поиска.\n\nВозможные значения:\n\n* &#x60;BYN&#x60; — белорусский рубль.\n\n* &#x60;KZT&#x60; — казахстанский тенге.\n\n* &#x60;RUR&#x60; — российский рубль.\n\n* &#x60;UAH&#x60; — украинская гривна.\n\nЗначение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).\n (optional)
     * @param orderByPrice Направление сортировки по цене.\n\nВозможные значения:\n* &#x60;ASC&#x60; — сортировка по возрастанию.\n* &#x60;DESC&#x60; — сортировка по убыванию.\n\nЗначение по умолчанию: предложения выводятся в произвольном порядке.\n (optional)
     * @param count Количество предложений на странице ответа. (optional, default to 10)
     * @param page Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром &#x60;page_size&#x60;.\n\n&#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.\n (optional, default to 1)
     * @return OASGetModelsOffersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetModelsOffersResponse getModelOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('modelId'), 'modelId');
        client.assertNotNull(params.get('regionId'), 'regionId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('regionId', (Long) params.get('regionId')));
        query.addAll(client.makeParam('currency', (OASCurrencyType) params.get('r_currency')));
        query.addAll(client.makeParam('orderByPrice', (OASSortOrderType) params.get('orderByPrice')));
        query.addAll(client.makeParam('count', (Integer) params.get('count')));
        query.addAll(client.makeParam('page', (Integer) params.get('page')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetModelsOffersResponse) client.invoke(
            'GET', '/models/{modelId}/offers', '',
            query, form,
            new Map<String, Object>{
                'modelId' => (Long) params.get('modelId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetModelsOffersResponse.class
        );
    }
    /**
     * Информация о нескольких моделях
     * Возвращает информацию о моделях товаров.\n\nВ одном запросе можно получить информацию не более чем о 100 моделях.\n\nДля методов &#x60;GET models&#x60;, &#x60;GET models/{modelId}&#x60; и &#x60;POST models&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.\n\n|**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|\n|-|\n\n[//]: &lt;&gt; (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)\n
     * @param regionId Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n (required)
     * @param oaSGetModelsRequest  (required)
     * @param r_currency Валюта, в которой отображаются цены предложений на страницах с результатами поиска.\n\nВозможные значения:\n\n* &#x60;BYN&#x60; — белорусский рубль.\n\n* &#x60;KZT&#x60; — казахстанский тенге.\n\n* &#x60;RUR&#x60; — российский рубль.\n\n* &#x60;UAH&#x60; — украинская гривна.\n\nЗначение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).\n (optional)
     * @return OASGetModelsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetModelsResponse getModels(Map<String, Object> params) {
        client.assertNotNull(params.get('regionId'), 'regionId');
        client.assertNotNull(params.get('oaSGetModelsRequest'), 'oaSGetModelsRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('regionId', (Long) params.get('regionId')));
        query.addAll(client.makeParam('currency', (OASCurrencyType) params.get('r_currency')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetModelsResponse) client.invoke(
            'POST', '/models',
            (OASGetModelsRequest) params.get('oaSGetModelsRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetModelsResponse.class
        );
    }
    /**
     * Список предложений для нескольких моделей
     * Возвращает информацию о первых десяти предложениях, расположенных на карточках моделей, идентификаторы которых указаны в запросе.\n\nПредложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.\n\nДля групповых моделей выдача предложений не поддерживается. Идентификаторы групповых моделей игнорируются.\n\nВ одном запросе можно получить информацию о предложениях не более чем для 100 моделей.\n\nДля методов &#x60;GET models/{modelId}/offers&#x60; и &#x60;POST models/offers&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.\n\n|**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|\n|-|\n\n[//]: &lt;&gt; (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)\n
     * @param regionId Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n (required)
     * @param oaSGetModelsRequest  (required)
     * @param r_currency Валюта, в которой отображаются цены предложений на страницах с результатами поиска.\n\nВозможные значения:\n\n* &#x60;BYN&#x60; — белорусский рубль.\n\n* &#x60;KZT&#x60; — казахстанский тенге.\n\n* &#x60;RUR&#x60; — российский рубль.\n\n* &#x60;UAH&#x60; — украинская гривна.\n\nЗначение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).\n (optional)
     * @param orderByPrice Направление сортировки по цене.\n\nВозможные значения:\n* &#x60;ASC&#x60; — сортировка по возрастанию.\n* &#x60;DESC&#x60; — сортировка по убыванию.\n\nЗначение по умолчанию: предложения выводятся в произвольном порядке.\n (optional)
     * @return OASGetModelsOffersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetModelsOffersResponse getModelsOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('regionId'), 'regionId');
        client.assertNotNull(params.get('oaSGetModelsRequest'), 'oaSGetModelsRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('regionId', (Long) params.get('regionId')));
        query.addAll(client.makeParam('currency', (OASCurrencyType) params.get('r_currency')));
        query.addAll(client.makeParam('orderByPrice', (OASSortOrderType) params.get('orderByPrice')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetModelsOffersResponse) client.invoke(
            'POST', '/models/offers',
            (OASGetModelsRequest) params.get('oaSGetModelsRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetModelsOffersResponse.class
        );
    }
    /**
     * Поиск модели товара
     * Возвращает информацию о моделях, удовлетворяющих заданным в запросе условиям поиска.\n\nВ одном запросе можно получить информацию не более чем о 100 моделях.\n\nДля методов &#x60;GET models&#x60;, &#x60;GET models/{modelId}&#x60; и &#x60;POST models&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.\n\n|**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|\n|-|\n\n[//]: &lt;&gt; (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)\n
     * @param query Поисковый запрос по названию модели товара. (required)
     * @param regionId Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n (required)
     * @param r_currency Валюта, в которой отображаются цены предложений на страницах с результатами поиска.\n\nВозможные значения:\n\n* &#x60;BYN&#x60; — белорусский рубль.\n\n* &#x60;KZT&#x60; — казахстанский тенге.\n\n* &#x60;RUR&#x60; — российский рубль.\n\n* &#x60;UAH&#x60; — украинская гривна.\n\nЗначение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).\n (optional)
     * @param page Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром &#x60;page_size&#x60;.\n\n&#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.\n (optional, default to 1)
     * @param pageSize Размер страницы.\n\nИспользуется вместе с параметром &#x60;page_number&#x60;.\n\n&#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.\n (optional)
     * @return OASSearchModelsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSearchModelsResponse searchModels(Map<String, Object> params) {
        client.assertNotNull(params.get('query'), 'query');
        client.assertNotNull(params.get('regionId'), 'regionId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('query', (String) params.get('query')));
        query.addAll(client.makeParam('regionId', (Long) params.get('regionId')));
        query.addAll(client.makeParam('currency', (OASCurrencyType) params.get('r_currency')));
        query.addAll(client.makeParam('page', (Integer) params.get('page')));
        query.addAll(client.makeParam('pageSize', (Integer) params.get('pageSize')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSearchModelsResponse) client.invoke(
            'GET', '/models', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASSearchModelsResponse.class
        );
    }
}
