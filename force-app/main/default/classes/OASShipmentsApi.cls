/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASShipmentsApi {
    OASClient client;

    public OASShipmentsApi(OASClient client) {
        this.client = client;
    }

    public OASShipmentsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Подтверждение отгрузки
     * Подтверждает отгрузку товаров в сортировочный центр или пункт приема заказов.\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param shipmentId Идентификатор отгрузки. (required)
     * @param oaSConfirmShipmentRequest  (optional)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse confirmShipment(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('shipmentId'), 'shipmentId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/confirm',
            (OASConfirmShipmentRequest) params.get('oaSConfirmShipmentRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'shipmentId' => (Long) params.get('shipmentId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Получение акта приема-передачи
     * {% note warning &quot;Экспресс‑доставка&quot; %}\n\nЕсли ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам Яндекс Go, подготавливать акт приема‑передачи не нужно.\n\n{% endnote %}\n\nЗапрос формирует акт приема-передачи заказов, входящих в отгрузку, и возвращает акт в формате PDF. В акте содержатся собранные и готовые к отправке заказы.\n\nПри формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:\n\n{% cut &quot;Данные, из которых Маркет формирует акт&quot; %}\n\n| **Данные в акте**                                         | **Описание**                                                                                                                                                                                                                                                         |\n| --------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Дата                                                      | Дата запроса.                                                                                                                                                                                                                                                        |\n| Отправитель                                               | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         |\n| Исполнитель                                               | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                |\n| № отправления в системе заказчика                         | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              |\n| № отправления в системе исполнителя (субподрядчика)       | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             |\n| Объявленная ценность                                      | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       |\n| Вес                                                       | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). |\n| Количество мест                                           | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |\n\n{% endcut %}\n\nОстальные поля нужно заполнить самостоятельно в распечатанном акте.\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param shipmentId Идентификатор отгрузки. (required)
     * @return Blob
     * @throws OAS.ApiException if fails to make API call
     */
    public Blob downloadShipmentAct(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('shipmentId'), 'shipmentId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (Blob) client.invoke(
            'GET', '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/act', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'shipmentId' => (Long) params.get('shipmentId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/pdf', 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            Blob.class
        );
    }
    /**
     * Получение акта расхождений
     * Возвращает акт расхождений для заданной отгрузки.\n|**⚙️ Лимит:** 200 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param shipmentId Идентификатор отгрузки. (required)
     * @return Blob
     * @throws OAS.ApiException if fails to make API call
     */
    public Blob downloadShipmentDiscrepancyAct(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('shipmentId'), 'shipmentId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (Blob) client.invoke(
            'GET', '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/discrepancy-act', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'shipmentId' => (Long) params.get('shipmentId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/vnd.ms-excel', 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            Blob.class
        );
    }
    /**
     * Получение фактического акта приема-передачи
     * Возвращает фактический акт приема-передачи для заданной отгрузки.\n\nТакой акт становится доступен спустя несколько часов после завершения отгрузки. Он может понадобиться, если после отгрузки обнаружатся расхождения.\n\n|**⚙️ Лимит:** 200 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param shipmentId Идентификатор отгрузки. (required)
     * @return Blob
     * @throws OAS.ApiException if fails to make API call
     */
    public Blob downloadShipmentInboundAct(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('shipmentId'), 'shipmentId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (Blob) client.invoke(
            'GET', '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/inbound-act', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'shipmentId' => (Long) params.get('shipmentId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/pdf', 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            Blob.class
        );
    }
    /**
     * Ярлыки для доверительной приемки (FBS)
     * PDF-файл с ярлыками на каждый короб или палету в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).\n\nРаспечатайте по несколько копий каждого ярлыка: на одну тару нужно наклеить минимум 2 ярлыка с разных сторон.\n\nКоличество упаковок в отгрузке задается в запросе [PUT campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets](../../reference/shipments/setShipmentPalletsCount.md).\n|**⚙️ Лимит:** 200 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param shipmentId Идентификатор отгрузки. (required)
     * @param format Формат страниц PDF-файла с ярлыками:\n\n* &#x60;A4&#x60; — по 16 ярлыков на странице.\n* &#x60;A8&#x60; — по одному ярлыку на странице.\n (optional)
     * @return Blob
     * @throws OAS.ApiException if fails to make API call
     */
    public Blob downloadShipmentPalletLabels(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('shipmentId'), 'shipmentId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASShipmentPalletLabelPageFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (Blob) client.invoke(
            'GET', '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'shipmentId' => (Long) params.get('shipmentId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/pdf', 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            Blob.class
        );
    }
    /**
     * Подтверждение ближайшей отгрузки и получение акта приема-передачи для нее
     * Запрос подтверждает ближайшую отгрузку и возвращает акт приема-передачи в формате PDF.\n\n{% note warning &quot;Экспресс‑доставка&quot; %}\n\nЕсли ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам [Яндекс Go](https://go.yandex/), подготавливать акт приема‑передачи не нужно.\n\n{% endnote %}\n\nВ акт входят собранные и готовые к отправке заказы, которые отгружаются в сортировочный центр или пункт приема или курьерам Маркета.\n\nПри формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:\n\n{% cut &quot;Данные, из которых Маркет формирует акт&quot; %}\n\n| **Данные в акте**	                                  | **Описание**                                                                                                                                                                                                                                                         |\n| --------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Отправитель	                                        | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         |\n| Исполнитель                                         | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                |\n| № отправления в системе заказчика                   | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              |\n| № отправления в системе исполнителя (субподрядчика) | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             |\n| Объявленная ценность                                | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       |\n| Стоимость всех товаров в заказе                     | Стоимость всех заказанных товаров.                                                                                                                                                                                                                                   |\n| Вес                                                 | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). |\n| Количество мест                                     | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |\n\n{% endcut %}\n\nОстальные поля нужно заполнить самостоятельно в распечатанном акте.\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param warehouseId Идентификатор склада. (optional)
     * @return Blob
     * @throws OAS.ApiException if fails to make API call
     */
    public Blob downloadShipmentReceptionTransferAct(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('warehouse_id', (Integer) params.get('warehouseId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (Blob) client.invoke(
            'GET', '/campaigns/{campaignId}/shipments/reception-transfer-act', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/pdf', 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            Blob.class
        );
    }
    /**
     * Получение транспортной накладной
     * Возвращает транспортную накладную для заданной отгрузки.\n\nТранспортная накладная понадобится, если вы отгружаете товары непосредственно со своего склада. [Подробно об этом способе отгрузки](https://yandex.ru/support/marketplace/orders/fbs/settings/shipment.html#at-your-warehouse)\n\n|**⚙️ Лимит:** 200 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param shipmentId Идентификатор отгрузки. (required)
     * @return Blob
     * @throws OAS.ApiException if fails to make API call
     */
    public Blob downloadShipmentTransportationWaybill(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('shipmentId'), 'shipmentId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (Blob) client.invoke(
            'GET', '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/transportation-waybill', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'shipmentId' => (Long) params.get('shipmentId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/vnd.ms-excel', 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            Blob.class
        );
    }
    /**
     * Получение информации об одной отгрузке
     * Возвращает информацию об отгрузке по ее идентификатору.\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param shipmentId Идентификатор отгрузки. (required)
     * @param cancelledOrders Возвращать ли отмененные заказы.\n\nЗначение по умолчанию — &#x60;true&#x60;. Если возвращать отмененные заказы не нужно, передайте значение &#x60;false&#x60;.\n (optional, default to true)
     * @return OASGetShipmentResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetShipmentResponse getShipment(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('shipmentId'), 'shipmentId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('cancelledOrders', (Boolean) params.get('cancelledOrders')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetShipmentResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'shipmentId' => (Long) params.get('shipmentId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetShipmentResponse.class
        );
    }
    /**
     * Получение информации о возможности печати ярлыков (FBS)
     * Возвращает информацию о возможности печати ярлыков-наклеек для заказов в отгрузке.\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param shipmentId Идентификатор отгрузки. (required)
     * @return OASGetShipmentOrdersInfoResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetShipmentOrdersInfoResponse getShipmentOrdersInfo(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('shipmentId'), 'shipmentId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetShipmentOrdersInfoResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/info', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'shipmentId' => (Long) params.get('shipmentId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetShipmentOrdersInfoResponse.class
        );
    }
    /**
     * Получение информации о нескольких отгрузках
     * Возвращает информацию об отгрузках по заданным параметрам:\n\n* дате;\n* статусу;\n* идентификаторам заказов.\n\nРезультаты возвращаются постранично.\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSSearchShipmentsRequest  (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @return OASSearchShipmentsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSearchShipmentsResponse searchShipments(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSSearchShipmentsRequest'), 'oaSSearchShipmentsRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSearchShipmentsResponse) client.invoke(
            'PUT', '/campaigns/{campaignId}/first-mile/shipments',
            (OASSearchShipmentsRequest) params.get('oaSSearchShipmentsRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASSearchShipmentsResponse.class
        );
    }
    /**
     * Передача количества упаковок в отгрузке
     * Передает Маркету количество коробов или палет в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).\n\nПолучить PDF-файл с ярлыками для упаковок можно с помощью запроса [GET campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels](../../reference/shipments/downloadShipmentPalletLabels.md).\n|**⚙️ Лимит:** 200 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param shipmentId Идентификатор отгрузки. (required)
     * @param oaSSetShipmentPalletsCountRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse setShipmentPalletsCount(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('shipmentId'), 'shipmentId');
        client.assertNotNull(params.get('oaSSetShipmentPalletsCountRequest'), 'oaSSetShipmentPalletsCountRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'PUT', '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets',
            (OASSetShipmentPalletsCountRequest) params.get('oaSSetShipmentPalletsCountRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'shipmentId' => (Long) params.get('shipmentId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Перенос заказов в следующую отгрузку
     * Переносит указанные заказы из указанной отгрузки в следующую отгрузку. [Что такое отгрузка?](https://yandex.ru/support/marketplace/orders/fbs/process.html#ship)\n\nИспользуйте этот запрос, если не успеваете собрать и упаковать заказы вовремя.\n\n{% note warning &quot;Такие переносы снижают индекс качества магазина&quot; %}\n\nЭтот запрос предназначен для исключительных случаев. Если вы будете переносить заказы слишком часто, магазин столкнется с ограничениями. [Что за ограничения?](https://yandex.ru/support/marketplace/quality/score/fbs.html)\n\n{% endnote %}\n\nПереносить заказы можно, если до формирования отгрузки осталось больше получаса.\n\nПеренос происходит не мгновенно, а занимает несколько минут.\n\n|**⚙️ Лимит:** 200 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param shipmentId Идентификатор отгрузки. (required)
     * @param oaSTransferOrdersFromShipmentRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse transferOrdersFromShipment(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('shipmentId'), 'shipmentId');
        client.assertNotNull(params.get('oaSTransferOrdersFromShipmentRequest'), 'oaSTransferOrdersFromShipmentRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/transfer',
            (OASTransferOrdersFromShipmentRequest) params.get('oaSTransferOrdersFromShipmentRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'shipmentId' => (Long) params.get('shipmentId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
}
