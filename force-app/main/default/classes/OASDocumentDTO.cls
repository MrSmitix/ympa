/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация о документе.
 */
public class OASDocumentDTO implements OAS.MappedProperties {
    /**
     * Get status
     * @return status
     */
    public OASOrderDocumentStatusType status { get; set; }

    /**
     * Номер документа.
     * @return r_number
     */
    public String r_number { get; set; }

    /**
     * Дата создания документа.
     * @return r_date
     */
    public Date r_date { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'number' => 'r_number',
        'date' => 'r_date'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'number' => 'r_number',
        'date' => 'r_date'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASDocumentDTO getExample() {
        OASDocumentDTO documentDTO = new OASDocumentDTO();
          documentDTO.status = OASOrderDocumentStatusType.getExample();
          documentDTO.r_number = '';
          documentDTO.r_date = Date.newInstance(2000, 1, 23);
        return documentDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASDocumentDTO) {           
            OASDocumentDTO documentDTO = (OASDocumentDTO) obj;
            return this.status == documentDTO.status
                && this.r_number == documentDTO.r_number
                && this.r_date == documentDTO.r_date;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (status == null ? 0 : System.hashCode(status));
        hashCode = (17 * hashCode) + (r_number == null ? 0 : System.hashCode(r_number));
        hashCode = (17 * hashCode) + (r_date == null ? 0 : System.hashCode(r_date));
        return hashCode;
    }
}

