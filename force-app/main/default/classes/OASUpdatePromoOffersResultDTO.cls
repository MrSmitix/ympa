/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Ошибки и предупреждения, которые появились при добавлении товаров в акцию.
 */
public class OASUpdatePromoOffersResultDTO {
    /**
     * Изменения, которые были отклонены.\n\nВозвращается, только если есть отклоненные изменения.\n
     * @return rejectedOffers
     */
    public List<OASRejectedPromoOfferUpdateDTO> rejectedOffers { get; set; }

    /**
     * Изменения, по которым есть предупреждения. Они информируют о возможных проблемах. Информация о товарах обновится.\n\nВозвращается, только если есть предупреждения.\n
     * @return warningOffers
     */
    public List<OASWarningPromoOfferUpdateDTO> warningOffers { get; set; }

    public OASUpdatePromoOffersResultDTO() {
        rejectedOffers = new List<OASRejectedPromoOfferUpdateDTO>();
        warningOffers = new List<OASWarningPromoOfferUpdateDTO>();
    }

    public static OASUpdatePromoOffersResultDTO getExample() {
        OASUpdatePromoOffersResultDTO updatePromoOffersResultDTO = new OASUpdatePromoOffersResultDTO();
          updatePromoOffersResultDTO.rejectedOffers = new List<OASRejectedPromoOfferUpdateDTO>{OASRejectedPromoOfferUpdateDTO.getExample()};
          updatePromoOffersResultDTO.warningOffers = new List<OASWarningPromoOfferUpdateDTO>{OASWarningPromoOfferUpdateDTO.getExample()};
        return updatePromoOffersResultDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASUpdatePromoOffersResultDTO) {           
            OASUpdatePromoOffersResultDTO updatePromoOffersResultDTO = (OASUpdatePromoOffersResultDTO) obj;
            return this.rejectedOffers == updatePromoOffersResultDTO.rejectedOffers
                && this.warningOffers == updatePromoOffersResultDTO.warningOffers;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (rejectedOffers == null ? 0 : System.hashCode(rejectedOffers));
        hashCode = (17 * hashCode) + (warningOffers == null ? 0 : System.hashCode(warningOffers));
        return hashCode;
    }
}

