/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASOrderLabelsApi {
    OASClient client;

    public OASOrderLabelsApi(OASClient client) {
        this.client = client;
    }

    public OASOrderLabelsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Готовый ярлык‑наклейка для коробки в заказе
     * Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param shipmentId Идентификатор грузоместа. (required)
     * @param boxId Идентификатор коробки. (required)
     * @param format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6. (optional)
     * @return Blob
     * @throws OAS.ApiException if fails to make API call
     */
    public Blob generateOrderLabel(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        client.assertNotNull(params.get('shipmentId'), 'shipmentId');
        client.assertNotNull(params.get('boxId'), 'boxId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASPageFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (Blob) client.invoke(
            'GET', '/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId'),
                'shipmentId' => (Long) params.get('shipmentId'),
                'boxId' => (Long) params.get('boxId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/pdf', 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            Blob.class
        );
    }
    /**
     * Готовые ярлыки‑наклейки на все коробки в одном заказе
     * Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).\n\nНа вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6. (optional)
     * @return Blob
     * @throws OAS.ApiException if fails to make API call
     */
    public Blob generateOrderLabels(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASPageFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (Blob) client.invoke(
            'GET', '/campaigns/{campaignId}/orders/{orderId}/delivery/labels', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/pdf', 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            Blob.class
        );
    }
    /**
     * Данные для самостоятельного изготовления ярлыков
     * Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @return OASGetOrderLabelsDataResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetOrderLabelsDataResponse getOrderLabelsData(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetOrderLabelsDataResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/orders/{orderId}/delivery/labels/data', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetOrderLabelsDataResponse.class
        );
    }
}
