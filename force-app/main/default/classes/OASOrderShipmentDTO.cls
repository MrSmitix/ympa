/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Список посылок.\n\nВ параметре может указываться несколько посылок.\n
 */
public class OASOrderShipmentDTO {
    /**
     * Идентификатор посылки, присвоенный Маркетом.
     * @return id
     */
    public Long id { get; set; }

    /**
     * Формат даты: `ДД-ММ-ГГГГ`.\n
     * @return shipmentDate
     */
    public String shipmentDate { get; set; }

    /**
     * **Только для модели Экспресс**\n\nВремя, к которому магазин должен упаковать заказ и перевести его в статус `READY_TO_SHIP`. После смены статуса за заказом приедет курьер.\n\nПоле может появиться не сразу. Запрашивайте информацию о заказе в течении 5–10 минут, пока оно не вернется.\n\nФормат времени: 24-часовой, `ЧЧ:ММ`.\n\nЕсли заказ сделан организацией, параметр не возвращается до согласования даты доставки.\n
     * @return shipmentTime
     */
    public String shipmentTime { get; set; }

    /**
     * **Только для модели DBS**\n\nИнформация для отслеживания перемещений посылки.\n
     * @return tracks
     */
    public List<OASOrderTrackDTO> tracks { get; set; }

    /**
     * Список грузовых мест.
     * @return boxes
     */
    public List<OASOrderParcelBoxDTO> boxes { get; set; }

    public OASOrderShipmentDTO() {
        tracks = new List<OASOrderTrackDTO>();
        boxes = new List<OASOrderParcelBoxDTO>();
    }

    public static OASOrderShipmentDTO getExample() {
        OASOrderShipmentDTO orderShipmentDTO = new OASOrderShipmentDTO();
          orderShipmentDTO.id = 123456789L;
          orderShipmentDTO.shipmentDate = '23-09-2022';
          orderShipmentDTO.shipmentTime = '';
          orderShipmentDTO.tracks = new List<OASOrderTrackDTO>{OASOrderTrackDTO.getExample()};
          orderShipmentDTO.boxes = new List<OASOrderParcelBoxDTO>{OASOrderParcelBoxDTO.getExample()};
        return orderShipmentDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOrderShipmentDTO) {           
            OASOrderShipmentDTO orderShipmentDTO = (OASOrderShipmentDTO) obj;
            return this.id == orderShipmentDTO.id
                && this.shipmentDate == orderShipmentDTO.shipmentDate
                && this.shipmentTime == orderShipmentDTO.shipmentTime
                && this.tracks == orderShipmentDTO.tracks
                && this.boxes == orderShipmentDTO.boxes;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (shipmentDate == null ? 0 : System.hashCode(shipmentDate));
        hashCode = (17 * hashCode) + (shipmentTime == null ? 0 : System.hashCode(shipmentTime));
        hashCode = (17 * hashCode) + (tracks == null ? 0 : System.hashCode(tracks));
        hashCode = (17 * hashCode) + (boxes == null ? 0 : System.hashCode(boxes));
        return hashCode;
    }
}

