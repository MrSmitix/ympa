/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASDbsApi {
    OASClient client;

    public OASDbsApi(OASClient client) {
        this.client = client;
    }

    public OASDbsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Отмена заказа покупателем
     * Подтверждает или отклоняет запрос покупателя на отмену заказа, который передан службе доставки.\n\nПокупатель может отменить заказ в течение его обработки или доставки. Если заказ еще обрабатывается (имеет статус PROCESSING), вам не нужно подтверждать отмену заказа — он будет отменен автоматически.\n\nЕсли заказ уже передан службе доставки (принимает статус &#x60;DELIVERY&#x60; или &#x60;PICKUP&#x60;) и пользователь отменил его, вы можете предупредить службу об отмене в течение 48 часов. Если служба доставки узнала об отмене до передачи заказа покупателю, подтвердите отмену с помощью запроса [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation.md). Если заказ уже доставлен, отклоните отмену с помощью этого же запроса. Тогда у покупателя останется заказ, и деньги за него возвращаться не будут.\n\nЧтобы узнать, какие заказы были отменены в статусе &#x60;DELIVERY&#x60; или &#x60;PICKUP&#x60;, отправьте запрос [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md). В его URL добавьте входной параметр &#x60;onlyWaitingForCancellationApprove&#x3D;true&#x60;. Вы также можете узнать об отмененных заказах в кабинете или через почту — на нее придет уведомление об отмене.\n\nЕсли в течение 48 часов вы не подтвердите или отклоните отмену, заказ будет отменен автоматически.\n\n|**⚙️ Лимит:** 500 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param oaSAcceptOrderCancellationRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse acceptOrderCancellation(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        client.assertNotNull(params.get('oaSAcceptOrderCancellationRequest'), 'oaSAcceptOrderCancellationRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'PUT', '/campaigns/{campaignId}/orders/{orderId}/cancellation/accept',
            (OASAcceptOrderCancellationRequest) params.get('oaSAcceptOrderCancellationRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Скрытие товаров и настройки скрытия
     * Скрывает товары магазина на Маркете.\n\n{% note info &quot;Данные в каталоге обновляются не мгновенно&quot; %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSAddHiddenOffersRequest Запрос на скрытие оферов. (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse addHiddenOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSAddHiddenOffersRequest'), 'oaSAddHiddenOffersRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/hidden-offers',
            (OASAddHiddenOffersRequest) params.get('oaSAddHiddenOffersRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Добавление товаров в архив
     * Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.\n\n{% note warning &quot;В архив нельзя отправить товар, который хранится на складе Маркета&quot; %}\n\nВначале такой товар нужно распродать или вывезти.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSAddOffersToArchiveRequest  (required)
     * @return OASAddOffersToArchiveResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAddOffersToArchiveResponse addOffersToArchive(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSAddOffersToArchiveRequest'), 'oaSAddOffersToArchiveRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAddOffersToArchiveResponse) client.invoke(
            'POST', '/businesses/{businessId}/offer-mappings/archive',
            (OASAddOffersToArchiveRequest) params.get('oaSAddOffersToArchiveRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASAddOffersToArchiveResponse.class
        );
    }
    /**
     * Калькулятор стоимости услуг
     * Рассчитывает стоимость услуг Маркета для товаров с заданными параметрами. Порядок товаров в запросе и ответе сохраняется, чтобы определить,\nдля какого товара рассчитана стоимость услуги.\n\nОбратите внимание: калькулятор осуществляет примерные расчеты. Финальная стоимость для каждого заказа зависит от предоставленных услуг.\n\nВ запросе можно указать либо параметр &#x60;campaignId&#x60;, либо &#x60;sellingProgram&#x60;. Совместное использование параметров приведет к ошибке.\n\n|**⚙️ Лимит:** 100 запросов в минуту|\n|-|\n
     * @param oaSCalculateTariffsRequest  (required)
     * @return OASCalculateTariffsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCalculateTariffsResponse calculateTariffs(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSCalculateTariffsRequest'), 'oaSCalculateTariffsRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCalculateTariffsResponse) client.invoke(
            'POST', '/tariffs/calculate',
            (OASCalculateTariffsRequest) params.get('oaSCalculateTariffsRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASCalculateTariffsResponse.class
        );
    }
    /**
     * Удаление товара из карантина по цене в кабинете
     * Подтверждает основную цену на товары, которые попали в карантин, и удаляет их из карантина.\n\nОсновная цена задается в каталоге и действует во всех магазинах кабинета.\n\nТовар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)\n\nЧтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSConfirmPricesRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse confirmBusinessPrices(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSConfirmPricesRequest'), 'oaSConfirmPricesRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/businesses/{businessId}/price-quarantine/confirm',
            (OASConfirmPricesRequest) params.get('oaSConfirmPricesRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Удаление товара из карантина по цене в магазине
     * Подтверждает в заданном магазине цену на товары, которые попали в карантин, и удаляет их из карантина.\n\nТовар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)\n\nЧтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSConfirmPricesRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse confirmCampaignPrices(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSConfirmPricesRequest'), 'oaSConfirmPricesRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/price-quarantine/confirm',
            (OASConfirmPricesRequest) params.get('oaSConfirmPricesRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Создание нового чата с покупателем
     * Создает новый чат с покупателем.\n\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSCreateChatRequest description (required)
     * @return OASCreateChatResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCreateChatResponse createChat(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSCreateChatRequest'), 'oaSCreateChatRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCreateChatResponse) client.invoke(
            'POST', '/businesses/{businessId}/chats/new',
            (OASCreateChatRequest) params.get('oaSCreateChatRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASCreateChatResponse.class
        );
    }
    /**
     * Создание точки продаж
     * Создает точку продаж магазина на Маркете.\n\nВ течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.\n\n|**⚙️ Лимит:** 100 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSChangeOutletRequest  (required)
     * @return OASCreateOutletResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCreateOutletResponse createOutlet(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSChangeOutletRequest'), 'oaSChangeOutletRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCreateOutletResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/outlets',
            (OASChangeOutletRequest) params.get('oaSChangeOutletRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASCreateOutletResponse.class
        );
    }
    /**
     * Удаление товаров из ассортимента магазина
     * Удаляет заданные товары из заданного магазина.\n\n{% note warning &quot;Запрос удаляет товары именно из конкретного магазина&quot; %}\n\nНа продажи в других магазинах и на наличие товара в общем каталоге он не влияет.\n\n{% endnote %}\n\nТовар не получится удалить, если он хранится на складах Маркета.\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSDeleteCampaignOffersRequest  (required)
     * @return OASDeleteCampaignOffersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASDeleteCampaignOffersResponse deleteCampaignOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSDeleteCampaignOffersRequest'), 'oaSDeleteCampaignOffersRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASDeleteCampaignOffersResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/offers/delete',
            (OASDeleteCampaignOffersRequest) params.get('oaSDeleteCampaignOffersRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASDeleteCampaignOffersResponse.class
        );
    }
    /**
     * Удаление комментария к отзыву
     * Удаляет комментарий магазина.\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSDeleteGoodsFeedbackCommentRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse deleteGoodsFeedbackComment(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSDeleteGoodsFeedbackCommentRequest'), 'oaSDeleteGoodsFeedbackCommentRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/businesses/{businessId}/goods-feedback/comments/delete',
            (OASDeleteGoodsFeedbackCommentRequest) params.get('oaSDeleteGoodsFeedbackCommentRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Возобновление показа товаров
     * Возобновляет показ скрытых вами товаров магазина на Маркете.\n\n{% note info &quot;Данные в каталоге обновляются не мгновенно&quot; %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSDeleteHiddenOffersRequest Запрос на возобновление показа оферов. (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse deleteHiddenOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSDeleteHiddenOffersRequest'), 'oaSDeleteHiddenOffersRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/hidden-offers/delete',
            (OASDeleteHiddenOffersRequest) params.get('oaSDeleteHiddenOffersRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Удаление товаров из каталога
     * Удаляет товары из каталога.\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSDeleteOffersRequest  (required)
     * @return OASDeleteOffersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASDeleteOffersResponse deleteOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSDeleteOffersRequest'), 'oaSDeleteOffersRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASDeleteOffersResponse) client.invoke(
            'POST', '/businesses/{businessId}/offer-mappings/delete',
            (OASDeleteOffersRequest) params.get('oaSDeleteOffersRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASDeleteOffersResponse.class
        );
    }
    /**
     * Удаление товаров из архива
     * Восстанавливает товары из архива.\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSDeleteOffersFromArchiveRequest  (required)
     * @return OASDeleteOffersFromArchiveResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASDeleteOffersFromArchiveResponse deleteOffersFromArchive(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSDeleteOffersFromArchiveRequest'), 'oaSDeleteOffersFromArchiveRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASDeleteOffersFromArchiveResponse) client.invoke(
            'POST', '/businesses/{businessId}/offer-mappings/unarchive',
            (OASDeleteOffersFromArchiveRequest) params.get('oaSDeleteOffersFromArchiveRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASDeleteOffersFromArchiveResponse.class
        );
    }
    /**
     * Удаление точки продаж
     * Удаляет точку продаж магазина на Маркете.\n\nВ течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.\n\n|**⚙️ Лимит:** 100 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param outletId Идентификатор точки продаж. (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse deleteOutlet(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('outletId'), 'outletId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'DELETE', '/campaigns/{campaignId}/outlets/{outletId}', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'outletId' => (Long) params.get('outletId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Удаление лицензий для точек продаж
     * Удаляет информацию о лицензиях для точек продаж.\n\nВ течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.\n\n|**⚙️ Лимит:** 100 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param ids Список идентификаторов лицензий. (optional, default to new List<Long>())
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse deleteOutletLicenses(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('ids', (Set<Long>) params.get('ids'), 'csv'));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'DELETE', '/campaigns/{campaignId}/outlets/licenses', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Удаление товаров из акции
     * Убирает товары из акции.\n\nИзменения начинают действовать в течение 4–6 часов.\n\n|**⚙️ Лимит:** 10000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSDeletePromoOffersRequest  (required)
     * @return OASDeletePromoOffersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASDeletePromoOffersResponse deletePromoOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSDeletePromoOffersRequest'), 'oaSDeletePromoOffersRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASDeletePromoOffersResponse) client.invoke(
            'POST', '/businesses/{businessId}/promos/offers/delete',
            (OASDeletePromoOffersRequest) params.get('oaSDeletePromoOffersRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASDeletePromoOffersResponse.class
        );
    }
    /**
     * Отчет по бусту продаж
     * Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGenerateBoostConsolidatedRequest  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateBoostConsolidatedReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateBoostConsolidatedRequest'), 'oaSGenerateBoostConsolidatedRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/boost-consolidated/generate',
            (OASGenerateBoostConsolidatedRequest) params.get('oaSGenerateBoostConsolidatedRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет «Конкурентная позиция»
     * Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n{% note info &quot;Значение -1 в отчете&quot; %}\n\nЕсли в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 10 запросов в час|\n|-|\n
     * @param oaSGenerateCompetitorsPositionReport  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateCompetitorsPositionReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateCompetitorsPositionReport'), 'oaSGenerateCompetitorsPositionReport');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/competitors-position/generate',
            (OASGenerateCompetitorsPositionReport) params.get('oaSGenerateCompetitorsPositionReport'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет по отзывам о товарах
     * Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGenerateGoodsFeedbackRequest  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateGoodsFeedbackReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateGoodsFeedbackRequest'), 'oaSGenerateGoodsFeedbackRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/goods-feedback/generate',
            (OASGenerateGoodsFeedbackRequest) params.get('oaSGenerateGoodsFeedbackRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Готовые ярлыки‑наклейки на все коробки в нескольких заказах
     * Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).\n\nУзнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n
     * @param oaSGenerateMassOrderLabelsRequest  (required)
     * @param format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateMassOrderLabelsReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateMassOrderLabelsRequest'), 'oaSGenerateMassOrderLabelsRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASPageFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/documents/labels/generate',
            (OASGenerateMassOrderLabelsRequest) params.get('oaSGenerateMassOrderLabelsRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Готовый ярлык‑наклейка для коробки в заказе
     * Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param shipmentId Идентификатор грузоместа. (required)
     * @param boxId Идентификатор коробки. (required)
     * @param format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6. (optional)
     * @return Blob
     * @throws OAS.ApiException if fails to make API call
     */
    public Blob generateOrderLabel(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        client.assertNotNull(params.get('shipmentId'), 'shipmentId');
        client.assertNotNull(params.get('boxId'), 'boxId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASPageFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (Blob) client.invoke(
            'GET', '/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId'),
                'shipmentId' => (Long) params.get('shipmentId'),
                'boxId' => (Long) params.get('boxId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/pdf', 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            Blob.class
        );
    }
    /**
     * Готовые ярлыки‑наклейки на все коробки в одном заказе
     * Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).\n\nНа вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6. (optional)
     * @return Blob
     * @throws OAS.ApiException if fails to make API call
     */
    public Blob generateOrderLabels(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASPageFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (Blob) client.invoke(
            'GET', '/campaigns/{campaignId}/orders/{orderId}/delivery/labels', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/pdf', 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            Blob.class
        );
    }
    /**
     * Отчет «Цены на рынке»
     * Запускает генерацию **отчета «Цены на рынке»**.\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGeneratePricesReportRequest  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generatePricesReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGeneratePricesReportRequest'), 'oaSGeneratePricesReportRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/prices/generate',
            (OASGeneratePricesReportRequest) params.get('oaSGeneratePricesReportRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет по полкам
     * Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGenerateShelfsStatisticsRequest  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateShelfsStatisticsReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateShelfsStatisticsRequest'), 'oaSGenerateShelfsStatisticsRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/shelf-statistics/generate',
            (OASGenerateShelfsStatisticsRequest) params.get('oaSGenerateShelfsStatisticsRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет «Аналитика продаж»
     * Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 10 запросов в час|\n|-|\n
     * @param oaSGenerateShowsSalesReportRequest  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateShowsSalesReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateShowsSalesReportRequest'), 'oaSGenerateShowsSalesReportRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/shows-sales/generate',
            (OASGenerateShowsSalesReportRequest) params.get('oaSGenerateShowsSalesReportRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет по остаткам на складах
     * Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:\n\n* Для модели FBY — об остатках на складах Маркета.\n* Для остальных моделей — об остатках на соответствующем складе магазина.\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGenerateStocksOnWarehousesReportR  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateStocksOnWarehousesReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateStocksOnWarehousesReportR'), 'oaSGenerateStocksOnWarehousesReportR');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/stocks-on-warehouses/generate',
            (OASGenerateStocksOnWarehousesReportR) params.get('oaSGenerateStocksOnWarehousesReportR'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет по стоимости услуг
     * Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)\n\nТип отчета зависит от того, какие поля заполнены в запросе:\n\n|**Тип отчета**               |**Какие поля нужны**             |\n|-----------------------------|---------------------------------|\n|По дате начисления услуги    |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;            |\n|По дате формирования акта    |&#x60;year&#x60; и &#x60;month&#x60;                 |\n\nЗаказать отчеты обоих типов одним запросом нельзя.\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGenerateUnitedMarketplaceServices  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateUnitedMarketplaceServicesReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateUnitedMarketplaceServices'), 'oaSGenerateUnitedMarketplaceServices');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/united-marketplace-services/generate',
            (OASGenerateUnitedMarketplaceServices) params.get('oaSGenerateUnitedMarketplaceServices'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет по платежам
     * Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\nТип отчета зависит от того, какие поля заполнены в запросе:\n\n|**Тип отчета**           |**Какие поля нужны**                   |\n|-------------------------|---------------------------------------|\n|О платежах за период     |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;                  |\n|О платежном поручении    |&#x60;bankOrderId&#x60; и &#x60;bankOrderDateTime&#x60;    |\n\nЗаказать отчеты обоих типов одним запросом нельзя.\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGenerateUnitedNettingReportReques  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateUnitedNettingReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateUnitedNettingReportReques'), 'oaSGenerateUnitedNettingReportReques');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/united-netting/generate',
            (OASGenerateUnitedNettingReportReques) params.get('oaSGenerateUnitedNettingReportReques'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Отчет по заказам
     * Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)\n\n{% note info &quot;&quot; %}\n\nЭто новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)\n\n{% endnote %}\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param oaSGenerateUnitedOrdersRequest  (required)
     * @param format Формат отчета. (optional)
     * @return OASGenerateReportResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGenerateReportResponse generateUnitedOrdersReport(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGenerateUnitedOrdersRequest'), 'oaSGenerateUnitedOrdersRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('format', (OASReportFormatType) params.get('format')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGenerateReportResponse) client.invoke(
            'POST', '/reports/united-orders/generate',
            (OASGenerateUnitedOrdersRequest) params.get('oaSGenerateUnitedOrdersRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGenerateReportResponse.class
        );
    }
    /**
     * Все предложения магазина
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Не используйте его.\n\n{% endnote %}\n\nПозволяет максимально быстро получить информацию обо всех предложениях магазина, размещенных на Маркете. Возвращает результат в виде сегментов нефиксированного размера.\n\nВ ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Яндекс Маркета, с которой соотнесено предложение, а также аукционные ставки на него.\n\n{% note info %}\n\nКоличество предложений считается по данным за последние семь дней (не включая сегодня).\n\nДля новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.\n\n{% endnote %}\n\n|**⚙️ Лимит:** рассчитывается по [формуле](*rule)|\n|-|\n\n[//]: &lt;&gt; (rule: суточный лимит товаров — среднее количество таваров в каталоге за неделю * 25)\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param feedId Идентификатор прайс-листа. (optional)
     * @param chunk Номер сегмента с результатами.\n\nЗначение по умолчанию: &#x60;0&#x60;.\n\n{% note info %}\n\nНомера сегментов запрашиваются последовательно, пока не будет получен сегмент с пустым ответом. Пустой ответ означает, что все предложения магазина получены.\n\n{% endnote %}\n\n{% note alert %}\n\nНумерация начинается с 0. Чтобы запросить первую страницу, необходимо указать &#x60;chunk&#x3D;0&#x60; и т. д.\n\n{% endnote %}\n (optional)
     * @return OASGetAllOffersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetAllOffersResponse getAllOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('feedId', (Long) params.get('feedId')));
        query.addAll(client.makeParam('chunk', (Integer) params.get('chunk')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetAllOffersResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/offers/all', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetAllOffersResponse.class
        );
    }
    /**
     * Информация об установленных ставках
     * Возвращает значения ставок для заданных товаров.\n\n{% note warning &quot;&quot; %}\n\nВ ответе возвращаются значения только тех ставок, которые вы установили через запрос [PUT businesses/{businessId}/bids](../../reference/bids/putBidsForBusiness.md). Получить информацию по кампаниям, созданным в кабинете, не получится.\n\n{% endnote %}\n\nВ одном запросе может быть максимум 1500 товаров.\n\n|**⚙️ Лимит:** 1000 запросов в минуту|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @param oaSGetBidsInfoRequest description (optional)
     * @return OASGetBidsInfoResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetBidsInfoResponse getBidsInfoForBusiness(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetBidsInfoResponse) client.invoke(
            'POST', '/businesses/{businessId}/bids/info',
            (OASGetBidsInfoRequest) params.get('oaSGetBidsInfoRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetBidsInfoResponse.class
        );
    }
    /**
     * Рекомендованные ставки для заданных товаров
     * Возвращает рекомендованные ставки для заданных товаров — такие ставки обеспечивают вашим предложениям определенную долю показов, если цена не превышает рекомендованную.\n\nДля одного товара может возвращаться одна рекомендованная ставка или несколько. Во втором случае разные ставки предназначены для достижения разной доли показов.\n\nЕсли товар только добавлен в каталог, но пока не продается, рекомендованной ставки для него не будет.\n\nВ одном запросе может быть максимум 1500 товаров.\n\n|**⚙️ Лимит:** 1000 запросов в минуту|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSGetBidsRecommendationsRequest description. (required)
     * @return OASGetBidsRecommendationsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetBidsRecommendationsResponse getBidsRecommendations(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSGetBidsRecommendationsRequest'), 'oaSGetBidsRecommendationsRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetBidsRecommendationsResponse) client.invoke(
            'POST', '/businesses/{businessId}/bids/recommendations',
            (OASGetBidsRecommendationsRequest) params.get('oaSGetBidsRecommendationsRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetBidsRecommendationsResponse.class
        );
    }
    /**
     * Список товаров, находящихся в карантине по цене в кабинете
     * Возвращает список товаров, которые находятся в карантине по **основной цене**. Основная цена задается в каталоге и действует во всех магазинах кабинета.\n\nПроверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).\n\n{% note info &quot;𝓠 Что такое карантин?&quot; %}\n\n𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)\n\n{% endnote %}\n\nВ запросе можно использовать фильтры.\n\nРезультаты возвращаются постранично.\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSGetQuarantineOffersRequest  (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @return OASGetQuarantineOffersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetQuarantineOffersResponse getBusinessQuarantineOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSGetQuarantineOffersRequest'), 'oaSGetQuarantineOffersRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetQuarantineOffersResponse) client.invoke(
            'POST', '/businesses/{businessId}/price-quarantine',
            (OASGetQuarantineOffersRequest) params.get('oaSGetQuarantineOffersRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetQuarantineOffersResponse.class
        );
    }
    /**
     * Настройки кабинета
     * Возвращает информацию о настройках кабинета, идентификатор которого указан в запросе.\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @return OASGetBusinessSettingsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetBusinessSettingsResponse getBusinessSettings(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetBusinessSettingsResponse) client.invoke(
            'POST', '/businesses/{businessId}/settings', '',
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetBusinessSettingsResponse.class
        );
    }
    /**
     * Информация о магазине
     * Возвращает информацию о магазине.\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @return OASGetCampaignResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetCampaignResponse getCampaign(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetCampaignResponse) client.invoke(
            'GET', '/campaigns/{campaignId}', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetCampaignResponse.class
        );
    }
    /**
     * Логины, связанные с магазином
     * Возвращает список логинов, у которых есть доступ к магазину.\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @return OASGetCampaignLoginsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetCampaignLoginsResponse getCampaignLogins(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetCampaignLoginsResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/logins', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetCampaignLoginsResponse.class
        );
    }
    /**
     * Информация о товарах, которые размещены в заданном магазине
     * Возвращает список товаров, которые размещены в заданном магазине. Для каждого товара указываются параметры размещения.\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSGetCampaignOffersRequest  (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @return OASGetCampaignOffersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetCampaignOffersResponse getCampaignOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSGetCampaignOffersRequest'), 'oaSGetCampaignOffersRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetCampaignOffersResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/offers',
            (OASGetCampaignOffersRequest) params.get('oaSGetCampaignOffersRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetCampaignOffersResponse.class
        );
    }
    /**
     * Список товаров, находящихся в карантине по цене в магазине
     * Возвращает список товаров, которые находятся в карантине по цене, установленной в заданном магазине.\n\nПроверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).\n\n{% note info &quot;𝓠 Что такое карантин?&quot; %}\n\n𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)\n\n{% endnote %}\n\nВ запросе можно использовать фильтры.\n\nРезультаты возвращаются постранично.\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSGetQuarantineOffersRequest  (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @return OASGetQuarantineOffersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetQuarantineOffersResponse getCampaignQuarantineOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSGetQuarantineOffersRequest'), 'oaSGetQuarantineOffersRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetQuarantineOffersResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/price-quarantine',
            (OASGetQuarantineOffersRequest) params.get('oaSGetQuarantineOffersRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetQuarantineOffersResponse.class
        );
    }
    /**
     * Регион магазина
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Вместо него используйте [GET campaigns/{campaignId}/settings](../../reference/campaigns/getCampaignSettings.md).\n\n{% endnote %}\n\nВозвращает регион, в котором находится магазин.\n|**⚙️ Лимит:** 5 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @return OASGetCampaignRegionResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetCampaignRegionResponse getCampaignRegion(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetCampaignRegionResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/region', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetCampaignRegionResponse.class
        );
    }
    /**
     * Настройки магазина
     * Возвращает информацию о настройках магазина, идентификатор которого указан в запросе.\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @return OASGetCampaignSettingsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetCampaignSettingsResponse getCampaignSettings(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetCampaignSettingsResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/settings', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetCampaignSettingsResponse.class
        );
    }
    /**
     * Список магазинов пользователя
     * Возвращает список магазинов, к которым имеет доступ пользователь — владелец авторизационного токена, использованного в запросе. Для агентских пользователей список состоит из подагентских магазинов.\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n
     * @param page Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром &#x60;page_size&#x60;.\n\n&#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.\n (optional, default to 1)
     * @param pageSize Размер страницы.\n\nИспользуется вместе с параметром &#x60;page_number&#x60;.\n\n&#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.\n (optional)
     * @return OASGetCampaignsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetCampaignsResponse getCampaigns(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page', (Integer) params.get('page')));
        query.addAll(client.makeParam('pageSize', (Integer) params.get('pageSize')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetCampaignsResponse) client.invoke(
            'GET', '/campaigns', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetCampaignsResponse.class
        );
    }
    /**
     * Магазины, доступные логину
     * Возвращает список магазинов, к которым у пользователя с указанным логином есть доступ.\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param login Логин пользователя. (required)
     * @param page Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром &#x60;page_size&#x60;.\n\n&#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.\n (optional, default to 1)
     * @param pageSize Размер страницы.\n\nИспользуется вместе с параметром &#x60;page_number&#x60;.\n\n&#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.\n (optional)
     * @return OASGetCampaignsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetCampaignsResponse getCampaignsByLogin(Map<String, Object> params) {
        client.assertNotNull(params.get('login'), 'login');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page', (Integer) params.get('page')));
        query.addAll(client.makeParam('pageSize', (Integer) params.get('pageSize')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetCampaignsResponse) client.invoke(
            'GET', '/campaigns/by_login/{login}', '',
            query, form,
            new Map<String, Object>{
                'login' => (String) params.get('login')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetCampaignsResponse.class
        );
    }
    /**
     * Лимит на установку кванта продажи и минимального количества товаров в заказе
     * Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.\n\nЕсли вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.\n\nПодробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n
     * @param oaSGetCategoriesMaxSaleQuantumReques  (required)
     * @return OASGetCategoriesMaxSaleQuantumRespon
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetCategoriesMaxSaleQuantumRespon getCategoriesMaxSaleQuantum(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSGetCategoriesMaxSaleQuantumReques'), 'oaSGetCategoriesMaxSaleQuantumReques');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetCategoriesMaxSaleQuantumRespon) client.invoke(
            'POST', '/categories/max-sale-quantum',
            (OASGetCategoriesMaxSaleQuantumReques) params.get('oaSGetCategoriesMaxSaleQuantumReques'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetCategoriesMaxSaleQuantumRespon.class
        );
    }
    /**
     * Дерево категорий
     * Возвращает дерево категорий Маркета.\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n
     * @param oaSGetCategoriesRequest  (optional)
     * @return OASGetCategoriesResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetCategoriesResponse getCategoriesTree(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetCategoriesResponse) client.invoke(
            'POST', '/categories/tree',
            (OASGetCategoriesRequest) params.get('oaSGetCategoriesRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetCategoriesResponse.class
        );
    }
    /**
     * Списки характеристик товаров по категориям
     * Возвращает список характеристик с допустимыми значениями для заданной категории.\n\n|**⚙️ Лимит:** 50 категорий в минуту |\n|-|\n
     * @param categoryId Идентификатор категории на Маркете.\n\nЧтобы узнать идентификатор категории, к которой относится интересующий вас товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).\n (required)
     * @return OASGetCategoryContentParametersRespo
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetCategoryContentParametersRespo getCategoryContentParameters(Map<String, Object> params) {
        client.assertNotNull(params.get('categoryId'), 'categoryId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetCategoryContentParametersRespo) client.invoke(
            'POST', '/category/{categoryId}/parameters', '',
            query, form,
            new Map<String, Object>{
                'categoryId' => (Long) params.get('categoryId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetCategoryContentParametersRespo.class
        );
    }
    /**
     * Получение истории сообщений в чате
     * Возвращает историю сообщений в чате с покупателем.\n\n|**⚙️ Лимит:** 10000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param chatId Идентификатор чата. (required)
     * @param oaSGetChatHistoryRequest description (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @return OASGetChatHistoryResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetChatHistoryResponse getChatHistory(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('chatId'), 'chatId');
        client.assertNotNull(params.get('oaSGetChatHistoryRequest'), 'oaSGetChatHistoryRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('chatId', (Long) params.get('chatId')));
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetChatHistoryResponse) client.invoke(
            'POST', '/businesses/{businessId}/chats/history',
            (OASGetChatHistoryRequest) params.get('oaSGetChatHistoryRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetChatHistoryResponse.class
        );
    }
    /**
     * Получение доступных чатов
     * Возвращает ваши чаты с покупателями.\n\n|**⚙️ Лимит:** 10000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSGetChatsRequest description (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @return OASGetChatsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetChatsResponse getChats(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSGetChatsRequest'), 'oaSGetChatsRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetChatsResponse) client.invoke(
            'POST', '/businesses/{businessId}/chats',
            (OASGetChatsRequest) params.get('oaSGetChatsRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetChatsResponse.class
        );
    }
    /**
     * Справочник служб доставки
     * Возвращает справочник служб доставки: идентификаторы и наименования.\n|**⚙️ Лимит:** 5 000 запросов в час|\n|-|\n
     * @return OASGetDeliveryServicesResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetDeliveryServicesResponse getDeliveryServices() {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetDeliveryServicesResponse) client.invoke(
            'GET', '/delivery/services', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetDeliveryServicesResponse.class
        );
    }
    /**
     * Информация о прайс-листе
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Не используйте его.\n\n{% endnote %}\n\nВозвращает информацию о прайс-листе, размещенном на Маркете для заданного магазина. Также ресурс возвращает результаты автоматических проверок прайс-листа.\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param feedId Идентификатор прайс-листа. (required)
     * @return OASGetFeedResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetFeedResponse getFeed(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('feedId'), 'feedId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetFeedResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/feeds/{feedId}', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'feedId' => (Long) params.get('feedId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetFeedResponse.class
        );
    }
    /**
     * Отчет по индексации прайс-листа
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Не используйте его.\n\n{% endnote %}\n\nВозвращает отчет по индексации прайс-листа для заданного магазина. Отчет позволяет получить статистику загрузки прайс-листа и результаты его автоматических проверок.\n\nДанные в отчете возвращаются в порядке убывания значений параметра &#x60;generationId&#x60;.\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param feedId Идентификатор прайс-листа. (required)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @param publishedTimeFrom Начальная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-21T00:42:42+03:00&#x60;.\n\nЗначение по умолчанию: последние восемь дней со времени отправки запроса.\n (optional)
     * @param publishedTimeTo Конечная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-31T00:42:42+03:00&#x60;.\n\nЗначение по умолчанию: дата и время отправки запроса.\n\n{% note info %}\n\nЕсли во время переключения между страницами выходных данных на Яндекс Маркете появятся новые результаты индексации прайс-листа, вы не получите часть данных. Чтобы этого не произошло, зафиксируйте выходные данные с помощью входного параметра &#x60;published_time_to&#x60;. Значение параметра не должно быть датой из будущего.\n\n{% endnote %}\n (optional)
     * @param status Статус индексации и проверки прайс-листа на соответствие техническим требованиям.\n\nВозможные значения:\n* &#x60;ERROR&#x60; — произошли ошибки.\n* &#x60;OK&#x60; — обработан без ошибок.\n* &#x60;WARNING&#x60; — наблюдались некритичные проблемы.\n (optional)
     * @return OASGetFeedIndexLogsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetFeedIndexLogsResponse getFeedIndexLogs(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('feedId'), 'feedId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));
        query.addAll(client.makeParam('published_time_from', (Datetime) params.get('publishedTimeFrom')));
        query.addAll(client.makeParam('published_time_to', (Datetime) params.get('publishedTimeTo')));
        query.addAll(client.makeParam('status', (OASFeedIndexLogsStatusType) params.get('status')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetFeedIndexLogsResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/feeds/{feedId}/index-logs', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'feedId' => (Long) params.get('feedId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetFeedIndexLogsResponse.class
        );
    }
    /**
     * Новые и обновленные отзывы о магазине
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Не используйте его.\n\n{% endnote %}\n\nВозвращает новые и обновленные отзывы о магазине на Маркете.\n\nРезультаты возвращаются постранично, одна страница содержит не более 20 отзывов. Выходные данные содержат идентификатор следующей страницы.\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @param fromDate Начальная дата обновления отзывов.\n\nЕсли параметр указан, возвращаются отзывы, которые были написаны или обновлены с этой даты.\n\nФормат даты: &#x60;ГГГГ-ММ-ДД&#x60;.\n (optional)
     * @return OASGetFeedbackListResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetFeedbackListResponse getFeedbackAndCommentUpdates(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));
        query.addAll(client.makeParam('from_date', (Date) params.get('fromDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetFeedbackListResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/feedback/updates', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetFeedbackListResponse.class
        );
    }
    /**
     * Список прайс-листов магазина
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Не используйте его.\n\n{% endnote %}\n\nВозвращает список прайс-листов, размещенных на Маркете для магазина. Также ресурс возвращает результаты автоматических проверок прайс-листов.\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @return OASGetFeedsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetFeedsResponse getFeeds(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetFeedsResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/feeds', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetFeedsResponse.class
        );
    }
    /**
     * Получение комментариев к отзыву
     * Возвращает комментарии к отзыву.\n\nРезультаты возвращаются постранично, одна страница содержит не более 20 комментариев.\n\nКомментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в &#x60;page_token&#x60;, если вы получали его ранее.\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSGetGoodsFeedbackCommentsRequest  (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @return OASGetGoodsFeedbackCommentsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetGoodsFeedbackCommentsResponse getGoodsFeedbackComments(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSGetGoodsFeedbackCommentsRequest'), 'oaSGetGoodsFeedbackCommentsRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetGoodsFeedbackCommentsResponse) client.invoke(
            'POST', '/businesses/{businessId}/goods-feedback/comments',
            (OASGetGoodsFeedbackCommentsRequest) params.get('oaSGetGoodsFeedbackCommentsRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetGoodsFeedbackCommentsResponse.class
        );
    }
    /**
     * Получение отзывов о товарах продавца
     * Возвращает все отзывы о товарах продавца по указанным фильтрам.\n\nРезультаты возвращаются постранично, одна страница содержит не более 20 отзывов.\n\nОтзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в &#x60;page_token&#x60;, если вы получали его ранее.\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @param oaSGetGoodsFeedbackRequest  (optional)
     * @return OASGetGoodsFeedbackResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetGoodsFeedbackResponse getGoodsFeedbacks(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetGoodsFeedbackResponse) client.invoke(
            'POST', '/businesses/{businessId}/goods-feedback',
            (OASGetGoodsFeedbackRequest) params.get('oaSGetGoodsFeedbackRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetGoodsFeedbackResponse.class
        );
    }
    /**
     * Отчет по товарам
     * Возвращает подробный отчет по товарам, которые вы разместили на Маркете. С помощью отчета вы можете узнать, например, об остатках на складе, об условиях хранения ваших товаров и т. д.\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSGetGoodsStatsRequest  (required)
     * @return OASGetGoodsStatsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetGoodsStatsResponse getGoodsStats(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSGetGoodsStatsRequest'), 'oaSGetGoodsStatsRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetGoodsStatsResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/stats/skus',
            (OASGetGoodsStatsRequest) params.get('oaSGetGoodsStatsRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetGoodsStatsResponse.class
        );
    }
    /**
     * Информация о скрытых вами товарах
     * Возвращает список скрытых вами товаров для заданного магазина.\n\nВ списке будут товары, скрытые любым способом — по API, с помощью YML-фида, в кабинете и так далее.\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param offerId Идентификатор скрытого предложения.\n (optional, default to new List<String>())
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @param offset Позиция в списке, начиная с которой возвращаются результаты ответа.\n\nИспользуется вместе с параметром &#x60;limit&#x60;.\n\nЕсли задан &#x60;offset&#x60;, параметры &#x60;page_number&#x60; и &#x60;page_size&#x60; игнорируются.\n\n&#x60;offset&#x60; игнорируется, если задан &#x60;page_token&#x60;.\n (optional)
     * @param page Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром &#x60;page_size&#x60;.\n\n&#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.\n (optional, default to 1)
     * @param pageSize Размер страницы.\n\nИспользуется вместе с параметром &#x60;page_number&#x60;.\n\n&#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.\n (optional)
     * @return OASGetHiddenOffersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetHiddenOffersResponse getHiddenOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('offer_id', (List<String>) params.get('offerId'), 'csv'));
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));
        query.addAll(client.makeParam('offset', (Integer) params.get('offset')));
        query.addAll(client.makeParam('page', (Integer) params.get('page')));
        query.addAll(client.makeParam('pageSize', (Integer) params.get('pageSize')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetHiddenOffersResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/hidden-offers', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetHiddenOffersResponse.class
        );
    }
    /**
     * Информация об одной модели
     * Возвращает информацию о модели товара.\n\nДля методов &#x60;GET models&#x60;, &#x60;GET models/{modelId}&#x60; и &#x60;POST models&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.\n\n|**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|\n|-|\n\n[//]: &lt;&gt; (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)\n
     * @param modelId Идентификатор модели товара. (required)
     * @param regionId Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n (required)
     * @param r_currency Валюта, в которой отображаются цены предложений на страницах с результатами поиска.\n\nВозможные значения:\n\n* &#x60;BYN&#x60; — белорусский рубль.\n\n* &#x60;KZT&#x60; — казахстанский тенге.\n\n* &#x60;RUR&#x60; — российский рубль.\n\n* &#x60;UAH&#x60; — украинская гривна.\n\nЗначение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).\n (optional)
     * @return OASGetModelsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetModelsResponse getModel(Map<String, Object> params) {
        client.assertNotNull(params.get('modelId'), 'modelId');
        client.assertNotNull(params.get('regionId'), 'regionId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('regionId', (Long) params.get('regionId')));
        query.addAll(client.makeParam('currency', (OASCurrencyType) params.get('r_currency')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetModelsResponse) client.invoke(
            'GET', '/models/{modelId}', '',
            query, form,
            new Map<String, Object>{
                'modelId' => (Long) params.get('modelId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetModelsResponse.class
        );
    }
    /**
     * Список предложений для одной модели
     * Возвращает информацию о первых десяти предложениях, расположенных на карточке модели.\n\nПредложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.\n\nДля групповых моделей метод не поддерживается. Идентификатор групповой модели игнорируется.\n\nДля методов &#x60;GET models/{modelId}/offers&#x60; и &#x60;POST models/offers&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.\n\n|**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|\n|-|\n\n[//]: &lt;&gt; (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)\n
     * @param modelId Идентификатор модели товара. (required)
     * @param regionId Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n (required)
     * @param r_currency Валюта, в которой отображаются цены предложений на страницах с результатами поиска.\n\nВозможные значения:\n\n* &#x60;BYN&#x60; — белорусский рубль.\n\n* &#x60;KZT&#x60; — казахстанский тенге.\n\n* &#x60;RUR&#x60; — российский рубль.\n\n* &#x60;UAH&#x60; — украинская гривна.\n\nЗначение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).\n (optional)
     * @param orderByPrice Направление сортировки по цене.\n\nВозможные значения:\n* &#x60;ASC&#x60; — сортировка по возрастанию.\n* &#x60;DESC&#x60; — сортировка по убыванию.\n\nЗначение по умолчанию: предложения выводятся в произвольном порядке.\n (optional)
     * @param count Количество предложений на странице ответа. (optional, default to 10)
     * @param page Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром &#x60;page_size&#x60;.\n\n&#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.\n (optional, default to 1)
     * @return OASGetModelsOffersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetModelsOffersResponse getModelOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('modelId'), 'modelId');
        client.assertNotNull(params.get('regionId'), 'regionId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('regionId', (Long) params.get('regionId')));
        query.addAll(client.makeParam('currency', (OASCurrencyType) params.get('r_currency')));
        query.addAll(client.makeParam('orderByPrice', (OASSortOrderType) params.get('orderByPrice')));
        query.addAll(client.makeParam('count', (Integer) params.get('count')));
        query.addAll(client.makeParam('page', (Integer) params.get('page')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetModelsOffersResponse) client.invoke(
            'GET', '/models/{modelId}/offers', '',
            query, form,
            new Map<String, Object>{
                'modelId' => (Long) params.get('modelId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetModelsOffersResponse.class
        );
    }
    /**
     * Информация о нескольких моделях
     * Возвращает информацию о моделях товаров.\n\nВ одном запросе можно получить информацию не более чем о 100 моделях.\n\nДля методов &#x60;GET models&#x60;, &#x60;GET models/{modelId}&#x60; и &#x60;POST models&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.\n\n|**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|\n|-|\n\n[//]: &lt;&gt; (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)\n
     * @param regionId Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n (required)
     * @param oaSGetModelsRequest  (required)
     * @param r_currency Валюта, в которой отображаются цены предложений на страницах с результатами поиска.\n\nВозможные значения:\n\n* &#x60;BYN&#x60; — белорусский рубль.\n\n* &#x60;KZT&#x60; — казахстанский тенге.\n\n* &#x60;RUR&#x60; — российский рубль.\n\n* &#x60;UAH&#x60; — украинская гривна.\n\nЗначение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).\n (optional)
     * @return OASGetModelsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetModelsResponse getModels(Map<String, Object> params) {
        client.assertNotNull(params.get('regionId'), 'regionId');
        client.assertNotNull(params.get('oaSGetModelsRequest'), 'oaSGetModelsRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('regionId', (Long) params.get('regionId')));
        query.addAll(client.makeParam('currency', (OASCurrencyType) params.get('r_currency')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetModelsResponse) client.invoke(
            'POST', '/models',
            (OASGetModelsRequest) params.get('oaSGetModelsRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetModelsResponse.class
        );
    }
    /**
     * Список предложений для нескольких моделей
     * Возвращает информацию о первых десяти предложениях, расположенных на карточках моделей, идентификаторы которых указаны в запросе.\n\nПредложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.\n\nДля групповых моделей выдача предложений не поддерживается. Идентификаторы групповых моделей игнорируются.\n\nВ одном запросе можно получить информацию о предложениях не более чем для 100 моделей.\n\nДля методов &#x60;GET models/{modelId}/offers&#x60; и &#x60;POST models/offers&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.\n\n|**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|\n|-|\n\n[//]: &lt;&gt; (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)\n
     * @param regionId Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n (required)
     * @param oaSGetModelsRequest  (required)
     * @param r_currency Валюта, в которой отображаются цены предложений на страницах с результатами поиска.\n\nВозможные значения:\n\n* &#x60;BYN&#x60; — белорусский рубль.\n\n* &#x60;KZT&#x60; — казахстанский тенге.\n\n* &#x60;RUR&#x60; — российский рубль.\n\n* &#x60;UAH&#x60; — украинская гривна.\n\nЗначение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).\n (optional)
     * @param orderByPrice Направление сортировки по цене.\n\nВозможные значения:\n* &#x60;ASC&#x60; — сортировка по возрастанию.\n* &#x60;DESC&#x60; — сортировка по убыванию.\n\nЗначение по умолчанию: предложения выводятся в произвольном порядке.\n (optional)
     * @return OASGetModelsOffersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetModelsOffersResponse getModelsOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('regionId'), 'regionId');
        client.assertNotNull(params.get('oaSGetModelsRequest'), 'oaSGetModelsRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('regionId', (Long) params.get('regionId')));
        query.addAll(client.makeParam('currency', (OASCurrencyType) params.get('r_currency')));
        query.addAll(client.makeParam('orderByPrice', (OASSortOrderType) params.get('orderByPrice')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetModelsOffersResponse) client.invoke(
            'POST', '/models/offers',
            (OASGetModelsRequest) params.get('oaSGetModelsRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetModelsOffersResponse.class
        );
    }
    /**
     * Получение информации о заполненности карточек магазина
     * Возвращает сведения о состоянии контента для заданных товаров:\n\n* создана ли карточка товара и в каком она статусе;\n* заполненность карточки в процентах;\n* переданные характеристики товаров;\n* есть ли ошибки или предупреждения, связанные с контентом;\n* рекомендации по заполнению карточки.\n\n|**⚙️ Лимит:** 600 запросов в минуту|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @param oaSGetOfferCardsContentStatusRequest  (optional)
     * @return OASGetOfferCardsContentStatusRespons
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetOfferCardsContentStatusRespons getOfferCardsContentStatus(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetOfferCardsContentStatusRespons) client.invoke(
            'POST', '/businesses/{businessId}/offer-cards',
            (OASGetOfferCardsContentStatusRequest) params.get('oaSGetOfferCardsContentStatusRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetOfferCardsContentStatusRespons.class
        );
    }
    /**
     * Список товаров в каталоге
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).\n\n{% endnote %}\n\nДля каждого товара, который вы размещаете на Маркете, возвращается информация о карточках Маркета, к которым привязан этот товар:\n\n* Идентификатор текущей карточки (marketSku), карточки, которая проходит модерацию и последней отклоненной карточки.\n* Описание товара, которое указано на карточке Маркета. Например, размер упаковки и вес товара.\n\nРезультаты возвращаются постранично. Выходные данные содержат идентификатор следующей страницы.\n\n{% note info %}\n\nКоличество товаров в каталоге магазина считается по данным за последние семь дней (не включая сегодня).\n\n{% endnote %}\n\n|**⚙️ Лимит:** рассчитывается по [формуле](*rule)|\n|-|\n\n[//]: &lt;&gt; (rule: суточный лимит товаров — количество товаров в каталоге магазина * 25)\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param offerId Идентификатор товара в каталоге. (optional, default to new List<String>())
     * @param shopSku Ваш SKU товара.\n\nПараметр может быть указан несколько раз, например:\n\n&#x60;&#x60;&#x60;\n...shop_sku&#x3D;123&amp;shop_sku&#x3D;129&amp;shop_sku&#x3D;141...\n&#x60;&#x60;&#x60;\n\nВ запросе можно указать либо параметр &#x60;shopSku&#x60;, либо любые параметры для фильтрации товаров. Совместное использование параметра &#x60;shopSku&#x60; и параметров для фильтрации приведет к ошибке.\n (optional, default to new List<String>())
     * @param mappingKind Тип маппинга. (optional)
     * @param status Фильтрация по статусу публикации товара:\n\n* &#x60;READY&#x60; — товар прошел модерацию.\n* &#x60;IN_WORK&#x60; — товар проходит модерацию.\n* &#x60;NEED_CONTENT&#x60; — для товара без SKU на Маркете marketSku нужно найти карточку самостоятельно или создать ее.\n* &#x60;NEED_INFO&#x60; — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара.\n* &#x60;REJECTED&#x60; — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары.\n* &#x60;SUSPENDED&#x60; — товар не прошел модерацию, так как Маркет пока не размещает подобные товары.\n* &#x60;OTHER&#x60; — товар не прошел модерацию по другой причине.\n\nМожно указать несколько статусов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:\n\n&#x60;&#x60;&#x60;\n...status&#x3D;READY,IN_WORK...\n...status&#x3D;READY&amp;status&#x3D;IN_WORK...\n&#x60;&#x60;&#x60;\n\nВ запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке.\n (optional, default to new List<OASOfferProcessingStatusType>())
     * @param availability Фильтрация по планам поставок товара:\n\n* &#x60;ACTIVE&#x60; — поставки будут.\n* &#x60;INACTIVE&#x60; — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять.\n* &#x60;DELISTED&#x60; — архив: товар закончился на складе, и его поставок больше не будет.\n\nМожно указать несколько значений в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:\n\n&#x60;&#x60;&#x60;\n...availability&#x3D;INACTIVE,DELISTED...\n...availability&#x3D;INACTIVE&amp;availability&#x3D;DELISTED...\n&#x60;&#x60;&#x60;\n\nВ запросе можно указать либо параметр &#x60;shopSku&#x60;, либо любые параметры для фильтрации товаров. Совместное использование параметра &#x60;shopSku&#x60; и параметров для фильтрации приведет к ошибке.\n (optional, default to new List<OASOfferAvailabilityStatusType>())
     * @param categoryId Фильтрация по идентификатору категории на Маркете.\n\nЧтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).\n\nМожно указать несколько идентификаторов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:\n\n&#x60;&#x60;&#x60;\n...category_id&#x3D;14727164,14382343...\n...category_id&#x3D;14727164&amp;category_id&#x3D;14382343...\n&#x60;&#x60;&#x60;\n\nВ запросе можно указать либо параметр &#x60;shopSku&#x60;, либо любые параметры для фильтрации товаров. Совместное использование параметра &#x60;shopSku&#x60; и параметров для фильтрации приведет к ошибке.\n (optional, default to new List<Integer>())
     * @param vendor Фильтрация по бренду товара.\n\nМожно указать несколько брендов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:\n\n&#x60;&#x60;&#x60;\n...vendor&#x3D;Aqua%20Minerale,Borjomi...\n...vendor&#x3D;Aqua%20Minerale&amp;vendor&#x3D;Borjomi...\n&#x60;&#x60;&#x60;\n\nЧтобы товар попал в результаты фильтрации, его бренд должен точно совпадать с одним из указанных в запросе. Например, если указан бренд Schwarzkopf, то в результатах не будет товаров Schwarzkopf Professional.\n\nЕсли в названии бренда есть символы, которые не входят в таблицу ASCII (в том числе кириллические символы), используйте для них URL-кодирование. Например, пробел — %20, апостроф «\&#39;» — %27 и т. д. Подробнее см. в разделе [Кодирование URL русскоязычной Википедии](https://ru.wikipedia.org/wiki/URL#Кодирование_URL).\n\nВ запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке.\n (optional, default to new List<String>())
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @return OASGetOfferMappingEntriesResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetOfferMappingEntriesResponse getOfferMappingEntries(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('offer_id', (List<String>) params.get('offerId'), 'csv'));
        query.addAll(client.makeParam('shop_sku', (List<String>) params.get('shopSku'), 'csv'));
        query.addAll(client.makeParam('mapping_kind', (OASOfferMappingKindType) params.get('mappingKind')));
        query.addAll(client.makeParam('status', (List<OASOfferProcessingStatusType>) params.get('status'), 'csv'));
        query.addAll(client.makeParam('availability', (List<OASOfferAvailabilityStatusType>) params.get('availability'), 'csv'));
        query.addAll(client.makeParam('category_id', (List<Integer>) params.get('categoryId'), 'csv'));
        query.addAll(client.makeParam('vendor', (List<String>) params.get('vendor'), 'csv'));
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetOfferMappingEntriesResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/offer-mapping-entries', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetOfferMappingEntriesResponse.class
        );
    }
    /**
     * Информация о товарах в каталоге
     * Возвращает список товаров в каталоге, их категории на Маркете и характеристики каждого товара.\n\nМожно использовать тремя способами:\n* задать список интересующих SKU;\n* задать фильтр — в этом случае результаты возвращаются постранично;\n* не передавать тело запроса, чтобы получить список всех товаров в каталоге.\n\n|**⚙️ Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @param oaSGetOfferMappingsRequest  (optional)
     * @return OASGetOfferMappingsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetOfferMappingsResponse getOfferMappings(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetOfferMappingsResponse) client.invoke(
            'POST', '/businesses/{businessId}/offer-mappings',
            (OASGetOfferMappingsRequest) params.get('oaSGetOfferMappingsRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetOfferMappingsResponse.class
        );
    }
    /**
     * Рекомендации Маркета, касающиеся цен
     * Метод возвращает рекомендации нескольких типов.\n\n**1. Порог для привлекательной цены. Он нужен для участия в софинансировании скидок.**\n\nПоказывает, какие **цены для участия** нужно установить, чтобы получить максимальные шансы на срабатывание скидок, софинансируемых Маркетом. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)\n\n**2. Оценка привлекательности цен на витрине.**\n\nПривлекательность влияет на вероятность срабатывания скидок за счет Маркета. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#validation)\n\nВ запросе можно использовать фильтры.\n\nРезультаты возвращаются постранично.\n\n|**⚙️ Лимит:** 100 запросов в минуту|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSGetOfferRecommendationsRequest  (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @return OASGetOfferRecommendationsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetOfferRecommendationsResponse getOfferRecommendations(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSGetOfferRecommendationsRequest'), 'oaSGetOfferRecommendationsRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetOfferRecommendationsResponse) client.invoke(
            'POST', '/businesses/{businessId}/offers/recommendations',
            (OASGetOfferRecommendationsRequest) params.get('oaSGetOfferRecommendationsRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetOfferRecommendationsResponse.class
        );
    }
    /**
     * Предложения магазина
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Не используйте его.\n\n{% endnote %}\n\nПозволяет фильтровать информацию о предложениях магазина, размещенных на Маркете, и искать предложения по заданному поисковому запросу.\n\nПоиск предложений, размещенных на Маркете, работает по поисковому запросу аналогично поиску Маркета. Результаты возвращаются с использованием пейджера.\n\nВ ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Маркета, с которой соотнесено предложение, и аукционные ставки на него.\n\n{% note info %}\n\nИз-за особенностей поиска Маркета иногда на последних страницах пейджера фактическое количество результатов оказывается меньше количества, указанного ранее на предыдущих страницах.\n\nВ связи с этим настоятельно рекомендуется анализировать содержимое параметра pager для каждой полученной страницы.\n\n{% endnote %}\n\n{% note info %}\n\nКоличество предложений считается по данным за последние семь дней (не включая сегодня).\n\nДля новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.\n\n{% endnote %}\n\n|**⚙️ Лимит:** рассчитывается по [формуле](*rule)|\n|-|\n\n[//]: &lt;&gt; (rule: суточный лисит товаров — среднее количество таваров в каталоге за неделю * 25)\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param query Поисковый запрос.\n\nПоддерживается язык запросов.\n\nЗначение по умолчанию: все предложения магазина, размещенные на Маркете.\n (optional)
     * @param feedId Идентификатор прайс-листа. (optional)
     * @param shopCategoryId Идентификатор категории предложения, указанный магазином в прайс-листе.\n\nПараметр выводится только для предложений, у которых указана категория в прайс-листе.\n\nПараметр доступен начиная с версии 2.0 партнерского API.\n (optional)
     * @param r_currency Валюта, в которой указана цена предложения.\n\nВозможные значения:\n\n* &#x60;BYN&#x60; — белорусский рубль.\n\n* &#x60;KZT&#x60; — казахстанский тенге.\n\n* &#x60;RUR&#x60; — российский рубль.\n\n* &#x60;UAH&#x60; — украинская гривна.\n (optional)
     * @param matched Фильтр по признаку соотнесения предложения и карточки модели.\n\nВозможные значения:\n\n* &#x60;0 / FALSE / NO&#x60; — поиск выполняется среди предложений, не соотнесенных ни с какой карточкой модели.\n\n* &#x60;1 / TRUE / YES&#x60; — поиск выполняется среди предложений, соотнесенных с карточками моделей).\n (optional)
     * @param page Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром &#x60;page_size&#x60;.\n\n&#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.\n (optional, default to 1)
     * @param pageSize Размер страницы.\n\nИспользуется вместе с параметром &#x60;page_number&#x60;.\n\n&#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.\n (optional)
     * @return OASGetOffersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetOffersResponse getOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('query', (String) params.get('query')));
        query.addAll(client.makeParam('feedId', (Long) params.get('feedId')));
        query.addAll(client.makeParam('shopCategoryId', (String) params.get('shopCategoryId')));
        query.addAll(client.makeParam('currency', (OASCurrencyType) params.get('r_currency')));
        query.addAll(client.makeParam('matched', (Boolean) params.get('matched')));
        query.addAll(client.makeParam('page', (Integer) params.get('page')));
        query.addAll(client.makeParam('pageSize', (Integer) params.get('pageSize')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetOffersResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/offers', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetOffersResponse.class
        );
    }
    /**
     * Информация об одном заказе
     * Возвращает информацию о заказе.\n\nПолучить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @return OASGetOrderResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetOrderResponse getOrder(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetOrderResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/orders/{orderId}', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetOrderResponse.class
        );
    }
    /**
     * Информация о покупателе — юридическом лице
     * Возвращает информацию о покупателе по идентификатору заказа.\n\n{% note info &quot;&quot; %}\n\nЧтобы получить информацию о покупателе, который является физическим лицом, воспользуйтесь запросом [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).\n\n{% endnote %}\n\nПолучить данные можно, только если заказ находится в статусе &#x60;PROCESSING&#x60;, &#x60;DELIVERY&#x60;, &#x60;PICKUP&#x60; или &#x60;DELIVERED&#x60;.\n\nЕсли у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).\n\n|**⚙️ Лимит:** 3 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @return OASGetBusinessBuyerInfoResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetBusinessBuyerInfoResponse getOrderBusinessBuyerInfo(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetBusinessBuyerInfoResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/orders/{orderId}/business-buyer', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetBusinessBuyerInfoResponse.class
        );
    }
    /**
     * Информация о документах
     * Возвращает информацию о документах по идентификатору заказа.\n\nПолучить данные можно после того, как заказ перейдет в статус &#x60;DELIVERED&#x60;.\n\nЕсли у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).\n\n|**⚙️ Лимит:** 3 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @return OASGetBusinessDocumentsInfoResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetBusinessDocumentsInfoResponse getOrderBusinessDocumentsInfo(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetBusinessDocumentsInfoResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/orders/{orderId}/documents', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetBusinessDocumentsInfoResponse.class
        );
    }
    /**
     * Информация о покупателе — физическом лице
     * Возвращает информацию о покупателе по идентификатору заказа.\n\n{% note info &quot;&quot; %}\n\nЧтобы получить информацию о покупателе, который является юридическим лицом, воспользуйтесь запросом [POST campaigns/{campaignId}/orders/{orderId}/business-buyer](../../reference/order-business-information/getOrderBusinessBuyerInfo.md).\n\n{% endnote %}\n\nПолучить данные можно, только если заказ находится в статусе &#x60;PROCESSING&#x60;, &#x60;DELIVERY&#x60; или &#x60;PICKUP&#x60;.\n\nЕсли у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).\n\n|**⚙️ Лимит:** 3 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @return OASGetOrderBuyerInfoResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetOrderBuyerInfoResponse getOrderBuyerInfo(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetOrderBuyerInfoResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/orders/{orderId}/buyer', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetOrderBuyerInfoResponse.class
        );
    }
    /**
     * Данные для самостоятельного изготовления ярлыков
     * Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @return OASGetOrderLabelsDataResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetOrderLabelsDataResponse getOrderLabelsData(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetOrderLabelsDataResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/orders/{orderId}/delivery/labels/data', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetOrderLabelsDataResponse.class
        );
    }
    /**
     * Информация о нескольких заказах
     * Возвращает информацию о заказах. Запрос можно использовать, чтобы узнать, нет ли новых заказов.\n\nДоступна фильтрация по нескольким характеристикам заказов:\n\n* дате оформления;\n\n* статусу;\n\n* идентификаторам заказов;\n\n* этапу обработки или причине отмены;\n\n* типу (настоящий или тестовый);\n\n* дате отгрузки в службу доставки;\n\n* дате и времени обновления заказа.\n\nИнформация о заказах, доставленных или отмененных больше 30 дней назад, не возвращается. Ее можно получить с помощью запроса информации об отдельном заказе [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) (если у вас есть идентификатор заказа) или запроса отчета по заказам [POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md).\n\nМаксимальный диапазон дат за один запрос к ресурсу — 30 дней. Максимальное количество заказов в выходных данных запроса — 50.\n\nРезультаты возвращаются постранично. Для навигации по страницам используйте параметры &#x60;page_token&#x60; и &#x60;limit&#x60;.\n\nПолучить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderIds Фильтрация заказов по идентификаторам.\n&lt;br&gt;&lt;br&gt;\n⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым.\n (optional, default to new List<Long>())
     * @param status Статус заказа:\n\n* &#x60;CANCELLED&#x60; — заказ отменен.\n\n* &#x60;DELIVERED&#x60; — заказ получен покупателем.\n\n* &#x60;DELIVERY&#x60; — заказ передан в службу доставки.\n\n* &#x60;PICKUP&#x60; — заказ доставлен в пункт самовывоза.\n\n* &#x60;PROCESSING&#x60; — заказ находится в обработке.\n\n* &#x60;UNPAID&#x60; — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).\n\nТакже могут возвращаться другие значения. Обрабатывать их не требуется.\n (optional, default to new List<OASOrderStatusType>())
     * @param substatus Этап обработки заказа (если он имеет статус &#x60;PROCESSING&#x60;) или причина отмены заказа (если он имеет статус &#x60;CANCELLED&#x60;).\n\nВозможные значения для заказа в статусе &#x60;PROCESSING&#x60;:\n\n* &#x60;STARTED&#x60; — заказ подтвержден, его можно начать обрабатывать.\n* &#x60;READY_TO_SHIP&#x60; — заказ собран и готов к отправке.\n* &#x60;SHIPPED&#x60; — заказ передан службе доставки.\n\nВозможные значения для заказа в статусе &#x60;CANCELLED&#x60;:\n\n* &#x60;DELIVERY_SERVICE_UNDELIVERED&#x60; — служба доставки не смогла доставить заказ.\n\n* &#x60;PROCESSING_EXPIRED&#x60; — значение более не используется.\n\n* &#x60;REPLACING_ORDER&#x60; — покупатель решил заменить товар другим по собственной инициативе.\n\n* &#x60;RESERVATION_EXPIRED&#x60; — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.\n\n* &#x60;RESERVATION_FAILED&#x60; — Маркет не может продолжить дальнейшую обработку заказа.\n\n* &#x60;SHOP_FAILED&#x60; — магазин не может выполнить заказ.\n\n* &#x60;USER_CHANGED_MIND&#x60; — покупатель отменил заказ по личным причинам.\n\n* &#x60;USER_NOT_PAID&#x60; — покупатель не оплатил заказ (для типа оплаты &#x60;PREPAID&#x60;) в течение 30 минут.\n\n* &#x60;USER_REFUSED_DELIVERY&#x60; — покупателя не устроили условия доставки.\n\n* &#x60;USER_REFUSED_PRODUCT&#x60; — покупателю не подошел товар.\n\n* &#x60;USER_REFUSED_QUALITY&#x60; — покупателя не устроило качество товара.\n\n* &#x60;USER_UNREACHABLE&#x60; — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:\n\n  * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;\n  * перерыв между первым и третьим звонком не менее 90 минут;\n  * соединение не короче 5 секунд.\n\n  Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400.\n* &#x60;USER_WANTS_TO_CHANGE_DELIVERY_DATE&#x60; — покупатель хочет получить заказ в другой день.\n* &#x60;CANCELLED_COURIER_NOT_FOUND&#x60; — не удалось найти курьера.\n\nТакже могут возвращаться другие значения. Обрабатывать их не требуется.\n (optional, default to new List<OASOrderSubstatusType>())
     * @param fromDate Начальная дата для фильтрации заказов по дате оформления.\n\nФормат даты: &#x60;ДД-ММ-ГГГГ&#x60;.\n\nМежду начальной и конечной датой (параметр &#x60;toDate&#x60;) должно быть не больше 30 дней.\n\nЗначение по умолчанию: 30 дней назад от текущей даты.\n (optional)
     * @param toDate Конечная дата для фильтрации заказов по дате оформления.\n\nПоказываются заказы, созданные до 00:00 указанного дня.\n\nФормат даты: &#x60;ДД-ММ-ГГГГ&#x60;.\n\nМежду начальной (параметр &#x60;fromDate&#x60;) и конечной датой должно быть не больше 30 дней.\n\nЗначение по умолчанию: текущая дата.\n (optional)
     * @param supplierShipmentDateFrom Начальная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр &#x60;shipmentDate&#x60;).\n\nФормат даты: &#x60;ДД-ММ-ГГГГ&#x60;.\n\nМежду начальной и конечной датой (параметр &#x60;supplierShipmentDateTo&#x60;) должно быть не больше 30 дней.\n\nНачальная дата включается в интервал для фильтрации.\n (optional)
     * @param supplierShipmentDateTo Конечная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр &#x60;shipmentDate&#x60;).\n\nФормат даты: &#x60;ДД-ММ-ГГГГ&#x60;.\n\nМежду начальной (параметр &#x60;supplierShipmentDateFrom&#x60;) и конечной датой должно быть не больше 30 дней.\n\nКонечная дата не включается в интервал для фильтрации.\n (optional)
     * @param updatedAtFrom Начальная дата для фильтрации заказов по дате и времени обновления (параметр &#x60;updatedAt&#x60;).\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-21T00:42:42+03:00&#x60;.\n\nМежду начальной и конечной датой (параметр &#x60;updatedAtTo&#x60;) должно быть не больше 30 дней.\n\nНачальная дата включается в интервал для фильтрации.\n (optional)
     * @param updatedAtTo Конечная дата для фильтрации заказов по дате и времени обновления (параметр &#x60;updatedAt&#x60;).\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-21T00:42:42+03:00&#x60;.\n\nМежду начальной (параметр &#x60;updatedAtFrom&#x60;) и конечной датой должно быть не больше 30 дней.\n\nКонечная дата не включается в интервал для фильтрации.\n (optional)
     * @param dispatchType Способ отгрузки (optional)
     * @param fake Фильтрация заказов по типам:\n\n* &#x60;false&#x60; — настоящий заказ покупателя.\n\n* &#x60;true&#x60; — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета.\n (optional, default to false)
     * @param hasCis Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации [в системе «Честный ЗНАК»](https://честныйзнак.рф/):\n\n* &#x60;true&#x60; — да.\n\n* &#x60;false&#x60; — нет.\n\nТакие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям.\n (optional, default to false)
     * @param onlyWaitingForCancellationApprove **Только для модели DBS**\n\nФильтрация заказов по наличию запросов покупателей на отмену.\n\nПри значение &#x60;true&#x60; возвращаются только заказы, которые находятся в статусе &#x60;DELIVERY&#x60; или &#x60;PICKUP&#x60; и которые пользователи решили отменить.\n\nЧтобы подтвердить или отклонить отмену, отправьте запрос [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation).\n (optional, default to false)
     * @param onlyEstimatedDelivery Фильтрация заказов с долгой доставкой (31-60 дней) по подтвержденной дате доставки:\n\n* &#x60;true&#x60; — возвращаются только заказы с неподтвержденной датой доставки.\n* &#x60;false&#x60; — фильтрация не применяется.\n (optional, default to false)
     * @param buyerType Фильтрация заказов по типу покупателя.\n (optional)
     * @param page Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром &#x60;page_size&#x60;.\n\n&#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.\n (optional, default to 1)
     * @param pageSize Размер страницы.\n\nИспользуется вместе с параметром &#x60;page_number&#x60;.\n\n&#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.\n (optional)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @return OASGetOrdersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetOrdersResponse getOrders(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('orderIds', (List<Long>) params.get('orderIds'), 'csv'));
        query.addAll(client.makeParam('status', (Set<OASOrderStatusType>) params.get('status'), 'csv'));
        query.addAll(client.makeParam('substatus', (Set<OASOrderSubstatusType>) params.get('substatus'), 'csv'));
        query.addAll(client.makeParam('fromDate', (Date) params.get('fromDate')));
        query.addAll(client.makeParam('toDate', (Date) params.get('toDate')));
        query.addAll(client.makeParam('supplierShipmentDateFrom', (Date) params.get('supplierShipmentDateFrom')));
        query.addAll(client.makeParam('supplierShipmentDateTo', (Date) params.get('supplierShipmentDateTo')));
        query.addAll(client.makeParam('updatedAtFrom', (Datetime) params.get('updatedAtFrom')));
        query.addAll(client.makeParam('updatedAtTo', (Datetime) params.get('updatedAtTo')));
        query.addAll(client.makeParam('dispatchType', (OASOrderDeliveryDispatchType) params.get('dispatchType')));
        query.addAll(client.makeParam('fake', (Boolean) params.get('fake')));
        query.addAll(client.makeParam('hasCis', (Boolean) params.get('hasCis')));
        query.addAll(client.makeParam('onlyWaitingForCancellationApprove', (Boolean) params.get('onlyWaitingForCancellationApprove')));
        query.addAll(client.makeParam('onlyEstimatedDelivery', (Boolean) params.get('onlyEstimatedDelivery')));
        query.addAll(client.makeParam('buyerType', (OASOrderBuyerType) params.get('buyerType')));
        query.addAll(client.makeParam('page', (Integer) params.get('page')));
        query.addAll(client.makeParam('pageSize', (Integer) params.get('pageSize')));
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetOrdersResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/orders', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetOrdersResponse.class
        );
    }
    /**
     * Детальная информация по заказам
     * Возвращает информацию по заказам на Маркете, в которых есть ваши товары. С помощью нее вы можете собрать статистику по вашим заказам и узнать, например, какие из товаров чаще всего возвращаются покупателями, какие, наоборот, пользуются большим спросом, какая комиссия начисляется за заказы и т. п.\n\n{% note info &quot;&quot; %}\n\nРаньше генерация детальной информации по заказам называлась **Отчет по заказам**. Сейчас это новый отчет. [Подробнее об отчете](../../reference/reports/generateUnitedOrdersReport.md)\n\n{% endnote %}\n\nВ одном запросе можно получить информацию не более чем по 200 заказам.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @param oaSGetOrdersStatsRequest  (optional)
     * @return OASGetOrdersStatsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetOrdersStatsResponse getOrdersStats(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetOrdersStatsResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/stats/orders',
            (OASGetOrdersStatsRequest) params.get('oaSGetOrdersStatsRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetOrdersStatsResponse.class
        );
    }
    /**
     * Информация об одной точке продаж
     * Возвращает информацию о точках продаж магазина.\n\nВ течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.\n\n|**⚙️ Лимит:** 100 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param outletId Идентификатор точки продаж. (required)
     * @return OASGetOutletResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetOutletResponse getOutlet(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('outletId'), 'outletId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetOutletResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/outlets/{outletId}', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'outletId' => (Long) params.get('outletId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetOutletResponse.class
        );
    }
    /**
     * Информация о лицензиях для точек продаж
     * Возвращает информацию о лицензиях для точек продаж.\n\nВ течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.\n\n|**⚙️ Лимит:** 100 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param outletIds Список идентификаторов точек продаж, для которых нужно получить информацию о лицензиях. Идентификаторы указываются через запятую.\n\nВ запросе должен быть либо параметр &#x60;outletIds&#x60;, либо параметр &#x60;ids&#x60;. Запрос с обоими параметрами или без них приведет к ошибке.\n (optional, default to new List<Long>())
     * @param ids Список идентификаторов лицензий. (optional, default to new List<Long>())
     * @return OASGetOutletLicensesResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetOutletLicensesResponse getOutletLicenses(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('outletIds', (Set<Long>) params.get('outletIds'), 'csv'));
        query.addAll(client.makeParam('ids', (Set<Long>) params.get('ids'), 'csv'));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetOutletLicensesResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/outlets/licenses', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetOutletLicensesResponse.class
        );
    }
    /**
     * Информация о нескольких точках продаж
     * Возвращает список точек продаж магазина.\n\nВ течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.\n\n|**⚙️ Лимит:** 100 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param regionId Идентификатор региона.\nЕсли задать идентификатор родительского региона любого уровня, в выходных данных будут отображены точки продаж всех дочерних регионов.\nИдентификатор региона можно получить c помощью метода [GET regions](../../reference/regions/searchRegionsByName.md).\n (optional)
     * @param shopOutletCode Идентификатор точки продаж, присвоенный магазином. (optional)
     * @param regionId2 {% note warning &quot;&quot; %}\n\nЭтот параметр устарел. Для указания региона используйте &#x60;region_id&#x60;.\n\n{% endnote %}\n (optional)
     * @return OASGetOutletsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetOutletsResponse getOutlets(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('region_id', (Long) params.get('regionId')));
        query.addAll(client.makeParam('shop_outlet_code', (String) params.get('shopOutletCode')));
        query.addAll(client.makeParam('regionId', (Long) params.get('regionId2')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetOutletsResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/outlets', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetOutletsResponse.class
        );
    }
    /**
     * Список цен
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Вместо него используйте [POST campaigns/{campaignId}/offer-prices](../../reference/assortment/getPricesByOfferIds.md).\n\n{% endnote %}\n\nВозвращает список цен, установленных вами на товары любым способом: например, через партнерский API или в файле с каталогом.\n\n{% note info %}\n\nОбщее количество товаров считается по данным за последние семь дней (не включая сегодня) и не может быть выше 2 миллионов.\n\n{% endnote %}\n\nСпособы установки цен описаны [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/assortment/operations/prices.html).\n\n|**⚙️ Лимит:** &#x60;&#x60;&#x60;(количество товаров партнера на витрине) * 25&#x60;&#x60;&#x60; товаров в сутки|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @param archived Фильтр по нахождению в архиве. (optional, default to false)
     * @return OASGetPricesResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetPricesResponse getPrices(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));
        query.addAll(client.makeParam('archived', (Boolean) params.get('archived')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetPricesResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/offer-prices', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetPricesResponse.class
        );
    }
    /**
     * Просмотр цен на указанные товары в магазине
     * Возвращает список цен на указанные товары в магазине.\n\n{% note warning &quot;Метод только для отдельных магазинов&quot; %}\n\nИспользуйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.\n\nДля просмотра базовых цен используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).\n\n{% endnote %}\n\n|**⚙️ Лимит:** рассчитывается по [формуле](*rule)|\n|-|\n\n[//]: &lt;&gt; (rule: суточный лимит товаров — количество товаров на витрине * 25)\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @param oaSGetPricesByOfferIdsRequest  (optional)
     * @return OASGetPricesByOfferIdsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetPricesByOfferIdsResponse getPricesByOfferIds(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetPricesByOfferIdsResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/offer-prices',
            (OASGetPricesByOfferIdsRequest) params.get('oaSGetPricesByOfferIdsRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetPricesByOfferIdsResponse.class
        );
    }
    /**
     * Получение списка товаров, которые участвуют или могут участвовать в акции
     * Возвращает список товаров, которые участвуют или могут участвовать в акции.\n\n{% note warning %}\n\nВ параметре &#x60;limit&#x60; не передавайте значение больше 500.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 10000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSGetPromoOffersRequest  (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @return OASGetPromoOffersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetPromoOffersResponse getPromoOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSGetPromoOffersRequest'), 'oaSGetPromoOffersRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetPromoOffersResponse) client.invoke(
            'POST', '/businesses/{businessId}/promos/offers',
            (OASGetPromoOffersRequest) params.get('oaSGetPromoOffersRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetPromoOffersResponse.class
        );
    }
    /**
     * Получение списка акций
     * Возвращает информацию об акциях Маркета.\n\nПо умолчанию возвращаются акции, в которых продавец участвует или может принять участие.\n\nЧтобы получить текущие или завершенные акции, передайте параметр &#x60;participation&#x60;.\n\nТипы акций, которые возвращаются в ответе:\n\n* прямая скидка;\n* флеш-акция;\n* скидка по промокоду.\n\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSGetPromosRequest  (optional)
     * @return OASGetPromosResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetPromosResponse getPromos(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetPromosResponse) client.invoke(
            'POST', '/businesses/{businessId}/promos',
            (OASGetPromosRequest) params.get('oaSGetPromosRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetPromosResponse.class
        );
    }
    /**
     * Заказы, которые повлияли на индекс качества
     * Возвращает список заказов, которые повлияли на индекс качества магазина. Чтобы узнать значение индекса качества, выполните запрос [POST businesses/{businessId}/ratings/quality](../../reference/ratings/getQualityRatings.md).\n\n|**⚙️ Лимит:** 100000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @return OASGetQualityRatingDetailsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetQualityRatingDetailsResponse getQualityRatingDetails(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetQualityRatingDetailsResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/ratings/quality/details', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetQualityRatingDetailsResponse.class
        );
    }
    /**
     * Индекс качества магазинов
     * Возвращает значение индекса качества магазинов и его составляющие.\n\nПодробнее об индексе качества читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/score/).\n\n|**⚙️ Лимит:** 10000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSGetQualityRatingRequest  (required)
     * @return OASGetQualityRatingResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetQualityRatingResponse getQualityRatings(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSGetQualityRatingRequest'), 'oaSGetQualityRatingRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetQualityRatingResponse) client.invoke(
            'POST', '/businesses/{businessId}/ratings/quality',
            (OASGetQualityRatingRequest) params.get('oaSGetQualityRatingRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetQualityRatingResponse.class
        );
    }
    /**
     * Получение заданного отчета
     * Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.\n\nЧтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)\n\n|**⚙️ Лимит:** 100 запросов в минуту|\n|-|\n
     * @param reportId Идентификатор отчета, который вы получили после запуска генерации.\n (required)
     * @return OASGetReportInfoResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetReportInfoResponse getReportInfo(Map<String, Object> params) {
        client.assertNotNull(params.get('reportId'), 'reportId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetReportInfoResponse) client.invoke(
            'GET', '/reports/info/{reportId}', '',
            query, form,
            new Map<String, Object>{
                'reportId' => (String) params.get('reportId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetReportInfoResponse.class
        );
    }
    /**
     * Информация о невыкупе или возврате
     * Получает информацию по одному невыкупу или возврату.\n\n|**⚙️ Лимит:** 10 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param returnId Идентификатор возврата. (required)
     * @return OASGetReturnResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetReturnResponse getReturn(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        client.assertNotNull(params.get('returnId'), 'returnId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetReturnResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId'),
                'returnId' => (Long) params.get('returnId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetReturnResponse.class
        );
    }
    /**
     * Получение заявления на возврат
     * Загружает заявление покупателя на возврат товара.\n\n|**⚙️ Лимит:** 10 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param returnId Идентификатор возврата. (required)
     * @return Blob
     * @throws OAS.ApiException if fails to make API call
     */
    public Blob getReturnApplication(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        client.assertNotNull(params.get('returnId'), 'returnId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (Blob) client.invoke(
            'GET', '/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId'),
                'returnId' => (Long) params.get('returnId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/octet-stream', 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            Blob.class
        );
    }
    /**
     * Получение фотографии возврата
     * Получает фотографии, которые покупатель приложил к заявлению на возврат товара.\n\n|**⚙️ Лимит:** 10 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param returnId Идентификатор возврата. (required)
     * @param itemId Идентификатор товара в возврате. (required)
     * @param imageHash Хеш ссылки изображения для загрузки. (required)
     * @return Blob
     * @throws OAS.ApiException if fails to make API call
     */
    public Blob getReturnPhoto(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        client.assertNotNull(params.get('returnId'), 'returnId');
        client.assertNotNull(params.get('itemId'), 'itemId');
        client.assertNotNull(params.get('imageHash'), 'imageHash');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (Blob) client.invoke(
            'GET', '/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId'),
                'returnId' => (Long) params.get('returnId'),
                'itemId' => (Long) params.get('itemId'),
                'imageHash' => (String) params.get('imageHash')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/octet-stream', 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            Blob.class
        );
    }
    /**
     * Список невыкупов и возвратов
     * Получает список невыкупов и возвратов.\n\nЧтобы получить информацию по одному возврату или невыкупу, выполните запрос [GET campaigns/{campaignId}/orders/{orderId}/returns/{returnId}](../../reference/orders/getReturn.md).\n\n|**⚙️ Лимит:** 10 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @param orderIds Идентификаторы заказов — для фильтрации результатов.\n\nНесколько идентификаторов перечисляются через запятую без пробела. Максимальное количество идентификаторов — 50.\n (optional, default to new List<Long>())
     * @param statuses Статусы возвратов или невыкупов — для фильтрации результатов.\n\nНесколько статусов перечисляются через запятую.\n (optional, default to new List<OASRefundStatusType>())
     * @param type Тип заказа для фильтрации:\n\n* &#x60;RETURN&#x60; — возврат.\n\n* &#x60;UNREDEEMED&#x60; — невыкуп.\n\nЕсли не указывать, в ответе будут и возвраты, и невыкупы.\n (optional)
     * @param fromDate Начальная дата для фильтрации возвратов или невыкупов по дате обновления.\n\nФормат: &#x60;ГГГГ-ММ-ДД&#x60;.\n (optional)
     * @param toDate Конечная дата для фильтрации возвратов или невыкупов по дате обновления.\n\nФормат: &#x60;ГГГГ-ММ-ДД&#x60;.\n (optional)
     * @param fromDate2 {% note warning &quot;&quot; %}\n\nЭтот параметр устарел. Вместо него используйте &#x60;fromDate&#x60;.\n\n{% endnote %}\n\nНачальная дата для фильтрации возвратов или невыкупов по дате обновления.\n (optional)
     * @param toDate2 {% note warning &quot;&quot; %}\n\nЭтот параметр устарел. Вместо него используйте &#x60;toDate&#x60;.\n\n{% endnote %}\n\nКонечная дата для фильтрации возвратов или невыкупов по дате обновления.\n (optional)
     * @return OASGetReturnsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetReturnsResponse getReturns(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));
        query.addAll(client.makeParam('orderIds', (List<Long>) params.get('orderIds'), 'csv'));
        query.addAll(client.makeParam('statuses', (List<OASRefundStatusType>) params.get('statuses'), 'csv'));
        query.addAll(client.makeParam('type', (OASReturnType) params.get('type')));
        query.addAll(client.makeParam('fromDate', (Date) params.get('fromDate')));
        query.addAll(client.makeParam('toDate', (Date) params.get('toDate')));
        query.addAll(client.makeParam('from_date', (Date) params.get('fromDate2')));
        query.addAll(client.makeParam('to_date', (Date) params.get('toDate2')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetReturnsResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/returns', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetReturnsResponse.class
        );
    }
    /**
     * Информация об остатках и оборачиваемости
     * Возвращает данные об остатках товаров (для всех моделей) и об [оборачиваемости](*turnover) товаров (для модели FBY).\n\n{% note info &quot;По умолчанию данные по оборачивамости не возращаются&quot; %}\n\nЧтобы они были в ответе, передавайте &#x60;true&#x60; в поле &#x60;withTurnover&#x60;.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 100 000 товаров в минуту|\n|-|\n\n[//]: &lt;&gt; (turnover: Среднее количество дней, за которое товар продается. Подробно об оборачиваемости рассказано в Справке Маркета для продавцов https://yandex.ru/support/marketplace/analytics/turnover.html.)\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @param oaSGetWarehouseStocksRequest  (optional)
     * @return OASGetWarehouseStocksResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetWarehouseStocksResponse getStocks(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetWarehouseStocksResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/offers/stocks',
            (OASGetWarehouseStocksRequest) params.get('oaSGetWarehouseStocksRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetWarehouseStocksResponse.class
        );
    }
    /**
     * Рекомендованные карточки для товаров
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/suggestions](../../reference/business-assortment/getSuggestedOfferMappings.md).\n\n{% endnote %}\n\nВозвращает идентификаторы карточек товаров на Маркете, рекомендованных для ваших товаров.\n\nКаждому товару, который вы размещаете, должна соответствовать карточка товара на Маркете со своим идентификатором — SKU на Маркете. Он указывается в URL карточки товара, после «...sku&#x3D;», например:\n\n##https://market.yandex.ru/product--yandex-kniga/484830016?sku&#x3D;484830016…##\n\nЧтобы получить для товаров рекомендованные SKU на Маркете, передайте в теле POST-запроса как можно больше информации о них: названия, производителей, штрихкоды, цены и т. д.\n\nПолученные SKU можно передать вместе с информацией о ваших товарах с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/updates](../../reference/offer-mappings/updateOfferMappingEntries.md).\n\nВ одном запросе можно получить не более 500 рекомендаций.\n\n|**⚙️ Лимит:** 100 000 рекомендаций в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSGetSuggestedOfferMappingEntriesRe  (required)
     * @return OASGetSuggestedOfferMappingEntriesRe
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetSuggestedOfferMappingEntriesRe getSuggestedOfferMappingEntries(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSGetSuggestedOfferMappingEntriesRe'), 'oaSGetSuggestedOfferMappingEntriesRe');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetSuggestedOfferMappingEntriesRe) client.invoke(
            'POST', '/campaigns/{campaignId}/offer-mapping-entries/suggestions',
            (OASGetSuggestedOfferMappingEntriesRe) params.get('oaSGetSuggestedOfferMappingEntriesRe'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetSuggestedOfferMappingEntriesRe.class
        );
    }
    /**
     * Просмотр карточек на Маркете, которые подходят вашим товарам
     * Возвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.\n\nПользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточки по предоставленным вами данным.\n\n**Как пользоваться запросом**\n\n1. Передайте Маркету список товаров, которые нужно проверить.\n2. В ответ вы получите список SKU на Маркете с расшифровкой: названием, идентификатором модели, категорией.\n3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида &#x60;https://market.yandex.ru/product/&lt;marketModelId&gt;?sku&#x3D;&lt;marketSku&gt;&#x60;.\n4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать &#x60;marketSKU&#x60;, который ему подходит по вашему мнению.\n\n{% note info &quot;𝓠 Как определить &#x60;marketSku&#x60; товара, найденного на Маркете?&quot; %}\n\n𝓐 Он есть в адресе страницы товара — расположен после &#x60;sku&#x3D;&#x60;.\n\nНапример, &#x60;https://market.yandex.ru/product--yandex-kniga/484830016?sku&#x3D;484830016&#x60;\n\n{% endnote %}\n\n|**⚙️ Лимит:** 100 000 товаров в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSGetSuggestedOfferMappingsRequest  (optional)
     * @return OASGetSuggestedOfferMappingsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetSuggestedOfferMappingsResponse getSuggestedOfferMappings(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetSuggestedOfferMappingsResponse) client.invoke(
            'POST', '/businesses/{businessId}/offer-mappings/suggestions',
            (OASGetSuggestedOfferMappingsRequest) params.get('oaSGetSuggestedOfferMappingsRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetSuggestedOfferMappingsResponse.class
        );
    }
    /**
     * Цены для продвижения товаров
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Вместо него используйте [отчет «Цены на рынке»](../../reference/reports/generatePricesReport.md).\n\n{% endnote %}\n\n{% note warning &quot;&quot; %}\n\nЭтот метод подходит только тем магазинам, которые устанавливают цены на товары в рублях.\n\n{% endnote %}\n\nВозвращает цены для продвижения товаров, которые вы размещаете на Маркете.\n\nТовары, для которых нужно получить цены, передаются в теле POST-запроса.\n\nЦены для продвижения зависят от цен, установленных на товары другими партнерами. Если один товар поставляют несколько партнеров, на Маркете сначала продается товар с более низкой ценой. Когда закончится товар по низкой цене, начнет продаваться товар по более высокой цене.\n\nВыходные данные содержат для каждого товара несколько цен, соответствующих разным типам продвижения.\n\nУстановить цены на товары можно с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md) или другими способами: например, указать их в файле с каталогом. Также вы можете использовать стратегии для автоматической установки рекомендованных цен или минимальных цен на Маркете.\n\nПодробно об автоматическом управлении ценами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/prices.html).\n\n|**⚙️ Лимит:** 100 000 товаров в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSSuggestPricesRequest  (required)
     * @return OASSuggestPricesResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSuggestPricesResponse getSuggestedPrices(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSSuggestPricesRequest'), 'oaSSuggestPricesRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSuggestPricesResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/offer-prices/suggestions',
            (OASSuggestPricesRequest) params.get('oaSSuggestPricesRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASSuggestPricesResponse.class
        );
    }
    /**
     * Список складов и групп складов
     * Возвращает список складов и, если склады объединены, список групп складов. [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)\n\nСреди прочего запрос позволяет определить идентификатор, который нужно использовать при передаче остатков для группы складов.\n\n|**⚙️ Лимит:** 100 запросов в минуту|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @return OASGetWarehousesResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetWarehousesResponse getWarehouses(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetWarehousesResponse) client.invoke(
            'GET', '/businesses/{businessId}/warehouses', '',
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetWarehousesResponse.class
        );
    }
    /**
     * Передача ключей цифровых товаров
     * Передает ключи цифровых товаров, которые покупатель заказал и оплатил. После выполнения запроса Маркет отправит ему письмо с ключами и инструкциями по активации, а также переведет заказ в финальный статус &#x60;DELIVERED&#x60;.\n\nКлюч нужно передать в течение 30 минут после перехода заказа в статус &#x60;PROCESSING&#x60;.\n\nЕсли в один заказ входят несколько ключей, передавайте их все в одном запросе.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param oaSProvideOrderDigitalCodesRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse provideOrderDigitalCodes(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        client.assertNotNull(params.get('oaSProvideOrderDigitalCodesRequest'), 'oaSProvideOrderDigitalCodesRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/orders/{orderId}/deliverDigitalGoods',
            (OASProvideOrderDigitalCodesRequest) params.get('oaSProvideOrderDigitalCodesRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Передача кодов маркировки единиц товара
     * {% note warning &quot;Этот запрос только для DBS&quot; %}\n\nЕсли вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).\n\n{% endnote %}\n\nПередает Маркету коды маркировки для единиц товара в указанном заказе.\n\nПринимаются коды следующих типов:\n\n* Коды «Честного знака».\n* УИН для ювелирных изделий.\n* РНПТ и ГТД для импортных прослеживаемых товаров.\n\n{% note warning %}\n\nПрежде чем работать с этим методом, обязательно прочтите [статью о работе с маркируемыми товарами](https://yandex.ru/support/marketplace/orders/cz.html).\n\n{% endnote %}\n\nДля каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param oaSProvideOrderItemIdentifiersReques  (required)
     * @return OASProvideOrderItemIdentifiersRespon
     * @throws OAS.ApiException if fails to make API call
     */
    public OASProvideOrderItemIdentifiersRespon provideOrderItemIdentifiers(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        client.assertNotNull(params.get('oaSProvideOrderItemIdentifiersReques'), 'oaSProvideOrderItemIdentifiersReques');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASProvideOrderItemIdentifiersRespon) client.invoke(
            'PUT', '/campaigns/{campaignId}/orders/{orderId}/identifiers',
            (OASProvideOrderItemIdentifiersReques) params.get('oaSProvideOrderItemIdentifiersReques'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASProvideOrderItemIdentifiersRespon.class
        );
    }
    /**
     * Включение буста продаж и установка ставок
     * Запускает буст продаж — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.\n\n{% cut &quot;Как в кабинете выглядит кампания, созданная через API&quot; %}\n\n![](../../_images/api-boost.png)\n\n{% endcut %}\n\nПри первом использовании запроса Маркет: создаст единую на все магазины бизнес-аккаунта кампанию, добавит в нее товары с указанными ставками, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).\n\nЕсли товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.\n\nЗапрос всегда работает с одной и той же созданной через API кампанией. Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. Другими кампаниями управлять через API не получится. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.\n\nВыполнение запроса включает кампанию и ценовую стратегию, если они были отключены.\n\nВнести другие изменения в созданную через API кампанию можно в кабинете:\n\n* выключить или включить кампанию;\n* изменить ее название;\n* выключить или включить ценовую стратегию.\n\nЧтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре &#x60;bid&#x60;.\n\nПодробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).\n\n{% note info &quot;𝓠 Как посмотреть расходы на буст продаж?&quot; %}\n\n𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле &#x60;bidFee&#x60;.\n\n{% endnote %}\n\nВ одном запросе может быть максимум 1500 товаров.\n\n|**⚙️ Лимит:** 1000 запросов в минуту|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSPutSkuBidsRequest description (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse putBidsForBusiness(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSPutSkuBidsRequest'), 'oaSPutSkuBidsRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'PUT', '/businesses/{businessId}/bids',
            (OASPutSkuBidsRequest) params.get('oaSPutSkuBidsRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Включение буста продаж и установка ставок для магазина
     * Запускает буст продаж в указанном магазине — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.\n\nПри первом использовании запроса Маркет: создаст кампанию, добавит в нее товары с указанными ставками для заданного магазина, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).\n\nЕсли товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.\n\nЗапрос всегда работает с одной и той же кампанией, созданной через этот запрос или [PUT businesses/{businessId}/bids](/reference/bids/putBidsForBusiness). Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.\n\nВыполнение запроса включает кампанию и ценовую стратегию, если они были отключены.\n\nВнести другие изменения в созданную через API кампанию можно в кабинете:\n\n* выключить или включить кампанию;\n* изменить ее название;\n* выключить или включить ценовую стратегию.\n\nЧтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре &#x60;bid&#x60;.\n\nПодробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).\n\n{% note info &quot;𝓠 Как посмотреть расходы на буст продаж?&quot; %}\n\n𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле &#x60;bidFee&#x60;.\n\n{% endnote %}\n\nВ одном запросе может быть максимум 1500 товаров.\n\n|**⚙️ Лимит:** 1000 запросов в минуту|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSPutSkuBidsRequest description (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse putBidsForCampaign(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSPutSkuBidsRequest'), 'oaSPutSkuBidsRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'PUT', '/campaigns/{campaignId}/bids',
            (OASPutSkuBidsRequest) params.get('oaSPutSkuBidsRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Сообщить, что прайс-лист обновился
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Не используйте его.\n\n{% endnote %}\n\nПозволяет сообщить, что магазин обновил прайс-лист. После этого Маркет начнет обновление данных на сервисе.\n1. Магазин обновляет прайс-лист, ссылку на который он указал в кабинете.\n2. Магазин отправляет Маркету запрос методом &#x60;POST campaigns/{campaignId}/feeds/{feedId}/refresh&#x60;.\n3. Маркет начинает обновление данных магазина на сервисе.\n\n{% note alert %}\n\nЗапрос работает только для включенных магазинов. Если магазин выключен, данные на Маркете не обновятся, даже если HTTP-код — &#x60;200 OK&#x60;. Проверить статус магазина можно с помощью базовых запросов или на странице бизнес-аккаунта.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 3 запроса в час для одного прайс-листа|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param feedId Идентификатор прайс-листа. (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse refreshFeed(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('feedId'), 'feedId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/feeds/{feedId}/refresh', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'feedId' => (Long) params.get('feedId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Поиск модели товара
     * Возвращает информацию о моделях, удовлетворяющих заданным в запросе условиям поиска.\n\nВ одном запросе можно получить информацию не более чем о 100 моделях.\n\nДля методов &#x60;GET models&#x60;, &#x60;GET models/{modelId}&#x60; и &#x60;POST models&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.\n\n|**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|\n|-|\n\n[//]: &lt;&gt; (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)\n
     * @param query Поисковый запрос по названию модели товара. (required)
     * @param regionId Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n (required)
     * @param r_currency Валюта, в которой отображаются цены предложений на страницах с результатами поиска.\n\nВозможные значения:\n\n* &#x60;BYN&#x60; — белорусский рубль.\n\n* &#x60;KZT&#x60; — казахстанский тенге.\n\n* &#x60;RUR&#x60; — российский рубль.\n\n* &#x60;UAH&#x60; — украинская гривна.\n\nЗначение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).\n (optional)
     * @param page Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром &#x60;page_size&#x60;.\n\n&#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.\n (optional, default to 1)
     * @param pageSize Размер страницы.\n\nИспользуется вместе с параметром &#x60;page_number&#x60;.\n\n&#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.\n (optional)
     * @return OASSearchModelsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSearchModelsResponse searchModels(Map<String, Object> params) {
        client.assertNotNull(params.get('query'), 'query');
        client.assertNotNull(params.get('regionId'), 'regionId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('query', (String) params.get('query')));
        query.addAll(client.makeParam('regionId', (Long) params.get('regionId')));
        query.addAll(client.makeParam('currency', (OASCurrencyType) params.get('r_currency')));
        query.addAll(client.makeParam('page', (Integer) params.get('page')));
        query.addAll(client.makeParam('pageSize', (Integer) params.get('pageSize')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSearchModelsResponse) client.invoke(
            'GET', '/models', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASSearchModelsResponse.class
        );
    }
    /**
     * Информация о дочерних регионах
     * Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.\n\nДля методов &#x60;GET regions&#x60;, &#x60;GET regions/{regionId}&#x60; и &#x60;GET regions/{regionId}/children&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).\n\nОбъем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.\n\n|**⚙️ Лимит:** 50 000 запросов в час|\n|-|\n
     * @param regionId Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n (required)
     * @param page Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром &#x60;page_size&#x60;.\n\n&#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.\n (optional, default to 1)
     * @param pageSize Размер страницы.\n\nИспользуется вместе с параметром &#x60;page_number&#x60;.\n\n&#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.\n (optional)
     * @return OASGetRegionWithChildrenResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetRegionWithChildrenResponse searchRegionChildren(Map<String, Object> params) {
        client.assertNotNull(params.get('regionId'), 'regionId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page', (Integer) params.get('page')));
        query.addAll(client.makeParam('pageSize', (Integer) params.get('pageSize')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetRegionWithChildrenResponse) client.invoke(
            'GET', '/regions/{regionId}/children', '',
            query, form,
            new Map<String, Object>{
                'regionId' => (Long) params.get('regionId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetRegionWithChildrenResponse.class
        );
    }
    /**
     * Информация о регионе
     * Возвращает информацию о регионе.\n\nДля методов &#x60;GET regions&#x60;, &#x60;GET regions/{regionId}&#x60; и &#x60;GET regions/{regionId}/children&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).\n\nОбъем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.\n\n|**⚙️ Лимит:** 50 000 запросов в час|\n|-|\n
     * @param regionId Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n (required)
     * @return OASGetRegionsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetRegionsResponse searchRegionsById(Map<String, Object> params) {
        client.assertNotNull(params.get('regionId'), 'regionId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetRegionsResponse) client.invoke(
            'GET', '/regions/{regionId}', '',
            query, form,
            new Map<String, Object>{
                'regionId' => (Long) params.get('regionId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetRegionsResponse.class
        );
    }
    /**
     * Поиск регионов по их имени
     * Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.\n\nЕсли найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.\n\nДля методов &#x60;GET regions&#x60;, &#x60;GET regions/{regionId}&#x60; и &#x60;GET regions/{regionId}/children&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).\n\nОбъем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.\n\n|**⚙️ Лимит:** 50 000 запросов в час|\n|-|\n
     * @param name Название региона.\n\nВажно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, &#x60;Москва&#x60;.\n (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @return OASGetRegionsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetRegionsResponse searchRegionsByName(Map<String, Object> params) {
        client.assertNotNull(params.get('name'), 'name');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('name', (String) params.get('name')));
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetRegionsResponse) client.invoke(
            'GET', '/regions', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetRegionsResponse.class
        );
    }
    /**
     * Отправка файла в чат
     * Отправляет файл в чат с покупателем.\n\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param chatId Идентификатор чата. (required)
     * @param file Содержимое файла. Максимальный размер файла — 5 Мбайт. (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse sendFileToChat(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('chatId'), 'chatId');
        client.assertNotNull(params.get('file'), 'file');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('chatId', (Long) params.get('chatId')));

        List<OAS.Param> form = new List<OAS.Param>();

        // cast form params to verify their expected type
        form.addAll(client.makeParam('file', (Blob) params.get('file')));

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/businesses/{businessId}/chats/file/send', '',
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'multipart/form-data' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Отправка сообщения в чат
     * Отправляет сообщение в чат с покупателем.\n\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param chatId Идентификатор чата. (required)
     * @param oaSSendMessageToChatRequest description (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse sendMessageToChat(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('chatId'), 'chatId');
        client.assertNotNull(params.get('oaSSendMessageToChatRequest'), 'oaSSendMessageToChatRequest');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('chatId', (Long) params.get('chatId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/businesses/{businessId}/chats/message',
            (OASSendMessageToChatRequest) params.get('oaSSendMessageToChatRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Изменение параметров прайс-листа
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Не используйте его.\n\n{% endnote %}\n\nПозволяет магазину изменить параметры прайс-листа.\n\nЧтобы отредактировать параметр прайс-листа, передайте в теле запроса: &#x60;name&#x60; (название параметра) и &#x60;value&#x60; (значение параметра).\n\nЧтобы отменить установленное значение, передайте в теле запроса: &#x60;name&#x60; (название параметра) и &#x60;delete&#x3D;true&#x60; (удалить значение).\n\n|**⚙️ Лимит:** 3 запроса в час для одного прайс-листа|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param feedId Идентификатор прайс-листа. (required)
     * @param oaSSetFeedParamsRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse setFeedParams(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('feedId'), 'feedId');
        client.assertNotNull(params.get('oaSSetFeedParamsRequest'), 'oaSSetFeedParamsRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/feeds/{feedId}/params',
            (OASSetFeedParamsRequest) params.get('oaSSetFeedParamsRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'feedId' => (Long) params.get('feedId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Подготовка заказа
     * {% note tip &quot;Подходит и для DBS&quot; %}\n\nЗапрос предназначен для работы с FBS-заказами, но вы можете использовать его для обработки DBS-заказов, если это удобно.\n\n{% endnote %}\n\nПозволяет выполнить три операции:\n\n* передать Маркету информацию о распределении товаров по коробкам;\n* передать Маркету коды маркировки для товаров;\n* удалить товар из заказа, если его не оказалось на складе.\n\nЕсли нужно что-то поправить в переданных данных, просто повторите запрос — это можно делать сколько угодно раз до перевода заказа в статус **Готов к отгрузке**. ⚠️ Если вы меняете раскладку уже после печати и расклейки ярлыков, не забудье перепечатать их и наклеить заново.\n\n## Как передать информацию о распределении товаров\n\nВ этом запросе вам нужно передать Маркету список коробок и указать, какие именно товары лежат в каждой из них. Коробки могут быть двух типов:\n\n* **Содержащие товары целиком.** Такая коробка может содержать сколько угодно единиц любых товаров.\n\n* **Содержащие часть товара.** Такие коробки содержат по одной части одного товара. Например, одна содержит внешний блок кондиционера, а другая — внутренний блок.\n\n⚠️ Одна коробка не может содержать и товары целиком, и части товаров.\n\n## Как передавать коды маркировки\n\nЕсли в заказе есть товары, подлежащие маркировке, в запросе нужно передать соответствующие уникальные коды. [Что такое маркировка?](https://yandex.ru/support/marketplace/orders/cz.html)\n\nПринимаются коды следующих типов:\n\n* Коды «Честного знака».\n* УИН для ювелирных изделий.\n* РНПТ и ГТД для импортных прослеживаемых товаров.\n\nДля каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.\n\nЕсли товар едет в нескольких коробках, код маркировки нужно передать для каждой из них.\n\n## Как удалить товар из заказа\n\nЧтобы удалить товар из заказа:\n\n1. Добавьте в запрос &#x60;allowRemove: true&#x60;.\n2. Передайте распределение по коробкам без товара, который нужно удалить.\n\n{% note warning &quot;Удаление нельзя отменить&quot; %}\n\nЭта операция необратима: покупатель сразу получит уведомление, а состав заказа изменится.\n\n{% endnote %}\n\nЧтобы удалить позицию целиком, не передавайте соответствующий &#x60;OrderBoxLayoutItemDTO&#x60;. Чтобы уменьшить количество товара, передайте уменьшенное значение в поле &#x60;fullCount&#x60;.\n\nНельзя удалить или уменьшить количество товара, если он:\n\n* добавлен по акции;\n* составляет 99% стоимости заказа;\n* единственный товар в заказе.\n\nЕсли вы не можете отгрузить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа &#x60;CANCELLED&#x60; с причиной отмены &#x60;SHOP_FAILED&#x60;.\n\n{% note info &quot;Увеличить заказ нельзя&quot; %}\n\nС помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.\n\n{% endnote %}\n\n## Примеры\n\n{% cut &quot;Товар умещается в коробку&quot; %}\n\nВот как будет выглядеть запрос, если в одной коробке едут:\n\n  * три единицы одного товара, требующего маркировки;\n  * одна единица другого товара, не требущего маркировки.\n\n  &#x60;&#x60;&#x60;json\n  {\n      &quot;boxes&quot;: [\n          {\n              &quot;items&quot;: [\n                  {\n                      &quot;id&quot;: 123456,\n                      &quot;fullCount&quot;: 3,\n                      &quot;instances&quot;: [\n                          {\n                              &quot;cis&quot;: &quot;01030410947874432155Qbag!\u001d93Zjqw&quot;\n                          },\n                          {\n                              &quot;cis&quot;: &quot;010304109478gftJ14545762!\u001dhGt264&quot;\n                          },\n                          {\n                              &quot;cis&quot;: &quot;010304109478fRs28323ks23!\u001dhet201&quot;\n                          }\n                      ]\n                  },\n                  {\n                      &quot;id&quot;: 654321,\n                      &quot;fullCount&quot;: 1\n                  }\n              ]\n          }\n      ]\n  }\n  &#x60;&#x60;&#x60;\n\n{% endcut %}\n\n{% cut &quot;Товар едет в разных коробках&quot; %}\n\nВот как будет выглядеть запрос, если товар едет в двух коробках:\n\n  &#x60;&#x60;&#x60;json\n  {\n      &quot;boxes&quot;: [\n          {\n              &quot;items&quot;: [\n                  {\n                      &quot;id&quot;: 123456,\n                      &quot;partialCount&quot;: {\n                          &quot;current&quot;: 1,\n                          &quot;total&quot;: 2\n                      },\n                      &quot;instances&quot;: [\n                          {\n                              &quot;cis&quot;: &quot;01030410947874432155Qbag!\u001d93Zjqw&quot;\n                          }\n                      ]\n                  }\n              ]\n          },\n          {\n              &quot;items&quot;: [\n                  {\n                      &quot;id&quot;: 123456,\n                      &quot;partialCount&quot;: {\n                          &quot;current&quot;: 2,\n                          &quot;total&quot;: 2\n                      },\n                      &quot;instances&quot;: [\n                          {\n                              &quot;cis&quot;: &quot;01030410947874432155Qbag!\u001d93Zjqw&quot;\n                          }\n                      ]\n                  }\n              ]\n          }\n      ]\n  }\n  &#x60;&#x60;&#x60;\n\n{% endcut %}\n\n{% cut &quot;Одинаковые товары, где каждый едет в нескольких коробках&quot; %}\n\nВот как будет выглядеть запрос, если каждый из двух одинаковых товаров едет в двух коробках:\n\n  &#x60;&#x60;&#x60;json\n  {\n      &quot;boxes&quot;: [\n          {\n              &quot;items&quot;: [\n                  {\n                      &quot;id&quot;: 123456,\n                      &quot;partialCount&quot;: {\n                          &quot;current&quot;: 1,\n                          &quot;total&quot;: 2\n                      },\n                      &quot;instances&quot;: [\n                          {\n                              &quot;cis&quot;: &quot;01030410947874432155Qbag!\u001d93Zjqw&quot;\n                          }\n                      ]\n                  }\n              ]\n          },\n          {\n              &quot;items&quot;: [\n                  {\n                      &quot;id&quot;: 123456,\n                      &quot;partialCount&quot;: {\n                          &quot;current&quot;: 2,\n                          &quot;total&quot;: 2\n                      },\n                      &quot;instances&quot;: [\n                          {\n                              &quot;cis&quot;: &quot;01030410947874432155Qbag!\u001d93Zjqw&quot;\n                          }\n                      ]\n                  }\n              ]\n          },\n          {\n              &quot;items&quot;: [\n                  {\n                      &quot;id&quot;: 123456,\n                      &quot;partialCount&quot;: {\n                          &quot;current&quot;: 1,\n                          &quot;total&quot;: 2\n                      },\n                      &quot;instances&quot;: [\n                          {\n                              &quot;cis&quot;: &quot;01030410947874432155Qbag!\u001d93Zjqw&quot;\n                          }\n                      ]\n                  }\n              ]\n          },\n          {\n              &quot;items&quot;: [\n                  {\n                      &quot;id&quot;: 123456,\n                      &quot;partialCount&quot;: {\n                          &quot;current&quot;: 2,\n                          &quot;total&quot;: 2\n                      },\n                      &quot;instances&quot;: [\n                          {\n                              &quot;cis&quot;: &quot;01030410947874432155Qbag!\u001d93Zjqw&quot;\n                          }\n                      ]\n                  }\n              ]\n          }\n      ]\n  }\n  &#x60;&#x60;&#x60;\n\n{% endcut %}\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param oaSSetOrderBoxLayoutRequest  (required)
     * @return OASSetOrderBoxLayoutResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSetOrderBoxLayoutResponse setOrderBoxLayout(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        client.assertNotNull(params.get('oaSSetOrderBoxLayoutRequest'), 'oaSSetOrderBoxLayoutRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSetOrderBoxLayoutResponse) client.invoke(
            'PUT', '/campaigns/{campaignId}/orders/{orderId}/boxes',
            (OASSetOrderBoxLayoutRequest) params.get('oaSSetOrderBoxLayoutRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASSetOrderBoxLayoutResponse.class
        );
    }
    /**
     * Изменение даты доставки заказа
     * Метод изменяет дату доставки заказа в статусе &#x60;PROCESSING&#x60; или &#x60;DELIVERY&#x60;. Для заказов с другими статусами дату доставки изменить нельзя.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param oaSSetOrderDeliveryDateRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse setOrderDeliveryDate(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        client.assertNotNull(params.get('oaSSetOrderDeliveryDateRequest'), 'oaSSetOrderDeliveryDateRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'PUT', '/campaigns/{campaignId}/orders/{orderId}/delivery/date',
            (OASSetOrderDeliveryDateRequest) params.get('oaSSetOrderDeliveryDateRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Передача трек‑номера посылки
     * {% note warning &quot;Этот запрос только для DBS&quot; %}\n\nВы можете использовать запрос, чтобы повысить лояльность покупателей. Если они могут узнать, на каком этапе доставки находятся их заказы, доверие покупателей к вашему магазину может возрасти.\n\n{% endnote %}\n\nПередает Маркету трек‑номер, по которому покупатель может отследить посылку со своим заказом через службу доставки.\n\nПередать трек‑номер можно, только если заказ находится в статусе &#x60;PROCESSING&#x60;, &#x60;DELIVERY&#x60; или &#x60;PICKUP&#x60;.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param oaSSetOrderDeliveryTrackCodeRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse setOrderDeliveryTrackCode(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        client.assertNotNull(params.get('oaSSetOrderDeliveryTrackCodeRequest'), 'oaSSetOrderDeliveryTrackCodeRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/orders/{orderId}/delivery/track',
            (OASSetOrderDeliveryTrackCodeRequest) params.get('oaSSetOrderDeliveryTrackCodeRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Передача количества грузовых мест в заказе
     * {% note warning &quot;Этот запрос только для DBS&quot; %}\n\nЕсли вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).\n\n{% endnote %}\n\nОтгружаемый Маркету заказ может не влезть в одну коробку или упаковку — в этом случае получается, что он занимает несколько грузовых мест.\n\nКоличество грузовых мест нужно обязательно передавать Маркету, если оно не равно 1. Это делается перед переводом его в статус **Готов к отгрузке**. Подробно о том, что в какой момент нужно передавать, рассказано в [пошаговой инструкции](../../step-by-step/fbs.md).\n\nМетод устроен немного нестандартно: количество задается длиной массива пустых объектов.\n\nРаньше метод требовал передачи большего количества данных. Запросы, оформленные по старому образцу, работают, но лучше делать по-новому.\n\n{% cut &quot;Как было раньше&quot; %}\n\nСтруктура тела PUT-запроса:\n\n&#x60;&#x60;&#x60;\n{\n  &quot;boxes&quot;:\n  [\n    {\n      &quot;fulfilmentId&quot;: &quot;{string}&quot;,\n      &quot;weight&quot;: {int64},\n      &quot;width&quot;: {int64},\n      &quot;height&quot;: {int64},\n      &quot;depth&quot;: {int64},\n      &quot;items&quot;:\n      [\n        {\n          &quot;id&quot;: {int64},\n          &quot;count&quot;: {int32}\n        },\n        ...\n      ]\n    },\n    ...\n  ]\n}\n&#x60;&#x60;&#x60;\n| **Параметр**  | **Тип**  | **Значение**  |\n| ----------- | ----------- | ----------- |\n| &#x60;boxes&#x60;       |           | Список грузовых мест.       |\n\n**Параметры, вложенные в &#x60;boxes&#x60;**\n| **Параметр**  | **Тип**  | **Значение**  |\n| ----------- | ----------- | ----------- |\n| &#x60;fulfilmentId&#x60;       |  String   | Идентификатор грузового места в информационной системе магазина. Сформируйте идентификатор по шаблону: &#x60;номер заказа на Маркете-номер грузового места&#x60;. Например, &#x60;7206821‑1, 7206821‑2&#x60; и т. д. |\n| &#x60;weight&#x60;       | Int64        | Масса брутто грузового места (суммарная масса упаковки и содержимого) в граммах. |\n| &#x60;width&#x60;       | Int64   | Ширина грузового места в сантиметрах.       |\n| &#x60;height&#x60;       | Int64   | Высота грузового места в сантиметрах.       |\n| &#x60;depth&#x60;       | Int64   | Глубина грузового места в сантиметрах.        |\n| &#x60;items&#x60;       | Int64   | Список товаров в грузовом месте.       |\n\n**Параметры, вложенные в &#x60;items&#x60;**\n| **Параметр**  | **Тип**  | **Значение**  |\n| ----------- | ----------- | ----------- |\n| &#x60;id&#x60;       | Int64     | Идентификатор товара в рамках заказа.   |\n| &#x60;count&#x60;    | Int32     | Количество единиц товара в грузовом месте.       |\n\n{% endcut %}\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param shipmentId Параметр больше не используется. Вставьте любое число — просто чтобы получился корректный URL.\n (required)
     * @param oaSSetOrderShipmentBoxesRequest  (required)
     * @return OASSetOrderShipmentBoxesResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSetOrderShipmentBoxesResponse setOrderShipmentBoxes(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        client.assertNotNull(params.get('shipmentId'), 'shipmentId');
        client.assertNotNull(params.get('oaSSetOrderShipmentBoxesRequest'), 'oaSSetOrderShipmentBoxesRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSetOrderShipmentBoxesResponse) client.invoke(
            'PUT', '/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes',
            (OASSetOrderShipmentBoxesRequest) params.get('oaSSetOrderShipmentBoxesRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId'),
                'shipmentId' => (Long) params.get('shipmentId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASSetOrderShipmentBoxesResponse.class
        );
    }
    /**
     * Принятие или изменение решения по возврату
     * Выбирает решение по возврату от покупателя. После этого для подтверждения решения нужно выполнить запрос [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit](../../reference/orders/submitReturnDecision.md).\n\n|**⚙️ Лимит:** 10 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param returnId Идентификатор возврата. (required)
     * @param oaSSetReturnDecisionRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse setReturnDecision(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        client.assertNotNull(params.get('returnId'), 'returnId');
        client.assertNotNull(params.get('oaSSetReturnDecisionRequest'), 'oaSSetReturnDecisionRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision',
            (OASSetReturnDecisionRequest) params.get('oaSSetReturnDecisionRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId'),
                'returnId' => (Long) params.get('returnId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Отказ от ответа на отзывы
     * Пропускает отзывы — они больше не будут возвращаться в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSSkipGoodsFeedbackReactionRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse skipGoodsFeedbacksReaction(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSSkipGoodsFeedbackReactionRequest'), 'oaSSkipGoodsFeedbackReactionRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/businesses/{businessId}/goods-feedback/skip-reaction',
            (OASSkipGoodsFeedbackReactionRequest) params.get('oaSSkipGoodsFeedbackReactionRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Подтверждение решения по возврату
     * Подтверждает выбранное решение по возврату, отправленное в запросе [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision](../../reference/orders/setReturnDecision.md).\n\n|**⚙️ Лимит:** 10 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param returnId Идентификатор возврата. (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse submitReturnDecision(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        client.assertNotNull(params.get('returnId'), 'returnId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId'),
                'returnId' => (Long) params.get('returnId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Установка цен на товары во всех магазинах
     * Устанавливает [базовые цены](*default-price). Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).\n\n{% note info &quot;Данные в каталоге обновляются не мгновенно&quot; %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSUpdateBusinessPricesRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse updateBusinessPrices(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSUpdateBusinessPricesRequest'), 'oaSUpdateBusinessPricesRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/businesses/{businessId}/offer-prices/updates',
            (OASUpdateBusinessPricesRequest) params.get('oaSUpdateBusinessPricesRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Изменение условий продажи товаров в магазине
     * Изменяет параметры продажи товаров в конкретном магазине: доступность товара, условия доставки и самовывоза, применяемую ставку НДС.\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSUpdateCampaignOffersRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse updateCampaignOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSUpdateCampaignOffersRequest'), 'oaSUpdateCampaignOffersRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/offers/update',
            (OASUpdateCampaignOffersRequest) params.get('oaSUpdateCampaignOffersRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Добавление нового или изменение созданного комментария
     * Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.\n\nДля создания комментария к отзыву передайте только идентификатор отзыва &#x60;feedbackId&#x60;.\n\nЧтобы добавить комментарий к другому комментарию, передайте:\n\n* &#x60;feedbackId&#x60; — идентификатор отзыва;\n* &#x60;comment.parentId&#x60; — идентификатор родительского комментария.\n\nЧтобы изменить комментарий, передайте:\n\n* &#x60;feedbackId&#x60;— идентификатор отзыва;\n* &#x60;comment.id&#x60; — идентификатор комментария, который нужно изменить.\n\nЕсли передать одновременно &#x60;comment.parentId&#x60; и &#x60;comment.id&#x60;, будет изменен существующий комментарий.\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSUpdateGoodsFeedbackCommentRequest  (required)
     * @return OASUpdateGoodsFeedbackCommentRespons
     * @throws OAS.ApiException if fails to make API call
     */
    public OASUpdateGoodsFeedbackCommentRespons updateGoodsFeedbackComment(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSUpdateGoodsFeedbackCommentRequest'), 'oaSUpdateGoodsFeedbackCommentRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASUpdateGoodsFeedbackCommentRespons) client.invoke(
            'POST', '/businesses/{businessId}/goods-feedback/comments/update',
            (OASUpdateGoodsFeedbackCommentRequest) params.get('oaSUpdateGoodsFeedbackCommentRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASUpdateGoodsFeedbackCommentRespons.class
        );
    }
    /**
     * Редактирование категорийных характеристик товара
     * Редактирует характеристики товара, которые специфичны для категории, к которой он относится.\n\n{% note warning &quot;Здесь только то, что относится к конкретной категории&quot; %}\n\nЕсли вам нужно изменить основные параметры товара (название, описание, изображения, видео, производитель, штрихкод), воспользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).\n\n{% endnote %}\n\nЧтобы удалить характеристики, которые заданы в параметрах с типом &#x60;string&#x60;, передайте пустое значение.\n\n{% note info &quot;Данные в каталоге обновляются не мгновенно&quot; %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSUpdateOfferContentRequest  (required)
     * @return OASUpdateOfferContentResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASUpdateOfferContentResponse updateOfferContent(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSUpdateOfferContentRequest'), 'oaSUpdateOfferContentRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASUpdateOfferContentResponse) client.invoke(
            'POST', '/businesses/{businessId}/offer-cards/update',
            (OASUpdateOfferContentRequest) params.get('oaSUpdateOfferContentRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASUpdateOfferContentResponse.class
        );
    }
    /**
     * Добавление и редактирование товаров в каталоге
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).\n\n{% endnote %}\n\nДобавляет товары, указанные в запросе, в ваш каталог товаров и редактирует уже имеющиеся товары.\n\nИнформацию о товарах нужно передать в теле POST-запроса.\n\nУ каждого товара должен быть ваш SKU — уникальный код, который вы используете для идентификации товара:\n\n* Чтобы добавить в каталог новый товар, укажите в параметре &#x60;shopSku&#x60; ваш SKU, которого еще нет в каталоге.\n* Чтобы отредактировать товар из каталога, укажите в параметре &#x60;shopSku&#x60; ваш SKU этого товара в каталоге.\n\nВ обоих случаях в запросе нужно передать полное описание товара, даже если вы хотите изменить только несколько характеристик.\n\nЕсли вы знаете, какой карточке товара на Маркете соответствует ваш товар, укажите ее идентификатор (SKU на Маркете) во входном параметре mapping. Получить SKU на Маркете рекомендованной карточки товара можно с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/suggestions](../../reference/offer-mappings/getSuggestedOfferMappingEntries.md) или через кабинет. Если SKU на Маркете не указан, сотрудники Маркета сами подберут или создадут подходящую карточку товара, либо у него появится статус &#x60;NEED_CONTENT&#x60; (нужно найти карточку или создать ее самостоятельно) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).\n\nПеред публикацией товары проходят модерацию. Если в одном из отправленных товаров найдена ошибка, ответ на запрос будет иметь HTTP-код 400 Bad Request, и ни один из товаров не отправится на модерацию. При этом если вы не передадите все обязательные параметры для какого‑либо товара, после модерации у него появится статус &#x60;NEED_INFO&#x60; (в описании товара не хватает информации) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).\n\nВ одном запросе можно добавить не более 500 товаров.\n\n{% note info &quot;Данные в каталоге обновляются не мгновенно&quot; %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5 000 товаров в минуту|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSUpdateOfferMappingEntryRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse updateOfferMappingEntries(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSUpdateOfferMappingEntryRequest'), 'oaSUpdateOfferMappingEntryRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/offer-mapping-entries/updates',
            (OASUpdateOfferMappingEntryRequest) params.get('oaSUpdateOfferMappingEntryRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Добавление товаров в каталог и изменение информации о них
     * Добавляет товары в каталог, передает их категории на Маркете и характеристики, необходимые для этих категории. Также редактирует информацию об уже имеющихся товарах.\n\nСписок категорий Маркета можно получить с помощью запроса [POST categories/tree](../../reference/categories/getCategoriesTree.md), а характеристики товаров по категориям с помощью [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).\n\nЧтобы **добавить новый товар**, передайте его с новым идентификатором, который раньше никогда не использовался в каталоге. Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой. Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**SKU на Маркете**) в поле &#x60;marketSKU&#x60;.\n\nДля **новых товаров** обязательно укажите параметры: &#x60;offerId&#x60;, &#x60;name&#x60;, &#x60;marketCategoryId&#x60; или &#x60;category&#x60;, &#x60;pictures&#x60;, &#x60;vendor&#x60;, &#x60;description&#x60;.\n\nЧтобы **отредактировать информацию о товаре**, передайте новые данные, указав в &#x60;offerId&#x60; соответствующий **ваш SKU**. Поля, в которых ничего не меняется, можно не передавать.\n\nЧтобы **удалить характеристики**, которые заданы в параметрах с типом &#x60;string&#x60;, передайте пустое значение.\n\nПараметр &#x60;offerId&#x60; должен быть **уникальным** для всех товаров, которые вы передаете.\n\n{% note warning &quot;Правила использования SKU&quot; %}\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n{% endnote %}\n\n{% note info &quot;Данные в каталоге обновляются не мгновенно&quot; %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSUpdateOfferMappingsRequest  (required)
     * @return OASUpdateOfferMappingsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASUpdateOfferMappingsResponse updateOfferMappings(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSUpdateOfferMappingsRequest'), 'oaSUpdateOfferMappingsRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASUpdateOfferMappingsResponse) client.invoke(
            'POST', '/businesses/{businessId}/offer-mappings/update',
            (OASUpdateOfferMappingsRequest) params.get('oaSUpdateOfferMappingsRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASUpdateOfferMappingsResponse.class
        );
    }
    /**
     * Удаление товара из заказа или уменьшение числа единиц
     * {% note warning &quot;Этот запрос только для DBS&quot; %}\n\nЕсли вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).\n\n{% endnote %}\n\nИзменяет состав заказа, если позволяет выбранная служба доставки, в случаях:\n\n* покупатель уменьшил количество товара;\n* магазин не может поставить все товары в заказе.\n\nДля этого заказ должен находится в статусе &#x60;&quot;status&quot;: &quot;PROCESSING&quot;&#x60; этапа обработки &#x60;&quot;substatus&quot;: &quot;STARTED&quot;&#x60;. После передачи статуса &#x60;&quot;substatus&quot;: &quot;READY_TO_SHIP&quot;&#x60; изменить состав невозможно.\n\nЕсли одинаковых товаров несколько, для уменьшения количества передайте обновленное значение в атрибуте &#x60;count&#x60; параметра &#x60;item&#x60;.\n\nЧтобы полностью удалить товар из заказа:\n\n* передайте значение &#x60;0&#x60;; или\n* не передавайте параметр &#x60;item&#x60;.\n\nНельзя удалить или уменьшить количество товара, если он:\n\n* добавлен по акции;\n* составляет 99% стоимости заказа;\n* единственный товар в заказе.\n\nЕсли необходимо удалить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа &#x60;CANCELLED&#x60; с причиной отмены &#x60;SHOP_FAILED&#x60;.\n\n{% note info &quot;Увеличить заказ нельзя&quot; %}\n\nС помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.\n\n{% endnote %}\n\n**Возврат денег покупателю**\n\nЕсли покупатель оплатил товар при оформлении, Маркет вернет ему деньги за удаленные из заказа товары в течение двух дней:\n\n* при оплате банковской картой — с момента, когда магазин переведет заказ в статус &#x60;SHIPPED&#x60;;\n\n* при оплате через Apple Pay или Google Pay — с момента, когда магазин удалит товар из заказа.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param oaSUpdateOrderItemRequest  (required)
     * @throws OAS.ApiException if fails to make API call
     */
    public void updateOrderItems(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        client.assertNotNull(params.get('oaSUpdateOrderItemRequest'), 'oaSUpdateOrderItemRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'PUT', '/campaigns/{campaignId}/orders/{orderId}/items',
            (OASUpdateOrderItemRequest) params.get('oaSUpdateOrderItemRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            null
        );
    }
    /**
     * Изменение статуса одного заказа
     * Изменяет статус заказа. Возможные изменения статусов:\n\n* Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса &#x60;&quot;status&quot;: &quot;PROCESSING&quot;&#x60; и этапа обработки &#x60;&quot;substatus&quot;: &quot;STARTED&quot;&#x60; нужно перевести в статус &#x60;&quot;status&quot;: &quot;PROCESSING&quot;&#x60; и этап обработки &#x60;&quot;substatus&quot;: &quot;READY_TO_SHIP&quot;&#x60;.\n* Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса &#x60;&quot;status&quot;: &quot;PROCESSING&quot;&#x60; и этапа обработки &#x60;&quot;substatus&quot;: &quot;STARTED&quot;&#x60; нужно перевести в статус &#x60;&quot;status&quot;: &quot;CANCELLED&quot;&#x60; с причиной отмены заказа &#x60;&quot;substatus&quot;: &quot;SHOP_FAILED&quot;&#x60;.\n* Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса &#x60;&quot;status&quot;: &quot;PROCESSING&quot;&#x60; и этапа обработки &#x60;&quot;substatus&quot;: &quot;READY_TO_SHIP&quot;&#x60; нужно перевести в статус &#x60;&quot;status&quot;: &quot;CANCELLED&quot;&#x60; с причиной отмены заказа &#x60;&quot;substatus&quot;: &quot;SHOP_FAILED&quot;&#x60;.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param oaSUpdateOrderStatusRequest  (required)
     * @return OASUpdateOrderStatusResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASUpdateOrderStatusResponse updateOrderStatus(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        client.assertNotNull(params.get('oaSUpdateOrderStatusRequest'), 'oaSUpdateOrderStatusRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASUpdateOrderStatusResponse) client.invoke(
            'PUT', '/campaigns/{campaignId}/orders/{orderId}/status',
            (OASUpdateOrderStatusRequest) params.get('oaSUpdateOrderStatusRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASUpdateOrderStatusResponse.class
        );
    }
    /**
     * Изменение статусов нескольких заказов
     * Изменяет статусы нескольких заказов.\n\nВозможные изменения статусов:\n\n* Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса &#x60;&quot;status&quot;: &quot;PROCESSING&quot;&#x60;и этапа обработки &#x60;&quot;substatus&quot;: &quot;STARTED&quot;&#x60; нужно перевести в статус &#x60;&quot;status&quot;: &quot;PROCESSING&quot;&#x60; и этап обработки &#x60;&quot;substatus&quot;: &quot;READY_TO_SHIP&quot;&#x60;.\n* Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса &#x60;&quot;status&quot;: &quot;PROCESSING&quot;&#x60; и этапа обработки &#x60;&quot;substatus&quot;: &quot;STARTED&quot;&#x60; нужно перевести в статус &#x60;&quot;status&quot;: &quot;CANCELLED&quot;&#x60; с причиной отмены заказа &#x60;&quot;substatus&quot;: &quot;SHOP_FAILED&quot;&#x60;.\n* Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса &#x60;&quot;status&quot;: &quot;PROCESSING&quot;&#x60; и этапа обработки &#x60;&quot;substatus&quot;: &quot;READY_TO_SHIP&quot;&#x60; нужно перевести в статус &#x60;&quot;status&quot;: &quot;CANCELLED&quot;&#x60; с причиной отмены заказа &#x60;&quot;substatus&quot;: &quot;SHOP_FAILED&quot;&#x60;.\n\nМаксимальное количество заказов, у которых можно изменить статус в одном запросе, — 30.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSUpdateOrderStatusesRequest  (required)
     * @return OASUpdateOrderStatusesResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASUpdateOrderStatusesResponse updateOrderStatuses(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSUpdateOrderStatusesRequest'), 'oaSUpdateOrderStatusesRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASUpdateOrderStatusesResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/orders/status-update',
            (OASUpdateOrderStatusesRequest) params.get('oaSUpdateOrderStatusesRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASUpdateOrderStatusesResponse.class
        );
    }
    /**
     * Продление срока хранения заказа
     * Продлевает срок хранения заказа в пункте выдачи продавца.\n\nЗаказ должен быть в статусе &#x60;PICKUP&#x60;. Продлить срок можно только один раз, не больше чем на 30 дней.\n\nНовый срок хранения можно получить в параметре &#x60;outletStorageLimitDate&#x60; запроса [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param orderId Идентификатор заказа. (required)
     * @param oaSUpdateOrderStorageLimitRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse updateOrderStorageLimit(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('orderId'), 'orderId');
        client.assertNotNull(params.get('oaSUpdateOrderStorageLimitRequest'), 'oaSUpdateOrderStorageLimitRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'PUT', '/campaigns/{campaignId}/orders/{orderId}/delivery/storage-limit',
            (OASUpdateOrderStorageLimitRequest) params.get('oaSUpdateOrderStorageLimitRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'orderId' => (Long) params.get('orderId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Изменение информации о точке продаж
     * Изменяет информацию о точке продаж магазина на Маркете.\n\nВ течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.\n\n|**⚙️ Лимит:** 100 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param outletId Идентификатор точки продаж. (required)
     * @param oaSChangeOutletRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse updateOutlet(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('outletId'), 'outletId');
        client.assertNotNull(params.get('oaSChangeOutletRequest'), 'oaSChangeOutletRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'PUT', '/campaigns/{campaignId}/outlets/{outletId}',
            (OASChangeOutletRequest) params.get('oaSChangeOutletRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId'),
                'outletId' => (Long) params.get('outletId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Создание и изменение лицензий для точек продаж
     * Передает информацию о новых и существующих лицензиях для точек продаж. Поддерживаются только лицензии на розничную продажу алкоголя.\n\nЧтобы размещать алкогольную продукцию на Маркете, надо также прислать гарантийное письмо (если вы еще не делали этого раньше) и правильно оформить предложения в прайс-листе. Далее информация о лицензиях проходит проверку.\n\nВ течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.\n\n|**⚙️ Лимит:** 100 000 запросов в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSUpdateOutletLicenseRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse updateOutletLicenses(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSUpdateOutletLicenseRequest'), 'oaSUpdateOutletLicenseRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/outlets/licenses',
            (OASUpdateOutletLicenseRequest) params.get('oaSUpdateOutletLicenseRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Установка цен на товары в конкретном магазине
     * Устанавливает цены на товары в магазине. Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).\n\n{% note warning &quot;Метод только для отдельных магазинов&quot; %}\n\nИспользуйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.\n\nДля управления базовыми ценами используйте [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).\n\n{% endnote %}\n\n{% note info &quot;Данные в каталоге обновляются не мгновенно&quot; %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSUpdatePricesRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse updatePrices(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSUpdatePricesRequest'), 'oaSUpdatePricesRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/offer-prices/updates',
            (OASUpdatePricesRequest) params.get('oaSUpdatePricesRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Добавление товаров в акцию или изменение их цен
     * Добавляет товары в акцию или изменяет цены на товары, которые участвуют в акции.\n\nИзменения начинают действовать в течение 4–6 часов.\n\n|**⚙️ Лимит:** 10000 запросов в час|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSUpdatePromoOffersRequest  (required)
     * @return OASUpdatePromoOffersResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASUpdatePromoOffersResponse updatePromoOffers(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSUpdatePromoOffersRequest'), 'oaSUpdatePromoOffersRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASUpdatePromoOffersResponse) client.invoke(
            'POST', '/businesses/{businessId}/promos/offers/update',
            (OASUpdatePromoOffersRequest) params.get('oaSUpdatePromoOffersRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASUpdatePromoOffersResponse.class
        );
    }
    /**
     * Передача информации об остатках
     * Передает данные об остатках товаров на витрине.\n\nОбязательно указывайте SKU **в точности** так, как он указан в каталоге. Например, _557722_ и _0557722_ — это два разных SKU.\n\n{% note info &quot;Данные в каталоге обновляются не мгновенно&quot; %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 100 000 товаров в минуту|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSUpdateStocksRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse updateStocks(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSUpdateStocksRequest'), 'oaSUpdateStocksRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'PUT', '/campaigns/{campaignId}/offers/stocks',
            (OASUpdateStocksRequest) params.get('oaSUpdateStocksRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
}
