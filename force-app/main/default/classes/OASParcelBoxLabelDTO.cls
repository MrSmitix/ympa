/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация о ярлыке для коробки.
 */
public class OASParcelBoxLabelDTO {
    /**
     * Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label](../../reference/orders/generateOrderLabel.md).\n
     * @return url
     */
    public String url { get; set; }

    /**
     * Юридическое название магазина.
     * @return supplierName
     */
    public String supplierName { get; set; }

    /**
     * Юридическое название службы доставки.
     * @return deliveryServiceName
     */
    public String deliveryServiceName { get; set; }

    /**
     * Идентификатор заказа в системе Маркета.
     * @return orderId
     */
    public Long orderId { get; set; }

    /**
     * Идентификатор заказа в информационной системе магазина.\n\nСовпадает с `orderId`, если Маркету неизвестен номер заказа в системе магазина.\n
     * @return orderNum
     */
    public String orderNum { get; set; }

    /**
     * Фамилия и инициалы получателя заказа.
     * @return recipientName
     */
    public String recipientName { get; set; }

    /**
     * Идентификатор коробки.
     * @return boxId
     */
    public Long boxId { get; set; }

    /**
     * Идентификатор коробки в информационной системе магазина.\n\nВозвращается в формате: `номер заказа на Маркете-номер коробки`. Например, `7206821‑1`, `7206821‑2` и т. д.\n
     * @return fulfilmentId
     */
    public String fulfilmentId { get; set; }

    /**
     * Номер коробки в заказе. Возвращается в формате: `номер места/общее количество мест`.\n
     * @return place
     */
    public String place { get; set; }

    /**
     * {% note warning "" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nОбщая масса всех товаров в заказе. Возвращается в формате: `weight кг`.\n
     * @return weight
     */
    public String weight { get; set; }

    /**
     * Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).
     * @return deliveryServiceId
     */
    public String deliveryServiceId { get; set; }

    /**
     * Адрес получателя.
     * @return deliveryAddress
     */
    public String deliveryAddress { get; set; }

    /**
     * Дата отгрузки в формате `dd.MM.yyyy`.
     * @return shipmentDate
     */
    public String shipmentDate { get; set; }

    public static OASParcelBoxLabelDTO getExample() {
        OASParcelBoxLabelDTO parcelBoxLabelDTO = new OASParcelBoxLabelDTO();
          parcelBoxLabelDTO.url = '';
          parcelBoxLabelDTO.supplierName = '';
          parcelBoxLabelDTO.deliveryServiceName = '';
          parcelBoxLabelDTO.orderId = 123456789L;
          parcelBoxLabelDTO.orderNum = '';
          parcelBoxLabelDTO.recipientName = '';
          parcelBoxLabelDTO.boxId = 123456789L;
          parcelBoxLabelDTO.fulfilmentId = '';
          parcelBoxLabelDTO.place = '';
          parcelBoxLabelDTO.weight = '';
          parcelBoxLabelDTO.deliveryServiceId = '';
          parcelBoxLabelDTO.deliveryAddress = '';
          parcelBoxLabelDTO.shipmentDate = '';
        return parcelBoxLabelDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASParcelBoxLabelDTO) {           
            OASParcelBoxLabelDTO parcelBoxLabelDTO = (OASParcelBoxLabelDTO) obj;
            return this.url == parcelBoxLabelDTO.url
                && this.supplierName == parcelBoxLabelDTO.supplierName
                && this.deliveryServiceName == parcelBoxLabelDTO.deliveryServiceName
                && this.orderId == parcelBoxLabelDTO.orderId
                && this.orderNum == parcelBoxLabelDTO.orderNum
                && this.recipientName == parcelBoxLabelDTO.recipientName
                && this.boxId == parcelBoxLabelDTO.boxId
                && this.fulfilmentId == parcelBoxLabelDTO.fulfilmentId
                && this.place == parcelBoxLabelDTO.place
                && this.weight == parcelBoxLabelDTO.weight
                && this.deliveryServiceId == parcelBoxLabelDTO.deliveryServiceId
                && this.deliveryAddress == parcelBoxLabelDTO.deliveryAddress
                && this.shipmentDate == parcelBoxLabelDTO.shipmentDate;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (url == null ? 0 : System.hashCode(url));
        hashCode = (17 * hashCode) + (supplierName == null ? 0 : System.hashCode(supplierName));
        hashCode = (17 * hashCode) + (deliveryServiceName == null ? 0 : System.hashCode(deliveryServiceName));
        hashCode = (17 * hashCode) + (orderId == null ? 0 : System.hashCode(orderId));
        hashCode = (17 * hashCode) + (orderNum == null ? 0 : System.hashCode(orderNum));
        hashCode = (17 * hashCode) + (recipientName == null ? 0 : System.hashCode(recipientName));
        hashCode = (17 * hashCode) + (boxId == null ? 0 : System.hashCode(boxId));
        hashCode = (17 * hashCode) + (fulfilmentId == null ? 0 : System.hashCode(fulfilmentId));
        hashCode = (17 * hashCode) + (place == null ? 0 : System.hashCode(place));
        hashCode = (17 * hashCode) + (weight == null ? 0 : System.hashCode(weight));
        hashCode = (17 * hashCode) + (deliveryServiceId == null ? 0 : System.hashCode(deliveryServiceId));
        hashCode = (17 * hashCode) + (deliveryAddress == null ? 0 : System.hashCode(deliveryAddress));
        hashCode = (17 * hashCode) + (shipmentDate == null ? 0 : System.hashCode(shipmentDate));
        return hashCode;
    }
}

