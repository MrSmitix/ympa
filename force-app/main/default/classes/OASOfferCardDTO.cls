/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация о состоянии карточки товара.\n\nЕсли поле &#x60;mapping&#x60; отсутствует в ответе, Маркет еще не успел обработать информацию о товаре. Чтобы определить категорию такого товара, повторите запрос через несколько минут.\n
 */
public class OASOfferCardDTO {
    /**
     * Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n
     * @return offerId
     */
    public String offerId { get; set; }

    /**
     * Get mapping
     * @return mapping
     */
    public OASGetMappingDTO mapping { get; set; }

    /**
     * Список характеристик с их значениями.\n
     * @return parameterValues
     */
    public List<OASParameterValueDTO> parameterValues { get; set; }

    /**
     * Get cardStatus
     * @return cardStatus
     */
    public OASOfferCardStatusType cardStatus { get; set; }

    /**
     * Процент заполненности карточки.
     * @return contentRating
     */
    public Integer contentRating { get; set; }

    /**
     * Список рекомендаций к заполнению карточки.\n\nРекомендации Маркета помогают заполнять карточку так, чтобы покупателям было проще найти ваш товар и решиться на покупку.\n
     * @return recommendations
     */
    public List<OASOfferCardRecommendationDTO> recommendations { get; set; }

    /**
     * Ошибки в контенте, препятствующие размещению товара на витрине.
     * @return errors
     */
    public List<OASOfferErrorDTO> errors { get; set; }

    /**
     * Связанные с контентом предупреждения, не препятствующие размещению товара на витрине.
     * @return warnings
     */
    public List<OASOfferErrorDTO> warnings { get; set; }

    public OASOfferCardDTO() {
        parameterValues = new List<OASParameterValueDTO>();
        recommendations = new List<OASOfferCardRecommendationDTO>();
        errors = new List<OASOfferErrorDTO>();
        warnings = new List<OASOfferErrorDTO>();
    }

    public static OASOfferCardDTO getExample() {
        OASOfferCardDTO offerCardDTO = new OASOfferCardDTO();
          offerCardDTO.offerId = '';
          offerCardDTO.mapping = OASGetMappingDTO.getExample();
          offerCardDTO.parameterValues = new List<OASParameterValueDTO>{OASParameterValueDTO.getExample()};
          offerCardDTO.cardStatus = OASOfferCardStatusType.getExample();
          offerCardDTO.contentRating = 0;
          offerCardDTO.recommendations = new List<OASOfferCardRecommendationDTO>{OASOfferCardRecommendationDTO.getExample()};
          offerCardDTO.errors = new List<OASOfferErrorDTO>{OASOfferErrorDTO.getExample()};
          offerCardDTO.warnings = new List<OASOfferErrorDTO>{OASOfferErrorDTO.getExample()};
        return offerCardDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOfferCardDTO) {           
            OASOfferCardDTO offerCardDTO = (OASOfferCardDTO) obj;
            return this.offerId == offerCardDTO.offerId
                && this.mapping == offerCardDTO.mapping
                && this.parameterValues == offerCardDTO.parameterValues
                && this.cardStatus == offerCardDTO.cardStatus
                && this.contentRating == offerCardDTO.contentRating
                && this.recommendations == offerCardDTO.recommendations
                && this.errors == offerCardDTO.errors
                && this.warnings == offerCardDTO.warnings;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (offerId == null ? 0 : System.hashCode(offerId));
        hashCode = (17 * hashCode) + (mapping == null ? 0 : System.hashCode(mapping));
        hashCode = (17 * hashCode) + (parameterValues == null ? 0 : System.hashCode(parameterValues));
        hashCode = (17 * hashCode) + (cardStatus == null ? 0 : System.hashCode(cardStatus));
        hashCode = (17 * hashCode) + (contentRating == null ? 0 : System.hashCode(contentRating));
        hashCode = (17 * hashCode) + (recommendations == null ? 0 : System.hashCode(recommendations));
        hashCode = (17 * hashCode) + (errors == null ? 0 : System.hashCode(errors));
        hashCode = (17 * hashCode) + (warnings == null ? 0 : System.hashCode(warnings));
        return hashCode;
    }
}

