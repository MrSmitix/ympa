/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация о предложении.
 */
public class OASModelOfferDTO {
    /**
     * Скидка на предложение в процентах.
     * @return discount
     */
    public Integer discount { get; set; }

    /**
     * Наименование предложения.
     * @return name
     */
    public String name { get; set; }

    /**
     * Позиция предложения в выдаче Маркета на карточке модели.
     * @return pos
     */
    public Integer pos { get; set; }

    /**
     * Цена предложения без скидки магазина.
     * @return preDiscountPrice
     */
    public Double preDiscountPrice { get; set; }

    /**
     * Цена предложения без скидки, которую получает покупатель при оплате через Yandex Pay.
     * @return price
     */
    public Double price { get; set; }

    /**
     * Идентификатор региона предложения (регион, откуда доставляется товар).\n\nСначала показываются предложения, доставляемые из региона, указанного в запросе в параметре `regionId`. Предложения, доставляемые из других регионов, показываются после них.\n
     * @return regionId
     */
    public Long regionId { get; set; }

    /**
     * Стоимость доставки товара в регион:\n\n* `0` — доставка осуществляется бесплатно.\n* `-1` — магазин не осуществляет доставку этого товара (самовывоз).\n\nЕсли стоимость доставки неизвестна, параметр не выводится.\n
     * @return shippingCost
     */
    public Double shippingCost { get; set; }

    /**
     * Название магазина (в том виде, в котором отображается на Маркете).
     * @return shopName
     */
    public String shopName { get; set; }

    /**
     * Рейтинг магазина.\n\nВозможные значения:\n* `-1` — у магазинов, недавно появившихся на Маркете, рейтинг появляется не сразу. До момента появления рейтинга для таких магазинов возвращается значение `-1`.\n* `1`.\n* `2`.\n* `3`.\n* `4`.\n* `5`.\n
     * @return shopRating
     */
    public Integer shopRating { get; set; }

    /**
     * {% note warning "" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n
     * @return inStock
     */
    public Integer inStock { get; set; }

    public static OASModelOfferDTO getExample() {
        OASModelOfferDTO modelOfferDTO = new OASModelOfferDTO();
          modelOfferDTO.discount = 0;
          modelOfferDTO.name = '';
          modelOfferDTO.pos = 0;
          modelOfferDTO.preDiscountPrice = 1.3579;
          modelOfferDTO.price = 1.3579;
          modelOfferDTO.regionId = 123456789L;
          modelOfferDTO.shippingCost = 1.3579;
          modelOfferDTO.shopName = '';
          modelOfferDTO.shopRating = 0;
          modelOfferDTO.inStock = 0;
        return modelOfferDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASModelOfferDTO) {           
            OASModelOfferDTO modelOfferDTO = (OASModelOfferDTO) obj;
            return this.discount == modelOfferDTO.discount
                && this.name == modelOfferDTO.name
                && this.pos == modelOfferDTO.pos
                && this.preDiscountPrice == modelOfferDTO.preDiscountPrice
                && this.price == modelOfferDTO.price
                && this.regionId == modelOfferDTO.regionId
                && this.shippingCost == modelOfferDTO.shippingCost
                && this.shopName == modelOfferDTO.shopName
                && this.shopRating == modelOfferDTO.shopRating
                && this.inStock == modelOfferDTO.inStock;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (discount == null ? 0 : System.hashCode(discount));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (pos == null ? 0 : System.hashCode(pos));
        hashCode = (17 * hashCode) + (preDiscountPrice == null ? 0 : System.hashCode(preDiscountPrice));
        hashCode = (17 * hashCode) + (price == null ? 0 : System.hashCode(price));
        hashCode = (17 * hashCode) + (regionId == null ? 0 : System.hashCode(regionId));
        hashCode = (17 * hashCode) + (shippingCost == null ? 0 : System.hashCode(shippingCost));
        hashCode = (17 * hashCode) + (shopName == null ? 0 : System.hashCode(shopName));
        hashCode = (17 * hashCode) + (shopRating == null ? 0 : System.hashCode(shopRating));
        hashCode = (17 * hashCode) + (inStock == null ? 0 : System.hashCode(inStock));
        return hashCode;
    }
}

