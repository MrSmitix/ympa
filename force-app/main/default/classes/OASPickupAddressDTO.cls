/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Адрес доставки.
 */
public class OASPickupAddressDTO {
    /**
     * Страна.
     * @return country
     */
    public String country { get; set; }

    /**
     * Город.
     * @return city
     */
    public String city { get; set; }

    /**
     * Улица.
     * @return street
     */
    public String street { get; set; }

    /**
     * Номер дома.
     * @return house
     */
    public String house { get; set; }

    /**
     * Почтовый индекс.
     * @return postcode
     */
    public String postcode { get; set; }

    public static OASPickupAddressDTO getExample() {
        OASPickupAddressDTO pickupAddressDTO = new OASPickupAddressDTO();
          pickupAddressDTO.country = 'Россия';
          pickupAddressDTO.city = 'Москва';
          pickupAddressDTO.street = 'Стрелецкая улица';
          pickupAddressDTO.house = '9к2';
          pickupAddressDTO.postcode = '123518';
        return pickupAddressDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASPickupAddressDTO) {           
            OASPickupAddressDTO pickupAddressDTO = (OASPickupAddressDTO) obj;
            return this.country == pickupAddressDTO.country
                && this.city == pickupAddressDTO.city
                && this.street == pickupAddressDTO.street
                && this.house == pickupAddressDTO.house
                && this.postcode == pickupAddressDTO.postcode;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (country == null ? 0 : System.hashCode(country));
        hashCode = (17 * hashCode) + (city == null ? 0 : System.hashCode(city));
        hashCode = (17 * hashCode) + (street == null ? 0 : System.hashCode(street));
        hashCode = (17 * hashCode) + (house == null ? 0 : System.hashCode(house));
        hashCode = (17 * hashCode) + (postcode == null ? 0 : System.hashCode(postcode));
        return hashCode;
    }
}

