/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация о прайс-листе.
 */
public class OASFeedDTO {
    /**
     * Идентификатор прайс-листа.
     * @return id
     */
    public Long id { get; set; }

    /**
     * Логин для авторизации при скачивании прайс-листа.\nПараметр выводится при размещении прайс-листа на сайте магазина и в случае ограничения доступа к нему.\n
     * @return login
     */
    public String login { get; set; }

    /**
     * Имя файла, содержащего прайс-лист.\nПараметр выводится при размещении прайс-листа на сервере Маркета.\n
     * @return name
     */
    public String name { get; set; }

    /**
     * Пароль для авторизации при скачивании прайс-листа.\nПараметр выводится при размещении прайс-листа на сайте магазина и в случае ограничения доступа к нему.\n
     * @return password
     */
    public String password { get; set; }

    /**
     * Дата загрузки прайс-листа на Маркет.\n\nФормат даты: `ДД-ММ-ГГГГ`.\n\nПараметр выводится при размещении прайс-листа на сервере Маркета.\n
     * @return uploadDate
     */
    public Datetime uploadDate { get; set; }

    /**
     * URL прайс-листа.\nПараметр выводится при размещении прайс-листа на сайте магазина.\n
     * @return url
     */
    public String url { get; set; }

    /**
     * Get content
     * @return content
     */
    public OASFeedContentDTO content { get; set; }

    /**
     * Get download
     * @return download
     */
    public OASFeedDownloadDTO download { get; set; }

    /**
     * Get placement
     * @return placement
     */
    public OASFeedPlacementDTO placement { get; set; }

    /**
     * Get publication
     * @return publication
     */
    public OASFeedPublicationDTO publication { get; set; }

    public static OASFeedDTO getExample() {
        OASFeedDTO feedDTO = new OASFeedDTO();
          feedDTO.id = 123456789L;
          feedDTO.login = '';
          feedDTO.name = '';
          feedDTO.password = '';
          feedDTO.uploadDate = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          feedDTO.url = '';
          feedDTO.content = OASFeedContentDTO.getExample();
          feedDTO.download = OASFeedDownloadDTO.getExample();
          feedDTO.placement = OASFeedPlacementDTO.getExample();
          feedDTO.publication = OASFeedPublicationDTO.getExample();
        return feedDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASFeedDTO) {           
            OASFeedDTO feedDTO = (OASFeedDTO) obj;
            return this.id == feedDTO.id
                && this.login == feedDTO.login
                && this.name == feedDTO.name
                && this.password == feedDTO.password
                && this.uploadDate == feedDTO.uploadDate
                && this.url == feedDTO.url
                && this.content == feedDTO.content
                && this.download == feedDTO.download
                && this.placement == feedDTO.placement
                && this.publication == feedDTO.publication;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (login == null ? 0 : System.hashCode(login));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (password == null ? 0 : System.hashCode(password));
        hashCode = (17 * hashCode) + (uploadDate == null ? 0 : System.hashCode(uploadDate));
        hashCode = (17 * hashCode) + (url == null ? 0 : System.hashCode(url));
        hashCode = (17 * hashCode) + (content == null ? 0 : System.hashCode(content));
        hashCode = (17 * hashCode) + (download == null ? 0 : System.hashCode(download));
        hashCode = (17 * hashCode) + (placement == null ? 0 : System.hashCode(placement));
        hashCode = (17 * hashCode) + (publication == null ? 0 : System.hashCode(publication));
        return hashCode;
    }
}

