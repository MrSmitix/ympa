/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Список отчетов по индексации прайс-листа.
 */
public class OASFeedIndexLogsRecordDTO {
    /**
     * Дата и время загрузки прайс-листа.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.\n
     * @return downloadTime
     */
    public Datetime downloadTime { get; set; }

    /**
     * Дата и время, которые магазин указал в прайс-листе.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.\n
     * @return fileTime
     */
    public Datetime fileTime { get; set; }

    /**
     * Идентификатор индексации.
     * @return generationId
     */
    public Long generationId { get; set; }

    /**
     * Get indexType
     * @return indexType
     */
    public OASFeedIndexLogsIndexType indexType { get; set; }

    /**
     * Дата и время публикации предложений из прайс-листа на Яндекс Маркете.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.\n
     * @return publishedTime
     */
    public Datetime publishedTime { get; set; }

    /**
     * Get status
     * @return status
     */
    public OASFeedIndexLogsStatusType status { get; set; }

    /**
     * Get error
     * @return error
     */
    public OASFeedIndexLogsErrorDTO error { get; set; }

    /**
     * Get offers
     * @return offers
     */
    public OASFeedIndexLogsOffersDTO offers { get; set; }

    public static OASFeedIndexLogsRecordDTO getExample() {
        OASFeedIndexLogsRecordDTO feedIndexLogsRecordDTO = new OASFeedIndexLogsRecordDTO();
          feedIndexLogsRecordDTO.downloadTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          feedIndexLogsRecordDTO.fileTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          feedIndexLogsRecordDTO.generationId = 123456789L;
          feedIndexLogsRecordDTO.indexType = OASFeedIndexLogsIndexType.getExample();
          feedIndexLogsRecordDTO.publishedTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          feedIndexLogsRecordDTO.status = OASFeedIndexLogsStatusType.getExample();
          feedIndexLogsRecordDTO.error = OASFeedIndexLogsErrorDTO.getExample();
          feedIndexLogsRecordDTO.offers = OASFeedIndexLogsOffersDTO.getExample();
        return feedIndexLogsRecordDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASFeedIndexLogsRecordDTO) {           
            OASFeedIndexLogsRecordDTO feedIndexLogsRecordDTO = (OASFeedIndexLogsRecordDTO) obj;
            return this.downloadTime == feedIndexLogsRecordDTO.downloadTime
                && this.fileTime == feedIndexLogsRecordDTO.fileTime
                && this.generationId == feedIndexLogsRecordDTO.generationId
                && this.indexType == feedIndexLogsRecordDTO.indexType
                && this.publishedTime == feedIndexLogsRecordDTO.publishedTime
                && this.status == feedIndexLogsRecordDTO.status
                && this.error == feedIndexLogsRecordDTO.error
                && this.offers == feedIndexLogsRecordDTO.offers;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (downloadTime == null ? 0 : System.hashCode(downloadTime));
        hashCode = (17 * hashCode) + (fileTime == null ? 0 : System.hashCode(fileTime));
        hashCode = (17 * hashCode) + (generationId == null ? 0 : System.hashCode(generationId));
        hashCode = (17 * hashCode) + (indexType == null ? 0 : System.hashCode(indexType));
        hashCode = (17 * hashCode) + (publishedTime == null ? 0 : System.hashCode(publishedTime));
        hashCode = (17 * hashCode) + (status == null ? 0 : System.hashCode(status));
        hashCode = (17 * hashCode) + (error == null ? 0 : System.hashCode(error));
        hashCode = (17 * hashCode) + (offers == null ? 0 : System.hashCode(offers));
        return hashCode;
    }
}

