/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация о точке продаж.
 */
public class OASOutletDTO {
    /**
     * Название точки продаж.\n
     * @return name
     */
    public String name { get; set; }

    /**
     * Get type
     * @return type
     */
    public OASOutletType type { get; set; }

    /**
     * Координаты точки продаж.\n\nФормат: долгота, широта. Разделители: запятая и / или пробел. Например, `20.4522144, 54.7104264`.\n\nЕсли параметр не передан, координаты будут определены по значениям параметров, вложенных в `address`.\n
     * @return coords
     */
    public String coords { get; set; }

    /**
     * Признак основной точки продаж.\n\nВозможные значения:\n\n* `false` — неосновная точка продаж.\n* `true` — основная точка продаж.\n
     * @return isMain
     */
    public Boolean isMain { get; set; }

    /**
     * Идентификатор точки продаж, присвоенный магазином.
     * @return shopOutletCode
     */
    public String shopOutletCode { get; set; }

    /**
     * Get visibility
     * @return visibility
     */
    public OASOutletVisibilityType visibility { get; set; }

    /**
     * Get address
     * @return address
     */
    public OASOutletAddressDTO address { get; set; }

    /**
     * Номера телефонов точки продаж. Передавайте в формате: `+7 (999) 999-99-99`.\n
     * @return phones
     */
    public List<String> phones { get; set; }

    /**
     * Get workingSchedule
     * @return workingSchedule
     */
    public OASOutletWorkingScheduleDTO workingSchedule { get; set; }

    /**
     * Информация об условиях доставки для данной точки продаж.\n\nОбязательный параметр, если параметр `type=DEPOT` или `type=MIXED`.\n
     * @return deliveryRules
     */
    public List<OASOutletDeliveryRuleDTO> deliveryRules { get; set; }

    /**
     * Срок хранения заказа в собственном пункте выдачи заказов. Считается в днях.
     * @return storagePeriod
     */
    public Long storagePeriod { get; set; }

    public OASOutletDTO() {
        phones = new List<String>();
        deliveryRules = new List<OASOutletDeliveryRuleDTO>();
    }

    public static OASOutletDTO getExample() {
        OASOutletDTO outletDTO = new OASOutletDTO();
          outletDTO.name = '';
          outletDTO.type = OASOutletType.getExample();
          outletDTO.coords = '';
          outletDTO.isMain = true;
          outletDTO.shopOutletCode = '';
          outletDTO.visibility = OASOutletVisibilityType.getExample();
          outletDTO.address = OASOutletAddressDTO.getExample();
          outletDTO.phones = new List<String>{''};
          outletDTO.workingSchedule = OASOutletWorkingScheduleDTO.getExample();
          outletDTO.deliveryRules = new List<OASOutletDeliveryRuleDTO>{OASOutletDeliveryRuleDTO.getExample()};
          outletDTO.storagePeriod = 123456789L;
        return outletDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOutletDTO) {           
            OASOutletDTO outletDTO = (OASOutletDTO) obj;
            return this.name == outletDTO.name
                && this.type == outletDTO.type
                && this.coords == outletDTO.coords
                && this.isMain == outletDTO.isMain
                && this.shopOutletCode == outletDTO.shopOutletCode
                && this.visibility == outletDTO.visibility
                && this.address == outletDTO.address
                && this.phones == outletDTO.phones
                && this.workingSchedule == outletDTO.workingSchedule
                && this.deliveryRules == outletDTO.deliveryRules
                && this.storagePeriod == outletDTO.storagePeriod;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (coords == null ? 0 : System.hashCode(coords));
        hashCode = (17 * hashCode) + (isMain == null ? 0 : System.hashCode(isMain));
        hashCode = (17 * hashCode) + (shopOutletCode == null ? 0 : System.hashCode(shopOutletCode));
        hashCode = (17 * hashCode) + (visibility == null ? 0 : System.hashCode(visibility));
        hashCode = (17 * hashCode) + (address == null ? 0 : System.hashCode(address));
        hashCode = (17 * hashCode) + (phones == null ? 0 : System.hashCode(phones));
        hashCode = (17 * hashCode) + (workingSchedule == null ? 0 : System.hashCode(workingSchedule));
        hashCode = (17 * hashCode) + (deliveryRules == null ? 0 : System.hashCode(deliveryRules));
        hashCode = (17 * hashCode) + (storagePeriod == null ? 0 : System.hashCode(storagePeriod));
        return hashCode;
    }
}

