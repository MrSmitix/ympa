/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Модель для пагинации.
 */
public class OASFlippingPagerDTO implements OAS.MappedProperties {
    /**
     * Сколько всего найдено элементов.
     * @return total
     */
    public Integer total { get; set; }

    /**
     * Начальный номер найденного элемента на странице.
     * @return r_from
     */
    public Integer r_from { get; set; }

    /**
     * Конечный номер найденного элемента на странице.
     * @return to
     */
    public Integer to { get; set; }

    /**
     * Текущая страница.
     * @return currentPage
     */
    public Integer currentPage { get; set; }

    /**
     * Общее количество страниц.
     * @return pagesCount
     */
    public Integer pagesCount { get; set; }

    /**
     * Размер страницы.
     * @return pageSize
     */
    public Integer pageSize { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'from' => 'r_from'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASFlippingPagerDTO getExample() {
        OASFlippingPagerDTO flippingPagerDTO = new OASFlippingPagerDTO();
          flippingPagerDTO.total = 0;
          flippingPagerDTO.r_from = 0;
          flippingPagerDTO.to = 0;
          flippingPagerDTO.currentPage = 0;
          flippingPagerDTO.pagesCount = 0;
          flippingPagerDTO.pageSize = 0;
        return flippingPagerDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASFlippingPagerDTO) {           
            OASFlippingPagerDTO flippingPagerDTO = (OASFlippingPagerDTO) obj;
            return this.total == flippingPagerDTO.total
                && this.r_from == flippingPagerDTO.r_from
                && this.to == flippingPagerDTO.to
                && this.currentPage == flippingPagerDTO.currentPage
                && this.pagesCount == flippingPagerDTO.pagesCount
                && this.pageSize == flippingPagerDTO.pageSize;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (total == null ? 0 : System.hashCode(total));
        hashCode = (17 * hashCode) + (r_from == null ? 0 : System.hashCode(r_from));
        hashCode = (17 * hashCode) + (to == null ? 0 : System.hashCode(to));
        hashCode = (17 * hashCode) + (currentPage == null ? 0 : System.hashCode(currentPage));
        hashCode = (17 * hashCode) + (pagesCount == null ? 0 : System.hashCode(pagesCount));
        hashCode = (17 * hashCode) + (pageSize == null ? 0 : System.hashCode(pageSize));
        return hashCode;
    }
}

