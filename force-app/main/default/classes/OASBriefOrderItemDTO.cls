/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация о маркированном товаре.
 */
public class OASBriefOrderItemDTO {
    /**
     * Идентификатор товара в заказе.\n\nПозволяет идентифицировать товар в рамках данного заказа.\n
     * @return id
     */
    public Long id { get; set; }

    /**
     * Get vat
     * @return vat
     */
    public OASOrderVatType vat { get; set; }

    /**
     * Количество единиц товара.
     * @return count
     */
    public Integer count { get; set; }

    /**
     * Цена на товар. Указана в той валюте, которая была задана в каталоге. Разделитель целой и дробной части — точка.\n
     * @return price
     */
    public Double price { get; set; }

    /**
     * Название товара.
     * @return offerName
     */
    public String offerName { get; set; }

    /**
     * Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n
     * @return offerId
     */
    public String offerId { get; set; }

    /**
     * Переданные вами коды маркировки.
     * @return instances
     */
    public List<OASOrderItemInstanceDTO> instances { get; set; }

    public OASBriefOrderItemDTO() {
        instances = new List<OASOrderItemInstanceDTO>();
    }

    public static OASBriefOrderItemDTO getExample() {
        OASBriefOrderItemDTO briefOrderItemDTO = new OASBriefOrderItemDTO();
          briefOrderItemDTO.id = 123456789L;
          briefOrderItemDTO.vat = OASOrderVatType.getExample();
          briefOrderItemDTO.count = 0;
          briefOrderItemDTO.price = 1.3579;
          briefOrderItemDTO.offerName = '';
          briefOrderItemDTO.offerId = '';
          briefOrderItemDTO.instances = new List<OASOrderItemInstanceDTO>{OASOrderItemInstanceDTO.getExample()};
        return briefOrderItemDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASBriefOrderItemDTO) {           
            OASBriefOrderItemDTO briefOrderItemDTO = (OASBriefOrderItemDTO) obj;
            return this.id == briefOrderItemDTO.id
                && this.vat == briefOrderItemDTO.vat
                && this.count == briefOrderItemDTO.count
                && this.price == briefOrderItemDTO.price
                && this.offerName == briefOrderItemDTO.offerName
                && this.offerId == briefOrderItemDTO.offerId
                && this.instances == briefOrderItemDTO.instances;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (vat == null ? 0 : System.hashCode(vat));
        hashCode = (17 * hashCode) + (count == null ? 0 : System.hashCode(count));
        hashCode = (17 * hashCode) + (price == null ? 0 : System.hashCode(price));
        hashCode = (17 * hashCode) + (offerName == null ? 0 : System.hashCode(offerName));
        hashCode = (17 * hashCode) + (offerId == null ? 0 : System.hashCode(offerId));
        hashCode = (17 * hashCode) + (instances == null ? 0 : System.hashCode(instances));
        return hashCode;
    }
}

