/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASPricesApi {
    OASClient client;

    public OASPricesApi(OASClient client) {
        this.client = client;
    }

    public OASPricesApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Список цен
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Вместо него используйте [POST campaigns/{campaignId}/offer-prices](../../reference/assortment/getPricesByOfferIds.md).\n\n{% endnote %}\n\nВозвращает список цен, установленных вами на товары любым способом: например, через партнерский API или в файле с каталогом.\n\n{% note info %}\n\nОбщее количество товаров считается по данным за последние семь дней (не включая сегодня) и не может быть выше 2 миллионов.\n\n{% endnote %}\n\nСпособы установки цен описаны [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/assortment/operations/prices.html).\n\n|**⚙️ Лимит:** &#x60;&#x60;&#x60;(количество товаров партнера на витрине) * 25&#x60;&#x60;&#x60; товаров в сутки|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @param archived Фильтр по нахождению в архиве. (optional, default to false)
     * @return OASGetPricesResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetPricesResponse getPrices(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));
        query.addAll(client.makeParam('archived', (Boolean) params.get('archived')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetPricesResponse) client.invoke(
            'GET', '/campaigns/{campaignId}/offer-prices', '',
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'OAuth' },
            OASGetPricesResponse.class
        );
    }
    /**
     * Просмотр цен на указанные товары в магазине
     * Возвращает список цен на указанные товары в магазине.\n\n{% note warning &quot;Метод только для отдельных магазинов&quot; %}\n\nИспользуйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.\n\nДля просмотра базовых цен используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).\n\n{% endnote %}\n\n|**⚙️ Лимит:** рассчитывается по [формуле](*rule)|\n|-|\n\n[//]: &lt;&gt; (rule: суточный лимит товаров — количество товаров на витрине * 25)\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param pageToken Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.\n\nЕсли задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.\n (optional)
     * @param r_limit Количество значений на одной странице.\n (optional)
     * @param oaSGetPricesByOfferIdsRequest  (optional)
     * @return OASGetPricesByOfferIdsResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASGetPricesByOfferIdsResponse getPricesByOfferIds(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('page_token', (String) params.get('pageToken')));
        query.addAll(client.makeParam('limit', (Integer) params.get('r_limit')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASGetPricesByOfferIdsResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/offer-prices',
            (OASGetPricesByOfferIdsRequest) params.get('oaSGetPricesByOfferIdsRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASGetPricesByOfferIdsResponse.class
        );
    }
    /**
     * Цены для продвижения товаров
     * {% note warning &quot;&quot; %}\n\nЭтот метод устарел. Вместо него используйте [отчет «Цены на рынке»](../../reference/reports/generatePricesReport.md).\n\n{% endnote %}\n\n{% note warning &quot;&quot; %}\n\nЭтот метод подходит только тем магазинам, которые устанавливают цены на товары в рублях.\n\n{% endnote %}\n\nВозвращает цены для продвижения товаров, которые вы размещаете на Маркете.\n\nТовары, для которых нужно получить цены, передаются в теле POST-запроса.\n\nЦены для продвижения зависят от цен, установленных на товары другими партнерами. Если один товар поставляют несколько партнеров, на Маркете сначала продается товар с более низкой ценой. Когда закончится товар по низкой цене, начнет продаваться товар по более высокой цене.\n\nВыходные данные содержат для каждого товара несколько цен, соответствующих разным типам продвижения.\n\nУстановить цены на товары можно с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md) или другими способами: например, указать их в файле с каталогом. Также вы можете использовать стратегии для автоматической установки рекомендованных цен или минимальных цен на Маркете.\n\nПодробно об автоматическом управлении ценами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/prices.html).\n\n|**⚙️ Лимит:** 100 000 товаров в час|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSSuggestPricesRequest  (required)
     * @return OASSuggestPricesResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSuggestPricesResponse getSuggestedPrices(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSSuggestPricesRequest'), 'oaSSuggestPricesRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSuggestPricesResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/offer-prices/suggestions',
            (OASSuggestPricesRequest) params.get('oaSSuggestPricesRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASSuggestPricesResponse.class
        );
    }
    /**
     * Установка цен на товары во всех магазинах
     * Устанавливает [базовые цены](*default-price). Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).\n\n{% note info &quot;Данные в каталоге обновляются не мгновенно&quot; %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе|\n|-|\n
     * @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSUpdateBusinessPricesRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse updateBusinessPrices(Map<String, Object> params) {
        client.assertNotNull(params.get('businessId'), 'businessId');
        client.assertNotNull(params.get('oaSUpdateBusinessPricesRequest'), 'oaSUpdateBusinessPricesRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/businesses/{businessId}/offer-prices/updates',
            (OASUpdateBusinessPricesRequest) params.get('oaSUpdateBusinessPricesRequest'),
            query, form,
            new Map<String, Object>{
                'businessId' => (Long) params.get('businessId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
    /**
     * Установка цен на товары в конкретном магазине
     * Устанавливает цены на товары в магазине. Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).\n\n{% note warning &quot;Метод только для отдельных магазинов&quot; %}\n\nИспользуйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.\n\nДля управления базовыми ценами используйте [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).\n\n{% endnote %}\n\n{% note info &quot;Данные в каталоге обновляются не мгновенно&quot; %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n (required)
     * @param oaSUpdatePricesRequest  (required)
     * @return OASEmptyApiResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEmptyApiResponse updatePrices(Map<String, Object> params) {
        client.assertNotNull(params.get('campaignId'), 'campaignId');
        client.assertNotNull(params.get('oaSUpdatePricesRequest'), 'oaSUpdatePricesRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEmptyApiResponse) client.invoke(
            'POST', '/campaigns/{campaignId}/offer-prices/updates',
            (OASUpdatePricesRequest) params.get('oaSUpdatePricesRequest'),
            query, form,
            new Map<String, Object>{
                'campaignId' => (Long) params.get('campaignId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth' },
            OASEmptyApiResponse.class
        );
    }
}
