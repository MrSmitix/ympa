/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация о тарифах, по которым нужно заплатить за услуги Маркета.
 */
public class OASTariffDTO {
    /**
     * Get type
     * @return type
     */
    public OASTariffType type { get; set; }

    /**
     * {% note warning "" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nЗначение тарифа в процентах.\n
     * @return percent
     */
    public Double percent { get; set; }

    /**
     * Значение тарифа в рублях.
     * @return amount
     */
    public Double amount { get; set; }

    /**
     * Параметры расчета тарифа.
     * @return parameters
     */
    public List<OASTariffParameterDTO> parameters { get; set; }

    public OASTariffDTO() {
        parameters = new List<OASTariffParameterDTO>();
    }

    public static OASTariffDTO getExample() {
        OASTariffDTO tariffDTO = new OASTariffDTO();
          tariffDTO.type = OASTariffType.getExample();
          tariffDTO.percent = 1.3579;
          tariffDTO.amount = 1.3579;
          tariffDTO.parameters = new List<OASTariffParameterDTO>{OASTariffParameterDTO.getExample()};
        return tariffDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASTariffDTO) {           
            OASTariffDTO tariffDTO = (OASTariffDTO) obj;
            return this.type == tariffDTO.type
                && this.percent == tariffDTO.percent
                && this.amount == tariffDTO.amount
                && this.parameters == tariffDTO.parameters;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (percent == null ? 0 : System.hashCode(percent));
        hashCode = (17 * hashCode) + (amount == null ? 0 : System.hashCode(amount));
        hashCode = (17 * hashCode) + (parameters == null ? 0 : System.hashCode(parameters));
        return hashCode;
    }
}

