/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Информация о проверке содержимого прайс-листа, загруженного на Маркет.
 */
public class OASFeedContentDTO {
    /**
     * Количество предложений, в которых найдены ошибки на этапе загрузки прайс-листа.\nВыводится, если параметр `content status=OK`.\n
     * @return rejectedOffersCount
     */
    public Long rejectedOffersCount { get; set; }

    /**
     * Get status
     * @return status
     */
    public OASFeedStatusType status { get; set; }

    /**
     * Количество предложений в прайс-листе.\nВыводится, если параметр `content status=OK`.\n
     * @return totalOffersCount
     */
    public Long totalOffersCount { get; set; }

    /**
     * Get error
     * @return error
     */
    public OASFeedContentErrorDTO error { get; set; }

    public static OASFeedContentDTO getExample() {
        OASFeedContentDTO feedContentDTO = new OASFeedContentDTO();
          feedContentDTO.rejectedOffersCount = 123456789L;
          feedContentDTO.status = OASFeedStatusType.getExample();
          feedContentDTO.totalOffersCount = 123456789L;
          feedContentDTO.error = OASFeedContentErrorDTO.getExample();
        return feedContentDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASFeedContentDTO) {           
            OASFeedContentDTO feedContentDTO = (OASFeedContentDTO) obj;
            return this.rejectedOffersCount == feedContentDTO.rejectedOffersCount
                && this.status == feedContentDTO.status
                && this.totalOffersCount == feedContentDTO.totalOffersCount
                && this.error == feedContentDTO.error;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (rejectedOffersCount == null ? 0 : System.hashCode(rejectedOffersCount));
        hashCode = (17 * hashCode) + (status == null ? 0 : System.hashCode(status));
        hashCode = (17 * hashCode) + (totalOffersCount == null ? 0 : System.hashCode(totalOffersCount));
        hashCode = (17 * hashCode) + (error == null ? 0 : System.hashCode(error));
        return hashCode;
    }
}

