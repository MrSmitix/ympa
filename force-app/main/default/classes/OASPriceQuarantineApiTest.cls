@isTest
private class OASPriceQuarantineApiTest {
    /**
     * –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–∞—Ä–∞–Ω—Ç–∏–Ω–∞ –ø–æ —Ü–µ–Ω–µ –≤ –∫–∞–±–∏–Ω–µ—Ç–µ
     *
     * –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é —Ü–µ–Ω—É –Ω–∞ —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ø–∞–ª–∏ –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω, –∏ —É–¥–∞–ª—è–µ—Ç –∏—Ö –∏–∑ –∫–∞—Ä–∞–Ω—Ç–∏–Ω–∞.\n\n–û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞–¥–∞–µ—Ç—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –∏ –¥–µ–π—Å—Ç–≤—É–µ—Ç –≤–æ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö –∫–∞–±–∏–Ω–µ—Ç–∞.\n\n–¢–æ–≤–∞—Ä –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω, –µ—Å–ª–∏ –µ–≥–æ —Ü–µ–Ω–∞ –º–µ–Ω—è–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º —Ä–µ–∑–∫–æ. [–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞—Ä–∞–Ω—Ç–∏–Ω](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)\n\n–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ø–∞–ª–∏ –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞–ø—Ä–æ—Å [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).\n\n|**‚öôÔ∏è –õ–∏–º–∏—Ç:** 5000 —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∏–Ω—É—Ç—É, –Ω–µ –±–æ–ª–µ–µ 200 —Ç–æ–≤–∞—Ä–æ–≤ –≤ –æ–¥–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ|\n|-|\n
     */
    @isTest
    private static void confirmBusinessPricesTest() {
        HttpResponse res = new HttpResponse();
        res.setStatusCode(200);
        res.setStatus('OK');
        Test.setMock(HttpCalloutMock.class, new OASResponseMock(res));

        Map<String, Object> params = new Map<String, Object>{
            'businessId' => 2147483648L,
            'oaSConfirmPricesRequest' => ''
        };

        OASClient client;
        OASPriceQuarantineApi api;
        OASEmptyApiResponse response;
        OASEmptyApiResponse expectedResponse;
        String js = '';

        client = new OASClient();
        api = new OASPriceQuarantineApi(client);

        js = JSON.serialize(OASEmptyApiResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASEmptyApiResponse.getExample();
        response = (OASEmptyApiResponse) api.confirmBusinessPrices(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASEmptyApiResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASEmptyApiResponse.getExample();
        response = (OASEmptyApiResponse) api.confirmBusinessPrices(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASEmptyApiResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASEmptyApiResponse.getExample();
        response = (OASEmptyApiResponse) api.confirmBusinessPrices(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASEmptyApiResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASEmptyApiResponse.getExample();
        response = (OASEmptyApiResponse) api.confirmBusinessPrices(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASEmptyApiResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASEmptyApiResponse.getExample();
        response = (OASEmptyApiResponse) api.confirmBusinessPrices(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASEmptyApiResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASEmptyApiResponse.getExample();
        response = (OASEmptyApiResponse) api.confirmBusinessPrices(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASEmptyApiResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASEmptyApiResponse.getExample();
        response = (OASEmptyApiResponse) api.confirmBusinessPrices(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASEmptyApiResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASEmptyApiResponse.getExample();
        response = (OASEmptyApiResponse) api.confirmBusinessPrices(params);
        System.assertEquals(expectedResponse, response);
    }

    /**
     * –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–∞—Ä–∞–Ω—Ç–∏–Ω–∞ –ø–æ —Ü–µ–Ω–µ –≤ –º–∞–≥–∞–∑–∏–Ω–µ
     *
     * –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ —Ü–µ–Ω—É –Ω–∞ —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ø–∞–ª–∏ –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω, –∏ —É–¥–∞–ª—è–µ—Ç –∏—Ö –∏–∑ –∫–∞—Ä–∞–Ω—Ç–∏–Ω–∞.\n\n–¢–æ–≤–∞—Ä –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω, –µ—Å–ª–∏ –µ–≥–æ —Ü–µ–Ω–∞ –º–µ–Ω—è–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º —Ä–µ–∑–∫–æ. [–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞—Ä–∞–Ω—Ç–∏–Ω](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)\n\n–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ø–∞–ª–∏ –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞–ø—Ä–æ—Å [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).\n\n|**‚öôÔ∏è –õ–∏–º–∏—Ç:** 5000 —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∏–Ω—É—Ç—É|\n|-|\n
     */
    @isTest
    private static void confirmCampaignPricesTest() {
        HttpResponse res = new HttpResponse();
        res.setStatusCode(200);
        res.setStatus('OK');
        Test.setMock(HttpCalloutMock.class, new OASResponseMock(res));

        Map<String, Object> params = new Map<String, Object>{
            'campaignId' => 2147483648L,
            'oaSConfirmPricesRequest' => ''
        };

        OASClient client;
        OASPriceQuarantineApi api;
        OASEmptyApiResponse response;
        OASEmptyApiResponse expectedResponse;
        String js = '';

        client = new OASClient();
        api = new OASPriceQuarantineApi(client);

        js = JSON.serialize(OASEmptyApiResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASEmptyApiResponse.getExample();
        response = (OASEmptyApiResponse) api.confirmCampaignPrices(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASEmptyApiResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASEmptyApiResponse.getExample();
        response = (OASEmptyApiResponse) api.confirmCampaignPrices(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASEmptyApiResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASEmptyApiResponse.getExample();
        response = (OASEmptyApiResponse) api.confirmCampaignPrices(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASEmptyApiResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASEmptyApiResponse.getExample();
        response = (OASEmptyApiResponse) api.confirmCampaignPrices(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASEmptyApiResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASEmptyApiResponse.getExample();
        response = (OASEmptyApiResponse) api.confirmCampaignPrices(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASEmptyApiResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASEmptyApiResponse.getExample();
        response = (OASEmptyApiResponse) api.confirmCampaignPrices(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASEmptyApiResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASEmptyApiResponse.getExample();
        response = (OASEmptyApiResponse) api.confirmCampaignPrices(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASEmptyApiResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASEmptyApiResponse.getExample();
        response = (OASEmptyApiResponse) api.confirmCampaignPrices(params);
        System.assertEquals(expectedResponse, response);
    }

    /**
     * –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤, –Ω–∞—Ö–æ–¥—è—â–∏—Ö—Å—è –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω–µ –ø–æ —Ü–µ–Ω–µ –≤ –∫–∞–±–∏–Ω–µ—Ç–µ
     *
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω–µ –ø–æ **–æ—Å–Ω–æ–≤–Ω–æ–π —Ü–µ–Ω–µ**. –û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞–¥–∞–µ—Ç—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –∏ –¥–µ–π—Å—Ç–≤—É–µ—Ç –≤–æ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö –∫–∞–±–∏–Ω–µ—Ç–∞.\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ü–µ–Ω—É –∫–∞–∂–¥–æ–≥–æ –∏–∑ —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ø–∞–ª –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω. –ï—Å–ª–∏ –æ—à–∏–±–∫–∏ –Ω–µ—Ç –∏ —Ü–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –µ–µ —Å –ø–æ–º–æ—â—å—é –∑–∞–ø—Ä–æ—Å–∞ [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). –ï—Å–ª–∏ —Ü–µ–Ω–∞ –≤ —Å–∞–º–æ–º –¥–µ–ª–µ –æ—à–∏–±–æ—á–Ω–∞—è, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å –ø–æ–º–æ—â—å—é –∑–∞–ø—Ä–æ—Å–∞ [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).\n\n{% note info &quot;ùì† –ß—Ç–æ —Ç–∞–∫–æ–µ –∫–∞—Ä–∞–Ω—Ç–∏–Ω?&quot; %}\n\nùìê –¢–æ–≤–∞—Ä –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω, –µ—Å–ª–∏ –µ–≥–æ —Ü–µ–Ω–∞ –º–µ–Ω—è–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º —Ä–µ–∑–∫–æ –∏–ª–∏ —Å–ª–∏—à–∫–æ–º —Å–∏–ª—å–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ä—ã–Ω–æ—á–Ω–æ–π. [–ü–æ–¥—Ä–æ–±–Ω–µ–µ](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)\n\n{% endnote %}\n\n–í –∑–∞–ø—Ä–æ—Å–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã.\n\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ.\n\n|**‚öôÔ∏è –õ–∏–º–∏—Ç:** 5000 —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∏–Ω—É—Ç—É, –Ω–µ –±–æ–ª–µ–µ 500 —Ç–æ–≤–∞—Ä–æ–≤ –≤ –æ–¥–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ|\n|-|\n
     */
    @isTest
    private static void getBusinessQuarantineOffersTest() {
        HttpResponse res = new HttpResponse();
        res.setStatusCode(200);
        res.setStatus('OK');
        Test.setMock(HttpCalloutMock.class, new OASResponseMock(res));

        Map<String, Object> params = new Map<String, Object>{
            'businessId' => 2147483648L,
            'oaSGetQuarantineOffersRequest' => '',
            'pageToken' => eyBuZXh0SWQ6IDIzNDIgfQ==,
            'r_limit' => 20
        };

        OASClient client;
        OASPriceQuarantineApi api;
        OASGetQuarantineOffersResponse response;
        OASGetQuarantineOffersResponse expectedResponse;
        String js = '';

        client = new OASClient();
        api = new OASPriceQuarantineApi(client);

        js = JSON.serialize(OASGetQuarantineOffersResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASGetQuarantineOffersResponse.getExample();
        response = (OASGetQuarantineOffersResponse) api.getBusinessQuarantineOffers(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASGetQuarantineOffersResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASGetQuarantineOffersResponse.getExample();
        response = (OASGetQuarantineOffersResponse) api.getBusinessQuarantineOffers(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASGetQuarantineOffersResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASGetQuarantineOffersResponse.getExample();
        response = (OASGetQuarantineOffersResponse) api.getBusinessQuarantineOffers(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASGetQuarantineOffersResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASGetQuarantineOffersResponse.getExample();
        response = (OASGetQuarantineOffersResponse) api.getBusinessQuarantineOffers(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASGetQuarantineOffersResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASGetQuarantineOffersResponse.getExample();
        response = (OASGetQuarantineOffersResponse) api.getBusinessQuarantineOffers(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASGetQuarantineOffersResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASGetQuarantineOffersResponse.getExample();
        response = (OASGetQuarantineOffersResponse) api.getBusinessQuarantineOffers(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASGetQuarantineOffersResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASGetQuarantineOffersResponse.getExample();
        response = (OASGetQuarantineOffersResponse) api.getBusinessQuarantineOffers(params);
        System.assertEquals(expectedResponse, response);
    }

    /**
     * –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤, –Ω–∞—Ö–æ–¥—è—â–∏—Ö—Å—è –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω–µ –ø–æ —Ü–µ–Ω–µ –≤ –º–∞–≥–∞–∑–∏–Ω–µ
     *
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω–µ –ø–æ —Ü–µ–Ω–µ, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ.\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ü–µ–Ω—É –∫–∞–∂–¥–æ–≥–æ –∏–∑ —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ø–∞–ª –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω. –ï—Å–ª–∏ –æ—à–∏–±–∫–∏ –Ω–µ—Ç –∏ —Ü–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –µ–µ —Å –ø–æ–º–æ—â—å—é –∑–∞–ø—Ä–æ—Å–∞ [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). –ï—Å–ª–∏ —Ü–µ–Ω–∞ –≤ —Å–∞–º–æ–º –¥–µ–ª–µ –æ—à–∏–±–æ—á–Ω–∞—è, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å –ø–æ–º–æ—â—å—é –∑–∞–ø—Ä–æ—Å–∞ [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).\n\n{% note info &quot;ùì† –ß—Ç–æ —Ç–∞–∫–æ–µ –∫–∞—Ä–∞–Ω—Ç–∏–Ω?&quot; %}\n\nùìê –¢–æ–≤–∞—Ä –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω, –µ—Å–ª–∏ –µ–≥–æ —Ü–µ–Ω–∞ –º–µ–Ω—è–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º —Ä–µ–∑–∫–æ –∏–ª–∏ —Å–ª–∏—à–∫–æ–º —Å–∏–ª—å–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ä—ã–Ω–æ—á–Ω–æ–π. [–ü–æ–¥—Ä–æ–±–Ω–µ–µ](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)\n\n{% endnote %}\n\n–í –∑–∞–ø—Ä–æ—Å–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã.\n\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ.\n\n|**‚öôÔ∏è –õ–∏–º–∏—Ç:** 5000 —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∏–Ω—É—Ç—É|\n|-|\n
     */
    @isTest
    private static void getCampaignQuarantineOffersTest() {
        HttpResponse res = new HttpResponse();
        res.setStatusCode(200);
        res.setStatus('OK');
        Test.setMock(HttpCalloutMock.class, new OASResponseMock(res));

        Map<String, Object> params = new Map<String, Object>{
            'campaignId' => 2147483648L,
            'oaSGetQuarantineOffersRequest' => '',
            'pageToken' => eyBuZXh0SWQ6IDIzNDIgfQ==,
            'r_limit' => 20
        };

        OASClient client;
        OASPriceQuarantineApi api;
        OASGetQuarantineOffersResponse response;
        OASGetQuarantineOffersResponse expectedResponse;
        String js = '';

        client = new OASClient();
        api = new OASPriceQuarantineApi(client);

        js = JSON.serialize(OASGetQuarantineOffersResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASGetQuarantineOffersResponse.getExample();
        response = (OASGetQuarantineOffersResponse) api.getCampaignQuarantineOffers(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASGetQuarantineOffersResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASGetQuarantineOffersResponse.getExample();
        response = (OASGetQuarantineOffersResponse) api.getCampaignQuarantineOffers(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASGetQuarantineOffersResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASGetQuarantineOffersResponse.getExample();
        response = (OASGetQuarantineOffersResponse) api.getCampaignQuarantineOffers(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASGetQuarantineOffersResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASGetQuarantineOffersResponse.getExample();
        response = (OASGetQuarantineOffersResponse) api.getCampaignQuarantineOffers(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASGetQuarantineOffersResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASGetQuarantineOffersResponse.getExample();
        response = (OASGetQuarantineOffersResponse) api.getCampaignQuarantineOffers(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASGetQuarantineOffersResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASGetQuarantineOffersResponse.getExample();
        response = (OASGetQuarantineOffersResponse) api.getCampaignQuarantineOffers(params);
        System.assertEquals(expectedResponse, response);


        js = JSON.serialize(OASGetQuarantineOffersResponse.getExample());
        res.setHeader('Content-Type', 'application/json');
        res.setBody(js);
        expectedResponse = OASGetQuarantineOffersResponse.getExample();
        response = (OASGetQuarantineOffersResponse) api.getCampaignQuarantineOffers(params);
        System.assertEquals(expectedResponse, response);
    }
}