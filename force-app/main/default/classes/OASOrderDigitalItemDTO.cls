/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Ключ цифрового товара.
 */
public class OASOrderDigitalItemDTO implements OAS.MappedProperties {
    /**
     * Идентификатор товара в заказе.\n\nОн приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`.\n
     * @return id
     */
    public Long id { get; set; }

    /**
     * Сам ключ.
     * @return code
     */
    public String code { get; set; }

    /**
     * Инструкция по активации.
     * @return slip
     */
    public String slip { get; set; }

    /**
     * Дата, до которой нужно активировать ключ. Если ключ действует бессрочно, укажите любую дату в отдаленном будущем.\n\nФормат даты: `ГГГГ-ММ-ДД`.\n
     * @return activateTill
     */
    public Date activateTill { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'activate_till' => 'activateTill'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASOrderDigitalItemDTO getExample() {
        OASOrderDigitalItemDTO orderDigitalItemDTO = new OASOrderDigitalItemDTO();
          orderDigitalItemDTO.id = 123456789L;
          orderDigitalItemDTO.code = '';
          orderDigitalItemDTO.slip = '';
          orderDigitalItemDTO.activateTill = Date.newInstance(2000, 1, 23);
        return orderDigitalItemDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOrderDigitalItemDTO) {           
            OASOrderDigitalItemDTO orderDigitalItemDTO = (OASOrderDigitalItemDTO) obj;
            return this.id == orderDigitalItemDTO.id
                && this.code == orderDigitalItemDTO.code
                && this.slip == orderDigitalItemDTO.slip
                && this.activateTill == orderDigitalItemDTO.activateTill;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (code == null ? 0 : System.hashCode(code));
        hashCode = (17 * hashCode) + (slip == null ? 0 : System.hashCode(slip));
        hashCode = (17 * hashCode) + (activateTill == null ? 0 : System.hashCode(activateTill));
        return hashCode;
    }
}

