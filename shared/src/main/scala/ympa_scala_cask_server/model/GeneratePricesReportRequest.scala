/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import java.time.LocalDate
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class GeneratePricesReportRequest(
/* Идентификатор бизнеса.  В большинстве случаев обязателен. Не указывается, если задан `campaignId`.  */
  businessId: Option[Long] = None ,

  /* Идентификатор кампании.  Как правило, не используется. Передавайте только если в кабинете есть магазины с уникальными ценами и вы хотите получить отчет для них. В этом случае передавать `businessId` не нужно.  */
  campaignId: Option[Long] = None ,

  /* Фильтр по категориям на Маркете. */
  categoryIds: Seq[Long] = Nil ,

  /* Фильтр по времени появления предложения — начало периода.  Формат даты: `ДД-ММ-ГГГГ`.  */
  creationDateFrom: Option[LocalDate] = None ,

  /* Фильтр по времени появления предложения — окончание периода.  Формат даты: `ДД-ММ-ГГГГ`.  */
  creationDateTo: Option[LocalDate] = None 

  ) {

  def asJson: String = asData.asJson

  def asData : GeneratePricesReportRequestData = {
    GeneratePricesReportRequestData(
            businessId = businessId.getOrElse(0),
            campaignId = campaignId.getOrElse(0),
            categoryIds = categoryIds,
            creationDateFrom = creationDateFrom.getOrElse(null),
            creationDateTo = creationDateTo.getOrElse(null)
    )
  }

}

object GeneratePricesReportRequest{

    given RW[GeneratePricesReportRequest] = GeneratePricesReportRequestData.readWriter.bimap[GeneratePricesReportRequest](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case businessId extends Fields("businessId")
            case campaignId extends Fields("campaignId")
            case categoryIds extends Fields("categoryIds")
            case creationDateFrom extends Fields("creationDateFrom")
            case creationDateTo extends Fields("creationDateTo")
    }


}

