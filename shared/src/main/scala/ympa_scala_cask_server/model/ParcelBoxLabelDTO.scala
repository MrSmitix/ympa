/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class ParcelBoxLabelDTO(
/* Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label](../../reference/orders/generateOrderLabel.md).  */
  url: String,

  /* Юридическое название магазина. */
  supplierName: String,

  /* Юридическое название службы доставки. */
  deliveryServiceName: String,

  /* Идентификатор заказа в системе Маркета. */
  orderId: Long,

  /* Идентификатор заказа в информационной системе магазина.  Совпадает с `orderId`, если Маркету неизвестен номер заказа в системе магазина.  */
  orderNum: String,

  /* Фамилия и инициалы получателя заказа. */
  recipientName: String,

  /* Идентификатор коробки. */
  boxId: Long,

  /* Идентификатор коробки в информационной системе магазина.  Возвращается в формате: `номер заказа на Маркете-номер коробки`. Например, `7206821‑1`, `7206821‑2` и т. д.  */
  fulfilmentId: String,

  /* Номер коробки в заказе. Возвращается в формате: `номер места/общее количество мест`.  */
  place: String,

  /* {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Общая масса всех товаров в заказе. Возвращается в формате: `weight кг`.  */
  weight: String,

  /* Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md). */
  deliveryServiceId: String,

  /* Адрес получателя. */
  deliveryAddress: Option[String] = None ,

  /* Дата отгрузки в формате `dd.MM.yyyy`. */
  shipmentDate: Option[String] = None 

  ) {

  def asJson: String = asData.asJson

  def asData : ParcelBoxLabelDTOData = {
    ParcelBoxLabelDTOData(
            url = url,
            supplierName = supplierName,
            deliveryServiceName = deliveryServiceName,
            orderId = orderId,
            orderNum = orderNum,
            recipientName = recipientName,
            boxId = boxId,
            fulfilmentId = fulfilmentId,
            place = place,
            weight = weight,
            deliveryServiceId = deliveryServiceId,
            deliveryAddress = deliveryAddress.getOrElse(""),
            shipmentDate = shipmentDate.getOrElse("")
    )
  }

}

object ParcelBoxLabelDTO{

    given RW[ParcelBoxLabelDTO] = ParcelBoxLabelDTOData.readWriter.bimap[ParcelBoxLabelDTO](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case url extends Fields("url")
            case supplierName extends Fields("supplierName")
            case deliveryServiceName extends Fields("deliveryServiceName")
            case orderId extends Fields("orderId")
            case orderNum extends Fields("orderNum")
            case recipientName extends Fields("recipientName")
            case boxId extends Fields("boxId")
            case fulfilmentId extends Fields("fulfilmentId")
            case place extends Fields("place")
            case weight extends Fields("weight")
            case deliveryServiceId extends Fields("deliveryServiceId")
            case deliveryAddress extends Fields("deliveryAddress")
            case shipmentDate extends Fields("shipmentDate")
    }


}

