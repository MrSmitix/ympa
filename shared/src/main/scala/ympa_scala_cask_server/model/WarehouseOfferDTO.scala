/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import java.time.OffsetDateTime
import ympa_scala_cask_server.model.TurnoverDTO
import ympa_scala_cask_server.model.WarehouseStockDTO
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class WarehouseOfferDTO(
/* Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)  */
  offerId: String,

    turnoverSummary: Option[TurnoverDTO] = None ,

  /* Информация об остатках. */
  stocks: Seq[WarehouseStockDTO],

  /* Дата и время последнего обновления информации об остатках.  Формат даты и времени: ISO 8601 со смещением относительно UTC. Например, `2023-11-21T00:42:42+03:00`.  */
  updatedAt: Option[OffsetDateTime] = None 

  ) {

  def asJson: String = asData.asJson

  def asData : WarehouseOfferDTOData = {
    WarehouseOfferDTOData(
            offerId = offerId,
            turnoverSummary = turnoverSummary.map(_.asData).getOrElse(null),
            stocks = stocks.map(_.asData),
            updatedAt = updatedAt.getOrElse(null)
    )
  }

}

object WarehouseOfferDTO{

    given RW[WarehouseOfferDTO] = WarehouseOfferDTOData.readWriter.bimap[WarehouseOfferDTO](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case offerId extends Fields("offerId")
            case turnoverSummary extends Fields("turnoverSummary")
            case stocks extends Fields("stocks")
            case updatedAt extends Fields("updatedAt")
    }


}

