/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class OrderItemInstanceDTO(
/* Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/) без криптохвоста. */
  cis: Option[String] = None ,

  /* Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/) с криптохвостом. */
  cisFull: Option[String] = None ,

  /* УИН ювелирного изделия (16-значный код) Производитель получает УИН, когда регистрирует изделие в системе контроля за оборотом драгоценных металлов и камней — ГИИС ДМДК.  */
  uin: Option[String] = None ,

  /* Регистрационный номер партии товара.  Представляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации.  */
  rnpt: Option[String] = None ,

  /* Грузовая таможенная декларация.  Представляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации.  */
  gtd: Option[String] = None 

  ) {

  def asJson: String = asData.asJson

  def asData : OrderItemInstanceDTOData = {
    OrderItemInstanceDTOData(
            cis = cis.getOrElse(""),
            cisFull = cisFull.getOrElse(""),
            uin = uin.getOrElse(""),
            rnpt = rnpt.getOrElse(""),
            gtd = gtd.getOrElse("")
    )
  }

}

object OrderItemInstanceDTO{

    given RW[OrderItemInstanceDTO] = OrderItemInstanceDTOData.readWriter.bimap[OrderItemInstanceDTO](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case cis extends Fields("cis")
            case cisFull extends Fields("cisFull")
            case uin extends Fields("uin")
            case rnpt extends Fields("rnpt")
            case gtd extends Fields("gtd")
    }


}

