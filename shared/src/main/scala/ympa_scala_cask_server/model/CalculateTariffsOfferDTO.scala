/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import scala.math.BigDecimal
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class CalculateTariffsOfferDTO(
/* Идентификатор категории товара на Маркете.  Для расчета стоимости услуг необходимо указать идентификатор листовой категории товара — той, которая не имеет дочерних категорий.  Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).  */
  categoryId: Long,

  /* Цена на товар в рублях. */
  price: BigDecimal,

  /* Длина товара в сантиметрах. */
  length: BigDecimal,

  /* Ширина товара в сантиметрах. */
  width: BigDecimal,

  /* Высота товара в сантиметрах. */
  height: BigDecimal,

  /* Вес товара в килограммах. */
  weight: BigDecimal,

  /* Квант продажи — количество единиц товара в одном товарном предложении. */
  quantity: Option[Int] = None 

  ) {

  def asJson: String = asData.asJson

  def asData : CalculateTariffsOfferDTOData = {
    CalculateTariffsOfferDTOData(
            categoryId = categoryId,
            price = price,
            length = length,
            width = width,
            height = height,
            weight = weight,
            quantity = quantity.getOrElse(1)
    )
  }

}

object CalculateTariffsOfferDTO{

    given RW[CalculateTariffsOfferDTO] = CalculateTariffsOfferDTOData.readWriter.bimap[CalculateTariffsOfferDTO](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case categoryId extends Fields("categoryId")
            case price extends Fields("price")
            case length extends Fields("length")
            case width extends Fields("width")
            case height extends Fields("height")
            case weight extends Fields("weight")
            case quantity extends Fields("quantity")
    }


}

