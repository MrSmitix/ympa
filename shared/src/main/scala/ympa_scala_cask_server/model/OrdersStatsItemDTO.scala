/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import scala.math.BigDecimal
import ympa_scala_cask_server.model.OrdersStatsDetailsDTO
import ympa_scala_cask_server.model.OrdersStatsPriceDTO
import ympa_scala_cask_server.model.OrdersStatsWarehouseDTO
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class OrdersStatsItemDTO(
/* Название товара. */
  offerName: Option[String] = None ,

  /* SKU на Маркете. */
  marketSku: Option[Long] = None ,

  /* Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)  */
  shopSku: Option[String] = None ,

  /* Количество единиц товара с учетом удаленных единиц.  Если из заказа удалены все единицы товара, он попадет только в список `initialItems`.  */
  count: Option[Int] = None ,

  /* Цена или скидки на товар. */
  prices: Seq[OrdersStatsPriceDTO] = Nil ,

    warehouse: Option[OrdersStatsWarehouseDTO] = None ,

  /* Информация об удалении товара из заказа. */
  details: Seq[OrdersStatsDetailsDTO] = Nil ,

  /* Список кодов идентификации товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/). */
  cisList: Seq[String] = Nil ,

  /* Первоначальное количество единиц товара. */
  initialCount: Option[Int] = None ,

  /* Списанная ставка ближайшего конкурента.  Указывается в процентах от стоимости товара и умножается на 100. Например, ставка 5% обозначается как 500.  */
  bidFee: Option[Int] = None ,

  /* Порог для скидок с Маркетом на момент оформления заказа. [Что это такое?](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)  Указан в рублях. Точность — два знака после запятой.  */
  cofinanceThreshold: Option[BigDecimal] = None ,

  /* Скидка с Маркетом. [Что это такое?](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)  Указана в рублях. Точность — два знака после запятой.  */
  cofinanceValue: Option[BigDecimal] = None 

  ) {

  def asJson: String = asData.asJson

  def asData : OrdersStatsItemDTOData = {
    OrdersStatsItemDTOData(
            offerName = offerName.getOrElse(""),
            marketSku = marketSku.getOrElse(0),
            shopSku = shopSku.getOrElse(""),
            count = count.getOrElse(0),
            prices = prices.map(_.asData),
            warehouse = warehouse.map(_.asData).getOrElse(null),
            details = details.map(_.asData),
            cisList = cisList,
            initialCount = initialCount.getOrElse(0),
            bidFee = bidFee.getOrElse(0),
            cofinanceThreshold = cofinanceThreshold.getOrElse(0),
            cofinanceValue = cofinanceValue.getOrElse(0)
    )
  }

}

object OrdersStatsItemDTO{

    given RW[OrdersStatsItemDTO] = OrdersStatsItemDTOData.readWriter.bimap[OrdersStatsItemDTO](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case offerName extends Fields("offerName")
            case marketSku extends Fields("marketSku")
            case shopSku extends Fields("shopSku")
            case count extends Fields("count")
            case prices extends Fields("prices")
            case warehouse extends Fields("warehouse")
            case details extends Fields("details")
            case cisList extends Fields("cisList")
            case initialCount extends Fields("initialCount")
            case bidFee extends Fields("bidFee")
            case cofinanceThreshold extends Fields("cofinanceThreshold")
            case cofinanceValue extends Fields("cofinanceValue")
    }


}

