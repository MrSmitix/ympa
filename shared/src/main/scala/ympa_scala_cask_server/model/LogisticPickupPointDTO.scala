/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import ympa_scala_cask_server.model.LogisticPointType
import ympa_scala_cask_server.model.PickupAddressDTO
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class LogisticPickupPointDTO(
/* Идентификатор пункта вывоза. */
  id: Option[Long] = None ,

  /* Название пункта вывоза. */
  name: Option[String] = None ,

    address: Option[PickupAddressDTO] = None ,

  /* Дополнительные инструкции к вывозу. */
  instruction: Option[String] = None ,

    `type`: Option[LogisticPointType] = None ,

  /* Идентификатор логистического партнера, к которому относится логистическая точка. */
  logisticPartnerId: Option[Long] = None 

  ) {

  def asJson: String = asData.asJson

  def asData : LogisticPickupPointDTOData = {
    LogisticPickupPointDTOData(
            id = id.getOrElse(0),
            name = name.getOrElse(""),
            address = address.map(_.asData).getOrElse(null),
            instruction = instruction.getOrElse(""),
            `type` = `type`.getOrElse(null),
            logisticPartnerId = logisticPartnerId.getOrElse(0)
    )
  }

}

object LogisticPickupPointDTO{

    given RW[LogisticPickupPointDTO] = LogisticPickupPointDTOData.readWriter.bimap[LogisticPickupPointDTO](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case id extends Fields("id")
            case name extends Fields("name")
            case address extends Fields("address")
            case instruction extends Fields("instruction")
            case `type` extends Fields("`type`")
            case logisticPartnerId extends Fields("logisticPartnerId")
    }


}

