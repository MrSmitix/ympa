/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import ympa_scala_cask_server.model.AgeDTO
import ympa_scala_cask_server.model.BasePriceDTO
import ympa_scala_cask_server.model.OfferConditionDTO
import ympa_scala_cask_server.model.OfferManualDTO
import ympa_scala_cask_server.model.OfferParamDTO
import ympa_scala_cask_server.model.OfferType
import ympa_scala_cask_server.model.OfferWeightDimensionsDTO
import ympa_scala_cask_server.model.ParameterValueDTO
import ympa_scala_cask_server.model.TimePeriodDTO
import ympa_scala_cask_server.model.UpdatePriceWithDiscountDTO
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class UpdateOfferDTO(
/* Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)  */
  offerId: String,

  /* Составляйте название по схеме: тип + бренд или производитель + модель + особенности, если есть (например, цвет, размер или вес) и количество в упаковке.  Не включайте в название условия продажи (например, «скидка», «бесплатная доставка» и т. д.), эмоциональные характеристики («хит», «супер» и т. д.). Не пишите слова большими буквами — кроме устоявшихся названий брендов и моделей.  Оптимальная длина — 50–60 символов, максимальная — 256.  [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/title.html)  */
  name: Option[String] = None ,

  /* Идентификатор категории на Маркете, к которой вы относите свой товар.  Если не указать `marketCategoryId`, то маркетная категория будет определена автоматически.  При изменении информации о товаре передавайте тот же идентификатор категории. Если вы укажете другой, категория товара не поменяется. Изменить ее можно только в кабинете продавца на Маркете.  Список категорий Маркета можно получить с помощью запроса  [POST categories/tree](../../reference/categories/getCategoriesTree.md).  */
  marketCategoryId: Option[Long] = None ,

  /* Категория товара в вашем магазине. Значение будет использовано для определения категории товара на Маркете в случае, если вы не передали категорию в параметре `marketCategoryId`.  Указывайте конкретные категории — например, набор ножей лучше отнести к категории **Столовые приборы**, а не просто **Посуда**.  Выбирайте категории, которые описывают товар, а не абстрактный признак — например, **Духи**, а не **Подарки**.  Значение будет использовано для определения категории товара на Маркете в случае, если вы не передали категорию в параметре `marketCategoryId`.  */
  category: Option[String] = None ,

  /* Ссылки на изображения товара. Изображение по первой ссылке считается основным, остальные дополнительными.  **Требования к ссылкам**  * Ссылок может быть до 30. * Указывайте ссылку целиком, включая протокол http или https. * Максимальная длина — 512 символов. * Русские буквы в URL можно. * Можно использовать прямые ссылки на изображения и на Яндекс Диск. Ссылки на Яндекс Диске нужно копировать с помощью функции **Поделиться**. Относительные ссылки и ссылки на другие облачные хранилища — не работают.  ✅ `https://example-shop.ru/images/sku12345.jpg`  ✅ `https://yadi.sk/i/NaBoRsimVOLov`  ❌ `/images/sku12345.jpg`  ❌ `https://www.dropbox.com/s/818f/tovar.jpg`  Ссылки на изображение должны быть постоянными. Нельзя использовать динамические ссылки, меняющиеся от выгрузки к выгрузке.  Если нужно заменить изображение, выложите новое изображение по новой ссылке, а ссылку на старое удалите. Если просто заменить изображение по старой ссылке, оно не обновится.  [Требования к изображениям](https://yandex.ru/support/marketplace/assortment/fields/images.html)  */
  pictures: Seq[String] = Nil ,

  /* Ссылка (URL) на видео товара.  Максимальное количество ссылок — 6.  **Требования к ссылке**  * Указывайте ссылку целиком, включая протокол http или https. * Максимальная длина — 512 символов. * Русские буквы в URL можно. * Можно использовать прямые ссылки на видео и на Яндекс Диск. Ссылки на Яндекс Диске нужно копировать с помощью функции **Поделиться**. Относительные ссылки и ссылки на другие облачные хранилища — не работают.  ✅ `https://example-shop.ru/video/sku12345.avi`  ✅ `https://yadi.sk/i/NaBoRsimVOLov`  ❌ `/video/sku12345.avi`  ❌ `https://www.dropbox.com/s/818f/super-tovar.avi`  Ссылки на видео должны быть постоянными. Нельзя использовать динамические ссылки, меняющиеся от выгрузки к выгрузке.  Если нужно заменить видео, выложите новое видео по новой ссылке, а ссылку на старое удалите. Если просто заменить видео по старой ссылке, оно не обновится.  [Требования к видео](https://yandex.ru/support/marketplace/assortment/fields/video.html)  */
  videos: Seq[String] = Nil ,

  /* Список инструкций по использованию товара.  Максимальное количество инструкций — 6.  Если вы передадите пустое поле `manuals`, загруженные ранее инструкции удалятся.  */
  manuals: Seq[OfferManualDTO] = Nil ,

  /* Название бренда или производителя. Должно быть записано так, как его пишет сам бренд. */
  vendor: Option[String] = None ,

  /* Указывайте в виде последовательности цифр. Подойдут коды EAN-13, EAN-8, UPC-A, UPC-E или Code 128.  Для книг указывайте ISBN.  Для товаров [определенных категорий и торговых марок](https://yastatic.net/s3/doc-binary/src/support/market/ru/yandex-market-list-for-gtin.xlsx) штрихкод должен быть действительным кодом GTIN. Обратите внимание: внутренние штрихкоды, начинающиеся на 2 или 02, и коды формата Code 128 не являются GTIN.  [Что такое GTIN](*gtin)   */
  barcodes: Seq[String] = Nil ,

  /* Подробное описание товара: например, его преимущества и особенности.  Не давайте в описании инструкций по установке и сборке. Не используйте слова «скидка», «распродажа», «дешевый», «подарок» (кроме подарочных категорий), «бесплатно», «акция», «специальная цена», «новинка», «new», «аналог», «заказ», «хит». Не указывайте никакой контактной информации и не давайте ссылок.  Можно использовать теги:  * \\<h>, \\<h1>, \\<h2> и так далее — для заголовков; * \\<br> и \\<p> — для переноса строки; * \\<ol> — для нумерованного списка; * \\<ul> — для маркированного списка; * \\<li> — для создания элементов списка (должен находиться внутри \\<ol> или \\<ul>); * \\<div> — поддерживается, но не влияет на отображение текста.  Оптимальная длина — 400–600 символов, максимальная — 6000.  [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/description.html)  */
  description: Option[String] = None ,

  /* Страна, где был произведен товар.  Записывайте названия стран так, как они записаны в [списке](https://yastatic.net/s3/doc-binary/src/support/market/ru/countries.xlsx).  */
  manufacturerCountries: Seq[String] = Nil ,

    weightDimensions: Option[OfferWeightDimensionsDTO] = None ,

  /* Артикул товара от производителя. */
  vendorCode: Option[String] = None ,

  /* Метки товара, используемые магазином. Покупателям теги не видны. По тегам можно группировать и фильтровать разные товары в каталоге — например, товары одной серии, коллекции или линейки.  Максимальная длина тега 20 символов. У одного товара может быть максимум 10 тегов. Всего можно создать не больше 50 разных тегов.  */
  tags: Seq[String] = Nil ,

    shelfLife: Option[TimePeriodDTO] = None ,

    lifeTime: Option[TimePeriodDTO] = None ,

    guaranteePeriod: Option[TimePeriodDTO] = None ,

  /* Код товара в единой Товарной номенклатуре внешнеэкономической деятельности (ТН ВЭД) — 10 или 14 цифр без пробелов.  Обязательно укажите, если он есть.  */
  customsCommodityCode: Option[String] = None ,

  /* Номера документов на товар: сертификата, декларации соответствия и т. п.  Передавать можно только номера документов, сканы которого загружены в кабинете продавца по [инструкции](https://yandex.ru/support/marketplace/assortment/restrictions/certificates.html).  */
  certificates: Seq[String] = Nil ,

  /* Количество грузовых мест.  Параметр используется, если товар представляет собой несколько коробок, упаковок и так далее. Например, кондиционер занимает два места — внешний и внутренний блоки в двух коробках.  Для товаров, занимающих одно место, не передавайте этот параметр.  */
  boxCount: Option[Int] = None ,

    condition: Option[OfferConditionDTO] = None ,

    `type`: Option[OfferType] = None ,

  /* Признак цифрового товара. Укажите `true`, если товар доставляется по электронной почте.  [Как работать с цифровыми товарами](../../step-by-step/digital.md)  */
  downloadable: Option[Boolean] = None ,

  /* Параметр включает для товара пометку 18+. Устанавливайте ее только для товаров, которые относятся к удовлетворению сексуальных потребностей.  */
  adult: Option[Boolean] = None ,

    age: Option[AgeDTO] = None ,

  /* {% note warning \"\" %}  Этот параметр устарел. При передаче характеристик используйте `parameterValues`.  {% endnote %}  Характеристики, которые есть только у товаров конкретной категории — например, диаметр колес велосипеда или материал подошвы обуви.  */
  params: Seq[OfferParamDTO] = Nil ,

  /* Список характеристик с их значениями.  С `parameterValues` обязательно передавайте `marketCategoryId` — идентификатор категории на Маркете, к которой относятся указанные характеристики товара.  При **изменении** характеристик передавайте только те, значение которых нужно обновить.  Чтобы **удалить** значение заданной характеристики, передайте ее `parameterId` с пустым `value`.  Максимальное количество характеристик — 300.  */
  parameterValues: Seq[ParameterValueDTO] = Nil ,

    basicPrice: Option[UpdatePriceWithDiscountDTO] = None ,

    purchasePrice: Option[BasePriceDTO] = None ,

    additionalExpenses: Option[BasePriceDTO] = None ,

    cofinancePrice: Option[BasePriceDTO] = None 

  ) {

  def asJson: String = asData.asJson

  def asData : UpdateOfferDTOData = {
    UpdateOfferDTOData(
            offerId = offerId,
            name = name.getOrElse(""),
            marketCategoryId = marketCategoryId.getOrElse(0),
            category = category.getOrElse(""),
            pictures = pictures,
            videos = videos,
            manuals = manuals.map(_.asData),
            vendor = vendor.getOrElse(""),
            barcodes = barcodes,
            description = description.getOrElse(""),
            manufacturerCountries = manufacturerCountries,
            weightDimensions = weightDimensions.map(_.asData).getOrElse(null),
            vendorCode = vendorCode.getOrElse(""),
            tags = tags,
            shelfLife = shelfLife.map(_.asData).getOrElse(null),
            lifeTime = lifeTime.map(_.asData).getOrElse(null),
            guaranteePeriod = guaranteePeriod.map(_.asData).getOrElse(null),
            customsCommodityCode = customsCommodityCode.getOrElse(""),
            certificates = certificates,
            boxCount = boxCount.getOrElse(0),
            condition = condition.map(_.asData).getOrElse(null),
            `type` = `type`.getOrElse(null),
            downloadable = downloadable.getOrElse(false),
            adult = adult.getOrElse(false),
            age = age.map(_.asData).getOrElse(null),
            params = params.map(_.asData),
            parameterValues = parameterValues.map(_.asData),
            basicPrice = basicPrice.map(_.asData).getOrElse(null),
            purchasePrice = purchasePrice.map(_.asData).getOrElse(null),
            additionalExpenses = additionalExpenses.map(_.asData).getOrElse(null),
            cofinancePrice = cofinancePrice.map(_.asData).getOrElse(null)
    )
  }

}

object UpdateOfferDTO{

    given RW[UpdateOfferDTO] = UpdateOfferDTOData.readWriter.bimap[UpdateOfferDTO](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case offerId extends Fields("offerId")
            case name extends Fields("name")
            case marketCategoryId extends Fields("marketCategoryId")
            case category extends Fields("category")
            case pictures extends Fields("pictures")
            case videos extends Fields("videos")
            case manuals extends Fields("manuals")
            case vendor extends Fields("vendor")
            case barcodes extends Fields("barcodes")
            case description extends Fields("description")
            case manufacturerCountries extends Fields("manufacturerCountries")
            case weightDimensions extends Fields("weightDimensions")
            case vendorCode extends Fields("vendorCode")
            case tags extends Fields("tags")
            case shelfLife extends Fields("shelfLife")
            case lifeTime extends Fields("lifeTime")
            case guaranteePeriod extends Fields("guaranteePeriod")
            case customsCommodityCode extends Fields("customsCommodityCode")
            case certificates extends Fields("certificates")
            case boxCount extends Fields("boxCount")
            case condition extends Fields("condition")
            case `type` extends Fields("`type`")
            case downloadable extends Fields("downloadable")
            case adult extends Fields("adult")
            case age extends Fields("age")
            case params extends Fields("params")
            case parameterValues extends Fields("parameterValues")
            case basicPrice extends Fields("basicPrice")
            case purchasePrice extends Fields("purchasePrice")
            case additionalExpenses extends Fields("additionalExpenses")
            case cofinancePrice extends Fields("cofinancePrice")
    }


}

