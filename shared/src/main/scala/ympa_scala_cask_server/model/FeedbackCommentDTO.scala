/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import java.time.OffsetDateTime
import ympa_scala_cask_server.model.FeedbackCommentAuthorDTO
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class FeedbackCommentDTO(
/* Идентификатор ответа. */
  id: Option[Long] = None ,

  /* Идентификатор родительского ответа. */
  parentId: Option[Long] = None ,

  /* Текст ответа. */
  body: Option[String] = None ,

  /* Дата и время создания ответа.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`.  */
  createdAt: Option[OffsetDateTime] = None ,

  /* Дата и время изменения ответа.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`.  */
  updatedAt: Option[OffsetDateTime] = None ,

    author: Option[FeedbackCommentAuthorDTO] = None ,

  /* Дочерние ответы. */
  children: Seq[FeedbackCommentDTO] = Nil 

  ) {

  def asJson: String = asData.asJson

  def asData : FeedbackCommentDTOData = {
    FeedbackCommentDTOData(
            id = id.getOrElse(0),
            parentId = parentId.getOrElse(0),
            body = body.getOrElse(""),
            createdAt = createdAt.getOrElse(null),
            updatedAt = updatedAt.getOrElse(null),
            author = author.map(_.asData).getOrElse(null),
            children = children.map(_.asData)
    )
  }

}

object FeedbackCommentDTO{

    given RW[FeedbackCommentDTO] = FeedbackCommentDTOData.readWriter.bimap[FeedbackCommentDTO](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case id extends Fields("id")
            case parentId extends Fields("parentId")
            case body extends Fields("body")
            case createdAt extends Fields("createdAt")
            case updatedAt extends Fields("updatedAt")
            case author extends Fields("author")
            case children extends Fields("children")
    }


}

