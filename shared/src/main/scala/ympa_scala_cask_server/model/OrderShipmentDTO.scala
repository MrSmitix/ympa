/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import ympa_scala_cask_server.model.OrderParcelBoxDTO
import ympa_scala_cask_server.model.OrderTrackDTO
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class OrderShipmentDTO(
/* Идентификатор посылки, присвоенный Маркетом. */
  id: Option[Long] = None ,

  /* Формат даты: `ДД-ММ-ГГГГ`.  */
  shipmentDate: Option[String] = None ,

  /* **Только для модели Экспресс**  Время, к которому магазин должен упаковать заказ и перевести его в статус `READY_TO_SHIP`. После смены статуса за заказом приедет курьер.  Поле может появиться не сразу. Запрашивайте информацию о заказе в течении 5–10 минут, пока оно не вернется.  Формат времени: 24-часовой, `ЧЧ:ММ`.  Если заказ сделан организацией, параметр не возвращается до согласования даты доставки.  */
  shipmentTime: Option[String] = None ,

  /* **Только для модели DBS**  Информация для отслеживания перемещений посылки.  */
  tracks: Seq[OrderTrackDTO] = Nil ,

  /* Список грузовых мест. */
  boxes: Seq[OrderParcelBoxDTO] = Nil 

  ) {

  def asJson: String = asData.asJson

  def asData : OrderShipmentDTOData = {
    OrderShipmentDTOData(
            id = id.getOrElse(0),
            shipmentDate = shipmentDate.getOrElse(""),
            shipmentTime = shipmentTime.getOrElse(""),
            tracks = tracks.map(_.asData),
            boxes = boxes.map(_.asData)
    )
  }

}

object OrderShipmentDTO{

    given RW[OrderShipmentDTO] = OrderShipmentDTOData.readWriter.bimap[OrderShipmentDTO](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case id extends Fields("id")
            case shipmentDate extends Fields("shipmentDate")
            case shipmentTime extends Fields("shipmentTime")
            case tracks extends Fields("tracks")
            case boxes extends Fields("boxes")
    }


}

