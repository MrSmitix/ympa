/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import ympa_scala_cask_server.model.FeedPublicationFullDTO
import ympa_scala_cask_server.model.FeedPublicationPriceAndStockUpdateDTO
import ympa_scala_cask_server.model.FeedStatusType
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class FeedPublicationDTO(
  status: Option[FeedStatusType] = None ,

    full: Option[FeedPublicationFullDTO] = None ,

    priceAndStockUpdate: Option[FeedPublicationPriceAndStockUpdateDTO] = None 

  ) {

  def asJson: String = asData.asJson

  def asData : FeedPublicationDTOData = {
    FeedPublicationDTOData(
            status = status.getOrElse(null),
            full = full.map(_.asData).getOrElse(null),
            priceAndStockUpdate = priceAndStockUpdate.map(_.asData).getOrElse(null)
    )
  }

}

object FeedPublicationDTO{

    given RW[FeedPublicationDTO] = FeedPublicationDTOData.readWriter.bimap[FeedPublicationDTO](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case status extends Fields("status")
            case full extends Fields("full")
            case priceAndStockUpdate extends Fields("priceAndStockUpdate")
    }


}

