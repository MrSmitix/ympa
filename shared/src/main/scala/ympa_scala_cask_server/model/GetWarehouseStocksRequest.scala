/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class GetWarehouseStocksRequest(
/* **Только для модели FBY**  Возвращать ли информацию по оборачиваемости.  Значение по умолчанию — `false`. Если информация нужна, передайте значение `true`.  */
  withTurnover: Option[Boolean] = None ,

  /* Фильтр по нахождению в архиве.  Передайте `true`, чтобы получить информацию об остатках товаров, которые находятся в архиве. Если фильтр не заполнен или передано `false`, в ответе возвращается информация о товарах, которые не находятся в архиве.  */
  archived: Option[Boolean] = None ,

  /* Фильтр по вашим SKU товаров.  Возвращается информация об остатках всех переданных SKU, включая товары в архиве.  {% note warning \"Такой список возвращается только целиком\" %}  Если вы запрашиваете информацию по конкретным SKU, не заполняйте:  * `page_token` * `limit` * `archived`  {% endnote %}     */
  offerIds: Set[String] = Set.empty 

  ) {

  def asJson: String = asData.asJson

  def asData : GetWarehouseStocksRequestData = {
    GetWarehouseStocksRequestData(
            withTurnover = withTurnover.getOrElse(false),
            archived = archived.getOrElse(false),
            offerIds = offerIds
    )
  }

}

object GetWarehouseStocksRequest{

    given RW[GetWarehouseStocksRequest] = GetWarehouseStocksRequestData.readWriter.bimap[GetWarehouseStocksRequest](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case withTurnover extends Fields("withTurnover")
            case archived extends Fields("archived")
            case offerIds extends Fields("offerIds")
    }


}

