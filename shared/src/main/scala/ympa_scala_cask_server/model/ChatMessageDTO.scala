/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import java.time.OffsetDateTime
import ympa_scala_cask_server.model.ChatMessagePayloadDTO
import ympa_scala_cask_server.model.ChatMessageSenderType
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class ChatMessageDTO(
/* Идентификатор сообщения. */
  messageId: Long,

  /* Дата и время создания сообщения.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`.  */
  createdAt: OffsetDateTime,

    sender: ChatMessageSenderType,

  /* Текст сообщения.  Необязательный параметр, если возвращается параметр `payload`.  */
  message: Option[String] = None ,

  /* Информация о приложенных к сообщению файлах.  Необязательный параметр, если возвращается параметр `message`.  */
  payload: Seq[ChatMessagePayloadDTO] = Nil 

  ) {

  def asJson: String = asData.asJson

  def asData : ChatMessageDTOData = {
    ChatMessageDTOData(
            messageId = messageId,
            createdAt = createdAt,
            sender = sender,
            message = message.getOrElse(""),
            payload = payload.map(_.asData)
    )
  }

}

object ChatMessageDTO{

    given RW[ChatMessageDTO] = ChatMessageDTOData.readWriter.bimap[ChatMessageDTO](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case messageId extends Fields("messageId")
            case createdAt extends Fields("createdAt")
            case sender extends Fields("sender")
            case message extends Fields("message")
            case payload extends Fields("payload")
    }


}

