/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import ympa_scala_cask_server.model.FeedDownloadErrorType
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class FeedDownloadErrorDTO(
/* HTTP-код ошибки индексации прайс-листа. Выводится, если `type=DOWNLOAD_HTTP_ERROR`.  */
  httpStatusCode: Option[Int] = None ,

    `type`: Option[FeedDownloadErrorType] = None ,

  /* Описание ошибки. Выводится, если `type=DOWNLOAD_ERROR`.  */
  description: Option[String] = None 

  ) {

  def asJson: String = asData.asJson

  def asData : FeedDownloadErrorDTOData = {
    FeedDownloadErrorDTOData(
            httpStatusCode = httpStatusCode.getOrElse(0),
            `type` = `type`.getOrElse(null),
            description = description.getOrElse("")
    )
  }

}

object FeedDownloadErrorDTO{

    given RW[FeedDownloadErrorDTO] = FeedDownloadErrorDTOData.readWriter.bimap[FeedDownloadErrorDTO](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case httpStatusCode extends Fields("httpStatusCode")
            case `type` extends Fields("`type`")
            case description extends Fields("description")
    }


}

