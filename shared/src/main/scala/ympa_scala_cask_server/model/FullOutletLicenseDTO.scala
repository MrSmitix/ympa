/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import java.time.OffsetDateTime
import ympa_scala_cask_server.model.LicenseCheckStatusType
import ympa_scala_cask_server.model.LicenseType
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class FullOutletLicenseDTO(
/* Идентификатор лицензии.  Параметр указывается, только если нужно изменить информацию о существующей лицензии. Ее идентификатор можно узнать с помощью запроса [GET campaigns/{campaignId}/outlets/licenses](../../reference/outlets/getOutletLicenses.md). При передаче информации о новой лицензии указывать идентификатор не нужно.  Идентификатор лицензии присваивается Маркетом. Не путайте его с номером, указанным на лицензии: он передается в параметре `number`.  */
  id: Option[Long] = None ,

  /* Идентификатор точки продаж, для которой действительна лицензия. */
  outletId: Option[Long] = None ,

    licenseType: Option[LicenseType] = None ,

  /* Номер лицензии. */
  number: Option[String] = None ,

  /* Дата выдачи лицензии.  Формат даты: ISO 8601 со смещением относительно UTC. Нужно передать дату, указанную на лицензии, время `00:00:00` и часовой пояс, соответствующий региону точки продаж. Например, если лицензия для точки продаж в Москве выдана 13 ноября 2017 года, то параметр должен иметь значение `2017-11-13T00:00:00+03:00`.  Обязательный параметр.  Не может быть позже даты окончания срока действия, указанной в параметре `dateOfExpiry`.  */
  dateOfIssue: Option[OffsetDateTime] = None ,

  /* Дата окончания действия лицензии.  Формат даты: ISO 8601 со смещением относительно UTC. Нужно передать дату, указанную на лицензии, время `00:00:00` и часовой пояс, соответствующий региону точки продаж. Например, если действие лицензии для точки продаж в Москве заканчивается 20 ноября 2022 года, то параметр должен иметь значение `2022-11-20T00:00:00+03:00`.  Обязательный параметр.  Не может быть раньше даты выдачи, указанной в параметре `dateOfIssue`.  */
  dateOfExpiry: Option[OffsetDateTime] = None ,

    checkStatus: Option[LicenseCheckStatusType] = None ,

  /* Причина, по которой лицензия не прошла проверку.  Параметр возвращается, только если параметр `checkStatus` имеет значение `FAIL`.  */
  checkComment: Option[String] = None 

  ) {

  def asJson: String = asData.asJson

  def asData : FullOutletLicenseDTOData = {
    FullOutletLicenseDTOData(
            id = id.getOrElse(0),
            outletId = outletId.getOrElse(0),
            licenseType = licenseType.getOrElse(null),
            number = number.getOrElse(""),
            dateOfIssue = dateOfIssue.getOrElse(null),
            dateOfExpiry = dateOfExpiry.getOrElse(null),
            checkStatus = checkStatus.getOrElse(null),
            checkComment = checkComment.getOrElse("")
    )
  }

}

object FullOutletLicenseDTO{

    given RW[FullOutletLicenseDTO] = FullOutletLicenseDTOData.readWriter.bimap[FullOutletLicenseDTO](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case id extends Fields("id")
            case outletId extends Fields("outletId")
            case licenseType extends Fields("licenseType")
            case number extends Fields("number")
            case dateOfIssue extends Fields("dateOfIssue")
            case dateOfExpiry extends Fields("dateOfExpiry")
            case checkStatus extends Fields("checkStatus")
            case checkComment extends Fields("checkComment")
    }


}

