/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import java.time.LocalDate
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class GenerateStocksOnWarehousesReportRequest(
/* Идентификатор магазина. */
  campaignId: Long,

  /* Фильтр по идентификаторам складов (только модель FBY). Чтобы узнать идентификатор, воспользуйтесь запросом [GET warehouses](../../reference/warehouses/getFulfillmentWarehouses.md). */
  warehouseIds: Seq[Long] = Nil ,

  /* Фильтр по дате (для модели FBY). В отчет попадут данные за **предшествующий** дате день. */
  reportDate: Option[LocalDate] = None ,

  /* Фильтр по категориям на Маркете (кроме модели FBY). */
  categoryIds: Seq[Long] = Nil ,

  /* Фильтр по наличию остатков (кроме модели FBY). */
  hasStocks: Option[Boolean] = None 

  ) {

  def asJson: String = asData.asJson

  def asData : GenerateStocksOnWarehousesReportRequestData = {
    GenerateStocksOnWarehousesReportRequestData(
            campaignId = campaignId,
            warehouseIds = warehouseIds,
            reportDate = reportDate.getOrElse(null),
            categoryIds = categoryIds,
            hasStocks = hasStocks.getOrElse(false)
    )
  }

}

object GenerateStocksOnWarehousesReportRequest{

    given RW[GenerateStocksOnWarehousesReportRequest] = GenerateStocksOnWarehousesReportRequestData.readWriter.bimap[GenerateStocksOnWarehousesReportRequest](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case campaignId extends Fields("campaignId")
            case warehouseIds extends Fields("warehouseIds")
            case reportDate extends Fields("reportDate")
            case categoryIds extends Fields("categoryIds")
            case hasStocks extends Fields("hasStocks")
    }


}

