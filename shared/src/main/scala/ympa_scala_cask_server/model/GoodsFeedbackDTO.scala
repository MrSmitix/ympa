/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import java.time.OffsetDateTime
import ympa_scala_cask_server.model.GoodsFeedbackDescriptionDTO
import ympa_scala_cask_server.model.GoodsFeedbackIdentifiersDTO
import ympa_scala_cask_server.model.GoodsFeedbackMediaDTO
import ympa_scala_cask_server.model.GoodsFeedbackStatisticsDTO
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class GoodsFeedbackDTO(
/* Идентификатор отзыва.  */
  feedbackId: Long,

  /* Дата и время создания отзыва. */
  createdAt: OffsetDateTime,

  /* Нужен ли ответ на отзыв. */
  needReaction: Boolean,

    identifiers: GoodsFeedbackIdentifiersDTO,

  /* Имя автора отзыва. */
  author: Option[String] = None ,

    description: Option[GoodsFeedbackDescriptionDTO] = None ,

    media: Option[GoodsFeedbackMediaDTO] = None ,

    statistics: GoodsFeedbackStatisticsDTO

  ) {

  def asJson: String = asData.asJson

  def asData : GoodsFeedbackDTOData = {
    GoodsFeedbackDTOData(
            feedbackId = feedbackId,
            createdAt = createdAt,
            needReaction = needReaction,
            identifiers = identifiers,
            author = author.getOrElse(""),
            description = description.map(_.asData).getOrElse(null),
            media = media.map(_.asData).getOrElse(null),
            statistics = statistics
    )
  }

}

object GoodsFeedbackDTO{

    given RW[GoodsFeedbackDTO] = GoodsFeedbackDTOData.readWriter.bimap[GoodsFeedbackDTO](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case feedbackId extends Fields("feedbackId")
            case createdAt extends Fields("createdAt")
            case needReaction extends Fields("needReaction")
            case identifiers extends Fields("identifiers")
            case author extends Fields("author")
            case description extends Fields("description")
            case media extends Fields("media")
            case statistics extends Fields("statistics")
    }


}

