/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class QuantumDTO(
/* Минимальное количество единиц товара в заказе. Например, если указать 10, покупатель сможет добавить в корзину не меньше 10 единиц.  ⚠️ Если количество товара на складе меньше заданного, ограничение не сработает и покупатель сможет его заказать.  */
  minQuantity: Option[Int] = None ,

  /* На сколько единиц покупатель сможет увеличить количество товара в корзине.  Например, если задать 5, покупатель сможет добавить к заказу только 5, 10, 15, ... единиц товара.  ⚠️ Если количество товара на складе не дотягивает до кванта, ограничение не сработает и покупатель сможет заказать количество, не кратное кванту.  */
  stepQuantity: Option[Int] = None 

  ) {

  def asJson: String = asData.asJson

  def asData : QuantumDTOData = {
    QuantumDTOData(
            minQuantity = minQuantity.getOrElse(0),
            stepQuantity = stepQuantity.getOrElse(0)
    )
  }

}

object QuantumDTO{

    given RW[QuantumDTO] = QuantumDTOData.readWriter.bimap[QuantumDTO](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case minQuantity extends Fields("minQuantity")
            case stepQuantity extends Fields("stepQuantity")
    }


}

