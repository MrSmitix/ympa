/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package ympa_scala_cask_server.model
import scala.math.BigDecimal
import ympa_scala_cask_server.model.OrderItemDetailDTO
import ympa_scala_cask_server.model.OrderItemInstanceDTO
import ympa_scala_cask_server.model.OrderItemInstanceType
import ympa_scala_cask_server.model.OrderItemPromoDTO
import ympa_scala_cask_server.model.OrderItemSubsidyDTO
import ympa_scala_cask_server.model.OrderVatType
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class OrderItemDTO(
/* Идентификатор товара в заказе.  Позволяет идентифицировать товар в рамках данного заказа.  */
  id: Option[Long] = None ,

  /* Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)  */
  offerId: Option[String] = None ,

  /* Название товара. */
  offerName: Option[String] = None ,

  /* Цена на товар в валюте заказа без учета вознаграждения партнеру за скидки по промокодам, купонам и акциям (параметр `subsidies`).  */
  price: Option[BigDecimal] = None ,

  /* Цена на товар в валюте покупателя. В цене уже учтены скидки по:  * акциям; * купонам; * промокодам.  */
  buyerPrice: Option[BigDecimal] = None ,

  /* Стоимость товара в валюте покупателя до применения скидок по:  * акциям; * купонам; * промокодам.  */
  buyerPriceBeforeDiscount: Option[BigDecimal] = None ,

  /* {% note warning \"\" %}  Этот параметр устарел.  {% endnote %}  Стоимость товара в валюте магазина до применения скидок.  */
  priceBeforeDiscount: Option[BigDecimal] = None ,

  /* Количество единиц товара. */
  count: Option[Int] = None ,

    vat: Option[OrderVatType] = None ,

  /* Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)  */
  shopSku: Option[String] = None ,

  /* {% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `subsidies`.  {% endnote %}  Общее вознаграждение партнеру за DBS-доставку и все скидки на товар:  * по промокодам; * по купонам; * по баллам Плюса; * по акциям.  Передается в валюте заказа.  */
  subsidy: Option[BigDecimal] = None ,

  /* {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Идентификатор склада в системе партнера, на который сформирован заказ.  */
  partnerWarehouseId: Option[String] = None ,

  /* Информация о вознаграждениях партнеру за скидки на товар по промокодам, купонам и акциям. */
  promos: Seq[OrderItemPromoDTO] = Nil ,

  /* Информация о маркировке единиц товара.  Возвращаются данные для маркировки, переданные в запросе [PUT campaigns/{campaignId}/orders/{orderId}/cis](../../reference/orders/provideOrderItemCis.md).  Если магазин еще не передавал коды для этого заказа, `instances` отсутствует.  */
  instances: Seq[OrderItemInstanceDTO] = Nil ,

  /* Информация об удалении товара из заказа.  */
  details: Seq[OrderItemDetailDTO] = Nil ,

  /* Список субсидий по типам. */
  subsidies: Seq[OrderItemSubsidyDTO] = Nil ,

  /* Список необходимых маркировок товара. */
  requiredInstanceTypes: Seq[OrderItemInstanceType] = Nil 

  ) {

  def asJson: String = asData.asJson

  def asData : OrderItemDTOData = {
    OrderItemDTOData(
            id = id.getOrElse(0),
            offerId = offerId.getOrElse(""),
            offerName = offerName.getOrElse(""),
            price = price.getOrElse(0),
            buyerPrice = buyerPrice.getOrElse(0),
            buyerPriceBeforeDiscount = buyerPriceBeforeDiscount.getOrElse(0),
            priceBeforeDiscount = priceBeforeDiscount.getOrElse(0),
            count = count.getOrElse(0),
            vat = vat.getOrElse(null),
            shopSku = shopSku.getOrElse(""),
            subsidy = subsidy.getOrElse(0),
            partnerWarehouseId = partnerWarehouseId.getOrElse(""),
            promos = promos.map(_.asData),
            instances = instances.map(_.asData),
            details = details.map(_.asData),
            subsidies = subsidies.map(_.asData),
            requiredInstanceTypes = requiredInstanceTypes
    )
  }

}

object OrderItemDTO{

    given RW[OrderItemDTO] = OrderItemDTOData.readWriter.bimap[OrderItemDTO](_.asData, _.asModel)

    enum Fields(fieldName : String) extends Field(fieldName) {
            case id extends Fields("id")
            case offerId extends Fields("offerId")
            case offerName extends Fields("offerName")
            case price extends Fields("price")
            case buyerPrice extends Fields("buyerPrice")
            case buyerPriceBeforeDiscount extends Fields("buyerPriceBeforeDiscount")
            case priceBeforeDiscount extends Fields("priceBeforeDiscount")
            case count extends Fields("count")
            case vat extends Fields("vat")
            case shopSku extends Fields("shopSku")
            case subsidy extends Fields("subsidy")
            case partnerWarehouseId extends Fields("partnerWarehouseId")
            case promos extends Fields("promos")
            case instances extends Fields("instances")
            case details extends Fields("details")
            case subsidies extends Fields("subsidies")
            case requiredInstanceTypes extends Fields("requiredInstanceTypes")
    }


}

