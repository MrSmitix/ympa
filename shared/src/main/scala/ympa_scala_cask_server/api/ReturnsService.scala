//> using scala "3.3.1"
//> using lib "com.lihaoyi::cask:0.8.3"
//> using lib "com.lihaoyi::scalatags:0.12.0"
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */


// generated from apiService.mustache
package ympa_scala_cask_server.api

import _root_.ympa_scala_cask_server.model.ApiClientDataErrorResponse
import _root_.ympa_scala_cask_server.model.ApiForbiddenErrorResponse
import _root_.ympa_scala_cask_server.model.ApiLimitErrorResponse
import _root_.ympa_scala_cask_server.model.ApiNotFoundErrorResponse
import _root_.ympa_scala_cask_server.model.ApiServerErrorResponse
import _root_.ympa_scala_cask_server.model.ApiUnauthorizedErrorResponse
import _root_.ympa_scala_cask_server.model.EmptyApiResponse
import _root_.java.io.File
import _root_.ympa_scala_cask_server.model.GetReturnResponse
import _root_.ympa_scala_cask_server.model.GetReturnsResponse
import _root_.java.time.LocalDate
import _root_.ympa_scala_cask_server.model.RefundStatusType
import _root_.ympa_scala_cask_server.model.ReturnType
import _root_.ympa_scala_cask_server.model.SetReturnDecisionRequest

import _root_.ympa_scala_cask_server.model.*

object ReturnsService {
  def apply() : ReturnsService = new ReturnsService {
        override def getReturn(campaignId : Long, orderId : Long, returnId : Long) : GetReturnResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def getReturnApplication(campaignId : Long, orderId : Long, returnId : Long) : File | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def getReturnPhoto(campaignId : Long, orderId : Long, returnId : Long, itemId : Long, imageHash : String) : File | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def getReturns(campaignId : Long, pageToken : Option[String], limit : Option[Int], orderIds : Seq[Long], statuses : Seq[RefundStatusType], &#x60;type&#x60; : Option[ReturnType], fromDate : Option[LocalDate], toDate : Option[LocalDate], fromDate2 : Option[LocalDate], toDate2 : Option[LocalDate]) : GetReturnsResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def setReturnDecision(campaignId : Long, orderId : Long, returnId : Long, setReturnDecisionRequest : SetReturnDecisionRequest) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def submitReturnDecision(campaignId : Long, orderId : Long, returnId : Long) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
  }
}

/**
 * The Returns business-logic
 */
trait ReturnsService {
  /** Информация о невыкупе или возврате
   * 
   * @return GetReturnResponse
   */
  def getReturn(campaignId : Long, orderId : Long, returnId : Long) : GetReturnResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Получение заявления на возврат
   * 
   * @return File
   */
  def getReturnApplication(campaignId : Long, orderId : Long, returnId : Long) : File | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Получение фотографии возврата
   * 
   * @return File
   */
  def getReturnPhoto(campaignId : Long, orderId : Long, returnId : Long, itemId : Long, imageHash : String) : File | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Список невыкупов и возвратов
   * 
   * @return GetReturnsResponse
   */
  def getReturns(campaignId : Long, pageToken : Option[String], limit : Option[Int], orderIds : Seq[Long], statuses : Seq[RefundStatusType], &#x60;type&#x60; : Option[ReturnType], fromDate : Option[LocalDate], toDate : Option[LocalDate], fromDate2 : Option[LocalDate], toDate2 : Option[LocalDate]) : GetReturnsResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Принятие или изменение решения по возврату
   * 
   * @return EmptyApiResponse
   */
  def setReturnDecision(campaignId : Long, orderId : Long, returnId : Long, setReturnDecisionRequest : SetReturnDecisionRequest) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Подтверждение решения по возврату
   * 
   * @return EmptyApiResponse
   */
  def submitReturnDecision(campaignId : Long, orderId : Long, returnId : Long) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
}
