//> using scala "3.3.1"
//> using lib "com.lihaoyi::cask:0.8.3"
//> using lib "com.lihaoyi::scalatags:0.12.0"
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */


// generated from apiService.mustache
package ympa_scala_cask_server.api

import _root_.ympa_scala_cask_server.model.ApiClientDataErrorResponse
import _root_.ympa_scala_cask_server.model.ApiForbiddenErrorResponse
import _root_.ympa_scala_cask_server.model.ApiLimitErrorResponse
import _root_.ympa_scala_cask_server.model.ApiNotFoundErrorResponse
import _root_.ympa_scala_cask_server.model.ApiServerErrorResponse
import _root_.ympa_scala_cask_server.model.ApiUnauthorizedErrorResponse
import _root_.ympa_scala_cask_server.model.ChangeOutletRequest
import _root_.ympa_scala_cask_server.model.CreateOutletResponse
import _root_.ympa_scala_cask_server.model.EmptyApiResponse
import _root_.ympa_scala_cask_server.model.GetOutletResponse
import _root_.ympa_scala_cask_server.model.GetOutletsResponse

import _root_.ympa_scala_cask_server.model.*

object OutletsService {
  def apply() : OutletsService = new OutletsService {
        override def createOutlet(campaignId : Long, changeOutletRequest : ChangeOutletRequest) : CreateOutletResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def deleteOutlet(campaignId : Long, outletId : Long) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def getOutlet(campaignId : Long, outletId : Long) : GetOutletResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def getOutlets(campaignId : Long, pageToken : Option[String], regionId : Option[Long], shopOutletCode : Option[String], regionId2 : Option[Long]) : GetOutletsResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def updateOutlet(campaignId : Long, outletId : Long, changeOutletRequest : ChangeOutletRequest) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
  }
}

/**
 * The Outlets business-logic
 */
trait OutletsService {
  /** Создание точки продаж
   * 
   * @return CreateOutletResponse
   */
  def createOutlet(campaignId : Long, changeOutletRequest : ChangeOutletRequest) : CreateOutletResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Удаление точки продаж
   * 
   * @return EmptyApiResponse
   */
  def deleteOutlet(campaignId : Long, outletId : Long) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Информация об одной точке продаж
   * 
   * @return GetOutletResponse
   */
  def getOutlet(campaignId : Long, outletId : Long) : GetOutletResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Информация о нескольких точках продаж
   * 
   * @return GetOutletsResponse
   */
  def getOutlets(campaignId : Long, pageToken : Option[String], regionId : Option[Long], shopOutletCode : Option[String], regionId2 : Option[Long]) : GetOutletsResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Изменение информации о точке продаж
   * 
   * @return EmptyApiResponse
   */
  def updateOutlet(campaignId : Long, outletId : Long, changeOutletRequest : ChangeOutletRequest) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
}
