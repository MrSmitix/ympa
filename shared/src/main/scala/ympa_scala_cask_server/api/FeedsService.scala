//> using scala "3.3.1"
//> using lib "com.lihaoyi::cask:0.8.3"
//> using lib "com.lihaoyi::scalatags:0.12.0"
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */


// generated from apiService.mustache
package ympa_scala_cask_server.api

import _root_.ympa_scala_cask_server.model.ApiClientDataErrorResponse
import _root_.ympa_scala_cask_server.model.ApiForbiddenErrorResponse
import _root_.ympa_scala_cask_server.model.ApiLimitErrorResponse
import _root_.ympa_scala_cask_server.model.ApiLockedErrorResponse
import _root_.ympa_scala_cask_server.model.ApiNotFoundErrorResponse
import _root_.ympa_scala_cask_server.model.ApiServerErrorResponse
import _root_.ympa_scala_cask_server.model.ApiUnauthorizedErrorResponse
import _root_.ympa_scala_cask_server.model.EmptyApiResponse
import _root_.ympa_scala_cask_server.model.FeedIndexLogsStatusType
import _root_.ympa_scala_cask_server.model.GetFeedIndexLogsResponse
import _root_.ympa_scala_cask_server.model.GetFeedResponse
import _root_.ympa_scala_cask_server.model.GetFeedsResponse
import _root_.java.time.OffsetDateTime
import _root_.ympa_scala_cask_server.model.SetFeedParamsRequest

import _root_.ympa_scala_cask_server.model.*

object FeedsService {
  def apply() : FeedsService = new FeedsService {
        override def getFeed(campaignId : Long, feedId : Long) : GetFeedResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def getFeedIndexLogs(campaignId : Long, feedId : Long, limit : Option[Int], publishedTimeFrom : Option[OffsetDateTime], publishedTimeTo : Option[OffsetDateTime], status : Option[FeedIndexLogsStatusType]) : GetFeedIndexLogsResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def getFeeds(campaignId : Long) : GetFeedsResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def refreshFeed(campaignId : Long, feedId : Long) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def setFeedParams(campaignId : Long, feedId : Long, setFeedParamsRequest : SetFeedParamsRequest) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiLockedErrorResponse | ApiServerErrorResponse = ???
  }
}

/**
 * The Feeds business-logic
 */
trait FeedsService {
  /** Информация о прайс-листе
   * 
   * @return GetFeedResponse
   */
  def getFeed(campaignId : Long, feedId : Long) : GetFeedResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Отчет по индексации прайс-листа
   * 
   * @return GetFeedIndexLogsResponse
   */
  def getFeedIndexLogs(campaignId : Long, feedId : Long, limit : Option[Int], publishedTimeFrom : Option[OffsetDateTime], publishedTimeTo : Option[OffsetDateTime], status : Option[FeedIndexLogsStatusType]) : GetFeedIndexLogsResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Список прайс-листов магазина
   * 
   * @return GetFeedsResponse
   */
  def getFeeds(campaignId : Long) : GetFeedsResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Сообщить, что прайс-лист обновился
   * 
   * @return EmptyApiResponse
   */
  def refreshFeed(campaignId : Long, feedId : Long) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Изменение параметров прайс-листа
   * 
   * @return EmptyApiResponse
   */
  def setFeedParams(campaignId : Long, feedId : Long, setFeedParamsRequest : SetFeedParamsRequest) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiLockedErrorResponse | ApiServerErrorResponse
}
