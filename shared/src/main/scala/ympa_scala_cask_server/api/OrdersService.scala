//> using scala "3.3.1"
//> using lib "com.lihaoyi::cask:0.8.3"
//> using lib "com.lihaoyi::scalatags:0.12.0"
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */


// generated from apiService.mustache
package ympa_scala_cask_server.api

import _root_.ympa_scala_cask_server.model.AcceptOrderCancellationRequest
import _root_.ympa_scala_cask_server.model.ApiClientDataErrorResponse
import _root_.ympa_scala_cask_server.model.ApiForbiddenErrorResponse
import _root_.ympa_scala_cask_server.model.ApiLimitErrorResponse
import _root_.ympa_scala_cask_server.model.ApiNotFoundErrorResponse
import _root_.ympa_scala_cask_server.model.ApiServerErrorResponse
import _root_.ympa_scala_cask_server.model.ApiUnauthorizedErrorResponse
import _root_.ympa_scala_cask_server.model.EmptyApiResponse
import _root_.ympa_scala_cask_server.model.GetOrderResponse
import _root_.ympa_scala_cask_server.model.GetOrdersResponse
import _root_.java.time.LocalDate
import _root_.java.time.OffsetDateTime
import _root_.ympa_scala_cask_server.model.OrderBuyerType
import _root_.ympa_scala_cask_server.model.OrderDeliveryDispatchType
import _root_.ympa_scala_cask_server.model.OrderStatusType
import _root_.ympa_scala_cask_server.model.OrderSubstatusType
import _root_.ympa_scala_cask_server.model.ProvideOrderDigitalCodesRequest
import _root_.ympa_scala_cask_server.model.ProvideOrderItemIdentifiersRequest
import _root_.ympa_scala_cask_server.model.ProvideOrderItemIdentifiersResponse
import _root_.ympa_scala_cask_server.model.SetOrderBoxLayoutRequest
import _root_.ympa_scala_cask_server.model.SetOrderBoxLayoutResponse
import _root_.ympa_scala_cask_server.model.SetOrderShipmentBoxesRequest
import _root_.ympa_scala_cask_server.model.SetOrderShipmentBoxesResponse
import _root_.ympa_scala_cask_server.model.UpdateOrderItemRequest
import _root_.ympa_scala_cask_server.model.UpdateOrderStatusRequest
import _root_.ympa_scala_cask_server.model.UpdateOrderStatusResponse
import _root_.ympa_scala_cask_server.model.UpdateOrderStatusesRequest
import _root_.ympa_scala_cask_server.model.UpdateOrderStatusesResponse

import _root_.ympa_scala_cask_server.model.*

object OrdersService {
  def apply() : OrdersService = new OrdersService {
        override def acceptOrderCancellation(campaignId : Long, orderId : Long, acceptOrderCancellationRequest : AcceptOrderCancellationRequest) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def getOrder(campaignId : Long, orderId : Long) : GetOrderResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def getOrders(campaignId : Long, orderIds : Seq[Long], status : Set[OrderStatusType], substatus : Set[OrderSubstatusType], fromDate : Option[LocalDate], toDate : Option[LocalDate], supplierShipmentDateFrom : Option[LocalDate], supplierShipmentDateTo : Option[LocalDate], updatedAtFrom : Option[OffsetDateTime], updatedAtTo : Option[OffsetDateTime], dispatchType : Option[OrderDeliveryDispatchType], fake : Option[Boolean], hasCis : Option[Boolean], onlyWaitingForCancellationApprove : Option[Boolean], onlyEstimatedDelivery : Option[Boolean], buyerType : Option[OrderBuyerType], page : Option[Int], pageSize : Option[Int], pageToken : Option[String], limit : Option[Int]) : GetOrdersResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def provideOrderDigitalCodes(campaignId : Long, orderId : Long, provideOrderDigitalCodesRequest : ProvideOrderDigitalCodesRequest) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def provideOrderItemIdentifiers(campaignId : Long, orderId : Long, provideOrderItemIdentifiersRequest : ProvideOrderItemIdentifiersRequest) : ProvideOrderItemIdentifiersResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def setOrderBoxLayout(campaignId : Long, orderId : Long, setOrderBoxLayoutRequest : SetOrderBoxLayoutRequest) : SetOrderBoxLayoutResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def setOrderShipmentBoxes(campaignId : Long, orderId : Long, shipmentId : Long, setOrderShipmentBoxesRequest : SetOrderShipmentBoxesRequest) : SetOrderShipmentBoxesResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def updateOrderItems(campaignId : Long, orderId : Long, updateOrderItemRequest : UpdateOrderItemRequest) : ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def updateOrderStatus(campaignId : Long, orderId : Long, updateOrderStatusRequest : UpdateOrderStatusRequest) : UpdateOrderStatusResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def updateOrderStatuses(campaignId : Long, updateOrderStatusesRequest : UpdateOrderStatusesRequest) : UpdateOrderStatusesResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
  }
}

/**
 * The Orders business-logic
 */
trait OrdersService {
  /** Отмена заказа покупателем
   * 
   * @return EmptyApiResponse
   */
  def acceptOrderCancellation(campaignId : Long, orderId : Long, acceptOrderCancellationRequest : AcceptOrderCancellationRequest) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Информация об одном заказе
   * 
   * @return GetOrderResponse
   */
  def getOrder(campaignId : Long, orderId : Long) : GetOrderResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Информация о нескольких заказах
   * 
   * @return GetOrdersResponse
   */
  def getOrders(campaignId : Long, orderIds : Seq[Long], status : Set[OrderStatusType], substatus : Set[OrderSubstatusType], fromDate : Option[LocalDate], toDate : Option[LocalDate], supplierShipmentDateFrom : Option[LocalDate], supplierShipmentDateTo : Option[LocalDate], updatedAtFrom : Option[OffsetDateTime], updatedAtTo : Option[OffsetDateTime], dispatchType : Option[OrderDeliveryDispatchType], fake : Option[Boolean], hasCis : Option[Boolean], onlyWaitingForCancellationApprove : Option[Boolean], onlyEstimatedDelivery : Option[Boolean], buyerType : Option[OrderBuyerType], page : Option[Int], pageSize : Option[Int], pageToken : Option[String], limit : Option[Int]) : GetOrdersResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Передача ключей цифровых товаров
   * 
   * @return EmptyApiResponse
   */
  def provideOrderDigitalCodes(campaignId : Long, orderId : Long, provideOrderDigitalCodesRequest : ProvideOrderDigitalCodesRequest) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Передача кодов маркировки единиц товара
   * 
   * @return ProvideOrderItemIdentifiersResponse
   */
  def provideOrderItemIdentifiers(campaignId : Long, orderId : Long, provideOrderItemIdentifiersRequest : ProvideOrderItemIdentifiersRequest) : ProvideOrderItemIdentifiersResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Подготовка заказа
   * 
   * @return SetOrderBoxLayoutResponse
   */
  def setOrderBoxLayout(campaignId : Long, orderId : Long, setOrderBoxLayoutRequest : SetOrderBoxLayoutRequest) : SetOrderBoxLayoutResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Передача количества грузовых мест в заказе
   * 
   * @return SetOrderShipmentBoxesResponse
   */
  def setOrderShipmentBoxes(campaignId : Long, orderId : Long, shipmentId : Long, setOrderShipmentBoxesRequest : SetOrderShipmentBoxesRequest) : SetOrderShipmentBoxesResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Удаление товара из заказа или уменьшение числа единиц
   * 
   * @return 
   */
  def updateOrderItems(campaignId : Long, orderId : Long, updateOrderItemRequest : UpdateOrderItemRequest) : ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Изменение статуса одного заказа
   * 
   * @return UpdateOrderStatusResponse
   */
  def updateOrderStatus(campaignId : Long, orderId : Long, updateOrderStatusRequest : UpdateOrderStatusRequest) : UpdateOrderStatusResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Изменение статусов нескольких заказов
   * 
   * @return UpdateOrderStatusesResponse
   */
  def updateOrderStatuses(campaignId : Long, updateOrderStatusesRequest : UpdateOrderStatusesRequest) : UpdateOrderStatusesResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
}
