//> using scala "3.3.1"
//> using lib "com.lihaoyi::cask:0.8.3"
//> using lib "com.lihaoyi::scalatags:0.12.0"
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */


// generated from apiService.mustache
package ympa_scala_cask_server.api

import _root_.ympa_scala_cask_server.model.ApiClientDataErrorResponse
import _root_.ympa_scala_cask_server.model.ApiForbiddenErrorResponse
import _root_.ympa_scala_cask_server.model.ApiLimitErrorResponse
import _root_.ympa_scala_cask_server.model.ApiNotFoundErrorResponse
import _root_.ympa_scala_cask_server.model.ApiServerErrorResponse
import _root_.ympa_scala_cask_server.model.ApiUnauthorizedErrorResponse
import _root_.ympa_scala_cask_server.model.CreateChatRequest
import _root_.ympa_scala_cask_server.model.CreateChatResponse
import _root_.ympa_scala_cask_server.model.EmptyApiResponse
import _root_.java.io.File
import _root_.ympa_scala_cask_server.model.GetChatHistoryRequest
import _root_.ympa_scala_cask_server.model.GetChatHistoryResponse
import _root_.ympa_scala_cask_server.model.GetChatsRequest
import _root_.ympa_scala_cask_server.model.GetChatsResponse
import _root_.ympa_scala_cask_server.model.SendMessageToChatRequest

import _root_.ympa_scala_cask_server.model.*

object ChatsService {
  def apply() : ChatsService = new ChatsService {
        override def createChat(businessId : Long, createChatRequest : CreateChatRequest) : CreateChatResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def getChatHistory(businessId : Long, chatId : Long, getChatHistoryRequest : GetChatHistoryRequest, pageToken : Option[String], limit : Option[Int]) : GetChatHistoryResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def getChats(businessId : Long, getChatsRequest : GetChatsRequest, pageToken : Option[String], limit : Option[Int]) : GetChatsResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def sendFileToChat(businessId : Long, chatId : Long, file : File) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
        override def sendMessageToChat(businessId : Long, chatId : Long, sendMessageToChatRequest : SendMessageToChatRequest) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse = ???
  }
}

/**
 * The Chats business-logic
 */
trait ChatsService {
  /** Создание нового чата с покупателем
   * 
   * @return CreateChatResponse
   */
  def createChat(businessId : Long, createChatRequest : CreateChatRequest) : CreateChatResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Получение истории сообщений в чате
   * 
   * @return GetChatHistoryResponse
   */
  def getChatHistory(businessId : Long, chatId : Long, getChatHistoryRequest : GetChatHistoryRequest, pageToken : Option[String], limit : Option[Int]) : GetChatHistoryResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Получение доступных чатов
   * 
   * @return GetChatsResponse
   */
  def getChats(businessId : Long, getChatsRequest : GetChatsRequest, pageToken : Option[String], limit : Option[Int]) : GetChatsResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Отправка файла в чат
   * 
   * @return EmptyApiResponse
   */
  def sendFileToChat(businessId : Long, chatId : Long, file : File) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
  /** Отправка сообщения в чат
   * 
   * @return EmptyApiResponse
   */
  def sendMessageToChat(businessId : Long, chatId : Long, sendMessageToChatRequest : SendMessageToChatRequest) : EmptyApiResponse | ApiClientDataErrorResponse | ApiUnauthorizedErrorResponse | ApiForbiddenErrorResponse | ApiNotFoundErrorResponse | ApiLimitErrorResponse | ApiServerErrorResponse
}
