{
  "openapi" : "3.0.3",
  "info" : {
    "description" : "API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.\n\nВ числе возможностей интеграции:\n\n* управление каталогом товаров и витриной,\n\n* обработка заказов,\n\n* изменение настроек магазина,\n\n* получение отчетов.\n",
    "license" : {
      "name" : "BSD 3-Clause",
      "url" : "https://opensource.org/license/bsd-3-clause/"
    },
    "title" : "Партнерский API Маркета",
    "version" : "LATEST"
  },
  "externalDocs" : {
    "description" : "Документация API",
    "url" : "https://yandex.ru/dev/market/partner-api/doc/"
  },
  "servers" : [ {
    "url" : "https://api.partner.market.yandex.ru"
  } ],
  "security" : [ {
    "OAuth" : [ "market:partner-api" ]
  } ],
  "paths" : {
    "/businesses/{businessId}/settings" : {
      "post" : {
        "description" : "Возвращает информацию о настройках кабинета, идентификатор которого указан в запросе.\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n",
        "operationId" : "getBusinessSettings",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBusinessSettingsResponse"
                }
              }
            },
            "description" : "Настройки кабинета."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Настройки кабинета",
        "tags" : [ "businesses", "dbs", "fbs", "fby", "express" ],
        "x-auth-scopes" : [ "all-methods", "settings", "finance-and-accounting", "offers-and-cards", "offers-and-cards:read-only", "pricing", "pricing:read-only", "inventory-and-orders", "inventory-and-orders:read-only", "promotion", "promotion:read-only", "communication" ]
      }
    },
    "/campaigns" : {
      "get" : {
        "description" : "Возвращает список магазинов, к которым имеет доступ пользователь — владелец авторизационного токена, использованного в запросе. Для агентских пользователей список состоит из подагентских магазинов.\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n",
        "operationId" : "getCampaigns",
        "parameters" : [ {
          "description" : "Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром `page_size`.\n\n`page_number` игнорируется, если задан `page_token`, `limit` или `offset`.\n",
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "default" : 1,
            "format" : "int32",
            "maximum" : 10000,
            "type" : "integer"
          }
        }, {
          "description" : "Размер страницы.\n\nИспользуется вместе с параметром `page_number`.\n\n`page_size` игнорируется, если задан `page_token`, `limit` или `offset`.\n",
          "in" : "query",
          "name" : "pageSize",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetCampaignsResponse"
                }
              }
            },
            "description" : "Магазины пользователя."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Список магазинов пользователя",
        "tags" : [ "campaigns", "dbs", "express", "fbs", "fby" ],
        "x-auth-scopes" : [ "all-methods", "settings", "finance-and-accounting", "offers-and-cards", "offers-and-cards:read-only", "pricing", "pricing:read-only", "inventory-and-orders", "inventory-and-orders:read-only", "promotion", "promotion:read-only", "communication" ]
      }
    },
    "/campaigns/{campaignId}" : {
      "get" : {
        "description" : "Возвращает информацию о магазине.\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n",
        "operationId" : "getCampaign",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetCampaignResponse"
                }
              }
            },
            "description" : "Информация о магазине."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация о магазине",
        "tags" : [ "campaigns", "dbs", "express", "fbs", "fby" ],
        "x-auth-scopes" : [ "all-methods", "settings", "finance-and-accounting", "offers-and-cards", "offers-and-cards:read-only", "pricing", "pricing:read-only", "inventory-and-orders", "inventory-and-orders:read-only", "promotion", "promotion:read-only", "communication" ]
      }
    },
    "/campaigns/{campaignId}/logins" : {
      "get" : {
        "description" : "Возвращает список логинов, у которых есть доступ к магазину.\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n",
        "operationId" : "getCampaignLogins",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetCampaignLoginsResponse"
                }
              }
            },
            "description" : "Список логинов, связанных с магазином."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Логины, связанные с магазином",
        "tags" : [ "campaigns", "dbs", "express", "fbs", "fby" ],
        "x-auth-scopes" : [ "all-methods", "settings", "finance-and-accounting", "offers-and-cards", "offers-and-cards:read-only", "pricing", "pricing:read-only", "inventory-and-orders", "inventory-and-orders:read-only", "promotion", "promotion:read-only", "communication" ]
      }
    },
    "/campaigns/{campaignId}/settings" : {
      "get" : {
        "description" : "Возвращает информацию о настройках магазина, идентификатор которого указан в запросе.\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n",
        "operationId" : "getCampaignSettings",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetCampaignSettingsResponse"
                }
              }
            },
            "description" : "Настройки магазина."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Настройки магазина",
        "tags" : [ "campaigns", "dbs", "fbs", "express", "fby" ],
        "x-auth-scopes" : [ "all-methods", "settings", "finance-and-accounting", "offers-and-cards", "offers-and-cards:read-only", "pricing", "pricing:read-only", "inventory-and-orders", "inventory-and-orders:read-only", "promotion", "promotion:read-only", "communication" ]
      }
    },
    "/campaigns/by_login/{login}" : {
      "get" : {
        "description" : "Возвращает список магазинов, к которым у пользователя с указанным логином есть доступ.\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "getCampaignsByLogin",
        "parameters" : [ {
          "description" : "Логин пользователя.",
          "in" : "path",
          "name" : "login",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром `page_size`.\n\n`page_number` игнорируется, если задан `page_token`, `limit` или `offset`.\n",
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "default" : 1,
            "format" : "int32",
            "maximum" : 10000,
            "type" : "integer"
          }
        }, {
          "description" : "Размер страницы.\n\nИспользуется вместе с параметром `page_number`.\n\n`page_size` игнорируется, если задан `page_token`, `limit` или `offset`.\n",
          "in" : "query",
          "name" : "pageSize",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetCampaignsResponse"
                }
              }
            },
            "description" : "Информация о магазинах."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Магазины, доступные логину",
        "tags" : [ "campaigns", "dbs", "express", "fbs", "fby" ],
        "x-auth-scopes" : [ "all-methods", "settings", "finance-and-accounting", "offers-and-cards", "offers-and-cards:read-only", "pricing", "pricing:read-only", "inventory-and-orders", "inventory-and-orders:read-only", "promotion", "promotion:read-only", "communication" ]
      }
    },
    "/campaigns/{campaignId}/region" : {
      "get" : {
        "deprecated" : true,
        "description" : "{% note warning \"\" %}\n\nЭтот метод устарел. Вместо него используйте [GET campaigns/{campaignId}/settings](../../reference/campaigns/getCampaignSettings.md).\n\n{% endnote %}\n\nВозвращает регион, в котором находится магазин.\n|**⚙️ Лимит:** 5 000 запросов в час|\n|-|\n",
        "operationId" : "getCampaignRegion",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetCampaignRegionResponse"
                }
              }
            },
            "description" : "Возвращает регион, в котором находится магазин.\n\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Регион магазина",
        "tags" : [ "campaigns", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "settings" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}" : {
      "get" : {
        "description" : "Возвращает информацию о заказе.\n\nПолучить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n",
        "operationId" : "getOrder",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetOrderResponse"
                }
              }
            },
            "description" : "Информация о заказе."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация об одном заказе",
        "tags" : [ "orders", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders", "inventory-and-orders:read-only", "communication", "finance-and-accounting" ]
      }
    },
    "/campaigns/{campaignId}/orders" : {
      "get" : {
        "description" : "Возвращает информацию о заказах. Запрос можно использовать, чтобы узнать, нет ли новых заказов.\n\nДоступна фильтрация по нескольким характеристикам заказов:\n\n* дате оформления;\n\n* статусу;\n\n* идентификаторам заказов;\n\n* этапу обработки или причине отмены;\n\n* типу (настоящий или тестовый);\n\n* дате отгрузки в службу доставки;\n\n* дате и времени обновления заказа.\n\nИнформация о заказах, доставленных или отмененных больше 30 дней назад, не возвращается. Ее можно получить с помощью запроса информации об отдельном заказе [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) (если у вас есть идентификатор заказа) или запроса отчета по заказам [POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md).\n\nМаксимальный диапазон дат за один запрос к ресурсу — 30 дней. Максимальное количество заказов в выходных данных запроса — 50.\n\nРезультаты возвращаются постранично. Для навигации по страницам используйте параметры `page_token` и `limit`.\n\nПолучить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n",
        "operationId" : "getOrders",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Фильтрация заказов по идентификаторам.\n<br><br>\n⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым.\n",
          "in" : "query",
          "name" : "orderIds",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "maxItems" : 50,
              "minItems" : 1,
              "type" : "integer"
            },
            "type" : "array"
          }
        }, {
          "description" : "Статус заказа:\n\n* `CANCELLED` — заказ отменен.\n\n* `DELIVERED` — заказ получен покупателем.\n\n* `DELIVERY` — заказ передан в службу доставки.\n\n* `PICKUP` — заказ доставлен в пункт самовывоза.\n\n* `PROCESSING` — заказ находится в обработке.\n\n* `UNPAID` — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).\n\nТакже могут возвращаться другие значения. Обрабатывать их не требуется.\n",
          "in" : "query",
          "name" : "status",
          "required" : false,
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/OrderStatusType"
            },
            "type" : "array",
            "uniqueItems" : true
          }
        }, {
          "description" : "Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).\n\nВозможные значения для заказа в статусе `PROCESSING`:\n\n* `STARTED` — заказ подтвержден, его можно начать обрабатывать.\n* `READY_TO_SHIP` — заказ собран и готов к отправке.\n* `SHIPPED` — заказ передан службе доставки.\n\nВозможные значения для заказа в статусе `CANCELLED`:\n\n* `DELIVERY_SERVICE_UNDELIVERED` — служба доставки не смогла доставить заказ.\n\n* `PROCESSING_EXPIRED` — значение более не используется.\n\n* `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.\n\n* `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.\n\n* `RESERVATION_FAILED` — Маркет не может продолжить дальнейшую обработку заказа.\n\n* `SHOP_FAILED` — магазин не может выполнить заказ.\n\n* `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.\n\n* `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.\n\n* `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.\n\n* `USER_REFUSED_PRODUCT` — покупателю не подошел товар.\n\n* `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.\n\n* `USER_UNREACHABLE` — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:\n\n  * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;\n  * перерыв между первым и третьим звонком не менее 90 минут;\n  * соединение не короче 5 секунд.\n\n  Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400.\n* `USER_WANTS_TO_CHANGE_DELIVERY_DATE` — покупатель хочет получить заказ в другой день.\n* `CANCELLED_COURIER_NOT_FOUND` — не удалось найти курьера.\n\nТакже могут возвращаться другие значения. Обрабатывать их не требуется.\n",
          "in" : "query",
          "name" : "substatus",
          "required" : false,
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/OrderSubstatusType"
            },
            "type" : "array",
            "uniqueItems" : true
          }
        }, {
          "description" : "Начальная дата для фильтрации заказов по дате оформления.\n\nФормат даты: `ДД-ММ-ГГГГ`.\n\nМежду начальной и конечной датой (параметр `toDate`) должно быть не больше 30 дней.\n\nЗначение по умолчанию: 30 дней назад от текущей даты.\n",
          "in" : "query",
          "name" : "fromDate",
          "required" : false,
          "schema" : {
            "format" : "date",
            "type" : "string"
          }
        }, {
          "description" : "Конечная дата для фильтрации заказов по дате оформления.\n\nПоказываются заказы, созданные до 00:00 указанного дня.\n\nФормат даты: `ДД-ММ-ГГГГ`.\n\nМежду начальной (параметр `fromDate`) и конечной датой должно быть не больше 30 дней.\n\nЗначение по умолчанию: текущая дата.\n",
          "in" : "query",
          "name" : "toDate",
          "required" : false,
          "schema" : {
            "format" : "date",
            "type" : "string"
          }
        }, {
          "description" : "Начальная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).\n\nФормат даты: `ДД-ММ-ГГГГ`.\n\nМежду начальной и конечной датой (параметр `supplierShipmentDateTo`) должно быть не больше 30 дней.\n\nНачальная дата включается в интервал для фильтрации.\n",
          "in" : "query",
          "name" : "supplierShipmentDateFrom",
          "required" : false,
          "schema" : {
            "format" : "date",
            "type" : "string"
          }
        }, {
          "description" : "Конечная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).\n\nФормат даты: `ДД-ММ-ГГГГ`.\n\nМежду начальной (параметр `supplierShipmentDateFrom`) и конечной датой должно быть не больше 30 дней.\n\nКонечная дата не включается в интервал для фильтрации.\n",
          "in" : "query",
          "name" : "supplierShipmentDateTo",
          "required" : false,
          "schema" : {
            "format" : "date",
            "type" : "string"
          }
        }, {
          "description" : "Начальная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.\n\nМежду начальной и конечной датой (параметр `updatedAtTo`) должно быть не больше 30 дней.\n\nНачальная дата включается в интервал для фильтрации.\n",
          "in" : "query",
          "name" : "updatedAtFrom",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          }
        }, {
          "description" : "Конечная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.\n\nМежду начальной (параметр `updatedAtFrom`) и конечной датой должно быть не больше 30 дней.\n\nКонечная дата не включается в интервал для фильтрации.\n",
          "in" : "query",
          "name" : "updatedAtTo",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          }
        }, {
          "description" : "Способ отгрузки",
          "in" : "query",
          "name" : "dispatchType",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/OrderDeliveryDispatchType"
          }
        }, {
          "description" : "Фильтрация заказов по типам:\n\n* `false` — настоящий заказ покупателя.\n\n* `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета.\n",
          "in" : "query",
          "name" : "fake",
          "required" : false,
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации [в системе «Честный ЗНАК»](https://честныйзнак.рф/):\n\n* `true` — да.\n\n* `false` — нет.\n\nТакие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям.\n",
          "in" : "query",
          "name" : "hasCis",
          "required" : false,
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "**Только для модели DBS**\n\nФильтрация заказов по наличию запросов покупателей на отмену.\n\nПри значение `true` возвращаются только заказы, которые находятся в статусе `DELIVERY` или `PICKUP` и которые пользователи решили отменить.\n\nЧтобы подтвердить или отклонить отмену, отправьте запрос [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation).\n",
          "in" : "query",
          "name" : "onlyWaitingForCancellationApprove",
          "required" : false,
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Фильтрация заказов с долгой доставкой (31-60 дней) по подтвержденной дате доставки:\n\n* `true` — возвращаются только заказы с неподтвержденной датой доставки.\n* `false` — фильтрация не применяется.\n",
          "in" : "query",
          "name" : "onlyEstimatedDelivery",
          "required" : false,
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Фильтрация заказов по типу покупателя.\n",
          "in" : "query",
          "name" : "buyerType",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/OrderBuyerType"
          }
        }, {
          "description" : "Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром `page_size`.\n\n`page_number` игнорируется, если задан `page_token`, `limit` или `offset`.\n",
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "default" : 1,
            "format" : "int32",
            "maximum" : 10000,
            "type" : "integer"
          }
        }, {
          "description" : "Размер страницы.\n\nИспользуется вместе с параметром `page_number`.\n\n`page_size` игнорируется, если задан `page_token`, `limit` или `offset`.\n",
          "in" : "query",
          "name" : "pageSize",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetOrdersResponse"
                }
              }
            },
            "description" : "Информация о заказах."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация о нескольких заказах",
        "tags" : [ "orders", "fbs", "dbs", "fby", "express" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders", "inventory-and-orders:read-only", "communication", "finance-and-accounting" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/identifiers" : {
      "put" : {
        "description" : "{% note warning \"Этот запрос только для DBS\" %}\n\nЕсли вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).\n\n{% endnote %}\n\nПередает Маркету коды маркировки для единиц товара в указанном заказе.\n\nПринимаются коды следующих типов:\n\n* Коды «Честного знака».\n* УИН для ювелирных изделий.\n* РНПТ и ГТД для импортных прослеживаемых товаров.\n\n{% note warning %}\n\nПрежде чем работать с этим методом, обязательно прочтите [статью о работе с маркируемыми товарами](https://yandex.ru/support/marketplace/orders/cz.html).\n\n{% endnote %}\n\nДля каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n",
        "operationId" : "provideOrderItemIdentifiers",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProvideOrderItemIdentifiersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvideOrderItemIdentifiersResponse"
                }
              }
            },
            "description" : "Ответ 200 обозначает, что коды успешно записались. Ответ содержит краткие сведения о промаркированных товарах."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Передача кодов маркировки единиц товара",
        "tags" : [ "orders", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/items" : {
      "put" : {
        "description" : "{% note warning \"Этот запрос только для DBS\" %}\n\nЕсли вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).\n\n{% endnote %}\n\nИзменяет состав заказа, если позволяет выбранная служба доставки, в случаях:\n\n* покупатель уменьшил количество товара;\n* магазин не может поставить все товары в заказе.\n\nДля этого заказ должен находится в статусе `\"status\": \"PROCESSING\"` этапа обработки `\"substatus\": \"STARTED\"`. После передачи статуса `\"substatus\": \"READY_TO_SHIP\"` изменить состав невозможно.\n\nЕсли одинаковых товаров несколько, для уменьшения количества передайте обновленное значение в атрибуте `count` параметра `item`.\n\nЧтобы полностью удалить товар из заказа:\n\n* передайте значение `0`; или\n* не передавайте параметр `item`.\n\nНельзя удалить или уменьшить количество товара, если он:\n\n* добавлен по акции;\n* составляет 99% стоимости заказа;\n* единственный товар в заказе.\n\nЕсли необходимо удалить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.\n\n{% note info \"Увеличить заказ нельзя\" %}\n\nС помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.\n\n{% endnote %}\n\n**Возврат денег покупателю**\n\nЕсли покупатель оплатил товар при оформлении, Маркет вернет ему деньги за удаленные из заказа товары в течение двух дней:\n\n* при оплате банковской картой — с момента, когда магазин переведет заказ в статус `SHIPPED`;\n\n* при оплате через Apple Pay или Google Pay — с момента, когда магазин удалит товар из заказа.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n",
        "operationId" : "updateOrderItems",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateOrderItemRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Маркет успешно обработал ваш запрос. Выходные данные не ожидаются."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Удаление товара из заказа или уменьшение числа единиц",
        "tags" : [ "orders", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/status" : {
      "put" : {
        "description" : "Изменяет статус заказа. Возможные изменения статусов:\n\n* Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`.\n* Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.\n* Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n",
        "operationId" : "updateOrderStatus",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateOrderStatusRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateOrderStatusResponse"
                }
              }
            },
            "description" : "В случае успешного изменения статуса заказа возвращается обновленная информация о заказе."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Изменение статуса одного заказа",
        "tags" : [ "orders", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/orders/status-update" : {
      "post" : {
        "description" : "Изменяет статусы нескольких заказов.\n\nВозможные изменения статусов:\n\n* Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"`и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`.\n* Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.\n* Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.\n\nМаксимальное количество заказов, у которых можно изменить статус в одном запросе, — 30.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n",
        "operationId" : "updateOrderStatuses",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateOrderStatusesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateOrderStatusesResponse"
                }
              }
            },
            "description" : "Возвращается информация об обновленных статусах заказов."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Изменение статусов нескольких заказов",
        "tags" : [ "orders", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes" : {
      "put" : {
        "description" : "{% note warning \"Этот запрос только для DBS\" %}\n\nЕсли вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).\n\n{% endnote %}\n\nОтгружаемый Маркету заказ может не влезть в одну коробку или упаковку — в этом случае получается, что он занимает несколько грузовых мест.\n\nКоличество грузовых мест нужно обязательно передавать Маркету, если оно не равно 1. Это делается перед переводом его в статус **Готов к отгрузке**. Подробно о том, что в какой момент нужно передавать, рассказано в [пошаговой инструкции](../../step-by-step/fbs.md).\n\nМетод устроен немного нестандартно: количество задается длиной массива пустых объектов.\n\nРаньше метод требовал передачи большего количества данных. Запросы, оформленные по старому образцу, работают, но лучше делать по-новому.\n\n{% cut \"Как было раньше\" %}\n\nСтруктура тела PUT-запроса:\n\n```\n{\n  \"boxes\":\n  [\n    {\n      \"fulfilmentId\": \"{string}\",\n      \"weight\": {int64},\n      \"width\": {int64},\n      \"height\": {int64},\n      \"depth\": {int64},\n      \"items\":\n      [\n        {\n          \"id\": {int64},\n          \"count\": {int32}\n        },\n        ...\n      ]\n    },\n    ...\n  ]\n}\n```\n| **Параметр**  | **Тип**  | **Значение**  |\n| ----------- | ----------- | ----------- |\n| `boxes`       |           | Список грузовых мест.       |\n\n**Параметры, вложенные в `boxes`**\n| **Параметр**  | **Тип**  | **Значение**  |\n| ----------- | ----------- | ----------- |\n| `fulfilmentId`       |  String   | Идентификатор грузового места в информационной системе магазина. Сформируйте идентификатор по шаблону: `номер заказа на Маркете-номер грузового места`. Например, `7206821‑1, 7206821‑2` и т. д. |\n| `weight`       | Int64        | Масса брутто грузового места (суммарная масса упаковки и содержимого) в граммах. |\n| `width`       | Int64   | Ширина грузового места в сантиметрах.       |\n| `height`       | Int64   | Высота грузового места в сантиметрах.       |\n| `depth`       | Int64   | Глубина грузового места в сантиметрах.        |\n| `items`       | Int64   | Список товаров в грузовом месте.       |\n\n**Параметры, вложенные в `items`**\n| **Параметр**  | **Тип**  | **Значение**  |\n| ----------- | ----------- | ----------- |\n| `id`       | Int64     | Идентификатор товара в рамках заказа.   |\n| `count`    | Int32     | Количество единиц товара в грузовом месте.       |\n\n{% endcut %}\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n",
        "operationId" : "setOrderShipmentBoxes",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Параметр больше не используется. Вставьте любое число — просто чтобы получился корректный URL.\n",
          "in" : "path",
          "name" : "shipmentId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetOrderShipmentBoxesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SetOrderShipmentBoxesResponse"
                }
              }
            },
            "description" : "Имеет значение только тип ответа. Если ответ `ОК`, количество грузомест записано."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Передача количества грузовых мест в заказе",
        "tags" : [ "orders", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/cancellation/accept" : {
      "put" : {
        "description" : "Подтверждает или отклоняет запрос покупателя на отмену заказа, который передан службе доставки.\n\nПокупатель может отменить заказ в течение его обработки или доставки. Если заказ еще обрабатывается (имеет статус PROCESSING), вам не нужно подтверждать отмену заказа — он будет отменен автоматически.\n\nЕсли заказ уже передан службе доставки (принимает статус `DELIVERY` или `PICKUP`) и пользователь отменил его, вы можете предупредить службу об отмене в течение 48 часов. Если служба доставки узнала об отмене до передачи заказа покупателю, подтвердите отмену с помощью запроса [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation.md). Если заказ уже доставлен, отклоните отмену с помощью этого же запроса. Тогда у покупателя останется заказ, и деньги за него возвращаться не будут.\n\nЧтобы узнать, какие заказы были отменены в статусе `DELIVERY` или `PICKUP`, отправьте запрос [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md). В его URL добавьте входной параметр `onlyWaitingForCancellationApprove=true`. Вы также можете узнать об отмененных заказах в кабинете или через почту — на нее придет уведомление об отмене.\n\nЕсли в течение 48 часов вы не подтвердите или отклоните отмену, заказ будет отменен автоматически.\n\n|**⚙️ Лимит:** 500 запросов в час|\n|-|\n",
        "operationId" : "acceptOrderCancellation",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AcceptOrderCancellationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Ответ на отмену заказа был успешно передан."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отмена заказа покупателем",
        "tags" : [ "orders", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/deliverDigitalGoods" : {
      "post" : {
        "description" : "Передает ключи цифровых товаров, которые покупатель заказал и оплатил. После выполнения запроса Маркет отправит ему письмо с ключами и инструкциями по активации, а также переведет заказ в финальный статус `DELIVERED`.\n\nКлюч нужно передать в течение 30 минут после перехода заказа в статус `PROCESSING`.\n\nЕсли в один заказ входят несколько ключей, передавайте их все в одном запросе.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n",
        "operationId" : "provideOrderDigitalCodes",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProvideOrderDigitalCodesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Пустой ответ."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Передача ключей цифровых товаров",
        "tags" : [ "orders", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/boxes" : {
      "put" : {
        "description" : "{% note tip \"Подходит и для DBS\" %}\n\nЗапрос предназначен для работы с FBS-заказами, но вы можете использовать его для обработки DBS-заказов, если это удобно.\n\n{% endnote %}\n\nПозволяет выполнить три операции:\n\n* передать Маркету информацию о распределении товаров по коробкам;\n* передать Маркету коды маркировки для товаров;\n* удалить товар из заказа, если его не оказалось на складе.\n\nЕсли нужно что-то поправить в переданных данных, просто повторите запрос — это можно делать сколько угодно раз до перевода заказа в статус **Готов к отгрузке**. ⚠️ Если вы меняете раскладку уже после печати и расклейки ярлыков, не забудье перепечатать их и наклеить заново.\n\n## Как передать информацию о распределении товаров\n\nВ этом запросе вам нужно передать Маркету список коробок и указать, какие именно товары лежат в каждой из них. Коробки могут быть двух типов:\n\n* **Содержащие товары целиком.** Такая коробка может содержать сколько угодно единиц любых товаров.\n\n* **Содержащие часть товара.** Такие коробки содержат по одной части одного товара. Например, одна содержит внешний блок кондиционера, а другая — внутренний блок.\n\n⚠️ Одна коробка не может содержать и товары целиком, и части товаров.\n\n## Как передавать коды маркировки\n\nЕсли в заказе есть товары, подлежащие маркировке, в запросе нужно передать соответствующие уникальные коды. [Что такое маркировка?](https://yandex.ru/support/marketplace/orders/cz.html)\n\nПринимаются коды следующих типов:\n\n* Коды «Честного знака».\n* УИН для ювелирных изделий.\n* РНПТ и ГТД для импортных прослеживаемых товаров.\n\nДля каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.\n\nЕсли товар едет в нескольких коробках, код маркировки нужно передать для каждой из них.\n\n## Как удалить товар из заказа\n\nЧтобы удалить товар из заказа:\n\n1. Добавьте в запрос `allowRemove: true`.\n2. Передайте распределение по коробкам без товара, который нужно удалить.\n\n{% note warning \"Удаление нельзя отменить\" %}\n\nЭта операция необратима: покупатель сразу получит уведомление, а состав заказа изменится.\n\n{% endnote %}\n\nЧтобы удалить позицию целиком, не передавайте соответствующий `OrderBoxLayoutItemDTO`. Чтобы уменьшить количество товара, передайте уменьшенное значение в поле `fullCount`.\n\nНельзя удалить или уменьшить количество товара, если он:\n\n* добавлен по акции;\n* составляет 99% стоимости заказа;\n* единственный товар в заказе.\n\nЕсли вы не можете отгрузить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.\n\n{% note info \"Увеличить заказ нельзя\" %}\n\nС помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.\n\n{% endnote %}\n\n## Примеры\n\n{% cut \"Товар умещается в коробку\" %}\n\nВот как будет выглядеть запрос, если в одной коробке едут:\n\n  * три единицы одного товара, требующего маркировки;\n  * одна единица другого товара, не требущего маркировки.\n\n  ```json\n  {\n      \"boxes\": [\n          {\n              \"items\": [\n                  {\n                      \"id\": 123456,\n                      \"fullCount\": 3,\n                      \"instances\": [\n                          {\n                              \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"\n                          },\n                          {\n                              \"cis\": \"010304109478gftJ14545762!\\u001dhGt264\"\n                          },\n                          {\n                              \"cis\": \"010304109478fRs28323ks23!\\u001dhet201\"\n                          }\n                      ]\n                  },\n                  {\n                      \"id\": 654321,\n                      \"fullCount\": 1\n                  }\n              ]\n          }\n      ]\n  }\n  ```\n\n{% endcut %}\n\n{% cut \"Товар едет в разных коробках\" %}\n\nВот как будет выглядеть запрос, если товар едет в двух коробках:\n\n  ```json\n  {\n      \"boxes\": [\n          {\n              \"items\": [\n                  {\n                      \"id\": 123456,\n                      \"partialCount\": {\n                          \"current\": 1,\n                          \"total\": 2\n                      },\n                      \"instances\": [\n                          {\n                              \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"\n                          }\n                      ]\n                  }\n              ]\n          },\n          {\n              \"items\": [\n                  {\n                      \"id\": 123456,\n                      \"partialCount\": {\n                          \"current\": 2,\n                          \"total\": 2\n                      },\n                      \"instances\": [\n                          {\n                              \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"\n                          }\n                      ]\n                  }\n              ]\n          }\n      ]\n  }\n  ```\n\n{% endcut %}\n\n{% cut \"Одинаковые товары, где каждый едет в нескольких коробках\" %}\n\nВот как будет выглядеть запрос, если каждый из двух одинаковых товаров едет в двух коробках:\n\n  ```json\n  {\n      \"boxes\": [\n          {\n              \"items\": [\n                  {\n                      \"id\": 123456,\n                      \"partialCount\": {\n                          \"current\": 1,\n                          \"total\": 2\n                      },\n                      \"instances\": [\n                          {\n                              \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"\n                          }\n                      ]\n                  }\n              ]\n          },\n          {\n              \"items\": [\n                  {\n                      \"id\": 123456,\n                      \"partialCount\": {\n                          \"current\": 2,\n                          \"total\": 2\n                      },\n                      \"instances\": [\n                          {\n                              \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"\n                          }\n                      ]\n                  }\n              ]\n          },\n          {\n              \"items\": [\n                  {\n                      \"id\": 123456,\n                      \"partialCount\": {\n                          \"current\": 1,\n                          \"total\": 2\n                      },\n                      \"instances\": [\n                          {\n                              \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"\n                          }\n                      ]\n                  }\n              ]\n          },\n          {\n              \"items\": [\n                  {\n                      \"id\": 123456,\n                      \"partialCount\": {\n                          \"current\": 2,\n                          \"total\": 2\n                      },\n                      \"instances\": [\n                          {\n                              \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"\n                          }\n                      ]\n                  }\n              ]\n          }\n      ]\n  }\n  ```\n\n{% endcut %}\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n",
        "operationId" : "setOrderBoxLayout",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetOrderBoxLayoutRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SetOrderBoxLayoutResponse"
                }
              }
            },
            "description" : "В ответ придет переданная раскладка с идентификаторами коробок — они понадобятся для запроса ярлыков.\n"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Подготовка заказа",
        "tags" : [ "orders", "fbs", "express", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/delivery/date" : {
      "put" : {
        "description" : "Метод изменяет дату доставки заказа в статусе `PROCESSING` или `DELIVERY`. Для заказов с другими статусами дату доставки изменить нельзя.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n",
        "operationId" : "setOrderDeliveryDate",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetOrderDeliveryDateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Успешное изменение даты доставки."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Изменение даты доставки заказа",
        "tags" : [ "order-delivery", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/delivery/track" : {
      "post" : {
        "description" : "{% note warning \"Этот запрос только для DBS\" %}\n\nВы можете использовать запрос, чтобы повысить лояльность покупателей. Если они могут узнать, на каком этапе доставки находятся их заказы, доверие покупателей к вашему магазину может возрасти.\n\n{% endnote %}\n\nПередает Маркету трек‑номер, по которому покупатель может отследить посылку со своим заказом через службу доставки.\n\nПередать трек‑номер можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY` или `PICKUP`.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n",
        "operationId" : "setOrderDeliveryTrackCode",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetOrderDeliveryTrackCodeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Трек‑номер посылки и идентификатор службы доставки были успешно переданы."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Передача трек‑номера посылки",
        "tags" : [ "order-delivery", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/buyer" : {
      "get" : {
        "description" : "Возвращает информацию о покупателе по идентификатору заказа.\n\n{% note info \"\" %}\n\nЧтобы получить информацию о покупателе, который является юридическим лицом, воспользуйтесь запросом [POST campaigns/{campaignId}/orders/{orderId}/business-buyer](../../reference/order-business-information/getOrderBusinessBuyerInfo.md).\n\n{% endnote %}\n\nПолучить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY` или `PICKUP`.\n\nЕсли у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).\n\n|**⚙️ Лимит:** 3 000 запросов в час|\n|-|\n",
        "operationId" : "getOrderBuyerInfo",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetOrderBuyerInfoResponse"
                }
              }
            },
            "description" : "Информация о покупателе."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация о покупателе — физическом лице",
        "tags" : [ "order-delivery", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders", "inventory-and-orders:read-only" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/verifyEac" : {
      "put" : {
        "description" : "Отправляет Маркету код подтверждения для его проверки.\n\nКод подтверждает передачу заказа или невыкупа:\n\n* курьеру — курьер должен назвать магазину код;\n* магазину — магазин называет код курьеру.\n\nЕсли магазин получает невыкупленный заказ, то ему нужно назвать курьеру код из кабинета или приложения.\n\nЕсли у магазина настроена работа с кодами подтверждения, в запросах [POST order/status](../../pushapi/reference/postOrderStatus.md), [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md), [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md), [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) в параметре `delivery`, вложенном в `order` будет возвращаться параметр `eacType` с типом `Enum` — тип кода подтверждения для передачи заказа.\n\nВозможные значения: `MERCHANT_TO_COURIER` — магазин называет код курьеру, `COURIER_TO_MERCHANT` — курьер называет код магазину.\n\nПараметр `eacType` возвращается при статусах заказа `COURIER_FOUND`, `COURIER_ARRIVED_TO_SENDER` и `DELIVERY_SERVICE_UNDELIVERED`. Если заказ в других статусах, параметр может отсутствовать.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n",
        "operationId" : "verifyOrderEac",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VerifyOrderEacRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VerifyOrderEacResponse"
                }
              }
            },
            "description" : "Проверка кода выполнена успешно."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Передача кода подтверждения",
        "tags" : [ "order-delivery", "express" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/delivery/storage-limit" : {
      "put" : {
        "description" : "Продлевает срок хранения заказа в пункте выдачи продавца.\n\nЗаказ должен быть в статусе `PICKUP`. Продлить срок можно только один раз, не больше чем на 30 дней.\n\nНовый срок хранения можно получить в параметре `outletStorageLimitDate` запроса [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n",
        "operationId" : "updateOrderStorageLimit",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateOrderStorageLimitRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Пустой ответ."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Продление срока хранения заказа",
        "tags" : [ "order-delivery", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label" : {
      "get" : {
        "description" : "Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n",
        "operationId" : "generateOrderLabel",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор грузоместа.",
          "in" : "path",
          "name" : "shipmentId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор коробки.",
          "in" : "path",
          "name" : "boxId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.",
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/PageFormatType"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/pdf" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "PDF‑файл с ярлыками для коробки. Файл содержит одну страницу с ярлыком."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Готовый ярлык‑наклейка для коробки в заказе",
        "tags" : [ "order-labels", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/delivery/labels" : {
      "get" : {
        "description" : "Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).\n\nНа вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n",
        "operationId" : "generateOrderLabels",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.",
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/PageFormatType"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/pdf" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "PDF‑файл с ярлыками на все коробки."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Готовые ярлыки‑наклейки на все коробки в одном заказе",
        "tags" : [ "order-labels", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/delivery/labels/data" : {
      "get" : {
        "description" : "Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n",
        "operationId" : "getOrderLabelsData",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetOrderLabelsDataResponse"
                }
              }
            },
            "description" : "Информация для печати ярлыков."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Данные для самостоятельного изготовления ярлыков",
        "tags" : [ "order-labels", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/business-buyer" : {
      "post" : {
        "description" : "Возвращает информацию о покупателе по идентификатору заказа.\n\n{% note info \"\" %}\n\nЧтобы получить информацию о покупателе, который является физическим лицом, воспользуйтесь запросом [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).\n\n{% endnote %}\n\nПолучить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY`, `PICKUP` или `DELIVERED`.\n\nЕсли у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).\n\n|**⚙️ Лимит:** 3 000 запросов в час|\n|-|\n",
        "operationId" : "getOrderBusinessBuyerInfo",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBusinessBuyerInfoResponse"
                }
              }
            },
            "description" : "Информация о покупателе."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация о покупателе — юридическом лице",
        "tags" : [ "order-business-information", "fbs", "fby", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders", "inventory-and-orders:read-only" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/documents" : {
      "post" : {
        "description" : "Возвращает информацию о документах по идентификатору заказа.\n\nПолучить данные можно после того, как заказ перейдет в статус `DELIVERED`.\n\nЕсли у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).\n\n|**⚙️ Лимит:** 3 000 запросов в час|\n|-|\n",
        "operationId" : "getOrderBusinessDocumentsInfo",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBusinessDocumentsInfoResponse"
                }
              }
            },
            "description" : "Информация о документах."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация о документах",
        "tags" : [ "order-business-information", "fbs", "fby", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders", "inventory-and-orders:read-only" ]
      }
    },
    "/campaigns/{campaignId}/returns" : {
      "get" : {
        "description" : "Получает список невыкупов и возвратов.\n\nЧтобы получить информацию по одному возврату или невыкупу, выполните запрос [GET campaigns/{campaignId}/orders/{orderId}/returns/{returnId}](../../reference/orders/getReturn.md).\n\n|**⚙️ Лимит:** 10 000 запросов в час|\n|-|\n",
        "operationId" : "getReturns",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификаторы заказов — для фильтрации результатов.\n\nНесколько идентификаторов перечисляются через запятую без пробела. Максимальное количество идентификаторов — 50.\n",
          "in" : "query",
          "name" : "orderIds",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : 123543,
              "format" : "int64",
              "type" : "integer"
            },
            "maxItems" : 50,
            "type" : "array"
          }
        }, {
          "description" : "Статусы возвратов или невыкупов — для фильтрации результатов.\n\nНесколько статусов перечисляются через запятую.\n",
          "example" : "STARTED_BY_USER,WAITING_FOR_DECISION",
          "in" : "query",
          "name" : "statuses",
          "required" : false,
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/RefundStatusType"
            },
            "type" : "array"
          }
        }, {
          "description" : "Тип заказа для фильтрации:\n\n* `RETURN` — возврат.\n\n* `UNREDEEMED` — невыкуп.\n\nЕсли не указывать, в ответе будут и возвраты, и невыкупы.\n",
          "in" : "query",
          "name" : "type",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ReturnType"
          }
        }, {
          "description" : "Начальная дата для фильтрации возвратов или невыкупов по дате обновления.\n\nФормат: `ГГГГ-ММ-ДД`.\n",
          "example" : "2022-10-31",
          "in" : "query",
          "name" : "fromDate",
          "required" : false,
          "schema" : {
            "format" : "date",
            "type" : "string"
          }
        }, {
          "description" : "Конечная дата для фильтрации возвратов или невыкупов по дате обновления.\n\nФормат: `ГГГГ-ММ-ДД`.\n",
          "example" : "2022-11-30",
          "in" : "query",
          "name" : "toDate",
          "required" : false,
          "schema" : {
            "format" : "date",
            "type" : "string"
          }
        }, {
          "deprecated" : true,
          "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Вместо него используйте `fromDate`.\n\n{% endnote %}\n\nНачальная дата для фильтрации возвратов или невыкупов по дате обновления.\n",
          "example" : "2022-10-31",
          "in" : "query",
          "name" : "from_date",
          "required" : false,
          "schema" : {
            "format" : "date",
            "type" : "string"
          }
        }, {
          "deprecated" : true,
          "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Вместо него используйте `toDate`.\n\n{% endnote %}\n\nКонечная дата для фильтрации возвратов или невыкупов по дате обновления.\n",
          "example" : "2022-11-30",
          "in" : "query",
          "name" : "to_date",
          "required" : false,
          "schema" : {
            "format" : "date",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetReturnsResponse"
                }
              }
            },
            "description" : "Постраничные возвраты партнера."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Список невыкупов и возвратов",
        "tags" : [ "returns", "fbs", "dbs", "express", "fby" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders", "inventory-and-orders:read-only" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}" : {
      "get" : {
        "description" : "Получает информацию по одному невыкупу или возврату.\n\n|**⚙️ Лимит:** 10 000 запросов в час|\n|-|\n",
        "operationId" : "getReturn",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор возврата.",
          "in" : "path",
          "name" : "returnId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetReturnResponse"
                }
              }
            },
            "description" : "Детали возврата."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация о невыкупе или возврате",
        "tags" : [ "returns", "fbs", "dbs", "express", "fby" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders", "inventory-and-orders:read-only" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision" : {
      "post" : {
        "description" : "Выбирает решение по возврату от покупателя. После этого для подтверждения решения нужно выполнить запрос [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit](../../reference/orders/submitReturnDecision.md).\n\n|**⚙️ Лимит:** 10 000 запросов в час|\n|-|\n",
        "operationId" : "setReturnDecision",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор возврата.",
          "in" : "path",
          "name" : "returnId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetReturnDecisionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Детали возврата."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Принятие или изменение решения по возврату",
        "tags" : [ "returns", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit" : {
      "post" : {
        "description" : "Подтверждает выбранное решение по возврату, отправленное в запросе [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision](../../reference/orders/setReturnDecision.md).\n\n|**⚙️ Лимит:** 10 000 запросов в час|\n|-|\n",
        "operationId" : "submitReturnDecision",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор возврата.",
          "in" : "path",
          "name" : "returnId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Статус выполнения операции."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Подтверждение решения по возврату",
        "tags" : [ "returns", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application" : {
      "get" : {
        "description" : "Загружает заявление покупателя на возврат товара.\n\n|**⚙️ Лимит:** 10 000 запросов в час|\n|-|\n",
        "operationId" : "getReturnApplication",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор возврата.",
          "in" : "path",
          "name" : "returnId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "Заявление на возврат."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Получение заявления на возврат",
        "tags" : [ "returns", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders", "inventory-and-orders:read-only" ]
      }
    },
    "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}" : {
      "get" : {
        "description" : "Получает фотографии, которые покупатель приложил к заявлению на возврат товара.\n\n|**⚙️ Лимит:** 10 000 запросов в час|\n|-|\n",
        "operationId" : "getReturnPhoto",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор заказа.",
          "in" : "path",
          "name" : "orderId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор возврата.",
          "in" : "path",
          "name" : "returnId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор товара в возврате.",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Хеш ссылки изображения для загрузки.",
          "in" : "path",
          "name" : "imageHash",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "Фотография возврата."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Получение фотографии возврата",
        "tags" : [ "returns", "fbs", "dbs", "express", "fby" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders", "inventory-and-orders:read-only" ]
      }
    },
    "/regions" : {
      "get" : {
        "description" : "Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.\n\nЕсли найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.\n\nДля методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).\n\nОбъем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.\n\n|**⚙️ Лимит:** 50 000 запросов в час|\n|-|\n",
        "operationId" : "searchRegionsByName",
        "parameters" : [ {
          "description" : "Название региона.\n\nВажно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, `Москва`.\n",
          "in" : "query",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetRegionsResponse"
                }
              }
            },
            "description" : "Список найденных регионов."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Поиск регионов по их имени",
        "tags" : [ "regions", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "settings", "finance-and-accounting", "offers-and-cards", "offers-and-cards:read-only", "pricing", "pricing:read-only", "inventory-and-orders", "inventory-and-orders:read-only", "promotion", "promotion:read-only", "communication" ]
      }
    },
    "/regions/{regionId}" : {
      "get" : {
        "description" : "Возвращает информацию о регионе.\n\nДля методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).\n\nОбъем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.\n\n|**⚙️ Лимит:** 50 000 запросов в час|\n|-|\n",
        "operationId" : "searchRegionsById",
        "parameters" : [ {
          "description" : "Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n",
          "in" : "path",
          "name" : "regionId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetRegionsResponse"
                }
              }
            },
            "description" : "Найденный регион."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация о регионе",
        "tags" : [ "regions", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "settings", "finance-and-accounting", "offers-and-cards", "offers-and-cards:read-only", "pricing", "pricing:read-only", "inventory-and-orders", "inventory-and-orders:read-only", "promotion", "promotion:read-only", "communication" ]
      }
    },
    "/regions/{regionId}/children" : {
      "get" : {
        "description" : "Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.\n\nДля методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).\n\nОбъем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.\n\n|**⚙️ Лимит:** 50 000 запросов в час|\n|-|\n",
        "operationId" : "searchRegionChildren",
        "parameters" : [ {
          "description" : "Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n",
          "in" : "path",
          "name" : "regionId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром `page_size`.\n\n`page_number` игнорируется, если задан `page_token`, `limit` или `offset`.\n",
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "default" : 1,
            "format" : "int32",
            "maximum" : 10000,
            "type" : "integer"
          }
        }, {
          "description" : "Размер страницы.\n\nИспользуется вместе с параметром `page_number`.\n\n`page_size` игнорируется, если задан `page_token`, `limit` или `offset`.\n",
          "in" : "query",
          "name" : "pageSize",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetRegionWithChildrenResponse"
                }
              }
            },
            "description" : "Регионы, являющиеся дочерними к указанному в запросе."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация о дочерних регионах",
        "tags" : [ "regions", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "settings", "finance-and-accounting", "offers-and-cards", "offers-and-cards:read-only", "pricing", "pricing:read-only", "inventory-and-orders", "inventory-and-orders:read-only", "promotion", "promotion:read-only", "communication" ]
      }
    },
    "/campaigns/{campaignId}/shipments/reception-transfer-act" : {
      "get" : {
        "description" : "Запрос подтверждает ближайшую отгрузку и возвращает акт приема-передачи в формате PDF.\n\n{% note warning \"Экспресс‑доставка\" %}\n\nЕсли ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам [Яндекс Go](https://go.yandex/), подготавливать акт приема‑передачи не нужно.\n\n{% endnote %}\n\nВ акт входят собранные и готовые к отправке заказы, которые отгружаются в сортировочный центр или пункт приема или курьерам Маркета.\n\nПри формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:\n\n{% cut \"Данные, из которых Маркет формирует акт\" %}\n\n| **Данные в акте**\t                                  | **Описание**                                                                                                                                                                                                                                                         |\n| --------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Отправитель\t                                        | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         |\n| Исполнитель                                         | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                |\n| № отправления в системе заказчика                   | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              |\n| № отправления в системе исполнителя (субподрядчика) | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             |\n| Объявленная ценность                                | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       |\n| Стоимость всех товаров в заказе                     | Стоимость всех заказанных товаров.                                                                                                                                                                                                                                   |\n| Вес                                                 | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). |\n| Количество мест                                     | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |\n\n{% endcut %}\n\nОстальные поля нужно заполнить самостоятельно в распечатанном акте.\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "downloadShipmentReceptionTransferAct",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор склада.",
          "example" : 123123,
          "in" : "query",
          "name" : "warehouse_id",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/pdf" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "Акт приема-передачи в формате PDF."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Подтверждение ближайшей отгрузки и получение акта приема-передачи для нее",
        "tags" : [ "shipments", "fbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}" : {
      "get" : {
        "description" : "Возвращает информацию об отгрузке по ее идентификатору.\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "getShipment",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор отгрузки.",
          "in" : "path",
          "name" : "shipmentId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Возвращать ли отмененные заказы.\n\nЗначение по умолчанию — `true`. Если возвращать отмененные заказы не нужно, передайте значение `false`.\n",
          "in" : "query",
          "name" : "cancelledOrders",
          "required" : false,
          "schema" : {
            "default" : true,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetShipmentResponse"
                }
              }
            },
            "description" : "Найденная отгрузка."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Получение информации об одной отгрузке",
        "tags" : [ "shipments", "fbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders", "inventory-and-orders:read-only" ]
      }
    },
    "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/info" : {
      "get" : {
        "description" : "Возвращает информацию о возможности печати ярлыков-наклеек для заказов в отгрузке.\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "getShipmentOrdersInfo",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор отгрузки.",
          "in" : "path",
          "name" : "shipmentId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetShipmentOrdersInfoResponse"
                }
              }
            },
            "description" : "Информация по годным/негодным для печати ярлыков заказам в отгрузке."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Получение информации о возможности печати ярлыков (FBS)",
        "tags" : [ "shipments", "fbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders", "inventory-and-orders:read-only" ]
      }
    },
    "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/confirm" : {
      "post" : {
        "description" : "Подтверждает отгрузку товаров в сортировочный центр или пункт приема заказов.\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "confirmShipment",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор отгрузки.",
          "in" : "path",
          "name" : "shipmentId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfirmShipmentRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Пустой ответ."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Подтверждение отгрузки",
        "tags" : [ "shipments", "fbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/act" : {
      "get" : {
        "description" : "{% note warning \"Экспресс‑доставка\" %}\n\nЕсли ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам Яндекс Go, подготавливать акт приема‑передачи не нужно.\n\n{% endnote %}\n\nЗапрос формирует акт приема-передачи заказов, входящих в отгрузку, и возвращает акт в формате PDF. В акте содержатся собранные и готовые к отправке заказы.\n\nПри формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:\n\n{% cut \"Данные, из которых Маркет формирует акт\" %}\n\n| **Данные в акте**                                         | **Описание**                                                                                                                                                                                                                                                         |\n| --------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Дата                                                      | Дата запроса.                                                                                                                                                                                                                                                        |\n| Отправитель                                               | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         |\n| Исполнитель                                               | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                |\n| № отправления в системе заказчика                         | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              |\n| № отправления в системе исполнителя (субподрядчика)       | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             |\n| Объявленная ценность                                      | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       |\n| Вес                                                       | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). |\n| Количество мест                                           | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |\n\n{% endcut %}\n\nОстальные поля нужно заполнить самостоятельно в распечатанном акте.\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "downloadShipmentAct",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор отгрузки.",
          "in" : "path",
          "name" : "shipmentId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/pdf" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "Акт приема-передачи для отгрузки в формате PDF."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Получение акта приема-передачи",
        "tags" : [ "shipments", "fbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/inbound-act" : {
      "get" : {
        "description" : "Возвращает фактический акт приема-передачи для заданной отгрузки.\n\nТакой акт становится доступен спустя несколько часов после завершения отгрузки. Он может понадобиться, если после отгрузки обнаружатся расхождения.\n\n|**⚙️ Лимит:** 200 запросов в час|\n|-|\n",
        "operationId" : "downloadShipmentInboundAct",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор отгрузки.",
          "in" : "path",
          "name" : "shipmentId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/pdf" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "Акт в формате PDF."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Получение фактического акта приема-передачи",
        "tags" : [ "shipments", "fbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/transportation-waybill" : {
      "get" : {
        "description" : "Возвращает транспортную накладную для заданной отгрузки.\n\nТранспортная накладная понадобится, если вы отгружаете товары непосредственно со своего склада. [Подробно об этом способе отгрузки](https://yandex.ru/support/marketplace/orders/fbs/settings/shipment.html#at-your-warehouse)\n\n|**⚙️ Лимит:** 200 запросов в час|\n|-|\n",
        "operationId" : "downloadShipmentTransportationWaybill",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор отгрузки.",
          "in" : "path",
          "name" : "shipmentId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.ms-excel" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "Транспортная накладная в формате XLSX."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Получение транспортной накладной",
        "tags" : [ "shipments", "fbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/discrepancy-act" : {
      "get" : {
        "description" : "Возвращает акт расхождений для заданной отгрузки.\n|**⚙️ Лимит:** 200 запросов в час|\n|-|\n",
        "operationId" : "downloadShipmentDiscrepancyAct",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор отгрузки.",
          "in" : "path",
          "name" : "shipmentId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/vnd.ms-excel" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "Акт расхождений в формате XLSX."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Получение акта расхождений",
        "tags" : [ "shipments", "fbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets" : {
      "put" : {
        "description" : "Передает Маркету количество коробов или палет в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).\n\nПолучить PDF-файл с ярлыками для упаковок можно с помощью запроса [GET campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels](../../reference/shipments/downloadShipmentPalletLabels.md).\n|**⚙️ Лимит:** 200 запросов в час|\n|-|\n",
        "operationId" : "setShipmentPalletsCount",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор отгрузки.",
          "in" : "path",
          "name" : "shipmentId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetShipmentPalletsCountRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Имеет значение только тип ответа. Если ответ `ОК`, количество упаковок записано."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Передача количества упаковок в отгрузке",
        "tags" : [ "shipments", "fbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels" : {
      "get" : {
        "description" : "PDF-файл с ярлыками на каждый короб или палету в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).\n\nРаспечатайте по несколько копий каждого ярлыка: на одну тару нужно наклеить минимум 2 ярлыка с разных сторон.\n\nКоличество упаковок в отгрузке задается в запросе [PUT campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets](../../reference/shipments/setShipmentPalletsCount.md).\n|**⚙️ Лимит:** 200 запросов в час|\n|-|\n",
        "operationId" : "downloadShipmentPalletLabels",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор отгрузки.",
          "in" : "path",
          "name" : "shipmentId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Формат страниц PDF-файла с ярлыками:\n\n* `A4` — по 16 ярлыков на странице.\n* `A8` — по одному ярлыку на странице.\n",
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ShipmentPalletLabelPageFormatType"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/pdf" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "PDF‑файл с ярлыками на все упаковки в отгрузке."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Ярлыки для доверительной приемки (FBS)",
        "tags" : [ "shipments", "fbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/campaigns/{campaignId}/first-mile/shipments" : {
      "put" : {
        "description" : "Возвращает информацию об отгрузках по заданным параметрам:\n\n* дате;\n* статусу;\n* идентификаторам заказов.\n\nРезультаты возвращаются постранично.\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "searchShipments",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchShipmentsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchShipmentsResponse"
                }
              }
            },
            "description" : "Найденные отгрузки."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Получение информации о нескольких отгрузках",
        "tags" : [ "shipments", "fbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders", "inventory-and-orders:read-only" ]
      }
    },
    "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/transfer" : {
      "post" : {
        "description" : "Переносит указанные заказы из указанной отгрузки в следующую отгрузку. [Что такое отгрузка?](https://yandex.ru/support/marketplace/orders/fbs/process.html#ship)\n\nИспользуйте этот запрос, если не успеваете собрать и упаковать заказы вовремя.\n\n{% note warning \"Такие переносы снижают индекс качества магазина\" %}\n\nЭтот запрос предназначен для исключительных случаев. Если вы будете переносить заказы слишком часто, магазин столкнется с ограничениями. [Что за ограничения?](https://yandex.ru/support/marketplace/quality/score/fbs.html)\n\n{% endnote %}\n\nПереносить заказы можно, если до формирования отгрузки осталось больше получаса.\n\nПеренос происходит не мгновенно, а занимает несколько минут.\n\n|**⚙️ Лимит:** 200 запросов в час|\n|-|\n",
        "operationId" : "transferOrdersFromShipment",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор отгрузки.",
          "in" : "path",
          "name" : "shipmentId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TransferOrdersFromShipmentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Запрос на перенос заказов проверен и принят, и они будут перенесены спустя несколько минут."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Перенос заказов в следующую отгрузку",
        "tags" : [ "shipments", "fbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/businesses/{businessId}/offer-mappings/delete" : {
      "post" : {
        "description" : "Удаляет товары из каталога.\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе|\n|-|\n",
        "operationId" : "deleteOffers",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeleteOffersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteOffersResponse"
                }
              }
            },
            "description" : "Если удалось удалить не все товары, с ответом 200 вернется список тех, что были в запросе, но остались в магазине."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLockedErrorResponse"
                }
              }
            },
            "description" : "К ресурсу нельзя применить указанный метод."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Удаление товаров из каталога",
        "tags" : [ "business-offer-mappings", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards" ]
      }
    },
    "/businesses/{businessId}/offer-mappings" : {
      "post" : {
        "description" : "Возвращает список товаров в каталоге, их категории на Маркете и характеристики каждого товара.\n\nМожно использовать тремя способами:\n* задать список интересующих SKU;\n* задать фильтр — в этом случае результаты возвращаются постранично;\n* не передавать тело запроса, чтобы получить список всех товаров в каталоге.\n\n|**⚙️ Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе|\n|-|\n",
        "operationId" : "getOfferMappings",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetOfferMappingsRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetOfferMappingsResponse"
                }
              }
            },
            "description" : "Информация о товарах в каталоге."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация о товарах в каталоге",
        "tags" : [ "business-offer-mappings", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only" ]
      }
    },
    "/businesses/{businessId}/offer-mappings/update" : {
      "post" : {
        "description" : "Добавляет товары в каталог, передает их категории на Маркете и характеристики, необходимые для этих категории. Также редактирует информацию об уже имеющихся товарах.\n\nСписок категорий Маркета можно получить с помощью запроса [POST categories/tree](../../reference/categories/getCategoriesTree.md), а характеристики товаров по категориям с помощью [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).\n\nЧтобы **добавить новый товар**, передайте его с новым идентификатором, который раньше никогда не использовался в каталоге. Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой. Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**SKU на Маркете**) в поле `marketSKU`.\n\nДля **новых товаров** обязательно укажите параметры: `offerId`, `name`, `marketCategoryId` или `category`, `pictures`, `vendor`, `description`.\n\nЧтобы **отредактировать информацию о товаре**, передайте новые данные, указав в `offerId` соответствующий **ваш SKU**. Поля, в которых ничего не меняется, можно не передавать.\n\nЧтобы **удалить характеристики**, которые заданы в параметрах с типом `string`, передайте пустое значение.\n\nПараметр `offerId` должен быть **уникальным** для всех товаров, которые вы передаете.\n\n{% note warning \"Правила использования SKU\" %}\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n{% endnote %}\n\n{% note info \"Данные в каталоге обновляются не мгновенно\" %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе|\n|-|\n",
        "operationId" : "updateOfferMappings",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateOfferMappingsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateOfferMappingsResponse"
                }
              }
            },
            "description" : "Все обязательные поля товаров заполнены, поэтому новые товары и внесенные изменения сохранены в каталоге.\n"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLockedErrorResponse"
                }
              }
            },
            "description" : "К ресурсу нельзя применить указанный метод."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Добавление товаров в каталог и изменение информации о них",
        "tags" : [ "business-offer-mappings", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards" ]
      }
    },
    "/businesses/{businessId}/offer-mappings/suggestions" : {
      "post" : {
        "description" : "Возвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.\n\nПользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточки по предоставленным вами данным.\n\n**Как пользоваться запросом**\n\n1. Передайте Маркету список товаров, которые нужно проверить.\n2. В ответ вы получите список SKU на Маркете с расшифровкой: названием, идентификатором модели, категорией.\n3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида `https://market.yandex.ru/product/<marketModelId>?sku=<marketSku>`.\n4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать `marketSKU`, который ему подходит по вашему мнению.\n\n{% note info \"𝓠 Как определить `marketSku` товара, найденного на Маркете?\" %}\n\n𝓐 Он есть в адресе страницы товара — расположен после `sku=`.\n\nНапример, `https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016`\n\n{% endnote %}\n\n|**⚙️ Лимит:** 100 000 товаров в час|\n|-|\n",
        "operationId" : "getSuggestedOfferMappings",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetSuggestedOfferMappingsRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetSuggestedOfferMappingsResponse"
                }
              }
            },
            "description" : "Подобранные карточки на Маркете.\n\nПо результатам проверки товара полученная через этот запрос карточка может быть заменена на другую.\n"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Просмотр карточек на Маркете, которые подходят вашим товарам",
        "tags" : [ "business-offer-mappings", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only" ]
      }
    },
    "/businesses/{businessId}/offer-mappings/archive" : {
      "post" : {
        "description" : "Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.\n\n{% note warning \"В архив нельзя отправить товар, который хранится на складе Маркета\" %}\n\nВначале такой товар нужно распродать или вывезти.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе|\n|-|\n",
        "operationId" : "addOffersToArchive",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddOffersToArchiveRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddOffersToArchiveResponse"
                }
              }
            },
            "description" : "Если некоторые товары добавить в архив не удалось, в ответе 200 будет их список.\n\nСписок успешно добавленных товаров не возвращается.\n"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLockedErrorResponse"
                }
              }
            },
            "description" : "К ресурсу нельзя применить указанный метод."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Добавление товаров в архив",
        "tags" : [ "business-offer-mappings", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards" ]
      }
    },
    "/businesses/{businessId}/offer-mappings/unarchive" : {
      "post" : {
        "description" : "Восстанавливает товары из архива.\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе|\n|-|\n",
        "operationId" : "deleteOffersFromArchive",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeleteOffersFromArchiveRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteOffersFromArchiveResponse"
                }
              }
            },
            "description" : "Если некоторые товары восстановить из архива не удалось, в ответе 200 будет их список.\n\nСписок успешно восстановленных товаров не возвращается.\n"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLockedErrorResponse"
                }
              }
            },
            "description" : "К ресурсу нельзя применить указанный метод."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Удаление товаров из архива",
        "tags" : [ "business-offer-mappings", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards" ]
      }
    },
    "/campaigns/{campaignId}/offer-mapping-entries" : {
      "get" : {
        "deprecated" : true,
        "description" : "{% note warning \"\" %}\n\nЭтот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).\n\n{% endnote %}\n\nДля каждого товара, который вы размещаете на Маркете, возвращается информация о карточках Маркета, к которым привязан этот товар:\n\n* Идентификатор текущей карточки (marketSku), карточки, которая проходит модерацию и последней отклоненной карточки.\n* Описание товара, которое указано на карточке Маркета. Например, размер упаковки и вес товара.\n\nРезультаты возвращаются постранично. Выходные данные содержат идентификатор следующей страницы.\n\n{% note info %}\n\nКоличество товаров в каталоге магазина считается по данным за последние семь дней (не включая сегодня).\n\n{% endnote %}\n\n|**⚙️ Лимит:** рассчитывается по [формуле](*rule)|\n|-|\n\n[//]: <> (rule: суточный лимит товаров — количество товаров в каталоге магазина * 25)\n",
        "operationId" : "getOfferMappingEntries",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор товара в каталоге.",
          "in" : "query",
          "name" : "offer_id",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Ваш SKU товара.\n\nПараметр может быть указан несколько раз, например:\n\n```\n...shop_sku=123&shop_sku=129&shop_sku=141...\n```\n\nВ запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.\n",
          "in" : "query",
          "name" : "shop_sku",
          "required" : false,
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "type" : "array"
          }
        }, {
          "description" : "Тип маппинга.",
          "in" : "query",
          "name" : "mapping_kind",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/OfferMappingKindType"
          }
        }, {
          "description" : "Фильтрация по статусу публикации товара:\n\n* `READY` — товар прошел модерацию.\n* `IN_WORK` — товар проходит модерацию.\n* `NEED_CONTENT` — для товара без SKU на Маркете marketSku нужно найти карточку самостоятельно или создать ее.\n* `NEED_INFO` — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара.\n* `REJECTED` — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары.\n* `SUSPENDED` — товар не прошел модерацию, так как Маркет пока не размещает подобные товары.\n* `OTHER` — товар не прошел модерацию по другой причине.\n\nМожно указать несколько статусов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:\n\n```\n...status=READY,IN_WORK...\n...status=READY&status=IN_WORK...\n```\n\nВ запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке.\n",
          "in" : "query",
          "name" : "status",
          "required" : false,
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/OfferProcessingStatusType"
            },
            "type" : "array"
          }
        }, {
          "description" : "Фильтрация по планам поставок товара:\n\n* `ACTIVE` — поставки будут.\n* `INACTIVE` — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять.\n* `DELISTED` — архив: товар закончился на складе, и его поставок больше не будет.\n\nМожно указать несколько значений в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:\n\n```\n...availability=INACTIVE,DELISTED...\n...availability=INACTIVE&availability=DELISTED...\n```\n\nВ запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.\n",
          "in" : "query",
          "name" : "availability",
          "required" : false,
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/OfferAvailabilityStatusType"
            },
            "type" : "array"
          }
        }, {
          "description" : "Фильтрация по идентификатору категории на Маркете.\n\nЧтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).\n\nМожно указать несколько идентификаторов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:\n\n```\n...category_id=14727164,14382343...\n...category_id=14727164&category_id=14382343...\n```\n\nВ запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.\n",
          "in" : "query",
          "name" : "category_id",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "integer"
            },
            "type" : "array"
          }
        }, {
          "description" : "Фильтрация по бренду товара.\n\nМожно указать несколько брендов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:\n\n```\n...vendor=Aqua%20Minerale,Borjomi...\n...vendor=Aqua%20Minerale&vendor=Borjomi...\n```\n\nЧтобы товар попал в результаты фильтрации, его бренд должен точно совпадать с одним из указанных в запросе. Например, если указан бренд Schwarzkopf, то в результатах не будет товаров Schwarzkopf Professional.\n\nЕсли в названии бренда есть символы, которые не входят в таблицу ASCII (в том числе кириллические символы), используйте для них URL-кодирование. Например, пробел — %20, апостроф «'» — %27 и т. д. Подробнее см. в разделе [Кодирование URL русскоязычной Википедии](https://ru.wikipedia.org/wiki/URL#Кодирование_URL).\n\nВ запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке.\n",
          "in" : "query",
          "name" : "vendor",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetOfferMappingEntriesResponse"
                }
              }
            },
            "description" : "Информация о товарах в каталоге."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Список товаров в каталоге",
        "tags" : [ "offer-mappings", "fby", "fbs", "express", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only" ]
      }
    },
    "/campaigns/{campaignId}/offer-mapping-entries/updates" : {
      "post" : {
        "deprecated" : true,
        "description" : "{% note warning \"\" %}\n\nЭтот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).\n\n{% endnote %}\n\nДобавляет товары, указанные в запросе, в ваш каталог товаров и редактирует уже имеющиеся товары.\n\nИнформацию о товарах нужно передать в теле POST-запроса.\n\nУ каждого товара должен быть ваш SKU — уникальный код, который вы используете для идентификации товара:\n\n* Чтобы добавить в каталог новый товар, укажите в параметре `shopSku` ваш SKU, которого еще нет в каталоге.\n* Чтобы отредактировать товар из каталога, укажите в параметре `shopSku` ваш SKU этого товара в каталоге.\n\nВ обоих случаях в запросе нужно передать полное описание товара, даже если вы хотите изменить только несколько характеристик.\n\nЕсли вы знаете, какой карточке товара на Маркете соответствует ваш товар, укажите ее идентификатор (SKU на Маркете) во входном параметре mapping. Получить SKU на Маркете рекомендованной карточки товара можно с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/suggestions](../../reference/offer-mappings/getSuggestedOfferMappingEntries.md) или через кабинет. Если SKU на Маркете не указан, сотрудники Маркета сами подберут или создадут подходящую карточку товара, либо у него появится статус `NEED_CONTENT` (нужно найти карточку или создать ее самостоятельно) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).\n\nПеред публикацией товары проходят модерацию. Если в одном из отправленных товаров найдена ошибка, ответ на запрос будет иметь HTTP-код 400 Bad Request, и ни один из товаров не отправится на модерацию. При этом если вы не передадите все обязательные параметры для какого‑либо товара, после модерации у него появится статус `NEED_INFO` (в описании товара не хватает информации) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).\n\nВ одном запросе можно добавить не более 500 товаров.\n\n{% note info \"Данные в каталоге обновляются не мгновенно\" %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5 000 товаров в минуту|\n|-|\n",
        "operationId" : "updateOfferMappingEntries",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateOfferMappingEntryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Статус выполнения операции."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLockedErrorResponse"
                }
              }
            },
            "description" : "К ресурсу нельзя применить указанный метод."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Добавление и редактирование товаров в каталоге",
        "tags" : [ "offer-mappings", "fby", "fbs", "express", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards" ]
      }
    },
    "/campaigns/{campaignId}/offer-mapping-entries/suggestions" : {
      "post" : {
        "deprecated" : true,
        "description" : "{% note warning \"\" %}\n\nЭтот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/suggestions](../../reference/business-assortment/getSuggestedOfferMappings.md).\n\n{% endnote %}\n\nВозвращает идентификаторы карточек товаров на Маркете, рекомендованных для ваших товаров.\n\nКаждому товару, который вы размещаете, должна соответствовать карточка товара на Маркете со своим идентификатором — SKU на Маркете. Он указывается в URL карточки товара, после «...sku=», например:\n\n##https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016…##\n\nЧтобы получить для товаров рекомендованные SKU на Маркете, передайте в теле POST-запроса как можно больше информации о них: названия, производителей, штрихкоды, цены и т. д.\n\nПолученные SKU можно передать вместе с информацией о ваших товарах с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/updates](../../reference/offer-mappings/updateOfferMappingEntries.md).\n\nВ одном запросе можно получить не более 500 рекомендаций.\n\n|**⚙️ Лимит:** 100 000 рекомендаций в час|\n|-|\n",
        "operationId" : "getSuggestedOfferMappingEntries",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetSuggestedOfferMappingEntriesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetSuggestedOfferMappingEntriesResponse"
                }
              }
            },
            "description" : "Информация о товарах в каталоге."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Рекомендованные карточки для товаров",
        "tags" : [ "offer-mappings", "fby", "fbs", "express", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only" ]
      }
    },
    "/businesses/{businessId}/offer-prices/updates" : {
      "post" : {
        "description" : "Устанавливает [базовые цены](*default-price). Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).\n\n{% note info \"Данные в каталоге обновляются не мгновенно\" %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе|\n|-|\n",
        "operationId" : "updateBusinessPrices",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateBusinessPricesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Маркет принял информацию о новых ценах."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLockedErrorResponse"
                }
              }
            },
            "description" : "К ресурсу нельзя применить указанный метод."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Установка цен на товары во всех магазинах",
        "tags" : [ "prices", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "pricing" ]
      }
    },
    "/campaigns/{campaignId}/offer-prices/updates" : {
      "post" : {
        "description" : "Устанавливает цены на товары в магазине. Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).\n\n{% note warning \"Метод только для отдельных магазинов\" %}\n\nИспользуйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.\n\nДля управления базовыми ценами используйте [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).\n\n{% endnote %}\n\n{% note info \"Данные в каталоге обновляются не мгновенно\" %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n",
        "operationId" : "updatePrices",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdatePricesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Маркет принял информацию о новых ценах."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLockedErrorResponse"
                }
              }
            },
            "description" : "К ресурсу нельзя применить указанный метод."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Установка цен на товары в конкретном магазине",
        "tags" : [ "prices", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "pricing" ]
      }
    },
    "/campaigns/{campaignId}/offer-prices" : {
      "get" : {
        "deprecated" : true,
        "description" : "{% note warning \"\" %}\n\nЭтот метод устарел. Вместо него используйте [POST campaigns/{campaignId}/offer-prices](../../reference/assortment/getPricesByOfferIds.md).\n\n{% endnote %}\n\nВозвращает список цен, установленных вами на товары любым способом: например, через партнерский API или в файле с каталогом.\n\n{% note info %}\n\nОбщее количество товаров считается по данным за последние семь дней (не включая сегодня) и не может быть выше 2 миллионов.\n\n{% endnote %}\n\nСпособы установки цен описаны [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/assortment/operations/prices.html).\n\n|**⚙️ Лимит:** ```(количество товаров партнера на витрине) * 25``` товаров в сутки|\n|-|\n",
        "operationId" : "getPrices",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "description" : "Фильтр по нахождению в архиве.",
          "in" : "query",
          "name" : "archived",
          "required" : false,
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetPricesResponse"
                }
              }
            },
            "description" : "Список всех товаров с установленными ценами."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Список цен",
        "tags" : [ "prices", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "pricing", "pricing:read-only" ]
      },
      "post" : {
        "description" : "Возвращает список цен на указанные товары в магазине.\n\n{% note warning \"Метод только для отдельных магазинов\" %}\n\nИспользуйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.\n\nДля просмотра базовых цен используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).\n\n{% endnote %}\n\n|**⚙️ Лимит:** рассчитывается по [формуле](*rule)|\n|-|\n\n[//]: <> (rule: суточный лимит товаров — количество товаров на витрине * 25)\n",
        "operationId" : "getPricesByOfferIds",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetPricesByOfferIdsRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetPricesByOfferIdsResponse"
                }
              }
            },
            "description" : "Список товаров с установленными для заданного магазина ценами."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Просмотр цен на указанные товары в магазине",
        "tags" : [ "prices", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "pricing" ]
      }
    },
    "/campaigns/{campaignId}/offer-prices/suggestions" : {
      "post" : {
        "deprecated" : true,
        "description" : "{% note warning \"\" %}\n\nЭтот метод устарел. Вместо него используйте [отчет «Цены на рынке»](../../reference/reports/generatePricesReport.md).\n\n{% endnote %}\n\n{% note warning \"\" %}\n\nЭтот метод подходит только тем магазинам, которые устанавливают цены на товары в рублях.\n\n{% endnote %}\n\nВозвращает цены для продвижения товаров, которые вы размещаете на Маркете.\n\nТовары, для которых нужно получить цены, передаются в теле POST-запроса.\n\nЦены для продвижения зависят от цен, установленных на товары другими партнерами. Если один товар поставляют несколько партнеров, на Маркете сначала продается товар с более низкой ценой. Когда закончится товар по низкой цене, начнет продаваться товар по более высокой цене.\n\nВыходные данные содержат для каждого товара несколько цен, соответствующих разным типам продвижения.\n\nУстановить цены на товары можно с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md) или другими способами: например, указать их в файле с каталогом. Также вы можете использовать стратегии для автоматической установки рекомендованных цен или минимальных цен на Маркете.\n\nПодробно об автоматическом управлении ценами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/prices.html).\n\n|**⚙️ Лимит:** 100 000 товаров в час|\n|-|\n",
        "operationId" : "getSuggestedPrices",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SuggestPricesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuggestPricesResponse"
                }
              }
            },
            "description" : "Список цен для продвижения на Маркете."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Цены для продвижения товаров",
        "tags" : [ "prices", "fby", "fbs", "express", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "pricing", "pricing:read-only" ]
      }
    },
    "/businesses/{businessId}/price-quarantine" : {
      "post" : {
        "description" : "Возвращает список товаров, которые находятся в карантине по **основной цене**. Основная цена задается в каталоге и действует во всех магазинах кабинета.\n\nПроверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).\n\n{% note info \"𝓠 Что такое карантин?\" %}\n\n𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)\n\n{% endnote %}\n\nВ запросе можно использовать фильтры.\n\nРезультаты возвращаются постранично.\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе|\n|-|\n",
        "operationId" : "getBusinessQuarantineOffers",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetQuarantineOffersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetQuarantineOffersResponse"
                }
              }
            },
            "description" : "Список товаров в карантине."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Список товаров, находящихся в карантине по цене в кабинете",
        "tags" : [ "price-quarantine", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "pricing", "pricing:read-only" ]
      }
    },
    "/businesses/{businessId}/price-quarantine/confirm" : {
      "post" : {
        "description" : "Подтверждает основную цену на товары, которые попали в карантин, и удаляет их из карантина.\n\nОсновная цена задается в каталоге и действует во всех магазинах кабинета.\n\nТовар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)\n\nЧтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе|\n|-|\n",
        "operationId" : "confirmBusinessPrices",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfirmPricesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Ответ 200 обозначает, что цены подтверждены."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLockedErrorResponse"
                }
              }
            },
            "description" : "К ресурсу нельзя применить указанный метод."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Удаление товара из карантина по цене в кабинете",
        "tags" : [ "price-quarantine", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "pricing" ]
      }
    },
    "/campaigns/{campaignId}/price-quarantine" : {
      "post" : {
        "description" : "Возвращает список товаров, которые находятся в карантине по цене, установленной в заданном магазине.\n\nПроверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).\n\n{% note info \"𝓠 Что такое карантин?\" %}\n\n𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)\n\n{% endnote %}\n\nВ запросе можно использовать фильтры.\n\nРезультаты возвращаются постранично.\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n",
        "operationId" : "getCampaignQuarantineOffers",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetQuarantineOffersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetQuarantineOffersResponse"
                }
              }
            },
            "description" : "Список товаров в карантине."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Список товаров, находящихся в карантине по цене в магазине",
        "tags" : [ "price-quarantine", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "pricing", "pricing:read-only" ]
      }
    },
    "/campaigns/{campaignId}/price-quarantine/confirm" : {
      "post" : {
        "description" : "Подтверждает в заданном магазине цену на товары, которые попали в карантин, и удаляет их из карантина.\n\nТовар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)\n\nЧтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n",
        "operationId" : "confirmCampaignPrices",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfirmPricesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Ответ 200 обозначает, что цены подтверждены."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLockedErrorResponse"
                }
              }
            },
            "description" : "К ресурсу нельзя применить указанный метод."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Удаление товара из карантина по цене в магазине",
        "tags" : [ "price-quarantine", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "pricing" ]
      }
    },
    "/campaigns/{campaignId}/hidden-offers" : {
      "get" : {
        "description" : "Возвращает список скрытых вами товаров для заданного магазина.\n\nВ списке будут товары, скрытые любым способом — по API, с помощью YML-фида, в кабинете и так далее.\n\n|**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе|\n|-|\n",
        "operationId" : "getHiddenOffers",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор скрытого предложения.\n",
          "in" : "query",
          "name" : "offer_id",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "type" : "array"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "description" : "Позиция в списке, начиная с которой возвращаются результаты ответа.\n\nИспользуется вместе с параметром `limit`.\n\nЕсли задан `offset`, параметры `page_number` и `page_size` игнорируются.\n\n`offset` игнорируется, если задан `page_token`.\n",
          "in" : "query",
          "name" : "offset",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "description" : "Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром `page_size`.\n\n`page_number` игнорируется, если задан `page_token`, `limit` или `offset`.\n",
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "default" : 1,
            "format" : "int32",
            "maximum" : 10000,
            "type" : "integer"
          }
        }, {
          "description" : "Размер страницы.\n\nИспользуется вместе с параметром `page_number`.\n\n`page_size` игнорируется, если задан `page_token`, `limit` или `offset`.\n",
          "in" : "query",
          "name" : "pageSize",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetHiddenOffersResponse"
                }
              }
            },
            "description" : "Информация о скрытых вами товарах."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация о скрытых вами товарах",
        "tags" : [ "hidden-offers", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only" ]
      },
      "post" : {
        "description" : "Скрывает товары магазина на Маркете.\n\n{% note info \"Данные в каталоге обновляются не мгновенно\" %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n",
        "operationId" : "addHiddenOffers",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddHiddenOffersRequest"
              }
            }
          },
          "description" : "Запрос на скрытие оферов.",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Настройки скрытия получены и скоро вступят в силу."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLockedErrorResponse"
                }
              }
            },
            "description" : "К ресурсу нельзя применить указанный метод."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Скрытие товаров и настройки скрытия",
        "tags" : [ "hidden-offers", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards" ]
      }
    },
    "/campaigns/{campaignId}/hidden-offers/delete" : {
      "post" : {
        "description" : "Возобновляет показ скрытых вами товаров магазина на Маркете.\n\n{% note info \"Данные в каталоге обновляются не мгновенно\" %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n",
        "operationId" : "deleteHiddenOffers",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeleteHiddenOffersRequest"
              }
            }
          },
          "description" : "Запрос на возобновление показа оферов.",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Показ товаров возобновлен."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLockedErrorResponse"
                }
              }
            },
            "description" : "К ресурсу нельзя применить указанный метод."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Возобновление показа товаров",
        "tags" : [ "hidden-offers", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards" ]
      }
    },
    "/campaigns/{campaignId}/offers/stocks" : {
      "post" : {
        "description" : "Возвращает данные об остатках товаров (для всех моделей) и об [оборачиваемости](*turnover) товаров (для модели FBY).\n\n{% note info \"По умолчанию данные по оборачивамости не возращаются\" %}\n\nЧтобы они были в ответе, передавайте `true` в поле `withTurnover`.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 100 000 товаров в минуту|\n|-|\n\n[//]: <> (turnover: Среднее количество дней, за которое товар продается. Подробно об оборачиваемости рассказано в Справке Маркета для продавцов https://yandex.ru/support/marketplace/analytics/turnover.html.)\n",
        "operationId" : "getStocks",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetWarehouseStocksRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetWarehouseStocksResponse"
                }
              }
            },
            "description" : "Остатки товаров на складах."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация об остатках и оборачиваемости",
        "tags" : [ "stocks", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only" ]
      },
      "put" : {
        "description" : "Передает данные об остатках товаров на витрине.\n\nОбязательно указывайте SKU **в точности** так, как он указан в каталоге. Например, _557722_ и _0557722_ — это два разных SKU.\n\n{% note info \"Данные в каталоге обновляются не мгновенно\" %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 100 000 товаров в минуту|\n|-|\n",
        "operationId" : "updateStocks",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateStocksRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Пустой ответ."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Передача информации об остатках",
        "tags" : [ "stocks", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards" ]
      }
    },
    "/delivery/services" : {
      "get" : {
        "description" : "Возвращает справочник служб доставки: идентификаторы и наименования.\n|**⚙️ Лимит:** 5 000 запросов в час|\n|-|\n",
        "operationId" : "getDeliveryServices",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetDeliveryServicesResponse"
                }
              }
            },
            "description" : "Информация о службах доставки."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Справочник служб доставки",
        "tags" : [ "delivery-services", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "settings", "finance-and-accounting", "offers-and-cards", "offers-and-cards:read-only", "pricing", "pricing:read-only", "inventory-and-orders", "inventory-and-orders:read-only", "promotion", "promotion:read-only", "communication" ]
      }
    },
    "/campaigns/{campaignId}/stats/orders" : {
      "post" : {
        "description" : "Возвращает информацию по заказам на Маркете, в которых есть ваши товары. С помощью нее вы можете собрать статистику по вашим заказам и узнать, например, какие из товаров чаще всего возвращаются покупателями, какие, наоборот, пользуются большим спросом, какая комиссия начисляется за заказы и т. п.\n\n{% note info \"\" %}\n\nРаньше генерация детальной информации по заказам называлась **Отчет по заказам**. Сейчас это новый отчет. [Подробнее об отчете](../../reference/reports/generateUnitedOrdersReport.md)\n\n{% endnote %}\n\nВ одном запросе можно получить информацию не более чем по 200 заказам.\n\n|**⚙️ Лимит:** 1 000 000 запросов в час|\n|-|\n",
        "operationId" : "getOrdersStats",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetOrdersStatsRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetOrdersStatsResponse"
                }
              }
            },
            "description" : "Информация по заказам."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Детальная информация по заказам",
        "tags" : [ "orders-stats", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders", "inventory-and-orders:read-only" ]
      }
    },
    "/campaigns/{campaignId}/stats/skus" : {
      "post" : {
        "description" : "Возвращает подробный отчет по товарам, которые вы разместили на Маркете. С помощью отчета вы можете узнать, например, об остатках на складе, об условиях хранения ваших товаров и т. д.\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n",
        "operationId" : "getGoodsStats",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetGoodsStatsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetGoodsStatsResponse"
                }
              }
            },
            "description" : "Отчет по товарам."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отчет по товарам",
        "tags" : [ "goods-stats", "fby", "fbs", "express", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only" ]
      }
    },
    "/reports/info/{reportId}" : {
      "get" : {
        "description" : "Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.\n\nЧтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)\n\n|**⚙️ Лимит:** 100 запросов в минуту|\n|-|\n",
        "operationId" : "getReportInfo",
        "parameters" : [ {
          "description" : "Идентификатор отчета, который вы получили после запуска генерации.\n",
          "in" : "path",
          "name" : "reportId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetReportInfoResponse"
                }
              }
            },
            "description" : "Статус генерации отчета и ссылка, если она уже есть.\n\n{% note tip %}\n\nЕсли статус генерации отчета — `FAILED` или `NO_DATA`, проверьте корректность запроса на генерацию. Например, верно ли указан идентификатор магазина, период или номер платежного поручения.\n\n{% endnote %}\n\n \n"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Получение заданного отчета",
        "tags" : [ "reports", "fby", "dbs", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "settings", "finance-and-accounting", "offers-and-cards", "offers-and-cards:read-only", "pricing", "pricing:read-only", "inventory-and-orders", "inventory-and-orders:read-only", "promotion", "promotion:read-only", "communication" ]
      }
    },
    "/reports/united-netting/generate" : {
      "post" : {
        "description" : "Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\nТип отчета зависит от того, какие поля заполнены в запросе:\n\n|**Тип отчета**           |**Какие поля нужны**                   |\n|-------------------------|---------------------------------------|\n|О платежах за период     |`dateFrom` и `dateTo`                  |\n|О платежном поручении    |`bankOrderId` и `bankOrderDateTime`    |\n\nЗаказать отчеты обоих типов одним запросом нельзя.\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "generateUnitedNettingReport",
        "parameters" : [ {
          "description" : "Формат отчета.",
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ReportFormatType"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenerateUnitedNettingReportRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateReportResponse"
                }
              }
            },
            "description" : "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отчет по платежам",
        "tags" : [ "reports", "fby", "dbs", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "finance-and-accounting" ]
      }
    },
    "/reports/united-marketplace-services/generate" : {
      "post" : {
        "description" : "Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)\n\nТип отчета зависит от того, какие поля заполнены в запросе:\n\n|**Тип отчета**               |**Какие поля нужны**             |\n|-----------------------------|---------------------------------|\n|По дате начисления услуги    |`dateFrom` и `dateTo`            |\n|По дате формирования акта    |`year` и `month`                 |\n\nЗаказать отчеты обоих типов одним запросом нельзя.\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "generateUnitedMarketplaceServicesReport",
        "parameters" : [ {
          "description" : "Формат отчета.",
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ReportFormatType"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenerateUnitedMarketplaceServicesReportRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateReportResponse"
                }
              }
            },
            "description" : "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отчет по стоимости услуг",
        "tags" : [ "reports", "fby", "dbs", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "finance-and-accounting" ]
      }
    },
    "/reports/united-orders/generate" : {
      "post" : {
        "description" : "Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)\n\n{% note info \"\" %}\n\nЭто новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)\n\n{% endnote %}\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "generateUnitedOrdersReport",
        "parameters" : [ {
          "description" : "Формат отчета.",
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ReportFormatType"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenerateUnitedOrdersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateReportResponse"
                }
              }
            },
            "description" : "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отчет по заказам",
        "tags" : [ "reports", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "finance-and-accounting", "promotion" ]
      }
    },
    "/reports/goods-realization/generate" : {
      "post" : {
        "description" : "Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "generateGoodsRealizationReport",
        "parameters" : [ {
          "description" : "Формат отчета.",
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ReportFormatType"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenerateGoodsRealizationReportRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateReportResponse"
                }
              }
            },
            "description" : "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отчет по реализации",
        "tags" : [ "reports", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "finance-and-accounting" ]
      }
    },
    "/reports/prices/generate" : {
      "post" : {
        "description" : "Запускает генерацию **отчета «Цены на рынке»**.\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "generatePricesReport",
        "parameters" : [ {
          "description" : "Формат отчета.",
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ReportFormatType"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GeneratePricesReportRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateReportResponse"
                }
              }
            },
            "description" : "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отчет «Цены на рынке»",
        "tags" : [ "reports", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "finance-and-accounting", "pricing", "promotion" ]
      }
    },
    "/reports/stocks-on-warehouses/generate" : {
      "post" : {
        "description" : "Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:\n\n* Для модели FBY — об остатках на складах Маркета.\n* Для остальных моделей — об остатках на соответствующем складе магазина.\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "generateStocksOnWarehousesReport",
        "parameters" : [ {
          "description" : "Формат отчета.",
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ReportFormatType"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenerateStocksOnWarehousesReportRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateReportResponse"
                }
              }
            },
            "description" : "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отчет по остаткам на складах",
        "tags" : [ "reports", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards" ]
      }
    },
    "/reports/goods-movement/generate" : {
      "post" : {
        "description" : "Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "generateGoodsMovementReport",
        "parameters" : [ {
          "description" : "Формат отчета.",
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ReportFormatType"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenerateGoodsMovementReportRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateReportResponse"
                }
              }
            },
            "description" : "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отчет по движению товаров",
        "tags" : [ "reports", "fby" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "inventory-and-orders" ]
      }
    },
    "/reports/shows-sales/generate" : {
      "post" : {
        "description" : "Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 10 запросов в час|\n|-|\n",
        "operationId" : "generateShowsSalesReport",
        "parameters" : [ {
          "description" : "Формат отчета.",
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ReportFormatType"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenerateShowsSalesReportRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateReportResponse"
                }
              }
            },
            "description" : "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отчет «Аналитика продаж»",
        "tags" : [ "reports", "fby", "dbs", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "finance-and-accounting" ]
      }
    },
    "/reports/competitors-position/generate" : {
      "post" : {
        "description" : "Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n{% note info \"Значение -1 в отчете\" %}\n\nЕсли в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 10 запросов в час|\n|-|\n",
        "operationId" : "generateCompetitorsPositionReport",
        "parameters" : [ {
          "description" : "Формат отчета.",
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ReportFormatType"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenerateCompetitorsPositionReportRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateReportResponse"
                }
              }
            },
            "description" : "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отчет «Конкурентная позиция»",
        "tags" : [ "reports", "fby", "dbs", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "promotion", "finance-and-accounting" ]
      }
    },
    "/reports/goods-turnover/generate" : {
      "post" : {
        "description" : "Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "generateGoodsTurnoverReport",
        "parameters" : [ {
          "description" : "Формат отчета.",
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ReportFormatType"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenerateGoodsTurnoverRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateReportResponse"
                }
              }
            },
            "description" : "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отчет по оборачиваемости",
        "tags" : [ "reports", "fby" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards" ]
      }
    },
    "/reports/boost-consolidated/generate" : {
      "post" : {
        "description" : "Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "generateBoostConsolidatedReport",
        "parameters" : [ {
          "description" : "Формат отчета.",
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ReportFormatType"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenerateBoostConsolidatedRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateReportResponse"
                }
              }
            },
            "description" : "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отчет по бусту продаж",
        "tags" : [ "reports", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "promotion", "finance-and-accounting" ]
      }
    },
    "/reports/documents/shipment-list/generate" : {
      "post" : {
        "description" : "Запускает генерацию **листа сборки** для отгрузки.\n\nУзнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "generateShipmentListDocumentReport",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenerateShipmentListDocumentReportRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateReportResponse"
                }
              }
            },
            "description" : "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый документ."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Получение листа сборки",
        "tags" : [ "reports", "fbs" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/reports/shelf-statistics/generate" : {
      "post" : {
        "description" : "Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "generateShelfsStatisticsReport",
        "parameters" : [ {
          "description" : "Формат отчета.",
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ReportFormatType"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenerateShelfsStatisticsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateReportResponse"
                }
              }
            },
            "description" : "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отчет по полкам",
        "tags" : [ "reports", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "finance-and-accounting", "promotion" ]
      }
    },
    "/reports/documents/labels/generate" : {
      "post" : {
        "description" : "Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).\n\nУзнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n",
        "operationId" : "generateMassOrderLabelsReport",
        "parameters" : [ {
          "description" : "Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7.",
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/PageFormatType"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenerateMassOrderLabelsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateReportResponse"
                }
              }
            },
            "description" : "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый файл.\n\nЕсли при генерации не удалось найти часть заказов, в ответе на запрос получения готового файла вернется подстатус `RESOURCE_NOT_FOUND`.\n"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Готовые ярлыки‑наклейки на все коробки в нескольких заказах",
        "tags" : [ "reports", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders" ]
      }
    },
    "/reports/goods-feedback/generate" : {
      "post" : {
        "description" : "Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)\n\nУзнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "generateGoodsFeedbackReport",
        "parameters" : [ {
          "description" : "Формат отчета.",
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ReportFormatType"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenerateGoodsFeedbackRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateReportResponse"
                }
              }
            },
            "description" : "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отчет по отзывам о товарах",
        "tags" : [ "reports", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "communication" ]
      }
    },
    "/campaigns/{campaignId}/outlets" : {
      "get" : {
        "description" : "Возвращает список точек продаж магазина.\n\nВ течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.\n\n|**⚙️ Лимит:** 100 000 запросов в час|\n|-|\n",
        "operationId" : "getOutlets",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Идентификатор региона.\nЕсли задать идентификатор родительского региона любого уровня, в выходных данных будут отображены точки продаж всех дочерних регионов.\nИдентификатор региона можно получить c помощью метода [GET regions](../../reference/regions/searchRegionsByName.md).\n",
          "in" : "query",
          "name" : "region_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор точки продаж, присвоенный магазином.",
          "in" : "query",
          "name" : "shop_outlet_code",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "deprecated" : true,
          "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Для указания региона используйте `region_id`.\n\n{% endnote %}\n",
          "in" : "query",
          "name" : "regionId",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetOutletsResponse"
                }
              }
            },
            "description" : "Информация о точках продаж."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация о нескольких точках продаж",
        "tags" : [ "outlets", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "settings" ]
      },
      "post" : {
        "description" : "Создает точку продаж магазина на Маркете.\n\nВ течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.\n\n|**⚙️ Лимит:** 100 000 запросов в час|\n|-|\n",
        "operationId" : "createOutlet",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChangeOutletRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateOutletResponse"
                }
              }
            },
            "description" : "Информация о созданной точке продаж."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Создание точки продаж",
        "tags" : [ "outlets", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "settings" ]
      }
    },
    "/campaigns/{campaignId}/outlets/{outletId}" : {
      "delete" : {
        "description" : "Удаляет точку продаж магазина на Маркете.\n\nВ течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.\n\n|**⚙️ Лимит:** 100 000 запросов в час|\n|-|\n",
        "operationId" : "deleteOutlet",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор точки продаж.",
          "in" : "path",
          "name" : "outletId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Пустой ответ."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Удаление точки продаж",
        "tags" : [ "outlets", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "settings" ]
      },
      "get" : {
        "description" : "Возвращает информацию о точках продаж магазина.\n\nВ течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.\n\n|**⚙️ Лимит:** 100 000 запросов в час|\n|-|\n",
        "operationId" : "getOutlet",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор точки продаж.",
          "in" : "path",
          "name" : "outletId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetOutletResponse"
                }
              }
            },
            "description" : "Информация о точке продаж."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация об одной точке продаж",
        "tags" : [ "outlets", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "settings" ]
      },
      "put" : {
        "description" : "Изменяет информацию о точке продаж магазина на Маркете.\n\nВ течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.\n\n|**⚙️ Лимит:** 100 000 запросов в час|\n|-|\n",
        "operationId" : "updateOutlet",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор точки продаж.",
          "in" : "path",
          "name" : "outletId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChangeOutletRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Пустой ответ."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Изменение информации о точке продаж",
        "tags" : [ "outlets", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "settings" ]
      }
    },
    "/campaigns/{campaignId}/outlets/licenses" : {
      "delete" : {
        "description" : "Удаляет информацию о лицензиях для точек продаж.\n\nВ течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.\n\n|**⚙️ Лимит:** 100 000 запросов в час|\n|-|\n",
        "operationId" : "deleteOutletLicenses",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Список идентификаторов лицензий.",
          "in" : "query",
          "name" : "ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array",
            "uniqueItems" : true
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Пустой ответ."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Удаление лицензий для точек продаж",
        "tags" : [ "outlet-licenses", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "settings" ]
      },
      "get" : {
        "description" : "Возвращает информацию о лицензиях для точек продаж.\n\nВ течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.\n\n|**⚙️ Лимит:** 100 000 запросов в час|\n|-|\n",
        "operationId" : "getOutletLicenses",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Список идентификаторов точек продаж, для которых нужно получить информацию о лицензиях. Идентификаторы указываются через запятую.\n\nВ запросе должен быть либо параметр `outletIds`, либо параметр `ids`. Запрос с обоими параметрами или без них приведет к ошибке.\n",
          "in" : "query",
          "name" : "outletIds",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array",
            "uniqueItems" : true
          }
        }, {
          "description" : "Список идентификаторов лицензий.",
          "in" : "query",
          "name" : "ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array",
            "uniqueItems" : true
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetOutletLicensesResponse"
                }
              }
            },
            "description" : "Найденные лицензии собственных точек продаж."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация о лицензиях для точек продаж",
        "tags" : [ "outlet-licenses", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "settings" ]
      },
      "post" : {
        "description" : "Передает информацию о новых и существующих лицензиях для точек продаж. Поддерживаются только лицензии на розничную продажу алкоголя.\n\nЧтобы размещать алкогольную продукцию на Маркете, надо также прислать гарантийное письмо (если вы еще не делали этого раньше) и правильно оформить предложения в прайс-листе. Далее информация о лицензиях проходит проверку.\n\nВ течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.\n\n|**⚙️ Лимит:** 100 000 запросов в час|\n|-|\n",
        "operationId" : "updateOutletLicenses",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateOutletLicenseRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Пустой ответ."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Создание и изменение лицензий для точек продаж",
        "tags" : [ "outlet-licenses", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "settings" ]
      }
    },
    "/campaigns/{campaignId}/feedback/updates" : {
      "get" : {
        "deprecated" : true,
        "description" : "{% note warning \"\" %}\n\nЭтот метод устарел. Не используйте его.\n\n{% endnote %}\n\nВозвращает новые и обновленные отзывы о магазине на Маркете.\n\nРезультаты возвращаются постранично, одна страница содержит не более 20 отзывов. Выходные данные содержат идентификатор следующей страницы.\n\n|**⚙️ Лимит:** 100 запросов в час|\n|-|\n",
        "operationId" : "getFeedbackAndCommentUpdates",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "description" : "Начальная дата обновления отзывов.\n\nЕсли параметр указан, возвращаются отзывы, которые были написаны или обновлены с этой даты.\n\nФормат даты: `ГГГГ-ММ-ДД`.\n",
          "in" : "query",
          "name" : "from_date",
          "required" : false,
          "schema" : {
            "format" : "date",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetFeedbackListResponse"
                }
              }
            },
            "description" : "Список отзывов для магазина."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Новые и обновленные отзывы о магазине",
        "tags" : [ "feedbacks", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "communication" ]
      }
    },
    "/businesses/{businessId}/goods-feedback" : {
      "post" : {
        "description" : "Возвращает все отзывы о товарах продавца по указанным фильтрам.\n\nРезультаты возвращаются постранично, одна страница содержит не более 20 отзывов.\n\nОтзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n",
        "operationId" : "getGoodsFeedbacks",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetGoodsFeedbackRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetGoodsFeedbackResponse"
                }
              }
            },
            "description" : "Список отзывов."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Получение отзывов о товарах продавца",
        "tags" : [ "goods-feedback", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "communication" ]
      }
    },
    "/businesses/{businessId}/goods-feedback/skip-reaction" : {
      "post" : {
        "description" : "Пропускает отзывы — они больше не будут возвращаться в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n",
        "operationId" : "skipGoodsFeedbacksReaction",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SkipGoodsFeedbackReactionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Пустой ответ."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отказ от ответа на отзывы",
        "tags" : [ "goods-feedback", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "communication" ]
      }
    },
    "/businesses/{businessId}/goods-feedback/comments/update" : {
      "post" : {
        "description" : "Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.\n\nДля создания комментария к отзыву передайте только идентификатор отзыва `feedbackId`.\n\nЧтобы добавить комментарий к другому комментарию, передайте:\n\n* `feedbackId` — идентификатор отзыва;\n* `comment.parentId` — идентификатор родительского комментария.\n\nЧтобы изменить комментарий, передайте:\n\n* `feedbackId`— идентификатор отзыва;\n* `comment.id` — идентификатор комментария, который нужно изменить.\n\nЕсли передать одновременно `comment.parentId` и `comment.id`, будет изменен существующий комментарий.\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n",
        "operationId" : "updateGoodsFeedbackComment",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateGoodsFeedbackCommentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateGoodsFeedbackCommentResponse"
                }
              }
            },
            "description" : "Информация о добавленном или измененном комментарии."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Добавление нового или изменение созданного комментария",
        "tags" : [ "goods-feedback", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "communication" ]
      }
    },
    "/businesses/{businessId}/goods-feedback/comments/delete" : {
      "post" : {
        "description" : "Удаляет комментарий магазина.\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n",
        "operationId" : "deleteGoodsFeedbackComment",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeleteGoodsFeedbackCommentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Пустой ответ."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Удаление комментария к отзыву",
        "tags" : [ "goods-feedback", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "communication" ]
      }
    },
    "/businesses/{businessId}/goods-feedback/comments" : {
      "post" : {
        "description" : "Возвращает комментарии к отзыву.\n\nРезультаты возвращаются постранично, одна страница содержит не более 20 комментариев.\n\nКомментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n",
        "operationId" : "getGoodsFeedbackComments",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetGoodsFeedbackCommentsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetGoodsFeedbackCommentsResponse"
                }
              }
            },
            "description" : "Дерево комментариев к отзыву."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Получение комментариев к отзыву",
        "tags" : [ "goods-feedback", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "communication" ]
      }
    },
    "/campaigns/{campaignId}/offers" : {
      "get" : {
        "deprecated" : true,
        "description" : "{% note warning \"\" %}\n\nЭтот метод устарел. Не используйте его.\n\n{% endnote %}\n\nПозволяет фильтровать информацию о предложениях магазина, размещенных на Маркете, и искать предложения по заданному поисковому запросу.\n\nПоиск предложений, размещенных на Маркете, работает по поисковому запросу аналогично поиску Маркета. Результаты возвращаются с использованием пейджера.\n\nВ ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Маркета, с которой соотнесено предложение, и аукционные ставки на него.\n\n{% note info %}\n\nИз-за особенностей поиска Маркета иногда на последних страницах пейджера фактическое количество результатов оказывается меньше количества, указанного ранее на предыдущих страницах.\n\nВ связи с этим настоятельно рекомендуется анализировать содержимое параметра pager для каждой полученной страницы.\n\n{% endnote %}\n\n{% note info %}\n\nКоличество предложений считается по данным за последние семь дней (не включая сегодня).\n\nДля новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.\n\n{% endnote %}\n\n|**⚙️ Лимит:** рассчитывается по [формуле](*rule)|\n|-|\n\n[//]: <> (rule: суточный лисит товаров — среднее количество таваров в каталоге за неделю * 25)\n",
        "operationId" : "getOffers",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Поисковый запрос.\n\nПоддерживается язык запросов.\n\nЗначение по умолчанию: все предложения магазина, размещенные на Маркете.\n",
          "in" : "query",
          "name" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Идентификатор прайс-листа.",
          "in" : "query",
          "name" : "feedId",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор категории предложения, указанный магазином в прайс-листе.\n\nПараметр выводится только для предложений, у которых указана категория в прайс-листе.\n\nПараметр доступен начиная с версии 2.0 партнерского API.\n",
          "in" : "query",
          "name" : "shopCategoryId",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Валюта, в которой указана цена предложения.\n\nВозможные значения:\n\n* `BYN` — белорусский рубль.\n\n* `KZT` — казахстанский тенге.\n\n* `RUR` — российский рубль.\n\n* `UAH` — украинская гривна.\n",
          "in" : "query",
          "name" : "currency",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/CurrencyType"
          }
        }, {
          "description" : "Фильтр по признаку соотнесения предложения и карточки модели.\n\nВозможные значения:\n\n* `0 / FALSE / NO` — поиск выполняется среди предложений, не соотнесенных ни с какой карточкой модели.\n\n* `1 / TRUE / YES` — поиск выполняется среди предложений, соотнесенных с карточками моделей).\n",
          "in" : "query",
          "name" : "matched",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "description" : "Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром `page_size`.\n\n`page_number` игнорируется, если задан `page_token`, `limit` или `offset`.\n",
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "default" : 1,
            "format" : "int32",
            "maximum" : 10000,
            "type" : "integer"
          }
        }, {
          "description" : "Размер страницы.\n\nИспользуется вместе с параметром `page_number`.\n\n`page_size` игнорируется, если задан `page_token`, `limit` или `offset`.\n",
          "in" : "query",
          "name" : "pageSize",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetOffersResponse"
                }
              }
            },
            "description" : "Предложения магазина."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Предложения магазина",
        "tags" : [ "offers", "dbs", "fbs", "express", "fby" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only" ]
      },
      "post" : {
        "description" : "Возвращает список товаров, которые размещены в заданном магазине. Для каждого товара указываются параметры размещения.\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n",
        "operationId" : "getCampaignOffers",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetCampaignOffersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetCampaignOffersResponse"
                }
              }
            },
            "description" : "Список товаров, размещенных в заданном магазине."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация о товарах, которые размещены в заданном магазине",
        "tags" : [ "offers", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only" ]
      }
    },
    "/campaigns/{campaignId}/offers/update" : {
      "post" : {
        "description" : "Изменяет параметры продажи товаров в конкретном магазине: доступность товара, условия доставки и самовывоза, применяемую ставку НДС.\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n",
        "operationId" : "updateCampaignOffers",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateCampaignOffersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Ответ 200 обозначает, что новые параметры получены Маркетом и скоро вступят в силу."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLockedErrorResponse"
                }
              }
            },
            "description" : "К ресурсу нельзя применить указанный метод."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Изменение условий продажи товаров в магазине",
        "tags" : [ "offers", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards" ]
      }
    },
    "/campaigns/{campaignId}/offers/delete" : {
      "post" : {
        "description" : "Удаляет заданные товары из заданного магазина.\n\n{% note warning \"Запрос удаляет товары именно из конкретного магазина\" %}\n\nНа продажи в других магазинах и на наличие товара в общем каталоге он не влияет.\n\n{% endnote %}\n\nТовар не получится удалить, если он хранится на складах Маркета.\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n",
        "operationId" : "deleteCampaignOffers",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeleteCampaignOffersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteCampaignOffersResponse"
                }
              }
            },
            "description" : "Если удалось удалить не все товары, с ответом 200 вернется список тех, что были в запросе, но остались в магазине."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLockedErrorResponse"
                }
              }
            },
            "description" : "К ресурсу нельзя применить указанный метод."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Удаление товаров из ассортимента магазина",
        "tags" : [ "offers", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards" ]
      }
    },
    "/campaigns/{campaignId}/offers/all" : {
      "get" : {
        "deprecated" : true,
        "description" : "{% note warning \"\" %}\n\nЭтот метод устарел. Не используйте его.\n\n{% endnote %}\n\nПозволяет максимально быстро получить информацию обо всех предложениях магазина, размещенных на Маркете. Возвращает результат в виде сегментов нефиксированного размера.\n\nВ ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Яндекс Маркета, с которой соотнесено предложение, а также аукционные ставки на него.\n\n{% note info %}\n\nКоличество предложений считается по данным за последние семь дней (не включая сегодня).\n\nДля новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.\n\n{% endnote %}\n\n|**⚙️ Лимит:** рассчитывается по [формуле](*rule)|\n|-|\n\n[//]: <> (rule: суточный лимит товаров — среднее количество таваров в каталоге за неделю * 25)\n",
        "operationId" : "getAllOffers",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор прайс-листа.",
          "in" : "query",
          "name" : "feedId",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Номер сегмента с результатами.\n\nЗначение по умолчанию: `0`.\n\n{% note info %}\n\nНомера сегментов запрашиваются последовательно, пока не будет получен сегмент с пустым ответом. Пустой ответ означает, что все предложения магазина получены.\n\n{% endnote %}\n\n{% note alert %}\n\nНумерация начинается с 0. Чтобы запросить первую страницу, необходимо указать `chunk=0` и т. д.\n\n{% endnote %}\n",
          "in" : "query",
          "name" : "chunk",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAllOffersResponse"
                }
              }
            },
            "description" : "Предложения магазина."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Все предложения магазина",
        "tags" : [ "offers", "dbs", "fbs", "express", "fby" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only" ]
      }
    },
    "/businesses/{businessId}/offers/recommendations" : {
      "post" : {
        "description" : "Метод возвращает рекомендации нескольких типов.\n\n**1. Порог для привлекательной цены. Он нужен для участия в софинансировании скидок.**\n\nПоказывает, какие **цены для участия** нужно установить, чтобы получить максимальные шансы на срабатывание скидок, софинансируемых Маркетом. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)\n\n**2. Оценка привлекательности цен на витрине.**\n\nПривлекательность влияет на вероятность срабатывания скидок за счет Маркета. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#validation)\n\nВ запросе можно использовать фильтры.\n\nРезультаты возвращаются постранично.\n\n|**⚙️ Лимит:** 100 запросов в минуту|\n|-|\n",
        "operationId" : "getOfferRecommendations",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetOfferRecommendationsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetOfferRecommendationsResponse"
                }
              }
            },
            "description" : "Список товаров с рекомендациями."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Рекомендации Маркета, касающиеся цен",
        "tags" : [ "offers", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only", "pricing", "pricing:read-only" ]
      }
    },
    "/campaigns/{campaignId}/feeds/{feedId}" : {
      "get" : {
        "deprecated" : true,
        "description" : "{% note warning \"\" %}\n\nЭтот метод устарел. Не используйте его.\n\n{% endnote %}\n\nВозвращает информацию о прайс-листе, размещенном на Маркете для заданного магазина. Также ресурс возвращает результаты автоматических проверок прайс-листа.\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n",
        "operationId" : "getFeed",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор прайс-листа.",
          "in" : "path",
          "name" : "feedId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetFeedResponse"
                }
              }
            },
            "description" : "Информация о прайс-листе."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация о прайс-листе",
        "tags" : [ "feeds", "dbs", "fbs", "express", "fby" ],
        "x-auth-scopes" : [ "all-methods", "pricing", "pricing:read-only" ]
      }
    },
    "/campaigns/{campaignId}/feeds" : {
      "get" : {
        "deprecated" : true,
        "description" : "{% note warning \"\" %}\n\nЭтот метод устарел. Не используйте его.\n\n{% endnote %}\n\nВозвращает список прайс-листов, размещенных на Маркете для магазина. Также ресурс возвращает результаты автоматических проверок прайс-листов.\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n",
        "operationId" : "getFeeds",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetFeedsResponse"
                }
              }
            },
            "description" : "Список прайс-листов."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Список прайс-листов магазина",
        "tags" : [ "feeds", "dbs", "fbs", "express", "fby" ],
        "x-auth-scopes" : [ "all-methods", "pricing", "pricing:read-only" ]
      }
    },
    "/campaigns/{campaignId}/feeds/{feedId}/index-logs" : {
      "get" : {
        "deprecated" : true,
        "description" : "{% note warning \"\" %}\n\nЭтот метод устарел. Не используйте его.\n\n{% endnote %}\n\nВозвращает отчет по индексации прайс-листа для заданного магазина. Отчет позволяет получить статистику загрузки прайс-листа и результаты его автоматических проверок.\n\nДанные в отчете возвращаются в порядке убывания значений параметра `generationId`.\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n",
        "operationId" : "getFeedIndexLogs",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор прайс-листа.",
          "in" : "path",
          "name" : "feedId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "description" : "Начальная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.\n\nЗначение по умолчанию: последние восемь дней со времени отправки запроса.\n",
          "in" : "query",
          "name" : "published_time_from",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          }
        }, {
          "description" : "Конечная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-31T00:42:42+03:00`.\n\nЗначение по умолчанию: дата и время отправки запроса.\n\n{% note info %}\n\nЕсли во время переключения между страницами выходных данных на Яндекс Маркете появятся новые результаты индексации прайс-листа, вы не получите часть данных. Чтобы этого не произошло, зафиксируйте выходные данные с помощью входного параметра `published_time_to`. Значение параметра не должно быть датой из будущего.\n\n{% endnote %}\n",
          "in" : "query",
          "name" : "published_time_to",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          }
        }, {
          "description" : "Статус индексации и проверки прайс-листа на соответствие техническим требованиям.\n\nВозможные значения:\n* `ERROR` — произошли ошибки.\n* `OK` — обработан без ошибок.\n* `WARNING` — наблюдались некритичные проблемы.\n",
          "in" : "query",
          "name" : "status",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/FeedIndexLogsStatusType"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetFeedIndexLogsResponse"
                }
              }
            },
            "description" : "Отчет по индексации прайс-листа."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отчет по индексации прайс-листа",
        "tags" : [ "feeds", "dbs", "fbs", "express", "fby" ],
        "x-auth-scopes" : [ "all-methods", "pricing", "pricing:read-only" ]
      }
    },
    "/campaigns/{campaignId}/feeds/{feedId}/params" : {
      "post" : {
        "deprecated" : true,
        "description" : "{% note warning \"\" %}\n\nЭтот метод устарел. Не используйте его.\n\n{% endnote %}\n\nПозволяет магазину изменить параметры прайс-листа.\n\nЧтобы отредактировать параметр прайс-листа, передайте в теле запроса: `name` (название параметра) и `value` (значение параметра).\n\nЧтобы отменить установленное значение, передайте в теле запроса: `name` (название параметра) и `delete=true` (удалить значение).\n\n|**⚙️ Лимит:** 3 запроса в час для одного прайс-листа|\n|-|\n",
        "operationId" : "setFeedParams",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор прайс-листа.",
          "in" : "path",
          "name" : "feedId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetFeedParamsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Статус выполнения операции."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLockedErrorResponse"
                }
              }
            },
            "description" : "К ресурсу нельзя применить указанный метод."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Изменение параметров прайс-листа",
        "tags" : [ "feeds", "dbs", "fbs", "express", "fby" ],
        "x-auth-scopes" : [ "all-methods", "pricing" ]
      }
    },
    "/campaigns/{campaignId}/feeds/{feedId}/refresh" : {
      "post" : {
        "deprecated" : true,
        "description" : "{% note warning \"\" %}\n\nЭтот метод устарел. Не используйте его.\n\n{% endnote %}\n\nПозволяет сообщить, что магазин обновил прайс-лист. После этого Маркет начнет обновление данных на сервисе.\n1. Магазин обновляет прайс-лист, ссылку на который он указал в кабинете.\n2. Магазин отправляет Маркету запрос методом `POST campaigns/{campaignId}/feeds/{feedId}/refresh`.\n3. Маркет начинает обновление данных магазина на сервисе.\n\n{% note alert %}\n\nЗапрос работает только для включенных магазинов. Если магазин выключен, данные на Маркете не обновятся, даже если HTTP-код — `200 OK`. Проверить статус магазина можно с помощью базовых запросов или на странице бизнес-аккаунта.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 3 запроса в час для одного прайс-листа|\n|-|\n",
        "operationId" : "refreshFeed",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор прайс-листа.",
          "in" : "path",
          "name" : "feedId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Пустой ответ."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Сообщить, что прайс-лист обновился",
        "tags" : [ "feeds", "dbs", "fbs", "express", "fby" ],
        "x-auth-scopes" : [ "all-methods", "pricing" ]
      }
    },
    "/models" : {
      "get" : {
        "description" : "Возвращает информацию о моделях, удовлетворяющих заданным в запросе условиям поиска.\n\nВ одном запросе можно получить информацию не более чем о 100 моделях.\n\nДля методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.\n\n|**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|\n|-|\n\n[//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)\n",
        "operationId" : "searchModels",
        "parameters" : [ {
          "description" : "Поисковый запрос по названию модели товара.",
          "in" : "query",
          "name" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n",
          "in" : "query",
          "name" : "regionId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Валюта, в которой отображаются цены предложений на страницах с результатами поиска.\n\nВозможные значения:\n\n* `BYN` — белорусский рубль.\n\n* `KZT` — казахстанский тенге.\n\n* `RUR` — российский рубль.\n\n* `UAH` — украинская гривна.\n\nЗначение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).\n",
          "in" : "query",
          "name" : "currency",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/CurrencyType"
          }
        }, {
          "description" : "Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром `page_size`.\n\n`page_number` игнорируется, если задан `page_token`, `limit` или `offset`.\n",
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "default" : 1,
            "format" : "int32",
            "maximum" : 10000,
            "type" : "integer"
          }
        }, {
          "description" : "Размер страницы.\n\nИспользуется вместе с параметром `page_number`.\n\n`page_size` игнорируется, если задан `page_token`, `limit` или `offset`.\n",
          "in" : "query",
          "name" : "pageSize",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchModelsResponse"
                }
              }
            },
            "description" : "Информация о моделях."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Поиск модели товара",
        "tags" : [ "models", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only" ]
      },
      "post" : {
        "description" : "Возвращает информацию о моделях товаров.\n\nВ одном запросе можно получить информацию не более чем о 100 моделях.\n\nДля методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.\n\n|**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|\n|-|\n\n[//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)\n",
        "operationId" : "getModels",
        "parameters" : [ {
          "description" : "Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n",
          "in" : "query",
          "name" : "regionId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Валюта, в которой отображаются цены предложений на страницах с результатами поиска.\n\nВозможные значения:\n\n* `BYN` — белорусский рубль.\n\n* `KZT` — казахстанский тенге.\n\n* `RUR` — российский рубль.\n\n* `UAH` — украинская гривна.\n\nЗначение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).\n",
          "in" : "query",
          "name" : "currency",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/CurrencyType"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetModelsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetModelsResponse"
                }
              }
            },
            "description" : "Информация о моделях."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация о нескольких моделях",
        "tags" : [ "models", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only" ]
      }
    },
    "/models/{modelId}" : {
      "get" : {
        "description" : "Возвращает информацию о модели товара.\n\nДля методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.\n\n|**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|\n|-|\n\n[//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)\n",
        "operationId" : "getModel",
        "parameters" : [ {
          "description" : "Идентификатор модели товара.",
          "in" : "path",
          "name" : "modelId",
          "required" : true,
          "schema" : {
            "exclusiveMinimum" : true,
            "format" : "int64",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n",
          "in" : "query",
          "name" : "regionId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Валюта, в которой отображаются цены предложений на страницах с результатами поиска.\n\nВозможные значения:\n\n* `BYN` — белорусский рубль.\n\n* `KZT` — казахстанский тенге.\n\n* `RUR` — российский рубль.\n\n* `UAH` — украинская гривна.\n\nЗначение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).\n",
          "in" : "query",
          "name" : "currency",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/CurrencyType"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetModelsResponse"
                }
              }
            },
            "description" : "Информация о модели."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация об одной модели",
        "tags" : [ "models", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only" ]
      }
    },
    "/models/offers" : {
      "post" : {
        "description" : "Возвращает информацию о первых десяти предложениях, расположенных на карточках моделей, идентификаторы которых указаны в запросе.\n\nПредложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.\n\nДля групповых моделей выдача предложений не поддерживается. Идентификаторы групповых моделей игнорируются.\n\nВ одном запросе можно получить информацию о предложениях не более чем для 100 моделей.\n\nДля методов `GET models/{modelId}/offers` и `POST models/offers` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.\n\n|**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|\n|-|\n\n[//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)\n",
        "operationId" : "getModelsOffers",
        "parameters" : [ {
          "description" : "Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n",
          "in" : "query",
          "name" : "regionId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Валюта, в которой отображаются цены предложений на страницах с результатами поиска.\n\nВозможные значения:\n\n* `BYN` — белорусский рубль.\n\n* `KZT` — казахстанский тенге.\n\n* `RUR` — российский рубль.\n\n* `UAH` — украинская гривна.\n\nЗначение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).\n",
          "in" : "query",
          "name" : "currency",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/CurrencyType"
          }
        }, {
          "description" : "Направление сортировки по цене.\n\nВозможные значения:\n* `ASC` — сортировка по возрастанию.\n* `DESC` — сортировка по убыванию.\n\nЗначение по умолчанию: предложения выводятся в произвольном порядке.\n",
          "in" : "query",
          "name" : "orderByPrice",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/SortOrderType"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetModelsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetModelsOffersResponse"
                }
              }
            },
            "description" : "Список предложений для моделей."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Список предложений для нескольких моделей",
        "tags" : [ "models", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only" ]
      }
    },
    "/models/{modelId}/offers" : {
      "get" : {
        "description" : "Возвращает информацию о первых десяти предложениях, расположенных на карточке модели.\n\nПредложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.\n\nДля групповых моделей метод не поддерживается. Идентификатор групповой модели игнорируется.\n\nДля методов `GET models/{modelId}/offers` и `POST models/offers` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.\n\n|**⚙️ Лимит:** [рассчитывается индивидуально](*rule)|\n|-|\n\n[//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.)\n",
        "operationId" : "getModelOffers",
        "parameters" : [ {
          "description" : "Идентификатор модели товара.",
          "in" : "path",
          "name" : "modelId",
          "required" : true,
          "schema" : {
            "exclusiveMinimum" : true,
            "format" : "int64",
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n",
          "in" : "query",
          "name" : "regionId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Валюта, в которой отображаются цены предложений на страницах с результатами поиска.\n\nВозможные значения:\n\n* `BYN` — белорусский рубль.\n\n* `KZT` — казахстанский тенге.\n\n* `RUR` — российский рубль.\n\n* `UAH` — украинская гривна.\n\nЗначение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).\n",
          "in" : "query",
          "name" : "currency",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/CurrencyType"
          }
        }, {
          "description" : "Направление сортировки по цене.\n\nВозможные значения:\n* `ASC` — сортировка по возрастанию.\n* `DESC` — сортировка по убыванию.\n\nЗначение по умолчанию: предложения выводятся в произвольном порядке.\n",
          "in" : "query",
          "name" : "orderByPrice",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/SortOrderType"
          }
        }, {
          "description" : "Количество предложений на странице ответа.",
          "in" : "query",
          "name" : "count",
          "required" : false,
          "schema" : {
            "default" : 10,
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "description" : "Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром `page_size`.\n\n`page_number` игнорируется, если задан `page_token`, `limit` или `offset`.\n",
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "default" : 1,
            "format" : "int32",
            "maximum" : 10000,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetModelsOffersResponse"
                }
              }
            },
            "description" : "Список предложений для модели."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Список предложений для одной модели",
        "tags" : [ "models", "dbs" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only" ]
      }
    },
    "/businesses/{businessId}/bids" : {
      "put" : {
        "description" : "Запускает буст продаж — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.\n\n{% cut \"Как в кабинете выглядит кампания, созданная через API\" %}\n\n![](../../_images/api-boost.png)\n\n{% endcut %}\n\nПри первом использовании запроса Маркет: создаст единую на все магазины бизнес-аккаунта кампанию, добавит в нее товары с указанными ставками, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).\n\nЕсли товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.\n\nЗапрос всегда работает с одной и той же созданной через API кампанией. Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. Другими кампаниями управлять через API не получится. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.\n\nВыполнение запроса включает кампанию и ценовую стратегию, если они были отключены.\n\nВнести другие изменения в созданную через API кампанию можно в кабинете:\n\n* выключить или включить кампанию;\n* изменить ее название;\n* выключить или включить ценовую стратегию.\n\nЧтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.\n\nПодробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).\n\n{% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}\n\n𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.\n\n{% endnote %}\n\nВ одном запросе может быть максимум 1500 товаров.\n\n|**⚙️ Лимит:** 1000 запросов в минуту|\n|-|\n",
        "operationId" : "putBidsForBusiness",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PutSkuBidsRequest"
              }
            }
          },
          "description" : "description",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Все получилось: ставки установлены или обновлены. Если нужно, добавлены новые товары и запущена кампания.\n"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Включение буста продаж и установка ставок",
        "tags" : [ "bids", "dbs", "fbs", "fby", "express" ],
        "x-auth-scopes" : [ "all-methods", "pricing" ]
      }
    },
    "/campaigns/{campaignId}/bids" : {
      "put" : {
        "description" : "Запускает буст продаж в указанном магазине — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.\n\nПри первом использовании запроса Маркет: создаст кампанию, добавит в нее товары с указанными ставками для заданного магазина, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).\n\nЕсли товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.\n\nЗапрос всегда работает с одной и той же кампанией, созданной через этот запрос или [PUT businesses/{businessId}/bids](/reference/bids/putBidsForBusiness). Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.\n\nВыполнение запроса включает кампанию и ценовую стратегию, если они были отключены.\n\nВнести другие изменения в созданную через API кампанию можно в кабинете:\n\n* выключить или включить кампанию;\n* изменить ее название;\n* выключить или включить ценовую стратегию.\n\nЧтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.\n\nПодробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).\n\n{% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}\n\n𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.\n\n{% endnote %}\n\nВ одном запросе может быть максимум 1500 товаров.\n\n|**⚙️ Лимит:** 1000 запросов в минуту|\n|-|\n",
        "operationId" : "putBidsForCampaign",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PutSkuBidsRequest"
              }
            }
          },
          "description" : "description",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Пустой ответ."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Включение буста продаж и установка ставок для магазина",
        "tags" : [ "bids", "dbs", "fbs", "express", "fby" ],
        "x-auth-scopes" : [ "all-methods", "pricing" ]
      }
    },
    "/businesses/{businessId}/bids/info" : {
      "post" : {
        "description" : "Возвращает значения ставок для заданных товаров.\n\n{% note warning \"\" %}\n\nВ ответе возвращаются значения только тех ставок, которые вы установили через запрос [PUT businesses/{businessId}/bids](../../reference/bids/putBidsForBusiness.md). Получить информацию по кампаниям, созданным в кабинете, не получится.\n\n{% endnote %}\n\nВ одном запросе может быть максимум 1500 товаров.\n\n|**⚙️ Лимит:** 1000 запросов в минуту|\n|-|\n",
        "operationId" : "getBidsInfoForBusiness",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetBidsInfoRequest"
              }
            }
          },
          "description" : "description",
          "required" : false
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBidsInfoResponse"
                }
              }
            },
            "description" : "Значения ставок для заданных товаров. В ответ попадают только товары, на которые установлены ставки."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Информация об установленных ставках",
        "tags" : [ "bids", "dbs", "fbs", "fby", "express" ],
        "x-auth-scopes" : [ "all-methods", "pricing", "pricing:read-only" ]
      }
    },
    "/businesses/{businessId}/bids/recommendations" : {
      "post" : {
        "description" : "Возвращает рекомендованные ставки для заданных товаров — такие ставки обеспечивают вашим предложениям определенную долю показов, если цена не превышает рекомендованную.\n\nДля одного товара может возвращаться одна рекомендованная ставка или несколько. Во втором случае разные ставки предназначены для достижения разной доли показов.\n\nЕсли товар только добавлен в каталог, но пока не продается, рекомендованной ставки для него не будет.\n\nВ одном запросе может быть максимум 1500 товаров.\n\n|**⚙️ Лимит:** 1000 запросов в минуту|\n|-|\n",
        "operationId" : "getBidsRecommendations",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetBidsRecommendationsRequest"
              }
            }
          },
          "description" : "description.",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBidsRecommendationsResponse"
                }
              }
            },
            "description" : "Рекомендованные ставки для заданных товаров."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Рекомендованные ставки для заданных товаров",
        "tags" : [ "bids", "dbs", "fbs", "fby", "express" ],
        "x-auth-scopes" : [ "all-methods", "pricing", "pricing:read-only" ]
      }
    },
    "/businesses/{businessId}/warehouses" : {
      "get" : {
        "description" : "Возвращает список складов и, если склады объединены, список групп складов. [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)\n\nСреди прочего запрос позволяет определить идентификатор, который нужно использовать при передаче остатков для группы складов.\n\n|**⚙️ Лимит:** 100 запросов в минуту|\n|-|\n",
        "operationId" : "getWarehouses",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetWarehousesResponse"
                }
              }
            },
            "description" : "Список складов и групп складов."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Список складов и групп складов",
        "tags" : [ "warehouses", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "inventory-and-orders", "inventory-and-orders:read-only" ]
      }
    },
    "/warehouses" : {
      "get" : {
        "description" : "Возвращает список складов Маркета с их идентификаторами.\n\n|**⚙️ Лимит:** 100 запросов в минуту|\n|-|\n",
        "operationId" : "getFulfillmentWarehouses",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetFulfillmentWarehousesResponse"
                }
              }
            },
            "description" : "Список складов."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Идентификаторы складов Маркета (FBY)",
        "tags" : [ "warehouses", "fby" ],
        "x-auth-scopes" : [ "all-methods", "settings", "finance-and-accounting", "offers-and-cards", "offers-and-cards:read-only", "pricing", "pricing:read-only", "inventory-and-orders", "inventory-and-orders:read-only", "promotion", "promotion:read-only", "communication" ]
      }
    },
    "/category/{categoryId}/parameters" : {
      "post" : {
        "description" : "Возвращает список характеристик с допустимыми значениями для заданной категории.\n\n|**⚙️ Лимит:** 50 категорий в минуту |\n|-|\n",
        "operationId" : "getCategoryContentParameters",
        "parameters" : [ {
          "description" : "Идентификатор категории на Маркете.\n\nЧтобы узнать идентификатор категории, к которой относится интересующий вас товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).\n",
          "in" : "path",
          "name" : "categoryId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetCategoryContentParametersResponse"
                }
              }
            },
            "description" : "Список характеристик товаров из заданной категории."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Списки характеристик товаров по категориям",
        "tags" : [ "content", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only" ]
      }
    },
    "/businesses/{businessId}/offer-cards" : {
      "post" : {
        "description" : "Возвращает сведения о состоянии контента для заданных товаров:\n\n* создана ли карточка товара и в каком она статусе;\n* заполненность карточки в процентах;\n* переданные характеристики товаров;\n* есть ли ошибки или предупреждения, связанные с контентом;\n* рекомендации по заполнению карточки.\n\n|**⚙️ Лимит:** 600 запросов в минуту|\n|-|\n",
        "operationId" : "getOfferCardsContentStatus",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetOfferCardsContentStatusRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetOfferCardsContentStatusResponse"
                }
              }
            },
            "description" : "Информация о карточках указанных товаров."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Получение информации о заполненности карточек магазина",
        "tags" : [ "content", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only" ]
      }
    },
    "/businesses/{businessId}/offer-cards/update" : {
      "post" : {
        "description" : "Редактирует характеристики товара, которые специфичны для категории, к которой он относится.\n\n{% note warning \"Здесь только то, что относится к конкретной категории\" %}\n\nЕсли вам нужно изменить основные параметры товара (название, описание, изображения, видео, производитель, штрихкод), воспользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).\n\n{% endnote %}\n\nЧтобы удалить характеристики, которые заданы в параметрах с типом `string`, передайте пустое значение.\n\n{% note info \"Данные в каталоге обновляются не мгновенно\" %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 5000 товаров в минуту|\n|-|\n",
        "operationId" : "updateOfferContent",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateOfferContentRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateOfferContentResponse"
                }
              }
            },
            "description" : "Запрос выполнен корректно, данные обработаны.\n\n{% note warning \"Ответ 200 сам по себе не значит, что переданные значения корректны\" %}\n\nОбязательно посмотрите детали ответа: `status` и перечень ошибок, если он есть.\n\nДаже если ошибка допущена в характеристиках всего одного товара, никакие изменения из запроса в каталог не попадут.\n\n{% endnote %}\n\nЕсли в `status` вернулось `ERROR`, убедитесь, что:\n\n* все обязательные характеристики заполнены;\n* характеристики действительно существуют в указанных категориях;\n* значения соответствуют характеристикам;\n* ваши собственные значения имеют нужный тип данных.\n\nНайти проблемы помогут поля `errors` и `warnings`.\n"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "423" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLockedErrorResponse"
                }
              }
            },
            "description" : "К ресурсу нельзя применить указанный метод."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Редактирование категорийных характеристик товара",
        "tags" : [ "content", "dbs", "fby", "fbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards" ]
      }
    },
    "/businesses/{businessId}/chats/new" : {
      "post" : {
        "description" : "Создает новый чат с покупателем.\n\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n",
        "operationId" : "createChat",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateChatRequest"
              }
            }
          },
          "description" : "description",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateChatResponse"
                }
              }
            },
            "description" : "Все получилось: чат создан.\n"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Создание нового чата с покупателем",
        "tags" : [ "chats", "dbs", "fbs", "fby", "express" ],
        "x-auth-scopes" : [ "all-methods", "communication" ]
      }
    },
    "/businesses/{businessId}/chats" : {
      "post" : {
        "description" : "Возвращает ваши чаты с покупателями.\n\n|**⚙️ Лимит:** 10000 запросов в час|\n|-|\n",
        "operationId" : "getChats",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetChatsRequest"
              }
            }
          },
          "description" : "description",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetChatsResponse"
                }
              }
            },
            "description" : "Список чатов.\n"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Получение доступных чатов",
        "tags" : [ "chats", "dbs", "fbs", "fby", "express" ],
        "x-auth-scopes" : [ "all-methods", "communication" ]
      }
    },
    "/businesses/{businessId}/chats/file/send" : {
      "post" : {
        "description" : "Отправляет файл в чат с покупателем.\n\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n",
        "operationId" : "sendFileToChat",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор чата.",
          "in" : "query",
          "name" : "chatId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/SendFileToChatRequest"
              }
            }
          },
          "description" : "description",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Пустой ответ. Означает, что файл отправлен."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отправка файла в чат",
        "tags" : [ "chats", "dbs", "fbs", "fby", "express" ],
        "x-auth-scopes" : [ "all-methods", "communication" ]
      }
    },
    "/businesses/{businessId}/chats/message" : {
      "post" : {
        "description" : "Отправляет сообщение в чат с покупателем.\n\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n",
        "operationId" : "sendMessageToChat",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор чата.",
          "in" : "query",
          "name" : "chatId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SendMessageToChatRequest"
              }
            }
          },
          "description" : "description",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyApiResponse"
                }
              }
            },
            "description" : "Пустой ответ. Означает, что сообщение отправлено."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Отправка сообщения в чат",
        "tags" : [ "chats", "dbs", "fbs", "fby", "express" ],
        "x-auth-scopes" : [ "all-methods", "communication" ]
      }
    },
    "/businesses/{businessId}/chats/history" : {
      "post" : {
        "description" : "Возвращает историю сообщений в чате с покупателем.\n\n|**⚙️ Лимит:** 10000 запросов в час|\n|-|\n",
        "operationId" : "getChatHistory",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор чата.",
          "in" : "query",
          "name" : "chatId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetChatHistoryRequest"
              }
            }
          },
          "description" : "description",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetChatHistoryResponse"
                }
              }
            },
            "description" : "История сообщений успешно получена.\n"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Получение истории сообщений в чате",
        "tags" : [ "chats", "dbs", "fbs", "fby", "express" ],
        "x-auth-scopes" : [ "all-methods", "communication" ]
      }
    },
    "/tariffs/calculate" : {
      "post" : {
        "description" : "Рассчитывает стоимость услуг Маркета для товаров с заданными параметрами. Порядок товаров в запросе и ответе сохраняется, чтобы определить,\nдля какого товара рассчитана стоимость услуги.\n\nОбратите внимание: калькулятор осуществляет примерные расчеты. Финальная стоимость для каждого заказа зависит от предоставленных услуг.\n\nВ запросе можно указать либо параметр `campaignId`, либо `sellingProgram`. Совместное использование параметров приведет к ошибке.\n\n|**⚙️ Лимит:** 100 запросов в минуту|\n|-|\n",
        "operationId" : "calculateTariffs",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CalculateTariffsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CalculateTariffsResponse"
                }
              }
            },
            "description" : "Стоимость услуг."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Калькулятор стоимости услуг",
        "tags" : [ "tariffs", "fbs", "fby", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "finance-and-accounting" ]
      }
    },
    "/categories/tree" : {
      "post" : {
        "description" : "Возвращает дерево категорий Маркета.\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n",
        "operationId" : "getCategoriesTree",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetCategoriesRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetCategoriesResponse"
                }
              }
            },
            "description" : "Категории Маркета."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Дерево категорий",
        "tags" : [ "categories", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "settings", "finance-and-accounting", "offers-and-cards", "offers-and-cards:read-only", "pricing", "pricing:read-only", "inventory-and-orders", "inventory-and-orders:read-only", "promotion", "promotion:read-only", "communication" ]
      }
    },
    "/categories/max-sale-quantum" : {
      "post" : {
        "description" : "Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.\n\nЕсли вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.\n\nПодробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).\n\n|**⚙️ Лимит:** 1 000 запросов в час|\n|-|\n",
        "operationId" : "getCategoriesMaxSaleQuantum",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetCategoriesMaxSaleQuantumRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetCategoriesMaxSaleQuantumResponse"
                }
              }
            },
            "description" : "Лимит на установку кванта и минимального количества товаров."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Лимит на установку кванта продажи и минимального количества товаров в заказе",
        "tags" : [ "categories", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "offers-and-cards", "offers-and-cards:read-only" ]
      }
    },
    "/businesses/{businessId}/ratings/quality" : {
      "post" : {
        "description" : "Возвращает значение индекса качества магазинов и его составляющие.\n\nПодробнее об индексе качества читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/score/).\n\n|**⚙️ Лимит:** 10000 запросов в час|\n|-|\n",
        "operationId" : "getQualityRatings",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetQualityRatingRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetQualityRatingResponse"
                }
              }
            },
            "description" : "Значение индекса качества магазинов и его составляющие."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Индекс качества магазинов",
        "tags" : [ "ratings", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "settings" ]
      }
    },
    "/campaigns/{campaignId}/ratings/quality/details" : {
      "post" : {
        "description" : "Возвращает список заказов, которые повлияли на индекс качества магазина. Чтобы узнать значение индекса качества, выполните запрос [POST businesses/{businessId}/ratings/quality](../../reference/ratings/getQualityRatings.md).\n\n|**⚙️ Лимит:** 100000 запросов в час|\n|-|\n",
        "operationId" : "getQualityRatingDetails",
        "parameters" : [ {
          "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "campaignId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetQualityRatingDetailsResponse"
                }
              }
            },
            "description" : "Информация о заказах, которые повлияли на индекс качества."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Заказы, которые повлияли на индекс качества",
        "tags" : [ "ratings", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "settings" ]
      }
    },
    "/businesses/{businessId}/promos" : {
      "post" : {
        "description" : "Возвращает информацию об акциях Маркета.\n\nПо умолчанию возвращаются акции, в которых продавец участвует или может принять участие.\n\nЧтобы получить текущие или завершенные акции, передайте параметр `participation`.\n\nТипы акций, которые возвращаются в ответе:\n\n* прямая скидка;\n* флеш-акция;\n* скидка по промокоду.\n\n|**⚙️ Лимит:** 1000 запросов в час|\n|-|\n",
        "operationId" : "getPromos",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetPromosRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetPromosResponse"
                }
              }
            },
            "description" : "Список акций Маркета."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Получение списка акций",
        "tags" : [ "promos", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "promotion", "promotion:read-only", "pricing", "pricing:read-only" ]
      }
    },
    "/businesses/{businessId}/promos/offers" : {
      "post" : {
        "description" : "Возвращает список товаров, которые участвуют или могут участвовать в акции.\n\n{% note warning %}\n\nВ параметре `limit` не передавайте значение больше 500.\n\n{% endnote %}\n\n|**⚙️ Лимит:** 10000 запросов в час|\n|-|\n",
        "operationId" : "getPromoOffers",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
          "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
          "in" : "query",
          "name" : "page_token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Количество значений на одной странице.\n",
          "example" : 20,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetPromoOffersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetPromoOffersResponse"
                }
              }
            },
            "description" : "Список товаров, которые участвуют или могут участвовать в акции."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Получение списка товаров, которые участвуют или могут участвовать в акции",
        "tags" : [ "promos", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "pricing", "pricing:read-only" ]
      }
    },
    "/businesses/{businessId}/promos/offers/update" : {
      "post" : {
        "description" : "Добавляет товары в акцию или изменяет цены на товары, которые участвуют в акции.\n\nИзменения начинают действовать в течение 4–6 часов.\n\n|**⚙️ Лимит:** 10000 запросов в час|\n|-|\n",
        "operationId" : "updatePromoOffers",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdatePromoOffersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdatePromoOffersResponse"
                }
              }
            },
            "description" : "Результат добавления товаров в акцию или обновления их цен."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Добавление товаров в акцию или изменение их цен",
        "tags" : [ "promos", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "pricing" ]
      }
    },
    "/businesses/{businessId}/promos/offers/delete" : {
      "post" : {
        "description" : "Убирает товары из акции.\n\nИзменения начинают действовать в течение 4–6 часов.\n\n|**⚙️ Лимит:** 10000 запросов в час|\n|-|\n",
        "operationId" : "deletePromoOffers",
        "parameters" : [ {
          "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
          "in" : "path",
          "name" : "businessId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeletePromoOffersRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeletePromoOffersResponse"
                }
              }
            },
            "description" : "Результат удаления товаров из акции."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
                }
              }
            },
            "description" : "Запрос содержит неправильные данные."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
                }
              }
            },
            "description" : "В запросе не указаны данные для авторизации."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
                }
              }
            },
            "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
                }
              }
            },
            "description" : "Запрашиваемый ресурс не найден."
          },
          "420" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiLimitErrorResponse"
                }
              }
            },
            "description" : "Превышено ограничение на доступ к ресурсу."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiServerErrorResponse"
                }
              }
            },
            "description" : "Внутренняя ошибка сервера."
          }
        },
        "summary" : "Удаление товаров из акции",
        "tags" : [ "promos", "fby", "fbs", "dbs", "express" ],
        "x-auth-scopes" : [ "all-methods", "pricing" ]
      }
    }
  },
  "components" : {
    "parameters" : {
      "BusinessId" : {
        "description" : "Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
        "in" : "path",
        "name" : "businessId",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        }
      },
      "PageNum" : {
        "description" : "Номер страницы результатов.\n\nЗначение по умолчанию: 1.\n\nИспользуется вместе с параметром `page_size`.\n\n`page_number` игнорируется, если задан `page_token`, `limit` или `offset`.\n",
        "in" : "query",
        "name" : "page",
        "required" : false,
        "schema" : {
          "default" : 1,
          "format" : "int32",
          "maximum" : 10000,
          "type" : "integer"
        }
      },
      "PageSize" : {
        "description" : "Размер страницы.\n\nИспользуется вместе с параметром `page_number`.\n\n`page_size` игнорируется, если задан `page_token`, `limit` или `offset`.\n",
        "in" : "query",
        "name" : "pageSize",
        "required" : false,
        "schema" : {
          "format" : "int32",
          "type" : "integer"
        }
      },
      "CampaignId" : {
        "description" : "Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.\n\nЧтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).\n\nℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)\n",
        "in" : "path",
        "name" : "campaignId",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        }
      },
      "Login" : {
        "description" : "Логин пользователя.",
        "in" : "path",
        "name" : "login",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "OrderId" : {
        "description" : "Идентификатор заказа.",
        "in" : "path",
        "name" : "orderId",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        }
      },
      "GetOrdersOrderIds" : {
        "description" : "Фильтрация заказов по идентификаторам.\n<br><br>\n⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым.\n",
        "in" : "query",
        "name" : "orderIds",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "maxItems" : 50,
            "minItems" : 1,
            "type" : "integer"
          },
          "type" : "array"
        }
      },
      "GetOrdersStatus" : {
        "description" : "Статус заказа:\n\n* `CANCELLED` — заказ отменен.\n\n* `DELIVERED` — заказ получен покупателем.\n\n* `DELIVERY` — заказ передан в службу доставки.\n\n* `PICKUP` — заказ доставлен в пункт самовывоза.\n\n* `PROCESSING` — заказ находится в обработке.\n\n* `UNPAID` — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).\n\nТакже могут возвращаться другие значения. Обрабатывать их не требуется.\n",
        "in" : "query",
        "name" : "status",
        "required" : false,
        "schema" : {
          "items" : {
            "$ref" : "#/components/schemas/OrderStatusType"
          },
          "type" : "array",
          "uniqueItems" : true
        }
      },
      "GetOrdersSubstatus" : {
        "description" : "Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).\n\nВозможные значения для заказа в статусе `PROCESSING`:\n\n* `STARTED` — заказ подтвержден, его можно начать обрабатывать.\n* `READY_TO_SHIP` — заказ собран и готов к отправке.\n* `SHIPPED` — заказ передан службе доставки.\n\nВозможные значения для заказа в статусе `CANCELLED`:\n\n* `DELIVERY_SERVICE_UNDELIVERED` — служба доставки не смогла доставить заказ.\n\n* `PROCESSING_EXPIRED` — значение более не используется.\n\n* `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.\n\n* `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.\n\n* `RESERVATION_FAILED` — Маркет не может продолжить дальнейшую обработку заказа.\n\n* `SHOP_FAILED` — магазин не может выполнить заказ.\n\n* `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.\n\n* `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.\n\n* `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.\n\n* `USER_REFUSED_PRODUCT` — покупателю не подошел товар.\n\n* `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.\n\n* `USER_UNREACHABLE` — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:\n\n  * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;\n  * перерыв между первым и третьим звонком не менее 90 минут;\n  * соединение не короче 5 секунд.\n\n  Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400.\n* `USER_WANTS_TO_CHANGE_DELIVERY_DATE` — покупатель хочет получить заказ в другой день.\n* `CANCELLED_COURIER_NOT_FOUND` — не удалось найти курьера.\n\nТакже могут возвращаться другие значения. Обрабатывать их не требуется.\n",
        "in" : "query",
        "name" : "substatus",
        "required" : false,
        "schema" : {
          "items" : {
            "$ref" : "#/components/schemas/OrderSubstatusType"
          },
          "type" : "array",
          "uniqueItems" : true
        }
      },
      "GetOrdersFromDate" : {
        "description" : "Начальная дата для фильтрации заказов по дате оформления.\n\nФормат даты: `ДД-ММ-ГГГГ`.\n\nМежду начальной и конечной датой (параметр `toDate`) должно быть не больше 30 дней.\n\nЗначение по умолчанию: 30 дней назад от текущей даты.\n",
        "in" : "query",
        "name" : "fromDate",
        "required" : false,
        "schema" : {
          "format" : "date",
          "type" : "string"
        }
      },
      "GetOrdersToDate" : {
        "description" : "Конечная дата для фильтрации заказов по дате оформления.\n\nПоказываются заказы, созданные до 00:00 указанного дня.\n\nФормат даты: `ДД-ММ-ГГГГ`.\n\nМежду начальной (параметр `fromDate`) и конечной датой должно быть не больше 30 дней.\n\nЗначение по умолчанию: текущая дата.\n",
        "in" : "query",
        "name" : "toDate",
        "required" : false,
        "schema" : {
          "format" : "date",
          "type" : "string"
        }
      },
      "GetOrdersSupplierShipmentDateFrom" : {
        "description" : "Начальная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).\n\nФормат даты: `ДД-ММ-ГГГГ`.\n\nМежду начальной и конечной датой (параметр `supplierShipmentDateTo`) должно быть не больше 30 дней.\n\nНачальная дата включается в интервал для фильтрации.\n",
        "in" : "query",
        "name" : "supplierShipmentDateFrom",
        "required" : false,
        "schema" : {
          "format" : "date",
          "type" : "string"
        }
      },
      "GetOrdersSupplierShipmentDateTo" : {
        "description" : "Конечная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).\n\nФормат даты: `ДД-ММ-ГГГГ`.\n\nМежду начальной (параметр `supplierShipmentDateFrom`) и конечной датой должно быть не больше 30 дней.\n\nКонечная дата не включается в интервал для фильтрации.\n",
        "in" : "query",
        "name" : "supplierShipmentDateTo",
        "required" : false,
        "schema" : {
          "format" : "date",
          "type" : "string"
        }
      },
      "GetOrdersUpdatedAtFrom" : {
        "description" : "Начальная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.\n\nМежду начальной и конечной датой (параметр `updatedAtTo`) должно быть не больше 30 дней.\n\nНачальная дата включается в интервал для фильтрации.\n",
        "in" : "query",
        "name" : "updatedAtFrom",
        "required" : false,
        "schema" : {
          "format" : "date-time",
          "type" : "string"
        }
      },
      "GetOrdersUpdatedAtTo" : {
        "description" : "Конечная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.\n\nМежду начальной (параметр `updatedAtFrom`) и конечной датой должно быть не больше 30 дней.\n\nКонечная дата не включается в интервал для фильтрации.\n",
        "in" : "query",
        "name" : "updatedAtTo",
        "required" : false,
        "schema" : {
          "format" : "date-time",
          "type" : "string"
        }
      },
      "GetOrdersDispatchType" : {
        "description" : "Способ отгрузки",
        "in" : "query",
        "name" : "dispatchType",
        "required" : false,
        "schema" : {
          "$ref" : "#/components/schemas/OrderDeliveryDispatchType"
        }
      },
      "GetOrdersFake" : {
        "description" : "Фильтрация заказов по типам:\n\n* `false` — настоящий заказ покупателя.\n\n* `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета.\n",
        "in" : "query",
        "name" : "fake",
        "required" : false,
        "schema" : {
          "default" : false,
          "type" : "boolean"
        }
      },
      "GetOrdersHasCis" : {
        "description" : "Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации [в системе «Честный ЗНАК»](https://честныйзнак.рф/):\n\n* `true` — да.\n\n* `false` — нет.\n\nТакие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям.\n",
        "in" : "query",
        "name" : "hasCis",
        "required" : false,
        "schema" : {
          "default" : false,
          "type" : "boolean"
        }
      },
      "GetOrdersOnlyWaitingForCancellationApprove" : {
        "description" : "**Только для модели DBS**\n\nФильтрация заказов по наличию запросов покупателей на отмену.\n\nПри значение `true` возвращаются только заказы, которые находятся в статусе `DELIVERY` или `PICKUP` и которые пользователи решили отменить.\n\nЧтобы подтвердить или отклонить отмену, отправьте запрос [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation).\n",
        "in" : "query",
        "name" : "onlyWaitingForCancellationApprove",
        "required" : false,
        "schema" : {
          "default" : false,
          "type" : "boolean"
        }
      },
      "GetOrdersOnlyEstimatedDelivery" : {
        "description" : "Фильтрация заказов с долгой доставкой (31-60 дней) по подтвержденной дате доставки:\n\n* `true` — возвращаются только заказы с неподтвержденной датой доставки.\n* `false` — фильтрация не применяется.\n",
        "in" : "query",
        "name" : "onlyEstimatedDelivery",
        "required" : false,
        "schema" : {
          "default" : false,
          "type" : "boolean"
        }
      },
      "GetOrdersBuyerType" : {
        "description" : "Фильтрация заказов по типу покупателя.\n",
        "in" : "query",
        "name" : "buyerType",
        "required" : false,
        "schema" : {
          "$ref" : "#/components/schemas/OrderBuyerType"
        }
      },
      "PageToken" : {
        "description" : "Идентификатор страницы c результатами.\n\nЕсли параметр не указан, возвращается первая страница.\n\nРекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.\n\nЕсли задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.\n",
        "example" : "eyBuZXh0SWQ6IDIzNDIgfQ==",
        "in" : "query",
        "name" : "page_token",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "PageLimit" : {
        "description" : "Количество значений на одной странице.\n",
        "example" : 20,
        "in" : "query",
        "name" : "limit",
        "required" : false,
        "schema" : {
          "format" : "int32",
          "type" : "integer"
        }
      },
      "ShipmentId" : {
        "description" : "Параметр больше не используется. Вставьте любое число — просто чтобы получился корректный URL.\n",
        "in" : "path",
        "name" : "shipmentId",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        }
      },
      "generateOrderLabel_ShipmentId" : {
        "description" : "Идентификатор грузоместа.",
        "in" : "path",
        "name" : "shipmentId",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        }
      },
      "BoxId" : {
        "description" : "Идентификатор коробки.",
        "in" : "path",
        "name" : "boxId",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        }
      },
      "PageFormat" : {
        "description" : "Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.",
        "in" : "query",
        "name" : "format",
        "required" : false,
        "schema" : {
          "$ref" : "#/components/schemas/PageFormatType"
        }
      },
      "ReturnId" : {
        "description" : "Идентификатор возврата.",
        "in" : "path",
        "name" : "returnId",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        }
      },
      "ItemId" : {
        "description" : "Идентификатор товара в возврате.",
        "in" : "path",
        "name" : "itemId",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        }
      },
      "ImageHash" : {
        "description" : "Хеш ссылки изображения для загрузки.",
        "in" : "path",
        "name" : "imageHash",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "RegionName" : {
        "description" : "Название региона.\n\nВажно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, `Москва`.\n",
        "in" : "query",
        "name" : "name",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "RegionId" : {
        "description" : "Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n",
        "in" : "path",
        "name" : "regionId",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        }
      },
      "params_ShipmentId" : {
        "description" : "Идентификатор отгрузки.",
        "in" : "path",
        "name" : "shipmentId",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        }
      },
      "CancelledOrders" : {
        "description" : "Возвращать ли отмененные заказы.\n\nЗначение по умолчанию — `true`. Если возвращать отмененные заказы не нужно, передайте значение `false`.\n",
        "in" : "query",
        "name" : "cancelledOrders",
        "required" : false,
        "schema" : {
          "default" : true,
          "type" : "boolean"
        }
      },
      "ShipmentPalletLabelsPageFormat" : {
        "description" : "Формат страниц PDF-файла с ярлыками:\n\n* `A4` — по 16 ярлыков на странице.\n* `A8` — по одному ярлыку на странице.\n",
        "in" : "query",
        "name" : "format",
        "required" : false,
        "schema" : {
          "$ref" : "#/components/schemas/ShipmentPalletLabelPageFormatType"
        }
      },
      "OfferIds" : {
        "description" : "Идентификатор товара в каталоге.",
        "in" : "query",
        "name" : "offer_id",
        "required" : false,
        "schema" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        }
      },
      "OfferShopSkus" : {
        "description" : "Ваш SKU товара.\n\nПараметр может быть указан несколько раз, например:\n\n```\n...shop_sku=123&shop_sku=129&shop_sku=141...\n```\n\nВ запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.\n",
        "in" : "query",
        "name" : "shop_sku",
        "required" : false,
        "schema" : {
          "items" : {
            "$ref" : "#/components/schemas/ShopSku"
          },
          "type" : "array"
        }
      },
      "OfferMappingKind" : {
        "description" : "Тип маппинга.",
        "in" : "query",
        "name" : "mapping_kind",
        "required" : false,
        "schema" : {
          "$ref" : "#/components/schemas/OfferMappingKindType"
        }
      },
      "OfferProcessingStatuses" : {
        "description" : "Фильтрация по статусу публикации товара:\n\n* `READY` — товар прошел модерацию.\n* `IN_WORK` — товар проходит модерацию.\n* `NEED_CONTENT` — для товара без SKU на Маркете marketSku нужно найти карточку самостоятельно или создать ее.\n* `NEED_INFO` — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара.\n* `REJECTED` — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары.\n* `SUSPENDED` — товар не прошел модерацию, так как Маркет пока не размещает подобные товары.\n* `OTHER` — товар не прошел модерацию по другой причине.\n\nМожно указать несколько статусов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:\n\n```\n...status=READY,IN_WORK...\n...status=READY&status=IN_WORK...\n```\n\nВ запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке.\n",
        "in" : "query",
        "name" : "status",
        "required" : false,
        "schema" : {
          "items" : {
            "$ref" : "#/components/schemas/OfferProcessingStatusType"
          },
          "type" : "array"
        }
      },
      "OfferAvailabilityStatuses" : {
        "description" : "Фильтрация по планам поставок товара:\n\n* `ACTIVE` — поставки будут.\n* `INACTIVE` — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять.\n* `DELISTED` — архив: товар закончился на складе, и его поставок больше не будет.\n\nМожно указать несколько значений в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:\n\n```\n...availability=INACTIVE,DELISTED...\n...availability=INACTIVE&availability=DELISTED...\n```\n\nВ запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.\n",
        "in" : "query",
        "name" : "availability",
        "required" : false,
        "schema" : {
          "items" : {
            "$ref" : "#/components/schemas/OfferAvailabilityStatusType"
          },
          "type" : "array"
        }
      },
      "CategoryIds" : {
        "description" : "Фильтрация по идентификатору категории на Маркете.\n\nЧтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).\n\nМожно указать несколько идентификаторов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:\n\n```\n...category_id=14727164,14382343...\n...category_id=14727164&category_id=14382343...\n```\n\nВ запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.\n",
        "in" : "query",
        "name" : "category_id",
        "required" : false,
        "schema" : {
          "items" : {
            "type" : "integer"
          },
          "type" : "array"
        }
      },
      "VendorNames" : {
        "description" : "Фильтрация по бренду товара.\n\nМожно указать несколько брендов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:\n\n```\n...vendor=Aqua%20Minerale,Borjomi...\n...vendor=Aqua%20Minerale&vendor=Borjomi...\n```\n\nЧтобы товар попал в результаты фильтрации, его бренд должен точно совпадать с одним из указанных в запросе. Например, если указан бренд Schwarzkopf, то в результатах не будет товаров Schwarzkopf Professional.\n\nЕсли в названии бренда есть символы, которые не входят в таблицу ASCII (в том числе кириллические символы), используйте для них URL-кодирование. Например, пробел — %20, апостроф «'» — %27 и т. д. Подробнее см. в разделе [Кодирование URL русскоязычной Википедии](https://ru.wikipedia.org/wiki/URL#Кодирование_URL).\n\nВ запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке.\n",
        "in" : "query",
        "name" : "vendor",
        "required" : false,
        "schema" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        }
      },
      "params_OfferIds" : {
        "description" : "Идентификатор скрытого предложения.\n",
        "in" : "query",
        "name" : "offer_id",
        "schema" : {
          "items" : {
            "$ref" : "#/components/schemas/ShopSku"
          },
          "type" : "array"
        }
      },
      "PageOffset" : {
        "description" : "Позиция в списке, начиная с которой возвращаются результаты ответа.\n\nИспользуется вместе с параметром `limit`.\n\nЕсли задан `offset`, параметры `page_number` и `page_size` игнорируются.\n\n`offset` игнорируется, если задан `page_token`.\n",
        "in" : "query",
        "name" : "offset",
        "required" : false,
        "schema" : {
          "format" : "int32",
          "type" : "integer"
        }
      },
      "ReportId" : {
        "description" : "Идентификатор отчета, который вы получили после запуска генерации.\n",
        "in" : "path",
        "name" : "reportId",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ReportFormat" : {
        "description" : "Формат отчета.",
        "in" : "query",
        "name" : "format",
        "required" : false,
        "schema" : {
          "$ref" : "#/components/schemas/ReportFormatType"
        }
      },
      "MassOrderLabelsGenerationPageFormat" : {
        "description" : "Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7.",
        "in" : "query",
        "name" : "format",
        "required" : false,
        "schema" : {
          "$ref" : "#/components/schemas/PageFormatType"
        }
      },
      "OutletId" : {
        "description" : "Идентификатор точки продаж.",
        "in" : "path",
        "name" : "outletId",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        }
      },
      "OutletIds" : {
        "description" : "Список идентификаторов точек продаж, для которых нужно получить информацию о лицензиях. Идентификаторы указываются через запятую.\n\nВ запросе должен быть либо параметр `outletIds`, либо параметр `ids`. Запрос с обоими параметрами или без них приведет к ошибке.\n",
        "in" : "query",
        "name" : "outletIds",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array",
          "uniqueItems" : true
        }
      },
      "LicenseIds" : {
        "description" : "Список идентификаторов лицензий.",
        "in" : "query",
        "name" : "ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array",
          "uniqueItems" : true
        }
      },
      "FromDate" : {
        "description" : "Начальная дата обновления отзывов.\n\nЕсли параметр указан, возвращаются отзывы, которые были написаны или обновлены с этой даты.\n\nФормат даты: `ГГГГ-ММ-ДД`.\n",
        "in" : "query",
        "name" : "from_date",
        "required" : false,
        "schema" : {
          "format" : "date",
          "type" : "string"
        }
      },
      "OffersQuery" : {
        "description" : "Поисковый запрос.\n\nПоддерживается язык запросов.\n\nЗначение по умолчанию: все предложения магазина, размещенные на Маркете.\n",
        "in" : "query",
        "name" : "query",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "OffersFeedId" : {
        "description" : "Идентификатор прайс-листа.",
        "in" : "query",
        "name" : "feedId",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        }
      },
      "OffersShopCategoryId" : {
        "description" : "Идентификатор категории предложения, указанный магазином в прайс-листе.\n\nПараметр выводится только для предложений, у которых указана категория в прайс-листе.\n\nПараметр доступен начиная с версии 2.0 партнерского API.\n",
        "in" : "query",
        "name" : "shopCategoryId",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "OffersCurrency" : {
        "description" : "Валюта, в которой указана цена предложения.\n\nВозможные значения:\n\n* `BYN` — белорусский рубль.\n\n* `KZT` — казахстанский тенге.\n\n* `RUR` — российский рубль.\n\n* `UAH` — украинская гривна.\n",
        "in" : "query",
        "name" : "currency",
        "required" : false,
        "schema" : {
          "$ref" : "#/components/schemas/CurrencyType"
        }
      },
      "OffersMatched" : {
        "description" : "Фильтр по признаку соотнесения предложения и карточки модели.\n\nВозможные значения:\n\n* `0 / FALSE / NO` — поиск выполняется среди предложений, не соотнесенных ни с какой карточкой модели.\n\n* `1 / TRUE / YES` — поиск выполняется среди предложений, соотнесенных с карточками моделей).\n",
        "in" : "query",
        "name" : "matched",
        "required" : false,
        "schema" : {
          "type" : "boolean"
        }
      },
      "OffersChunk" : {
        "description" : "Номер сегмента с результатами.\n\nЗначение по умолчанию: `0`.\n\n{% note info %}\n\nНомера сегментов запрашиваются последовательно, пока не будет получен сегмент с пустым ответом. Пустой ответ означает, что все предложения магазина получены.\n\n{% endnote %}\n\n{% note alert %}\n\nНумерация начинается с 0. Чтобы запросить первую страницу, необходимо указать `chunk=0` и т. д.\n\n{% endnote %}\n",
        "in" : "query",
        "name" : "chunk",
        "required" : false,
        "schema" : {
          "format" : "int32",
          "type" : "integer"
        }
      },
      "FeedId" : {
        "description" : "Идентификатор прайс-листа.",
        "in" : "path",
        "name" : "feedId",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        }
      },
      "FeedIndexLogsPublishedTimeFrom" : {
        "description" : "Начальная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.\n\nЗначение по умолчанию: последние восемь дней со времени отправки запроса.\n",
        "in" : "query",
        "name" : "published_time_from",
        "required" : false,
        "schema" : {
          "format" : "date-time",
          "type" : "string"
        }
      },
      "FeedIndexLogsPublishedTimeTo" : {
        "description" : "Конечная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-31T00:42:42+03:00`.\n\nЗначение по умолчанию: дата и время отправки запроса.\n\n{% note info %}\n\nЕсли во время переключения между страницами выходных данных на Яндекс Маркете появятся новые результаты индексации прайс-листа, вы не получите часть данных. Чтобы этого не произошло, зафиксируйте выходные данные с помощью входного параметра `published_time_to`. Значение параметра не должно быть датой из будущего.\n\n{% endnote %}\n",
        "in" : "query",
        "name" : "published_time_to",
        "required" : false,
        "schema" : {
          "format" : "date-time",
          "type" : "string"
        }
      },
      "FeedIndexLogsStatus" : {
        "description" : "Статус индексации и проверки прайс-листа на соответствие техническим требованиям.\n\nВозможные значения:\n* `ERROR` — произошли ошибки.\n* `OK` — обработан без ошибок.\n* `WARNING` — наблюдались некритичные проблемы.\n",
        "in" : "query",
        "name" : "status",
        "required" : false,
        "schema" : {
          "$ref" : "#/components/schemas/FeedIndexLogsStatusType"
        }
      },
      "ModelQuery" : {
        "description" : "Поисковый запрос по названию модели товара.",
        "in" : "query",
        "name" : "query",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ModelRegionId" : {
        "description" : "Идентификатор региона.\n\nИдентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n",
        "in" : "query",
        "name" : "regionId",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        }
      },
      "Currency" : {
        "description" : "Валюта, в которой отображаются цены предложений на страницах с результатами поиска.\n\nВозможные значения:\n\n* `BYN` — белорусский рубль.\n\n* `KZT` — казахстанский тенге.\n\n* `RUR` — российский рубль.\n\n* `UAH` — украинская гривна.\n\nЗначение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).\n",
        "in" : "query",
        "name" : "currency",
        "required" : false,
        "schema" : {
          "$ref" : "#/components/schemas/CurrencyType"
        }
      },
      "ModelId" : {
        "description" : "Идентификатор модели товара.",
        "in" : "path",
        "name" : "modelId",
        "required" : true,
        "schema" : {
          "exclusiveMinimum" : true,
          "format" : "int64",
          "minimum" : 0,
          "type" : "integer"
        }
      },
      "OrderByPrice" : {
        "description" : "Направление сортировки по цене.\n\nВозможные значения:\n* `ASC` — сортировка по возрастанию.\n* `DESC` — сортировка по убыванию.\n\nЗначение по умолчанию: предложения выводятся в произвольном порядке.\n",
        "in" : "query",
        "name" : "orderByPrice",
        "required" : false,
        "schema" : {
          "$ref" : "#/components/schemas/SortOrderType"
        }
      },
      "ModelPageCount" : {
        "description" : "Количество предложений на странице ответа.",
        "in" : "query",
        "name" : "count",
        "required" : false,
        "schema" : {
          "default" : 10,
          "format" : "int32",
          "type" : "integer"
        }
      },
      "ChatId" : {
        "description" : "Идентификатор чата.",
        "in" : "query",
        "name" : "chatId",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        }
      }
    },
    "responses" : {
      "400" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ApiClientDataErrorResponse"
            }
          }
        },
        "description" : "Запрос содержит неправильные данные."
      },
      "401" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ApiUnauthorizedErrorResponse"
            }
          }
        },
        "description" : "В запросе не указаны данные для авторизации."
      },
      "403" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ApiForbiddenErrorResponse"
            }
          }
        },
        "description" : "Данные для авторизации неверны или доступ к ресурсу запрещен."
      },
      "404" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ApiNotFoundErrorResponse"
            }
          }
        },
        "description" : "Запрашиваемый ресурс не найден."
      },
      "420" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ApiLimitErrorResponse"
            }
          }
        },
        "description" : "Превышено ограничение на доступ к ресурсу."
      },
      "500" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ApiServerErrorResponse"
            }
          }
        },
        "description" : "Внутренняя ошибка сервера."
      },
      "423" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ApiLockedErrorResponse"
            }
          }
        },
        "description" : "К ресурсу нельзя применить указанный метод."
      }
    },
    "schemas" : {
      "GetBusinessSettingsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/GetBusinessSettingsInfoDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Ответ на запрос настроек кабинета.",
        "example" : {
          "result" : {
            "settings" : {
              "currency" : "RUR",
              "onlyDefaultPrice" : true
            },
            "info" : {
              "name" : "name",
              "id" : 0
            }
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "ApiClientDataErrorResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiErrorResponse"
        } ],
        "description" : "Ошибка в данных переданных от клиента.",
        "example" : {
          "errors" : [ {
            "code" : "code",
            "message" : "message"
          }, {
            "code" : "code",
            "message" : "message"
          } ],
          "status" : "OK"
        },
        "type" : "object"
      },
      "ApiUnauthorizedErrorResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiErrorResponse"
        } ],
        "description" : "В запросе не указаны авторизационные данные.",
        "example" : {
          "errors" : [ {
            "code" : "code",
            "message" : "message"
          }, {
            "code" : "code",
            "message" : "message"
          } ],
          "status" : "OK"
        },
        "type" : "object"
      },
      "ApiForbiddenErrorResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiErrorResponse"
        } ],
        "description" : "Неверны авторизационные данные, указанные в запросе, или запрещен доступ к запрашиваемому ресурсу.",
        "example" : {
          "errors" : [ {
            "code" : "code",
            "message" : "message"
          }, {
            "code" : "code",
            "message" : "message"
          } ],
          "status" : "OK"
        },
        "type" : "object"
      },
      "ApiNotFoundErrorResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiErrorResponse"
        } ],
        "description" : "Запрашиваемый ресурс не найден.",
        "example" : {
          "errors" : [ {
            "code" : "code",
            "message" : "message"
          }, {
            "code" : "code",
            "message" : "message"
          } ],
          "status" : "OK"
        },
        "type" : "object"
      },
      "ApiLimitErrorResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiErrorResponse"
        } ],
        "description" : "Превышено ограничение на доступ к ресурсу.",
        "example" : {
          "errors" : [ {
            "code" : "code",
            "message" : "message"
          }, {
            "code" : "code",
            "message" : "message"
          } ],
          "status" : "OK"
        },
        "type" : "object"
      },
      "ApiServerErrorResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiErrorResponse"
        } ],
        "description" : "Внутренняя ошибка сервера.",
        "example" : {
          "errors" : [ {
            "code" : "code",
            "message" : "message"
          }, {
            "code" : "code",
            "message" : "message"
          } ],
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetCampaignsResponse" : {
        "description" : "Результаты поиска магазинов.",
        "example" : {
          "campaigns" : [ {
            "clientId" : 6,
            "business" : {
              "name" : "name",
              "id" : 0
            },
            "domain" : "domain",
            "placementType" : "FBS",
            "id" : 0
          }, {
            "clientId" : 6,
            "business" : {
              "name" : "name",
              "id" : 0
            },
            "domain" : "domain",
            "placementType" : "FBS",
            "id" : 0
          } ],
          "pager" : {
            "total" : 1,
            "pagesCount" : 7,
            "pageSize" : 9,
            "from" : 5,
            "to" : 5,
            "currentPage" : 2
          }
        },
        "properties" : {
          "campaigns" : {
            "description" : "Список с информацией по каждому магазину.",
            "items" : {
              "$ref" : "#/components/schemas/CampaignDTO"
            },
            "type" : "array"
          },
          "pager" : {
            "$ref" : "#/components/schemas/FlippingPagerDTO"
          }
        },
        "required" : [ "campaigns" ],
        "type" : "object"
      },
      "GetCampaignResponse" : {
        "description" : "Информация о магазине к данным идентификатора кампании.",
        "example" : {
          "campaign" : {
            "clientId" : 6,
            "business" : {
              "name" : "name",
              "id" : 0
            },
            "domain" : "domain",
            "placementType" : "FBS",
            "id" : 0
          }
        },
        "properties" : {
          "campaign" : {
            "$ref" : "#/components/schemas/CampaignDTO"
          }
        },
        "type" : "object"
      },
      "GetCampaignLoginsResponse" : {
        "description" : "Ответ на запрос списка логинов, связанных с магазином.",
        "example" : {
          "logins" : [ "logins", "logins" ]
        },
        "properties" : {
          "logins" : {
            "description" : "Список логинов.",
            "items" : {
              "description" : "Логин.",
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "logins" ],
        "type" : "object"
      },
      "GetCampaignSettingsResponse" : {
        "description" : "Ответ на запрос настроек магазина.",
        "example" : {
          "settings" : {
            "showInPremium" : true,
            "showInContext" : true,
            "localRegion" : {
              "delivery" : {
                "schedule" : {
                  "customWorkingDays" : [ "23-09-2022", "23-09-2022" ],
                  "period" : {
                    "fromDate" : "23-09-2022",
                    "toDate" : "23-09-2022"
                  },
                  "customHolidays" : [ "23-09-2022", "23-09-2022" ],
                  "weeklyHolidays" : [ 1, 1 ],
                  "availableOnHolidays" : true,
                  "totalHolidays" : [ "23-09-2022", "23-09-2022" ]
                }
              },
              "name" : "name",
              "id" : 6,
              "type" : "OTHER",
              "deliveryOptionsSource" : "WEB"
            },
            "countryRegion" : 0,
            "shopName" : "shopName",
            "useOpenStat" : true
          }
        },
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/CampaignSettingsDTO"
          }
        },
        "type" : "object"
      },
      "GetCampaignRegionResponse" : {
        "description" : "Ответ на запрос региона магазина.",
        "example" : {
          "region" : {
            "parent" : null,
            "children" : [ null, null ],
            "name" : "name",
            "id" : 0,
            "type" : "OTHER"
          }
        },
        "properties" : {
          "region" : {
            "$ref" : "#/components/schemas/RegionDTO"
          }
        },
        "type" : "object"
      },
      "GetOrderResponse" : {
        "example" : {
          "order" : {
            "delivery" : {
              "dispatchType" : "UNKNOWN",
              "address" : {
                "country" : "country",
                "city" : "city",
                "postcode" : "postcode",
                "gps" : {
                  "latitude" : 9.965781217890562,
                  "longitude" : 9.369310271410669
                },
                "house" : "house",
                "subway" : "subway",
                "phone" : "phone",
                "street" : "street",
                "district" : "district",
                "recipient" : "recipient",
                "entryphone" : "entryphone",
                "block" : "block",
                "entrance" : "entrance",
                "floor" : "floor",
                "apartment" : "apartment"
              },
              "liftType" : "NOT_NEEDED",
              "deliveryServiceId" : 6,
              "vat" : null,
              "estimated" : true,
              "dates" : {
                "fromDate" : "23-09-2022",
                "toDate" : "23-09-2022",
                "fromTime" : "fromTime",
                "toTime" : "toTime",
                "realDeliveryDate" : "23-09-2022"
              },
              "type" : "DELIVERY",
              "serviceName" : "serviceName",
              "shipments" : [ {
                "boxes" : [ {
                  "fulfilmentId" : "fulfilmentId",
                  "id" : 3
                }, {
                  "fulfilmentId" : "fulfilmentId",
                  "id" : 3
                } ],
                "id" : 6,
                "shipmentDate" : "23-09-2022",
                "shipmentTime" : "shipmentTime",
                "tracks" : [ {
                  "trackCode" : "trackCode",
                  "deliveryServiceId" : 9
                }, {
                  "trackCode" : "trackCode",
                  "deliveryServiceId" : 9
                } ]
              }, {
                "boxes" : [ {
                  "fulfilmentId" : "fulfilmentId",
                  "id" : 3
                }, {
                  "fulfilmentId" : "fulfilmentId",
                  "id" : 3
                } ],
                "id" : 6,
                "shipmentDate" : "23-09-2022",
                "shipmentTime" : "shipmentTime",
                "tracks" : [ {
                  "trackCode" : "trackCode",
                  "deliveryServiceId" : 9
                }, {
                  "trackCode" : "trackCode",
                  "deliveryServiceId" : 9
                } ]
              } ],
              "tracks" : [ {
                "trackCode" : "trackCode",
                "deliveryServiceId" : 9
              }, {
                "trackCode" : "trackCode",
                "deliveryServiceId" : 9
              } ],
              "courier" : {
                "vehicleDescription" : "vehicleDescription",
                "phone" : "phone",
                "phoneExtension" : "phoneExtension",
                "fullName" : "fullName",
                "vehicleNumber" : "vehicleNumber"
              },
              "price" : 5.025004791520295,
              "outletStorageLimitDate" : "23-09-2022",
              "eacType" : "MERCHANT_TO_COURIER",
              "liftPrice" : 8.762042012749001,
              "eacCode" : "eacCode",
              "id" : "id",
              "region" : {
                "parent" : null,
                "children" : [ null, null ],
                "name" : "name",
                "id" : 0,
                "type" : "OTHER"
              },
              "deliveryPartnerType" : "SHOP",
              "outletCode" : "outletCode"
            },
            "notes" : "notes",
            "substatus" : "RESERVATION_EXPIRED",
            "deliveryTotal" : 1.4658129805029452,
            "buyerItemsTotalBeforeDiscount" : 2.3021358869347655,
            "creationDate" : "23-09-2022 09:12:41",
            "buyerItemsTotal" : 5.962133916683182,
            "paymentType" : "PREPAID",
            "buyer" : {
              "lastName" : "lastName",
              "firstName" : "firstName",
              "middleName" : "middleName",
              "id" : "id",
              "type" : "PERSON"
            },
            "expiryDate" : "23-09-2022 09:12:41",
            "buyerTotalBeforeDiscount" : 7.061401241503109,
            "itemsTotal" : 6.027456183070403,
            "buyerTotal" : 5.637376656633329,
            "subsidies" : [ {
              "amount" : 4.965218492984954,
              "type" : "YANDEX_CASHBACK"
            }, {
              "amount" : 4.965218492984954,
              "type" : "YANDEX_CASHBACK"
            } ],
            "paymentMethod" : "CASH_ON_DELIVERY",
            "currency" : "RUR",
            "fake" : true,
            "id" : 0,
            "taxSystem" : "OSN",
            "cancelRequested" : true,
            "items" : [ {
              "offerName" : "offerName",
              "subsidy" : 1.0246457001441578,
              "instances" : [ {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              }, {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              } ],
              "priceBeforeDiscount" : 7.386281948385884,
              "count" : 1,
              "vat" : "NO_VAT",
              "requiredInstanceTypes" : [ "CIS", "CIS" ],
              "buyerPriceBeforeDiscount" : 4.145608029883936,
              "shopSku" : "shopSku",
              "price" : 3.616076749251911,
              "partnerWarehouseId" : "partnerWarehouseId",
              "subsidies" : [ {
                "amount" : 1.1730742509559433,
                "type" : "YANDEX_CASHBACK"
              }, {
                "amount" : 1.1730742509559433,
                "type" : "YANDEX_CASHBACK"
              } ],
              "offerId" : "offerId",
              "buyerPrice" : 2.027123023002322,
              "details" : [ {
                "updateDate" : "23-09-2022",
                "itemStatus" : "REJECTED",
                "itemCount" : 7
              }, {
                "updateDate" : "23-09-2022",
                "itemStatus" : "REJECTED",
                "itemCount" : 7
              } ],
              "id" : 9,
              "promos" : [ {
                "subsidy" : 6.84685269835264,
                "shopPromoId" : "shopPromoId",
                "discount" : 1.4894159098541704,
                "marketPromoId" : "marketPromoId",
                "type" : "DIRECT_DISCOUNT"
              }, {
                "subsidy" : 6.84685269835264,
                "shopPromoId" : "shopPromoId",
                "discount" : 1.4894159098541704,
                "marketPromoId" : "marketPromoId",
                "type" : "DIRECT_DISCOUNT"
              } ]
            }, {
              "offerName" : "offerName",
              "subsidy" : 1.0246457001441578,
              "instances" : [ {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              }, {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              } ],
              "priceBeforeDiscount" : 7.386281948385884,
              "count" : 1,
              "vat" : "NO_VAT",
              "requiredInstanceTypes" : [ "CIS", "CIS" ],
              "buyerPriceBeforeDiscount" : 4.145608029883936,
              "shopSku" : "shopSku",
              "price" : 3.616076749251911,
              "partnerWarehouseId" : "partnerWarehouseId",
              "subsidies" : [ {
                "amount" : 1.1730742509559433,
                "type" : "YANDEX_CASHBACK"
              }, {
                "amount" : 1.1730742509559433,
                "type" : "YANDEX_CASHBACK"
              } ],
              "offerId" : "offerId",
              "buyerPrice" : 2.027123023002322,
              "details" : [ {
                "updateDate" : "23-09-2022",
                "itemStatus" : "REJECTED",
                "itemCount" : 7
              }, {
                "updateDate" : "23-09-2022",
                "itemStatus" : "REJECTED",
                "itemCount" : 7
              } ],
              "id" : 9,
              "promos" : [ {
                "subsidy" : 6.84685269835264,
                "shopPromoId" : "shopPromoId",
                "discount" : 1.4894159098541704,
                "marketPromoId" : "marketPromoId",
                "type" : "DIRECT_DISCOUNT"
              }, {
                "subsidy" : 6.84685269835264,
                "shopPromoId" : "shopPromoId",
                "discount" : 1.4894159098541704,
                "marketPromoId" : "marketPromoId",
                "type" : "DIRECT_DISCOUNT"
              } ]
            } ],
            "status" : "PLACING",
            "updatedAt" : "23-09-2022 09:12:41"
          }
        },
        "properties" : {
          "order" : {
            "$ref" : "#/components/schemas/OrderDTO"
          }
        },
        "type" : "object"
      },
      "OrderStatusType" : {
        "description" : "Статус заказа:\n\n* `CANCELLED` — отменен.\n\n* `DELIVERED` — получен покупателем.\n\n* `DELIVERY` — передан в службу доставки.\n\n* `PICKUP` — доставлен в пункт самовывоза.\n\n* `PROCESSING` — находится в обработке.\n\n* `PENDING` — ожидает обработки со стороны продавца.\n\n* `UNPAID` — оформлен, но еще не оплачен (если выбрана оплата при оформлении).\n\n* `PLACING` — оформляется, подготовка к резервированию.\n\n* `RESERVED` — зарезервирован, но недооформлен.\n\n* `PARTIALLY_RETURNED` — возвращен частично.\n\n* `RETURNED` — возвращен полностью.\n\n* `UNKNOWN` — неизвестный статус.\n\nТакже могут возвращаться другие значения. Обрабатывать их не требуется.\n",
        "enum" : [ "PLACING", "RESERVED", "UNPAID", "PROCESSING", "DELIVERY", "PICKUP", "DELIVERED", "CANCELLED", "PENDING", "PARTIALLY_RETURNED", "RETURNED", "UNKNOWN" ],
        "type" : "string"
      },
      "OrderSubstatusType" : {
        "description" : "Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).\n\n* Значения для заказа в статусе `PROCESSING`:\n\n    * `STARTED` — заказ подтвержден, его можно начать обрабатывать.\n\n    * `READY_TO_SHIP` — заказ собран и готов к отправке.\n\n* Значения для заказа в статусе `CANCELLED`:\n\n    * `PROCESSING_EXPIRED` — значение более не используется.\n\n    * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.\n\n    * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.\n\n    * `SHOP_FAILED` — магазин не может выполнить заказ.\n\n    * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.\n\n    * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.\n\n    * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.\n\n    * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.\n\n    * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.\n\n    * `USER_UNREACHABLE` — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:\n\n      * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;\n      * перерыв между первым и третьим звонком не менее 90 минут;\n      * соединение не короче 5 секунд.\n\n      Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400.\n\n* `TECHNICAL_ERROR` — техническая ошибка на стороне Маркета. Обратитесь в поддержку.\n\nТакже могут возвращаться другие значения. Обрабатывать их не требуется.\n",
        "enum" : [ "RESERVATION_EXPIRED", "USER_NOT_PAID", "USER_UNREACHABLE", "USER_CHANGED_MIND", "USER_REFUSED_DELIVERY", "USER_REFUSED_PRODUCT", "SHOP_FAILED", "USER_REFUSED_QUALITY", "REPLACING_ORDER", "PROCESSING_EXPIRED", "PENDING_EXPIRED", "SHOP_PENDING_CANCELLED", "PENDING_CANCELLED", "USER_FRAUD", "RESERVATION_FAILED", "USER_PLACED_OTHER_ORDER", "USER_BOUGHT_CHEAPER", "MISSING_ITEM", "BROKEN_ITEM", "WRONG_ITEM", "PICKUP_EXPIRED", "DELIVERY_PROBLEMS", "LATE_CONTACT", "CUSTOM", "DELIVERY_SERVICE_FAILED", "WAREHOUSE_FAILED_TO_SHIP", "DELIVERY_SERIVCE_UNDELIVERED", "DELIVERY_SERVICE_UNDELIVERED", "PREORDER", "AWAIT_CONFIRMATION", "STARTED", "PACKAGING", "READY_TO_SHIP", "SHIPPED", "ASYNC_PROCESSING", "USER_REFUSED_TO_PROVIDE_PERSONAL_DATA", "WAITING_USER_INPUT", "WAITING_BANK_DECISION", "BANK_REJECT_CREDIT_OFFER", "CUSTOMER_REJECT_CREDIT_OFFER", "CREDIT_OFFER_FAILED", "AWAIT_DELIVERY_DATES_CONFIRMATION", "SERVICE_FAULT", "DELIVERY_SERVICE_RECEIVED", "USER_RECEIVED", "WAITING_FOR_STOCKS", "AS_PART_OF_MULTI_ORDER", "READY_FOR_LAST_MILE", "LAST_MILE_STARTED", "ANTIFRAUD", "DELIVERY_USER_NOT_RECEIVED", "DELIVERY_SERVICE_DELIVERED", "DELIVERED_USER_NOT_RECEIVED", "USER_WANTED_ANOTHER_PAYMENT_METHOD", "USER_RECEIVED_TECHNICAL_ERROR", "USER_FORGOT_TO_USE_BONUS", "RECEIVED_ON_DISTRIBUTION_CENTER", "DELIVERY_SERVICE_NOT_RECEIVED", "DELIVERY_SERVICE_LOST", "SHIPPED_TO_WRONG_DELIVERY_SERVICE", "DELIVERED_USER_RECEIVED", "WAITING_TINKOFF_DECISION", "COURIER_SEARCH", "COURIER_FOUND", "COURIER_IN_TRANSIT_TO_SENDER", "COURIER_ARRIVED_TO_SENDER", "COURIER_RECEIVED", "COURIER_NOT_FOUND", "COURIER_NOT_DELIVER_ORDER", "COURIER_RETURNS_ORDER", "COURIER_RETURNED_ORDER", "WAITING_USER_DELIVERY_INPUT", "PICKUP_SERVICE_RECEIVED", "PICKUP_USER_RECEIVED", "CANCELLED_COURIER_NOT_FOUND", "COURIER_NOT_COME_FOR_ORDER", "DELIVERY_NOT_MANAGED_REGION", "INCOMPLETE_CONTACT_INFORMATION", "INCOMPLETE_MULTI_ORDER", "INAPPROPRIATE_WEIGHT_SIZE", "TECHNICAL_ERROR", "SORTING_CENTER_LOST", "COURIER_SEARCH_NOT_STARTED", "LOST", "AWAIT_PAYMENT", "AWAIT_LAVKA_RESERVATION", "USER_WANTS_TO_CHANGE_ADDRESS", "FULL_NOT_RANSOM", "PRESCRIPTION_MISMATCH", "DROPOFF_LOST", "DROPOFF_CLOSED", "DELIVERY_TO_STORE_STARTED", "USER_WANTS_TO_CHANGE_DELIVERY_DATE", "WRONG_ITEM_DELIVERED", "DAMAGED_BOX", "AWAIT_DELIVERY_DATES", "LAST_MILE_COURIER_SEARCH", "PICKUP_POINT_CLOSED", "LEGAL_INFO_CHANGED", "USER_HAS_NO_TIME_TO_PICKUP_ORDER", "DELIVERY_CUSTOMS_ARRIVED", "DELIVERY_CUSTOMS_CLEARED", "FIRST_MILE_DELIVERY_SERVICE_RECEIVED", "AWAIT_AUTO_DELIVERY_DATES", "AWAIT_USER_PERSONAL_DATA", "NO_PERSONAL_DATA_EXPIRED", "CUSTOMS_PROBLEMS", "AWAIT_CASHIER", "WAITING_POSTPAID_BUDGET_RESERVATION", "AWAIT_SERVICEABLE_CONFIRMATION", "POSTPAID_BUDGET_RESERVATION_FAILED", "AWAIT_CUSTOM_PRICE_CONFIRMATION", "READY_FOR_PICKUP", "UNKNOWN" ],
        "type" : "string"
      },
      "OrderDeliveryDispatchType" : {
        "description" : "Способ отгрузки:\n\n* `BUYER` — доставка покупателю.\n\n* `MARKET_PARTNER_OUTLET` — доставка в пункт выдачи партнера.\n\n* `MARKET_BRANDED_OUTLET` — доставка в пункт выдачи заказов Маркета.\n\n* `SHOP_OUTLET` — доставка в пункт выдачи заказов магазина.\n\n* `DROPOFF` — доставка в пункт выдачи, который принимает заказы от продавцов и передает их курьерам.\n\n* `UNKNOWN` — неизвестный тип.\n",
        "enum" : [ "UNKNOWN", "BUYER", "MARKET_PARTNER_OUTLET", "MARKET_BRANDED_OUTLET", "SHOP_OUTLET", "DROPOFF" ],
        "type" : "string"
      },
      "OrderBuyerType" : {
        "description" : "Тип покупателя:\n\n* `PERSON` — физическое лицо.\n\n* `BUSINESS` — организация.\n",
        "enum" : [ "PERSON", "BUSINESS" ],
        "type" : "string"
      },
      "GetOrdersResponse" : {
        "description" : "Модель для ответа API списка информации по заказам.",
        "example" : {
          "pager" : {
            "total" : 1,
            "pagesCount" : 7,
            "pageSize" : 9,
            "from" : 5,
            "to" : 5,
            "currentPage" : 2
          },
          "orders" : [ {
            "delivery" : {
              "dispatchType" : "UNKNOWN",
              "address" : {
                "country" : "country",
                "city" : "city",
                "postcode" : "postcode",
                "gps" : {
                  "latitude" : 9.965781217890562,
                  "longitude" : 9.369310271410669
                },
                "house" : "house",
                "subway" : "subway",
                "phone" : "phone",
                "street" : "street",
                "district" : "district",
                "recipient" : "recipient",
                "entryphone" : "entryphone",
                "block" : "block",
                "entrance" : "entrance",
                "floor" : "floor",
                "apartment" : "apartment"
              },
              "liftType" : "NOT_NEEDED",
              "deliveryServiceId" : 6,
              "vat" : null,
              "estimated" : true,
              "dates" : {
                "fromDate" : "23-09-2022",
                "toDate" : "23-09-2022",
                "fromTime" : "fromTime",
                "toTime" : "toTime",
                "realDeliveryDate" : "23-09-2022"
              },
              "type" : "DELIVERY",
              "serviceName" : "serviceName",
              "shipments" : [ {
                "boxes" : [ {
                  "fulfilmentId" : "fulfilmentId",
                  "id" : 3
                }, {
                  "fulfilmentId" : "fulfilmentId",
                  "id" : 3
                } ],
                "id" : 6,
                "shipmentDate" : "23-09-2022",
                "shipmentTime" : "shipmentTime",
                "tracks" : [ {
                  "trackCode" : "trackCode",
                  "deliveryServiceId" : 9
                }, {
                  "trackCode" : "trackCode",
                  "deliveryServiceId" : 9
                } ]
              }, {
                "boxes" : [ {
                  "fulfilmentId" : "fulfilmentId",
                  "id" : 3
                }, {
                  "fulfilmentId" : "fulfilmentId",
                  "id" : 3
                } ],
                "id" : 6,
                "shipmentDate" : "23-09-2022",
                "shipmentTime" : "shipmentTime",
                "tracks" : [ {
                  "trackCode" : "trackCode",
                  "deliveryServiceId" : 9
                }, {
                  "trackCode" : "trackCode",
                  "deliveryServiceId" : 9
                } ]
              } ],
              "tracks" : [ {
                "trackCode" : "trackCode",
                "deliveryServiceId" : 9
              }, {
                "trackCode" : "trackCode",
                "deliveryServiceId" : 9
              } ],
              "courier" : {
                "vehicleDescription" : "vehicleDescription",
                "phone" : "phone",
                "phoneExtension" : "phoneExtension",
                "fullName" : "fullName",
                "vehicleNumber" : "vehicleNumber"
              },
              "price" : 5.025004791520295,
              "outletStorageLimitDate" : "23-09-2022",
              "eacType" : "MERCHANT_TO_COURIER",
              "liftPrice" : 8.762042012749001,
              "eacCode" : "eacCode",
              "id" : "id",
              "region" : {
                "parent" : null,
                "children" : [ null, null ],
                "name" : "name",
                "id" : 0,
                "type" : "OTHER"
              },
              "deliveryPartnerType" : "SHOP",
              "outletCode" : "outletCode"
            },
            "notes" : "notes",
            "substatus" : "RESERVATION_EXPIRED",
            "deliveryTotal" : 1.4658129805029452,
            "buyerItemsTotalBeforeDiscount" : 2.3021358869347655,
            "creationDate" : "23-09-2022 09:12:41",
            "buyerItemsTotal" : 5.962133916683182,
            "paymentType" : "PREPAID",
            "buyer" : {
              "lastName" : "lastName",
              "firstName" : "firstName",
              "middleName" : "middleName",
              "id" : "id",
              "type" : "PERSON"
            },
            "expiryDate" : "23-09-2022 09:12:41",
            "buyerTotalBeforeDiscount" : 7.061401241503109,
            "itemsTotal" : 6.027456183070403,
            "buyerTotal" : 5.637376656633329,
            "subsidies" : [ {
              "amount" : 4.965218492984954,
              "type" : "YANDEX_CASHBACK"
            }, {
              "amount" : 4.965218492984954,
              "type" : "YANDEX_CASHBACK"
            } ],
            "paymentMethod" : "CASH_ON_DELIVERY",
            "currency" : "RUR",
            "fake" : true,
            "id" : 0,
            "taxSystem" : "OSN",
            "cancelRequested" : true,
            "items" : [ {
              "offerName" : "offerName",
              "subsidy" : 1.0246457001441578,
              "instances" : [ {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              }, {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              } ],
              "priceBeforeDiscount" : 7.386281948385884,
              "count" : 1,
              "vat" : "NO_VAT",
              "requiredInstanceTypes" : [ "CIS", "CIS" ],
              "buyerPriceBeforeDiscount" : 4.145608029883936,
              "shopSku" : "shopSku",
              "price" : 3.616076749251911,
              "partnerWarehouseId" : "partnerWarehouseId",
              "subsidies" : [ {
                "amount" : 1.1730742509559433,
                "type" : "YANDEX_CASHBACK"
              }, {
                "amount" : 1.1730742509559433,
                "type" : "YANDEX_CASHBACK"
              } ],
              "offerId" : "offerId",
              "buyerPrice" : 2.027123023002322,
              "details" : [ {
                "updateDate" : "23-09-2022",
                "itemStatus" : "REJECTED",
                "itemCount" : 7
              }, {
                "updateDate" : "23-09-2022",
                "itemStatus" : "REJECTED",
                "itemCount" : 7
              } ],
              "id" : 9,
              "promos" : [ {
                "subsidy" : 6.84685269835264,
                "shopPromoId" : "shopPromoId",
                "discount" : 1.4894159098541704,
                "marketPromoId" : "marketPromoId",
                "type" : "DIRECT_DISCOUNT"
              }, {
                "subsidy" : 6.84685269835264,
                "shopPromoId" : "shopPromoId",
                "discount" : 1.4894159098541704,
                "marketPromoId" : "marketPromoId",
                "type" : "DIRECT_DISCOUNT"
              } ]
            }, {
              "offerName" : "offerName",
              "subsidy" : 1.0246457001441578,
              "instances" : [ {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              }, {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              } ],
              "priceBeforeDiscount" : 7.386281948385884,
              "count" : 1,
              "vat" : "NO_VAT",
              "requiredInstanceTypes" : [ "CIS", "CIS" ],
              "buyerPriceBeforeDiscount" : 4.145608029883936,
              "shopSku" : "shopSku",
              "price" : 3.616076749251911,
              "partnerWarehouseId" : "partnerWarehouseId",
              "subsidies" : [ {
                "amount" : 1.1730742509559433,
                "type" : "YANDEX_CASHBACK"
              }, {
                "amount" : 1.1730742509559433,
                "type" : "YANDEX_CASHBACK"
              } ],
              "offerId" : "offerId",
              "buyerPrice" : 2.027123023002322,
              "details" : [ {
                "updateDate" : "23-09-2022",
                "itemStatus" : "REJECTED",
                "itemCount" : 7
              }, {
                "updateDate" : "23-09-2022",
                "itemStatus" : "REJECTED",
                "itemCount" : 7
              } ],
              "id" : 9,
              "promos" : [ {
                "subsidy" : 6.84685269835264,
                "shopPromoId" : "shopPromoId",
                "discount" : 1.4894159098541704,
                "marketPromoId" : "marketPromoId",
                "type" : "DIRECT_DISCOUNT"
              }, {
                "subsidy" : 6.84685269835264,
                "shopPromoId" : "shopPromoId",
                "discount" : 1.4894159098541704,
                "marketPromoId" : "marketPromoId",
                "type" : "DIRECT_DISCOUNT"
              } ]
            } ],
            "status" : "PLACING",
            "updatedAt" : "23-09-2022 09:12:41"
          }, {
            "delivery" : {
              "dispatchType" : "UNKNOWN",
              "address" : {
                "country" : "country",
                "city" : "city",
                "postcode" : "postcode",
                "gps" : {
                  "latitude" : 9.965781217890562,
                  "longitude" : 9.369310271410669
                },
                "house" : "house",
                "subway" : "subway",
                "phone" : "phone",
                "street" : "street",
                "district" : "district",
                "recipient" : "recipient",
                "entryphone" : "entryphone",
                "block" : "block",
                "entrance" : "entrance",
                "floor" : "floor",
                "apartment" : "apartment"
              },
              "liftType" : "NOT_NEEDED",
              "deliveryServiceId" : 6,
              "vat" : null,
              "estimated" : true,
              "dates" : {
                "fromDate" : "23-09-2022",
                "toDate" : "23-09-2022",
                "fromTime" : "fromTime",
                "toTime" : "toTime",
                "realDeliveryDate" : "23-09-2022"
              },
              "type" : "DELIVERY",
              "serviceName" : "serviceName",
              "shipments" : [ {
                "boxes" : [ {
                  "fulfilmentId" : "fulfilmentId",
                  "id" : 3
                }, {
                  "fulfilmentId" : "fulfilmentId",
                  "id" : 3
                } ],
                "id" : 6,
                "shipmentDate" : "23-09-2022",
                "shipmentTime" : "shipmentTime",
                "tracks" : [ {
                  "trackCode" : "trackCode",
                  "deliveryServiceId" : 9
                }, {
                  "trackCode" : "trackCode",
                  "deliveryServiceId" : 9
                } ]
              }, {
                "boxes" : [ {
                  "fulfilmentId" : "fulfilmentId",
                  "id" : 3
                }, {
                  "fulfilmentId" : "fulfilmentId",
                  "id" : 3
                } ],
                "id" : 6,
                "shipmentDate" : "23-09-2022",
                "shipmentTime" : "shipmentTime",
                "tracks" : [ {
                  "trackCode" : "trackCode",
                  "deliveryServiceId" : 9
                }, {
                  "trackCode" : "trackCode",
                  "deliveryServiceId" : 9
                } ]
              } ],
              "tracks" : [ {
                "trackCode" : "trackCode",
                "deliveryServiceId" : 9
              }, {
                "trackCode" : "trackCode",
                "deliveryServiceId" : 9
              } ],
              "courier" : {
                "vehicleDescription" : "vehicleDescription",
                "phone" : "phone",
                "phoneExtension" : "phoneExtension",
                "fullName" : "fullName",
                "vehicleNumber" : "vehicleNumber"
              },
              "price" : 5.025004791520295,
              "outletStorageLimitDate" : "23-09-2022",
              "eacType" : "MERCHANT_TO_COURIER",
              "liftPrice" : 8.762042012749001,
              "eacCode" : "eacCode",
              "id" : "id",
              "region" : {
                "parent" : null,
                "children" : [ null, null ],
                "name" : "name",
                "id" : 0,
                "type" : "OTHER"
              },
              "deliveryPartnerType" : "SHOP",
              "outletCode" : "outletCode"
            },
            "notes" : "notes",
            "substatus" : "RESERVATION_EXPIRED",
            "deliveryTotal" : 1.4658129805029452,
            "buyerItemsTotalBeforeDiscount" : 2.3021358869347655,
            "creationDate" : "23-09-2022 09:12:41",
            "buyerItemsTotal" : 5.962133916683182,
            "paymentType" : "PREPAID",
            "buyer" : {
              "lastName" : "lastName",
              "firstName" : "firstName",
              "middleName" : "middleName",
              "id" : "id",
              "type" : "PERSON"
            },
            "expiryDate" : "23-09-2022 09:12:41",
            "buyerTotalBeforeDiscount" : 7.061401241503109,
            "itemsTotal" : 6.027456183070403,
            "buyerTotal" : 5.637376656633329,
            "subsidies" : [ {
              "amount" : 4.965218492984954,
              "type" : "YANDEX_CASHBACK"
            }, {
              "amount" : 4.965218492984954,
              "type" : "YANDEX_CASHBACK"
            } ],
            "paymentMethod" : "CASH_ON_DELIVERY",
            "currency" : "RUR",
            "fake" : true,
            "id" : 0,
            "taxSystem" : "OSN",
            "cancelRequested" : true,
            "items" : [ {
              "offerName" : "offerName",
              "subsidy" : 1.0246457001441578,
              "instances" : [ {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              }, {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              } ],
              "priceBeforeDiscount" : 7.386281948385884,
              "count" : 1,
              "vat" : "NO_VAT",
              "requiredInstanceTypes" : [ "CIS", "CIS" ],
              "buyerPriceBeforeDiscount" : 4.145608029883936,
              "shopSku" : "shopSku",
              "price" : 3.616076749251911,
              "partnerWarehouseId" : "partnerWarehouseId",
              "subsidies" : [ {
                "amount" : 1.1730742509559433,
                "type" : "YANDEX_CASHBACK"
              }, {
                "amount" : 1.1730742509559433,
                "type" : "YANDEX_CASHBACK"
              } ],
              "offerId" : "offerId",
              "buyerPrice" : 2.027123023002322,
              "details" : [ {
                "updateDate" : "23-09-2022",
                "itemStatus" : "REJECTED",
                "itemCount" : 7
              }, {
                "updateDate" : "23-09-2022",
                "itemStatus" : "REJECTED",
                "itemCount" : 7
              } ],
              "id" : 9,
              "promos" : [ {
                "subsidy" : 6.84685269835264,
                "shopPromoId" : "shopPromoId",
                "discount" : 1.4894159098541704,
                "marketPromoId" : "marketPromoId",
                "type" : "DIRECT_DISCOUNT"
              }, {
                "subsidy" : 6.84685269835264,
                "shopPromoId" : "shopPromoId",
                "discount" : 1.4894159098541704,
                "marketPromoId" : "marketPromoId",
                "type" : "DIRECT_DISCOUNT"
              } ]
            }, {
              "offerName" : "offerName",
              "subsidy" : 1.0246457001441578,
              "instances" : [ {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              }, {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              } ],
              "priceBeforeDiscount" : 7.386281948385884,
              "count" : 1,
              "vat" : "NO_VAT",
              "requiredInstanceTypes" : [ "CIS", "CIS" ],
              "buyerPriceBeforeDiscount" : 4.145608029883936,
              "shopSku" : "shopSku",
              "price" : 3.616076749251911,
              "partnerWarehouseId" : "partnerWarehouseId",
              "subsidies" : [ {
                "amount" : 1.1730742509559433,
                "type" : "YANDEX_CASHBACK"
              }, {
                "amount" : 1.1730742509559433,
                "type" : "YANDEX_CASHBACK"
              } ],
              "offerId" : "offerId",
              "buyerPrice" : 2.027123023002322,
              "details" : [ {
                "updateDate" : "23-09-2022",
                "itemStatus" : "REJECTED",
                "itemCount" : 7
              }, {
                "updateDate" : "23-09-2022",
                "itemStatus" : "REJECTED",
                "itemCount" : 7
              } ],
              "id" : 9,
              "promos" : [ {
                "subsidy" : 6.84685269835264,
                "shopPromoId" : "shopPromoId",
                "discount" : 1.4894159098541704,
                "marketPromoId" : "marketPromoId",
                "type" : "DIRECT_DISCOUNT"
              }, {
                "subsidy" : 6.84685269835264,
                "shopPromoId" : "shopPromoId",
                "discount" : 1.4894159098541704,
                "marketPromoId" : "marketPromoId",
                "type" : "DIRECT_DISCOUNT"
              } ]
            } ],
            "status" : "PLACING",
            "updatedAt" : "23-09-2022 09:12:41"
          } ],
          "paging" : {
            "nextPageToken" : "nextPageToken"
          }
        },
        "properties" : {
          "pager" : {
            "$ref" : "#/components/schemas/FlippingPagerDTO"
          },
          "orders" : {
            "description" : "Модель заказа.\n",
            "items" : {
              "$ref" : "#/components/schemas/OrderDTO"
            },
            "type" : "array"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardScrollingPagerDTO"
          }
        },
        "required" : [ "orders" ],
        "type" : "object"
      },
      "ProvideOrderItemIdentifiersRequest" : {
        "example" : {
          "items" : [ {
            "instances" : [ {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "uin" : "uin",
              "cis" : "cis"
            }, {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "uin" : "uin",
              "cis" : "cis"
            } ],
            "id" : 0
          }, {
            "instances" : [ {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "uin" : "uin",
              "cis" : "cis"
            }, {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "uin" : "uin",
              "cis" : "cis"
            } ],
            "id" : 0
          } ]
        },
        "properties" : {
          "items" : {
            "description" : "Список позиций, требующих маркировки.\n",
            "items" : {
              "$ref" : "#/components/schemas/OrderItemInstanceModificationDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "ProvideOrderItemIdentifiersResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/OrderItemsModificationResultDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "items" : [ {
              "offerName" : "offerName",
              "instances" : [ {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              }, {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              } ],
              "price" : 1.4658129805029452,
              "vat" : "NO_VAT",
              "count" : 6,
              "offerId" : "offerId",
              "id" : 0
            }, {
              "offerName" : "offerName",
              "instances" : [ {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              }, {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              } ],
              "price" : 1.4658129805029452,
              "vat" : "NO_VAT",
              "count" : 6,
              "offerId" : "offerId",
              "id" : 0
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "UpdateOrderItemRequest" : {
        "description" : "Запрос на обновление состава заказа.",
        "example" : {
          "reason" : "PARTNER_REQUESTED_REMOVE",
          "items" : [ {
            "instances" : [ {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "uin" : "uin",
              "cis" : "cis"
            }, {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "uin" : "uin",
              "cis" : "cis"
            } ],
            "count" : 0,
            "id" : 0
          }, {
            "instances" : [ {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "uin" : "uin",
              "cis" : "cis"
            }, {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "uin" : "uin",
              "cis" : "cis"
            } ],
            "count" : 0,
            "id" : 0
          } ]
        },
        "properties" : {
          "items" : {
            "description" : "Список товаров в заказе.\n\nЕсли магазин не передал информацию о товаре во входных данных, он будет удален из заказа.\n\nОбязательный параметр.\n",
            "items" : {
              "$ref" : "#/components/schemas/OrderItemModificationDTO"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "reason" : {
            "$ref" : "#/components/schemas/OrderItemsModificationRequestReasonType"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "UpdateOrderStatusRequest" : {
        "example" : {
          "order" : {
            "delivery" : {
              "dates" : {
                "realDeliveryDate" : "2000-01-23"
              }
            },
            "substatus" : "RESERVATION_EXPIRED",
            "status" : "PLACING"
          }
        },
        "properties" : {
          "order" : {
            "$ref" : "#/components/schemas/OrderStatusChangeDTO"
          }
        },
        "required" : [ "order" ],
        "type" : "object"
      },
      "UpdateOrderStatusResponse" : {
        "description" : "Информация об изменении статуса заказа.",
        "example" : {
          "order" : {
            "delivery" : {
              "dispatchType" : "UNKNOWN",
              "address" : {
                "country" : "country",
                "city" : "city",
                "postcode" : "postcode",
                "gps" : {
                  "latitude" : 9.965781217890562,
                  "longitude" : 9.369310271410669
                },
                "house" : "house",
                "subway" : "subway",
                "phone" : "phone",
                "street" : "street",
                "district" : "district",
                "recipient" : "recipient",
                "entryphone" : "entryphone",
                "block" : "block",
                "entrance" : "entrance",
                "floor" : "floor",
                "apartment" : "apartment"
              },
              "liftType" : "NOT_NEEDED",
              "deliveryServiceId" : 6,
              "vat" : null,
              "estimated" : true,
              "dates" : {
                "fromDate" : "23-09-2022",
                "toDate" : "23-09-2022",
                "fromTime" : "fromTime",
                "toTime" : "toTime",
                "realDeliveryDate" : "23-09-2022"
              },
              "type" : "DELIVERY",
              "serviceName" : "serviceName",
              "shipments" : [ {
                "boxes" : [ {
                  "fulfilmentId" : "fulfilmentId",
                  "id" : 3
                }, {
                  "fulfilmentId" : "fulfilmentId",
                  "id" : 3
                } ],
                "id" : 6,
                "shipmentDate" : "23-09-2022",
                "shipmentTime" : "shipmentTime",
                "tracks" : [ {
                  "trackCode" : "trackCode",
                  "deliveryServiceId" : 9
                }, {
                  "trackCode" : "trackCode",
                  "deliveryServiceId" : 9
                } ]
              }, {
                "boxes" : [ {
                  "fulfilmentId" : "fulfilmentId",
                  "id" : 3
                }, {
                  "fulfilmentId" : "fulfilmentId",
                  "id" : 3
                } ],
                "id" : 6,
                "shipmentDate" : "23-09-2022",
                "shipmentTime" : "shipmentTime",
                "tracks" : [ {
                  "trackCode" : "trackCode",
                  "deliveryServiceId" : 9
                }, {
                  "trackCode" : "trackCode",
                  "deliveryServiceId" : 9
                } ]
              } ],
              "tracks" : [ {
                "trackCode" : "trackCode",
                "deliveryServiceId" : 9
              }, {
                "trackCode" : "trackCode",
                "deliveryServiceId" : 9
              } ],
              "courier" : {
                "vehicleDescription" : "vehicleDescription",
                "phone" : "phone",
                "phoneExtension" : "phoneExtension",
                "fullName" : "fullName",
                "vehicleNumber" : "vehicleNumber"
              },
              "price" : 5.025004791520295,
              "outletStorageLimitDate" : "23-09-2022",
              "eacType" : "MERCHANT_TO_COURIER",
              "liftPrice" : 8.762042012749001,
              "eacCode" : "eacCode",
              "id" : "id",
              "region" : {
                "parent" : null,
                "children" : [ null, null ],
                "name" : "name",
                "id" : 0,
                "type" : "OTHER"
              },
              "deliveryPartnerType" : "SHOP",
              "outletCode" : "outletCode"
            },
            "notes" : "notes",
            "substatus" : "RESERVATION_EXPIRED",
            "deliveryTotal" : 1.4658129805029452,
            "buyerItemsTotalBeforeDiscount" : 2.3021358869347655,
            "creationDate" : "23-09-2022 09:12:41",
            "buyerItemsTotal" : 5.962133916683182,
            "paymentType" : "PREPAID",
            "buyer" : {
              "lastName" : "lastName",
              "firstName" : "firstName",
              "middleName" : "middleName",
              "id" : "id",
              "type" : "PERSON"
            },
            "expiryDate" : "23-09-2022 09:12:41",
            "buyerTotalBeforeDiscount" : 7.061401241503109,
            "itemsTotal" : 6.027456183070403,
            "buyerTotal" : 5.637376656633329,
            "subsidies" : [ {
              "amount" : 4.965218492984954,
              "type" : "YANDEX_CASHBACK"
            }, {
              "amount" : 4.965218492984954,
              "type" : "YANDEX_CASHBACK"
            } ],
            "paymentMethod" : "CASH_ON_DELIVERY",
            "currency" : "RUR",
            "fake" : true,
            "id" : 0,
            "taxSystem" : "OSN",
            "cancelRequested" : true,
            "items" : [ {
              "offerName" : "offerName",
              "subsidy" : 1.0246457001441578,
              "instances" : [ {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              }, {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              } ],
              "priceBeforeDiscount" : 7.386281948385884,
              "count" : 1,
              "vat" : "NO_VAT",
              "requiredInstanceTypes" : [ "CIS", "CIS" ],
              "buyerPriceBeforeDiscount" : 4.145608029883936,
              "shopSku" : "shopSku",
              "price" : 3.616076749251911,
              "partnerWarehouseId" : "partnerWarehouseId",
              "subsidies" : [ {
                "amount" : 1.1730742509559433,
                "type" : "YANDEX_CASHBACK"
              }, {
                "amount" : 1.1730742509559433,
                "type" : "YANDEX_CASHBACK"
              } ],
              "offerId" : "offerId",
              "buyerPrice" : 2.027123023002322,
              "details" : [ {
                "updateDate" : "23-09-2022",
                "itemStatus" : "REJECTED",
                "itemCount" : 7
              }, {
                "updateDate" : "23-09-2022",
                "itemStatus" : "REJECTED",
                "itemCount" : 7
              } ],
              "id" : 9,
              "promos" : [ {
                "subsidy" : 6.84685269835264,
                "shopPromoId" : "shopPromoId",
                "discount" : 1.4894159098541704,
                "marketPromoId" : "marketPromoId",
                "type" : "DIRECT_DISCOUNT"
              }, {
                "subsidy" : 6.84685269835264,
                "shopPromoId" : "shopPromoId",
                "discount" : 1.4894159098541704,
                "marketPromoId" : "marketPromoId",
                "type" : "DIRECT_DISCOUNT"
              } ]
            }, {
              "offerName" : "offerName",
              "subsidy" : 1.0246457001441578,
              "instances" : [ {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              }, {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "cisFull" : "cisFull",
                "uin" : "uin",
                "cis" : "cis"
              } ],
              "priceBeforeDiscount" : 7.386281948385884,
              "count" : 1,
              "vat" : "NO_VAT",
              "requiredInstanceTypes" : [ "CIS", "CIS" ],
              "buyerPriceBeforeDiscount" : 4.145608029883936,
              "shopSku" : "shopSku",
              "price" : 3.616076749251911,
              "partnerWarehouseId" : "partnerWarehouseId",
              "subsidies" : [ {
                "amount" : 1.1730742509559433,
                "type" : "YANDEX_CASHBACK"
              }, {
                "amount" : 1.1730742509559433,
                "type" : "YANDEX_CASHBACK"
              } ],
              "offerId" : "offerId",
              "buyerPrice" : 2.027123023002322,
              "details" : [ {
                "updateDate" : "23-09-2022",
                "itemStatus" : "REJECTED",
                "itemCount" : 7
              }, {
                "updateDate" : "23-09-2022",
                "itemStatus" : "REJECTED",
                "itemCount" : 7
              } ],
              "id" : 9,
              "promos" : [ {
                "subsidy" : 6.84685269835264,
                "shopPromoId" : "shopPromoId",
                "discount" : 1.4894159098541704,
                "marketPromoId" : "marketPromoId",
                "type" : "DIRECT_DISCOUNT"
              }, {
                "subsidy" : 6.84685269835264,
                "shopPromoId" : "shopPromoId",
                "discount" : 1.4894159098541704,
                "marketPromoId" : "marketPromoId",
                "type" : "DIRECT_DISCOUNT"
              } ]
            } ],
            "status" : "PLACING",
            "updatedAt" : "23-09-2022 09:12:41"
          }
        },
        "properties" : {
          "order" : {
            "$ref" : "#/components/schemas/OrderDTO"
          }
        },
        "type" : "object"
      },
      "UpdateOrderStatusesRequest" : {
        "description" : "Список заказов.",
        "example" : {
          "orders" : [ {
            "substatus" : "RESERVATION_EXPIRED",
            "id" : 0,
            "status" : "PLACING"
          }, {
            "substatus" : "RESERVATION_EXPIRED",
            "id" : 0,
            "status" : "PLACING"
          }, {
            "substatus" : "RESERVATION_EXPIRED",
            "id" : 0,
            "status" : "PLACING"
          }, {
            "substatus" : "RESERVATION_EXPIRED",
            "id" : 0,
            "status" : "PLACING"
          }, {
            "substatus" : "RESERVATION_EXPIRED",
            "id" : 0,
            "status" : "PLACING"
          } ]
        },
        "properties" : {
          "orders" : {
            "description" : "Список заказов.",
            "items" : {
              "$ref" : "#/components/schemas/OrderStateDTO"
            },
            "maxItems" : 30,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "orders" ],
        "type" : "object"
      },
      "UpdateOrderStatusesResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/UpdateOrderStatusesDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "orders" : [ {
              "substatus" : "RESERVATION_EXPIRED",
              "updateStatus" : "OK",
              "id" : 0,
              "status" : "PLACING",
              "errorDetails" : "errorDetails"
            }, {
              "substatus" : "RESERVATION_EXPIRED",
              "updateStatus" : "OK",
              "id" : 0,
              "status" : "PLACING",
              "errorDetails" : "errorDetails"
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "SetOrderShipmentBoxesRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ParcelDTO"
        } ],
        "example" : {
          "boxes" : [ {
            "fulfilmentId" : "fulfilmentId",
            "id" : 0
          }, {
            "fulfilmentId" : "fulfilmentId",
            "id" : 0
          } ]
        },
        "type" : "object"
      },
      "SetOrderShipmentBoxesResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/ShipmentBoxesDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "boxes" : [ {
              "fulfilmentId" : "fulfilmentId",
              "id" : 0
            }, {
              "fulfilmentId" : "fulfilmentId",
              "id" : 0
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "AcceptOrderCancellationRequest" : {
        "example" : {
          "reason" : "ORDER_DELIVERED",
          "accepted" : true
        },
        "properties" : {
          "accepted" : {
            "description" : "Решение об отмене заказа:\n\n* `true` — заказ отменяется, служба доставки узнала об отмене до передачи заказа покупателю.\n* `false` — заказ не отменяется, так как он уже доставлен покупателю курьером или передан в пункт выдачи заказов.\n",
            "type" : "boolean"
          },
          "reason" : {
            "$ref" : "#/components/schemas/OrderCancellationReasonType"
          }
        },
        "required" : [ "accepted" ],
        "type" : "object"
      },
      "EmptyApiResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        } ],
        "description" : "Пустой ответ сервера.",
        "example" : {
          "status" : "OK"
        },
        "type" : "object"
      },
      "ProvideOrderDigitalCodesRequest" : {
        "description" : "Запрос на передачу ключей цифровых товаров.",
        "example" : {
          "items" : [ {
            "activate_till" : "2000-01-23",
            "code" : "code",
            "slip" : "slip",
            "id" : 0
          }, {
            "activate_till" : "2000-01-23",
            "code" : "code",
            "slip" : "slip",
            "id" : 0
          } ]
        },
        "properties" : {
          "items" : {
            "description" : "Список проданных ключей.\n\nЕсли в заказе есть несколько **одинаковых** товаров (например, несколько ключей к одной и той же подписке), передайте каждый в виде отдельного элемента массива. `id` у этих элементов должен быть один и тот же.\n",
            "items" : {
              "$ref" : "#/components/schemas/OrderDigitalItemDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "SetOrderBoxLayoutRequest" : {
        "example" : {
          "boxes" : [ {
            "items" : [ {
              "partialCount" : {
                "current" : 1,
                "total" : 2
              },
              "instances" : [ {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "uin" : "uin",
                "cis" : "cis"
              }, {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "uin" : "uin",
                "cis" : "cis"
              } ],
              "id" : 0,
              "fullCount" : 1
            }, {
              "partialCount" : {
                "current" : 1,
                "total" : 2
              },
              "instances" : [ {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "uin" : "uin",
                "cis" : "cis"
              }, {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "uin" : "uin",
                "cis" : "cis"
              } ],
              "id" : 0,
              "fullCount" : 1
            } ]
          }, {
            "items" : [ {
              "partialCount" : {
                "current" : 1,
                "total" : 2
              },
              "instances" : [ {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "uin" : "uin",
                "cis" : "cis"
              }, {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "uin" : "uin",
                "cis" : "cis"
              } ],
              "id" : 0,
              "fullCount" : 1
            }, {
              "partialCount" : {
                "current" : 1,
                "total" : 2
              },
              "instances" : [ {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "uin" : "uin",
                "cis" : "cis"
              }, {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "uin" : "uin",
                "cis" : "cis"
              } ],
              "id" : 0,
              "fullCount" : 1
            } ]
          } ],
          "allowRemove" : false
        },
        "properties" : {
          "boxes" : {
            "description" : "Список коробок.",
            "items" : {
              "$ref" : "#/components/schemas/OrderBoxLayoutDTO"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "allowRemove" : {
            "default" : false,
            "description" : "Передайте `true`, если вы собираетесь удалить часть товаров из заказа.",
            "type" : "boolean"
          }
        },
        "required" : [ "boxes" ],
        "type" : "object"
      },
      "SetOrderBoxLayoutResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/OrderBoxesLayoutDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "boxes" : [ {
              "items" : [ {
                "partialCount" : {
                  "current" : 1,
                  "total" : 2
                },
                "instances" : [ {
                  "rnpt" : "rnpt",
                  "gtd" : "gtd",
                  "uin" : "uin",
                  "cis" : "cis"
                }, {
                  "rnpt" : "rnpt",
                  "gtd" : "gtd",
                  "uin" : "uin",
                  "cis" : "cis"
                } ],
                "id" : 0,
                "fullCount" : 1
              }, {
                "partialCount" : {
                  "current" : 1,
                  "total" : 2
                },
                "instances" : [ {
                  "rnpt" : "rnpt",
                  "gtd" : "gtd",
                  "uin" : "uin",
                  "cis" : "cis"
                }, {
                  "rnpt" : "rnpt",
                  "gtd" : "gtd",
                  "uin" : "uin",
                  "cis" : "cis"
                } ],
                "id" : 0,
                "fullCount" : 1
              } ],
              "boxId" : 5
            }, {
              "items" : [ {
                "partialCount" : {
                  "current" : 1,
                  "total" : 2
                },
                "instances" : [ {
                  "rnpt" : "rnpt",
                  "gtd" : "gtd",
                  "uin" : "uin",
                  "cis" : "cis"
                }, {
                  "rnpt" : "rnpt",
                  "gtd" : "gtd",
                  "uin" : "uin",
                  "cis" : "cis"
                } ],
                "id" : 0,
                "fullCount" : 1
              }, {
                "partialCount" : {
                  "current" : 1,
                  "total" : 2
                },
                "instances" : [ {
                  "rnpt" : "rnpt",
                  "gtd" : "gtd",
                  "uin" : "uin",
                  "cis" : "cis"
                }, {
                  "rnpt" : "rnpt",
                  "gtd" : "gtd",
                  "uin" : "uin",
                  "cis" : "cis"
                } ],
                "id" : 0,
                "fullCount" : 1
              } ],
              "boxId" : 5
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "SetOrderDeliveryDateRequest" : {
        "example" : {
          "reason" : "USER_MOVED_DELIVERY_DATES",
          "dates" : {
            "toDate" : "2000-01-23"
          }
        },
        "properties" : {
          "dates" : {
            "$ref" : "#/components/schemas/OrderDeliveryDateDTO"
          },
          "reason" : {
            "$ref" : "#/components/schemas/OrderDeliveryDateReasonType"
          }
        },
        "required" : [ "dates", "reason" ],
        "type" : "object"
      },
      "SetOrderDeliveryTrackCodeRequest" : {
        "example" : {
          "trackCode" : "trackCode",
          "deliveryServiceId" : 0
        },
        "properties" : {
          "trackCode" : {
            "description" : "Трек‑номер посылки.",
            "type" : "string"
          },
          "deliveryServiceId" : {
            "description" : "Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "deliveryServiceId", "trackCode" ],
        "type" : "object"
      },
      "GetOrderBuyerInfoResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/OrderBuyerInfoDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "lastName" : "lastName",
            "firstName" : "firstName",
            "phone" : "phone",
            "middleName" : "middleName",
            "id" : "id",
            "type" : "PERSON"
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "VerifyOrderEacRequest" : {
        "example" : {
          "code" : "code"
        },
        "properties" : {
          "code" : {
            "description" : "Код для подтверждения ЭАПП.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "VerifyOrderEacResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/EacVerificationResultDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "verificationResult" : "ACCEPTED",
            "attemptsLeft" : 0
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "UpdateOrderStorageLimitRequest" : {
        "description" : "Запрос на обновление срока хранения заказа в ПВЗ.",
        "example" : {
          "newDate" : "2000-01-23"
        },
        "properties" : {
          "newDate" : {
            "description" : "Новая дата, до которой заказ будет храниться в пункте выдачи.\n\nСрок хранения можно увеличить не больше, чем на 30 дней.\n\nФормат даты: `ГГГГ-ММ-ДД`.\n",
            "format" : "date",
            "type" : "string"
          }
        },
        "required" : [ "newDate" ],
        "type" : "object"
      },
      "PageFormatType" : {
        "description" : "Размещение ярлыков на странице:\n* `A7` — в PDF-файле будут страницы формата близкому к A7. На каждой странице размещается ярлык размером 75 × 120 мм (80,4 × 125,6 мм с учетом полей).\n* `A4` — в PDF-файле будут страницы формата A4. На каждой странице размещаются восемь ярлыков размером 70,6 × 99,1 мм без полей.\n",
        "enum" : [ "A7", "A4" ],
        "type" : "string"
      },
      "GetOrderLabelsDataResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/OrderLabelDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Ответ с информацией для печати ярлыков.",
        "example" : {
          "result" : {
            "parcelBoxLabels" : [ {
              "supplierName" : "supplierName",
              "deliveryServiceId" : "deliveryServiceId",
              "orderId" : 1,
              "fulfilmentId" : "fulfilmentId",
              "orderNum" : "orderNum",
              "weight" : "weight",
              "url" : "url",
              "deliveryServiceName" : "deliveryServiceName",
              "deliveryAddress" : "deliveryAddress",
              "recipientName" : "recipientName",
              "place" : "place",
              "shipmentDate" : "shipmentDate",
              "boxId" : 5
            }, {
              "supplierName" : "supplierName",
              "deliveryServiceId" : "deliveryServiceId",
              "orderId" : 1,
              "fulfilmentId" : "fulfilmentId",
              "orderNum" : "orderNum",
              "weight" : "weight",
              "url" : "url",
              "deliveryServiceName" : "deliveryServiceName",
              "deliveryAddress" : "deliveryAddress",
              "recipientName" : "recipientName",
              "place" : "place",
              "shipmentDate" : "shipmentDate",
              "boxId" : 5
            } ],
            "orderId" : 0,
            "placesNumber" : 6,
            "url" : "url"
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetBusinessBuyerInfoResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/OrderBusinessBuyerDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "organizationName" : "organizationName",
            "organizationJurAddress" : "organizationJurAddress",
            "inn" : "inn",
            "kpp" : "kpp"
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetBusinessDocumentsInfoResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/OrderBusinessDocumentsDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "sf" : {
              "date" : "2000-01-23",
              "number" : "number",
              "status" : "READY"
            },
            "torgTwelve" : {
              "date" : "2000-01-23",
              "number" : "number",
              "status" : "READY"
            },
            "upd" : {
              "date" : "2000-01-23",
              "number" : "number",
              "status" : "READY"
            },
            "ukd" : {
              "date" : "2000-01-23",
              "number" : "number",
              "status" : "READY"
            },
            "ksf" : {
              "date" : "2000-01-23",
              "number" : "number",
              "status" : "READY"
            }
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "RefundStatusType" : {
        "description" : "Cтатус возврата денег:\n\n* `STARTED_BY_USER` — создан клиентом из личного кабинета.\n\n* `REFUND_IN_PROGRESS` — ждет решение о возврате денег.\n\n* `REFUNDED` — по возврату проведены все возвратные денежные транзакции.\n\n* `FAILED` — невозможно провести возврат покупателю.\n\n* `WAITING_FOR_DECISION` — ожидает решения.\n\n* `DECISION_MADE` — по возврату принято решение.\n\n* `REFUNDED_WITH_BONUSES` — возврат осуществлен баллами Плюса или промокодом.\n\n* `REFUNDED_BY_SHOP` — магазин сделал самостоятельно возврат денег.\n\n* `COMPLETE_WITHOUT_REFUND` — возврат денег не требуется.\n\n* `CANCELLED` — возврат отменен.\n",
        "enum" : [ "STARTED_BY_USER", "REFUND_IN_PROGRESS", "REFUNDED", "FAILED", "WAITING_FOR_DECISION", "DECISION_MADE", "REFUNDED_WITH_BONUSES", "REFUNDED_BY_SHOP", "CANCELLED", "COMPLETE_WITHOUT_REFUND", "UNKNOWN" ],
        "type" : "string"
      },
      "ReturnType" : {
        "description" : "Тип заказа для фильтрации:\n\n* `RETURN` — возврат.\n\n* `UNREDEEMED` — невыкуп.\n\nЕсли не указывать, в ответе будут и возвраты, и невыкупы.\n",
        "enum" : [ "UNREDEEMED", "RETURN" ],
        "type" : "string"
      },
      "GetReturnsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/PagedReturnsDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "paging" : {
              "nextPageToken" : "nextPageToken"
            },
            "returns" : [ {
              "updateDate" : "2000-01-23T04:56:07.000+00:00",
              "fastReturn" : true,
              "orderId" : 6,
              "shipmentRecipientType" : "SHOP",
              "refundStatus" : "STARTED_BY_USER",
              "logisticPickupPoint" : {
                "logisticPartnerId" : 5,
                "address" : {
                  "country" : "Россия",
                  "city" : "Москва",
                  "street" : "Стрелецкая улица",
                  "postcode" : "123518",
                  "house" : "9к2"
                },
                "instruction" : "instruction",
                "name" : "name",
                "id" : 1,
                "type" : "WAREHOUSE"
              },
              "id" : 0,
              "creationDate" : "2000-01-23T04:56:07.000+00:00",
              "items" : [ {
                "shopSku" : "shopSku",
                "instances" : [ {
                  "stockType" : "FIT",
                  "imei" : "imei",
                  "cis" : "cis",
                  "status" : "CREATED"
                }, {
                  "stockType" : "FIT",
                  "imei" : "imei",
                  "cis" : "cis",
                  "status" : "CREATED"
                } ],
                "marketSku" : 2,
                "count" : 7,
                "decisions" : [ {
                  "images" : [ "images", "images" ],
                  "returnItemId" : 9,
                  "subreasonType" : "USER_DID_NOT_LIKE",
                  "count" : 3,
                  "comment" : "comment",
                  "decisionType" : "REFUND_MONEY",
                  "reasonType" : "BAD_QUALITY",
                  "partnerCompensation" : 4,
                  "refundAmount" : 2
                }, {
                  "images" : [ "images", "images" ],
                  "returnItemId" : 9,
                  "subreasonType" : "USER_DID_NOT_LIKE",
                  "count" : 3,
                  "comment" : "comment",
                  "decisionType" : "REFUND_MONEY",
                  "reasonType" : "BAD_QUALITY",
                  "partnerCompensation" : 4,
                  "refundAmount" : 2
                } ],
                "tracks" : [ {
                  "trackCode" : "trackCode"
                }, {
                  "trackCode" : "trackCode"
                } ]
              }, {
                "shopSku" : "shopSku",
                "instances" : [ {
                  "stockType" : "FIT",
                  "imei" : "imei",
                  "cis" : "cis",
                  "status" : "CREATED"
                }, {
                  "stockType" : "FIT",
                  "imei" : "imei",
                  "cis" : "cis",
                  "status" : "CREATED"
                } ],
                "marketSku" : 2,
                "count" : 7,
                "decisions" : [ {
                  "images" : [ "images", "images" ],
                  "returnItemId" : 9,
                  "subreasonType" : "USER_DID_NOT_LIKE",
                  "count" : 3,
                  "comment" : "comment",
                  "decisionType" : "REFUND_MONEY",
                  "reasonType" : "BAD_QUALITY",
                  "partnerCompensation" : 4,
                  "refundAmount" : 2
                }, {
                  "images" : [ "images", "images" ],
                  "returnItemId" : 9,
                  "subreasonType" : "USER_DID_NOT_LIKE",
                  "count" : 3,
                  "comment" : "comment",
                  "decisionType" : "REFUND_MONEY",
                  "reasonType" : "BAD_QUALITY",
                  "partnerCompensation" : 4,
                  "refundAmount" : 2
                } ],
                "tracks" : [ {
                  "trackCode" : "trackCode"
                }, {
                  "trackCode" : "trackCode"
                } ]
              } ],
              "returnType" : "UNREDEEMED",
              "shipmentStatus" : "CREATED",
              "refundAmount" : 5
            }, {
              "updateDate" : "2000-01-23T04:56:07.000+00:00",
              "fastReturn" : true,
              "orderId" : 6,
              "shipmentRecipientType" : "SHOP",
              "refundStatus" : "STARTED_BY_USER",
              "logisticPickupPoint" : {
                "logisticPartnerId" : 5,
                "address" : {
                  "country" : "Россия",
                  "city" : "Москва",
                  "street" : "Стрелецкая улица",
                  "postcode" : "123518",
                  "house" : "9к2"
                },
                "instruction" : "instruction",
                "name" : "name",
                "id" : 1,
                "type" : "WAREHOUSE"
              },
              "id" : 0,
              "creationDate" : "2000-01-23T04:56:07.000+00:00",
              "items" : [ {
                "shopSku" : "shopSku",
                "instances" : [ {
                  "stockType" : "FIT",
                  "imei" : "imei",
                  "cis" : "cis",
                  "status" : "CREATED"
                }, {
                  "stockType" : "FIT",
                  "imei" : "imei",
                  "cis" : "cis",
                  "status" : "CREATED"
                } ],
                "marketSku" : 2,
                "count" : 7,
                "decisions" : [ {
                  "images" : [ "images", "images" ],
                  "returnItemId" : 9,
                  "subreasonType" : "USER_DID_NOT_LIKE",
                  "count" : 3,
                  "comment" : "comment",
                  "decisionType" : "REFUND_MONEY",
                  "reasonType" : "BAD_QUALITY",
                  "partnerCompensation" : 4,
                  "refundAmount" : 2
                }, {
                  "images" : [ "images", "images" ],
                  "returnItemId" : 9,
                  "subreasonType" : "USER_DID_NOT_LIKE",
                  "count" : 3,
                  "comment" : "comment",
                  "decisionType" : "REFUND_MONEY",
                  "reasonType" : "BAD_QUALITY",
                  "partnerCompensation" : 4,
                  "refundAmount" : 2
                } ],
                "tracks" : [ {
                  "trackCode" : "trackCode"
                }, {
                  "trackCode" : "trackCode"
                } ]
              }, {
                "shopSku" : "shopSku",
                "instances" : [ {
                  "stockType" : "FIT",
                  "imei" : "imei",
                  "cis" : "cis",
                  "status" : "CREATED"
                }, {
                  "stockType" : "FIT",
                  "imei" : "imei",
                  "cis" : "cis",
                  "status" : "CREATED"
                } ],
                "marketSku" : 2,
                "count" : 7,
                "decisions" : [ {
                  "images" : [ "images", "images" ],
                  "returnItemId" : 9,
                  "subreasonType" : "USER_DID_NOT_LIKE",
                  "count" : 3,
                  "comment" : "comment",
                  "decisionType" : "REFUND_MONEY",
                  "reasonType" : "BAD_QUALITY",
                  "partnerCompensation" : 4,
                  "refundAmount" : 2
                }, {
                  "images" : [ "images", "images" ],
                  "returnItemId" : 9,
                  "subreasonType" : "USER_DID_NOT_LIKE",
                  "count" : 3,
                  "comment" : "comment",
                  "decisionType" : "REFUND_MONEY",
                  "reasonType" : "BAD_QUALITY",
                  "partnerCompensation" : 4,
                  "refundAmount" : 2
                } ],
                "tracks" : [ {
                  "trackCode" : "trackCode"
                }, {
                  "trackCode" : "trackCode"
                } ]
              } ],
              "returnType" : "UNREDEEMED",
              "shipmentStatus" : "CREATED",
              "refundAmount" : 5
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetReturnResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/ReturnDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "updateDate" : "2000-01-23T04:56:07.000+00:00",
            "fastReturn" : true,
            "orderId" : 6,
            "shipmentRecipientType" : "SHOP",
            "refundStatus" : "STARTED_BY_USER",
            "logisticPickupPoint" : {
              "logisticPartnerId" : 5,
              "address" : {
                "country" : "Россия",
                "city" : "Москва",
                "street" : "Стрелецкая улица",
                "postcode" : "123518",
                "house" : "9к2"
              },
              "instruction" : "instruction",
              "name" : "name",
              "id" : 1,
              "type" : "WAREHOUSE"
            },
            "id" : 0,
            "creationDate" : "2000-01-23T04:56:07.000+00:00",
            "items" : [ {
              "shopSku" : "shopSku",
              "instances" : [ {
                "stockType" : "FIT",
                "imei" : "imei",
                "cis" : "cis",
                "status" : "CREATED"
              }, {
                "stockType" : "FIT",
                "imei" : "imei",
                "cis" : "cis",
                "status" : "CREATED"
              } ],
              "marketSku" : 2,
              "count" : 7,
              "decisions" : [ {
                "images" : [ "images", "images" ],
                "returnItemId" : 9,
                "subreasonType" : "USER_DID_NOT_LIKE",
                "count" : 3,
                "comment" : "comment",
                "decisionType" : "REFUND_MONEY",
                "reasonType" : "BAD_QUALITY",
                "partnerCompensation" : 4,
                "refundAmount" : 2
              }, {
                "images" : [ "images", "images" ],
                "returnItemId" : 9,
                "subreasonType" : "USER_DID_NOT_LIKE",
                "count" : 3,
                "comment" : "comment",
                "decisionType" : "REFUND_MONEY",
                "reasonType" : "BAD_QUALITY",
                "partnerCompensation" : 4,
                "refundAmount" : 2
              } ],
              "tracks" : [ {
                "trackCode" : "trackCode"
              }, {
                "trackCode" : "trackCode"
              } ]
            }, {
              "shopSku" : "shopSku",
              "instances" : [ {
                "stockType" : "FIT",
                "imei" : "imei",
                "cis" : "cis",
                "status" : "CREATED"
              }, {
                "stockType" : "FIT",
                "imei" : "imei",
                "cis" : "cis",
                "status" : "CREATED"
              } ],
              "marketSku" : 2,
              "count" : 7,
              "decisions" : [ {
                "images" : [ "images", "images" ],
                "returnItemId" : 9,
                "subreasonType" : "USER_DID_NOT_LIKE",
                "count" : 3,
                "comment" : "comment",
                "decisionType" : "REFUND_MONEY",
                "reasonType" : "BAD_QUALITY",
                "partnerCompensation" : 4,
                "refundAmount" : 2
              }, {
                "images" : [ "images", "images" ],
                "returnItemId" : 9,
                "subreasonType" : "USER_DID_NOT_LIKE",
                "count" : 3,
                "comment" : "comment",
                "decisionType" : "REFUND_MONEY",
                "reasonType" : "BAD_QUALITY",
                "partnerCompensation" : 4,
                "refundAmount" : 2
              } ],
              "tracks" : [ {
                "trackCode" : "trackCode"
              }, {
                "trackCode" : "trackCode"
              } ]
            } ],
            "returnType" : "UNREDEEMED",
            "shipmentStatus" : "CREATED",
            "refundAmount" : 5
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "SetReturnDecisionRequest" : {
        "description" : "Решения по позиции в возврате.",
        "example" : {
          "returnItemId" : 1,
          "decisionType" : "REFUND_MONEY_INCLUDING_SHIPMENT",
          "comment" : "Вернуть 149 рублей за пересылку"
        },
        "properties" : {
          "returnItemId" : {
            "description" : "Идентификатор товара в возврате.",
            "format" : "int64",
            "type" : "integer"
          },
          "decisionType" : {
            "$ref" : "#/components/schemas/ReturnRequestDecisionType"
          },
          "comment" : {
            "description" : "Комментарий к решению. Укажите:\n\n* для `REFUND_MONEY_INCLUDING_SHIPMENT`— стоимость обратной пересылки;\n\n* для `REPAIR` — когда вы устраните недостатки товара;\n\n* для `DECLINE_REFUND` — причину отказа;\n\n* для `OTHER_DECISION` — какое решение вы предлагаете.\n",
            "type" : "string"
          }
        },
        "required" : [ "decisionType", "returnItemId" ],
        "type" : "object"
      },
      "GetRegionsResponse" : {
        "example" : {
          "regions" : [ {
            "parent" : null,
            "children" : [ null, null ],
            "name" : "name",
            "id" : 0,
            "type" : "OTHER"
          }, {
            "parent" : null,
            "children" : [ null, null ],
            "name" : "name",
            "id" : 0,
            "type" : "OTHER"
          } ],
          "paging" : {
            "nextPageToken" : "nextPageToken"
          }
        },
        "properties" : {
          "regions" : {
            "description" : "Регион доставки.",
            "items" : {
              "$ref" : "#/components/schemas/RegionDTO"
            },
            "type" : "array"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardScrollingPagerDTO"
          }
        },
        "required" : [ "regions" ],
        "type" : "object"
      },
      "GetRegionWithChildrenResponse" : {
        "example" : {
          "regions" : {
            "parent" : null,
            "children" : [ null, null ],
            "name" : "name",
            "id" : 0,
            "type" : "OTHER"
          },
          "pager" : {
            "total" : 1,
            "pagesCount" : 7,
            "pageSize" : 9,
            "from" : 5,
            "to" : 5,
            "currentPage" : 2
          }
        },
        "properties" : {
          "pager" : {
            "$ref" : "#/components/schemas/FlippingPagerDTO"
          },
          "regions" : {
            "$ref" : "#/components/schemas/RegionDTO"
          }
        },
        "type" : "object"
      },
      "GetShipmentResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/ShipmentDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "deliveryService" : {
              "name" : "name",
              "id" : 1
            },
            "availableActions" : [ "CONFIRM", "CONFIRM" ],
            "draftCount" : 7,
            "plannedCount" : 9,
            "currentStatus" : {
              "description" : "description",
              "updateTime" : "2000-01-23T04:56:07.000+00:00",
              "status" : "OUTBOUND_CREATED"
            },
            "planIntervalTo" : "2000-01-23T04:56:07.000+00:00",
            "externalId" : "externalId",
            "warehouse" : {
              "address" : "address",
              "name" : "name",
              "id" : 6
            },
            "shipmentType" : "IMPORT",
            "planIntervalFrom" : "2000-01-23T04:56:07.000+00:00",
            "warehouseTo" : {
              "address" : "address",
              "name" : "name",
              "id" : 6
            },
            "factCount" : 3,
            "palletsCount" : {
              "fact" : 5,
              "planned" : 5
            },
            "id" : 0,
            "orderIds" : [ 2, 2 ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetShipmentOrdersInfoResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/OrdersShipmentInfoDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "orderIdsWithLabels" : [ 0, 0 ],
            "orderIdsWithoutLabels" : [ 6, 6 ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "ConfirmShipmentRequest" : {
        "description" : "Запрос для подтверждения отгрузки.",
        "example" : {
          "externalShipmentId" : "externalShipmentId"
        },
        "properties" : {
          "externalShipmentId" : {
            "description" : "Идентификатор отгрузки в системе поставщика.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SetShipmentPalletsCountRequest" : {
        "description" : "Запрос на передачу количества упаковок в отгрузке.",
        "example" : {
          "placesCount" : 0
        },
        "properties" : {
          "placesCount" : {
            "description" : "Количество упаковок в отгрузке.",
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        },
        "required" : [ "placesCount" ],
        "type" : "object"
      },
      "ShipmentPalletLabelPageFormatType" : {
        "default" : "A8",
        "description" : "Формат страницы:\n* `A4` — формат страницы A4.\n* `A8` — формат страницы A8.\n",
        "enum" : [ "A4", "A8" ],
        "type" : "string"
      },
      "SearchShipmentsRequest" : {
        "description" : "Запрос информации об отгрузках.",
        "example" : {
          "cancelledOrders" : true,
          "dateTo" : "2000-01-23",
          "statuses" : [ "OUTBOUND_CREATED", "OUTBOUND_CREATED" ],
          "orderIds" : [ 0, 0 ],
          "dateFrom" : "2000-01-23"
        },
        "properties" : {
          "dateFrom" : {
            "description" : "Начальная дата для фильтрации по дате отгрузки (включительно).\n\nФормат даты: `ДД-ММ-ГГГГ`.\n",
            "format" : "date",
            "type" : "string"
          },
          "dateTo" : {
            "description" : "Конечная дата для фильтрации по дате отгрузки (включительно).\n\nФормат даты: `ДД-ММ-ГГГГ`.\n",
            "format" : "date",
            "type" : "string"
          },
          "statuses" : {
            "description" : "Список статусов отгрузок.",
            "items" : {
              "$ref" : "#/components/schemas/ShipmentStatusType"
            },
            "minItems" : 1,
            "nullable" : true,
            "type" : "array",
            "uniqueItems" : true
          },
          "orderIds" : {
            "description" : "Список идентификаторов заказов из отгрузок.",
            "items" : {
              "description" : "Идентификатор заказа.",
              "format" : "int64",
              "type" : "integer"
            },
            "minItems" : 1,
            "nullable" : true,
            "type" : "array",
            "uniqueItems" : true
          },
          "cancelledOrders" : {
            "default" : true,
            "description" : "Возвращать ли отмененные заказы.\n\nЗначение по умолчанию — `true`. Если возвращать отмененные заказы не нужно, передайте значение `false`.\n",
            "type" : "boolean"
          }
        },
        "required" : [ "dateFrom", "dateTo" ],
        "type" : "object"
      },
      "SearchShipmentsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/SearchShipmentsResponseDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Ответ на запрос информации об отгрузках.",
        "example" : {
          "result" : {
            "paging" : {
              "nextPageToken" : "nextPageToken"
            },
            "shipments" : [ {
              "deliveryService" : {
                "name" : "name",
                "id" : 1
              },
              "draftCount" : 1,
              "plannedCount" : 5,
              "planIntervalTo" : "2000-01-23T04:56:07.000+00:00",
              "externalId" : "externalId",
              "warehouse" : {
                "address" : "address",
                "name" : "name",
                "id" : 6
              },
              "shipmentType" : "IMPORT",
              "planIntervalFrom" : "2000-01-23T04:56:07.000+00:00",
              "statusDescription" : "statusDescription",
              "warehouseTo" : {
                "address" : "address",
                "name" : "name",
                "id" : 6
              },
              "factCount" : 5,
              "palletsCount" : {
                "fact" : 5,
                "planned" : 5
              },
              "id" : 0,
              "orderIds" : [ 6, 6 ],
              "statusUpdateTime" : "2000-01-23T04:56:07.000+00:00",
              "status" : "OUTBOUND_CREATED"
            }, {
              "deliveryService" : {
                "name" : "name",
                "id" : 1
              },
              "draftCount" : 1,
              "plannedCount" : 5,
              "planIntervalTo" : "2000-01-23T04:56:07.000+00:00",
              "externalId" : "externalId",
              "warehouse" : {
                "address" : "address",
                "name" : "name",
                "id" : 6
              },
              "shipmentType" : "IMPORT",
              "planIntervalFrom" : "2000-01-23T04:56:07.000+00:00",
              "statusDescription" : "statusDescription",
              "warehouseTo" : {
                "address" : "address",
                "name" : "name",
                "id" : 6
              },
              "factCount" : 5,
              "palletsCount" : {
                "fact" : 5,
                "planned" : 5
              },
              "id" : 0,
              "orderIds" : [ 6, 6 ],
              "statusUpdateTime" : "2000-01-23T04:56:07.000+00:00",
              "status" : "OUTBOUND_CREATED"
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "TransferOrdersFromShipmentRequest" : {
        "description" : "Запрос переноса заказов из отгрузки.",
        "example" : {
          "orderIds" : [ 0, 0, 0, 0, 0 ]
        },
        "properties" : {
          "orderIds" : {
            "description" : "Список заказов, которые вы не успеваете подготовить.",
            "items" : {
              "description" : "Идентификатор заказа.",
              "format" : "int64",
              "type" : "integer"
            },
            "maxItems" : 500,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "orderIds" ],
        "type" : "object"
      },
      "DeleteOffersRequest" : {
        "description" : "Фильтрации удаляемых товаров по offerIds.\n",
        "example" : {
          "offerIds" : [ null, null, null, null, null ]
        },
        "properties" : {
          "offerIds" : {
            "description" : "Список SKU товаров, которые нужно удалить.",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "maxItems" : 500,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "offerIds" ],
        "type" : "object"
      },
      "DeleteOffersResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/DeleteOffersDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Результат удаления товаров.",
        "example" : {
          "result" : {
            "notDeletedOfferIds" : [ null, null ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "ApiLockedErrorResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiErrorResponse"
        } ],
        "description" : "Ресурс из запроса заблокирован от применения к нему указанного метода.",
        "example" : {
          "errors" : [ {
            "code" : "code",
            "message" : "message"
          }, {
            "code" : "code",
            "message" : "message"
          } ],
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetOfferMappingsRequest" : {
        "example" : {
          "archived" : true,
          "categoryIds" : [ 0, 0 ],
          "vendorNames" : [ "vendorNames", "vendorNames" ],
          "offerIds" : [ null, null, null, null, null ],
          "cardStatuses" : [ "HAS_CARD_CAN_NOT_UPDATE", "HAS_CARD_CAN_NOT_UPDATE" ],
          "tags" : [ "tags", "tags" ]
        },
        "properties" : {
          "offerIds" : {
            "description" : "Идентификаторы товаров, информация о которых нужна.\n\n{% note warning \"Такой список возвращается только целиком\" %}\n\nЕсли вы запрашиваете информацию по конкретным SKU, не заполняйте:\n* `page_token`;\n* `limit`;\n* `cardStatuses`;\n* `categoryIds`;\n* `vendorNames`;\n* `tags`;\n* `archived`.\n\n{% endnote %}\n\n \n",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "maxItems" : 200,
            "minItems" : 1,
            "nullable" : true,
            "type" : "array"
          },
          "cardStatuses" : {
            "description" : "Фильтр по статусам карточек.\n\n[Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html)\n",
            "items" : {
              "$ref" : "#/components/schemas/OfferCardStatusType"
            },
            "minItems" : 1,
            "nullable" : true,
            "type" : "array"
          },
          "categoryIds" : {
            "description" : "Фильтр по категориям на Маркете.",
            "items" : {
              "type" : "integer"
            },
            "minItems" : 1,
            "nullable" : true,
            "type" : "array"
          },
          "vendorNames" : {
            "description" : "Фильтр по брендам.",
            "items" : {
              "type" : "string"
            },
            "minItems" : 1,
            "nullable" : true,
            "type" : "array"
          },
          "tags" : {
            "description" : "Фильтр по тегам.",
            "items" : {
              "type" : "string"
            },
            "minItems" : 1,
            "nullable" : true,
            "type" : "array"
          },
          "archived" : {
            "description" : "Фильтр по нахождению в архиве.\n\nПередайте `true`, чтобы получить товары, находящиеся в архиве. Если фильтр не заполнен или передано `false`, в ответе возвращаются товары, не находящиеся в архиве.\n",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "GetOfferMappingsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/GetOfferMappingsResultDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "paging" : {
              "prevPageToken" : "prevPageToken",
              "nextPageToken" : "nextPageToken"
            },
            "offerMappings" : [ {
              "offer" : {
                "downloadable" : true,
                "sellingPrograms" : [ {
                  "sellingProgram" : "FBY",
                  "status" : "FINE"
                }, {
                  "sellingProgram" : "FBY",
                  "status" : "FINE"
                } ],
                "marketCategoryId" : 0,
                "manufacturerCountries" : [ "Россия", "Россия" ],
                "description" : "description",
                "videos" : [ "videos", "videos", "videos", "videos", "videos" ],
                "purchasePrice" : {
                  "currencyId" : null,
                  "value" : 0.7061401241503109,
                  "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                },
                "type" : "DEFAULT",
                "pictures" : [ "pictures", "pictures" ],
                "vendorCode" : "VNDR-0005A",
                "archived" : true,
                "campaigns" : [ {
                  "campaignId" : 9,
                  "status" : "PUBLISHED"
                }, {
                  "campaignId" : 9,
                  "status" : "PUBLISHED"
                } ],
                "vendor" : "LEVENHUK",
                "basicPrice" : {
                  "discountBase" : 0.23021358869347652,
                  "currencyId" : "RUR",
                  "value" : 0.5637376656633328,
                  "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                },
                "lifeTime" : {
                  "timePeriod" : 6,
                  "comment" : "comment",
                  "timeUnit" : "HOUR"
                },
                "shelfLife" : {
                  "timePeriod" : 6,
                  "comment" : "comment",
                  "timeUnit" : "HOUR"
                },
                "cofinancePrice" : {
                  "currencyId" : null,
                  "value" : 0.7061401241503109,
                  "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                },
                "cardStatus" : "HAS_CARD_CAN_NOT_UPDATE",
                "barcodes" : [ "46012300000000", "46012300000000" ],
                "params" : [ {
                  "name" : "Wi-Fi",
                  "value" : "есть"
                }, {
                  "name" : "Wi-Fi",
                  "value" : "есть"
                } ],
                "tags" : [ "до 500 рублей", "до 500 рублей" ],
                "condition" : {
                  "reason" : "reason",
                  "type" : "PREOWNED",
                  "quality" : "PERFECT"
                },
                "certificates" : [ "certificates", "certificates" ],
                "boxCount" : 1,
                "additionalExpenses" : {
                  "currencyId" : null,
                  "value" : 0.7061401241503109,
                  "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                },
                "name" : "Ударная дрель Makita HP1630, 710 Вт",
                "offerId" : "offerId",
                "guaranteePeriod" : {
                  "timePeriod" : 6,
                  "comment" : "comment",
                  "timeUnit" : "HOUR"
                },
                "weightDimensions" : {
                  "length" : 65.55,
                  "width" : 50.7,
                  "weight" : 1.001,
                  "height" : 20
                },
                "category" : "category",
                "customsCommodityCode" : "8517610008",
                "adult" : true,
                "age" : {
                  "ageUnit" : "YEAR",
                  "value" : 0.5962133916683182
                },
                "manuals" : [ {
                  "title" : "title",
                  "url" : "url"
                }, {
                  "title" : "title",
                  "url" : "url"
                }, {
                  "title" : "title",
                  "url" : "url"
                }, {
                  "title" : "title",
                  "url" : "url"
                }, {
                  "title" : "title",
                  "url" : "url"
                } ]
              },
              "mapping" : {
                "marketSkuName" : "marketSkuName",
                "marketCategoryName" : "marketCategoryName",
                "marketCategoryId" : 4,
                "marketSku" : 3,
                "marketModelId" : 2,
                "marketModelName" : "marketModelName"
              }
            }, {
              "offer" : {
                "downloadable" : true,
                "sellingPrograms" : [ {
                  "sellingProgram" : "FBY",
                  "status" : "FINE"
                }, {
                  "sellingProgram" : "FBY",
                  "status" : "FINE"
                } ],
                "marketCategoryId" : 0,
                "manufacturerCountries" : [ "Россия", "Россия" ],
                "description" : "description",
                "videos" : [ "videos", "videos", "videos", "videos", "videos" ],
                "purchasePrice" : {
                  "currencyId" : null,
                  "value" : 0.7061401241503109,
                  "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                },
                "type" : "DEFAULT",
                "pictures" : [ "pictures", "pictures" ],
                "vendorCode" : "VNDR-0005A",
                "archived" : true,
                "campaigns" : [ {
                  "campaignId" : 9,
                  "status" : "PUBLISHED"
                }, {
                  "campaignId" : 9,
                  "status" : "PUBLISHED"
                } ],
                "vendor" : "LEVENHUK",
                "basicPrice" : {
                  "discountBase" : 0.23021358869347652,
                  "currencyId" : "RUR",
                  "value" : 0.5637376656633328,
                  "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                },
                "lifeTime" : {
                  "timePeriod" : 6,
                  "comment" : "comment",
                  "timeUnit" : "HOUR"
                },
                "shelfLife" : {
                  "timePeriod" : 6,
                  "comment" : "comment",
                  "timeUnit" : "HOUR"
                },
                "cofinancePrice" : {
                  "currencyId" : null,
                  "value" : 0.7061401241503109,
                  "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                },
                "cardStatus" : "HAS_CARD_CAN_NOT_UPDATE",
                "barcodes" : [ "46012300000000", "46012300000000" ],
                "params" : [ {
                  "name" : "Wi-Fi",
                  "value" : "есть"
                }, {
                  "name" : "Wi-Fi",
                  "value" : "есть"
                } ],
                "tags" : [ "до 500 рублей", "до 500 рублей" ],
                "condition" : {
                  "reason" : "reason",
                  "type" : "PREOWNED",
                  "quality" : "PERFECT"
                },
                "certificates" : [ "certificates", "certificates" ],
                "boxCount" : 1,
                "additionalExpenses" : {
                  "currencyId" : null,
                  "value" : 0.7061401241503109,
                  "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                },
                "name" : "Ударная дрель Makita HP1630, 710 Вт",
                "offerId" : "offerId",
                "guaranteePeriod" : {
                  "timePeriod" : 6,
                  "comment" : "comment",
                  "timeUnit" : "HOUR"
                },
                "weightDimensions" : {
                  "length" : 65.55,
                  "width" : 50.7,
                  "weight" : 1.001,
                  "height" : 20
                },
                "category" : "category",
                "customsCommodityCode" : "8517610008",
                "adult" : true,
                "age" : {
                  "ageUnit" : "YEAR",
                  "value" : 0.5962133916683182
                },
                "manuals" : [ {
                  "title" : "title",
                  "url" : "url"
                }, {
                  "title" : "title",
                  "url" : "url"
                }, {
                  "title" : "title",
                  "url" : "url"
                }, {
                  "title" : "title",
                  "url" : "url"
                }, {
                  "title" : "title",
                  "url" : "url"
                } ]
              },
              "mapping" : {
                "marketSkuName" : "marketSkuName",
                "marketCategoryName" : "marketCategoryName",
                "marketCategoryId" : 4,
                "marketSku" : 3,
                "marketModelId" : 2,
                "marketModelName" : "marketModelName"
              }
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "UpdateOfferMappingsRequest" : {
        "example" : {
          "offerMappings" : [ {
            "offer" : {
              "downloadable" : true,
              "marketCategoryId" : 0,
              "manufacturerCountries" : [ "Россия", "Россия" ],
              "description" : "description",
              "videos" : [ "videos", "videos", "videos", "videos", "videos" ],
              "purchasePrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "type" : "DEFAULT",
              "pictures" : [ "pictures", "pictures" ],
              "vendorCode" : "VNDR-0005A",
              "vendor" : "LEVENHUK",
              "basicPrice" : {
                "discountBase" : 0.7061401241503109,
                "currencyId" : "RUR",
                "value" : 0.23021358869347652
              },
              "lifeTime" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "shelfLife" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "cofinancePrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "parameterValues" : [ {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              } ],
              "barcodes" : [ "46012300000000", "46012300000000" ],
              "params" : [ {
                "name" : "Wi-Fi",
                "value" : "есть"
              }, {
                "name" : "Wi-Fi",
                "value" : "есть"
              } ],
              "tags" : [ "до 500 рублей", "до 500 рублей" ],
              "condition" : {
                "reason" : "reason",
                "type" : "PREOWNED",
                "quality" : "PERFECT"
              },
              "certificates" : [ "certificates", "certificates" ],
              "boxCount" : 6,
              "additionalExpenses" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "name" : "Ударная дрель Makita HP1630, 710 Вт",
              "offerId" : "offerId",
              "guaranteePeriod" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "weightDimensions" : {
                "length" : 65.55,
                "width" : 50.7,
                "weight" : 1.001,
                "height" : 20
              },
              "category" : "category",
              "customsCommodityCode" : "8517610008",
              "adult" : true,
              "age" : {
                "ageUnit" : "YEAR",
                "value" : 0.5962133916683182
              },
              "manuals" : [ {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              } ]
            },
            "mapping" : {
              "marketSku" : 3
            }
          }, {
            "offer" : {
              "downloadable" : true,
              "marketCategoryId" : 0,
              "manufacturerCountries" : [ "Россия", "Россия" ],
              "description" : "description",
              "videos" : [ "videos", "videos", "videos", "videos", "videos" ],
              "purchasePrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "type" : "DEFAULT",
              "pictures" : [ "pictures", "pictures" ],
              "vendorCode" : "VNDR-0005A",
              "vendor" : "LEVENHUK",
              "basicPrice" : {
                "discountBase" : 0.7061401241503109,
                "currencyId" : "RUR",
                "value" : 0.23021358869347652
              },
              "lifeTime" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "shelfLife" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "cofinancePrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "parameterValues" : [ {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              } ],
              "barcodes" : [ "46012300000000", "46012300000000" ],
              "params" : [ {
                "name" : "Wi-Fi",
                "value" : "есть"
              }, {
                "name" : "Wi-Fi",
                "value" : "есть"
              } ],
              "tags" : [ "до 500 рублей", "до 500 рублей" ],
              "condition" : {
                "reason" : "reason",
                "type" : "PREOWNED",
                "quality" : "PERFECT"
              },
              "certificates" : [ "certificates", "certificates" ],
              "boxCount" : 6,
              "additionalExpenses" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "name" : "Ударная дрель Makita HP1630, 710 Вт",
              "offerId" : "offerId",
              "guaranteePeriod" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "weightDimensions" : {
                "length" : 65.55,
                "width" : 50.7,
                "weight" : 1.001,
                "height" : 20
              },
              "category" : "category",
              "customsCommodityCode" : "8517610008",
              "adult" : true,
              "age" : {
                "ageUnit" : "YEAR",
                "value" : 0.5962133916683182
              },
              "manuals" : [ {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              } ]
            },
            "mapping" : {
              "marketSku" : 3
            }
          }, {
            "offer" : {
              "downloadable" : true,
              "marketCategoryId" : 0,
              "manufacturerCountries" : [ "Россия", "Россия" ],
              "description" : "description",
              "videos" : [ "videos", "videos", "videos", "videos", "videos" ],
              "purchasePrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "type" : "DEFAULT",
              "pictures" : [ "pictures", "pictures" ],
              "vendorCode" : "VNDR-0005A",
              "vendor" : "LEVENHUK",
              "basicPrice" : {
                "discountBase" : 0.7061401241503109,
                "currencyId" : "RUR",
                "value" : 0.23021358869347652
              },
              "lifeTime" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "shelfLife" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "cofinancePrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "parameterValues" : [ {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              } ],
              "barcodes" : [ "46012300000000", "46012300000000" ],
              "params" : [ {
                "name" : "Wi-Fi",
                "value" : "есть"
              }, {
                "name" : "Wi-Fi",
                "value" : "есть"
              } ],
              "tags" : [ "до 500 рублей", "до 500 рублей" ],
              "condition" : {
                "reason" : "reason",
                "type" : "PREOWNED",
                "quality" : "PERFECT"
              },
              "certificates" : [ "certificates", "certificates" ],
              "boxCount" : 6,
              "additionalExpenses" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "name" : "Ударная дрель Makita HP1630, 710 Вт",
              "offerId" : "offerId",
              "guaranteePeriod" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "weightDimensions" : {
                "length" : 65.55,
                "width" : 50.7,
                "weight" : 1.001,
                "height" : 20
              },
              "category" : "category",
              "customsCommodityCode" : "8517610008",
              "adult" : true,
              "age" : {
                "ageUnit" : "YEAR",
                "value" : 0.5962133916683182
              },
              "manuals" : [ {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              } ]
            },
            "mapping" : {
              "marketSku" : 3
            }
          }, {
            "offer" : {
              "downloadable" : true,
              "marketCategoryId" : 0,
              "manufacturerCountries" : [ "Россия", "Россия" ],
              "description" : "description",
              "videos" : [ "videos", "videos", "videos", "videos", "videos" ],
              "purchasePrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "type" : "DEFAULT",
              "pictures" : [ "pictures", "pictures" ],
              "vendorCode" : "VNDR-0005A",
              "vendor" : "LEVENHUK",
              "basicPrice" : {
                "discountBase" : 0.7061401241503109,
                "currencyId" : "RUR",
                "value" : 0.23021358869347652
              },
              "lifeTime" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "shelfLife" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "cofinancePrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "parameterValues" : [ {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              } ],
              "barcodes" : [ "46012300000000", "46012300000000" ],
              "params" : [ {
                "name" : "Wi-Fi",
                "value" : "есть"
              }, {
                "name" : "Wi-Fi",
                "value" : "есть"
              } ],
              "tags" : [ "до 500 рублей", "до 500 рублей" ],
              "condition" : {
                "reason" : "reason",
                "type" : "PREOWNED",
                "quality" : "PERFECT"
              },
              "certificates" : [ "certificates", "certificates" ],
              "boxCount" : 6,
              "additionalExpenses" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "name" : "Ударная дрель Makita HP1630, 710 Вт",
              "offerId" : "offerId",
              "guaranteePeriod" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "weightDimensions" : {
                "length" : 65.55,
                "width" : 50.7,
                "weight" : 1.001,
                "height" : 20
              },
              "category" : "category",
              "customsCommodityCode" : "8517610008",
              "adult" : true,
              "age" : {
                "ageUnit" : "YEAR",
                "value" : 0.5962133916683182
              },
              "manuals" : [ {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              } ]
            },
            "mapping" : {
              "marketSku" : 3
            }
          }, {
            "offer" : {
              "downloadable" : true,
              "marketCategoryId" : 0,
              "manufacturerCountries" : [ "Россия", "Россия" ],
              "description" : "description",
              "videos" : [ "videos", "videos", "videos", "videos", "videos" ],
              "purchasePrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "type" : "DEFAULT",
              "pictures" : [ "pictures", "pictures" ],
              "vendorCode" : "VNDR-0005A",
              "vendor" : "LEVENHUK",
              "basicPrice" : {
                "discountBase" : 0.7061401241503109,
                "currencyId" : "RUR",
                "value" : 0.23021358869347652
              },
              "lifeTime" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "shelfLife" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "cofinancePrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "parameterValues" : [ {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              } ],
              "barcodes" : [ "46012300000000", "46012300000000" ],
              "params" : [ {
                "name" : "Wi-Fi",
                "value" : "есть"
              }, {
                "name" : "Wi-Fi",
                "value" : "есть"
              } ],
              "tags" : [ "до 500 рублей", "до 500 рублей" ],
              "condition" : {
                "reason" : "reason",
                "type" : "PREOWNED",
                "quality" : "PERFECT"
              },
              "certificates" : [ "certificates", "certificates" ],
              "boxCount" : 6,
              "additionalExpenses" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "name" : "Ударная дрель Makita HP1630, 710 Вт",
              "offerId" : "offerId",
              "guaranteePeriod" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "weightDimensions" : {
                "length" : 65.55,
                "width" : 50.7,
                "weight" : 1.001,
                "height" : 20
              },
              "category" : "category",
              "customsCommodityCode" : "8517610008",
              "adult" : true,
              "age" : {
                "ageUnit" : "YEAR",
                "value" : 0.5962133916683182
              },
              "manuals" : [ {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              } ]
            },
            "mapping" : {
              "marketSku" : 3
            }
          } ],
          "onlyPartnerMediaContent" : true
        },
        "properties" : {
          "offerMappings" : {
            "description" : "Перечень товаров, которые нужно добавить или обновить.",
            "items" : {
              "$ref" : "#/components/schemas/UpdateOfferMappingDTO"
            },
            "maxItems" : 500,
            "minItems" : 1,
            "type" : "array"
          },
          "onlyPartnerMediaContent" : {
            "description" : "Будут использоваться только переданные вами изображения товаров.\n\nЗначение по умолчанию — `false`. Если вы хотите заменить изображения, которые добавил Маркет, передайте значение `true`.\n",
            "type" : "boolean"
          }
        },
        "required" : [ "offerMappings" ],
        "type" : "object"
      },
      "UpdateOfferMappingsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "results" : {
              "description" : "Ошибки и предупреждения, которые появились при обработке списка характеристик. Каждый элемент списка соответствует одному товару.\n\nЕсли ошибок и предупреждений нет, поле не передается.\n",
              "items" : {
                "$ref" : "#/components/schemas/UpdateOfferMappingResultDTO"
              },
              "nullable" : true,
              "type" : "array"
            }
          },
          "type" : "object"
        } ],
        "description" : "Описывает проблемы, возникшие при сохранении товара.",
        "example" : {
          "results" : [ {
            "warnings" : [ {
              "parameterId" : 0,
              "type" : "UNKNOWN_CATEGORY",
              "message" : "message"
            }, {
              "parameterId" : 0,
              "type" : "UNKNOWN_CATEGORY",
              "message" : "message"
            } ],
            "offerId" : "offerId",
            "errors" : [ {
              "parameterId" : 0,
              "type" : "UNKNOWN_CATEGORY",
              "message" : "message"
            }, {
              "parameterId" : 0,
              "type" : "UNKNOWN_CATEGORY",
              "message" : "message"
            } ]
          }, {
            "warnings" : [ {
              "parameterId" : 0,
              "type" : "UNKNOWN_CATEGORY",
              "message" : "message"
            }, {
              "parameterId" : 0,
              "type" : "UNKNOWN_CATEGORY",
              "message" : "message"
            } ],
            "offerId" : "offerId",
            "errors" : [ {
              "parameterId" : 0,
              "type" : "UNKNOWN_CATEGORY",
              "message" : "message"
            }, {
              "parameterId" : 0,
              "type" : "UNKNOWN_CATEGORY",
              "message" : "message"
            } ]
          } ],
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetSuggestedOfferMappingsRequest" : {
        "example" : {
          "offers" : [ {
            "vendor" : "LEVENHUK",
            "basicPrice" : {
              "currencyId" : null,
              "value" : 0.9301444243932576
            },
            "name" : "Ударная дрель Makita HP1630, 710 Вт",
            "offerId" : "offerId",
            "description" : "description",
            "category" : "category",
            "barcodes" : [ "46012300000000", "46012300000000" ],
            "vendorCode" : "VNDR-0005A"
          }, {
            "vendor" : "LEVENHUK",
            "basicPrice" : {
              "currencyId" : null,
              "value" : 0.9301444243932576
            },
            "name" : "Ударная дрель Makita HP1630, 710 Вт",
            "offerId" : "offerId",
            "description" : "description",
            "category" : "category",
            "barcodes" : [ "46012300000000", "46012300000000" ],
            "vendorCode" : "VNDR-0005A"
          }, {
            "vendor" : "LEVENHUK",
            "basicPrice" : {
              "currencyId" : null,
              "value" : 0.9301444243932576
            },
            "name" : "Ударная дрель Makita HP1630, 710 Вт",
            "offerId" : "offerId",
            "description" : "description",
            "category" : "category",
            "barcodes" : [ "46012300000000", "46012300000000" ],
            "vendorCode" : "VNDR-0005A"
          }, {
            "vendor" : "LEVENHUK",
            "basicPrice" : {
              "currencyId" : null,
              "value" : 0.9301444243932576
            },
            "name" : "Ударная дрель Makita HP1630, 710 Вт",
            "offerId" : "offerId",
            "description" : "description",
            "category" : "category",
            "barcodes" : [ "46012300000000", "46012300000000" ],
            "vendorCode" : "VNDR-0005A"
          }, {
            "vendor" : "LEVENHUK",
            "basicPrice" : {
              "currencyId" : null,
              "value" : 0.9301444243932576
            },
            "name" : "Ударная дрель Makita HP1630, 710 Вт",
            "offerId" : "offerId",
            "description" : "description",
            "category" : "category",
            "barcodes" : [ "46012300000000", "46012300000000" ],
            "vendorCode" : "VNDR-0005A"
          } ]
        },
        "properties" : {
          "offers" : {
            "description" : "Список товаров.",
            "items" : {
              "$ref" : "#/components/schemas/SuggestedOfferDTO"
            },
            "maxItems" : 500,
            "minItems" : 1,
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "GetSuggestedOfferMappingsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/GetSuggestedOfferMappingsResultDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "offers" : [ {
              "offer" : {
                "vendor" : "LEVENHUK",
                "basicPrice" : {
                  "currencyId" : null,
                  "value" : 0.9301444243932576
                },
                "name" : "Ударная дрель Makita HP1630, 710 Вт",
                "offerId" : "offerId",
                "description" : "description",
                "category" : "category",
                "barcodes" : [ "46012300000000", "46012300000000" ],
                "vendorCode" : "VNDR-0005A"
              },
              "mapping" : {
                "marketSkuName" : "marketSkuName",
                "marketCategoryName" : "marketCategoryName",
                "marketCategoryId" : 4,
                "marketSku" : 3,
                "marketModelId" : 2,
                "marketModelName" : "marketModelName"
              }
            }, {
              "offer" : {
                "vendor" : "LEVENHUK",
                "basicPrice" : {
                  "currencyId" : null,
                  "value" : 0.9301444243932576
                },
                "name" : "Ударная дрель Makita HP1630, 710 Вт",
                "offerId" : "offerId",
                "description" : "description",
                "category" : "category",
                "barcodes" : [ "46012300000000", "46012300000000" ],
                "vendorCode" : "VNDR-0005A"
              },
              "mapping" : {
                "marketSkuName" : "marketSkuName",
                "marketCategoryName" : "marketCategoryName",
                "marketCategoryId" : 4,
                "marketSku" : 3,
                "marketModelId" : 2,
                "marketModelName" : "marketModelName"
              }
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "AddOffersToArchiveRequest" : {
        "description" : "Товары, которые нужно поместить в архив.\n",
        "example" : {
          "offerIds" : [ null, null, null, null, null ]
        },
        "properties" : {
          "offerIds" : {
            "description" : "Список товаров, которые нужно поместить в архив.",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "maxItems" : 200,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "offerIds" ],
        "type" : "object"
      },
      "AddOffersToArchiveResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/AddOffersToArchiveDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Результат архивации товаров.",
        "example" : {
          "result" : {
            "notArchivedOffers" : [ {
              "offerId" : "offerId",
              "error" : "OFFER_HAS_STOCKS"
            }, {
              "offerId" : "offerId",
              "error" : "OFFER_HAS_STOCKS"
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "DeleteOffersFromArchiveRequest" : {
        "description" : "Товары, которые нужно восстановить из архива.\n",
        "example" : {
          "offerIds" : [ null, null, null, null, null ]
        },
        "properties" : {
          "offerIds" : {
            "description" : "Список товаров, которые нужно восстановить из архива.",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "maxItems" : 200,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "offerIds" ],
        "type" : "object"
      },
      "DeleteOffersFromArchiveResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/DeleteOffersFromArchiveDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Результат разархивации товаров.",
        "example" : {
          "result" : {
            "notUnarchivedOfferIds" : [ null, null ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "ShopSku" : {
        "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
        "maxLength" : 255,
        "minLength" : 1,
        "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
        "type" : "string"
      },
      "OfferMappingKindType" : {
        "description" : "Вид маппинга.",
        "enum" : [ "ACTIVE", "ALL" ],
        "type" : "string"
      },
      "OfferProcessingStatusType" : {
        "description" : "Статус публикации товара:\n\n* `READY` — товар прошел модерацию. Чтобы разместить его на Маркете, установите для него цену.\n* `IN_WORK` — товар проходит модерацию. Это занимает несколько дней.\n* `NEED_CONTENT` — для товара без SKU на Маркете `marketSku` нужно найти карточку самостоятельно (через API или кабинет продавца на Маркете) или создать ее, если товар еще не продается на Маркете.\n* `NEED_INFO` — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. Информация о причинах отклонения возвращается в параметре `notes`.\n* `REJECTED` — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары.\n* `SUSPENDED` — товар не прошел модерацию, так как Маркет пока не размещает подобные товары.\n",
        "enum" : [ "UNKNOWN", "READY", "IN_WORK", "NEED_INFO", "NEED_MAPPING", "NEED_CONTENT", "CONTENT_PROCESSING", "SUSPENDED", "REJECTED", "REVIEW", "CREATE_ERROR", "UPDATE_ERROR" ],
        "type" : "string"
      },
      "OfferAvailabilityStatusType" : {
        "description" : "Планы по поставкам:\n\n* `ACTIVE` — поставки будут.\n* `INACTIVE` — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять. Через 60 дней после того, как товар закончится на складе, этот статус изменится на `DELISTED`.\n* `DELISTED` — архив: товар закончился на складе, и его поставок больше не будет. Если товар вернется на склад (например, покупатель вернет заказ), этот статус изменится на `INACTIVE`.\n",
        "enum" : [ "ACTIVE", "INACTIVE", "DELISTED" ],
        "type" : "string"
      },
      "GetOfferMappingEntriesResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/OfferMappingEntriesDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Ответ на запрос списка товаров в каталоге.",
        "example" : {
          "result" : {
            "offerMappingEntries" : [ {
              "offer" : {
                "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
                "certificate" : "certificate",
                "description" : "description",
                "availability" : "ACTIVE",
                "pictures" : [ "pictures", "pictures" ],
                "vendorCode" : "VNDR-0005A",
                "manufacturer" : "manufacturer",
                "urls" : [ "urls", "urls" ],
                "deliveryDurationDays" : 5,
                "feedId" : 0,
                "vendor" : "LEVENHUK",
                "price" : 2.027123023002322,
                "transportUnitSize" : 1,
                "id" : "id",
                "lifeTime" : {
                  "timePeriod" : 6,
                  "comment" : "comment",
                  "timeUnit" : "HOUR"
                },
                "shelfLife" : {
                  "timePeriod" : 6,
                  "comment" : "comment",
                  "timeUnit" : "HOUR"
                },
                "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
                "lifeTimeDays" : 9,
                "quantumOfSupply" : 5,
                "barcodes" : [ "46012300000000", "46012300000000" ],
                "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
                "processingState" : {
                  "notes" : [ {
                    "payload" : "payload",
                    "type" : "ASSORTMENT"
                  }, {
                    "payload" : "payload",
                    "type" : "ASSORTMENT"
                  } ],
                  "status" : "UNKNOWN"
                },
                "shopSku" : "shopSku",
                "boxCount" : 2,
                "minShipment" : 6,
                "name" : "Ударная дрель Makita HP1630, 710 Вт",
                "shelfLifeDays" : 7,
                "guaranteePeriod" : {
                  "timePeriod" : 6,
                  "comment" : "comment",
                  "timeUnit" : "HOUR"
                },
                "weightDimensions" : {
                  "length" : 65.55,
                  "width" : 50.7,
                  "weight" : 1.001,
                  "height" : 20
                },
                "category" : "category",
                "guaranteePeriodDays" : 3
              },
              "mapping" : {
                "modelId" : 7,
                "marketSku" : 4,
                "categoryId" : 1
              },
              "awaitingModerationMapping" : {
                "modelId" : 7,
                "marketSku" : 4,
                "categoryId" : 1
              },
              "rejectedMapping" : {
                "modelId" : 7,
                "marketSku" : 4,
                "categoryId" : 1
              }
            }, {
              "offer" : {
                "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
                "certificate" : "certificate",
                "description" : "description",
                "availability" : "ACTIVE",
                "pictures" : [ "pictures", "pictures" ],
                "vendorCode" : "VNDR-0005A",
                "manufacturer" : "manufacturer",
                "urls" : [ "urls", "urls" ],
                "deliveryDurationDays" : 5,
                "feedId" : 0,
                "vendor" : "LEVENHUK",
                "price" : 2.027123023002322,
                "transportUnitSize" : 1,
                "id" : "id",
                "lifeTime" : {
                  "timePeriod" : 6,
                  "comment" : "comment",
                  "timeUnit" : "HOUR"
                },
                "shelfLife" : {
                  "timePeriod" : 6,
                  "comment" : "comment",
                  "timeUnit" : "HOUR"
                },
                "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
                "lifeTimeDays" : 9,
                "quantumOfSupply" : 5,
                "barcodes" : [ "46012300000000", "46012300000000" ],
                "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
                "processingState" : {
                  "notes" : [ {
                    "payload" : "payload",
                    "type" : "ASSORTMENT"
                  }, {
                    "payload" : "payload",
                    "type" : "ASSORTMENT"
                  } ],
                  "status" : "UNKNOWN"
                },
                "shopSku" : "shopSku",
                "boxCount" : 2,
                "minShipment" : 6,
                "name" : "Ударная дрель Makita HP1630, 710 Вт",
                "shelfLifeDays" : 7,
                "guaranteePeriod" : {
                  "timePeriod" : 6,
                  "comment" : "comment",
                  "timeUnit" : "HOUR"
                },
                "weightDimensions" : {
                  "length" : 65.55,
                  "width" : 50.7,
                  "weight" : 1.001,
                  "height" : 20
                },
                "category" : "category",
                "guaranteePeriodDays" : 3
              },
              "mapping" : {
                "modelId" : 7,
                "marketSku" : 4,
                "categoryId" : 1
              },
              "awaitingModerationMapping" : {
                "modelId" : 7,
                "marketSku" : 4,
                "categoryId" : 1
              },
              "rejectedMapping" : {
                "modelId" : 7,
                "marketSku" : 4,
                "categoryId" : 1
              }
            } ],
            "paging" : {
              "prevPageToken" : "prevPageToken",
              "nextPageToken" : "nextPageToken"
            }
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "UpdateOfferMappingEntryRequest" : {
        "description" : "Запрос на обновление товаров.",
        "example" : {
          "offerMappingEntries" : [ {
            "offer" : {
              "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
              "certificate" : "certificate",
              "description" : "description",
              "availability" : "ACTIVE",
              "pictures" : [ "pictures", "pictures" ],
              "vendorCode" : "VNDR-0005A",
              "manufacturer" : "manufacturer",
              "urls" : [ "urls", "urls" ],
              "deliveryDurationDays" : 5,
              "feedId" : 0,
              "vendor" : "LEVENHUK",
              "transportUnitSize" : 1,
              "id" : "id",
              "lifeTime" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "shelfLife" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
              "lifeTimeDays" : 9,
              "quantumOfSupply" : 5,
              "barcodes" : [ "46012300000000", "46012300000000" ],
              "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
              "processingState" : {
                "notes" : [ {
                  "payload" : "payload",
                  "type" : "ASSORTMENT"
                }, {
                  "payload" : "payload",
                  "type" : "ASSORTMENT"
                } ],
                "status" : "UNKNOWN"
              },
              "shopSku" : "shopSku",
              "boxCount" : 2,
              "minShipment" : 6,
              "name" : "Ударная дрель Makita HP1630, 710 Вт",
              "shelfLifeDays" : 7,
              "guaranteePeriod" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "weightDimensions" : {
                "length" : 65.55,
                "width" : 50.7,
                "weight" : 1.001,
                "height" : 20
              },
              "category" : "category",
              "guaranteePeriodDays" : 3
            },
            "mapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            },
            "awaitingModerationMapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            },
            "rejectedMapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            }
          }, {
            "offer" : {
              "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
              "certificate" : "certificate",
              "description" : "description",
              "availability" : "ACTIVE",
              "pictures" : [ "pictures", "pictures" ],
              "vendorCode" : "VNDR-0005A",
              "manufacturer" : "manufacturer",
              "urls" : [ "urls", "urls" ],
              "deliveryDurationDays" : 5,
              "feedId" : 0,
              "vendor" : "LEVENHUK",
              "transportUnitSize" : 1,
              "id" : "id",
              "lifeTime" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "shelfLife" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
              "lifeTimeDays" : 9,
              "quantumOfSupply" : 5,
              "barcodes" : [ "46012300000000", "46012300000000" ],
              "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
              "processingState" : {
                "notes" : [ {
                  "payload" : "payload",
                  "type" : "ASSORTMENT"
                }, {
                  "payload" : "payload",
                  "type" : "ASSORTMENT"
                } ],
                "status" : "UNKNOWN"
              },
              "shopSku" : "shopSku",
              "boxCount" : 2,
              "minShipment" : 6,
              "name" : "Ударная дрель Makita HP1630, 710 Вт",
              "shelfLifeDays" : 7,
              "guaranteePeriod" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "weightDimensions" : {
                "length" : 65.55,
                "width" : 50.7,
                "weight" : 1.001,
                "height" : 20
              },
              "category" : "category",
              "guaranteePeriodDays" : 3
            },
            "mapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            },
            "awaitingModerationMapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            },
            "rejectedMapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            }
          }, {
            "offer" : {
              "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
              "certificate" : "certificate",
              "description" : "description",
              "availability" : "ACTIVE",
              "pictures" : [ "pictures", "pictures" ],
              "vendorCode" : "VNDR-0005A",
              "manufacturer" : "manufacturer",
              "urls" : [ "urls", "urls" ],
              "deliveryDurationDays" : 5,
              "feedId" : 0,
              "vendor" : "LEVENHUK",
              "transportUnitSize" : 1,
              "id" : "id",
              "lifeTime" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "shelfLife" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
              "lifeTimeDays" : 9,
              "quantumOfSupply" : 5,
              "barcodes" : [ "46012300000000", "46012300000000" ],
              "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
              "processingState" : {
                "notes" : [ {
                  "payload" : "payload",
                  "type" : "ASSORTMENT"
                }, {
                  "payload" : "payload",
                  "type" : "ASSORTMENT"
                } ],
                "status" : "UNKNOWN"
              },
              "shopSku" : "shopSku",
              "boxCount" : 2,
              "minShipment" : 6,
              "name" : "Ударная дрель Makita HP1630, 710 Вт",
              "shelfLifeDays" : 7,
              "guaranteePeriod" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "weightDimensions" : {
                "length" : 65.55,
                "width" : 50.7,
                "weight" : 1.001,
                "height" : 20
              },
              "category" : "category",
              "guaranteePeriodDays" : 3
            },
            "mapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            },
            "awaitingModerationMapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            },
            "rejectedMapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            }
          }, {
            "offer" : {
              "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
              "certificate" : "certificate",
              "description" : "description",
              "availability" : "ACTIVE",
              "pictures" : [ "pictures", "pictures" ],
              "vendorCode" : "VNDR-0005A",
              "manufacturer" : "manufacturer",
              "urls" : [ "urls", "urls" ],
              "deliveryDurationDays" : 5,
              "feedId" : 0,
              "vendor" : "LEVENHUK",
              "transportUnitSize" : 1,
              "id" : "id",
              "lifeTime" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "shelfLife" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
              "lifeTimeDays" : 9,
              "quantumOfSupply" : 5,
              "barcodes" : [ "46012300000000", "46012300000000" ],
              "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
              "processingState" : {
                "notes" : [ {
                  "payload" : "payload",
                  "type" : "ASSORTMENT"
                }, {
                  "payload" : "payload",
                  "type" : "ASSORTMENT"
                } ],
                "status" : "UNKNOWN"
              },
              "shopSku" : "shopSku",
              "boxCount" : 2,
              "minShipment" : 6,
              "name" : "Ударная дрель Makita HP1630, 710 Вт",
              "shelfLifeDays" : 7,
              "guaranteePeriod" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "weightDimensions" : {
                "length" : 65.55,
                "width" : 50.7,
                "weight" : 1.001,
                "height" : 20
              },
              "category" : "category",
              "guaranteePeriodDays" : 3
            },
            "mapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            },
            "awaitingModerationMapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            },
            "rejectedMapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            }
          }, {
            "offer" : {
              "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
              "certificate" : "certificate",
              "description" : "description",
              "availability" : "ACTIVE",
              "pictures" : [ "pictures", "pictures" ],
              "vendorCode" : "VNDR-0005A",
              "manufacturer" : "manufacturer",
              "urls" : [ "urls", "urls" ],
              "deliveryDurationDays" : 5,
              "feedId" : 0,
              "vendor" : "LEVENHUK",
              "transportUnitSize" : 1,
              "id" : "id",
              "lifeTime" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "shelfLife" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
              "lifeTimeDays" : 9,
              "quantumOfSupply" : 5,
              "barcodes" : [ "46012300000000", "46012300000000" ],
              "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
              "processingState" : {
                "notes" : [ {
                  "payload" : "payload",
                  "type" : "ASSORTMENT"
                }, {
                  "payload" : "payload",
                  "type" : "ASSORTMENT"
                } ],
                "status" : "UNKNOWN"
              },
              "shopSku" : "shopSku",
              "boxCount" : 2,
              "minShipment" : 6,
              "name" : "Ударная дрель Makita HP1630, 710 Вт",
              "shelfLifeDays" : 7,
              "guaranteePeriod" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "weightDimensions" : {
                "length" : 65.55,
                "width" : 50.7,
                "weight" : 1.001,
                "height" : 20
              },
              "category" : "category",
              "guaranteePeriodDays" : 3
            },
            "mapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            },
            "awaitingModerationMapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            },
            "rejectedMapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            }
          } ]
        },
        "properties" : {
          "offerMappingEntries" : {
            "description" : "Информация о товарах в каталоге.",
            "items" : {
              "$ref" : "#/components/schemas/UpdateOfferMappingEntryDTO"
            },
            "maxItems" : 500,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "offerMappingEntries" ],
        "type" : "object"
      },
      "GetSuggestedOfferMappingEntriesRequest" : {
        "description" : "Запрос рекомендованных карточек товара.",
        "example" : {
          "offers" : [ {
            "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
            "certificate" : "certificate",
            "description" : "description",
            "availability" : "ACTIVE",
            "pictures" : [ "pictures", "pictures" ],
            "vendorCode" : "VNDR-0005A",
            "manufacturer" : "manufacturer",
            "urls" : [ "urls", "urls" ],
            "deliveryDurationDays" : 5,
            "feedId" : 0,
            "vendor" : "LEVENHUK",
            "price" : 2.027123023002322,
            "transportUnitSize" : 1,
            "id" : "id",
            "lifeTime" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "shelfLife" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
            "lifeTimeDays" : 9,
            "quantumOfSupply" : 5,
            "barcodes" : [ "46012300000000", "46012300000000" ],
            "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
            "processingState" : {
              "notes" : [ {
                "payload" : "payload",
                "type" : "ASSORTMENT"
              }, {
                "payload" : "payload",
                "type" : "ASSORTMENT"
              } ],
              "status" : "UNKNOWN"
            },
            "shopSku" : "shopSku",
            "boxCount" : 2,
            "minShipment" : 6,
            "name" : "Ударная дрель Makita HP1630, 710 Вт",
            "shelfLifeDays" : 7,
            "guaranteePeriod" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "weightDimensions" : {
              "length" : 65.55,
              "width" : 50.7,
              "weight" : 1.001,
              "height" : 20
            },
            "category" : "category",
            "guaranteePeriodDays" : 3
          }, {
            "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
            "certificate" : "certificate",
            "description" : "description",
            "availability" : "ACTIVE",
            "pictures" : [ "pictures", "pictures" ],
            "vendorCode" : "VNDR-0005A",
            "manufacturer" : "manufacturer",
            "urls" : [ "urls", "urls" ],
            "deliveryDurationDays" : 5,
            "feedId" : 0,
            "vendor" : "LEVENHUK",
            "price" : 2.027123023002322,
            "transportUnitSize" : 1,
            "id" : "id",
            "lifeTime" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "shelfLife" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
            "lifeTimeDays" : 9,
            "quantumOfSupply" : 5,
            "barcodes" : [ "46012300000000", "46012300000000" ],
            "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
            "processingState" : {
              "notes" : [ {
                "payload" : "payload",
                "type" : "ASSORTMENT"
              }, {
                "payload" : "payload",
                "type" : "ASSORTMENT"
              } ],
              "status" : "UNKNOWN"
            },
            "shopSku" : "shopSku",
            "boxCount" : 2,
            "minShipment" : 6,
            "name" : "Ударная дрель Makita HP1630, 710 Вт",
            "shelfLifeDays" : 7,
            "guaranteePeriod" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "weightDimensions" : {
              "length" : 65.55,
              "width" : 50.7,
              "weight" : 1.001,
              "height" : 20
            },
            "category" : "category",
            "guaranteePeriodDays" : 3
          }, {
            "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
            "certificate" : "certificate",
            "description" : "description",
            "availability" : "ACTIVE",
            "pictures" : [ "pictures", "pictures" ],
            "vendorCode" : "VNDR-0005A",
            "manufacturer" : "manufacturer",
            "urls" : [ "urls", "urls" ],
            "deliveryDurationDays" : 5,
            "feedId" : 0,
            "vendor" : "LEVENHUK",
            "price" : 2.027123023002322,
            "transportUnitSize" : 1,
            "id" : "id",
            "lifeTime" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "shelfLife" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
            "lifeTimeDays" : 9,
            "quantumOfSupply" : 5,
            "barcodes" : [ "46012300000000", "46012300000000" ],
            "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
            "processingState" : {
              "notes" : [ {
                "payload" : "payload",
                "type" : "ASSORTMENT"
              }, {
                "payload" : "payload",
                "type" : "ASSORTMENT"
              } ],
              "status" : "UNKNOWN"
            },
            "shopSku" : "shopSku",
            "boxCount" : 2,
            "minShipment" : 6,
            "name" : "Ударная дрель Makita HP1630, 710 Вт",
            "shelfLifeDays" : 7,
            "guaranteePeriod" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "weightDimensions" : {
              "length" : 65.55,
              "width" : 50.7,
              "weight" : 1.001,
              "height" : 20
            },
            "category" : "category",
            "guaranteePeriodDays" : 3
          }, {
            "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
            "certificate" : "certificate",
            "description" : "description",
            "availability" : "ACTIVE",
            "pictures" : [ "pictures", "pictures" ],
            "vendorCode" : "VNDR-0005A",
            "manufacturer" : "manufacturer",
            "urls" : [ "urls", "urls" ],
            "deliveryDurationDays" : 5,
            "feedId" : 0,
            "vendor" : "LEVENHUK",
            "price" : 2.027123023002322,
            "transportUnitSize" : 1,
            "id" : "id",
            "lifeTime" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "shelfLife" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
            "lifeTimeDays" : 9,
            "quantumOfSupply" : 5,
            "barcodes" : [ "46012300000000", "46012300000000" ],
            "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
            "processingState" : {
              "notes" : [ {
                "payload" : "payload",
                "type" : "ASSORTMENT"
              }, {
                "payload" : "payload",
                "type" : "ASSORTMENT"
              } ],
              "status" : "UNKNOWN"
            },
            "shopSku" : "shopSku",
            "boxCount" : 2,
            "minShipment" : 6,
            "name" : "Ударная дрель Makita HP1630, 710 Вт",
            "shelfLifeDays" : 7,
            "guaranteePeriod" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "weightDimensions" : {
              "length" : 65.55,
              "width" : 50.7,
              "weight" : 1.001,
              "height" : 20
            },
            "category" : "category",
            "guaranteePeriodDays" : 3
          }, {
            "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
            "certificate" : "certificate",
            "description" : "description",
            "availability" : "ACTIVE",
            "pictures" : [ "pictures", "pictures" ],
            "vendorCode" : "VNDR-0005A",
            "manufacturer" : "manufacturer",
            "urls" : [ "urls", "urls" ],
            "deliveryDurationDays" : 5,
            "feedId" : 0,
            "vendor" : "LEVENHUK",
            "price" : 2.027123023002322,
            "transportUnitSize" : 1,
            "id" : "id",
            "lifeTime" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "shelfLife" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
            "lifeTimeDays" : 9,
            "quantumOfSupply" : 5,
            "barcodes" : [ "46012300000000", "46012300000000" ],
            "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
            "processingState" : {
              "notes" : [ {
                "payload" : "payload",
                "type" : "ASSORTMENT"
              }, {
                "payload" : "payload",
                "type" : "ASSORTMENT"
              } ],
              "status" : "UNKNOWN"
            },
            "shopSku" : "shopSku",
            "boxCount" : 2,
            "minShipment" : 6,
            "name" : "Ударная дрель Makita HP1630, 710 Вт",
            "shelfLifeDays" : 7,
            "guaranteePeriod" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "weightDimensions" : {
              "length" : 65.55,
              "width" : 50.7,
              "weight" : 1.001,
              "height" : 20
            },
            "category" : "category",
            "guaranteePeriodDays" : 3
          } ]
        },
        "properties" : {
          "offers" : {
            "description" : "Список товаров.",
            "items" : {
              "$ref" : "#/components/schemas/MappingsOfferDTO"
            },
            "maxItems" : 500,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "offers" ],
        "type" : "object"
      },
      "GetSuggestedOfferMappingEntriesResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/OfferMappingSuggestionsListDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Ответ со списком рекомендованных карточек товара.",
        "example" : {
          "result" : {
            "offers" : [ {
              "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
              "marketCategoryId" : 4,
              "certificate" : "certificate",
              "description" : "description",
              "availability" : "ACTIVE",
              "marketModelId" : 7,
              "pictures" : [ "pictures", "pictures" ],
              "vendorCode" : "VNDR-0005A",
              "manufacturer" : "manufacturer",
              "marketSkuName" : "marketSkuName",
              "urls" : [ "urls", "urls" ],
              "deliveryDurationDays" : 5,
              "feedId" : 0,
              "vendor" : "LEVENHUK",
              "price" : 2.027123023002322,
              "marketSku" : null,
              "transportUnitSize" : 1,
              "id" : "id",
              "lifeTime" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "shelfLife" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
              "marketModelName" : "marketModelName",
              "lifeTimeDays" : 9,
              "quantumOfSupply" : 5,
              "barcodes" : [ "46012300000000", "46012300000000" ],
              "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
              "processingState" : {
                "notes" : [ {
                  "payload" : "payload",
                  "type" : "ASSORTMENT"
                }, {
                  "payload" : "payload",
                  "type" : "ASSORTMENT"
                } ],
                "status" : "UNKNOWN"
              },
              "marketCategoryName" : "marketCategoryName",
              "shopSku" : "shopSku",
              "boxCount" : 2,
              "minShipment" : 6,
              "name" : "Ударная дрель Makita HP1630, 710 Вт",
              "shelfLifeDays" : 7,
              "guaranteePeriod" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "weightDimensions" : {
                "length" : 65.55,
                "width" : 50.7,
                "weight" : 1.001,
                "height" : 20
              },
              "category" : "category",
              "guaranteePeriodDays" : 3
            }, {
              "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
              "marketCategoryId" : 4,
              "certificate" : "certificate",
              "description" : "description",
              "availability" : "ACTIVE",
              "marketModelId" : 7,
              "pictures" : [ "pictures", "pictures" ],
              "vendorCode" : "VNDR-0005A",
              "manufacturer" : "manufacturer",
              "marketSkuName" : "marketSkuName",
              "urls" : [ "urls", "urls" ],
              "deliveryDurationDays" : 5,
              "feedId" : 0,
              "vendor" : "LEVENHUK",
              "price" : 2.027123023002322,
              "marketSku" : null,
              "transportUnitSize" : 1,
              "id" : "id",
              "lifeTime" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "shelfLife" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
              "marketModelName" : "marketModelName",
              "lifeTimeDays" : 9,
              "quantumOfSupply" : 5,
              "barcodes" : [ "46012300000000", "46012300000000" ],
              "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
              "processingState" : {
                "notes" : [ {
                  "payload" : "payload",
                  "type" : "ASSORTMENT"
                }, {
                  "payload" : "payload",
                  "type" : "ASSORTMENT"
                } ],
                "status" : "UNKNOWN"
              },
              "marketCategoryName" : "marketCategoryName",
              "shopSku" : "shopSku",
              "boxCount" : 2,
              "minShipment" : 6,
              "name" : "Ударная дрель Makita HP1630, 710 Вт",
              "shelfLifeDays" : 7,
              "guaranteePeriod" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "weightDimensions" : {
                "length" : 65.55,
                "width" : 50.7,
                "weight" : 1.001,
                "height" : 20
              },
              "category" : "category",
              "guaranteePeriodDays" : 3
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "UpdateBusinessPricesRequest" : {
        "description" : "Запрос на установку базовых цен на товары.",
        "example" : {
          "offers" : [ {
            "price" : {
              "discountBase" : 0.7061401241503109,
              "currencyId" : "RUR",
              "value" : 0.23021358869347652
            },
            "offerId" : "offerId"
          }, {
            "price" : {
              "discountBase" : 0.7061401241503109,
              "currencyId" : "RUR",
              "value" : 0.23021358869347652
            },
            "offerId" : "offerId"
          }, {
            "price" : {
              "discountBase" : 0.7061401241503109,
              "currencyId" : "RUR",
              "value" : 0.23021358869347652
            },
            "offerId" : "offerId"
          }, {
            "price" : {
              "discountBase" : 0.7061401241503109,
              "currencyId" : "RUR",
              "value" : 0.23021358869347652
            },
            "offerId" : "offerId"
          }, {
            "price" : {
              "discountBase" : 0.7061401241503109,
              "currencyId" : "RUR",
              "value" : 0.23021358869347652
            },
            "offerId" : "offerId"
          } ]
        },
        "properties" : {
          "offers" : {
            "description" : "Список товаров с ценами.",
            "items" : {
              "$ref" : "#/components/schemas/UpdateBusinessOfferPriceDTO"
            },
            "maxItems" : 500,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "offers" ],
        "type" : "object"
      },
      "UpdatePricesRequest" : {
        "description" : "Запрос на установку цен на товары.",
        "example" : {
          "offers" : [ {
            "price" : {
              "vat" : 1,
              "discountBase" : 6.027456183070403,
              "currencyId" : "RUR",
              "value" : 0.8008281904610115
            },
            "offerId" : "offerId"
          }, {
            "price" : {
              "vat" : 1,
              "discountBase" : 6.027456183070403,
              "currencyId" : "RUR",
              "value" : 0.8008281904610115
            },
            "offerId" : "offerId"
          }, {
            "price" : {
              "vat" : 1,
              "discountBase" : 6.027456183070403,
              "currencyId" : "RUR",
              "value" : 0.8008281904610115
            },
            "offerId" : "offerId"
          }, {
            "price" : {
              "vat" : 1,
              "discountBase" : 6.027456183070403,
              "currencyId" : "RUR",
              "value" : 0.8008281904610115
            },
            "offerId" : "offerId"
          }, {
            "price" : {
              "vat" : 1,
              "discountBase" : 6.027456183070403,
              "currencyId" : "RUR",
              "value" : 0.8008281904610115
            },
            "offerId" : "offerId"
          } ]
        },
        "properties" : {
          "offers" : {
            "description" : "Список товаров.",
            "items" : {
              "$ref" : "#/components/schemas/OfferPriceDTO"
            },
            "maxItems" : 2000,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "offers" ],
        "type" : "object"
      },
      "GetPricesResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/OfferPriceListResponseDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Ответ на запрос списка цен.",
        "example" : {
          "result" : {
            "offers" : [ {
              "price" : {
                "vat" : 1,
                "discountBase" : 6.027456183070403,
                "currencyId" : "RUR",
                "value" : 0.8008281904610115
              },
              "marketSku" : 0,
              "id" : "id",
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            }, {
              "price" : {
                "vat" : 1,
                "discountBase" : 6.027456183070403,
                "currencyId" : "RUR",
                "value" : 0.8008281904610115
              },
              "marketSku" : 0,
              "id" : "id",
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            } ],
            "total" : 6,
            "paging" : {
              "prevPageToken" : "prevPageToken",
              "nextPageToken" : "nextPageToken"
            }
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetPricesByOfferIdsRequest" : {
        "description" : "Запрос списка цен.",
        "example" : {
          "offerIds" : [ null, null, null, null, null ]
        },
        "properties" : {
          "offerIds" : {
            "description" : "Список SKU.\n\n{% note warning \"Такой список возвращается только целиком\" %}\n\nЕсли вы запрашиваете информацию по конкретным SKU, не заполняйте:\n\n* `page_token`\n* `limit`\n\n{% endnote %}\n\n \n",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "maxItems" : 2000,
            "minItems" : 1,
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "GetPricesByOfferIdsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/OfferPriceByOfferIdsListResponseDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Ответ на запрос списка цен.",
        "example" : {
          "result" : {
            "offers" : [ {
              "price" : {
                "vat" : 1,
                "discountBase" : 6.027456183070403,
                "currencyId" : "RUR",
                "value" : 0.8008281904610115
              },
              "offerId" : "offerId",
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            }, {
              "price" : {
                "vat" : 1,
                "discountBase" : 6.027456183070403,
                "currencyId" : "RUR",
                "value" : 0.8008281904610115
              },
              "offerId" : "offerId",
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            } ],
            "paging" : {
              "prevPageToken" : "prevPageToken",
              "nextPageToken" : "nextPageToken"
            }
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "SuggestPricesRequest" : {
        "description" : "Запрос на получение списка цен для продвижения.",
        "example" : {
          "offers" : [ {
            "marketSku" : 0,
            "offerId" : "offerId"
          }, {
            "marketSku" : 0,
            "offerId" : "offerId"
          }, {
            "marketSku" : 0,
            "offerId" : "offerId"
          }, {
            "marketSku" : 0,
            "offerId" : "offerId"
          }, {
            "marketSku" : 0,
            "offerId" : "offerId"
          } ]
        },
        "properties" : {
          "offers" : {
            "description" : "Список товаров.",
            "items" : {
              "$ref" : "#/components/schemas/SuggestOfferPriceDTO"
            },
            "maxItems" : 1000,
            "type" : "array"
          }
        },
        "required" : [ "offers" ],
        "type" : "object"
      },
      "SuggestPricesResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/SuggestPricesResultDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Ответ на запрос списка цен для продвижения.",
        "example" : {
          "result" : {
            "offers" : [ {
              "marketSku" : 0,
              "offerId" : "offerId",
              "priceSuggestion" : [ {
                "price" : 6.027456183070403,
                "type" : "BUYBOX"
              }, {
                "price" : 6.027456183070403,
                "type" : "BUYBOX"
              } ]
            }, {
              "marketSku" : 0,
              "offerId" : "offerId",
              "priceSuggestion" : [ {
                "price" : 6.027456183070403,
                "type" : "BUYBOX"
              }, {
                "price" : 6.027456183070403,
                "type" : "BUYBOX"
              } ]
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetQuarantineOffersRequest" : {
        "description" : "Фильтрации товаров\n\nВ запросе можно указать либо фильтр offerIds, либо любые другие фильтры товаров. Совместное использование фильтра offerIds с другими фильтрациями приведет к ошибке.\n",
        "example" : {
          "categoryIds" : [ 0, 0 ],
          "vendorNames" : [ "vendorNames", "vendorNames" ],
          "offerIds" : [ null, null, null, null, null ],
          "cardStatuses" : [ "HAS_CARD_CAN_NOT_UPDATE", "HAS_CARD_CAN_NOT_UPDATE" ],
          "tags" : [ "tags", "tags" ]
        },
        "properties" : {
          "offerIds" : {
            "description" : "Идентификаторы товаров, информация о которых нужна.\n<br><br>\n⚠️ Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.\n",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "maxItems" : 500,
            "minItems" : 1,
            "nullable" : true,
            "type" : "array"
          },
          "cardStatuses" : {
            "description" : "Фильтр по статусам карточек.\n\n[Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html)\n",
            "items" : {
              "$ref" : "#/components/schemas/OfferCardStatusType"
            },
            "minItems" : 1,
            "nullable" : true,
            "type" : "array"
          },
          "categoryIds" : {
            "description" : "Фильтр по категориям на Маркете.",
            "items" : {
              "type" : "integer"
            },
            "minItems" : 1,
            "nullable" : true,
            "type" : "array"
          },
          "vendorNames" : {
            "description" : "Фильтр по брендам.",
            "items" : {
              "type" : "string"
            },
            "minItems" : 1,
            "nullable" : true,
            "type" : "array"
          },
          "tags" : {
            "description" : "Фильтр по тегам.",
            "items" : {
              "type" : "string"
            },
            "minItems" : 1,
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "GetQuarantineOffersResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/GetQuarantineOffersResultDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Ответ на запрос списка товаров в карантине.",
        "example" : {
          "result" : {
            "offers" : [ {
              "verdicts" : [ {
                "type" : "PRICE_CHANGE",
                "params" : [ {
                  "name" : "CURRENT_PRICE",
                  "value" : "value"
                }, {
                  "name" : "CURRENT_PRICE",
                  "value" : "value"
                } ]
              }, {
                "type" : "PRICE_CHANGE",
                "params" : [ {
                  "name" : "CURRENT_PRICE",
                  "value" : "value"
                }, {
                  "name" : "CURRENT_PRICE",
                  "value" : "value"
                } ]
              } ],
              "offerId" : "offerId",
              "currentPrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "lastValidPrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              }
            }, {
              "verdicts" : [ {
                "type" : "PRICE_CHANGE",
                "params" : [ {
                  "name" : "CURRENT_PRICE",
                  "value" : "value"
                }, {
                  "name" : "CURRENT_PRICE",
                  "value" : "value"
                } ]
              }, {
                "type" : "PRICE_CHANGE",
                "params" : [ {
                  "name" : "CURRENT_PRICE",
                  "value" : "value"
                }, {
                  "name" : "CURRENT_PRICE",
                  "value" : "value"
                } ]
              } ],
              "offerId" : "offerId",
              "currentPrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "lastValidPrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              }
            } ],
            "paging" : {
              "prevPageToken" : "prevPageToken",
              "nextPageToken" : "nextPageToken"
            }
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "ConfirmPricesRequest" : {
        "description" : "Запрос на подтверждение цены.\n",
        "example" : {
          "offerIds" : [ null, null, null, null, null ]
        },
        "properties" : {
          "offerIds" : {
            "description" : "Идентификаторы товаров, у которых подтверждается цена.",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "maxItems" : 200,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "offerIds" ],
        "type" : "object"
      },
      "GetHiddenOffersResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/GetHiddenOffersResultDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Ответ на запрос списка скрытий.",
        "example" : {
          "result" : {
            "hiddenOffers" : [ {
              "offerId" : "offerId"
            }, {
              "offerId" : "offerId"
            } ],
            "paging" : {
              "prevPageToken" : "prevPageToken",
              "nextPageToken" : "nextPageToken"
            }
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "AddHiddenOffersRequest" : {
        "description" : "Запрос на скрытие оферов.",
        "example" : {
          "hiddenOffers" : [ {
            "offerId" : "offerId"
          }, {
            "offerId" : "offerId"
          }, {
            "offerId" : "offerId"
          }, {
            "offerId" : "offerId"
          }, {
            "offerId" : "offerId"
          } ]
        },
        "properties" : {
          "hiddenOffers" : {
            "description" : "Список скрытых товаров.\n",
            "items" : {
              "$ref" : "#/components/schemas/HiddenOfferDTO"
            },
            "maxItems" : 500,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "hiddenOffers" ],
        "type" : "object"
      },
      "DeleteHiddenOffersRequest" : {
        "description" : "Запрос на возобновление показа оферов.",
        "example" : {
          "hiddenOffers" : [ {
            "offerId" : "offerId"
          }, {
            "offerId" : "offerId"
          }, {
            "offerId" : "offerId"
          }, {
            "offerId" : "offerId"
          }, {
            "offerId" : "offerId"
          } ]
        },
        "properties" : {
          "hiddenOffers" : {
            "description" : "Список скрытых товаров.\n",
            "items" : {
              "$ref" : "#/components/schemas/HiddenOfferDTO"
            },
            "maxItems" : 500,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "hiddenOffers" ],
        "type" : "object"
      },
      "UpdateStocksRequest" : {
        "description" : "Запрос на изменение информации по остаткам товаров.",
        "example" : {
          "skus" : [ {
            "sku" : "sku",
            "items" : [ {
              "count" : 160165638,
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            } ]
          }, {
            "sku" : "sku",
            "items" : [ {
              "count" : 160165638,
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            } ]
          }, {
            "sku" : "sku",
            "items" : [ {
              "count" : 160165638,
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            } ]
          }, {
            "sku" : "sku",
            "items" : [ {
              "count" : 160165638,
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            } ]
          }, {
            "sku" : "sku",
            "items" : [ {
              "count" : 160165638,
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            } ]
          } ]
        },
        "properties" : {
          "skus" : {
            "description" : "Данные об остатках товаров.\n",
            "items" : {
              "$ref" : "#/components/schemas/UpdateStockDTO"
            },
            "maxItems" : 2000,
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "skus" ],
        "type" : "object"
      },
      "GetWarehouseStocksRequest" : {
        "description" : "Фильтры для запроса остатков.\n",
        "example" : {
          "archived" : true,
          "withTurnover" : false,
          "offerIds" : [ null, null, null, null, null ]
        },
        "properties" : {
          "withTurnover" : {
            "default" : false,
            "description" : "**Только для модели FBY**\n\nВозвращать ли информацию по оборачиваемости.\n\nЗначение по умолчанию — `false`. Если информация нужна, передайте значение `true`.\n",
            "type" : "boolean"
          },
          "archived" : {
            "description" : "Фильтр по нахождению в архиве.\n\nПередайте `true`, чтобы получить информацию об остатках товаров, которые находятся в архиве. Если фильтр не заполнен или передано `false`, в ответе возвращается информация о товарах, которые не находятся в архиве.\n",
            "type" : "boolean"
          },
          "offerIds" : {
            "description" : "Фильтр по вашим SKU товаров.\n\nВозвращается информация об остатках всех переданных SKU, включая товары в архиве.\n\n{% note warning \"Такой список возвращается только целиком\" %}\n\nЕсли вы запрашиваете информацию по конкретным SKU, не заполняйте:\n\n* `page_token`\n* `limit`\n* `archived`\n\n{% endnote %}\n\n \n",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "maxItems" : 500,
            "nullable" : true,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "GetWarehouseStocksResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/GetWarehouseStocksDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "warehouses" : [ {
              "offers" : [ {
                "offerId" : "offerId",
                "turnoverSummary" : {
                  "turnoverDays" : 6.027456183070403,
                  "turnover" : "LOW"
                },
                "stocks" : [ {
                  "count" : 1,
                  "type" : "FIT"
                }, {
                  "count" : 1,
                  "type" : "FIT"
                } ],
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              }, {
                "offerId" : "offerId",
                "turnoverSummary" : {
                  "turnoverDays" : 6.027456183070403,
                  "turnover" : "LOW"
                },
                "stocks" : [ {
                  "count" : 1,
                  "type" : "FIT"
                }, {
                  "count" : 1,
                  "type" : "FIT"
                } ],
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              } ],
              "warehouseId" : 0
            }, {
              "offers" : [ {
                "offerId" : "offerId",
                "turnoverSummary" : {
                  "turnoverDays" : 6.027456183070403,
                  "turnover" : "LOW"
                },
                "stocks" : [ {
                  "count" : 1,
                  "type" : "FIT"
                }, {
                  "count" : 1,
                  "type" : "FIT"
                } ],
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              }, {
                "offerId" : "offerId",
                "turnoverSummary" : {
                  "turnoverDays" : 6.027456183070403,
                  "turnover" : "LOW"
                },
                "stocks" : [ {
                  "count" : 1,
                  "type" : "FIT"
                }, {
                  "count" : 1,
                  "type" : "FIT"
                } ],
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              } ],
              "warehouseId" : 0
            } ],
            "paging" : {
              "prevPageToken" : "prevPageToken",
              "nextPageToken" : "nextPageToken"
            }
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetDeliveryServicesResponse" : {
        "description" : "Ответ на запрос списка служб доставки.",
        "example" : {
          "result" : {
            "deliveryService" : [ {
              "name" : "name",
              "id" : 0
            }, {
              "name" : "name",
              "id" : 0
            } ]
          }
        },
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/DeliveryServicesDTO"
          }
        },
        "type" : "object"
      },
      "GetOrdersStatsRequest" : {
        "description" : "Запрос информации по заказам.",
        "example" : {
          "updateTo" : "2000-01-23",
          "updateFrom" : "2000-01-23",
          "hasCis" : true,
          "dateTo" : "2000-01-23",
          "statuses" : [ "CANCELLED_BEFORE_PROCESSING", "CANCELLED_BEFORE_PROCESSING" ],
          "orders" : [ 0, 0 ],
          "dateFrom" : "2000-01-23"
        },
        "properties" : {
          "dateFrom" : {
            "description" : "Начальная дата, когда заказ был сформирован.\n\nФормат даты: `ГГГГ‑ММ‑ДД`.\n\nНельзя использовать вместе с параметрами `updateFrom` и `updateTo`.\n",
            "format" : "date",
            "type" : "string"
          },
          "dateTo" : {
            "description" : "Конечная дата, когда заказ был сформирован.\n\nФормат даты: `ГГГГ‑ММ‑ДД`.\n\nНельзя использовать вместе с параметрами `updateFrom` и `updateTo`.\n",
            "format" : "date",
            "type" : "string"
          },
          "updateFrom" : {
            "description" : "Начальная дата периода, за который были изменения статуса заказа.\n\nФормат даты: `ГГГГ‑ММ‑ДД`.\n\nНельзя использовать вместе с параметрами `dateFrom` и `dateTo`.\n",
            "format" : "date",
            "type" : "string"
          },
          "updateTo" : {
            "description" : "Конечная дата периода, за который были изменения статуса заказа.\n\nФормат даты: `ГГГГ‑ММ‑ДД`.\n\nНельзя использовать вместе с параметрами `dateFrom` и `dateTo`.\n",
            "format" : "date",
            "type" : "string"
          },
          "orders" : {
            "description" : "Список идентификаторов заказов.",
            "items" : {
              "description" : "Список товаров в заказе после возможных изменений.\n\nВ ходе обработки заказа Маркет может удалить из него единицы товаров — при проблемах на складе или по инициативе пользователя.\n\n* Если из заказа удалены все единицы товара, его не будет в списке `items` — только в списке `initialItems`.\n\n* Если в заказе осталась хотя бы одна единица товара, он будет и в списке `items` (с уменьшенным количеством единиц `count`), и в списке `initialItems` (с первоначальным количеством единиц `initialCount`).\n",
              "format" : "int64",
              "type" : "integer"
            },
            "nullable" : true,
            "type" : "array"
          },
          "statuses" : {
            "description" : "Список статусов заказов.",
            "items" : {
              "$ref" : "#/components/schemas/OrderStatsStatusType"
            },
            "nullable" : true,
            "type" : "array"
          },
          "hasCis" : {
            "description" : "Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации [в системе «Честный ЗНАК»](https://честныйзнак.рф/):\n\n* `true` — да.\n* `false` — нет.\nТакие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям.\n",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "GetOrdersStatsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/OrdersStatsDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Ответ на запрос информации по заказам.",
        "example" : {
          "result" : {
            "orders" : [ {
              "partnerOrderId" : "partnerOrderId",
              "commissions" : [ {
                "actual" : 1.2315135367772556,
                "type" : "FEE"
              }, {
                "actual" : 1.2315135367772556,
                "type" : "FEE"
              } ],
              "statusUpdateDate" : "2000-01-23T04:56:07.000+00:00",
              "payments" : [ {
                "date" : "2000-01-23",
                "total" : 7.386281948385884,
                "paymentOrder" : {
                  "date" : "2000-01-23",
                  "id" : "id"
                },
                "id" : "id",
                "source" : "BUYER",
                "type" : "PAYMENT"
              }, {
                "date" : "2000-01-23",
                "total" : 7.386281948385884,
                "paymentOrder" : {
                  "date" : "2000-01-23",
                  "id" : "id"
                },
                "id" : "id",
                "source" : "BUYER",
                "type" : "PAYMENT"
              } ],
              "fake" : true,
              "deliveryRegion" : {
                "name" : "name",
                "id" : 6
              },
              "id" : 0,
              "creationDate" : "2000-01-23",
              "items" : [ {
                "cofinanceValue" : 4.145608029883936,
                "initialCount" : 3,
                "offerName" : "offerName",
                "shopSku" : "shopSku",
                "cisList" : [ "cisList", "cisList" ],
                "marketSku" : 1,
                "count" : 5,
                "bidFee" : 570,
                "cofinanceThreshold" : 2.027123023002322,
                "details" : [ {
                  "updateDate" : "2000-01-23",
                  "stockType" : "FIT",
                  "itemStatus" : "REJECTED",
                  "itemCount" : 9
                }, {
                  "updateDate" : "2000-01-23",
                  "stockType" : "FIT",
                  "itemStatus" : "REJECTED",
                  "itemCount" : 9
                } ],
                "prices" : [ {
                  "total" : 2.3021358869347655,
                  "costPerItem" : 5.637376656633329,
                  "type" : "BUYER"
                }, {
                  "total" : 2.3021358869347655,
                  "costPerItem" : 5.637376656633329,
                  "type" : "BUYER"
                } ],
                "warehouse" : {
                  "name" : "name",
                  "id" : 7
                }
              }, {
                "cofinanceValue" : 4.145608029883936,
                "initialCount" : 3,
                "offerName" : "offerName",
                "shopSku" : "shopSku",
                "cisList" : [ "cisList", "cisList" ],
                "marketSku" : 1,
                "count" : 5,
                "bidFee" : 570,
                "cofinanceThreshold" : 2.027123023002322,
                "details" : [ {
                  "updateDate" : "2000-01-23",
                  "stockType" : "FIT",
                  "itemStatus" : "REJECTED",
                  "itemCount" : 9
                }, {
                  "updateDate" : "2000-01-23",
                  "stockType" : "FIT",
                  "itemStatus" : "REJECTED",
                  "itemCount" : 9
                } ],
                "prices" : [ {
                  "total" : 2.3021358869347655,
                  "costPerItem" : 5.637376656633329,
                  "type" : "BUYER"
                }, {
                  "total" : 2.3021358869347655,
                  "costPerItem" : 5.637376656633329,
                  "type" : "BUYER"
                } ],
                "warehouse" : {
                  "name" : "name",
                  "id" : 7
                }
              } ],
              "initialItems" : [ {
                "cofinanceValue" : 4.145608029883936,
                "initialCount" : 3,
                "offerName" : "offerName",
                "shopSku" : "shopSku",
                "cisList" : [ "cisList", "cisList" ],
                "marketSku" : 1,
                "count" : 5,
                "bidFee" : 570,
                "cofinanceThreshold" : 2.027123023002322,
                "details" : [ {
                  "updateDate" : "2000-01-23",
                  "stockType" : "FIT",
                  "itemStatus" : "REJECTED",
                  "itemCount" : 9
                }, {
                  "updateDate" : "2000-01-23",
                  "stockType" : "FIT",
                  "itemStatus" : "REJECTED",
                  "itemCount" : 9
                } ],
                "prices" : [ {
                  "total" : 2.3021358869347655,
                  "costPerItem" : 5.637376656633329,
                  "type" : "BUYER"
                }, {
                  "total" : 2.3021358869347655,
                  "costPerItem" : 5.637376656633329,
                  "type" : "BUYER"
                } ],
                "warehouse" : {
                  "name" : "name",
                  "id" : 7
                }
              }, {
                "cofinanceValue" : 4.145608029883936,
                "initialCount" : 3,
                "offerName" : "offerName",
                "shopSku" : "shopSku",
                "cisList" : [ "cisList", "cisList" ],
                "marketSku" : 1,
                "count" : 5,
                "bidFee" : 570,
                "cofinanceThreshold" : 2.027123023002322,
                "details" : [ {
                  "updateDate" : "2000-01-23",
                  "stockType" : "FIT",
                  "itemStatus" : "REJECTED",
                  "itemCount" : 9
                }, {
                  "updateDate" : "2000-01-23",
                  "stockType" : "FIT",
                  "itemStatus" : "REJECTED",
                  "itemCount" : 9
                } ],
                "prices" : [ {
                  "total" : 2.3021358869347655,
                  "costPerItem" : 5.637376656633329,
                  "type" : "BUYER"
                }, {
                  "total" : 2.3021358869347655,
                  "costPerItem" : 5.637376656633329,
                  "type" : "BUYER"
                } ],
                "warehouse" : {
                  "name" : "name",
                  "id" : 7
                }
              } ],
              "status" : "CANCELLED_BEFORE_PROCESSING",
              "paymentType" : "CREDIT"
            }, {
              "partnerOrderId" : "partnerOrderId",
              "commissions" : [ {
                "actual" : 1.2315135367772556,
                "type" : "FEE"
              }, {
                "actual" : 1.2315135367772556,
                "type" : "FEE"
              } ],
              "statusUpdateDate" : "2000-01-23T04:56:07.000+00:00",
              "payments" : [ {
                "date" : "2000-01-23",
                "total" : 7.386281948385884,
                "paymentOrder" : {
                  "date" : "2000-01-23",
                  "id" : "id"
                },
                "id" : "id",
                "source" : "BUYER",
                "type" : "PAYMENT"
              }, {
                "date" : "2000-01-23",
                "total" : 7.386281948385884,
                "paymentOrder" : {
                  "date" : "2000-01-23",
                  "id" : "id"
                },
                "id" : "id",
                "source" : "BUYER",
                "type" : "PAYMENT"
              } ],
              "fake" : true,
              "deliveryRegion" : {
                "name" : "name",
                "id" : 6
              },
              "id" : 0,
              "creationDate" : "2000-01-23",
              "items" : [ {
                "cofinanceValue" : 4.145608029883936,
                "initialCount" : 3,
                "offerName" : "offerName",
                "shopSku" : "shopSku",
                "cisList" : [ "cisList", "cisList" ],
                "marketSku" : 1,
                "count" : 5,
                "bidFee" : 570,
                "cofinanceThreshold" : 2.027123023002322,
                "details" : [ {
                  "updateDate" : "2000-01-23",
                  "stockType" : "FIT",
                  "itemStatus" : "REJECTED",
                  "itemCount" : 9
                }, {
                  "updateDate" : "2000-01-23",
                  "stockType" : "FIT",
                  "itemStatus" : "REJECTED",
                  "itemCount" : 9
                } ],
                "prices" : [ {
                  "total" : 2.3021358869347655,
                  "costPerItem" : 5.637376656633329,
                  "type" : "BUYER"
                }, {
                  "total" : 2.3021358869347655,
                  "costPerItem" : 5.637376656633329,
                  "type" : "BUYER"
                } ],
                "warehouse" : {
                  "name" : "name",
                  "id" : 7
                }
              }, {
                "cofinanceValue" : 4.145608029883936,
                "initialCount" : 3,
                "offerName" : "offerName",
                "shopSku" : "shopSku",
                "cisList" : [ "cisList", "cisList" ],
                "marketSku" : 1,
                "count" : 5,
                "bidFee" : 570,
                "cofinanceThreshold" : 2.027123023002322,
                "details" : [ {
                  "updateDate" : "2000-01-23",
                  "stockType" : "FIT",
                  "itemStatus" : "REJECTED",
                  "itemCount" : 9
                }, {
                  "updateDate" : "2000-01-23",
                  "stockType" : "FIT",
                  "itemStatus" : "REJECTED",
                  "itemCount" : 9
                } ],
                "prices" : [ {
                  "total" : 2.3021358869347655,
                  "costPerItem" : 5.637376656633329,
                  "type" : "BUYER"
                }, {
                  "total" : 2.3021358869347655,
                  "costPerItem" : 5.637376656633329,
                  "type" : "BUYER"
                } ],
                "warehouse" : {
                  "name" : "name",
                  "id" : 7
                }
              } ],
              "initialItems" : [ {
                "cofinanceValue" : 4.145608029883936,
                "initialCount" : 3,
                "offerName" : "offerName",
                "shopSku" : "shopSku",
                "cisList" : [ "cisList", "cisList" ],
                "marketSku" : 1,
                "count" : 5,
                "bidFee" : 570,
                "cofinanceThreshold" : 2.027123023002322,
                "details" : [ {
                  "updateDate" : "2000-01-23",
                  "stockType" : "FIT",
                  "itemStatus" : "REJECTED",
                  "itemCount" : 9
                }, {
                  "updateDate" : "2000-01-23",
                  "stockType" : "FIT",
                  "itemStatus" : "REJECTED",
                  "itemCount" : 9
                } ],
                "prices" : [ {
                  "total" : 2.3021358869347655,
                  "costPerItem" : 5.637376656633329,
                  "type" : "BUYER"
                }, {
                  "total" : 2.3021358869347655,
                  "costPerItem" : 5.637376656633329,
                  "type" : "BUYER"
                } ],
                "warehouse" : {
                  "name" : "name",
                  "id" : 7
                }
              }, {
                "cofinanceValue" : 4.145608029883936,
                "initialCount" : 3,
                "offerName" : "offerName",
                "shopSku" : "shopSku",
                "cisList" : [ "cisList", "cisList" ],
                "marketSku" : 1,
                "count" : 5,
                "bidFee" : 570,
                "cofinanceThreshold" : 2.027123023002322,
                "details" : [ {
                  "updateDate" : "2000-01-23",
                  "stockType" : "FIT",
                  "itemStatus" : "REJECTED",
                  "itemCount" : 9
                }, {
                  "updateDate" : "2000-01-23",
                  "stockType" : "FIT",
                  "itemStatus" : "REJECTED",
                  "itemCount" : 9
                } ],
                "prices" : [ {
                  "total" : 2.3021358869347655,
                  "costPerItem" : 5.637376656633329,
                  "type" : "BUYER"
                }, {
                  "total" : 2.3021358869347655,
                  "costPerItem" : 5.637376656633329,
                  "type" : "BUYER"
                } ],
                "warehouse" : {
                  "name" : "name",
                  "id" : 7
                }
              } ],
              "status" : "CANCELLED_BEFORE_PROCESSING",
              "paymentType" : "CREDIT"
            } ],
            "paging" : {
              "nextPageToken" : "nextPageToken"
            }
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetGoodsStatsRequest" : {
        "description" : "Запрос отчета по товарам.",
        "example" : {
          "shopSkus" : [ null, null, null, null, null ]
        },
        "properties" : {
          "shopSkus" : {
            "description" : "Список ваших идентификаторов SKU.\n",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "maxItems" : 500,
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "shopSkus" ],
        "type" : "object"
      },
      "GetGoodsStatsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/GoodsStatsDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Ответ на запрос отчета по товарам.",
        "example" : {
          "result" : {
            "shopSkus" : [ {
              "shopSku" : "shopSku",
              "marketSku" : 0,
              "price" : 6.027456183070403,
              "name" : "name",
              "warehouses" : [ {
                "name" : "name",
                "id" : 9,
                "stocks" : [ {
                  "count" : 1,
                  "type" : "FIT"
                }, {
                  "count" : 1,
                  "type" : "FIT"
                } ]
              }, {
                "name" : "name",
                "id" : 9,
                "stocks" : [ {
                  "count" : 1,
                  "type" : "FIT"
                }, {
                  "count" : 1,
                  "type" : "FIT"
                } ]
              } ],
              "weightDimensions" : {
                "length" : 5.962133916683182,
                "width" : 5.637376656633329,
                "weight" : 7.061401241503109,
                "height" : 2.3021358869347655
              },
              "categoryName" : "categoryName",
              "categoryId" : 1,
              "pictures" : [ "pictures", "pictures" ],
              "tariffs" : [ {
                "amount" : 2.027123023002322,
                "type" : "AGENCY_COMMISSION",
                "percent" : 3.616076749251911,
                "parameters" : [ {
                  "name" : "name",
                  "value" : "value"
                }, {
                  "name" : "name",
                  "value" : "value"
                } ]
              }, {
                "amount" : 2.027123023002322,
                "type" : "AGENCY_COMMISSION",
                "percent" : 3.616076749251911,
                "parameters" : [ {
                  "name" : "name",
                  "value" : "value"
                }, {
                  "name" : "name",
                  "value" : "value"
                } ]
              } ]
            }, {
              "shopSku" : "shopSku",
              "marketSku" : 0,
              "price" : 6.027456183070403,
              "name" : "name",
              "warehouses" : [ {
                "name" : "name",
                "id" : 9,
                "stocks" : [ {
                  "count" : 1,
                  "type" : "FIT"
                }, {
                  "count" : 1,
                  "type" : "FIT"
                } ]
              }, {
                "name" : "name",
                "id" : 9,
                "stocks" : [ {
                  "count" : 1,
                  "type" : "FIT"
                }, {
                  "count" : 1,
                  "type" : "FIT"
                } ]
              } ],
              "weightDimensions" : {
                "length" : 5.962133916683182,
                "width" : 5.637376656633329,
                "weight" : 7.061401241503109,
                "height" : 2.3021358869347655
              },
              "categoryName" : "categoryName",
              "categoryId" : 1,
              "pictures" : [ "pictures", "pictures" ],
              "tariffs" : [ {
                "amount" : 2.027123023002322,
                "type" : "AGENCY_COMMISSION",
                "percent" : 3.616076749251911,
                "parameters" : [ {
                  "name" : "name",
                  "value" : "value"
                }, {
                  "name" : "name",
                  "value" : "value"
                } ]
              }, {
                "amount" : 2.027123023002322,
                "type" : "AGENCY_COMMISSION",
                "percent" : 3.616076749251911,
                "parameters" : [ {
                  "name" : "name",
                  "value" : "value"
                }, {
                  "name" : "name",
                  "value" : "value"
                } ]
              } ]
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetReportInfoResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/ReportInfoDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Ответ на запрос информации об отчете.",
        "example" : {
          "result" : {
            "generationRequestedAt" : "2000-01-23T04:56:07.000+00:00",
            "file" : "file",
            "generationFinishedAt" : "2000-01-23T04:56:07.000+00:00",
            "subStatus" : "NO_DATA",
            "status" : "PENDING",
            "estimatedGenerationTime" : 0
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "ReportFormatType" : {
        "description" : "Формат отчета:\n\n* `FILE` — файл с электронной таблицей.\n* `CSV` — ZIP-архив с CSV-файлами на каждый лист отчета.\n",
        "enum" : [ "FILE", "CSV" ],
        "type" : "string"
      },
      "GenerateUnitedNettingReportRequest" : {
        "description" : "Данные, необходимые для генерации отчета: идентификатор магазина, период, за который нужен отчет, а также фильтры.\n",
        "example" : {
          "dateTimeFrom" : "2000-01-23T04:56:07.000+00:00",
          "bankOrderId" : 6,
          "placementPrograms" : [ "FBS", "FBS" ],
          "businessId" : 0,
          "dateTo" : "2000-01-23",
          "dateTimeTo" : "2000-01-23T04:56:07.000+00:00",
          "inns" : [ "inns", "inns" ],
          "campaignIds" : [ 1, 1 ],
          "dateFrom" : "2000-01-23",
          "bankOrderDateTime" : "2000-01-23T04:56:07.000+00:00"
        },
        "properties" : {
          "businessId" : {
            "description" : "Идентификатор бизнеса.",
            "format" : "int64",
            "type" : "integer"
          },
          "dateTimeFrom" : {
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nНачало периода, включительно.\n",
            "format" : "date-time",
            "type" : "string"
          },
          "dateTimeTo" : {
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nКонец периода, включительно. Максимальный период — 1 год.\n",
            "format" : "date-time",
            "type" : "string"
          },
          "dateFrom" : {
            "description" : "Начало периода, включительно.",
            "format" : "date",
            "type" : "string"
          },
          "dateTo" : {
            "description" : "Конец периода, включительно. Максимальный период — 1 год.",
            "format" : "date",
            "type" : "string"
          },
          "bankOrderId" : {
            "description" : "Номер платежного поручения.",
            "format" : "int64",
            "type" : "integer"
          },
          "bankOrderDateTime" : {
            "description" : "Дата платежного поручения.",
            "format" : "date-time",
            "type" : "string"
          },
          "placementPrograms" : {
            "description" : "Список моделей, которые нужны в отчете.\n",
            "items" : {
              "$ref" : "#/components/schemas/PlacementType"
            },
            "nullable" : true,
            "type" : "array"
          },
          "inns" : {
            "description" : "Список ИНН, которые нужны в отчете.",
            "items" : {
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          },
          "campaignIds" : {
            "description" : "Список магазинов, которые нужны в отчете.",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "businessId" ],
        "type" : "object"
      },
      "GenerateReportResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/GenerateReportDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Ответ на запрос генерации отчета.",
        "example" : {
          "result" : {
            "reportId" : "reportId",
            "estimatedGenerationTime" : 0
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GenerateUnitedMarketplaceServicesReportRequest" : {
        "description" : "Данные, необходимые для генерации отчета: идентификатор магазина, период, за который нужен отчет, а также фильтры.\n",
        "example" : {
          "dateTimeFrom" : "2000-01-23T04:56:07.000+00:00",
          "yearFrom" : 6,
          "placementPrograms" : [ "FBS", "FBS" ],
          "businessId" : 0,
          "dateTo" : "2000-01-23",
          "monthFrom" : 2,
          "dateTimeTo" : "2000-01-23T04:56:07.000+00:00",
          "inns" : [ "inns", "inns" ],
          "campaignIds" : [ 2, 2 ],
          "dateFrom" : "2000-01-23",
          "monthTo" : 7,
          "yearTo" : 5
        },
        "properties" : {
          "businessId" : {
            "description" : "Идентификатор бизнеса.",
            "format" : "int64",
            "type" : "integer"
          },
          "dateTimeFrom" : {
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nНачало периода, включительно.\n",
            "format" : "date-time",
            "type" : "string"
          },
          "dateTimeTo" : {
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nКонец периода, включительно. Максимальный период — 1 год.\n",
            "format" : "date-time",
            "type" : "string"
          },
          "dateFrom" : {
            "description" : "Начало периода, включительно.",
            "format" : "date",
            "type" : "string"
          },
          "dateTo" : {
            "description" : "Конец периода, включительно. Максимальный период — 1 год.",
            "format" : "date",
            "type" : "string"
          },
          "yearFrom" : {
            "description" : "Начальный год формирования акта.",
            "format" : "int32",
            "type" : "integer"
          },
          "monthFrom" : {
            "description" : "Начальный номер месяца формирования акта.",
            "format" : "int32",
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer"
          },
          "yearTo" : {
            "description" : "Конечный год формирования акта.",
            "format" : "int32",
            "type" : "integer"
          },
          "monthTo" : {
            "description" : "Конечный номер месяца формирования акта.",
            "format" : "int32",
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer"
          },
          "placementPrograms" : {
            "description" : "Список моделей, которые нужны в отчете.\n",
            "items" : {
              "$ref" : "#/components/schemas/PlacementType"
            },
            "nullable" : true,
            "type" : "array"
          },
          "inns" : {
            "description" : "Список ИНН, которые нужны в отчете.",
            "items" : {
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          },
          "campaignIds" : {
            "description" : "Список магазинов, которые нужны в отчете.",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "businessId" ],
        "type" : "object"
      },
      "GenerateUnitedOrdersRequest" : {
        "description" : "Данные, необходимые для генерации отчета.\n",
        "example" : {
          "businessId" : 0,
          "dateTo" : "2000-01-23",
          "campaignIds" : [ 6, 6 ],
          "promoId" : "promoId",
          "dateFrom" : "2000-01-23"
        },
        "properties" : {
          "businessId" : {
            "description" : "Идентификатор бизнеса.",
            "format" : "int64",
            "type" : "integer"
          },
          "dateFrom" : {
            "description" : "Начало периода, включительно.",
            "format" : "date",
            "type" : "string"
          },
          "dateTo" : {
            "description" : "Конец периода, включительно. Максимальный период — 1 год.",
            "format" : "date",
            "type" : "string"
          },
          "campaignIds" : {
            "description" : "Список магазинов, которые нужны в отчете.",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "nullable" : true,
            "type" : "array"
          },
          "promoId" : {
            "description" : "Идентификатор акции, товары из которой нужны в отчете.",
            "type" : "string"
          }
        },
        "required" : [ "businessId", "dateFrom", "dateTo" ],
        "type" : "object"
      },
      "GenerateGoodsRealizationReportRequest" : {
        "description" : "Данные, необходимые для генерации отчета: идентификатор магазина и период, за который нужен отчет.\n",
        "example" : {
          "month" : 2,
          "year" : 6,
          "campaignId" : 0
        },
        "properties" : {
          "campaignId" : {
            "description" : "Идентификатор кампании.",
            "format" : "int64",
            "type" : "integer"
          },
          "year" : {
            "description" : "Год.",
            "format" : "int32",
            "type" : "integer"
          },
          "month" : {
            "description" : "Номер месяца.",
            "format" : "int32",
            "maximum" : 12,
            "minimum" : 1,
            "type" : "integer"
          }
        },
        "required" : [ "campaignId", "month", "year" ],
        "type" : "object"
      },
      "GeneratePricesReportRequest" : {
        "description" : "Данные, необходимые для генерации отчета.",
        "example" : {
          "categoryIds" : [ 1, 1 ],
          "creationDateTo" : "2000-01-23",
          "campaignId" : 6,
          "businessId" : 0,
          "creationDateFrom" : "2000-01-23"
        },
        "properties" : {
          "businessId" : {
            "description" : "Идентификатор бизнеса.\n\nВ большинстве случаев обязателен. Не указывается, если задан `campaignId`.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "campaignId" : {
            "description" : "Идентификатор кампании.\n\nКак правило, не используется. Передавайте только если в кабинете есть магазины с уникальными ценами и вы хотите получить отчет для них. В этом случае передавать `businessId` не нужно.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "categoryIds" : {
            "description" : "Фильтр по категориям на Маркете.",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "nullable" : true,
            "type" : "array"
          },
          "creationDateFrom" : {
            "description" : "Фильтр по времени появления предложения — начало периода.\n\nФормат даты: `ДД-ММ-ГГГГ`.\n",
            "format" : "date",
            "type" : "string"
          },
          "creationDateTo" : {
            "description" : "Фильтр по времени появления предложения — окончание периода.\n\nФормат даты: `ДД-ММ-ГГГГ`.\n",
            "format" : "date",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "GenerateStocksOnWarehousesReportRequest" : {
        "description" : "Данные, необходимые для генерации отчета.\n",
        "example" : {
          "categoryIds" : [ 1, 1 ],
          "hasStocks" : true,
          "reportDate" : "2000-01-23",
          "campaignId" : 0,
          "warehouseIds" : [ 6, 6 ]
        },
        "properties" : {
          "campaignId" : {
            "description" : "Идентификатор магазина.",
            "format" : "int64",
            "type" : "integer"
          },
          "warehouseIds" : {
            "description" : "Фильтр по идентификаторам складов (только модель FBY). Чтобы узнать идентификатор, воспользуйтесь запросом [GET warehouses](../../reference/warehouses/getFulfillmentWarehouses.md).",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "nullable" : true,
            "type" : "array"
          },
          "reportDate" : {
            "description" : "Фильтр по дате (для модели FBY). В отчет попадут данные за **предшествующий** дате день.",
            "format" : "date",
            "type" : "string"
          },
          "categoryIds" : {
            "description" : "Фильтр по категориям на Маркете (кроме модели FBY).",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "nullable" : true,
            "type" : "array"
          },
          "hasStocks" : {
            "description" : "Фильтр по наличию остатков (кроме модели FBY).",
            "type" : "boolean"
          }
        },
        "required" : [ "campaignId" ],
        "type" : "object"
      },
      "GenerateGoodsMovementReportRequest" : {
        "description" : "Данные, необходимые для генерации отчета.",
        "example" : {
          "shopSku" : "shopSku",
          "campaignId" : 0,
          "dateTo" : "2000-01-23",
          "dateFrom" : "2000-01-23"
        },
        "properties" : {
          "campaignId" : {
            "description" : "Идентификатор кампании.",
            "format" : "int64",
            "type" : "integer"
          },
          "dateFrom" : {
            "description" : "Начало периода, включительно.",
            "format" : "date",
            "type" : "string"
          },
          "dateTo" : {
            "description" : "Конец периода, включительно.",
            "format" : "date",
            "type" : "string"
          },
          "shopSku" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          }
        },
        "required" : [ "campaignId", "dateFrom", "dateTo" ],
        "type" : "object"
      },
      "GenerateShowsSalesReportRequest" : {
        "description" : "Данные, необходимые для генерации отчета.",
        "example" : {
          "campaignId" : 6,
          "businessId" : 0,
          "dateTo" : "2000-01-23",
          "dateFrom" : "2000-01-23",
          "grouping" : "CATEGORIES"
        },
        "properties" : {
          "businessId" : {
            "description" : "Идентификатор бизнеса.\n\nУказывается, если нужно составить отчет по всем магазинам бизнеса. В запросе обязательно должен быть либо `businessID`, либо `campaignId`, но не оба сразу.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "campaignId" : {
            "description" : "Идентификатор кампании.\n\nУказывается, если нужно составить отчет по конкретному магазину. В запросе обязательно должен быть либо `businessID`, либо `campaignId`, но не оба сразу.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "dateFrom" : {
            "description" : "Начало периода, включительно.",
            "format" : "date",
            "type" : "string"
          },
          "dateTo" : {
            "description" : "Конец периода, включительно.",
            "format" : "date",
            "type" : "string"
          },
          "grouping" : {
            "$ref" : "#/components/schemas/ShowsSalesGroupingType"
          }
        },
        "required" : [ "dateFrom", "dateTo", "grouping" ],
        "type" : "object"
      },
      "GenerateCompetitorsPositionReportRequest" : {
        "description" : "Данные, необходимые для генерации отчета.",
        "example" : {
          "businessId" : 0,
          "dateTo" : "2000-01-23",
          "dateFrom" : "2000-01-23",
          "categoryId" : 6
        },
        "properties" : {
          "businessId" : {
            "description" : "Идентификатор бизнеса.",
            "format" : "int64",
            "type" : "integer"
          },
          "categoryId" : {
            "description" : "Идентификатор категории.",
            "format" : "int64",
            "type" : "integer"
          },
          "dateFrom" : {
            "description" : "Начало периода, включительно.",
            "format" : "date",
            "type" : "string"
          },
          "dateTo" : {
            "description" : "Конец периода, включительно.",
            "format" : "date",
            "type" : "string"
          }
        },
        "required" : [ "businessId", "categoryId", "dateFrom", "dateTo" ],
        "type" : "object"
      },
      "GenerateGoodsTurnoverRequest" : {
        "description" : "Данные, необходимые для генерации отчета.\n",
        "example" : {
          "date" : "2000-01-23",
          "campaignId" : 0
        },
        "properties" : {
          "campaignId" : {
            "description" : "Идентификатор кампании.",
            "format" : "int64",
            "type" : "integer"
          },
          "date" : {
            "description" : "Дата, за которую нужно рассчитать оборачиваемость. Если параметр не указан, используется текущая дата.",
            "format" : "date",
            "type" : "string"
          }
        },
        "required" : [ "campaignId" ],
        "type" : "object"
      },
      "GenerateBoostConsolidatedRequest" : {
        "description" : "Данные, необходимые для генерации отчета.\n",
        "example" : {
          "businessId" : 0,
          "dateTo" : "2000-01-23",
          "dateFrom" : "2000-01-23"
        },
        "properties" : {
          "businessId" : {
            "description" : "Идентификатор бизнеса.",
            "format" : "int64",
            "type" : "integer"
          },
          "dateFrom" : {
            "description" : "Начало периода, включительно.",
            "format" : "date",
            "type" : "string"
          },
          "dateTo" : {
            "description" : "Конец периода, включительно.",
            "format" : "date",
            "type" : "string"
          }
        },
        "required" : [ "businessId", "dateFrom", "dateTo" ],
        "type" : "object"
      },
      "GenerateShipmentListDocumentReportRequest" : {
        "description" : "Данные, необходимые для генерации документа.\n",
        "example" : {
          "campaignId" : 0,
          "shipmentId" : 6,
          "orderIds" : [ 1, 1 ]
        },
        "properties" : {
          "campaignId" : {
            "description" : "Идентификатор кампании.",
            "format" : "int64",
            "type" : "integer"
          },
          "shipmentId" : {
            "description" : "Идентификатор отгрузки.",
            "format" : "int64",
            "type" : "integer"
          },
          "orderIds" : {
            "description" : "Фильтр по идентификаторам заказа в отгрузке.",
            "items" : {
              "description" : "Идентификатор заказа.",
              "format" : "int64",
              "type" : "integer"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "campaignId" ],
        "type" : "object"
      },
      "GenerateShelfsStatisticsRequest" : {
        "description" : "Данные, необходимые для генерации отчета.\n",
        "example" : {
          "businessId" : 0,
          "dateTo" : "2000-01-23",
          "dateFrom" : "2000-01-23",
          "attributionType" : "CLICKS"
        },
        "properties" : {
          "businessId" : {
            "description" : "Идентификатор бизнеса.",
            "format" : "int64",
            "type" : "integer"
          },
          "dateFrom" : {
            "description" : "Начало периода, включительно.",
            "format" : "date",
            "type" : "string"
          },
          "dateTo" : {
            "description" : "Конец периода, включительно.",
            "format" : "date",
            "type" : "string"
          },
          "attributionType" : {
            "$ref" : "#/components/schemas/ShelfsStatisticsAttributionType"
          }
        },
        "required" : [ "attributionType", "businessId", "dateFrom", "dateTo" ],
        "type" : "object"
      },
      "GenerateMassOrderLabelsRequest" : {
        "description" : "Данные, необходимые для генерации файла.\n",
        "example" : {
          "businessId" : 0,
          "orderIds" : [ 6, 6, 6, 6, 6 ]
        },
        "properties" : {
          "businessId" : {
            "description" : "Идентификатор кабинета.",
            "format" : "int64",
            "type" : "integer"
          },
          "orderIds" : {
            "description" : "Список идентификаторов заказов.",
            "items" : {
              "description" : "Идентификатор заказа.",
              "format" : "int64",
              "type" : "integer"
            },
            "maxItems" : 1000,
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "businessId", "orderIds" ],
        "type" : "object"
      },
      "GenerateGoodsFeedbackRequest" : {
        "description" : "Данные, необходимые для генерации отчета.\n",
        "example" : {
          "businessId" : 0
        },
        "properties" : {
          "businessId" : {
            "description" : "Идентификатор бизнеса.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "businessId" ],
        "type" : "object"
      },
      "GetOutletsResponse" : {
        "description" : "Ответ на запрос информации о точках продаж.",
        "example" : {
          "pager" : {
            "total" : 1,
            "pagesCount" : 7,
            "pageSize" : 9,
            "from" : 5,
            "to" : 5,
            "currentPage" : 2
          },
          "outlets" : [ {
            "storagePeriod" : 9,
            "address" : {
              "number" : "number",
              "km" : 6,
              "regionId" : 0,
              "city" : "city",
              "street" : "street",
              "additional" : "additional",
              "estate" : "estate",
              "block" : "block",
              "building" : "building"
            },
            "moderationReason" : "moderationReason",
            "visibility" : "HIDDEN",
            "isMain" : true,
            "phones" : [ "phones", "phones" ],
            "workingTime" : "workingTime",
            "type" : "DEPOT",
            "workingSchedule" : {
              "scheduleItems" : [ {
                "startDay" : "MONDAY",
                "endDay" : null,
                "startTime" : "startTime",
                "endTime" : "endTime"
              }, {
                "startDay" : "MONDAY",
                "endDay" : null,
                "startTime" : "startTime",
                "endTime" : "endTime"
              } ],
              "workInHoliday" : true
            },
            "shopOutletId" : "shopOutletId",
            "shopOutletCode" : "shopOutletCode",
            "name" : "name",
            "id" : 3,
            "region" : {
              "parent" : null,
              "children" : [ null, null ],
              "name" : "name",
              "id" : 0,
              "type" : "OTHER"
            },
            "coords" : "coords",
            "deliveryRules" : [ {
              "priceFreePickup" : 7.061401241503109,
              "deliveryServiceId" : 5,
              "maxDeliveryDays" : 5,
              "minDeliveryDays" : 1,
              "orderBefore" : 5,
              "unspecifiedDeliveryInterval" : true
            }, {
              "priceFreePickup" : 7.061401241503109,
              "deliveryServiceId" : 5,
              "maxDeliveryDays" : 5,
              "minDeliveryDays" : 1,
              "orderBefore" : 5,
              "unspecifiedDeliveryInterval" : true
            } ],
            "status" : "AT_MODERATION"
          }, {
            "storagePeriod" : 9,
            "address" : {
              "number" : "number",
              "km" : 6,
              "regionId" : 0,
              "city" : "city",
              "street" : "street",
              "additional" : "additional",
              "estate" : "estate",
              "block" : "block",
              "building" : "building"
            },
            "moderationReason" : "moderationReason",
            "visibility" : "HIDDEN",
            "isMain" : true,
            "phones" : [ "phones", "phones" ],
            "workingTime" : "workingTime",
            "type" : "DEPOT",
            "workingSchedule" : {
              "scheduleItems" : [ {
                "startDay" : "MONDAY",
                "endDay" : null,
                "startTime" : "startTime",
                "endTime" : "endTime"
              }, {
                "startDay" : "MONDAY",
                "endDay" : null,
                "startTime" : "startTime",
                "endTime" : "endTime"
              } ],
              "workInHoliday" : true
            },
            "shopOutletId" : "shopOutletId",
            "shopOutletCode" : "shopOutletCode",
            "name" : "name",
            "id" : 3,
            "region" : {
              "parent" : null,
              "children" : [ null, null ],
              "name" : "name",
              "id" : 0,
              "type" : "OTHER"
            },
            "coords" : "coords",
            "deliveryRules" : [ {
              "priceFreePickup" : 7.061401241503109,
              "deliveryServiceId" : 5,
              "maxDeliveryDays" : 5,
              "minDeliveryDays" : 1,
              "orderBefore" : 5,
              "unspecifiedDeliveryInterval" : true
            }, {
              "priceFreePickup" : 7.061401241503109,
              "deliveryServiceId" : 5,
              "maxDeliveryDays" : 5,
              "minDeliveryDays" : 1,
              "orderBefore" : 5,
              "unspecifiedDeliveryInterval" : true
            } ],
            "status" : "AT_MODERATION"
          } ],
          "paging" : {
            "prevPageToken" : "prevPageToken",
            "nextPageToken" : "nextPageToken"
          }
        },
        "properties" : {
          "outlets" : {
            "description" : "Информация о точках продаж.",
            "items" : {
              "$ref" : "#/components/schemas/FullOutletDTO"
            },
            "type" : "array"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ScrollingPagerDTO"
          },
          "pager" : {
            "$ref" : "#/components/schemas/FlippingPagerDTO"
          }
        },
        "required" : [ "outlets" ],
        "type" : "object"
      },
      "ChangeOutletRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/OutletDTO"
        } ],
        "example" : {
          "storagePeriod" : 0,
          "address" : {
            "number" : "number",
            "km" : 6,
            "regionId" : 0,
            "city" : "city",
            "street" : "street",
            "additional" : "additional",
            "estate" : "estate",
            "block" : "block",
            "building" : "building"
          },
          "visibility" : "HIDDEN",
          "isMain" : true,
          "shopOutletCode" : "shopOutletCode",
          "name" : "name",
          "phones" : [ "phones", "phones" ],
          "type" : "DEPOT",
          "coords" : "coords",
          "workingSchedule" : {
            "scheduleItems" : [ {
              "startDay" : "MONDAY",
              "endDay" : null,
              "startTime" : "startTime",
              "endTime" : "endTime"
            }, {
              "startDay" : "MONDAY",
              "endDay" : null,
              "startTime" : "startTime",
              "endTime" : "endTime"
            } ],
            "workInHoliday" : true
          },
          "deliveryRules" : [ {
            "priceFreePickup" : 7.061401241503109,
            "deliveryServiceId" : 5,
            "maxDeliveryDays" : 5,
            "minDeliveryDays" : 1,
            "orderBefore" : 5,
            "unspecifiedDeliveryInterval" : true
          }, {
            "priceFreePickup" : 7.061401241503109,
            "deliveryServiceId" : 5,
            "maxDeliveryDays" : 5,
            "minDeliveryDays" : 1,
            "orderBefore" : 5,
            "unspecifiedDeliveryInterval" : true
          } ]
        },
        "type" : "object"
      },
      "CreateOutletResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/OutletResponseDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Ответ на запрос о создании точки продаж.",
        "example" : {
          "result" : {
            "id" : 0
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetOutletResponse" : {
        "description" : "Ответ на запрос информации о точке продаж.",
        "example" : {
          "outlet" : {
            "storagePeriod" : 9,
            "address" : {
              "number" : "number",
              "km" : 6,
              "regionId" : 0,
              "city" : "city",
              "street" : "street",
              "additional" : "additional",
              "estate" : "estate",
              "block" : "block",
              "building" : "building"
            },
            "moderationReason" : "moderationReason",
            "visibility" : "HIDDEN",
            "isMain" : true,
            "phones" : [ "phones", "phones" ],
            "workingTime" : "workingTime",
            "type" : "DEPOT",
            "workingSchedule" : {
              "scheduleItems" : [ {
                "startDay" : "MONDAY",
                "endDay" : null,
                "startTime" : "startTime",
                "endTime" : "endTime"
              }, {
                "startDay" : "MONDAY",
                "endDay" : null,
                "startTime" : "startTime",
                "endTime" : "endTime"
              } ],
              "workInHoliday" : true
            },
            "shopOutletId" : "shopOutletId",
            "shopOutletCode" : "shopOutletCode",
            "name" : "name",
            "id" : 3,
            "region" : {
              "parent" : null,
              "children" : [ null, null ],
              "name" : "name",
              "id" : 0,
              "type" : "OTHER"
            },
            "coords" : "coords",
            "deliveryRules" : [ {
              "priceFreePickup" : 7.061401241503109,
              "deliveryServiceId" : 5,
              "maxDeliveryDays" : 5,
              "minDeliveryDays" : 1,
              "orderBefore" : 5,
              "unspecifiedDeliveryInterval" : true
            }, {
              "priceFreePickup" : 7.061401241503109,
              "deliveryServiceId" : 5,
              "maxDeliveryDays" : 5,
              "minDeliveryDays" : 1,
              "orderBefore" : 5,
              "unspecifiedDeliveryInterval" : true
            } ],
            "status" : "AT_MODERATION"
          }
        },
        "properties" : {
          "outlet" : {
            "$ref" : "#/components/schemas/FullOutletDTO"
          }
        },
        "type" : "object"
      },
      "GetOutletLicensesResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/OutletLicensesResponseDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "licenses" : [ {
              "licenseType" : "ALCOHOL",
              "number" : "number",
              "dateOfExpiry" : "2000-01-23T04:56:07.000+00:00",
              "checkStatus" : "NEW",
              "outletId" : 6,
              "id" : 0,
              "dateOfIssue" : "2000-01-23T04:56:07.000+00:00",
              "checkComment" : "checkComment"
            }, {
              "licenseType" : "ALCOHOL",
              "number" : "number",
              "dateOfExpiry" : "2000-01-23T04:56:07.000+00:00",
              "checkStatus" : "NEW",
              "outletId" : 6,
              "id" : 0,
              "dateOfIssue" : "2000-01-23T04:56:07.000+00:00",
              "checkComment" : "checkComment"
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "UpdateOutletLicenseRequest" : {
        "description" : "Запрос на создание или изменение лицензий для точек продаж.",
        "example" : {
          "licenses" : [ {
            "licenseType" : "ALCOHOL",
            "number" : "number",
            "dateOfExpiry" : "2000-01-23T04:56:07.000+00:00",
            "outletId" : 6,
            "id" : 0,
            "dateOfIssue" : "2000-01-23T04:56:07.000+00:00"
          }, {
            "licenseType" : "ALCOHOL",
            "number" : "number",
            "dateOfExpiry" : "2000-01-23T04:56:07.000+00:00",
            "outletId" : 6,
            "id" : 0,
            "dateOfIssue" : "2000-01-23T04:56:07.000+00:00"
          } ]
        },
        "properties" : {
          "licenses" : {
            "description" : "Список лицензий.\nОбязательный параметр, должен содержать информацию хотя бы об одной лицензии.\n",
            "items" : {
              "$ref" : "#/components/schemas/OutletLicenseDTO"
            },
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "licenses" ],
        "type" : "object"
      },
      "GetFeedbackListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/FeedbackListDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "paging" : {
              "prevPageToken" : "prevPageToken",
              "nextPageToken" : "nextPageToken"
            },
            "feedbackList" : [ {
              "comments" : [ {
                "createdAt" : "2000-01-23T04:56:07.000+00:00",
                "children" : [ null, null ],
                "author" : {
                  "name" : "name",
                  "type" : "USER"
                },
                "id" : 6,
                "body" : "body",
                "parentId" : 1,
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              }, {
                "createdAt" : "2000-01-23T04:56:07.000+00:00",
                "children" : [ null, null ],
                "author" : {
                  "name" : "name",
                  "type" : "USER"
                },
                "id" : 6,
                "body" : "body",
                "parentId" : 1,
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              } ],
              "shop" : {
                "name" : "name"
              },
              "author" : {
                "name" : "name",
                "region" : {
                  "parent" : null,
                  "children" : [ null, null ],
                  "name" : "name",
                  "id" : 0,
                  "type" : "OTHER"
                }
              },
              "verified" : true,
              "recommend" : true,
              "grades" : {
                "average" : 5.962133916683182,
                "agreeCount" : 5,
                "rejectCount" : 2,
                "factors" : [ {
                  "description" : "description",
                  "id" : 7,
                  "title" : "title",
                  "value" : 9
                }, {
                  "description" : "description",
                  "id" : 7,
                  "title" : "title",
                  "value" : 9
                } ]
              },
              "pro" : "pro",
              "createdAt" : "2000-01-23T04:56:07.000+00:00",
              "id" : 0,
              "text" : "text",
              "state" : "LAST",
              "contra" : "contra",
              "resolved" : true,
              "order" : {
                "delivery" : "DELIVERY",
                "shopOrderId" : "shopOrderId"
              }
            }, {
              "comments" : [ {
                "createdAt" : "2000-01-23T04:56:07.000+00:00",
                "children" : [ null, null ],
                "author" : {
                  "name" : "name",
                  "type" : "USER"
                },
                "id" : 6,
                "body" : "body",
                "parentId" : 1,
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              }, {
                "createdAt" : "2000-01-23T04:56:07.000+00:00",
                "children" : [ null, null ],
                "author" : {
                  "name" : "name",
                  "type" : "USER"
                },
                "id" : 6,
                "body" : "body",
                "parentId" : 1,
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              } ],
              "shop" : {
                "name" : "name"
              },
              "author" : {
                "name" : "name",
                "region" : {
                  "parent" : null,
                  "children" : [ null, null ],
                  "name" : "name",
                  "id" : 0,
                  "type" : "OTHER"
                }
              },
              "verified" : true,
              "recommend" : true,
              "grades" : {
                "average" : 5.962133916683182,
                "agreeCount" : 5,
                "rejectCount" : 2,
                "factors" : [ {
                  "description" : "description",
                  "id" : 7,
                  "title" : "title",
                  "value" : 9
                }, {
                  "description" : "description",
                  "id" : 7,
                  "title" : "title",
                  "value" : 9
                } ]
              },
              "pro" : "pro",
              "createdAt" : "2000-01-23T04:56:07.000+00:00",
              "id" : 0,
              "text" : "text",
              "state" : "LAST",
              "contra" : "contra",
              "resolved" : true,
              "order" : {
                "delivery" : "DELIVERY",
                "shopOrderId" : "shopOrderId"
              }
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetGoodsFeedbackRequest" : {
        "description" : "Фильтр запроса отзывов в кабинете.\n",
        "example" : {
          "dateTimeFrom" : "2000-01-23T04:56:07.000+00:00",
          "ratingValues" : [ 0, 0, 0, 0, 0 ],
          "modelIds" : [ 6, 6, 6, 6, 6 ],
          "paid" : true,
          "reactionStatus" : "ALL",
          "dateTimeTo" : "2000-01-23T04:56:07.000+00:00"
        },
        "properties" : {
          "dateTimeFrom" : {
            "description" : "Начало периода. Не включительно.\n\nЕсли параметр не указан, возвращается информация за 6 месяцев до указанной в `dateTimeTo` даты.\n",
            "format" : "date-time",
            "type" : "string"
          },
          "dateTimeTo" : {
            "description" : "Конец периода. Не включительно.\n\nЕсли параметр не указан, используется текущая дата.\n",
            "format" : "date-time",
            "type" : "string"
          },
          "reactionStatus" : {
            "$ref" : "#/components/schemas/FeedbackReactionStatusType"
          },
          "ratingValues" : {
            "description" : "Оценка товара.",
            "items" : {
              "format" : "int32",
              "type" : "integer"
            },
            "maxItems" : 5,
            "nullable" : true,
            "type" : "array",
            "uniqueItems" : true
          },
          "modelIds" : {
            "description" : "Фильтр по идентификатору модели товара.\n\nПолучить идентификатор модели можно с помощью одного из запросов:\n\n* [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md);\n\n* [POST businesses/{businessId}/offer-cards](../../reference/content/getOfferCardsContentStatus.md);\n\n* [POST models](../../reference/models/getModels.md).\n",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "maxItems" : 20,
            "nullable" : true,
            "type" : "array",
            "uniqueItems" : true
          },
          "paid" : {
            "description" : "Фильтр отзывов за баллы Плюса.",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "GetGoodsFeedbackResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/GoodsFeedbackListDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "feedbacks" : [ {
              "createdAt" : "2000-01-23T04:56:07.000+00:00",
              "needReaction" : true,
              "identifiers" : {
                "orderId" : 6,
                "modelId" : 1
              },
              "author" : "author",
              "feedbackId" : 0,
              "description" : {
                "advantages" : "advantages",
                "disadvantages" : "disadvantages",
                "comment" : "comment"
              },
              "media" : {
                "videos" : [ "videos", "videos" ],
                "photos" : [ "photos", "photos" ]
              },
              "statistics" : {
                "commentsCount" : 5,
                "rating" : 3,
                "paidAmount" : 2,
                "recommended" : true
              }
            }, {
              "createdAt" : "2000-01-23T04:56:07.000+00:00",
              "needReaction" : true,
              "identifiers" : {
                "orderId" : 6,
                "modelId" : 1
              },
              "author" : "author",
              "feedbackId" : 0,
              "description" : {
                "advantages" : "advantages",
                "disadvantages" : "disadvantages",
                "comment" : "comment"
              },
              "media" : {
                "videos" : [ "videos", "videos" ],
                "photos" : [ "photos", "photos" ]
              },
              "statistics" : {
                "commentsCount" : 5,
                "rating" : 3,
                "paidAmount" : 2,
                "recommended" : true
              }
            } ],
            "paging" : {
              "nextPageToken" : "nextPageToken"
            }
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "SkipGoodsFeedbackReactionRequest" : {
        "description" : "Идентификаторы отзывов.",
        "example" : {
          "feedbackIds" : [ null, null, null, null, null ]
        },
        "properties" : {
          "feedbackIds" : {
            "description" : "Список идентификаторов отзывов, на которые магазин не будет отвечать.",
            "items" : {
              "$ref" : "#/components/schemas/GoodsFeedbackId"
            },
            "maxItems" : 50,
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "feedbackIds" ],
        "type" : "object"
      },
      "UpdateGoodsFeedbackCommentRequest" : {
        "description" : "Комментарий к отзыву.",
        "example" : {
          "feedbackId" : 0,
          "comment" : {
            "id" : 6,
            "text" : "text",
            "parentId" : 1
          }
        },
        "properties" : {
          "feedbackId" : {
            "description" : "Идентификатор отзыва.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "comment" : {
            "$ref" : "#/components/schemas/UpdateGoodsFeedbackCommentDTO"
          }
        },
        "required" : [ "comment", "feedbackId" ],
        "type" : "object"
      },
      "UpdateGoodsFeedbackCommentResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/GoodsFeedbackCommentDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "author" : {
              "name" : "name",
              "type" : "USER"
            },
            "id" : 0,
            "text" : "text",
            "canModify" : true,
            "parentId" : 6,
            "status" : "PUBLISHED"
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "DeleteGoodsFeedbackCommentRequest" : {
        "description" : "Фильтр запроса отзывов по бизнесу.\n",
        "example" : {
          "id" : 0
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор комментария к отзыву.\n",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "GetGoodsFeedbackCommentsRequest" : {
        "description" : "Фильтр запроса комментариев отзыва.\n",
        "example" : {
          "feedbackId" : 0
        },
        "properties" : {
          "feedbackId" : {
            "description" : "Идентификатор отзыва.\n",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "feedbackId" ],
        "type" : "object"
      },
      "GetGoodsFeedbackCommentsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/GoodsFeedbackCommentListDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "comments" : [ {
              "author" : {
                "name" : "name",
                "type" : "USER"
              },
              "id" : 0,
              "text" : "text",
              "canModify" : true,
              "parentId" : 6,
              "status" : "PUBLISHED"
            }, {
              "author" : {
                "name" : "name",
                "type" : "USER"
              },
              "id" : 0,
              "text" : "text",
              "canModify" : true,
              "parentId" : 6,
              "status" : "PUBLISHED"
            } ],
            "paging" : {
              "nextPageToken" : "nextPageToken"
            }
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "CurrencyType" : {
        "description" : "Коды валют.\nВозможные значения:\n* `BYR` — белорусский рубль.\n* `KZT` — казахстанский тенге.\n* `RUR` — российский рубль.\n* `UAH` — украинская гривна.\n",
        "enum" : [ "RUR", "USD", "EUR", "UAH", "AUD", "GBP", "BYR", "BYN", "DKK", "ISK", "KZT", "CAD", "CNY", "NOK", "XDR", "SGD", "TRY", "SEK", "CHF", "JPY", "AZN", "ALL", "DZD", "AOA", "ARS", "AMD", "AFN", "BHD", "BGN", "BOB", "BWP", "BND", "BRL", "BIF", "HUF", "VEF", "KPW", "VND", "GMD", "GHS", "GNF", "HKD", "GEL", "AED", "EGP", "ZMK", "ILS", "INR", "IDR", "JOD", "IQD", "IRR", "YER", "QAR", "KES", "KGS", "COP", "CDF", "CRC", "KWD", "CUP", "LAK", "LVL", "SLL", "LBP", "LYD", "SZL", "LTL", "MUR", "MRO", "MKD", "MWK", "MGA", "MYR", "MAD", "MXN", "MZN", "MDL", "MNT", "NPR", "NGN", "NIO", "NZD", "OMR", "PKR", "PYG", "PEN", "PLN", "KHR", "SAR", "RON", "SCR", "SYP", "SKK", "SOS", "SDG", "SRD", "TJS", "THB", "TWD", "BDT", "TZS", "TND", "TMM", "UGX", "UZS", "UYU", "PHP", "DJF", "XAF", "XOF", "HRK", "CZK", "CLP", "LKR", "EEK", "ETB", "RSD", "ZAR", "KRW", "NAD", "TL", "UE" ],
        "type" : "string"
      },
      "GetOffersResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/OffersDTO"
        }, {
          "properties" : {
            "pager" : {
              "$ref" : "#/components/schemas/FlippingPagerDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Список предложений с пагинатором.",
        "example" : {
          "offers" : [ {
            "marketCategoryId" : 1,
            "preDiscountPrice" : 5.962133916683182,
            "shopCategoryId" : "shopCategoryId",
            "modelId" : 2,
            "fee" : 3.616076749251911,
            "discount" : 5,
            "url" : "url",
            "cbid" : 9.301444243932576,
            "blocked" : true,
            "feedId" : 6,
            "price" : 0.8008281904610115,
            "name" : "name",
            "currency" : "RUR",
            "id" : "id",
            "cutPrice" : true,
            "bid" : 7.061401241503109
          }, {
            "marketCategoryId" : 1,
            "preDiscountPrice" : 5.962133916683182,
            "shopCategoryId" : "shopCategoryId",
            "modelId" : 2,
            "fee" : 3.616076749251911,
            "discount" : 5,
            "url" : "url",
            "cbid" : 9.301444243932576,
            "blocked" : true,
            "feedId" : 6,
            "price" : 0.8008281904610115,
            "name" : "name",
            "currency" : "RUR",
            "id" : "id",
            "cutPrice" : true,
            "bid" : 7.061401241503109
          } ],
          "pager" : {
            "total" : 1,
            "pagesCount" : 7,
            "pageSize" : 9,
            "from" : 5,
            "to" : 5,
            "currentPage" : 2
          }
        },
        "type" : "object"
      },
      "GetCampaignOffersRequest" : {
        "description" : "Фильтрации товаров\n\nВ запросе можно указать либо фильтр offerIds, либо любые другие фильтры товаров. Совместное использование фильтра offerIds с другими фильтрациями приведет к ошибке.\n",
        "example" : {
          "categoryIds" : [ 0, 0 ],
          "vendorNames" : [ "vendorNames", "vendorNames" ],
          "statuses" : [ "PUBLISHED", "PUBLISHED" ],
          "offerIds" : [ null, null, null, null, null ],
          "tags" : [ "tags", "tags" ]
        },
        "properties" : {
          "offerIds" : {
            "description" : "Идентификаторы товаров, информация о которых нужна.\n\n{% note warning \"Такой список возвращается только целиком\" %}\n\nНе используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.\n\nЕсли вы запрашиваете информацию по конкретным SKU, не заполняйте:\n\n* `page_token`\n* `limit`\n\n{% endnote %}\n\n \n",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "maxItems" : 200,
            "nullable" : true,
            "type" : "array"
          },
          "statuses" : {
            "description" : "Фильтр по статусам товаров.\n",
            "items" : {
              "$ref" : "#/components/schemas/OfferCampaignStatusType"
            },
            "nullable" : true,
            "type" : "array"
          },
          "categoryIds" : {
            "description" : "Фильтр по категориям на Маркете.",
            "items" : {
              "type" : "integer"
            },
            "nullable" : true,
            "type" : "array"
          },
          "vendorNames" : {
            "description" : "Фильтр по брендам.",
            "items" : {
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          },
          "tags" : {
            "description" : "Фильтр по тегам.",
            "items" : {
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "GetCampaignOffersResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/GetCampaignOffersResultDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Ответ на запрос списка товаров в магазине.",
        "example" : {
          "result" : {
            "offers" : [ {
              "campaignPrice" : {
                "vat" : 5,
                "discountBase" : 5.962133916683182,
                "currencyId" : "RUR",
                "value" : 1.4658129805029452,
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              },
              "basicPrice" : {
                "discountBase" : 0.23021358869347652,
                "currencyId" : "RUR",
                "value" : 0.5637376656633328,
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              },
              "warnings" : [ {
                "comment" : "comment",
                "message" : "message"
              }, {
                "comment" : "comment",
                "message" : "message"
              } ],
              "available" : true,
              "offerId" : "offerId",
              "quantum" : {
                "minQuantity" : 1,
                "stepQuantity" : 60
              },
              "errors" : [ {
                "comment" : "comment",
                "message" : "message"
              }, {
                "comment" : "comment",
                "message" : "message"
              } ],
              "status" : "PUBLISHED"
            }, {
              "campaignPrice" : {
                "vat" : 5,
                "discountBase" : 5.962133916683182,
                "currencyId" : "RUR",
                "value" : 1.4658129805029452,
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              },
              "basicPrice" : {
                "discountBase" : 0.23021358869347652,
                "currencyId" : "RUR",
                "value" : 0.5637376656633328,
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              },
              "warnings" : [ {
                "comment" : "comment",
                "message" : "message"
              }, {
                "comment" : "comment",
                "message" : "message"
              } ],
              "available" : true,
              "offerId" : "offerId",
              "quantum" : {
                "minQuantity" : 1,
                "stepQuantity" : 60
              },
              "errors" : [ {
                "comment" : "comment",
                "message" : "message"
              }, {
                "comment" : "comment",
                "message" : "message"
              } ],
              "status" : "PUBLISHED"
            } ],
            "paging" : {
              "prevPageToken" : "prevPageToken",
              "nextPageToken" : "nextPageToken"
            }
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "UpdateCampaignOffersRequest" : {
        "description" : "Запрос на обновление предложений товаров магазина.",
        "example" : {
          "offers" : [ {
            "available" : true,
            "vat" : 0,
            "offerId" : "offerId",
            "quantum" : {
              "minQuantity" : 1,
              "stepQuantity" : 60
            }
          }, {
            "available" : true,
            "vat" : 0,
            "offerId" : "offerId",
            "quantum" : {
              "minQuantity" : 1,
              "stepQuantity" : 60
            }
          }, {
            "available" : true,
            "vat" : 0,
            "offerId" : "offerId",
            "quantum" : {
              "minQuantity" : 1,
              "stepQuantity" : 60
            }
          }, {
            "available" : true,
            "vat" : 0,
            "offerId" : "offerId",
            "quantum" : {
              "minQuantity" : 1,
              "stepQuantity" : 60
            }
          }, {
            "available" : true,
            "vat" : 0,
            "offerId" : "offerId",
            "quantum" : {
              "minQuantity" : 1,
              "stepQuantity" : 60
            }
          } ]
        },
        "properties" : {
          "offers" : {
            "description" : "Параметры размещения товаров в заданном магазине.",
            "items" : {
              "$ref" : "#/components/schemas/UpdateCampaignOfferDTO"
            },
            "maxItems" : 500,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "offers" ],
        "type" : "object"
      },
      "DeleteCampaignOffersRequest" : {
        "description" : "Фильтрации удаляемых товаров по offerIds.\n",
        "example" : {
          "offerIds" : [ null, null, null, null, null ]
        },
        "properties" : {
          "offerIds" : {
            "description" : "Идентификаторы товаров в каталоге.",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "maxItems" : 500,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "offerIds" ],
        "type" : "object"
      },
      "DeleteCampaignOffersResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/DeleteCampaignOffersDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Результат удаления товаров.",
        "example" : {
          "result" : {
            "notDeletedOfferIds" : [ null, null ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetAllOffersResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/OffersDTO"
        } ],
        "description" : "Список предложений.",
        "example" : {
          "offers" : [ {
            "marketCategoryId" : 1,
            "preDiscountPrice" : 5.962133916683182,
            "shopCategoryId" : "shopCategoryId",
            "modelId" : 2,
            "fee" : 3.616076749251911,
            "discount" : 5,
            "url" : "url",
            "cbid" : 9.301444243932576,
            "blocked" : true,
            "feedId" : 6,
            "price" : 0.8008281904610115,
            "name" : "name",
            "currency" : "RUR",
            "id" : "id",
            "cutPrice" : true,
            "bid" : 7.061401241503109
          }, {
            "marketCategoryId" : 1,
            "preDiscountPrice" : 5.962133916683182,
            "shopCategoryId" : "shopCategoryId",
            "modelId" : 2,
            "fee" : 3.616076749251911,
            "discount" : 5,
            "url" : "url",
            "cbid" : 9.301444243932576,
            "blocked" : true,
            "feedId" : 6,
            "price" : 0.8008281904610115,
            "name" : "name",
            "currency" : "RUR",
            "id" : "id",
            "cutPrice" : true,
            "bid" : 7.061401241503109
          } ]
        },
        "type" : "object"
      },
      "GetOfferRecommendationsRequest" : {
        "example" : {
          "cofinancePriceFilter" : "SPECIFIED",
          "competitivenessFilter" : "OPTIMAL",
          "recommendedCofinancePriceFilter" : null,
          "offerIds" : [ null, null ]
        },
        "properties" : {
          "offerIds" : {
            "description" : "Идентификаторы товаров, информация о которых нужна. ⚠️ Не используйте это поле одновременно с остальными фильтрами. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "nullable" : true,
            "type" : "array"
          },
          "cofinancePriceFilter" : {
            "$ref" : "#/components/schemas/FieldStateType"
          },
          "recommendedCofinancePriceFilter" : {
            "$ref" : "#/components/schemas/FieldStateType"
          },
          "competitivenessFilter" : {
            "$ref" : "#/components/schemas/PriceCompetitivenessType"
          }
        },
        "type" : "object"
      },
      "GetOfferRecommendationsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/OfferRecommendationsResultDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "paging" : {
              "prevPageToken" : "prevPageToken",
              "nextPageToken" : "nextPageToken"
            },
            "offerRecommendations" : [ {
              "offer" : {
                "shows" : 0,
                "price" : {
                  "currencyId" : null,
                  "value" : 0.9301444243932576
                },
                "offerId" : "offerId",
                "competitiveness" : "OPTIMAL",
                "cofinancePrice" : {
                  "currencyId" : null,
                  "value" : 0.7061401241503109,
                  "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                }
              },
              "recommendation" : {
                "recommendedCofinancePrice" : {
                  "currencyId" : null,
                  "value" : 0.9301444243932576
                },
                "offerId" : "offerId",
                "competitivenessThresholds" : {
                  "optimalPrice" : {
                    "currencyId" : null,
                    "value" : 0.9301444243932576
                  },
                  "averagePrice" : {
                    "currencyId" : null,
                    "value" : 0.9301444243932576
                  }
                }
              }
            }, {
              "offer" : {
                "shows" : 0,
                "price" : {
                  "currencyId" : null,
                  "value" : 0.9301444243932576
                },
                "offerId" : "offerId",
                "competitiveness" : "OPTIMAL",
                "cofinancePrice" : {
                  "currencyId" : null,
                  "value" : 0.7061401241503109,
                  "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                }
              },
              "recommendation" : {
                "recommendedCofinancePrice" : {
                  "currencyId" : null,
                  "value" : 0.9301444243932576
                },
                "offerId" : "offerId",
                "competitivenessThresholds" : {
                  "optimalPrice" : {
                    "currencyId" : null,
                    "value" : 0.9301444243932576
                  },
                  "averagePrice" : {
                    "currencyId" : null,
                    "value" : 0.9301444243932576
                  }
                }
              }
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetFeedResponse" : {
        "description" : "Ответ на запрос информации о прайс-листе.",
        "example" : {
          "feed" : {
            "password" : "password",
            "download" : {
              "error" : {
                "description" : "description",
                "type" : "DOWNLOAD_ERROR",
                "httpStatusCode" : 5
              },
              "status" : null
            },
            "uploadDate" : "2000-01-23T04:56:07.000+00:00",
            "publication" : {
              "priceAndStockUpdate" : {
                "fileTime" : "2000-01-23T04:56:07.000+00:00",
                "publishedTime" : "2000-01-23T04:56:07.000+00:00"
              },
              "status" : null,
              "full" : {
                "fileTime" : "2000-01-23T04:56:07.000+00:00",
                "publishedTime" : "2000-01-23T04:56:07.000+00:00"
              }
            },
            "name" : "name",
            "id" : 0,
            "placement" : {
              "status" : null,
              "totalOffersCount" : 5
            },
            "login" : "login",
            "url" : "url",
            "content" : {
              "rejectedOffersCount" : 6,
              "error" : {
                "type" : "PARSE_ERROR"
              },
              "status" : "ERROR",
              "totalOffersCount" : 1
            }
          }
        },
        "properties" : {
          "feed" : {
            "$ref" : "#/components/schemas/FeedDTO"
          }
        },
        "type" : "object"
      },
      "GetFeedsResponse" : {
        "description" : "Ответ на запрос списка прайс-листов.",
        "example" : {
          "feeds" : [ {
            "password" : "password",
            "download" : {
              "error" : {
                "description" : "description",
                "type" : "DOWNLOAD_ERROR",
                "httpStatusCode" : 5
              },
              "status" : null
            },
            "uploadDate" : "2000-01-23T04:56:07.000+00:00",
            "publication" : {
              "priceAndStockUpdate" : {
                "fileTime" : "2000-01-23T04:56:07.000+00:00",
                "publishedTime" : "2000-01-23T04:56:07.000+00:00"
              },
              "status" : null,
              "full" : {
                "fileTime" : "2000-01-23T04:56:07.000+00:00",
                "publishedTime" : "2000-01-23T04:56:07.000+00:00"
              }
            },
            "name" : "name",
            "id" : 0,
            "placement" : {
              "status" : null,
              "totalOffersCount" : 5
            },
            "login" : "login",
            "url" : "url",
            "content" : {
              "rejectedOffersCount" : 6,
              "error" : {
                "type" : "PARSE_ERROR"
              },
              "status" : "ERROR",
              "totalOffersCount" : 1
            }
          }, {
            "password" : "password",
            "download" : {
              "error" : {
                "description" : "description",
                "type" : "DOWNLOAD_ERROR",
                "httpStatusCode" : 5
              },
              "status" : null
            },
            "uploadDate" : "2000-01-23T04:56:07.000+00:00",
            "publication" : {
              "priceAndStockUpdate" : {
                "fileTime" : "2000-01-23T04:56:07.000+00:00",
                "publishedTime" : "2000-01-23T04:56:07.000+00:00"
              },
              "status" : null,
              "full" : {
                "fileTime" : "2000-01-23T04:56:07.000+00:00",
                "publishedTime" : "2000-01-23T04:56:07.000+00:00"
              }
            },
            "name" : "name",
            "id" : 0,
            "placement" : {
              "status" : null,
              "totalOffersCount" : 5
            },
            "login" : "login",
            "url" : "url",
            "content" : {
              "rejectedOffersCount" : 6,
              "error" : {
                "type" : "PARSE_ERROR"
              },
              "status" : "ERROR",
              "totalOffersCount" : 1
            }
          } ]
        },
        "properties" : {
          "feeds" : {
            "description" : "Список прайс-листов.",
            "items" : {
              "$ref" : "#/components/schemas/FeedDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "feeds" ],
        "type" : "object"
      },
      "FeedIndexLogsStatusType" : {
        "description" : "Статус индексации прайс-листа и проверки на соответствие техническим требованиям.\n\nВозможные значения:\n\n* `ERROR` — произошли ошибки.\n* `OK` — обработан без ошибок.\n* `WARNING` — наблюдались некритичные проблемы.\n",
        "enum" : [ "ERROR", "OK", "WARNING" ],
        "type" : "string"
      },
      "GetFeedIndexLogsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/FeedIndexLogsResultDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "feed" : {
              "id" : 0
            },
            "total" : 2,
            "indexLogRecords" : [ {
              "offers" : {
                "rejectedCount" : 5,
                "totalCount" : 5
              },
              "fileTime" : "2000-01-23T04:56:07.000+00:00",
              "generationId" : 6,
              "indexType" : "DIFF",
              "publishedTime" : "2000-01-23T04:56:07.000+00:00",
              "error" : {
                "description" : "description",
                "type" : "DOWNLOAD_ERROR",
                "httpStatusCode" : 1
              },
              "downloadTime" : "2000-01-23T04:56:07.000+00:00",
              "status" : "ERROR"
            }, {
              "offers" : {
                "rejectedCount" : 5,
                "totalCount" : 5
              },
              "fileTime" : "2000-01-23T04:56:07.000+00:00",
              "generationId" : 6,
              "indexType" : "DIFF",
              "publishedTime" : "2000-01-23T04:56:07.000+00:00",
              "error" : {
                "description" : "description",
                "type" : "DOWNLOAD_ERROR",
                "httpStatusCode" : 1
              },
              "downloadTime" : "2000-01-23T04:56:07.000+00:00",
              "status" : "ERROR"
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "SetFeedParamsRequest" : {
        "description" : "Запрос на обновление изменение параметров прайс-листа.",
        "example" : {
          "parameters" : [ {
            "deleted" : true,
            "values" : [ 0, 0 ],
            "name" : "name"
          }, {
            "deleted" : true,
            "values" : [ 0, 0 ],
            "name" : "name"
          } ]
        },
        "properties" : {
          "parameters" : {
            "description" : "Параметры прайс-листа.\n\nОбязательный параметр.\n",
            "items" : {
              "$ref" : "#/components/schemas/FeedParameterDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "parameters" ],
        "type" : "object"
      },
      "SearchModelsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/GetModelsResponse"
        }, {
          "properties" : {
            "pager" : {
              "$ref" : "#/components/schemas/FlippingPagerDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "models" : [ {
            "name" : "name",
            "id" : 0,
            "prices" : {
              "avg" : 6.027456183070403,
              "min" : 5.962133916683182,
              "max" : 1.4658129805029452
            }
          }, {
            "name" : "name",
            "id" : 0,
            "prices" : {
              "avg" : 6.027456183070403,
              "min" : 5.962133916683182,
              "max" : 1.4658129805029452
            }
          } ],
          "pager" : {
            "total" : 1,
            "pagesCount" : 7,
            "pageSize" : 9,
            "from" : 5,
            "to" : 5,
            "currentPage" : 2
          },
          "regionId" : 5,
          "currency" : "RUR"
        },
        "type" : "object"
      },
      "GetModelsRequest" : {
        "description" : "Запрос информации о моделях.",
        "example" : {
          "models" : [ 0, 0 ]
        },
        "properties" : {
          "models" : {
            "description" : "Список моделей.",
            "items" : {
              "description" : "Идентификатор модели.",
              "exclusiveMinimum" : true,
              "format" : "int64",
              "minimum" : 0,
              "type" : "integer"
            },
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "models" ],
        "type" : "object"
      },
      "GetModelsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelsDTO"
        }, {
          "$ref" : "#/components/schemas/RegionalModelInfoDTO"
        } ],
        "description" : "Ответ на запрос информации о моделях.",
        "example" : {
          "models" : [ {
            "name" : "name",
            "id" : 0,
            "prices" : {
              "avg" : 6.027456183070403,
              "min" : 5.962133916683182,
              "max" : 1.4658129805029452
            }
          }, {
            "name" : "name",
            "id" : 0,
            "prices" : {
              "avg" : 6.027456183070403,
              "min" : 5.962133916683182,
              "max" : 1.4658129805029452
            }
          } ],
          "regionId" : 0,
          "currency" : "RUR"
        },
        "type" : "object"
      },
      "SortOrderType" : {
        "description" : "Направление сортировки.\n\nВозможные значения:\n- `ASC` — сортировка по возрастанию.\n- `DESC` — сортировка по убыванию.\n",
        "enum" : [ "ASC", "DESC" ],
        "type" : "string"
      },
      "GetModelsOffersResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EnrichedModelsDTO"
        }, {
          "$ref" : "#/components/schemas/RegionalModelInfoDTO"
        } ],
        "description" : "Ответ на запрос списка предложений для моделей.",
        "example" : {
          "models" : [ {
            "offers" : [ {
              "shopRating" : 9,
              "preDiscountPrice" : 5.962133916683182,
              "shippingCost" : 7.061401241503109,
              "pos" : 1,
              "regionId" : 2,
              "price" : 5.637376656633329,
              "name" : "name",
              "discount" : 6,
              "shopName" : "shopName",
              "inStock" : 3
            }, {
              "shopRating" : 9,
              "preDiscountPrice" : 5.962133916683182,
              "shippingCost" : 7.061401241503109,
              "pos" : 1,
              "regionId" : 2,
              "price" : 5.637376656633329,
              "name" : "name",
              "discount" : 6,
              "shopName" : "shopName",
              "inStock" : 3
            } ],
            "onlineOffers" : 4,
            "name" : "name",
            "id" : 0,
            "prices" : {
              "avg" : 6.027456183070403,
              "min" : 5.962133916683182,
              "max" : 1.4658129805029452
            },
            "offlineOffers" : 2
          }, {
            "offers" : [ {
              "shopRating" : 9,
              "preDiscountPrice" : 5.962133916683182,
              "shippingCost" : 7.061401241503109,
              "pos" : 1,
              "regionId" : 2,
              "price" : 5.637376656633329,
              "name" : "name",
              "discount" : 6,
              "shopName" : "shopName",
              "inStock" : 3
            }, {
              "shopRating" : 9,
              "preDiscountPrice" : 5.962133916683182,
              "shippingCost" : 7.061401241503109,
              "pos" : 1,
              "regionId" : 2,
              "price" : 5.637376656633329,
              "name" : "name",
              "discount" : 6,
              "shopName" : "shopName",
              "inStock" : 3
            } ],
            "onlineOffers" : 4,
            "name" : "name",
            "id" : 0,
            "prices" : {
              "avg" : 6.027456183070403,
              "min" : 5.962133916683182,
              "max" : 1.4658129805029452
            },
            "offlineOffers" : 2
          } ],
          "regionId" : 7,
          "currency" : "RUR"
        },
        "type" : "object"
      },
      "PutSkuBidsRequest" : {
        "description" : "description.",
        "example" : {
          "bids" : [ {
            "sku" : "sku",
            "bid" : 570
          }, {
            "sku" : "sku",
            "bid" : 570
          }, {
            "sku" : "sku",
            "bid" : 570
          }, {
            "sku" : "sku",
            "bid" : 570
          }, {
            "sku" : "sku",
            "bid" : 570
          } ]
        },
        "properties" : {
          "bids" : {
            "description" : "Список товаров и ставки для продвижения, которые на них нужно установить.",
            "items" : {
              "$ref" : "#/components/schemas/SkuBidItemDTO"
            },
            "maxItems" : 1500,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "bids" ],
        "type" : "object"
      },
      "GetBidsInfoRequest" : {
        "description" : "description.",
        "example" : {
          "skus" : [ null, null, null, null, null ]
        },
        "properties" : {
          "skus" : {
            "description" : "Список товаров, для которых нужно получить значения ставок.\n\nЕсли список не задан, постранично возвращаются все товары со ставками.\n\nЕсли список задан, результаты возвращаются одной страницей, а параметры `page_token` и `limit` игнорируются.\n",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "maxItems" : 1500,
            "minItems" : 1,
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "GetBidsInfoResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/GetBidsInfoResponseDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "description.",
        "example" : {
          "result" : {
            "bids" : [ {
              "sku" : "sku",
              "bid" : 570
            }, {
              "sku" : "sku",
              "bid" : 570
            } ],
            "paging" : {
              "nextPageToken" : "nextPageToken"
            }
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetBidsRecommendationsRequest" : {
        "description" : "description.",
        "example" : {
          "skus" : [ null, null, null, null, null ]
        },
        "properties" : {
          "skus" : {
            "description" : "Список товаров, для которых нужно получить рекомендации по ставкам.\n",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "maxItems" : 1500,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "skus" ],
        "type" : "object"
      },
      "GetBidsRecommendationsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/GetBidsRecommendationsResponseDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "description.",
        "example" : {
          "result" : {
            "recommendations" : [ {
              "bidRecommendations" : [ {
                "showPercent" : 8,
                "bid" : 570
              }, {
                "showPercent" : 8,
                "bid" : 570
              } ],
              "priceRecommendations" : [ {
                "campaignId" : 6,
                "price" : 1.1465812980502945
              }, {
                "campaignId" : 6,
                "price" : 1.1465812980502945
              } ],
              "sku" : "sku",
              "bid" : 570
            }, {
              "bidRecommendations" : [ {
                "showPercent" : 8,
                "bid" : 570
              }, {
                "showPercent" : 8,
                "bid" : 570
              } ],
              "priceRecommendations" : [ {
                "campaignId" : 6,
                "price" : 1.1465812980502945
              }, {
                "campaignId" : 6,
                "price" : 1.1465812980502945
              } ],
              "sku" : "sku",
              "bid" : 570
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetWarehousesResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/WarehousesDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "warehouses" : [ {
              "address" : {
                "number" : "number",
                "city" : "city",
                "street" : "street",
                "block" : "block",
                "gps" : {
                  "latitude" : 9.965781217890562,
                  "longitude" : 9.369310271410669
                },
                "building" : "building"
              },
              "campaignId" : 6,
              "name" : "name",
              "express" : true,
              "id" : 0
            }, {
              "address" : {
                "number" : "number",
                "city" : "city",
                "street" : "street",
                "block" : "block",
                "gps" : {
                  "latitude" : 9.965781217890562,
                  "longitude" : 9.369310271410669
                },
                "building" : "building"
              },
              "campaignId" : 6,
              "name" : "name",
              "express" : true,
              "id" : 0
            } ],
            "warehouseGroups" : [ {
              "name" : "name",
              "warehouses" : [ {
                "address" : {
                  "number" : "number",
                  "city" : "city",
                  "street" : "street",
                  "block" : "block",
                  "gps" : {
                    "latitude" : 9.965781217890562,
                    "longitude" : 9.369310271410669
                  },
                  "building" : "building"
                },
                "campaignId" : 6,
                "name" : "name",
                "express" : true,
                "id" : 0
              }, {
                "address" : {
                  "number" : "number",
                  "city" : "city",
                  "street" : "street",
                  "block" : "block",
                  "gps" : {
                    "latitude" : 9.965781217890562,
                    "longitude" : 9.369310271410669
                  },
                  "building" : "building"
                },
                "campaignId" : 6,
                "name" : "name",
                "express" : true,
                "id" : 0
              } ],
              "mainWarehouse" : {
                "address" : {
                  "number" : "number",
                  "city" : "city",
                  "street" : "street",
                  "block" : "block",
                  "gps" : {
                    "latitude" : 9.965781217890562,
                    "longitude" : 9.369310271410669
                  },
                  "building" : "building"
                },
                "campaignId" : 6,
                "name" : "name",
                "express" : true,
                "id" : 0
              }
            }, {
              "name" : "name",
              "warehouses" : [ {
                "address" : {
                  "number" : "number",
                  "city" : "city",
                  "street" : "street",
                  "block" : "block",
                  "gps" : {
                    "latitude" : 9.965781217890562,
                    "longitude" : 9.369310271410669
                  },
                  "building" : "building"
                },
                "campaignId" : 6,
                "name" : "name",
                "express" : true,
                "id" : 0
              }, {
                "address" : {
                  "number" : "number",
                  "city" : "city",
                  "street" : "street",
                  "block" : "block",
                  "gps" : {
                    "latitude" : 9.965781217890562,
                    "longitude" : 9.369310271410669
                  },
                  "building" : "building"
                },
                "campaignId" : 6,
                "name" : "name",
                "express" : true,
                "id" : 0
              } ],
              "mainWarehouse" : {
                "address" : {
                  "number" : "number",
                  "city" : "city",
                  "street" : "street",
                  "block" : "block",
                  "gps" : {
                    "latitude" : 9.965781217890562,
                    "longitude" : 9.369310271410669
                  },
                  "building" : "building"
                },
                "campaignId" : 6,
                "name" : "name",
                "express" : true,
                "id" : 0
              }
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetFulfillmentWarehousesResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/FulfillmentWarehousesDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "warehouses" : [ {
              "address" : {
                "number" : "number",
                "city" : "city",
                "street" : "street",
                "block" : "block",
                "gps" : {
                  "latitude" : 9.965781217890562,
                  "longitude" : 9.369310271410669
                },
                "building" : "building"
              },
              "name" : "name",
              "id" : 0
            }, {
              "address" : {
                "number" : "number",
                "city" : "city",
                "street" : "street",
                "block" : "block",
                "gps" : {
                  "latitude" : 9.965781217890562,
                  "longitude" : 9.369310271410669
                },
                "building" : "building"
              },
              "name" : "name",
              "id" : 0
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetCategoryContentParametersResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/CategoryContentParametersDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Ответ со списком характеристик для категории и их допустимыми значениями.",
        "example" : {
          "result" : {
            "parameters" : [ {
              "values" : [ {
                "description" : "description",
                "id" : 5,
                "value" : "value"
              }, {
                "description" : "description",
                "id" : 5,
                "value" : "value"
              } ],
              "recommendationTypes" : [ "HAS_VIDEO", "HAS_VIDEO" ],
              "description" : "description",
              "type" : "TEXT",
              "constraints" : {
                "minValue" : 2.3021358869347655,
                "maxValue" : 7.061401241503109,
                "maxLength" : 9
              },
              "required" : true,
              "multivalue" : true,
              "unit" : {
                "defaultUnitId" : 1,
                "units" : [ {
                  "name" : "кг",
                  "fullName" : "килограмм",
                  "id" : 5
                }, {
                  "name" : "кг",
                  "fullName" : "килограмм",
                  "id" : 5
                } ]
              },
              "valueRestrictions" : [ {
                "limitedValues" : [ {
                  "limitingOptionValueId" : 2,
                  "optionValueIds" : [ 4, 4 ]
                }, {
                  "limitingOptionValueId" : 2,
                  "optionValueIds" : [ 4, 4 ]
                } ],
                "limitingParameterId" : 3
              }, {
                "limitedValues" : [ {
                  "limitingOptionValueId" : 2,
                  "optionValueIds" : [ 4, 4 ]
                }, {
                  "limitingOptionValueId" : 2,
                  "optionValueIds" : [ 4, 4 ]
                } ],
                "limitingParameterId" : 3
              } ],
              "distinctive" : true,
              "name" : "name",
              "id" : 6,
              "filtering" : true,
              "allowCustomValues" : true
            }, {
              "values" : [ {
                "description" : "description",
                "id" : 5,
                "value" : "value"
              }, {
                "description" : "description",
                "id" : 5,
                "value" : "value"
              } ],
              "recommendationTypes" : [ "HAS_VIDEO", "HAS_VIDEO" ],
              "description" : "description",
              "type" : "TEXT",
              "constraints" : {
                "minValue" : 2.3021358869347655,
                "maxValue" : 7.061401241503109,
                "maxLength" : 9
              },
              "required" : true,
              "multivalue" : true,
              "unit" : {
                "defaultUnitId" : 1,
                "units" : [ {
                  "name" : "кг",
                  "fullName" : "килограмм",
                  "id" : 5
                }, {
                  "name" : "кг",
                  "fullName" : "килограмм",
                  "id" : 5
                } ]
              },
              "valueRestrictions" : [ {
                "limitedValues" : [ {
                  "limitingOptionValueId" : 2,
                  "optionValueIds" : [ 4, 4 ]
                }, {
                  "limitingOptionValueId" : 2,
                  "optionValueIds" : [ 4, 4 ]
                } ],
                "limitingParameterId" : 3
              }, {
                "limitedValues" : [ {
                  "limitingOptionValueId" : 2,
                  "optionValueIds" : [ 4, 4 ]
                }, {
                  "limitingOptionValueId" : 2,
                  "optionValueIds" : [ 4, 4 ]
                } ],
                "limitingParameterId" : 3
              } ],
              "distinctive" : true,
              "name" : "name",
              "id" : 6,
              "filtering" : true,
              "allowCustomValues" : true
            } ],
            "categoryId" : 0
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetOfferCardsContentStatusRequest" : {
        "example" : {
          "categoryIds" : [ null, null, null, null, null ],
          "offerIds" : [ null, null, null, null, null ],
          "cardStatuses" : [ "HAS_CARD_CAN_NOT_UPDATE", "HAS_CARD_CAN_NOT_UPDATE" ]
        },
        "properties" : {
          "offerIds" : {
            "description" : "Идентификаторы товаров, информация о которых нужна.\n<br><br>\n⚠️ Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.\n",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "maxItems" : 200,
            "nullable" : true,
            "type" : "array",
            "uniqueItems" : true
          },
          "cardStatuses" : {
            "description" : "Фильтр по статусам карточек.\n\n[Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html)\n",
            "items" : {
              "$ref" : "#/components/schemas/OfferCardStatusType"
            },
            "nullable" : true,
            "type" : "array",
            "uniqueItems" : true
          },
          "categoryIds" : {
            "description" : "Фильтр по категориям на Маркете.",
            "items" : {
              "$ref" : "#/components/schemas/CategoryId"
            },
            "maxItems" : 200,
            "nullable" : true,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "GetOfferCardsContentStatusResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/OfferCardsContentStatusDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Ответ со списком состояний товаров и пагинацией.",
        "example" : {
          "result" : {
            "offerCards" : [ {
              "mapping" : {
                "marketSkuName" : "marketSkuName",
                "marketCategoryName" : "marketCategoryName",
                "marketCategoryId" : 4,
                "marketSku" : 3,
                "marketModelId" : 2,
                "marketModelName" : "marketModelName"
              },
              "warnings" : [ {
                "comment" : "comment",
                "message" : "message"
              }, {
                "comment" : "comment",
                "message" : "message"
              } ],
              "offerId" : "offerId",
              "contentRating" : 0,
              "recommendations" : [ {
                "type" : "HAS_VIDEO",
                "percent" : 60
              }, {
                "type" : "HAS_VIDEO",
                "percent" : 60
              } ],
              "cardStatus" : "HAS_CARD_CAN_NOT_UPDATE",
              "errors" : [ {
                "comment" : "comment",
                "message" : "message"
              }, {
                "comment" : "comment",
                "message" : "message"
              } ],
              "parameterValues" : [ {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              } ]
            }, {
              "mapping" : {
                "marketSkuName" : "marketSkuName",
                "marketCategoryName" : "marketCategoryName",
                "marketCategoryId" : 4,
                "marketSku" : 3,
                "marketModelId" : 2,
                "marketModelName" : "marketModelName"
              },
              "warnings" : [ {
                "comment" : "comment",
                "message" : "message"
              }, {
                "comment" : "comment",
                "message" : "message"
              } ],
              "offerId" : "offerId",
              "contentRating" : 0,
              "recommendations" : [ {
                "type" : "HAS_VIDEO",
                "percent" : 60
              }, {
                "type" : "HAS_VIDEO",
                "percent" : 60
              } ],
              "cardStatus" : "HAS_CARD_CAN_NOT_UPDATE",
              "errors" : [ {
                "comment" : "comment",
                "message" : "message"
              }, {
                "comment" : "comment",
                "message" : "message"
              } ],
              "parameterValues" : [ {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              }, {
                "valueId" : 5,
                "parameterId" : 1,
                "unitId" : 5,
                "value" : "value"
              } ]
            } ],
            "paging" : {
              "nextPageToken" : "nextPageToken"
            }
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "UpdateOfferContentRequest" : {
        "description" : "Запрос на установку новых значений для параметров.",
        "example" : {
          "offersContent" : [ {
            "offerId" : "offerId",
            "categoryId" : 0,
            "parameterValues" : [ {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            } ]
          }, {
            "offerId" : "offerId",
            "categoryId" : 0,
            "parameterValues" : [ {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            } ]
          }, {
            "offerId" : "offerId",
            "categoryId" : 0,
            "parameterValues" : [ {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            } ]
          }, {
            "offerId" : "offerId",
            "categoryId" : 0,
            "parameterValues" : [ {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            } ]
          }, {
            "offerId" : "offerId",
            "categoryId" : 0,
            "parameterValues" : [ {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            } ]
          } ]
        },
        "properties" : {
          "offersContent" : {
            "description" : "Список товаров с указанными характеристиками.",
            "items" : {
              "$ref" : "#/components/schemas/OfferContentDTO"
            },
            "maxItems" : 100,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "offersContent" ],
        "type" : "object"
      },
      "UpdateOfferContentResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "results" : {
              "description" : "Ошибки и предупреждения, которые появились при обработке переданных значений. Каждый элемент списка соответствует одному товару.\n\nЕсли ошибок и предупреждений нет, поле не передается.\n",
              "items" : {
                "$ref" : "#/components/schemas/UpdateOfferContentResultDTO"
              },
              "nullable" : true,
              "type" : "array"
            }
          },
          "type" : "object"
        } ],
        "description" : "Описывает проблемы, которые появились при сохранении товара.",
        "example" : {
          "results" : [ {
            "warnings" : [ {
              "parameterId" : 0,
              "type" : "OFFER_NOT_FOUND",
              "message" : "message"
            }, {
              "parameterId" : 0,
              "type" : "OFFER_NOT_FOUND",
              "message" : "message"
            } ],
            "offerId" : "offerId",
            "errors" : [ {
              "parameterId" : 0,
              "type" : "OFFER_NOT_FOUND",
              "message" : "message"
            }, {
              "parameterId" : 0,
              "type" : "OFFER_NOT_FOUND",
              "message" : "message"
            } ]
          }, {
            "warnings" : [ {
              "parameterId" : 0,
              "type" : "OFFER_NOT_FOUND",
              "message" : "message"
            }, {
              "parameterId" : 0,
              "type" : "OFFER_NOT_FOUND",
              "message" : "message"
            } ],
            "offerId" : "offerId",
            "errors" : [ {
              "parameterId" : 0,
              "type" : "OFFER_NOT_FOUND",
              "message" : "message"
            }, {
              "parameterId" : 0,
              "type" : "OFFER_NOT_FOUND",
              "message" : "message"
            } ]
          } ],
          "status" : "OK"
        },
        "type" : "object"
      },
      "CreateChatRequest" : {
        "description" : "Заказ, для которого нужно создать чат.\n",
        "example" : {
          "orderId" : 0
        },
        "properties" : {
          "orderId" : {
            "description" : "Идентификатор заказа на Маркете.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "orderId" ],
        "type" : "object"
      },
      "CreateChatResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/CreateChatResultDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Результат создания чата.",
        "example" : {
          "result" : {
            "chatId" : 0
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetChatsRequest" : {
        "description" : "Фильтры по чатам, которые нужно вернуть.\n",
        "example" : {
          "types" : [ "CHAT", "CHAT" ],
          "statuses" : [ "NEW", "NEW" ],
          "orderIds" : [ 0, 0 ]
        },
        "properties" : {
          "orderIds" : {
            "description" : "Фильтр по идентификаторам заказов на Маркете.",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "minItems" : 1,
            "nullable" : true,
            "type" : "array"
          },
          "types" : {
            "description" : "Фильтр по типам чатов.",
            "items" : {
              "$ref" : "#/components/schemas/ChatType"
            },
            "minItems" : 1,
            "nullable" : true,
            "type" : "array"
          },
          "statuses" : {
            "description" : "Фильтр по статусам чатов.",
            "items" : {
              "$ref" : "#/components/schemas/ChatStatusType"
            },
            "minItems" : 1,
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "GetChatsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/GetChatsInfoDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "chats" : [ {
              "createdAt" : "2000-01-23T04:56:07.000+00:00",
              "chatId" : 0,
              "orderId" : 6,
              "type" : "CHAT",
              "status" : "NEW",
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            }, {
              "createdAt" : "2000-01-23T04:56:07.000+00:00",
              "chatId" : 0,
              "orderId" : 6,
              "type" : "CHAT",
              "status" : "NEW",
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            } ],
            "paging" : {
              "nextPageToken" : "nextPageToken"
            }
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "SendFileToChatRequest" : {
        "description" : "Информация о чате и отправляемом файле.",
        "properties" : {
          "file" : {
            "description" : "Содержимое файла. Максимальный размер файла — 5 Мбайт.",
            "format" : "binary",
            "type" : "string"
          }
        },
        "required" : [ "file" ],
        "type" : "object"
      },
      "SendMessageToChatRequest" : {
        "description" : "В какой чат нужно отправить сообщение и текст сообщения.",
        "example" : {
          "message" : "message"
        },
        "properties" : {
          "message" : {
            "description" : "Текст сообщения. Максимальная длина — 4096 символа.",
            "maxLength" : 4096,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [ "message" ],
        "type" : "object"
      },
      "GetChatHistoryRequest" : {
        "description" : "Историю какого чата нужно получить — и начиная с какого сообщения.\n",
        "example" : {
          "messageIdFrom" : 0
        },
        "properties" : {
          "messageIdFrom" : {
            "description" : "Идентификатор сообщения, начиная с которого нужно получить все последующие сообщения.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "GetChatHistoryResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/ChatMessagesResultDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "orderId" : 0,
            "messages" : [ {
              "createdAt" : "2000-01-23T04:56:07.000+00:00",
              "sender" : "PARTNER",
              "payload" : [ {
                "size" : 1,
                "name" : "name",
                "url" : "url"
              }, {
                "size" : 1,
                "name" : "name",
                "url" : "url"
              } ],
              "messageId" : 6,
              "message" : "message"
            }, {
              "createdAt" : "2000-01-23T04:56:07.000+00:00",
              "sender" : "PARTNER",
              "payload" : [ {
                "size" : 1,
                "name" : "name",
                "url" : "url"
              }, {
                "size" : 1,
                "name" : "name",
                "url" : "url"
              } ],
              "messageId" : 6,
              "message" : "message"
            } ],
            "paging" : {
              "nextPageToken" : "nextPageToken"
            }
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "CalculateTariffsRequest" : {
        "example" : {
          "offers" : [ {
            "quantity" : 1,
            "price" : 0.6027456183070403,
            "length" : 0.14658129805029452,
            "width" : 0.5962133916683182,
            "weight" : 0.23021358869347652,
            "categoryId" : 0,
            "height" : 0.5637376656633328
          }, {
            "quantity" : 1,
            "price" : 0.6027456183070403,
            "length" : 0.14658129805029452,
            "width" : 0.5962133916683182,
            "weight" : 0.23021358869347652,
            "categoryId" : 0,
            "height" : 0.5637376656633328
          }, {
            "quantity" : 1,
            "price" : 0.6027456183070403,
            "length" : 0.14658129805029452,
            "width" : 0.5962133916683182,
            "weight" : 0.23021358869347652,
            "categoryId" : 0,
            "height" : 0.5637376656633328
          }, {
            "quantity" : 1,
            "price" : 0.6027456183070403,
            "length" : 0.14658129805029452,
            "width" : 0.5962133916683182,
            "weight" : 0.23021358869347652,
            "categoryId" : 0,
            "height" : 0.5637376656633328
          }, {
            "quantity" : 1,
            "price" : 0.6027456183070403,
            "length" : 0.14658129805029452,
            "width" : 0.5962133916683182,
            "weight" : 0.23021358869347652,
            "categoryId" : 0,
            "height" : 0.5637376656633328
          } ],
          "parameters" : {
            "campaignId" : 0,
            "sellingProgram" : "FBY",
            "frequency" : "DAILY"
          }
        },
        "properties" : {
          "parameters" : {
            "$ref" : "#/components/schemas/CalculateTariffsParametersDTO"
          },
          "offers" : {
            "description" : "Товары, для которых нужно рассчитать стоимость услуг.",
            "items" : {
              "$ref" : "#/components/schemas/CalculateTariffsOfferDTO"
            },
            "maxItems" : 200,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "offers", "parameters" ],
        "type" : "object"
      },
      "CalculateTariffsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/CalculateTariffsResponseDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "offers" : [ {
              "offer" : {
                "quantity" : 1,
                "price" : 0.6027456183070403,
                "length" : 0.14658129805029452,
                "width" : 0.5962133916683182,
                "weight" : 0.23021358869347652,
                "categoryId" : 0,
                "height" : 0.5637376656633328
              },
              "tariffs" : [ {
                "amount" : 9.301444243932576,
                "type" : "AGENCY_COMMISSION",
                "parameters" : [ {
                  "name" : "name",
                  "value" : "value"
                }, {
                  "name" : "name",
                  "value" : "value"
                } ]
              }, {
                "amount" : 9.301444243932576,
                "type" : "AGENCY_COMMISSION",
                "parameters" : [ {
                  "name" : "name",
                  "value" : "value"
                }, {
                  "name" : "name",
                  "value" : "value"
                } ]
              } ]
            }, {
              "offer" : {
                "quantity" : 1,
                "price" : 0.6027456183070403,
                "length" : 0.14658129805029452,
                "width" : 0.5962133916683182,
                "weight" : 0.23021358869347652,
                "categoryId" : 0,
                "height" : 0.5637376656633328
              },
              "tariffs" : [ {
                "amount" : 9.301444243932576,
                "type" : "AGENCY_COMMISSION",
                "parameters" : [ {
                  "name" : "name",
                  "value" : "value"
                }, {
                  "name" : "name",
                  "value" : "value"
                } ]
              }, {
                "amount" : 9.301444243932576,
                "type" : "AGENCY_COMMISSION",
                "parameters" : [ {
                  "name" : "name",
                  "value" : "value"
                }, {
                  "name" : "name",
                  "value" : "value"
                } ]
              } ]
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetCategoriesRequest" : {
        "description" : "Параметры запроса категорий.\n",
        "example" : {
          "language" : "RU"
        },
        "properties" : {
          "language" : {
            "$ref" : "#/components/schemas/LanguageType"
          }
        },
        "type" : "object"
      },
      "GetCategoriesResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/CategoryDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "children" : [ null, null ],
            "name" : "name",
            "id" : 0
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetCategoriesMaxSaleQuantumRequest" : {
        "description" : "Список категорий, для которых нужно вернуть лимит на установку кванта и минимального количества товаров.\n",
        "example" : {
          "marketCategoryIds" : [ 0, 0, 0, 0, 0 ]
        },
        "properties" : {
          "marketCategoryIds" : {
            "description" : "Идентификаторы листовых категории на Маркете — тех, у которых нет дочерних категорий.",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "maxItems" : 1500,
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "marketCategoryIds" ],
        "type" : "object"
      },
      "GetCategoriesMaxSaleQuantumResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "$ref" : "#/components/schemas/GetCategoriesMaxSaleQuantumDTO"
        } ],
        "example" : {
          "results" : [ {
            "maxSaleQuantum" : 6,
            "name" : "name",
            "id" : 0
          }, {
            "maxSaleQuantum" : 6,
            "name" : "name",
            "id" : 0
          } ],
          "errors" : [ {
            "type" : "UNKNOWN_CATEGORY",
            "categoryId" : 1
          }, {
            "type" : "UNKNOWN_CATEGORY",
            "categoryId" : 1
          } ],
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetQualityRatingRequest" : {
        "description" : "Запрос информации по индексу качества.",
        "example" : {
          "dateTo" : "2000-01-23",
          "campaignIds" : [ 0, 0, 0, 0, 0 ],
          "dateFrom" : "2000-01-23"
        },
        "properties" : {
          "dateFrom" : {
            "description" : "Начало периода.\n\nФормат даты: `ГГГГ‑ММ‑ДД`.\n\nНе может быть раньше 30 дней от текущей даты.\n",
            "format" : "date",
            "type" : "string"
          },
          "dateTo" : {
            "description" : "Конец периода.\n\nФормат даты: `ГГГГ‑ММ‑ДД`.\n\nНе может быть позже текущей даты.\n",
            "format" : "date",
            "type" : "string"
          },
          "campaignIds" : {
            "description" : "Список идентификаторов магазинов.",
            "items" : {
              "description" : "Список магазинов, для которых необходимо получить информацию.\n",
              "format" : "int64",
              "type" : "integer"
            },
            "maxItems" : 50,
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "campaignIds" ],
        "type" : "object"
      },
      "GetQualityRatingResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/CampaignsQualityRatingDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Информация об индексе качества магазинов.",
        "example" : {
          "result" : {
            "campaignRatings" : [ {
              "campaignId" : 0,
              "ratings" : [ {
                "components" : [ {
                  "componentType" : "DBS_CANCELLATION_RATE",
                  "value" : 14.658129805029452
                }, {
                  "componentType" : "DBS_CANCELLATION_RATE",
                  "value" : 14.658129805029452
                } ],
                "rating" : 60,
                "calculationDate" : "2000-01-23"
              }, {
                "components" : [ {
                  "componentType" : "DBS_CANCELLATION_RATE",
                  "value" : 14.658129805029452
                }, {
                  "componentType" : "DBS_CANCELLATION_RATE",
                  "value" : 14.658129805029452
                } ],
                "rating" : 60,
                "calculationDate" : "2000-01-23"
              } ]
            }, {
              "campaignId" : 0,
              "ratings" : [ {
                "components" : [ {
                  "componentType" : "DBS_CANCELLATION_RATE",
                  "value" : 14.658129805029452
                }, {
                  "componentType" : "DBS_CANCELLATION_RATE",
                  "value" : 14.658129805029452
                } ],
                "rating" : 60,
                "calculationDate" : "2000-01-23"
              }, {
                "components" : [ {
                  "componentType" : "DBS_CANCELLATION_RATE",
                  "value" : 14.658129805029452
                }, {
                  "componentType" : "DBS_CANCELLATION_RATE",
                  "value" : 14.658129805029452
                } ],
                "rating" : 60,
                "calculationDate" : "2000-01-23"
              } ]
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetQualityRatingDetailsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/QualityRatingDetailsDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "affectedOrders" : [ {
              "componentType" : "DBS_CANCELLATION_RATE",
              "orderId" : 0,
              "description" : "description"
            }, {
              "componentType" : "DBS_CANCELLATION_RATE",
              "orderId" : 0,
              "description" : "description"
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetPromosRequest" : {
        "description" : "Фильтры для получения списка акций.",
        "example" : {
          "participation" : "PARTICIPATING_NOW",
          "mechanics" : "DIRECT_DISCOUNT"
        },
        "properties" : {
          "participation" : {
            "$ref" : "#/components/schemas/PromoParticipationType"
          },
          "mechanics" : {
            "$ref" : "#/components/schemas/MechanicsType"
          }
        },
        "type" : "object"
      },
      "GetPromosResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/GetPromosResultDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "promos" : [ {
              "period" : {
                "dateTimeFrom" : "2000-01-23T04:56:07.000+00:00",
                "dateTimeTo" : "2000-01-23T04:56:07.000+00:00"
              },
              "channels" : [ "{}", "{}" ],
              "mechanicsInfo" : {
                "promocodeInfo" : {
                  "promocode" : "promocode",
                  "discount" : 1
                },
                "type" : "DIRECT_DISCOUNT"
              },
              "bestsellerInfo" : {
                "bestseller" : true,
                "entryDeadline" : "2000-01-23T04:56:07.000+00:00"
              },
              "name" : "name",
              "participating" : true,
              "id" : "id",
              "constraints" : {
                "warehouseIds" : [ 5, 5 ]
              },
              "assortmentInfo" : {
                "activeOffers" : 0,
                "processing" : true,
                "potentialOffers" : 6
              }
            }, {
              "period" : {
                "dateTimeFrom" : "2000-01-23T04:56:07.000+00:00",
                "dateTimeTo" : "2000-01-23T04:56:07.000+00:00"
              },
              "channels" : [ "{}", "{}" ],
              "mechanicsInfo" : {
                "promocodeInfo" : {
                  "promocode" : "promocode",
                  "discount" : 1
                },
                "type" : "DIRECT_DISCOUNT"
              },
              "bestsellerInfo" : {
                "bestseller" : true,
                "entryDeadline" : "2000-01-23T04:56:07.000+00:00"
              },
              "name" : "name",
              "participating" : true,
              "id" : "id",
              "constraints" : {
                "warehouseIds" : [ 5, 5 ]
              },
              "assortmentInfo" : {
                "activeOffers" : 0,
                "processing" : true,
                "potentialOffers" : 6
              }
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "GetPromoOffersRequest" : {
        "description" : "Получение списка товаров, которые участвуют или могут участвовать в акции.",
        "example" : {
          "statusType" : "MANUALLY_ADDED",
          "promoId" : "promoId"
        },
        "properties" : {
          "promoId" : {
            "description" : "Идентификатор акции.",
            "type" : "string"
          },
          "statusType" : {
            "$ref" : "#/components/schemas/PromoOfferParticipationStatusFilterType"
          }
        },
        "required" : [ "promoId" ],
        "type" : "object"
      },
      "GetPromoOffersResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/GetPromoOffersResultDTO"
            }
          },
          "type" : "object"
        } ],
        "example" : {
          "result" : {
            "offers" : [ {
              "offerId" : "offerId",
              "params" : {
                "discountParams" : {
                  "promoPrice" : 6,
                  "maxPromoPrice" : 1,
                  "price" : 0
                },
                "promocodeParams" : {
                  "maxPrice" : 5
                }
              },
              "status" : "AUTO",
              "autoParticipatingDetails" : {
                "campaignIds" : [ 5, 5 ]
              }
            }, {
              "offerId" : "offerId",
              "params" : {
                "discountParams" : {
                  "promoPrice" : 6,
                  "maxPromoPrice" : 1,
                  "price" : 0
                },
                "promocodeParams" : {
                  "maxPrice" : 5
                }
              },
              "status" : "AUTO",
              "autoParticipatingDetails" : {
                "campaignIds" : [ 5, 5 ]
              }
            } ],
            "paging" : {
              "nextPageToken" : "nextPageToken"
            }
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "UpdatePromoOffersRequest" : {
        "description" : "Добавление товаров в акцию или обновление их параметров.\n\nЧтобы добавить товары в акцию или обновить параметры каких-то товаров, передайте их в параметре `offers`.\n",
        "example" : {
          "offers" : [ {
            "offerId" : "offerId",
            "params" : {
              "discountParams" : {
                "promoPrice" : 1,
                "price" : 1
              }
            }
          }, {
            "offerId" : "offerId",
            "params" : {
              "discountParams" : {
                "promoPrice" : 1,
                "price" : 1
              }
            }
          }, {
            "offerId" : "offerId",
            "params" : {
              "discountParams" : {
                "promoPrice" : 1,
                "price" : 1
              }
            }
          }, {
            "offerId" : "offerId",
            "params" : {
              "discountParams" : {
                "promoPrice" : 1,
                "price" : 1
              }
            }
          }, {
            "offerId" : "offerId",
            "params" : {
              "discountParams" : {
                "promoPrice" : 1,
                "price" : 1
              }
            }
          } ],
          "promoId" : "promoId"
        },
        "properties" : {
          "promoId" : {
            "description" : "Идентификатор акции.",
            "type" : "string"
          },
          "offers" : {
            "description" : "Товары, которые необходимо добавить в акцию или цены которых нужно изменить.",
            "items" : {
              "$ref" : "#/components/schemas/UpdatePromoOfferDTO"
            },
            "maxItems" : 500,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "offers", "promoId" ],
        "type" : "object"
      },
      "UpdatePromoOffersResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/UpdatePromoOffersResultDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Результат добавления товаров в акцию.",
        "example" : {
          "result" : {
            "rejectedOffers" : [ {
              "reason" : "OFFER_DOES_NOT_EXIST",
              "offerId" : "offerId"
            }, {
              "reason" : "OFFER_DOES_NOT_EXIST",
              "offerId" : "offerId"
            } ],
            "warningOffers" : [ {
              "warnings" : [ {
                "code" : "DEEP_DISCOUNT_OFFER",
                "campaignIds" : [ 0, 0 ]
              }, {
                "code" : "DEEP_DISCOUNT_OFFER",
                "campaignIds" : [ 0, 0 ]
              } ],
              "offerId" : "offerId"
            }, {
              "warnings" : [ {
                "code" : "DEEP_DISCOUNT_OFFER",
                "campaignIds" : [ 0, 0 ]
              }, {
                "code" : "DEEP_DISCOUNT_OFFER",
                "campaignIds" : [ 0, 0 ]
              } ],
              "offerId" : "offerId"
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "DeletePromoOffersRequest" : {
        "description" : "Удаление товаров из акции.\n\nЧтобы убрать:\n\n* все товары из акции и больше не участвовать в ней, передайте значение `true` в параметре `deleteAllOffers`;\n\n* часть товаров, передайте их идентификаторы в параметре `offersIds`.\n",
        "example" : {
          "deleteAllOffers" : true,
          "promoId" : "promoId",
          "offerIds" : [ null, null, null, null, null ]
        },
        "properties" : {
          "promoId" : {
            "description" : "Идентификатор акции.",
            "type" : "string"
          },
          "deleteAllOffers" : {
            "description" : "Чтобы убрать все товары из акции и больше не участвовать в ней, передайте значение `true` и не передавайте параметр `offerIds`.",
            "type" : "boolean"
          },
          "offerIds" : {
            "description" : "Товары, которые нужно убрать из акции.",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "maxItems" : 500,
            "minItems" : 1,
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "promoId" ],
        "type" : "object"
      },
      "DeletePromoOffersResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/DeletePromoOffersResultDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Результат удаления товаров из акции.",
        "example" : {
          "result" : {
            "rejectedOffers" : [ {
              "reason" : "OFFER_DOES_NOT_EXIST",
              "offerId" : "offerId"
            }, {
              "reason" : "OFFER_DOES_NOT_EXIST",
              "offerId" : "offerId"
            } ]
          },
          "status" : "OK"
        },
        "type" : "object"
      },
      "ApiResponse" : {
        "description" : "Стандартная обертка для ответов сервера.",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/ApiResponseStatusType"
          }
        },
        "type" : "object"
      },
      "GetBusinessSettingsInfoDTO" : {
        "description" : "Информация о кабинете и его настройках.",
        "example" : {
          "settings" : {
            "currency" : "RUR",
            "onlyDefaultPrice" : true
          },
          "info" : {
            "name" : "name",
            "id" : 0
          }
        },
        "properties" : {
          "info" : {
            "$ref" : "#/components/schemas/BusinessDTO"
          },
          "settings" : {
            "$ref" : "#/components/schemas/BusinessSettingsDTO"
          }
        },
        "type" : "object"
      },
      "ApiErrorResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApiResponse"
        }, {
          "properties" : {
            "errors" : {
              "description" : "Список ошибок.",
              "items" : {
                "$ref" : "#/components/schemas/ApiErrorDTO"
              },
              "nullable" : true,
              "type" : "array"
            }
          },
          "type" : "object"
        } ],
        "description" : "Стандартная обертка для ошибок сервера.",
        "type" : "object"
      },
      "CampaignDTO" : {
        "description" : "Информация о магазине.",
        "example" : {
          "clientId" : 6,
          "business" : {
            "name" : "name",
            "id" : 0
          },
          "domain" : "domain",
          "placementType" : "FBS",
          "id" : 0
        },
        "properties" : {
          "domain" : {
            "description" : "URL магазина.",
            "type" : "string"
          },
          "id" : {
            "description" : "Идентификатор кампании.",
            "format" : "int64",
            "type" : "integer"
          },
          "clientId" : {
            "description" : "Идентификатор плательщика в Яндекс Балансе.",
            "format" : "int64",
            "type" : "integer"
          },
          "business" : {
            "$ref" : "#/components/schemas/BusinessDTO"
          },
          "placementType" : {
            "$ref" : "#/components/schemas/PlacementType"
          }
        },
        "type" : "object"
      },
      "FlippingPagerDTO" : {
        "description" : "Модель для пагинации.",
        "example" : {
          "total" : 1,
          "pagesCount" : 7,
          "pageSize" : 9,
          "from" : 5,
          "to" : 5,
          "currentPage" : 2
        },
        "properties" : {
          "total" : {
            "description" : "Сколько всего найдено элементов.",
            "format" : "int32",
            "type" : "integer"
          },
          "from" : {
            "description" : "Начальный номер найденного элемента на странице.",
            "format" : "int32",
            "type" : "integer"
          },
          "to" : {
            "description" : "Конечный номер найденного элемента на странице.",
            "format" : "int32",
            "type" : "integer"
          },
          "currentPage" : {
            "description" : "Текущая страница.",
            "format" : "int32",
            "type" : "integer"
          },
          "pagesCount" : {
            "description" : "Общее количество страниц.",
            "format" : "int32",
            "type" : "integer"
          },
          "pageSize" : {
            "description" : "Размер страницы.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "CampaignSettingsDTO" : {
        "description" : "Настройки магазина.",
        "example" : {
          "showInPremium" : true,
          "showInContext" : true,
          "localRegion" : {
            "delivery" : {
              "schedule" : {
                "customWorkingDays" : [ "23-09-2022", "23-09-2022" ],
                "period" : {
                  "fromDate" : "23-09-2022",
                  "toDate" : "23-09-2022"
                },
                "customHolidays" : [ "23-09-2022", "23-09-2022" ],
                "weeklyHolidays" : [ 1, 1 ],
                "availableOnHolidays" : true,
                "totalHolidays" : [ "23-09-2022", "23-09-2022" ]
              }
            },
            "name" : "name",
            "id" : 6,
            "type" : "OTHER",
            "deliveryOptionsSource" : "WEB"
          },
          "countryRegion" : 0,
          "shopName" : "shopName",
          "useOpenStat" : true
        },
        "properties" : {
          "countryRegion" : {
            "description" : "Идентификатор региона, в котором находится магазин.",
            "format" : "int64",
            "type" : "integer"
          },
          "shopName" : {
            "description" : "Наименование магазина на Яндекс Маркете.\nЕсли наименование отсутствует, значение параметра выводится — `null`.\n",
            "type" : "string"
          },
          "showInContext" : {
            "description" : "Признак размещения магазина на сайтах партнеров Яндекс Дистрибуции.\nВозможные значения:\n* `false` — магазин не размещен на сайтах партнеров Яндекс Дистрибуции.\n* `true` — магазин размещен на сайтах партнеров Яндекс Дистрибуции.\n",
            "type" : "boolean"
          },
          "showInPremium" : {
            "description" : "Признак показа предложений магазина в рекламном блоке над результатами поиска (cпецразмещение).\nВозможные значения:\n* `false` — предложения не показываются в блоке cпецразмещения.\n* `true` — предложения показываются в блоке cпецразмещения.\n",
            "type" : "boolean"
          },
          "useOpenStat" : {
            "description" : "Признак использования внешней интернет-статистики.\nВозможные значения:\n* `false` — внешняя интернет-статистика не используется.\n* `true` — внешняя интернет-статистика используется.\n",
            "type" : "boolean"
          },
          "localRegion" : {
            "$ref" : "#/components/schemas/CampaignSettingsLocalRegionDTO"
          }
        },
        "type" : "object"
      },
      "RegionDTO" : {
        "description" : "Регион доставки.",
        "example" : {
          "parent" : null,
          "children" : [ null, null ],
          "name" : "name",
          "id" : 0,
          "type" : "OTHER"
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор региона.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Название региона.",
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/RegionType"
          },
          "parent" : {
            "$ref" : "#/components/schemas/RegionDTO"
          },
          "children" : {
            "description" : "Дочерние регионы.",
            "items" : {
              "$ref" : "#/components/schemas/RegionDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "name", "type" ],
        "type" : "object"
      },
      "OrderDTO" : {
        "description" : "Заказ.",
        "example" : {
          "delivery" : {
            "dispatchType" : "UNKNOWN",
            "address" : {
              "country" : "country",
              "city" : "city",
              "postcode" : "postcode",
              "gps" : {
                "latitude" : 9.965781217890562,
                "longitude" : 9.369310271410669
              },
              "house" : "house",
              "subway" : "subway",
              "phone" : "phone",
              "street" : "street",
              "district" : "district",
              "recipient" : "recipient",
              "entryphone" : "entryphone",
              "block" : "block",
              "entrance" : "entrance",
              "floor" : "floor",
              "apartment" : "apartment"
            },
            "liftType" : "NOT_NEEDED",
            "deliveryServiceId" : 6,
            "vat" : null,
            "estimated" : true,
            "dates" : {
              "fromDate" : "23-09-2022",
              "toDate" : "23-09-2022",
              "fromTime" : "fromTime",
              "toTime" : "toTime",
              "realDeliveryDate" : "23-09-2022"
            },
            "type" : "DELIVERY",
            "serviceName" : "serviceName",
            "shipments" : [ {
              "boxes" : [ {
                "fulfilmentId" : "fulfilmentId",
                "id" : 3
              }, {
                "fulfilmentId" : "fulfilmentId",
                "id" : 3
              } ],
              "id" : 6,
              "shipmentDate" : "23-09-2022",
              "shipmentTime" : "shipmentTime",
              "tracks" : [ {
                "trackCode" : "trackCode",
                "deliveryServiceId" : 9
              }, {
                "trackCode" : "trackCode",
                "deliveryServiceId" : 9
              } ]
            }, {
              "boxes" : [ {
                "fulfilmentId" : "fulfilmentId",
                "id" : 3
              }, {
                "fulfilmentId" : "fulfilmentId",
                "id" : 3
              } ],
              "id" : 6,
              "shipmentDate" : "23-09-2022",
              "shipmentTime" : "shipmentTime",
              "tracks" : [ {
                "trackCode" : "trackCode",
                "deliveryServiceId" : 9
              }, {
                "trackCode" : "trackCode",
                "deliveryServiceId" : 9
              } ]
            } ],
            "tracks" : [ {
              "trackCode" : "trackCode",
              "deliveryServiceId" : 9
            }, {
              "trackCode" : "trackCode",
              "deliveryServiceId" : 9
            } ],
            "courier" : {
              "vehicleDescription" : "vehicleDescription",
              "phone" : "phone",
              "phoneExtension" : "phoneExtension",
              "fullName" : "fullName",
              "vehicleNumber" : "vehicleNumber"
            },
            "price" : 5.025004791520295,
            "outletStorageLimitDate" : "23-09-2022",
            "eacType" : "MERCHANT_TO_COURIER",
            "liftPrice" : 8.762042012749001,
            "eacCode" : "eacCode",
            "id" : "id",
            "region" : {
              "parent" : null,
              "children" : [ null, null ],
              "name" : "name",
              "id" : 0,
              "type" : "OTHER"
            },
            "deliveryPartnerType" : "SHOP",
            "outletCode" : "outletCode"
          },
          "notes" : "notes",
          "substatus" : "RESERVATION_EXPIRED",
          "deliveryTotal" : 1.4658129805029452,
          "buyerItemsTotalBeforeDiscount" : 2.3021358869347655,
          "creationDate" : "23-09-2022 09:12:41",
          "buyerItemsTotal" : 5.962133916683182,
          "paymentType" : "PREPAID",
          "buyer" : {
            "lastName" : "lastName",
            "firstName" : "firstName",
            "middleName" : "middleName",
            "id" : "id",
            "type" : "PERSON"
          },
          "expiryDate" : "23-09-2022 09:12:41",
          "buyerTotalBeforeDiscount" : 7.061401241503109,
          "itemsTotal" : 6.027456183070403,
          "buyerTotal" : 5.637376656633329,
          "subsidies" : [ {
            "amount" : 4.965218492984954,
            "type" : "YANDEX_CASHBACK"
          }, {
            "amount" : 4.965218492984954,
            "type" : "YANDEX_CASHBACK"
          } ],
          "paymentMethod" : "CASH_ON_DELIVERY",
          "currency" : "RUR",
          "fake" : true,
          "id" : 0,
          "taxSystem" : "OSN",
          "cancelRequested" : true,
          "items" : [ {
            "offerName" : "offerName",
            "subsidy" : 1.0246457001441578,
            "instances" : [ {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "cisFull" : "cisFull",
              "uin" : "uin",
              "cis" : "cis"
            }, {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "cisFull" : "cisFull",
              "uin" : "uin",
              "cis" : "cis"
            } ],
            "priceBeforeDiscount" : 7.386281948385884,
            "count" : 1,
            "vat" : "NO_VAT",
            "requiredInstanceTypes" : [ "CIS", "CIS" ],
            "buyerPriceBeforeDiscount" : 4.145608029883936,
            "shopSku" : "shopSku",
            "price" : 3.616076749251911,
            "partnerWarehouseId" : "partnerWarehouseId",
            "subsidies" : [ {
              "amount" : 1.1730742509559433,
              "type" : "YANDEX_CASHBACK"
            }, {
              "amount" : 1.1730742509559433,
              "type" : "YANDEX_CASHBACK"
            } ],
            "offerId" : "offerId",
            "buyerPrice" : 2.027123023002322,
            "details" : [ {
              "updateDate" : "23-09-2022",
              "itemStatus" : "REJECTED",
              "itemCount" : 7
            }, {
              "updateDate" : "23-09-2022",
              "itemStatus" : "REJECTED",
              "itemCount" : 7
            } ],
            "id" : 9,
            "promos" : [ {
              "subsidy" : 6.84685269835264,
              "shopPromoId" : "shopPromoId",
              "discount" : 1.4894159098541704,
              "marketPromoId" : "marketPromoId",
              "type" : "DIRECT_DISCOUNT"
            }, {
              "subsidy" : 6.84685269835264,
              "shopPromoId" : "shopPromoId",
              "discount" : 1.4894159098541704,
              "marketPromoId" : "marketPromoId",
              "type" : "DIRECT_DISCOUNT"
            } ]
          }, {
            "offerName" : "offerName",
            "subsidy" : 1.0246457001441578,
            "instances" : [ {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "cisFull" : "cisFull",
              "uin" : "uin",
              "cis" : "cis"
            }, {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "cisFull" : "cisFull",
              "uin" : "uin",
              "cis" : "cis"
            } ],
            "priceBeforeDiscount" : 7.386281948385884,
            "count" : 1,
            "vat" : "NO_VAT",
            "requiredInstanceTypes" : [ "CIS", "CIS" ],
            "buyerPriceBeforeDiscount" : 4.145608029883936,
            "shopSku" : "shopSku",
            "price" : 3.616076749251911,
            "partnerWarehouseId" : "partnerWarehouseId",
            "subsidies" : [ {
              "amount" : 1.1730742509559433,
              "type" : "YANDEX_CASHBACK"
            }, {
              "amount" : 1.1730742509559433,
              "type" : "YANDEX_CASHBACK"
            } ],
            "offerId" : "offerId",
            "buyerPrice" : 2.027123023002322,
            "details" : [ {
              "updateDate" : "23-09-2022",
              "itemStatus" : "REJECTED",
              "itemCount" : 7
            }, {
              "updateDate" : "23-09-2022",
              "itemStatus" : "REJECTED",
              "itemCount" : 7
            } ],
            "id" : 9,
            "promos" : [ {
              "subsidy" : 6.84685269835264,
              "shopPromoId" : "shopPromoId",
              "discount" : 1.4894159098541704,
              "marketPromoId" : "marketPromoId",
              "type" : "DIRECT_DISCOUNT"
            }, {
              "subsidy" : 6.84685269835264,
              "shopPromoId" : "shopPromoId",
              "discount" : 1.4894159098541704,
              "marketPromoId" : "marketPromoId",
              "type" : "DIRECT_DISCOUNT"
            } ]
          } ],
          "status" : "PLACING",
          "updatedAt" : "23-09-2022 09:12:41"
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор заказа.",
            "format" : "int64",
            "type" : "integer"
          },
          "status" : {
            "$ref" : "#/components/schemas/OrderStatusType"
          },
          "substatus" : {
            "$ref" : "#/components/schemas/OrderSubstatusType"
          },
          "creationDate" : {
            "example" : "23-09-2022 09:12:41",
            "format" : "date-dd-MM-yyyy-HH-mm-ss",
            "type" : "string"
          },
          "updatedAt" : {
            "example" : "23-09-2022 09:12:41",
            "format" : "date-dd-MM-yyyy-HH-mm-ss",
            "type" : "string"
          },
          "currency" : {
            "$ref" : "#/components/schemas/CurrencyType"
          },
          "itemsTotal" : {
            "description" : "Платеж покупателя.\n",
            "format" : "decimal",
            "type" : "number"
          },
          "deliveryTotal" : {
            "description" : "Стоимость доставки.\n",
            "format" : "decimal",
            "type" : "number"
          },
          "buyerItemsTotal" : {
            "deprecated" : true,
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел.\n\n{% endnote %}\n\nСтоимость всех товаров в заказе в валюте покупателя после применения скидок и без учета стоимости доставки.\n",
            "format" : "decimal",
            "type" : "number"
          },
          "buyerTotal" : {
            "deprecated" : true,
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел.\n\n{% endnote %}\n\nСтоимость всех товаров в заказе в валюте покупателя после применения скидок и с учетом стоимости доставки.\n",
            "format" : "decimal",
            "type" : "number"
          },
          "buyerItemsTotalBeforeDiscount" : {
            "description" : "Стоимость всех товаров в заказе в валюте покупателя без учета стоимости доставки и до применения скидок по:\n\n* акциям;\n* купонам;\n* промокодам.\n",
            "format" : "decimal",
            "type" : "number"
          },
          "buyerTotalBeforeDiscount" : {
            "deprecated" : true,
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел.\n\n{% endnote %}\n\nСтоимость всех товаров в заказе в валюте покупателя до применения скидок и с учетом стоимости доставки (`buyerItemsTotalBeforeDiscount` + стоимость доставки).\n",
            "format" : "decimal",
            "type" : "number"
          },
          "paymentType" : {
            "$ref" : "#/components/schemas/OrderPaymentType"
          },
          "paymentMethod" : {
            "$ref" : "#/components/schemas/OrderPaymentMethodType"
          },
          "fake" : {
            "description" : "Тип заказа:\n\n* `false` — настоящий заказ покупателя.\n\n* `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета.\n",
            "type" : "boolean"
          },
          "items" : {
            "description" : "Список товаров в заказе.",
            "items" : {
              "$ref" : "#/components/schemas/OrderItemDTO"
            },
            "type" : "array"
          },
          "subsidies" : {
            "description" : "Список субсидий по типам.",
            "items" : {
              "$ref" : "#/components/schemas/OrderSubsidyDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "delivery" : {
            "$ref" : "#/components/schemas/OrderDeliveryDTO"
          },
          "buyer" : {
            "$ref" : "#/components/schemas/OrderBuyerDTO"
          },
          "notes" : {
            "description" : "Комментарий к заказу.",
            "type" : "string"
          },
          "taxSystem" : {
            "$ref" : "#/components/schemas/OrderTaxSystemType"
          },
          "cancelRequested" : {
            "description" : "**Только для модели DBS**\n\nЗапрошена ли отмена.\n",
            "type" : "boolean"
          },
          "expiryDate" : {
            "example" : "23-09-2022 09:12:41",
            "format" : "date-dd-MM-yyyy-HH-mm-ss",
            "type" : "string"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "ForwardScrollingPagerDTO" : {
        "description" : "Ссылка на следующую страницу.\n",
        "example" : {
          "nextPageToken" : "nextPageToken"
        },
        "properties" : {
          "nextPageToken" : {
            "description" : "Идентификатор следующей страницы результатов.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "OrderItemInstanceModificationDTO" : {
        "description" : "Позиция в корзине, требующая маркировки.",
        "example" : {
          "instances" : [ {
            "rnpt" : "rnpt",
            "gtd" : "gtd",
            "uin" : "uin",
            "cis" : "cis"
          }, {
            "rnpt" : "rnpt",
            "gtd" : "gtd",
            "uin" : "uin",
            "cis" : "cis"
          } ],
          "id" : 0
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор товара в заказе.\n\nОн приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "instances" : {
            "description" : "Список кодов маркировки единиц товара.\n",
            "items" : {
              "$ref" : "#/components/schemas/BriefOrderItemInstanceDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "id", "instances" ],
        "type" : "object"
      },
      "OrderItemsModificationResultDTO" : {
        "description" : "Краткие сведения о промаркированных товарах. Параметр возвращается, если ответ `OK`.\n",
        "example" : {
          "items" : [ {
            "offerName" : "offerName",
            "instances" : [ {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "cisFull" : "cisFull",
              "uin" : "uin",
              "cis" : "cis"
            }, {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "cisFull" : "cisFull",
              "uin" : "uin",
              "cis" : "cis"
            } ],
            "price" : 1.4658129805029452,
            "vat" : "NO_VAT",
            "count" : 6,
            "offerId" : "offerId",
            "id" : 0
          }, {
            "offerName" : "offerName",
            "instances" : [ {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "cisFull" : "cisFull",
              "uin" : "uin",
              "cis" : "cis"
            }, {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "cisFull" : "cisFull",
              "uin" : "uin",
              "cis" : "cis"
            } ],
            "price" : 1.4658129805029452,
            "vat" : "NO_VAT",
            "count" : 6,
            "offerId" : "offerId",
            "id" : 0
          } ]
        },
        "properties" : {
          "items" : {
            "description" : "Список позиций в заказе, подлежащих маркировке.",
            "items" : {
              "$ref" : "#/components/schemas/BriefOrderItemDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "OrderItemModificationDTO" : {
        "description" : "Список товаров в заказе.\n\nЕсли магазин не передал информацию о товаре во входных данных, он будет удален из заказа.\n\nОбязательный параметр.\n",
        "example" : {
          "instances" : [ {
            "rnpt" : "rnpt",
            "gtd" : "gtd",
            "uin" : "uin",
            "cis" : "cis"
          }, {
            "rnpt" : "rnpt",
            "gtd" : "gtd",
            "uin" : "uin",
            "cis" : "cis"
          } ],
          "count" : 0,
          "id" : 0
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор товара в рамках заказа.\n\nПолучить идентификатор можно с помощью ресурсов [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).\n\nОбязательный параметр.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "count" : {
            "description" : "Новое количество товара.",
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "instances" : {
            "description" : "Информация о маркировке единиц товара.\n\nПередавайте в запросе все единицы товара, который подлежит маркировке.\n\nОбязательный параметр, если в заказе есть товары, подлежащие маркировке [в системе «Честный ЗНАК»](https://честныйзнак.рф/).\n",
            "items" : {
              "$ref" : "#/components/schemas/BriefOrderItemInstanceDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "count", "id" ],
        "type" : "object"
      },
      "OrderItemsModificationRequestReasonType" : {
        "description" : "Причина обновления состава заказа.",
        "enum" : [ "PARTNER_REQUESTED_REMOVE", "USER_REQUESTED_REMOVE" ],
        "type" : "string"
      },
      "OrderStatusChangeDTO" : {
        "description" : "Заказ.",
        "example" : {
          "delivery" : {
            "dates" : {
              "realDeliveryDate" : "2000-01-23"
            }
          },
          "substatus" : "RESERVATION_EXPIRED",
          "status" : "PLACING"
        },
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/OrderStatusType"
          },
          "substatus" : {
            "$ref" : "#/components/schemas/OrderSubstatusType"
          },
          "delivery" : {
            "$ref" : "#/components/schemas/OrderStatusChangeDeliveryDTO"
          }
        },
        "required" : [ "status" ],
        "type" : "object"
      },
      "OrderStateDTO" : {
        "description" : "Информация по заказу.",
        "example" : {
          "substatus" : "RESERVATION_EXPIRED",
          "id" : 0,
          "status" : "PLACING"
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор заказа.",
            "format" : "int64",
            "type" : "integer"
          },
          "status" : {
            "$ref" : "#/components/schemas/OrderStatusType"
          },
          "substatus" : {
            "$ref" : "#/components/schemas/OrderSubstatusType"
          }
        },
        "required" : [ "id", "status" ],
        "type" : "object"
      },
      "UpdateOrderStatusesDTO" : {
        "description" : "Список заказов, статус которых обновился.",
        "example" : {
          "orders" : [ {
            "substatus" : "RESERVATION_EXPIRED",
            "updateStatus" : "OK",
            "id" : 0,
            "status" : "PLACING",
            "errorDetails" : "errorDetails"
          }, {
            "substatus" : "RESERVATION_EXPIRED",
            "updateStatus" : "OK",
            "id" : 0,
            "status" : "PLACING",
            "errorDetails" : "errorDetails"
          } ]
        },
        "properties" : {
          "orders" : {
            "description" : "Список с обновленными заказами.",
            "items" : {
              "$ref" : "#/components/schemas/UpdateOrderStatusDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "orders" ],
        "type" : "object"
      },
      "ParcelDTO" : {
        "description" : "Информация о грузовых местах в заказе.",
        "properties" : {
          "boxes" : {
            "description" : "Список грузовых мест. Маркет определяет количество мест по длине этого списка.",
            "items" : {
              "$ref" : "#/components/schemas/ParcelBoxDTO"
            },
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "boxes" ],
        "type" : "object"
      },
      "ShipmentBoxesDTO" : {
        "description" : "В ответе Маркет возвращает переданный вами список грузовых мест. Не обращайте на это поле внимания.\n",
        "example" : {
          "boxes" : [ {
            "fulfilmentId" : "fulfilmentId",
            "id" : 0
          }, {
            "fulfilmentId" : "fulfilmentId",
            "id" : 0
          } ]
        },
        "properties" : {
          "boxes" : {
            "description" : "Список грузовых мест. Маркет определил количество мест по длине этого списка.\n",
            "items" : {
              "$ref" : "#/components/schemas/ParcelBoxDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "boxes" ],
        "type" : "object"
      },
      "OrderCancellationReasonType" : {
        "description" : "Варианты причин, по которым заказ не может быть отменен.\n\n* `ORDER_DELIVERED` — заказ уже доставлен.\n* `ORDER_IN_DELIVERY` — заказ уже у курьера.\n",
        "enum" : [ "ORDER_DELIVERED", "ORDER_IN_DELIVERY" ],
        "type" : "string"
      },
      "OrderDigitalItemDTO" : {
        "description" : "Ключ цифрового товара.",
        "example" : {
          "activate_till" : "2000-01-23",
          "code" : "code",
          "slip" : "slip",
          "id" : 0
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор товара в заказе.\n\nОн приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "code" : {
            "description" : "Сам ключ.",
            "type" : "string"
          },
          "slip" : {
            "description" : "Инструкция по активации.",
            "type" : "string"
          },
          "activate_till" : {
            "description" : "Дата, до которой нужно активировать ключ. Если ключ действует бессрочно, укажите любую дату в отдаленном будущем.\n\nФормат даты: `ГГГГ-ММ-ДД`.\n",
            "format" : "date",
            "type" : "string"
          }
        },
        "required" : [ "activate_till", "code", "id", "slip" ],
        "type" : "object"
      },
      "OrderBoxLayoutDTO" : {
        "description" : "Информация о коробке.",
        "example" : {
          "items" : [ {
            "partialCount" : {
              "current" : 1,
              "total" : 2
            },
            "instances" : [ {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "uin" : "uin",
              "cis" : "cis"
            }, {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "uin" : "uin",
              "cis" : "cis"
            } ],
            "id" : 0,
            "fullCount" : 1
          }, {
            "partialCount" : {
              "current" : 1,
              "total" : 2
            },
            "instances" : [ {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "uin" : "uin",
              "cis" : "cis"
            }, {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "uin" : "uin",
              "cis" : "cis"
            } ],
            "id" : 0,
            "fullCount" : 1
          } ]
        },
        "properties" : {
          "items" : {
            "description" : "Список товаров в коробке.\n\nЕсли в коробке едет часть большого товара, в списке может быть только один пункт.\n",
            "items" : {
              "$ref" : "#/components/schemas/OrderBoxLayoutItemDTO"
            },
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "OrderBoxesLayoutDTO" : {
        "description" : "Распределение товаров по коробкам.",
        "example" : {
          "boxes" : [ {
            "items" : [ {
              "partialCount" : {
                "current" : 1,
                "total" : 2
              },
              "instances" : [ {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "uin" : "uin",
                "cis" : "cis"
              }, {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "uin" : "uin",
                "cis" : "cis"
              } ],
              "id" : 0,
              "fullCount" : 1
            }, {
              "partialCount" : {
                "current" : 1,
                "total" : 2
              },
              "instances" : [ {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "uin" : "uin",
                "cis" : "cis"
              }, {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "uin" : "uin",
                "cis" : "cis"
              } ],
              "id" : 0,
              "fullCount" : 1
            } ],
            "boxId" : 5
          }, {
            "items" : [ {
              "partialCount" : {
                "current" : 1,
                "total" : 2
              },
              "instances" : [ {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "uin" : "uin",
                "cis" : "cis"
              }, {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "uin" : "uin",
                "cis" : "cis"
              } ],
              "id" : 0,
              "fullCount" : 1
            }, {
              "partialCount" : {
                "current" : 1,
                "total" : 2
              },
              "instances" : [ {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "uin" : "uin",
                "cis" : "cis"
              }, {
                "rnpt" : "rnpt",
                "gtd" : "gtd",
                "uin" : "uin",
                "cis" : "cis"
              } ],
              "id" : 0,
              "fullCount" : 1
            } ],
            "boxId" : 5
          } ]
        },
        "properties" : {
          "boxes" : {
            "description" : "Список коробок.",
            "items" : {
              "$ref" : "#/components/schemas/EnrichedOrderBoxLayoutDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "boxes" ],
        "type" : "object"
      },
      "OrderDeliveryDateDTO" : {
        "description" : "Информация о новой дате доставки заказа.",
        "example" : {
          "toDate" : "2000-01-23"
        },
        "properties" : {
          "toDate" : {
            "description" : "Новая дата доставки заказа.\n\nФормат даты: `ГГГГ-ММ-ДД`.\n",
            "format" : "date",
            "type" : "string"
          }
        },
        "required" : [ "toDate" ],
        "type" : "object"
      },
      "OrderDeliveryDateReasonType" : {
        "description" : "Причина переноса доставки заказа. Возможные причины изменения даты:\n  - ```USER_MOVED_DELIVERY_DATES``` — покупатель попросил изменить дату или вы договорились привезти ему заказ раньше изначальной даты. Кроме этого указывается для подтверждения даты доставки товаров на заказ с долгой (31-60 дней) доставкой.\n  - ```PARTNER_MOVED_DELIVERY_DATES``` — магазин не может доставить заказ в срок.\n",
        "enum" : [ "USER_MOVED_DELIVERY_DATES", "PARTNER_MOVED_DELIVERY_DATES" ],
        "type" : "string"
      },
      "OrderBuyerInfoDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/OrderBuyerBasicInfoDTO"
        }, {
          "properties" : {
            "phone" : {
              "description" : "Подменный номер телефона покупателя. Подробнее о таких номерах читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/orders/dbs/call#fake-number).\n\nФормат номера: `+<код_страны><код_региона><номер_телефона>`.\n",
              "type" : "string"
            }
          },
          "type" : "object"
        } ],
        "description" : "Информация о покупателе и его номере телефона.",
        "example" : {
          "lastName" : "lastName",
          "firstName" : "firstName",
          "phone" : "phone",
          "middleName" : "middleName",
          "id" : "id",
          "type" : "PERSON"
        },
        "type" : "object"
      },
      "EacVerificationResultDTO" : {
        "description" : "Результат выполнения запроса.",
        "example" : {
          "verificationResult" : "ACCEPTED",
          "attemptsLeft" : 0
        },
        "properties" : {
          "verificationResult" : {
            "$ref" : "#/components/schemas/EacVerificationStatusType"
          },
          "attemptsLeft" : {
            "description" : "Количество оставшихся попыток проверки кода.\n\nВозвращается, если магазин отправил некорректный код.\n\nКогда все попытки будут исчерпаны, код обновится.\n",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "OrderLabelDTO" : {
        "description" : "Данные для печати ярлыка.",
        "example" : {
          "parcelBoxLabels" : [ {
            "supplierName" : "supplierName",
            "deliveryServiceId" : "deliveryServiceId",
            "orderId" : 1,
            "fulfilmentId" : "fulfilmentId",
            "orderNum" : "orderNum",
            "weight" : "weight",
            "url" : "url",
            "deliveryServiceName" : "deliveryServiceName",
            "deliveryAddress" : "deliveryAddress",
            "recipientName" : "recipientName",
            "place" : "place",
            "shipmentDate" : "shipmentDate",
            "boxId" : 5
          }, {
            "supplierName" : "supplierName",
            "deliveryServiceId" : "deliveryServiceId",
            "orderId" : 1,
            "fulfilmentId" : "fulfilmentId",
            "orderNum" : "orderNum",
            "weight" : "weight",
            "url" : "url",
            "deliveryServiceName" : "deliveryServiceName",
            "deliveryAddress" : "deliveryAddress",
            "recipientName" : "recipientName",
            "place" : "place",
            "shipmentDate" : "shipmentDate",
            "boxId" : 5
          } ],
          "orderId" : 0,
          "placesNumber" : 6,
          "url" : "url"
        },
        "properties" : {
          "orderId" : {
            "description" : "Идентификатор заказа.",
            "format" : "int64",
            "type" : "integer"
          },
          "placesNumber" : {
            "description" : "Количество коробок в заказе.",
            "format" : "int32",
            "type" : "integer"
          },
          "url" : {
            "description" : "URL файла с ярлыками‑наклейками на все коробки в заказе.\n\nСоответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/labels](../../reference/orders/generateOrderLabels.md).\n",
            "type" : "string"
          },
          "parcelBoxLabels" : {
            "description" : "Информация на ярлыке.",
            "items" : {
              "$ref" : "#/components/schemas/ParcelBoxLabelDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "orderId", "parcelBoxLabels", "placesNumber", "url" ],
        "type" : "object"
      },
      "OrderBusinessBuyerDTO" : {
        "description" : "Информация о покупателе.\n",
        "example" : {
          "organizationName" : "organizationName",
          "organizationJurAddress" : "organizationJurAddress",
          "inn" : "inn",
          "kpp" : "kpp"
        },
        "properties" : {
          "inn" : {
            "description" : "ИНН.",
            "type" : "string"
          },
          "kpp" : {
            "description" : "КПП.",
            "type" : "string"
          },
          "organizationName" : {
            "description" : "Наименование юридического лица.",
            "type" : "string"
          },
          "organizationJurAddress" : {
            "description" : "Юридический адрес.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "OrderBusinessDocumentsDTO" : {
        "description" : "Информация о документах.\n",
        "example" : {
          "sf" : {
            "date" : "2000-01-23",
            "number" : "number",
            "status" : "READY"
          },
          "torgTwelve" : {
            "date" : "2000-01-23",
            "number" : "number",
            "status" : "READY"
          },
          "upd" : {
            "date" : "2000-01-23",
            "number" : "number",
            "status" : "READY"
          },
          "ukd" : {
            "date" : "2000-01-23",
            "number" : "number",
            "status" : "READY"
          },
          "ksf" : {
            "date" : "2000-01-23",
            "number" : "number",
            "status" : "READY"
          }
        },
        "properties" : {
          "upd" : {
            "$ref" : "#/components/schemas/DocumentDTO"
          },
          "ukd" : {
            "$ref" : "#/components/schemas/DocumentDTO"
          },
          "torgTwelve" : {
            "$ref" : "#/components/schemas/DocumentDTO"
          },
          "sf" : {
            "$ref" : "#/components/schemas/DocumentDTO"
          },
          "ksf" : {
            "$ref" : "#/components/schemas/DocumentDTO"
          }
        },
        "type" : "object"
      },
      "PagedReturnsDTO" : {
        "description" : "Возвраты.",
        "example" : {
          "paging" : {
            "nextPageToken" : "nextPageToken"
          },
          "returns" : [ {
            "updateDate" : "2000-01-23T04:56:07.000+00:00",
            "fastReturn" : true,
            "orderId" : 6,
            "shipmentRecipientType" : "SHOP",
            "refundStatus" : "STARTED_BY_USER",
            "logisticPickupPoint" : {
              "logisticPartnerId" : 5,
              "address" : {
                "country" : "Россия",
                "city" : "Москва",
                "street" : "Стрелецкая улица",
                "postcode" : "123518",
                "house" : "9к2"
              },
              "instruction" : "instruction",
              "name" : "name",
              "id" : 1,
              "type" : "WAREHOUSE"
            },
            "id" : 0,
            "creationDate" : "2000-01-23T04:56:07.000+00:00",
            "items" : [ {
              "shopSku" : "shopSku",
              "instances" : [ {
                "stockType" : "FIT",
                "imei" : "imei",
                "cis" : "cis",
                "status" : "CREATED"
              }, {
                "stockType" : "FIT",
                "imei" : "imei",
                "cis" : "cis",
                "status" : "CREATED"
              } ],
              "marketSku" : 2,
              "count" : 7,
              "decisions" : [ {
                "images" : [ "images", "images" ],
                "returnItemId" : 9,
                "subreasonType" : "USER_DID_NOT_LIKE",
                "count" : 3,
                "comment" : "comment",
                "decisionType" : "REFUND_MONEY",
                "reasonType" : "BAD_QUALITY",
                "partnerCompensation" : 4,
                "refundAmount" : 2
              }, {
                "images" : [ "images", "images" ],
                "returnItemId" : 9,
                "subreasonType" : "USER_DID_NOT_LIKE",
                "count" : 3,
                "comment" : "comment",
                "decisionType" : "REFUND_MONEY",
                "reasonType" : "BAD_QUALITY",
                "partnerCompensation" : 4,
                "refundAmount" : 2
              } ],
              "tracks" : [ {
                "trackCode" : "trackCode"
              }, {
                "trackCode" : "trackCode"
              } ]
            }, {
              "shopSku" : "shopSku",
              "instances" : [ {
                "stockType" : "FIT",
                "imei" : "imei",
                "cis" : "cis",
                "status" : "CREATED"
              }, {
                "stockType" : "FIT",
                "imei" : "imei",
                "cis" : "cis",
                "status" : "CREATED"
              } ],
              "marketSku" : 2,
              "count" : 7,
              "decisions" : [ {
                "images" : [ "images", "images" ],
                "returnItemId" : 9,
                "subreasonType" : "USER_DID_NOT_LIKE",
                "count" : 3,
                "comment" : "comment",
                "decisionType" : "REFUND_MONEY",
                "reasonType" : "BAD_QUALITY",
                "partnerCompensation" : 4,
                "refundAmount" : 2
              }, {
                "images" : [ "images", "images" ],
                "returnItemId" : 9,
                "subreasonType" : "USER_DID_NOT_LIKE",
                "count" : 3,
                "comment" : "comment",
                "decisionType" : "REFUND_MONEY",
                "reasonType" : "BAD_QUALITY",
                "partnerCompensation" : 4,
                "refundAmount" : 2
              } ],
              "tracks" : [ {
                "trackCode" : "trackCode"
              }, {
                "trackCode" : "trackCode"
              } ]
            } ],
            "returnType" : "UNREDEEMED",
            "shipmentStatus" : "CREATED",
            "refundAmount" : 5
          }, {
            "updateDate" : "2000-01-23T04:56:07.000+00:00",
            "fastReturn" : true,
            "orderId" : 6,
            "shipmentRecipientType" : "SHOP",
            "refundStatus" : "STARTED_BY_USER",
            "logisticPickupPoint" : {
              "logisticPartnerId" : 5,
              "address" : {
                "country" : "Россия",
                "city" : "Москва",
                "street" : "Стрелецкая улица",
                "postcode" : "123518",
                "house" : "9к2"
              },
              "instruction" : "instruction",
              "name" : "name",
              "id" : 1,
              "type" : "WAREHOUSE"
            },
            "id" : 0,
            "creationDate" : "2000-01-23T04:56:07.000+00:00",
            "items" : [ {
              "shopSku" : "shopSku",
              "instances" : [ {
                "stockType" : "FIT",
                "imei" : "imei",
                "cis" : "cis",
                "status" : "CREATED"
              }, {
                "stockType" : "FIT",
                "imei" : "imei",
                "cis" : "cis",
                "status" : "CREATED"
              } ],
              "marketSku" : 2,
              "count" : 7,
              "decisions" : [ {
                "images" : [ "images", "images" ],
                "returnItemId" : 9,
                "subreasonType" : "USER_DID_NOT_LIKE",
                "count" : 3,
                "comment" : "comment",
                "decisionType" : "REFUND_MONEY",
                "reasonType" : "BAD_QUALITY",
                "partnerCompensation" : 4,
                "refundAmount" : 2
              }, {
                "images" : [ "images", "images" ],
                "returnItemId" : 9,
                "subreasonType" : "USER_DID_NOT_LIKE",
                "count" : 3,
                "comment" : "comment",
                "decisionType" : "REFUND_MONEY",
                "reasonType" : "BAD_QUALITY",
                "partnerCompensation" : 4,
                "refundAmount" : 2
              } ],
              "tracks" : [ {
                "trackCode" : "trackCode"
              }, {
                "trackCode" : "trackCode"
              } ]
            }, {
              "shopSku" : "shopSku",
              "instances" : [ {
                "stockType" : "FIT",
                "imei" : "imei",
                "cis" : "cis",
                "status" : "CREATED"
              }, {
                "stockType" : "FIT",
                "imei" : "imei",
                "cis" : "cis",
                "status" : "CREATED"
              } ],
              "marketSku" : 2,
              "count" : 7,
              "decisions" : [ {
                "images" : [ "images", "images" ],
                "returnItemId" : 9,
                "subreasonType" : "USER_DID_NOT_LIKE",
                "count" : 3,
                "comment" : "comment",
                "decisionType" : "REFUND_MONEY",
                "reasonType" : "BAD_QUALITY",
                "partnerCompensation" : 4,
                "refundAmount" : 2
              }, {
                "images" : [ "images", "images" ],
                "returnItemId" : 9,
                "subreasonType" : "USER_DID_NOT_LIKE",
                "count" : 3,
                "comment" : "comment",
                "decisionType" : "REFUND_MONEY",
                "reasonType" : "BAD_QUALITY",
                "partnerCompensation" : 4,
                "refundAmount" : 2
              } ],
              "tracks" : [ {
                "trackCode" : "trackCode"
              }, {
                "trackCode" : "trackCode"
              } ]
            } ],
            "returnType" : "UNREDEEMED",
            "shipmentStatus" : "CREATED",
            "refundAmount" : 5
          } ]
        },
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/ForwardScrollingPagerDTO"
          },
          "returns" : {
            "description" : "Список возвратов.",
            "items" : {
              "$ref" : "#/components/schemas/ReturnDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "returns" ],
        "type" : "object"
      },
      "ReturnDTO" : {
        "description" : "Возврат заказа.",
        "example" : {
          "updateDate" : "2000-01-23T04:56:07.000+00:00",
          "fastReturn" : true,
          "orderId" : 6,
          "shipmentRecipientType" : "SHOP",
          "refundStatus" : "STARTED_BY_USER",
          "logisticPickupPoint" : {
            "logisticPartnerId" : 5,
            "address" : {
              "country" : "Россия",
              "city" : "Москва",
              "street" : "Стрелецкая улица",
              "postcode" : "123518",
              "house" : "9к2"
            },
            "instruction" : "instruction",
            "name" : "name",
            "id" : 1,
            "type" : "WAREHOUSE"
          },
          "id" : 0,
          "creationDate" : "2000-01-23T04:56:07.000+00:00",
          "items" : [ {
            "shopSku" : "shopSku",
            "instances" : [ {
              "stockType" : "FIT",
              "imei" : "imei",
              "cis" : "cis",
              "status" : "CREATED"
            }, {
              "stockType" : "FIT",
              "imei" : "imei",
              "cis" : "cis",
              "status" : "CREATED"
            } ],
            "marketSku" : 2,
            "count" : 7,
            "decisions" : [ {
              "images" : [ "images", "images" ],
              "returnItemId" : 9,
              "subreasonType" : "USER_DID_NOT_LIKE",
              "count" : 3,
              "comment" : "comment",
              "decisionType" : "REFUND_MONEY",
              "reasonType" : "BAD_QUALITY",
              "partnerCompensation" : 4,
              "refundAmount" : 2
            }, {
              "images" : [ "images", "images" ],
              "returnItemId" : 9,
              "subreasonType" : "USER_DID_NOT_LIKE",
              "count" : 3,
              "comment" : "comment",
              "decisionType" : "REFUND_MONEY",
              "reasonType" : "BAD_QUALITY",
              "partnerCompensation" : 4,
              "refundAmount" : 2
            } ],
            "tracks" : [ {
              "trackCode" : "trackCode"
            }, {
              "trackCode" : "trackCode"
            } ]
          }, {
            "shopSku" : "shopSku",
            "instances" : [ {
              "stockType" : "FIT",
              "imei" : "imei",
              "cis" : "cis",
              "status" : "CREATED"
            }, {
              "stockType" : "FIT",
              "imei" : "imei",
              "cis" : "cis",
              "status" : "CREATED"
            } ],
            "marketSku" : 2,
            "count" : 7,
            "decisions" : [ {
              "images" : [ "images", "images" ],
              "returnItemId" : 9,
              "subreasonType" : "USER_DID_NOT_LIKE",
              "count" : 3,
              "comment" : "comment",
              "decisionType" : "REFUND_MONEY",
              "reasonType" : "BAD_QUALITY",
              "partnerCompensation" : 4,
              "refundAmount" : 2
            }, {
              "images" : [ "images", "images" ],
              "returnItemId" : 9,
              "subreasonType" : "USER_DID_NOT_LIKE",
              "count" : 3,
              "comment" : "comment",
              "decisionType" : "REFUND_MONEY",
              "reasonType" : "BAD_QUALITY",
              "partnerCompensation" : 4,
              "refundAmount" : 2
            } ],
            "tracks" : [ {
              "trackCode" : "trackCode"
            }, {
              "trackCode" : "trackCode"
            } ]
          } ],
          "returnType" : "UNREDEEMED",
          "shipmentStatus" : "CREATED",
          "refundAmount" : 5
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор возврата.",
            "format" : "int64",
            "type" : "integer"
          },
          "orderId" : {
            "description" : "Номер заказа.",
            "format" : "int64",
            "type" : "integer"
          },
          "creationDate" : {
            "description" : "Дата создания возврата клиентом.",
            "format" : "date-time",
            "type" : "string"
          },
          "updateDate" : {
            "description" : "Дата обновления возврата.",
            "format" : "date-time",
            "type" : "string"
          },
          "refundStatus" : {
            "$ref" : "#/components/schemas/RefundStatusType"
          },
          "logisticPickupPoint" : {
            "$ref" : "#/components/schemas/LogisticPickupPointDTO"
          },
          "shipmentRecipientType" : {
            "$ref" : "#/components/schemas/RecipientType"
          },
          "shipmentStatus" : {
            "$ref" : "#/components/schemas/ReturnShipmentStatusType"
          },
          "refundAmount" : {
            "description" : "Сумма возврата.",
            "format" : "int64",
            "type" : "integer"
          },
          "items" : {
            "description" : "Список товаров в возврате.",
            "items" : {
              "$ref" : "#/components/schemas/ReturnItemDTO"
            },
            "type" : "array"
          },
          "returnType" : {
            "$ref" : "#/components/schemas/ReturnType"
          },
          "fastReturn" : {
            "description" : "Используется ли опция **Быстрый возврат денег за дешевый брак**.\n",
            "type" : "boolean"
          }
        },
        "required" : [ "items" ],
        "type" : "object"
      },
      "ReturnRequestDecisionType" : {
        "description" : "Решение по возврату.",
        "enum" : [ "REFUND_MONEY", "REFUND_MONEY_INCLUDING_SHIPMENT", "REPAIR", "REPLACE", "SEND_TO_EXAMINATION", "DECLINE_REFUND", "OTHER_DECISION" ],
        "type" : "string"
      },
      "ShipmentDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseShipmentDTO"
        }, {
          "$ref" : "#/components/schemas/ExtensionShipmentDTO"
        } ],
        "description" : "Информация об отгрузке.",
        "example" : {
          "deliveryService" : {
            "name" : "name",
            "id" : 1
          },
          "availableActions" : [ "CONFIRM", "CONFIRM" ],
          "draftCount" : 7,
          "plannedCount" : 9,
          "currentStatus" : {
            "description" : "description",
            "updateTime" : "2000-01-23T04:56:07.000+00:00",
            "status" : "OUTBOUND_CREATED"
          },
          "planIntervalTo" : "2000-01-23T04:56:07.000+00:00",
          "externalId" : "externalId",
          "warehouse" : {
            "address" : "address",
            "name" : "name",
            "id" : 6
          },
          "shipmentType" : "IMPORT",
          "planIntervalFrom" : "2000-01-23T04:56:07.000+00:00",
          "warehouseTo" : {
            "address" : "address",
            "name" : "name",
            "id" : 6
          },
          "factCount" : 3,
          "palletsCount" : {
            "fact" : 5,
            "planned" : 5
          },
          "id" : 0,
          "orderIds" : [ 2, 2 ]
        },
        "type" : "object"
      },
      "OrdersShipmentInfoDTO" : {
        "description" : "Годные/негодные ярлыки по заказам в отгрузке.",
        "example" : {
          "orderIdsWithLabels" : [ 0, 0 ],
          "orderIdsWithoutLabels" : [ 6, 6 ]
        },
        "properties" : {
          "orderIdsWithLabels" : {
            "description" : "Идентификаторы заказов в отгрузке, для которых можно распечатать ярлыки.",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "orderIdsWithoutLabels" : {
            "description" : "Идентификаторы заказов в отгрузке, для которых нельзя распечатать ярлыки.",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "orderIdsWithLabels", "orderIdsWithoutLabels" ],
        "type" : "object"
      },
      "ShipmentStatusType" : {
        "description" : "Статус отгрузки:\n\n* `OUTBOUND_CREATED` — формируется.\n* `OUTBOUND_READY_FOR_CONFIRMATION` — можно обрабатывать.\n* `OUTBOUND_CONFIRMED` — подтверждена и готова к отправке.\n* `OUTBOUND_SIGNED` — по ней подписан электронный акт приема-передачи.\n* `ACCEPTED` — принята в сортировочном центре или пункте приема.\n* `ACCEPTED_WITH_DISCREPANCIES` — принята с расхождениями.\n* `FINISHED` — завершена.\n* `ERROR` — отменена из-за ошибки.\n",
        "enum" : [ "OUTBOUND_CREATED", "OUTBOUND_READY_FOR_CONFIRMATION", "OUTBOUND_CONFIRMED", "OUTBOUND_SIGNED", "FINISHED", "ACCEPTED", "ACCEPTED_WITH_DISCREPANCIES", "ERROR" ],
        "type" : "string"
      },
      "SearchShipmentsResponseDTO" : {
        "description" : "Информация об отгрузках.",
        "example" : {
          "paging" : {
            "nextPageToken" : "nextPageToken"
          },
          "shipments" : [ {
            "deliveryService" : {
              "name" : "name",
              "id" : 1
            },
            "draftCount" : 1,
            "plannedCount" : 5,
            "planIntervalTo" : "2000-01-23T04:56:07.000+00:00",
            "externalId" : "externalId",
            "warehouse" : {
              "address" : "address",
              "name" : "name",
              "id" : 6
            },
            "shipmentType" : "IMPORT",
            "planIntervalFrom" : "2000-01-23T04:56:07.000+00:00",
            "statusDescription" : "statusDescription",
            "warehouseTo" : {
              "address" : "address",
              "name" : "name",
              "id" : 6
            },
            "factCount" : 5,
            "palletsCount" : {
              "fact" : 5,
              "planned" : 5
            },
            "id" : 0,
            "orderIds" : [ 6, 6 ],
            "statusUpdateTime" : "2000-01-23T04:56:07.000+00:00",
            "status" : "OUTBOUND_CREATED"
          }, {
            "deliveryService" : {
              "name" : "name",
              "id" : 1
            },
            "draftCount" : 1,
            "plannedCount" : 5,
            "planIntervalTo" : "2000-01-23T04:56:07.000+00:00",
            "externalId" : "externalId",
            "warehouse" : {
              "address" : "address",
              "name" : "name",
              "id" : 6
            },
            "shipmentType" : "IMPORT",
            "planIntervalFrom" : "2000-01-23T04:56:07.000+00:00",
            "statusDescription" : "statusDescription",
            "warehouseTo" : {
              "address" : "address",
              "name" : "name",
              "id" : 6
            },
            "factCount" : 5,
            "palletsCount" : {
              "fact" : 5,
              "planned" : 5
            },
            "id" : 0,
            "orderIds" : [ 6, 6 ],
            "statusUpdateTime" : "2000-01-23T04:56:07.000+00:00",
            "status" : "OUTBOUND_CREATED"
          } ]
        },
        "properties" : {
          "shipments" : {
            "description" : "Список с информацией об отгрузках.",
            "items" : {
              "$ref" : "#/components/schemas/ShipmentInfoDTO"
            },
            "type" : "array"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardScrollingPagerDTO"
          }
        },
        "required" : [ "shipments" ],
        "type" : "object"
      },
      "DeleteOffersDTO" : {
        "description" : "Список товаров, которые не удалось удалить, потому что они хранятся на складе Маркета.",
        "example" : {
          "notDeletedOfferIds" : [ null, null ]
        },
        "properties" : {
          "notDeletedOfferIds" : {
            "description" : "Список SKU товаров, которые не удалось удалить.",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "OfferCardStatusType" : {
        "description" : "Статус карточки товара:\n\n* `HAS_CARD_CAN_NOT_UPDATE` — Карточка Маркета.\n* `HAS_CARD_CAN_UPDATE` — Можно дополнить.\n* `HAS_CARD_CAN_UPDATE_ERRORS` — Изменения не приняты.\n* `HAS_CARD_CAN_UPDATE_PROCESSING` — Изменения на проверке.\n* `NO_CARD_NEED_CONTENT` — Создайте карточку.\n* `NO_CARD_MARKET_WILL_CREATE` — Создаст Маркет.\n* `NO_CARD_ERRORS` — Не создана из-за ошибки.\n* `NO_CARD_PROCESSING` — Проверяем данные.\n* `NO_CARD_ADD_TO_CAMPAIGN` — Разместите товар в магазине.\n\n[Что обозначает каждый из статусов](https://yandex.ru/support/marketplace/assortment/content/statuses.html)\n",
        "enum" : [ "HAS_CARD_CAN_NOT_UPDATE", "HAS_CARD_CAN_UPDATE", "HAS_CARD_CAN_UPDATE_ERRORS", "HAS_CARD_CAN_UPDATE_PROCESSING", "NO_CARD_NEED_CONTENT", "NO_CARD_MARKET_WILL_CREATE", "NO_CARD_ERRORS", "NO_CARD_PROCESSING", "NO_CARD_ADD_TO_CAMPAIGN" ],
        "type" : "string"
      },
      "GetOfferMappingsResultDTO" : {
        "description" : "Информация о товарах.",
        "example" : {
          "paging" : {
            "prevPageToken" : "prevPageToken",
            "nextPageToken" : "nextPageToken"
          },
          "offerMappings" : [ {
            "offer" : {
              "downloadable" : true,
              "sellingPrograms" : [ {
                "sellingProgram" : "FBY",
                "status" : "FINE"
              }, {
                "sellingProgram" : "FBY",
                "status" : "FINE"
              } ],
              "marketCategoryId" : 0,
              "manufacturerCountries" : [ "Россия", "Россия" ],
              "description" : "description",
              "videos" : [ "videos", "videos", "videos", "videos", "videos" ],
              "purchasePrice" : {
                "currencyId" : null,
                "value" : 0.7061401241503109,
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              },
              "type" : "DEFAULT",
              "pictures" : [ "pictures", "pictures" ],
              "vendorCode" : "VNDR-0005A",
              "archived" : true,
              "campaigns" : [ {
                "campaignId" : 9,
                "status" : "PUBLISHED"
              }, {
                "campaignId" : 9,
                "status" : "PUBLISHED"
              } ],
              "vendor" : "LEVENHUK",
              "basicPrice" : {
                "discountBase" : 0.23021358869347652,
                "currencyId" : "RUR",
                "value" : 0.5637376656633328,
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              },
              "lifeTime" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "shelfLife" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "cofinancePrice" : {
                "currencyId" : null,
                "value" : 0.7061401241503109,
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              },
              "cardStatus" : "HAS_CARD_CAN_NOT_UPDATE",
              "barcodes" : [ "46012300000000", "46012300000000" ],
              "params" : [ {
                "name" : "Wi-Fi",
                "value" : "есть"
              }, {
                "name" : "Wi-Fi",
                "value" : "есть"
              } ],
              "tags" : [ "до 500 рублей", "до 500 рублей" ],
              "condition" : {
                "reason" : "reason",
                "type" : "PREOWNED",
                "quality" : "PERFECT"
              },
              "certificates" : [ "certificates", "certificates" ],
              "boxCount" : 1,
              "additionalExpenses" : {
                "currencyId" : null,
                "value" : 0.7061401241503109,
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              },
              "name" : "Ударная дрель Makita HP1630, 710 Вт",
              "offerId" : "offerId",
              "guaranteePeriod" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "weightDimensions" : {
                "length" : 65.55,
                "width" : 50.7,
                "weight" : 1.001,
                "height" : 20
              },
              "category" : "category",
              "customsCommodityCode" : "8517610008",
              "adult" : true,
              "age" : {
                "ageUnit" : "YEAR",
                "value" : 0.5962133916683182
              },
              "manuals" : [ {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              } ]
            },
            "mapping" : {
              "marketSkuName" : "marketSkuName",
              "marketCategoryName" : "marketCategoryName",
              "marketCategoryId" : 4,
              "marketSku" : 3,
              "marketModelId" : 2,
              "marketModelName" : "marketModelName"
            }
          }, {
            "offer" : {
              "downloadable" : true,
              "sellingPrograms" : [ {
                "sellingProgram" : "FBY",
                "status" : "FINE"
              }, {
                "sellingProgram" : "FBY",
                "status" : "FINE"
              } ],
              "marketCategoryId" : 0,
              "manufacturerCountries" : [ "Россия", "Россия" ],
              "description" : "description",
              "videos" : [ "videos", "videos", "videos", "videos", "videos" ],
              "purchasePrice" : {
                "currencyId" : null,
                "value" : 0.7061401241503109,
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              },
              "type" : "DEFAULT",
              "pictures" : [ "pictures", "pictures" ],
              "vendorCode" : "VNDR-0005A",
              "archived" : true,
              "campaigns" : [ {
                "campaignId" : 9,
                "status" : "PUBLISHED"
              }, {
                "campaignId" : 9,
                "status" : "PUBLISHED"
              } ],
              "vendor" : "LEVENHUK",
              "basicPrice" : {
                "discountBase" : 0.23021358869347652,
                "currencyId" : "RUR",
                "value" : 0.5637376656633328,
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              },
              "lifeTime" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "shelfLife" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "cofinancePrice" : {
                "currencyId" : null,
                "value" : 0.7061401241503109,
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              },
              "cardStatus" : "HAS_CARD_CAN_NOT_UPDATE",
              "barcodes" : [ "46012300000000", "46012300000000" ],
              "params" : [ {
                "name" : "Wi-Fi",
                "value" : "есть"
              }, {
                "name" : "Wi-Fi",
                "value" : "есть"
              } ],
              "tags" : [ "до 500 рублей", "до 500 рублей" ],
              "condition" : {
                "reason" : "reason",
                "type" : "PREOWNED",
                "quality" : "PERFECT"
              },
              "certificates" : [ "certificates", "certificates" ],
              "boxCount" : 1,
              "additionalExpenses" : {
                "currencyId" : null,
                "value" : 0.7061401241503109,
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              },
              "name" : "Ударная дрель Makita HP1630, 710 Вт",
              "offerId" : "offerId",
              "guaranteePeriod" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "weightDimensions" : {
                "length" : 65.55,
                "width" : 50.7,
                "weight" : 1.001,
                "height" : 20
              },
              "category" : "category",
              "customsCommodityCode" : "8517610008",
              "adult" : true,
              "age" : {
                "ageUnit" : "YEAR",
                "value" : 0.5962133916683182
              },
              "manuals" : [ {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              }, {
                "title" : "title",
                "url" : "url"
              } ]
            },
            "mapping" : {
              "marketSkuName" : "marketSkuName",
              "marketCategoryName" : "marketCategoryName",
              "marketCategoryId" : 4,
              "marketSku" : 3,
              "marketModelId" : 2,
              "marketModelName" : "marketModelName"
            }
          } ]
        },
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/ScrollingPagerDTO"
          },
          "offerMappings" : {
            "description" : "Информация о товарах.",
            "items" : {
              "$ref" : "#/components/schemas/GetOfferMappingDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "offerMappings" ],
        "type" : "object"
      },
      "UpdateOfferMappingDTO" : {
        "description" : "Информация о товаре.",
        "example" : {
          "offer" : {
            "downloadable" : true,
            "marketCategoryId" : 0,
            "manufacturerCountries" : [ "Россия", "Россия" ],
            "description" : "description",
            "videos" : [ "videos", "videos", "videos", "videos", "videos" ],
            "purchasePrice" : {
              "currencyId" : null,
              "value" : 0.9301444243932576
            },
            "type" : "DEFAULT",
            "pictures" : [ "pictures", "pictures" ],
            "vendorCode" : "VNDR-0005A",
            "vendor" : "LEVENHUK",
            "basicPrice" : {
              "discountBase" : 0.7061401241503109,
              "currencyId" : "RUR",
              "value" : 0.23021358869347652
            },
            "lifeTime" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "shelfLife" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "cofinancePrice" : {
              "currencyId" : null,
              "value" : 0.9301444243932576
            },
            "parameterValues" : [ {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            } ],
            "barcodes" : [ "46012300000000", "46012300000000" ],
            "params" : [ {
              "name" : "Wi-Fi",
              "value" : "есть"
            }, {
              "name" : "Wi-Fi",
              "value" : "есть"
            } ],
            "tags" : [ "до 500 рублей", "до 500 рублей" ],
            "condition" : {
              "reason" : "reason",
              "type" : "PREOWNED",
              "quality" : "PERFECT"
            },
            "certificates" : [ "certificates", "certificates" ],
            "boxCount" : 6,
            "additionalExpenses" : {
              "currencyId" : null,
              "value" : 0.9301444243932576
            },
            "name" : "Ударная дрель Makita HP1630, 710 Вт",
            "offerId" : "offerId",
            "guaranteePeriod" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "weightDimensions" : {
              "length" : 65.55,
              "width" : 50.7,
              "weight" : 1.001,
              "height" : 20
            },
            "category" : "category",
            "customsCommodityCode" : "8517610008",
            "adult" : true,
            "age" : {
              "ageUnit" : "YEAR",
              "value" : 0.5962133916683182
            },
            "manuals" : [ {
              "title" : "title",
              "url" : "url"
            }, {
              "title" : "title",
              "url" : "url"
            }, {
              "title" : "title",
              "url" : "url"
            }, {
              "title" : "title",
              "url" : "url"
            }, {
              "title" : "title",
              "url" : "url"
            } ]
          },
          "mapping" : {
            "marketSku" : 3
          }
        },
        "properties" : {
          "offer" : {
            "$ref" : "#/components/schemas/UpdateOfferDTO"
          },
          "mapping" : {
            "$ref" : "#/components/schemas/UpdateMappingDTO"
          }
        },
        "required" : [ "offer" ],
        "type" : "object"
      },
      "UpdateOfferMappingResultDTO" : {
        "description" : "Ошибки и предупреждения, которые появились из-за переданных характеристик.",
        "example" : {
          "warnings" : [ {
            "parameterId" : 0,
            "type" : "UNKNOWN_CATEGORY",
            "message" : "message"
          }, {
            "parameterId" : 0,
            "type" : "UNKNOWN_CATEGORY",
            "message" : "message"
          } ],
          "offerId" : "offerId",
          "errors" : [ {
            "parameterId" : 0,
            "type" : "UNKNOWN_CATEGORY",
            "message" : "message"
          }, {
            "parameterId" : 0,
            "type" : "UNKNOWN_CATEGORY",
            "message" : "message"
          } ]
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "errors" : {
            "description" : "Ошибки — информация в каталоге не обновится.",
            "items" : {
              "$ref" : "#/components/schemas/OfferMappingErrorDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "warnings" : {
            "description" : "Предупреждения — информация в каталоге обновится.",
            "items" : {
              "$ref" : "#/components/schemas/OfferMappingErrorDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "offerId" ],
        "type" : "object"
      },
      "SuggestedOfferDTO" : {
        "description" : "Информация о товаре.",
        "example" : {
          "vendor" : "LEVENHUK",
          "basicPrice" : {
            "currencyId" : null,
            "value" : 0.9301444243932576
          },
          "name" : "Ударная дрель Makita HP1630, 710 Вт",
          "offerId" : "offerId",
          "description" : "description",
          "category" : "category",
          "barcodes" : [ "46012300000000", "46012300000000" ],
          "vendorCode" : "VNDR-0005A"
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "name" : {
            "description" : "Составляйте название по схеме: тип + бренд или производитель + модель + особенности, если есть (например, цвет, размер или вес) и количество в упаковке.\n\nНе включайте в название условия продажи (например, «скидка», «бесплатная доставка» и т. д.), эмоциональные характеристики («хит», «супер» и т. д.). Не пишите слова большими буквами — кроме устоявшихся названий брендов и моделей.\n\nОптимальная длина — 50–60 символов, максимальная — 256.\n\n[Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/title.html)\n",
            "example" : "Ударная дрель Makita HP1630, 710 Вт",
            "maxLength" : 256,
            "type" : "string"
          },
          "category" : {
            "description" : "Категория товара в вашем магазине. Значение будет использовано для определения категории товара на Маркете в случае, если вы не передали категорию в параметре `marketCategoryId`.\n\nУказывайте конкретные категории — например, набор ножей лучше отнести к категории **Столовые приборы**, а не просто **Посуда**.\n\nВыбирайте категории, которые описывают товар, а не абстрактный признак — например, **Духи**, а не **Подарки**.\n\nЗначение будет использовано для определения категории товара на Маркете в случае, если вы не передали категорию в параметре `marketCategoryId`.\n",
            "type" : "string"
          },
          "vendor" : {
            "description" : "Название бренда или производителя. Должно быть записано так, как его пишет сам бренд.",
            "example" : "LEVENHUK",
            "type" : "string"
          },
          "barcodes" : {
            "description" : "Указывайте в виде последовательности цифр. Подойдут коды EAN-13, EAN-8, UPC-A, UPC-E или Code 128.\n\nДля книг указывайте ISBN.\n\nДля товаров [определенных категорий и торговых марок](https://yastatic.net/s3/doc-binary/src/support/market/ru/yandex-market-list-for-gtin.xlsx) штрихкод должен быть действительным кодом GTIN. Обратите внимание: внутренние штрихкоды, начинающиеся на 2 или 02, и коды формата Code 128 не являются GTIN.\n\n[Что такое GTIN](*gtin)\n\n",
            "items" : {
              "example" : "46012300000000",
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          },
          "description" : {
            "description" : "Подробное описание товара: например, его преимущества и особенности.\n\nНе давайте в описании инструкций по установке и сборке. Не используйте слова «скидка», «распродажа», «дешевый», «подарок» (кроме подарочных категорий), «бесплатно», «акция», «специальная цена», «новинка», «new», «аналог», «заказ», «хит». Не указывайте никакой контактной информации и не давайте ссылок.\n\nМожно использовать теги:\n\n* \\<h>, \\<h1>, \\<h2> и так далее — для заголовков;\n* \\<br> и \\<p> — для переноса строки;\n* \\<ol> — для нумерованного списка;\n* \\<ul> — для маркированного списка;\n* \\<li> — для создания элементов списка (должен находиться внутри \\<ol> или \\<ul>);\n* \\<div> — поддерживается, но не влияет на отображение текста.\n\nОптимальная длина — 400–600 символов, максимальная — 6000.\n\n[Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/description.html)\n",
            "maxLength" : 6000,
            "type" : "string"
          },
          "vendorCode" : {
            "description" : "Артикул товара от производителя.",
            "example" : "VNDR-0005A",
            "type" : "string"
          },
          "basicPrice" : {
            "$ref" : "#/components/schemas/BasePriceDTO"
          }
        },
        "type" : "object"
      },
      "GetSuggestedOfferMappingsResultDTO" : {
        "description" : "Подобранные карточки на Маркете.",
        "example" : {
          "offers" : [ {
            "offer" : {
              "vendor" : "LEVENHUK",
              "basicPrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "name" : "Ударная дрель Makita HP1630, 710 Вт",
              "offerId" : "offerId",
              "description" : "description",
              "category" : "category",
              "barcodes" : [ "46012300000000", "46012300000000" ],
              "vendorCode" : "VNDR-0005A"
            },
            "mapping" : {
              "marketSkuName" : "marketSkuName",
              "marketCategoryName" : "marketCategoryName",
              "marketCategoryId" : 4,
              "marketSku" : 3,
              "marketModelId" : 2,
              "marketModelName" : "marketModelName"
            }
          }, {
            "offer" : {
              "vendor" : "LEVENHUK",
              "basicPrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "name" : "Ударная дрель Makita HP1630, 710 Вт",
              "offerId" : "offerId",
              "description" : "description",
              "category" : "category",
              "barcodes" : [ "46012300000000", "46012300000000" ],
              "vendorCode" : "VNDR-0005A"
            },
            "mapping" : {
              "marketSkuName" : "marketSkuName",
              "marketCategoryName" : "marketCategoryName",
              "marketCategoryId" : 4,
              "marketSku" : 3,
              "marketModelId" : 2,
              "marketModelName" : "marketModelName"
            }
          } ]
        },
        "properties" : {
          "offers" : {
            "description" : "Список товаров.",
            "items" : {
              "$ref" : "#/components/schemas/SuggestedOfferMappingDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "offers" ],
        "type" : "object"
      },
      "AddOffersToArchiveDTO" : {
        "description" : "Товары, которые не удалось поместить в архив.",
        "example" : {
          "notArchivedOffers" : [ {
            "offerId" : "offerId",
            "error" : "OFFER_HAS_STOCKS"
          }, {
            "offerId" : "offerId",
            "error" : "OFFER_HAS_STOCKS"
          } ]
        },
        "properties" : {
          "notArchivedOffers" : {
            "description" : "Список товаров, которые не удалось поместить в архив.",
            "items" : {
              "$ref" : "#/components/schemas/AddOffersToArchiveErrorDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "DeleteOffersFromArchiveDTO" : {
        "description" : "Товары, которые не удалось восстановить из архива.",
        "example" : {
          "notUnarchivedOfferIds" : [ null, null ]
        },
        "properties" : {
          "notUnarchivedOfferIds" : {
            "description" : "Список товаров, которые не удалось восстановить из архива.",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "OfferMappingEntriesDTO" : {
        "description" : "Информация о товарах в каталоге.",
        "example" : {
          "offerMappingEntries" : [ {
            "offer" : {
              "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
              "certificate" : "certificate",
              "description" : "description",
              "availability" : "ACTIVE",
              "pictures" : [ "pictures", "pictures" ],
              "vendorCode" : "VNDR-0005A",
              "manufacturer" : "manufacturer",
              "urls" : [ "urls", "urls" ],
              "deliveryDurationDays" : 5,
              "feedId" : 0,
              "vendor" : "LEVENHUK",
              "price" : 2.027123023002322,
              "transportUnitSize" : 1,
              "id" : "id",
              "lifeTime" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "shelfLife" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
              "lifeTimeDays" : 9,
              "quantumOfSupply" : 5,
              "barcodes" : [ "46012300000000", "46012300000000" ],
              "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
              "processingState" : {
                "notes" : [ {
                  "payload" : "payload",
                  "type" : "ASSORTMENT"
                }, {
                  "payload" : "payload",
                  "type" : "ASSORTMENT"
                } ],
                "status" : "UNKNOWN"
              },
              "shopSku" : "shopSku",
              "boxCount" : 2,
              "minShipment" : 6,
              "name" : "Ударная дрель Makita HP1630, 710 Вт",
              "shelfLifeDays" : 7,
              "guaranteePeriod" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "weightDimensions" : {
                "length" : 65.55,
                "width" : 50.7,
                "weight" : 1.001,
                "height" : 20
              },
              "category" : "category",
              "guaranteePeriodDays" : 3
            },
            "mapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            },
            "awaitingModerationMapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            },
            "rejectedMapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            }
          }, {
            "offer" : {
              "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
              "certificate" : "certificate",
              "description" : "description",
              "availability" : "ACTIVE",
              "pictures" : [ "pictures", "pictures" ],
              "vendorCode" : "VNDR-0005A",
              "manufacturer" : "manufacturer",
              "urls" : [ "urls", "urls" ],
              "deliveryDurationDays" : 5,
              "feedId" : 0,
              "vendor" : "LEVENHUK",
              "price" : 2.027123023002322,
              "transportUnitSize" : 1,
              "id" : "id",
              "lifeTime" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "shelfLife" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
              "lifeTimeDays" : 9,
              "quantumOfSupply" : 5,
              "barcodes" : [ "46012300000000", "46012300000000" ],
              "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
              "processingState" : {
                "notes" : [ {
                  "payload" : "payload",
                  "type" : "ASSORTMENT"
                }, {
                  "payload" : "payload",
                  "type" : "ASSORTMENT"
                } ],
                "status" : "UNKNOWN"
              },
              "shopSku" : "shopSku",
              "boxCount" : 2,
              "minShipment" : 6,
              "name" : "Ударная дрель Makita HP1630, 710 Вт",
              "shelfLifeDays" : 7,
              "guaranteePeriod" : {
                "timePeriod" : 6,
                "comment" : "comment",
                "timeUnit" : "HOUR"
              },
              "weightDimensions" : {
                "length" : 65.55,
                "width" : 50.7,
                "weight" : 1.001,
                "height" : 20
              },
              "category" : "category",
              "guaranteePeriodDays" : 3
            },
            "mapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            },
            "awaitingModerationMapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            },
            "rejectedMapping" : {
              "modelId" : 7,
              "marketSku" : 4,
              "categoryId" : 1
            }
          } ],
          "paging" : {
            "prevPageToken" : "prevPageToken",
            "nextPageToken" : "nextPageToken"
          }
        },
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/ScrollingPagerDTO"
          },
          "offerMappingEntries" : {
            "description" : "Информация о товарах в каталоге.",
            "items" : {
              "$ref" : "#/components/schemas/OfferMappingEntryDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "offerMappingEntries" ],
        "type" : "object"
      },
      "UpdateOfferMappingEntryDTO" : {
        "allOf" : [ {
          "properties" : {
            "offer" : {
              "$ref" : "#/components/schemas/UpdateMappingsOfferDTO"
            }
          },
          "type" : "object"
        }, {
          "$ref" : "#/components/schemas/OfferMappingInfoDTO"
        } ],
        "description" : "Список товаров.\n\nВ теле запроса можно передать от одного до 500 товаров.\n\nОбязательный параметр.\n",
        "example" : {
          "offer" : {
            "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
            "certificate" : "certificate",
            "description" : "description",
            "availability" : "ACTIVE",
            "pictures" : [ "pictures", "pictures" ],
            "vendorCode" : "VNDR-0005A",
            "manufacturer" : "manufacturer",
            "urls" : [ "urls", "urls" ],
            "deliveryDurationDays" : 5,
            "feedId" : 0,
            "vendor" : "LEVENHUK",
            "transportUnitSize" : 1,
            "id" : "id",
            "lifeTime" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "shelfLife" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
            "lifeTimeDays" : 9,
            "quantumOfSupply" : 5,
            "barcodes" : [ "46012300000000", "46012300000000" ],
            "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
            "processingState" : {
              "notes" : [ {
                "payload" : "payload",
                "type" : "ASSORTMENT"
              }, {
                "payload" : "payload",
                "type" : "ASSORTMENT"
              } ],
              "status" : "UNKNOWN"
            },
            "shopSku" : "shopSku",
            "boxCount" : 2,
            "minShipment" : 6,
            "name" : "Ударная дрель Makita HP1630, 710 Вт",
            "shelfLifeDays" : 7,
            "guaranteePeriod" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "weightDimensions" : {
              "length" : 65.55,
              "width" : 50.7,
              "weight" : 1.001,
              "height" : 20
            },
            "category" : "category",
            "guaranteePeriodDays" : 3
          },
          "mapping" : {
            "modelId" : 7,
            "marketSku" : 4,
            "categoryId" : 1
          },
          "awaitingModerationMapping" : {
            "modelId" : 7,
            "marketSku" : 4,
            "categoryId" : 1
          },
          "rejectedMapping" : {
            "modelId" : 7,
            "marketSku" : 4,
            "categoryId" : 1
          }
        },
        "type" : "object"
      },
      "MappingsOfferDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MappingsOfferInfoDTO"
        }, {
          "properties" : {
            "price" : {
              "description" : "Цена на товар в рублях.",
              "type" : "number"
            }
          },
          "type" : "object"
        } ],
        "description" : "Информация о товарах в каталоге.",
        "example" : {
          "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
          "certificate" : "certificate",
          "description" : "description",
          "availability" : "ACTIVE",
          "pictures" : [ "pictures", "pictures" ],
          "vendorCode" : "VNDR-0005A",
          "manufacturer" : "manufacturer",
          "urls" : [ "urls", "urls" ],
          "deliveryDurationDays" : 5,
          "feedId" : 0,
          "vendor" : "LEVENHUK",
          "price" : 2.027123023002322,
          "transportUnitSize" : 1,
          "id" : "id",
          "lifeTime" : {
            "timePeriod" : 6,
            "comment" : "comment",
            "timeUnit" : "HOUR"
          },
          "shelfLife" : {
            "timePeriod" : 6,
            "comment" : "comment",
            "timeUnit" : "HOUR"
          },
          "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
          "lifeTimeDays" : 9,
          "quantumOfSupply" : 5,
          "barcodes" : [ "46012300000000", "46012300000000" ],
          "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
          "processingState" : {
            "notes" : [ {
              "payload" : "payload",
              "type" : "ASSORTMENT"
            }, {
              "payload" : "payload",
              "type" : "ASSORTMENT"
            } ],
            "status" : "UNKNOWN"
          },
          "shopSku" : "shopSku",
          "boxCount" : 2,
          "minShipment" : 6,
          "name" : "Ударная дрель Makita HP1630, 710 Вт",
          "shelfLifeDays" : 7,
          "guaranteePeriod" : {
            "timePeriod" : 6,
            "comment" : "comment",
            "timeUnit" : "HOUR"
          },
          "weightDimensions" : {
            "length" : 65.55,
            "width" : 50.7,
            "weight" : 1.001,
            "height" : 20
          },
          "category" : "category",
          "guaranteePeriodDays" : 3
        },
        "type" : "object"
      },
      "OfferMappingSuggestionsListDTO" : {
        "description" : "Список рекомендованных карточек товара.",
        "example" : {
          "offers" : [ {
            "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
            "marketCategoryId" : 4,
            "certificate" : "certificate",
            "description" : "description",
            "availability" : "ACTIVE",
            "marketModelId" : 7,
            "pictures" : [ "pictures", "pictures" ],
            "vendorCode" : "VNDR-0005A",
            "manufacturer" : "manufacturer",
            "marketSkuName" : "marketSkuName",
            "urls" : [ "urls", "urls" ],
            "deliveryDurationDays" : 5,
            "feedId" : 0,
            "vendor" : "LEVENHUK",
            "price" : 2.027123023002322,
            "marketSku" : null,
            "transportUnitSize" : 1,
            "id" : "id",
            "lifeTime" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "shelfLife" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
            "marketModelName" : "marketModelName",
            "lifeTimeDays" : 9,
            "quantumOfSupply" : 5,
            "barcodes" : [ "46012300000000", "46012300000000" ],
            "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
            "processingState" : {
              "notes" : [ {
                "payload" : "payload",
                "type" : "ASSORTMENT"
              }, {
                "payload" : "payload",
                "type" : "ASSORTMENT"
              } ],
              "status" : "UNKNOWN"
            },
            "marketCategoryName" : "marketCategoryName",
            "shopSku" : "shopSku",
            "boxCount" : 2,
            "minShipment" : 6,
            "name" : "Ударная дрель Makita HP1630, 710 Вт",
            "shelfLifeDays" : 7,
            "guaranteePeriod" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "weightDimensions" : {
              "length" : 65.55,
              "width" : 50.7,
              "weight" : 1.001,
              "height" : 20
            },
            "category" : "category",
            "guaranteePeriodDays" : 3
          }, {
            "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
            "marketCategoryId" : 4,
            "certificate" : "certificate",
            "description" : "description",
            "availability" : "ACTIVE",
            "marketModelId" : 7,
            "pictures" : [ "pictures", "pictures" ],
            "vendorCode" : "VNDR-0005A",
            "manufacturer" : "manufacturer",
            "marketSkuName" : "marketSkuName",
            "urls" : [ "urls", "urls" ],
            "deliveryDurationDays" : 5,
            "feedId" : 0,
            "vendor" : "LEVENHUK",
            "price" : 2.027123023002322,
            "marketSku" : null,
            "transportUnitSize" : 1,
            "id" : "id",
            "lifeTime" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "shelfLife" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
            "marketModelName" : "marketModelName",
            "lifeTimeDays" : 9,
            "quantumOfSupply" : 5,
            "barcodes" : [ "46012300000000", "46012300000000" ],
            "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
            "processingState" : {
              "notes" : [ {
                "payload" : "payload",
                "type" : "ASSORTMENT"
              }, {
                "payload" : "payload",
                "type" : "ASSORTMENT"
              } ],
              "status" : "UNKNOWN"
            },
            "marketCategoryName" : "marketCategoryName",
            "shopSku" : "shopSku",
            "boxCount" : 2,
            "minShipment" : 6,
            "name" : "Ударная дрель Makita HP1630, 710 Вт",
            "shelfLifeDays" : 7,
            "guaranteePeriod" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "weightDimensions" : {
              "length" : 65.55,
              "width" : 50.7,
              "weight" : 1.001,
              "height" : 20
            },
            "category" : "category",
            "guaranteePeriodDays" : 3
          } ]
        },
        "properties" : {
          "offers" : {
            "description" : "Список товаров.",
            "items" : {
              "$ref" : "#/components/schemas/EnrichedMappingsOfferDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "offers" ],
        "type" : "object"
      },
      "UpdateBusinessOfferPriceDTO" : {
        "description" : "Товар с новой ценой.",
        "example" : {
          "price" : {
            "discountBase" : 0.7061401241503109,
            "currencyId" : "RUR",
            "value" : 0.23021358869347652
          },
          "offerId" : "offerId"
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "price" : {
            "$ref" : "#/components/schemas/UpdatePriceWithDiscountDTO"
          }
        },
        "required" : [ "offerId", "price" ],
        "type" : "object"
      },
      "OfferPriceDTO" : {
        "description" : "Товар с информацией о новой цене на него.",
        "example" : {
          "price" : {
            "vat" : 1,
            "discountBase" : 6.027456183070403,
            "currencyId" : "RUR",
            "value" : 0.8008281904610115
          },
          "offerId" : "offerId"
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "price" : {
            "$ref" : "#/components/schemas/PriceDTO"
          }
        },
        "type" : "object"
      },
      "OfferPriceListResponseDTO" : {
        "description" : "Список цен на товары.",
        "example" : {
          "offers" : [ {
            "price" : {
              "vat" : 1,
              "discountBase" : 6.027456183070403,
              "currencyId" : "RUR",
              "value" : 0.8008281904610115
            },
            "marketSku" : 0,
            "id" : "id",
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          }, {
            "price" : {
              "vat" : 1,
              "discountBase" : 6.027456183070403,
              "currencyId" : "RUR",
              "value" : 0.8008281904610115
            },
            "marketSku" : 0,
            "id" : "id",
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          } ],
          "total" : 6,
          "paging" : {
            "prevPageToken" : "prevPageToken",
            "nextPageToken" : "nextPageToken"
          }
        },
        "properties" : {
          "offers" : {
            "description" : "Страница списка.",
            "items" : {
              "$ref" : "#/components/schemas/OfferPriceResponseDTO"
            },
            "type" : "array"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ScrollingPagerDTO"
          },
          "total" : {
            "description" : "Количество всех цен магазина, измененных через API.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [ "offers" ],
        "type" : "object"
      },
      "OfferPriceByOfferIdsListResponseDTO" : {
        "description" : "Список цен.",
        "example" : {
          "offers" : [ {
            "price" : {
              "vat" : 1,
              "discountBase" : 6.027456183070403,
              "currencyId" : "RUR",
              "value" : 0.8008281904610115
            },
            "offerId" : "offerId",
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          }, {
            "price" : {
              "vat" : 1,
              "discountBase" : 6.027456183070403,
              "currencyId" : "RUR",
              "value" : 0.8008281904610115
            },
            "offerId" : "offerId",
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          } ],
          "paging" : {
            "prevPageToken" : "prevPageToken",
            "nextPageToken" : "nextPageToken"
          }
        },
        "properties" : {
          "offers" : {
            "description" : "Страница списка цен.",
            "items" : {
              "$ref" : "#/components/schemas/OfferPriceByOfferIdsResponseDTO"
            },
            "type" : "array"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ScrollingPagerDTO"
          }
        },
        "required" : [ "offers" ],
        "type" : "object"
      },
      "SuggestOfferPriceDTO" : {
        "description" : "Товар, для которого требуется получить цены для продвижения.",
        "example" : {
          "marketSku" : 0,
          "offerId" : "offerId"
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "marketSku" : {
            "description" : "SKU на Маркете.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "SuggestPricesResultDTO" : {
        "description" : "Результат запроса цен для продвижения.",
        "example" : {
          "offers" : [ {
            "marketSku" : 0,
            "offerId" : "offerId",
            "priceSuggestion" : [ {
              "price" : 6.027456183070403,
              "type" : "BUYBOX"
            }, {
              "price" : 6.027456183070403,
              "type" : "BUYBOX"
            } ]
          }, {
            "marketSku" : 0,
            "offerId" : "offerId",
            "priceSuggestion" : [ {
              "price" : 6.027456183070403,
              "type" : "BUYBOX"
            }, {
              "price" : 6.027456183070403,
              "type" : "BUYBOX"
            } ]
          } ]
        },
        "properties" : {
          "offers" : {
            "description" : "Список товаров с ценами для продвижения.",
            "items" : {
              "$ref" : "#/components/schemas/PriceSuggestOfferDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "offers" ],
        "type" : "object"
      },
      "GetQuarantineOffersResultDTO" : {
        "description" : "Список товаров в карантине.",
        "example" : {
          "offers" : [ {
            "verdicts" : [ {
              "type" : "PRICE_CHANGE",
              "params" : [ {
                "name" : "CURRENT_PRICE",
                "value" : "value"
              }, {
                "name" : "CURRENT_PRICE",
                "value" : "value"
              } ]
            }, {
              "type" : "PRICE_CHANGE",
              "params" : [ {
                "name" : "CURRENT_PRICE",
                "value" : "value"
              }, {
                "name" : "CURRENT_PRICE",
                "value" : "value"
              } ]
            } ],
            "offerId" : "offerId",
            "currentPrice" : {
              "currencyId" : null,
              "value" : 0.9301444243932576
            },
            "lastValidPrice" : {
              "currencyId" : null,
              "value" : 0.9301444243932576
            }
          }, {
            "verdicts" : [ {
              "type" : "PRICE_CHANGE",
              "params" : [ {
                "name" : "CURRENT_PRICE",
                "value" : "value"
              }, {
                "name" : "CURRENT_PRICE",
                "value" : "value"
              } ]
            }, {
              "type" : "PRICE_CHANGE",
              "params" : [ {
                "name" : "CURRENT_PRICE",
                "value" : "value"
              }, {
                "name" : "CURRENT_PRICE",
                "value" : "value"
              } ]
            } ],
            "offerId" : "offerId",
            "currentPrice" : {
              "currencyId" : null,
              "value" : 0.9301444243932576
            },
            "lastValidPrice" : {
              "currencyId" : null,
              "value" : 0.9301444243932576
            }
          } ],
          "paging" : {
            "prevPageToken" : "prevPageToken",
            "nextPageToken" : "nextPageToken"
          }
        },
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/ScrollingPagerDTO"
          },
          "offers" : {
            "description" : "Страница списка товаров в карантине.",
            "items" : {
              "$ref" : "#/components/schemas/QuarantineOfferDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "offers" ],
        "type" : "object"
      },
      "GetHiddenOffersResultDTO" : {
        "description" : "Список скрытых вами товаров.\n",
        "example" : {
          "hiddenOffers" : [ {
            "offerId" : "offerId"
          }, {
            "offerId" : "offerId"
          } ],
          "paging" : {
            "prevPageToken" : "prevPageToken",
            "nextPageToken" : "nextPageToken"
          }
        },
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/ScrollingPagerDTO"
          },
          "hiddenOffers" : {
            "description" : "Список скрытых товаров.",
            "items" : {
              "$ref" : "#/components/schemas/HiddenOfferDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "hiddenOffers" ],
        "type" : "object"
      },
      "HiddenOfferDTO" : {
        "description" : "Информация о скрытии.",
        "example" : {
          "offerId" : "offerId"
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          }
        },
        "required" : [ "offerId" ],
        "type" : "object"
      },
      "UpdateStockDTO" : {
        "description" : "Информация об остатках одного товара на одном из складов.",
        "example" : {
          "sku" : "sku",
          "items" : [ {
            "count" : 160165638,
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          } ]
        },
        "properties" : {
          "sku" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "items" : {
            "description" : "Информация об остатках товара.\n",
            "items" : {
              "$ref" : "#/components/schemas/UpdateStockItemDTO"
            },
            "maxItems" : 1,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "items", "sku" ],
        "type" : "object"
      },
      "GetWarehouseStocksDTO" : {
        "description" : "Список складов с информацией об остатках на каждом из них.",
        "example" : {
          "warehouses" : [ {
            "offers" : [ {
              "offerId" : "offerId",
              "turnoverSummary" : {
                "turnoverDays" : 6.027456183070403,
                "turnover" : "LOW"
              },
              "stocks" : [ {
                "count" : 1,
                "type" : "FIT"
              }, {
                "count" : 1,
                "type" : "FIT"
              } ],
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            }, {
              "offerId" : "offerId",
              "turnoverSummary" : {
                "turnoverDays" : 6.027456183070403,
                "turnover" : "LOW"
              },
              "stocks" : [ {
                "count" : 1,
                "type" : "FIT"
              }, {
                "count" : 1,
                "type" : "FIT"
              } ],
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            } ],
            "warehouseId" : 0
          }, {
            "offers" : [ {
              "offerId" : "offerId",
              "turnoverSummary" : {
                "turnoverDays" : 6.027456183070403,
                "turnover" : "LOW"
              },
              "stocks" : [ {
                "count" : 1,
                "type" : "FIT"
              }, {
                "count" : 1,
                "type" : "FIT"
              } ],
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            }, {
              "offerId" : "offerId",
              "turnoverSummary" : {
                "turnoverDays" : 6.027456183070403,
                "turnover" : "LOW"
              },
              "stocks" : [ {
                "count" : 1,
                "type" : "FIT"
              }, {
                "count" : 1,
                "type" : "FIT"
              } ],
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            } ],
            "warehouseId" : 0
          } ],
          "paging" : {
            "prevPageToken" : "prevPageToken",
            "nextPageToken" : "nextPageToken"
          }
        },
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/ScrollingPagerDTO"
          },
          "warehouses" : {
            "description" : "Страница списка складов.",
            "items" : {
              "$ref" : "#/components/schemas/WarehouseOffersDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "warehouses" ],
        "type" : "object"
      },
      "DeliveryServicesDTO" : {
        "description" : "Информация о службах доставки.",
        "example" : {
          "deliveryService" : [ {
            "name" : "name",
            "id" : 0
          }, {
            "name" : "name",
            "id" : 0
          } ]
        },
        "properties" : {
          "deliveryService" : {
            "description" : "Информация о службе доставки.",
            "items" : {
              "$ref" : "#/components/schemas/DeliveryServiceInfoDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "deliveryService" ],
        "type" : "object"
      },
      "OrderStatsStatusType" : {
        "description" : "Текущий статус заказа:\n\n* `CANCELLED_BEFORE_PROCESSING` — заказ отменен до начала его обработки.\n\n* `CANCELLED_IN_DELIVERY` — заказ отменен во время его доставки.\n\n* `CANCELLED_IN_PROCESSING` — заказ отменен во время его обработки.\n\n* `DELIVERY` — заказ передан службе доставки.\n\n* `DELIVERED` — заказ доставлен.\n\n* `PARTIALLY_DELIVERED` — заказ частично доставлен.\n\n* `PARTIALLY_RETURNED` — заказ частично возвращен покупателем.\n\n* `PENDING` — заказ ожидает подтверждения.\n\n* `PICKUP` — заказ доставлен в пункт выдачи.\n\n* `PROCESSING` — заказ в обработке.\n\n* `RESERVED` — товар зарезервирован на складе.\n\n* `RETURNED` — заказ полностью возвращен покупателем.\n\n* `UNKNOWN` — неизвестный статус заказа.\n\n* `UNPAID` — заказ от юридического лица ожидает оплаты.\n\n* `LOST` — заказ утерян.\n",
        "enum" : [ "CANCELLED_BEFORE_PROCESSING", "CANCELLED_IN_DELIVERY", "CANCELLED_IN_PROCESSING", "DELIVERY", "DELIVERED", "PARTIALLY_DELIVERED", "PARTIALLY_RETURNED", "PENDING", "PICKUP", "PROCESSING", "RESERVED", "RETURNED", "UNKNOWN", "UNPAID", "LOST" ],
        "type" : "string"
      },
      "OrdersStatsDTO" : {
        "description" : "Информация по заказам.",
        "example" : {
          "orders" : [ {
            "partnerOrderId" : "partnerOrderId",
            "commissions" : [ {
              "actual" : 1.2315135367772556,
              "type" : "FEE"
            }, {
              "actual" : 1.2315135367772556,
              "type" : "FEE"
            } ],
            "statusUpdateDate" : "2000-01-23T04:56:07.000+00:00",
            "payments" : [ {
              "date" : "2000-01-23",
              "total" : 7.386281948385884,
              "paymentOrder" : {
                "date" : "2000-01-23",
                "id" : "id"
              },
              "id" : "id",
              "source" : "BUYER",
              "type" : "PAYMENT"
            }, {
              "date" : "2000-01-23",
              "total" : 7.386281948385884,
              "paymentOrder" : {
                "date" : "2000-01-23",
                "id" : "id"
              },
              "id" : "id",
              "source" : "BUYER",
              "type" : "PAYMENT"
            } ],
            "fake" : true,
            "deliveryRegion" : {
              "name" : "name",
              "id" : 6
            },
            "id" : 0,
            "creationDate" : "2000-01-23",
            "items" : [ {
              "cofinanceValue" : 4.145608029883936,
              "initialCount" : 3,
              "offerName" : "offerName",
              "shopSku" : "shopSku",
              "cisList" : [ "cisList", "cisList" ],
              "marketSku" : 1,
              "count" : 5,
              "bidFee" : 570,
              "cofinanceThreshold" : 2.027123023002322,
              "details" : [ {
                "updateDate" : "2000-01-23",
                "stockType" : "FIT",
                "itemStatus" : "REJECTED",
                "itemCount" : 9
              }, {
                "updateDate" : "2000-01-23",
                "stockType" : "FIT",
                "itemStatus" : "REJECTED",
                "itemCount" : 9
              } ],
              "prices" : [ {
                "total" : 2.3021358869347655,
                "costPerItem" : 5.637376656633329,
                "type" : "BUYER"
              }, {
                "total" : 2.3021358869347655,
                "costPerItem" : 5.637376656633329,
                "type" : "BUYER"
              } ],
              "warehouse" : {
                "name" : "name",
                "id" : 7
              }
            }, {
              "cofinanceValue" : 4.145608029883936,
              "initialCount" : 3,
              "offerName" : "offerName",
              "shopSku" : "shopSku",
              "cisList" : [ "cisList", "cisList" ],
              "marketSku" : 1,
              "count" : 5,
              "bidFee" : 570,
              "cofinanceThreshold" : 2.027123023002322,
              "details" : [ {
                "updateDate" : "2000-01-23",
                "stockType" : "FIT",
                "itemStatus" : "REJECTED",
                "itemCount" : 9
              }, {
                "updateDate" : "2000-01-23",
                "stockType" : "FIT",
                "itemStatus" : "REJECTED",
                "itemCount" : 9
              } ],
              "prices" : [ {
                "total" : 2.3021358869347655,
                "costPerItem" : 5.637376656633329,
                "type" : "BUYER"
              }, {
                "total" : 2.3021358869347655,
                "costPerItem" : 5.637376656633329,
                "type" : "BUYER"
              } ],
              "warehouse" : {
                "name" : "name",
                "id" : 7
              }
            } ],
            "initialItems" : [ {
              "cofinanceValue" : 4.145608029883936,
              "initialCount" : 3,
              "offerName" : "offerName",
              "shopSku" : "shopSku",
              "cisList" : [ "cisList", "cisList" ],
              "marketSku" : 1,
              "count" : 5,
              "bidFee" : 570,
              "cofinanceThreshold" : 2.027123023002322,
              "details" : [ {
                "updateDate" : "2000-01-23",
                "stockType" : "FIT",
                "itemStatus" : "REJECTED",
                "itemCount" : 9
              }, {
                "updateDate" : "2000-01-23",
                "stockType" : "FIT",
                "itemStatus" : "REJECTED",
                "itemCount" : 9
              } ],
              "prices" : [ {
                "total" : 2.3021358869347655,
                "costPerItem" : 5.637376656633329,
                "type" : "BUYER"
              }, {
                "total" : 2.3021358869347655,
                "costPerItem" : 5.637376656633329,
                "type" : "BUYER"
              } ],
              "warehouse" : {
                "name" : "name",
                "id" : 7
              }
            }, {
              "cofinanceValue" : 4.145608029883936,
              "initialCount" : 3,
              "offerName" : "offerName",
              "shopSku" : "shopSku",
              "cisList" : [ "cisList", "cisList" ],
              "marketSku" : 1,
              "count" : 5,
              "bidFee" : 570,
              "cofinanceThreshold" : 2.027123023002322,
              "details" : [ {
                "updateDate" : "2000-01-23",
                "stockType" : "FIT",
                "itemStatus" : "REJECTED",
                "itemCount" : 9
              }, {
                "updateDate" : "2000-01-23",
                "stockType" : "FIT",
                "itemStatus" : "REJECTED",
                "itemCount" : 9
              } ],
              "prices" : [ {
                "total" : 2.3021358869347655,
                "costPerItem" : 5.637376656633329,
                "type" : "BUYER"
              }, {
                "total" : 2.3021358869347655,
                "costPerItem" : 5.637376656633329,
                "type" : "BUYER"
              } ],
              "warehouse" : {
                "name" : "name",
                "id" : 7
              }
            } ],
            "status" : "CANCELLED_BEFORE_PROCESSING",
            "paymentType" : "CREDIT"
          }, {
            "partnerOrderId" : "partnerOrderId",
            "commissions" : [ {
              "actual" : 1.2315135367772556,
              "type" : "FEE"
            }, {
              "actual" : 1.2315135367772556,
              "type" : "FEE"
            } ],
            "statusUpdateDate" : "2000-01-23T04:56:07.000+00:00",
            "payments" : [ {
              "date" : "2000-01-23",
              "total" : 7.386281948385884,
              "paymentOrder" : {
                "date" : "2000-01-23",
                "id" : "id"
              },
              "id" : "id",
              "source" : "BUYER",
              "type" : "PAYMENT"
            }, {
              "date" : "2000-01-23",
              "total" : 7.386281948385884,
              "paymentOrder" : {
                "date" : "2000-01-23",
                "id" : "id"
              },
              "id" : "id",
              "source" : "BUYER",
              "type" : "PAYMENT"
            } ],
            "fake" : true,
            "deliveryRegion" : {
              "name" : "name",
              "id" : 6
            },
            "id" : 0,
            "creationDate" : "2000-01-23",
            "items" : [ {
              "cofinanceValue" : 4.145608029883936,
              "initialCount" : 3,
              "offerName" : "offerName",
              "shopSku" : "shopSku",
              "cisList" : [ "cisList", "cisList" ],
              "marketSku" : 1,
              "count" : 5,
              "bidFee" : 570,
              "cofinanceThreshold" : 2.027123023002322,
              "details" : [ {
                "updateDate" : "2000-01-23",
                "stockType" : "FIT",
                "itemStatus" : "REJECTED",
                "itemCount" : 9
              }, {
                "updateDate" : "2000-01-23",
                "stockType" : "FIT",
                "itemStatus" : "REJECTED",
                "itemCount" : 9
              } ],
              "prices" : [ {
                "total" : 2.3021358869347655,
                "costPerItem" : 5.637376656633329,
                "type" : "BUYER"
              }, {
                "total" : 2.3021358869347655,
                "costPerItem" : 5.637376656633329,
                "type" : "BUYER"
              } ],
              "warehouse" : {
                "name" : "name",
                "id" : 7
              }
            }, {
              "cofinanceValue" : 4.145608029883936,
              "initialCount" : 3,
              "offerName" : "offerName",
              "shopSku" : "shopSku",
              "cisList" : [ "cisList", "cisList" ],
              "marketSku" : 1,
              "count" : 5,
              "bidFee" : 570,
              "cofinanceThreshold" : 2.027123023002322,
              "details" : [ {
                "updateDate" : "2000-01-23",
                "stockType" : "FIT",
                "itemStatus" : "REJECTED",
                "itemCount" : 9
              }, {
                "updateDate" : "2000-01-23",
                "stockType" : "FIT",
                "itemStatus" : "REJECTED",
                "itemCount" : 9
              } ],
              "prices" : [ {
                "total" : 2.3021358869347655,
                "costPerItem" : 5.637376656633329,
                "type" : "BUYER"
              }, {
                "total" : 2.3021358869347655,
                "costPerItem" : 5.637376656633329,
                "type" : "BUYER"
              } ],
              "warehouse" : {
                "name" : "name",
                "id" : 7
              }
            } ],
            "initialItems" : [ {
              "cofinanceValue" : 4.145608029883936,
              "initialCount" : 3,
              "offerName" : "offerName",
              "shopSku" : "shopSku",
              "cisList" : [ "cisList", "cisList" ],
              "marketSku" : 1,
              "count" : 5,
              "bidFee" : 570,
              "cofinanceThreshold" : 2.027123023002322,
              "details" : [ {
                "updateDate" : "2000-01-23",
                "stockType" : "FIT",
                "itemStatus" : "REJECTED",
                "itemCount" : 9
              }, {
                "updateDate" : "2000-01-23",
                "stockType" : "FIT",
                "itemStatus" : "REJECTED",
                "itemCount" : 9
              } ],
              "prices" : [ {
                "total" : 2.3021358869347655,
                "costPerItem" : 5.637376656633329,
                "type" : "BUYER"
              }, {
                "total" : 2.3021358869347655,
                "costPerItem" : 5.637376656633329,
                "type" : "BUYER"
              } ],
              "warehouse" : {
                "name" : "name",
                "id" : 7
              }
            }, {
              "cofinanceValue" : 4.145608029883936,
              "initialCount" : 3,
              "offerName" : "offerName",
              "shopSku" : "shopSku",
              "cisList" : [ "cisList", "cisList" ],
              "marketSku" : 1,
              "count" : 5,
              "bidFee" : 570,
              "cofinanceThreshold" : 2.027123023002322,
              "details" : [ {
                "updateDate" : "2000-01-23",
                "stockType" : "FIT",
                "itemStatus" : "REJECTED",
                "itemCount" : 9
              }, {
                "updateDate" : "2000-01-23",
                "stockType" : "FIT",
                "itemStatus" : "REJECTED",
                "itemCount" : 9
              } ],
              "prices" : [ {
                "total" : 2.3021358869347655,
                "costPerItem" : 5.637376656633329,
                "type" : "BUYER"
              }, {
                "total" : 2.3021358869347655,
                "costPerItem" : 5.637376656633329,
                "type" : "BUYER"
              } ],
              "warehouse" : {
                "name" : "name",
                "id" : 7
              }
            } ],
            "status" : "CANCELLED_BEFORE_PROCESSING",
            "paymentType" : "CREDIT"
          } ],
          "paging" : {
            "nextPageToken" : "nextPageToken"
          }
        },
        "properties" : {
          "orders" : {
            "description" : "Список заказов.",
            "items" : {
              "$ref" : "#/components/schemas/OrdersStatsOrderDTO"
            },
            "type" : "array"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardScrollingPagerDTO"
          }
        },
        "required" : [ "orders" ],
        "type" : "object"
      },
      "GoodsStatsDTO" : {
        "description" : "Отчет по товарам.",
        "example" : {
          "shopSkus" : [ {
            "shopSku" : "shopSku",
            "marketSku" : 0,
            "price" : 6.027456183070403,
            "name" : "name",
            "warehouses" : [ {
              "name" : "name",
              "id" : 9,
              "stocks" : [ {
                "count" : 1,
                "type" : "FIT"
              }, {
                "count" : 1,
                "type" : "FIT"
              } ]
            }, {
              "name" : "name",
              "id" : 9,
              "stocks" : [ {
                "count" : 1,
                "type" : "FIT"
              }, {
                "count" : 1,
                "type" : "FIT"
              } ]
            } ],
            "weightDimensions" : {
              "length" : 5.962133916683182,
              "width" : 5.637376656633329,
              "weight" : 7.061401241503109,
              "height" : 2.3021358869347655
            },
            "categoryName" : "categoryName",
            "categoryId" : 1,
            "pictures" : [ "pictures", "pictures" ],
            "tariffs" : [ {
              "amount" : 2.027123023002322,
              "type" : "AGENCY_COMMISSION",
              "percent" : 3.616076749251911,
              "parameters" : [ {
                "name" : "name",
                "value" : "value"
              }, {
                "name" : "name",
                "value" : "value"
              } ]
            }, {
              "amount" : 2.027123023002322,
              "type" : "AGENCY_COMMISSION",
              "percent" : 3.616076749251911,
              "parameters" : [ {
                "name" : "name",
                "value" : "value"
              }, {
                "name" : "name",
                "value" : "value"
              } ]
            } ]
          }, {
            "shopSku" : "shopSku",
            "marketSku" : 0,
            "price" : 6.027456183070403,
            "name" : "name",
            "warehouses" : [ {
              "name" : "name",
              "id" : 9,
              "stocks" : [ {
                "count" : 1,
                "type" : "FIT"
              }, {
                "count" : 1,
                "type" : "FIT"
              } ]
            }, {
              "name" : "name",
              "id" : 9,
              "stocks" : [ {
                "count" : 1,
                "type" : "FIT"
              }, {
                "count" : 1,
                "type" : "FIT"
              } ]
            } ],
            "weightDimensions" : {
              "length" : 5.962133916683182,
              "width" : 5.637376656633329,
              "weight" : 7.061401241503109,
              "height" : 2.3021358869347655
            },
            "categoryName" : "categoryName",
            "categoryId" : 1,
            "pictures" : [ "pictures", "pictures" ],
            "tariffs" : [ {
              "amount" : 2.027123023002322,
              "type" : "AGENCY_COMMISSION",
              "percent" : 3.616076749251911,
              "parameters" : [ {
                "name" : "name",
                "value" : "value"
              }, {
                "name" : "name",
                "value" : "value"
              } ]
            }, {
              "amount" : 2.027123023002322,
              "type" : "AGENCY_COMMISSION",
              "percent" : 3.616076749251911,
              "parameters" : [ {
                "name" : "name",
                "value" : "value"
              }, {
                "name" : "name",
                "value" : "value"
              } ]
            } ]
          } ]
        },
        "properties" : {
          "shopSkus" : {
            "description" : "Список товаров.",
            "items" : {
              "$ref" : "#/components/schemas/GoodsStatsGoodsDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "shopSkus" ],
        "type" : "object"
      },
      "ReportInfoDTO" : {
        "description" : "Статус генерации и ссылка на готовый отчет.",
        "example" : {
          "generationRequestedAt" : "2000-01-23T04:56:07.000+00:00",
          "file" : "file",
          "generationFinishedAt" : "2000-01-23T04:56:07.000+00:00",
          "subStatus" : "NO_DATA",
          "status" : "PENDING",
          "estimatedGenerationTime" : 0
        },
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/ReportStatusType"
          },
          "subStatus" : {
            "$ref" : "#/components/schemas/ReportSubStatusType"
          },
          "generationRequestedAt" : {
            "description" : "Дата и время запроса на генерацию.",
            "format" : "date-time",
            "type" : "string"
          },
          "generationFinishedAt" : {
            "description" : "Дата и время завершения генерации.",
            "format" : "date-time",
            "type" : "string"
          },
          "file" : {
            "description" : "Ссылка на готовый отчет.",
            "type" : "string"
          },
          "estimatedGenerationTime" : {
            "description" : "Ожидаемая продолжительность генерации в миллисекундах.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "generationRequestedAt", "status" ],
        "type" : "object"
      },
      "PlacementType" : {
        "description" : "Модель, по которой работает магазин:\n\n* `FBS` — FBS или Экспресс.\n* `FBY` — FBY.\n* `DBS` — DBS.\n",
        "enum" : [ "FBS", "FBY", "DBS" ],
        "type" : "string"
      },
      "GenerateReportDTO" : {
        "description" : "Идентификатор, который понадобится для отслеживания статуса генерации и получения готового отчета.",
        "example" : {
          "reportId" : "reportId",
          "estimatedGenerationTime" : 0
        },
        "properties" : {
          "reportId" : {
            "description" : "Идентификатор, который понадобится для отслеживания статуса генерации и получения готового отчета.",
            "type" : "string"
          },
          "estimatedGenerationTime" : {
            "description" : "Ожидаемая продолжительность генерации в миллисекундах.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "estimatedGenerationTime", "reportId" ],
        "type" : "object"
      },
      "ShowsSalesGroupingType" : {
        "description" : "Группировка данных отчета.\nВозможные значения:\n* `CATEGORIES` — группировка по категориям.\n* `OFFERS` — группировка по товарам.\n",
        "enum" : [ "CATEGORIES", "OFFERS" ],
        "type" : "string"
      },
      "ShelfsStatisticsAttributionType" : {
        "description" : "Тип атрибуции:\n  * `CLICKS` — по кликам.\n  * `SHOWS` — по показам.\n<br><br>\n\nО том, какие данные в отчете зависят и не зависят от типа атрибуции, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf#stats).\n",
        "enum" : [ "CLICKS", "SHOWS" ],
        "type" : "string"
      },
      "FullOutletDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/OutletDTO"
        }, {
          "properties" : {
            "id" : {
              "description" : "Идентификатор точки продаж, присвоенный Маркетом.",
              "format" : "int64",
              "type" : "integer"
            },
            "status" : {
              "$ref" : "#/components/schemas/OutletStatusType"
            },
            "region" : {
              "$ref" : "#/components/schemas/RegionDTO"
            },
            "shopOutletId" : {
              "description" : "Идентификатор точки продаж, заданный магазином.",
              "type" : "string"
            },
            "workingTime" : {
              "description" : "Рабочее время.",
              "type" : "string"
            },
            "moderationReason" : {
              "description" : "Статус модерации.",
              "type" : "string"
            }
          },
          "type" : "object"
        } ],
        "description" : "Информация о точке продаж.",
        "example" : {
          "storagePeriod" : 9,
          "address" : {
            "number" : "number",
            "km" : 6,
            "regionId" : 0,
            "city" : "city",
            "street" : "street",
            "additional" : "additional",
            "estate" : "estate",
            "block" : "block",
            "building" : "building"
          },
          "moderationReason" : "moderationReason",
          "visibility" : "HIDDEN",
          "isMain" : true,
          "phones" : [ "phones", "phones" ],
          "workingTime" : "workingTime",
          "type" : "DEPOT",
          "workingSchedule" : {
            "scheduleItems" : [ {
              "startDay" : "MONDAY",
              "endDay" : null,
              "startTime" : "startTime",
              "endTime" : "endTime"
            }, {
              "startDay" : "MONDAY",
              "endDay" : null,
              "startTime" : "startTime",
              "endTime" : "endTime"
            } ],
            "workInHoliday" : true
          },
          "shopOutletId" : "shopOutletId",
          "shopOutletCode" : "shopOutletCode",
          "name" : "name",
          "id" : 3,
          "region" : {
            "parent" : null,
            "children" : [ null, null ],
            "name" : "name",
            "id" : 0,
            "type" : "OTHER"
          },
          "coords" : "coords",
          "deliveryRules" : [ {
            "priceFreePickup" : 7.061401241503109,
            "deliveryServiceId" : 5,
            "maxDeliveryDays" : 5,
            "minDeliveryDays" : 1,
            "orderBefore" : 5,
            "unspecifiedDeliveryInterval" : true
          }, {
            "priceFreePickup" : 7.061401241503109,
            "deliveryServiceId" : 5,
            "maxDeliveryDays" : 5,
            "minDeliveryDays" : 1,
            "orderBefore" : 5,
            "unspecifiedDeliveryInterval" : true
          } ],
          "status" : "AT_MODERATION"
        },
        "type" : "object"
      },
      "ScrollingPagerDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ForwardScrollingPagerDTO"
        }, {
          "properties" : {
            "prevPageToken" : {
              "description" : "Идентификатор предыдущей страницы результатов.",
              "type" : "string"
            }
          },
          "type" : "object"
        } ],
        "description" : "Информация о страницах результатов.",
        "example" : {
          "prevPageToken" : "prevPageToken",
          "nextPageToken" : "nextPageToken"
        },
        "type" : "object"
      },
      "OutletDTO" : {
        "description" : "Информация о точке продаж.",
        "properties" : {
          "name" : {
            "description" : "Название точки продаж.\n",
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/OutletType"
          },
          "coords" : {
            "description" : "Координаты точки продаж.\n\nФормат: долгота, широта. Разделители: запятая и / или пробел. Например, `20.4522144, 54.7104264`.\n\nЕсли параметр не передан, координаты будут определены по значениям параметров, вложенных в `address`.\n",
            "type" : "string"
          },
          "isMain" : {
            "description" : "Признак основной точки продаж.\n\nВозможные значения:\n\n* `false` — неосновная точка продаж.\n* `true` — основная точка продаж.\n",
            "type" : "boolean"
          },
          "shopOutletCode" : {
            "description" : "Идентификатор точки продаж, присвоенный магазином.",
            "type" : "string"
          },
          "visibility" : {
            "$ref" : "#/components/schemas/OutletVisibilityType"
          },
          "address" : {
            "$ref" : "#/components/schemas/OutletAddressDTO"
          },
          "phones" : {
            "description" : "Номера телефонов точки продаж. Передавайте в формате: `+7 (999) 999-99-99`.\n",
            "items" : {
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "workingSchedule" : {
            "$ref" : "#/components/schemas/OutletWorkingScheduleDTO"
          },
          "deliveryRules" : {
            "description" : "Информация об условиях доставки для данной точки продаж.\n\nОбязательный параметр, если параметр `type=DEPOT` или `type=MIXED`.\n",
            "items" : {
              "$ref" : "#/components/schemas/OutletDeliveryRuleDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "storagePeriod" : {
            "description" : "Срок хранения заказа в собственном пункте выдачи заказов. Считается в днях.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "address", "name", "phones", "type", "workingSchedule" ],
        "type" : "object"
      },
      "OutletResponseDTO" : {
        "description" : "Результат выполнения запроса.\nВыводится, если `status=\"OK\"`.\n",
        "example" : {
          "id" : 0
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор точки продаж, присвоенный Маркетом.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "OutletLicensesResponseDTO" : {
        "description" : "Ответ на запрос информации о лицензиях для точек продаж.",
        "example" : {
          "licenses" : [ {
            "licenseType" : "ALCOHOL",
            "number" : "number",
            "dateOfExpiry" : "2000-01-23T04:56:07.000+00:00",
            "checkStatus" : "NEW",
            "outletId" : 6,
            "id" : 0,
            "dateOfIssue" : "2000-01-23T04:56:07.000+00:00",
            "checkComment" : "checkComment"
          }, {
            "licenseType" : "ALCOHOL",
            "number" : "number",
            "dateOfExpiry" : "2000-01-23T04:56:07.000+00:00",
            "checkStatus" : "NEW",
            "outletId" : 6,
            "id" : 0,
            "dateOfIssue" : "2000-01-23T04:56:07.000+00:00",
            "checkComment" : "checkComment"
          } ]
        },
        "properties" : {
          "licenses" : {
            "description" : "Список лицензий.",
            "items" : {
              "$ref" : "#/components/schemas/FullOutletLicenseDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "licenses" ],
        "type" : "object"
      },
      "OutletLicenseDTO" : {
        "description" : "Информация о лицензии.",
        "example" : {
          "licenseType" : "ALCOHOL",
          "number" : "number",
          "dateOfExpiry" : "2000-01-23T04:56:07.000+00:00",
          "outletId" : 6,
          "id" : 0,
          "dateOfIssue" : "2000-01-23T04:56:07.000+00:00"
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор лицензии.\n\nПараметр указывается, только если нужно изменить информацию о существующей лицензии. Ее идентификатор можно узнать с помощью запроса [GET campaigns/{campaignId}/outlets/licenses](../../reference/outlets/getOutletLicenses.md). При передаче информации о новой лицензии указывать идентификатор не нужно.\n\nИдентификатор лицензии присваивается Маркетом. Не путайте его с номером, указанным на лицензии: он передается в параметре `number`.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "outletId" : {
            "description" : "Идентификатор точки продаж, для которой действительна лицензия.",
            "format" : "int64",
            "type" : "integer"
          },
          "licenseType" : {
            "$ref" : "#/components/schemas/LicenseType"
          },
          "number" : {
            "description" : "Номер лицензии.",
            "type" : "string"
          },
          "dateOfIssue" : {
            "description" : "Дата выдачи лицензии.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Нужно передать дату, указанную на лицензии, время `00:00:00` и часовой пояс, соответствующий региону точки продаж. Например, если лицензия для точки продаж в Москве выдана 13 ноября 2017 года, то параметр должен иметь значение `2017-11-13T00:00:00+03:00`.\n\nОбязательный параметр.\n\nНе может быть позже даты окончания срока действия, указанной в параметре `dateOfExpiry`.\n",
            "format" : "date-time",
            "type" : "string"
          },
          "dateOfExpiry" : {
            "description" : "Дата окончания действия лицензии.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Нужно передать дату, указанную на лицензии, время `00:00:00` и часовой пояс, соответствующий региону точки продаж. Например, если действие лицензии для точки продаж в Москве заканчивается 20 ноября 2022 года, то параметр должен иметь значение `2022-11-20T00:00:00+03:00`.\n\nОбязательный параметр.\n\nНе может быть раньше даты выдачи, указанной в параметре `dateOfIssue`.\n",
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FeedbackListDTO" : {
        "description" : "Отзывы пользователей Яндекс Маркета об указанном магазине.",
        "example" : {
          "paging" : {
            "prevPageToken" : "prevPageToken",
            "nextPageToken" : "nextPageToken"
          },
          "feedbackList" : [ {
            "comments" : [ {
              "createdAt" : "2000-01-23T04:56:07.000+00:00",
              "children" : [ null, null ],
              "author" : {
                "name" : "name",
                "type" : "USER"
              },
              "id" : 6,
              "body" : "body",
              "parentId" : 1,
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            }, {
              "createdAt" : "2000-01-23T04:56:07.000+00:00",
              "children" : [ null, null ],
              "author" : {
                "name" : "name",
                "type" : "USER"
              },
              "id" : 6,
              "body" : "body",
              "parentId" : 1,
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            } ],
            "shop" : {
              "name" : "name"
            },
            "author" : {
              "name" : "name",
              "region" : {
                "parent" : null,
                "children" : [ null, null ],
                "name" : "name",
                "id" : 0,
                "type" : "OTHER"
              }
            },
            "verified" : true,
            "recommend" : true,
            "grades" : {
              "average" : 5.962133916683182,
              "agreeCount" : 5,
              "rejectCount" : 2,
              "factors" : [ {
                "description" : "description",
                "id" : 7,
                "title" : "title",
                "value" : 9
              }, {
                "description" : "description",
                "id" : 7,
                "title" : "title",
                "value" : 9
              } ]
            },
            "pro" : "pro",
            "createdAt" : "2000-01-23T04:56:07.000+00:00",
            "id" : 0,
            "text" : "text",
            "state" : "LAST",
            "contra" : "contra",
            "resolved" : true,
            "order" : {
              "delivery" : "DELIVERY",
              "shopOrderId" : "shopOrderId"
            }
          }, {
            "comments" : [ {
              "createdAt" : "2000-01-23T04:56:07.000+00:00",
              "children" : [ null, null ],
              "author" : {
                "name" : "name",
                "type" : "USER"
              },
              "id" : 6,
              "body" : "body",
              "parentId" : 1,
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            }, {
              "createdAt" : "2000-01-23T04:56:07.000+00:00",
              "children" : [ null, null ],
              "author" : {
                "name" : "name",
                "type" : "USER"
              },
              "id" : 6,
              "body" : "body",
              "parentId" : 1,
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            } ],
            "shop" : {
              "name" : "name"
            },
            "author" : {
              "name" : "name",
              "region" : {
                "parent" : null,
                "children" : [ null, null ],
                "name" : "name",
                "id" : 0,
                "type" : "OTHER"
              }
            },
            "verified" : true,
            "recommend" : true,
            "grades" : {
              "average" : 5.962133916683182,
              "agreeCount" : 5,
              "rejectCount" : 2,
              "factors" : [ {
                "description" : "description",
                "id" : 7,
                "title" : "title",
                "value" : 9
              }, {
                "description" : "description",
                "id" : 7,
                "title" : "title",
                "value" : 9
              } ]
            },
            "pro" : "pro",
            "createdAt" : "2000-01-23T04:56:07.000+00:00",
            "id" : 0,
            "text" : "text",
            "state" : "LAST",
            "contra" : "contra",
            "resolved" : true,
            "order" : {
              "delivery" : "DELIVERY",
              "shopOrderId" : "shopOrderId"
            }
          } ]
        },
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/ScrollingPagerDTO"
          },
          "feedbackList" : {
            "description" : "Список отзывов.\n\nСодержит не более 20 отзывов.\n",
            "items" : {
              "$ref" : "#/components/schemas/FeedbackDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "feedbackList" ],
        "type" : "object"
      },
      "FeedbackReactionStatusType" : {
        "description" : "Статус реакции на отзыв:\n\n* `ALL` — все отзывы.\n\n* `NEED_REACTION` — отзывы, на которые нужно ответить.\n",
        "enum" : [ "ALL", "NEED_REACTION" ],
        "type" : "string"
      },
      "GoodsFeedbackListDTO" : {
        "description" : "Список отзывов о товарах.\n",
        "example" : {
          "feedbacks" : [ {
            "createdAt" : "2000-01-23T04:56:07.000+00:00",
            "needReaction" : true,
            "identifiers" : {
              "orderId" : 6,
              "modelId" : 1
            },
            "author" : "author",
            "feedbackId" : 0,
            "description" : {
              "advantages" : "advantages",
              "disadvantages" : "disadvantages",
              "comment" : "comment"
            },
            "media" : {
              "videos" : [ "videos", "videos" ],
              "photos" : [ "photos", "photos" ]
            },
            "statistics" : {
              "commentsCount" : 5,
              "rating" : 3,
              "paidAmount" : 2,
              "recommended" : true
            }
          }, {
            "createdAt" : "2000-01-23T04:56:07.000+00:00",
            "needReaction" : true,
            "identifiers" : {
              "orderId" : 6,
              "modelId" : 1
            },
            "author" : "author",
            "feedbackId" : 0,
            "description" : {
              "advantages" : "advantages",
              "disadvantages" : "disadvantages",
              "comment" : "comment"
            },
            "media" : {
              "videos" : [ "videos", "videos" ],
              "photos" : [ "photos", "photos" ]
            },
            "statistics" : {
              "commentsCount" : 5,
              "rating" : 3,
              "paidAmount" : 2,
              "recommended" : true
            }
          } ],
          "paging" : {
            "nextPageToken" : "nextPageToken"
          }
        },
        "properties" : {
          "feedbacks" : {
            "description" : "Список отзывов.",
            "items" : {
              "$ref" : "#/components/schemas/GoodsFeedbackDTO"
            },
            "type" : "array"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardScrollingPagerDTO"
          }
        },
        "required" : [ "feedbacks" ],
        "type" : "object"
      },
      "GoodsFeedbackId" : {
        "description" : "Идентификатор отзыва.\n",
        "format" : "int64",
        "type" : "integer"
      },
      "UpdateGoodsFeedbackCommentDTO" : {
        "description" : "Комментарий к отзыву или другому комментарию.",
        "example" : {
          "id" : 6,
          "text" : "text",
          "parentId" : 1
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор комментария к отзыву.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "parentId" : {
            "description" : "Идентификатор комментария к отзыву.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "text" : {
            "description" : "Текст комментария.",
            "maxLength" : 4096,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [ "text" ],
        "type" : "object"
      },
      "GoodsFeedbackCommentDTO" : {
        "description" : "Комментарий к отзыву.",
        "example" : {
          "author" : {
            "name" : "name",
            "type" : "USER"
          },
          "id" : 0,
          "text" : "text",
          "canModify" : true,
          "parentId" : 6,
          "status" : "PUBLISHED"
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор комментария к отзыву.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "text" : {
            "description" : "Текст комментария.",
            "maxLength" : 4096,
            "minLength" : 1,
            "type" : "string"
          },
          "canModify" : {
            "description" : "Может ли продавец изменять комментарий или удалять его.",
            "type" : "boolean"
          },
          "parentId" : {
            "description" : "Идентификатор комментария к отзыву.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "author" : {
            "$ref" : "#/components/schemas/GoodsFeedbackCommentAuthorDTO"
          },
          "status" : {
            "$ref" : "#/components/schemas/GoodsFeedbackCommentStatusType"
          }
        },
        "required" : [ "author", "id", "status", "text" ],
        "type" : "object"
      },
      "GoodsFeedbackCommentId" : {
        "description" : "Идентификатор комментария к отзыву.\n",
        "format" : "int64",
        "type" : "integer"
      },
      "GoodsFeedbackCommentListDTO" : {
        "description" : "Комментарии к отзыву.",
        "example" : {
          "comments" : [ {
            "author" : {
              "name" : "name",
              "type" : "USER"
            },
            "id" : 0,
            "text" : "text",
            "canModify" : true,
            "parentId" : 6,
            "status" : "PUBLISHED"
          }, {
            "author" : {
              "name" : "name",
              "type" : "USER"
            },
            "id" : 0,
            "text" : "text",
            "canModify" : true,
            "parentId" : 6,
            "status" : "PUBLISHED"
          } ],
          "paging" : {
            "nextPageToken" : "nextPageToken"
          }
        },
        "properties" : {
          "comments" : {
            "description" : "Список комментариев.",
            "items" : {
              "$ref" : "#/components/schemas/GoodsFeedbackCommentDTO"
            },
            "type" : "array"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardScrollingPagerDTO"
          }
        },
        "required" : [ "comments" ],
        "type" : "object"
      },
      "OffersDTO" : {
        "description" : "Найденные предложения магазина.",
        "properties" : {
          "offers" : {
            "description" : "Список предложений магазина.",
            "items" : {
              "$ref" : "#/components/schemas/OfferDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "offers" ],
        "type" : "object"
      },
      "OfferCampaignStatusType" : {
        "description" : "Статус товара:\n\n* `PUBLISHED` — Готов к продаже.\n* `CHECKING` — На проверке.\n* `DISABLED_BY_PARTNER` — Скрыт вами.\n* `REJECTED_BY_MARKET` — Отклонен.\n* `DISABLED_AUTOMATICALLY` — Исправьте ошибки.\n* `CREATING_CARD` — Создается карточка.\n* `NO_CARD` — Нужна карточка.\n* `NO_STOCKS` — Нет на складе.\n* `ARCHIVED` — В архиве.\n\n[Что обозначает каждый из статусов](https://yandex.ru/support/marketplace/assortment/add/statuses.html)\n",
        "enum" : [ "PUBLISHED", "CHECKING", "DISABLED_BY_PARTNER", "DISABLED_AUTOMATICALLY", "REJECTED_BY_MARKET", "CREATING_CARD", "NO_CARD", "NO_STOCKS", "ARCHIVED" ],
        "type" : "string"
      },
      "GetCampaignOffersResultDTO" : {
        "description" : "Список товаров в заданном магазине.",
        "example" : {
          "offers" : [ {
            "campaignPrice" : {
              "vat" : 5,
              "discountBase" : 5.962133916683182,
              "currencyId" : "RUR",
              "value" : 1.4658129805029452,
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            },
            "basicPrice" : {
              "discountBase" : 0.23021358869347652,
              "currencyId" : "RUR",
              "value" : 0.5637376656633328,
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            },
            "warnings" : [ {
              "comment" : "comment",
              "message" : "message"
            }, {
              "comment" : "comment",
              "message" : "message"
            } ],
            "available" : true,
            "offerId" : "offerId",
            "quantum" : {
              "minQuantity" : 1,
              "stepQuantity" : 60
            },
            "errors" : [ {
              "comment" : "comment",
              "message" : "message"
            }, {
              "comment" : "comment",
              "message" : "message"
            } ],
            "status" : "PUBLISHED"
          }, {
            "campaignPrice" : {
              "vat" : 5,
              "discountBase" : 5.962133916683182,
              "currencyId" : "RUR",
              "value" : 1.4658129805029452,
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            },
            "basicPrice" : {
              "discountBase" : 0.23021358869347652,
              "currencyId" : "RUR",
              "value" : 0.5637376656633328,
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            },
            "warnings" : [ {
              "comment" : "comment",
              "message" : "message"
            }, {
              "comment" : "comment",
              "message" : "message"
            } ],
            "available" : true,
            "offerId" : "offerId",
            "quantum" : {
              "minQuantity" : 1,
              "stepQuantity" : 60
            },
            "errors" : [ {
              "comment" : "comment",
              "message" : "message"
            }, {
              "comment" : "comment",
              "message" : "message"
            } ],
            "status" : "PUBLISHED"
          } ],
          "paging" : {
            "prevPageToken" : "prevPageToken",
            "nextPageToken" : "nextPageToken"
          }
        },
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/ScrollingPagerDTO"
          },
          "offers" : {
            "description" : "Страница списка товаров.",
            "items" : {
              "$ref" : "#/components/schemas/GetCampaignOfferDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "offers" ],
        "type" : "object"
      },
      "UpdateCampaignOfferDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseCampaignOfferDTO"
        }, {
          "properties" : {
            "vat" : {
              "description" : "Ставка НДС, применяемая для товара. Задается цифрой:\n\n* `2` — 10%.\n* `5` — 0%.\n* `6` — не облагается НДС.\n* `7` — 20%.\n\nЕсли параметр не указан, используется ставка НДС, установленная в кабинете продавца на Маркете.\n",
              "format" : "int32",
              "type" : "integer"
            }
          },
          "type" : "object"
        } ],
        "description" : "Параметры размещения товара в магазине.",
        "example" : {
          "available" : true,
          "vat" : 0,
          "offerId" : "offerId",
          "quantum" : {
            "minQuantity" : 1,
            "stepQuantity" : 60
          }
        },
        "type" : "object"
      },
      "DeleteCampaignOffersDTO" : {
        "description" : "Список товаров, которые не удалось удалить, потому что они не найдены или хранятся на складе Маркета.",
        "example" : {
          "notDeletedOfferIds" : [ null, null ]
        },
        "properties" : {
          "notDeletedOfferIds" : {
            "description" : "Список SKU.",
            "items" : {
              "$ref" : "#/components/schemas/ShopSku"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "FieldStateType" : {
        "description" : "Фильтр по заполненности или незаполненности поля:\n\n* `SPECIFIED` — вывести товары, у которых поле заполнено.\n* `EMPTY` — вывести товары, у которых поле не заполнено.\n",
        "enum" : [ "SPECIFIED", "EMPTY" ],
        "type" : "string"
      },
      "PriceCompetitivenessType" : {
        "description" : "Привлекательность цены:\n\n* `OPTIMAL` — привлекательная.\n* `AVERAGE` — умеренная.\n* `LOW` — непривлекательная.\n",
        "enum" : [ "OPTIMAL", "AVERAGE", "LOW" ],
        "type" : "string"
      },
      "OfferRecommendationsResultDTO" : {
        "description" : "Список товаров с рекомендациями.",
        "example" : {
          "paging" : {
            "prevPageToken" : "prevPageToken",
            "nextPageToken" : "nextPageToken"
          },
          "offerRecommendations" : [ {
            "offer" : {
              "shows" : 0,
              "price" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "offerId" : "offerId",
              "competitiveness" : "OPTIMAL",
              "cofinancePrice" : {
                "currencyId" : null,
                "value" : 0.7061401241503109,
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              }
            },
            "recommendation" : {
              "recommendedCofinancePrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "offerId" : "offerId",
              "competitivenessThresholds" : {
                "optimalPrice" : {
                  "currencyId" : null,
                  "value" : 0.9301444243932576
                },
                "averagePrice" : {
                  "currencyId" : null,
                  "value" : 0.9301444243932576
                }
              }
            }
          }, {
            "offer" : {
              "shows" : 0,
              "price" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "offerId" : "offerId",
              "competitiveness" : "OPTIMAL",
              "cofinancePrice" : {
                "currencyId" : null,
                "value" : 0.7061401241503109,
                "updatedAt" : "2000-01-23T04:56:07.000+00:00"
              }
            },
            "recommendation" : {
              "recommendedCofinancePrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "offerId" : "offerId",
              "competitivenessThresholds" : {
                "optimalPrice" : {
                  "currencyId" : null,
                  "value" : 0.9301444243932576
                },
                "averagePrice" : {
                  "currencyId" : null,
                  "value" : 0.9301444243932576
                }
              }
            }
          } ]
        },
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/ScrollingPagerDTO"
          },
          "offerRecommendations" : {
            "description" : "Страница списка товаров.",
            "items" : {
              "$ref" : "#/components/schemas/OfferRecommendationDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "offerRecommendations" ],
        "type" : "object"
      },
      "FeedDTO" : {
        "description" : "Информация о прайс-листе.",
        "example" : {
          "password" : "password",
          "download" : {
            "error" : {
              "description" : "description",
              "type" : "DOWNLOAD_ERROR",
              "httpStatusCode" : 5
            },
            "status" : null
          },
          "uploadDate" : "2000-01-23T04:56:07.000+00:00",
          "publication" : {
            "priceAndStockUpdate" : {
              "fileTime" : "2000-01-23T04:56:07.000+00:00",
              "publishedTime" : "2000-01-23T04:56:07.000+00:00"
            },
            "status" : null,
            "full" : {
              "fileTime" : "2000-01-23T04:56:07.000+00:00",
              "publishedTime" : "2000-01-23T04:56:07.000+00:00"
            }
          },
          "name" : "name",
          "id" : 0,
          "placement" : {
            "status" : null,
            "totalOffersCount" : 5
          },
          "login" : "login",
          "url" : "url",
          "content" : {
            "rejectedOffersCount" : 6,
            "error" : {
              "type" : "PARSE_ERROR"
            },
            "status" : "ERROR",
            "totalOffersCount" : 1
          }
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор прайс-листа.",
            "format" : "int64",
            "type" : "integer"
          },
          "login" : {
            "description" : "Логин для авторизации при скачивании прайс-листа.\nПараметр выводится при размещении прайс-листа на сайте магазина и в случае ограничения доступа к нему.\n",
            "type" : "string"
          },
          "name" : {
            "description" : "Имя файла, содержащего прайс-лист.\nПараметр выводится при размещении прайс-листа на сервере Маркета.\n",
            "type" : "string"
          },
          "password" : {
            "description" : "Пароль для авторизации при скачивании прайс-листа.\nПараметр выводится при размещении прайс-листа на сайте магазина и в случае ограничения доступа к нему.\n",
            "type" : "string"
          },
          "uploadDate" : {
            "description" : "Дата загрузки прайс-листа на Маркет.\n\nФормат даты: `ДД-ММ-ГГГГ`.\n\nПараметр выводится при размещении прайс-листа на сервере Маркета.\n",
            "format" : "date-time",
            "type" : "string"
          },
          "url" : {
            "description" : "URL прайс-листа.\nПараметр выводится при размещении прайс-листа на сайте магазина.\n",
            "type" : "string"
          },
          "content" : {
            "$ref" : "#/components/schemas/FeedContentDTO"
          },
          "download" : {
            "$ref" : "#/components/schemas/FeedDownloadDTO"
          },
          "placement" : {
            "$ref" : "#/components/schemas/FeedPlacementDTO"
          },
          "publication" : {
            "$ref" : "#/components/schemas/FeedPublicationDTO"
          }
        },
        "type" : "object"
      },
      "FeedIndexLogsResultDTO" : {
        "description" : "Результат выполнения запроса отчета по индексации прайс-листа.",
        "example" : {
          "feed" : {
            "id" : 0
          },
          "total" : 2,
          "indexLogRecords" : [ {
            "offers" : {
              "rejectedCount" : 5,
              "totalCount" : 5
            },
            "fileTime" : "2000-01-23T04:56:07.000+00:00",
            "generationId" : 6,
            "indexType" : "DIFF",
            "publishedTime" : "2000-01-23T04:56:07.000+00:00",
            "error" : {
              "description" : "description",
              "type" : "DOWNLOAD_ERROR",
              "httpStatusCode" : 1
            },
            "downloadTime" : "2000-01-23T04:56:07.000+00:00",
            "status" : "ERROR"
          }, {
            "offers" : {
              "rejectedCount" : 5,
              "totalCount" : 5
            },
            "fileTime" : "2000-01-23T04:56:07.000+00:00",
            "generationId" : 6,
            "indexType" : "DIFF",
            "publishedTime" : "2000-01-23T04:56:07.000+00:00",
            "error" : {
              "description" : "description",
              "type" : "DOWNLOAD_ERROR",
              "httpStatusCode" : 1
            },
            "downloadTime" : "2000-01-23T04:56:07.000+00:00",
            "status" : "ERROR"
          } ]
        },
        "properties" : {
          "feed" : {
            "$ref" : "#/components/schemas/FeedIndexLogsFeedDTO"
          },
          "indexLogRecords" : {
            "description" : "Список отчетов по индексации прайс-листа.",
            "items" : {
              "$ref" : "#/components/schemas/FeedIndexLogsRecordDTO"
            },
            "type" : "array"
          },
          "total" : {
            "description" : "Количество отчетов на всех страницах выходных данных.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "indexLogRecords" ],
        "type" : "object"
      },
      "FeedParameterDTO" : {
        "description" : "Параметр прайс-листа.",
        "example" : {
          "deleted" : true,
          "values" : [ 0, 0 ],
          "name" : "name"
        },
        "properties" : {
          "deleted" : {
            "description" : "Удалить ли значение параметра.\n\nВозможное значение:\n* `true` — удалить значение параметра.\n\nИспользуется вместе с параметром `name`.\n",
            "type" : "boolean"
          },
          "name" : {
            "description" : "Название параметра.\n\nВозможное значение:\n- `reparseIntervalMinutes` — период скачивания прайс-листа.\nМаркет будет скачивать прайс-лист через количество минут, указанное в параметре `value`. Например, при `value=1440`, Маркет будет скачивать прайс-лист один раз в сутки.\n\n{% note alert %}\n\nНесмотря на установленное значение, Маркет скачает прайс-лист один раз в сутки.\n\n{% endnote %}\n\nОбязательный параметр.\n",
            "type" : "string"
          },
          "values" : {
            "description" : "Значения параметра.\n\nИспользуется вместе с параметром `name`.\n",
            "items" : {
              "description" : "Значение параметра.\nВозможное значение:\n- Для `name=reparseIntervalMinutes` — минуты.\nМинимальное значение: `20`.\nМаксимальное значение: `1440`. Рекомендуем указывать это значение.\n\nДля формата JSON указывается в виде числа.\n",
              "format" : "int32",
              "type" : "integer"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "ModelsDTO" : {
        "description" : "Список моделей товаров.",
        "properties" : {
          "models" : {
            "description" : "Список моделей товаров.",
            "items" : {
              "$ref" : "#/components/schemas/ModelDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "models" ],
        "type" : "object"
      },
      "RegionalModelInfoDTO" : {
        "description" : "Региональная информация.",
        "properties" : {
          "currency" : {
            "$ref" : "#/components/schemas/CurrencyType"
          },
          "regionId" : {
            "description" : "Идентификатор региона, для которого выводится информация о предложениях модели (доставляемых в этот регион).\n\nИнформацию о регионе по идентификатору можно получить с помощью запроса [GET regions/{regionId}](../../reference/regions/searchRegionsById.md).\n",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "EnrichedModelsDTO" : {
        "description" : "Список моделей товаров.",
        "properties" : {
          "models" : {
            "description" : "Список моделей товаров.",
            "items" : {
              "$ref" : "#/components/schemas/EnrichedModelDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "models" ],
        "type" : "object"
      },
      "SkuBidItemDTO" : {
        "description" : "Список товаров и ставок на них.",
        "example" : {
          "sku" : "sku",
          "bid" : 570
        },
        "properties" : {
          "sku" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "bid" : {
            "description" : "Значение ставки.",
            "example" : 570,
            "format" : "int32",
            "maximum" : 9999,
            "minimum" : 0,
            "type" : "integer"
          }
        },
        "required" : [ "bid", "sku" ],
        "type" : "object"
      },
      "GetBidsInfoResponseDTO" : {
        "description" : "Список товаров с указанными ставками.",
        "example" : {
          "bids" : [ {
            "sku" : "sku",
            "bid" : 570
          }, {
            "sku" : "sku",
            "bid" : 570
          } ],
          "paging" : {
            "nextPageToken" : "nextPageToken"
          }
        },
        "properties" : {
          "bids" : {
            "description" : "Страница списка товаров.",
            "items" : {
              "$ref" : "#/components/schemas/SkuBidItemDTO"
            },
            "type" : "array"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardScrollingPagerDTO"
          }
        },
        "required" : [ "bids" ],
        "type" : "object"
      },
      "GetBidsRecommendationsResponseDTO" : {
        "description" : "Список товаров с рекомендованными ставками.",
        "example" : {
          "recommendations" : [ {
            "bidRecommendations" : [ {
              "showPercent" : 8,
              "bid" : 570
            }, {
              "showPercent" : 8,
              "bid" : 570
            } ],
            "priceRecommendations" : [ {
              "campaignId" : 6,
              "price" : 1.1465812980502945
            }, {
              "campaignId" : 6,
              "price" : 1.1465812980502945
            } ],
            "sku" : "sku",
            "bid" : 570
          }, {
            "bidRecommendations" : [ {
              "showPercent" : 8,
              "bid" : 570
            }, {
              "showPercent" : 8,
              "bid" : 570
            } ],
            "priceRecommendations" : [ {
              "campaignId" : 6,
              "price" : 1.1465812980502945
            }, {
              "campaignId" : 6,
              "price" : 1.1465812980502945
            } ],
            "sku" : "sku",
            "bid" : 570
          } ]
        },
        "properties" : {
          "recommendations" : {
            "description" : "Список товаров с рекомендованными ставками.",
            "items" : {
              "$ref" : "#/components/schemas/SkuBidRecommendationItemDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "recommendations" ],
        "type" : "object"
      },
      "WarehousesDTO" : {
        "description" : "Информация о складах и группах складов.",
        "example" : {
          "warehouses" : [ {
            "address" : {
              "number" : "number",
              "city" : "city",
              "street" : "street",
              "block" : "block",
              "gps" : {
                "latitude" : 9.965781217890562,
                "longitude" : 9.369310271410669
              },
              "building" : "building"
            },
            "campaignId" : 6,
            "name" : "name",
            "express" : true,
            "id" : 0
          }, {
            "address" : {
              "number" : "number",
              "city" : "city",
              "street" : "street",
              "block" : "block",
              "gps" : {
                "latitude" : 9.965781217890562,
                "longitude" : 9.369310271410669
              },
              "building" : "building"
            },
            "campaignId" : 6,
            "name" : "name",
            "express" : true,
            "id" : 0
          } ],
          "warehouseGroups" : [ {
            "name" : "name",
            "warehouses" : [ {
              "address" : {
                "number" : "number",
                "city" : "city",
                "street" : "street",
                "block" : "block",
                "gps" : {
                  "latitude" : 9.965781217890562,
                  "longitude" : 9.369310271410669
                },
                "building" : "building"
              },
              "campaignId" : 6,
              "name" : "name",
              "express" : true,
              "id" : 0
            }, {
              "address" : {
                "number" : "number",
                "city" : "city",
                "street" : "street",
                "block" : "block",
                "gps" : {
                  "latitude" : 9.965781217890562,
                  "longitude" : 9.369310271410669
                },
                "building" : "building"
              },
              "campaignId" : 6,
              "name" : "name",
              "express" : true,
              "id" : 0
            } ],
            "mainWarehouse" : {
              "address" : {
                "number" : "number",
                "city" : "city",
                "street" : "street",
                "block" : "block",
                "gps" : {
                  "latitude" : 9.965781217890562,
                  "longitude" : 9.369310271410669
                },
                "building" : "building"
              },
              "campaignId" : 6,
              "name" : "name",
              "express" : true,
              "id" : 0
            }
          }, {
            "name" : "name",
            "warehouses" : [ {
              "address" : {
                "number" : "number",
                "city" : "city",
                "street" : "street",
                "block" : "block",
                "gps" : {
                  "latitude" : 9.965781217890562,
                  "longitude" : 9.369310271410669
                },
                "building" : "building"
              },
              "campaignId" : 6,
              "name" : "name",
              "express" : true,
              "id" : 0
            }, {
              "address" : {
                "number" : "number",
                "city" : "city",
                "street" : "street",
                "block" : "block",
                "gps" : {
                  "latitude" : 9.965781217890562,
                  "longitude" : 9.369310271410669
                },
                "building" : "building"
              },
              "campaignId" : 6,
              "name" : "name",
              "express" : true,
              "id" : 0
            } ],
            "mainWarehouse" : {
              "address" : {
                "number" : "number",
                "city" : "city",
                "street" : "street",
                "block" : "block",
                "gps" : {
                  "latitude" : 9.965781217890562,
                  "longitude" : 9.369310271410669
                },
                "building" : "building"
              },
              "campaignId" : 6,
              "name" : "name",
              "express" : true,
              "id" : 0
            }
          } ]
        },
        "properties" : {
          "warehouses" : {
            "description" : "Список складов, не входящих в группы.",
            "items" : {
              "$ref" : "#/components/schemas/WarehouseDTO"
            },
            "type" : "array"
          },
          "warehouseGroups" : {
            "description" : "Список групп складов.",
            "items" : {
              "$ref" : "#/components/schemas/WarehouseGroupDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "warehouseGroups", "warehouses" ],
        "type" : "object"
      },
      "FulfillmentWarehousesDTO" : {
        "description" : "Список складов Маркета (FBY).",
        "example" : {
          "warehouses" : [ {
            "address" : {
              "number" : "number",
              "city" : "city",
              "street" : "street",
              "block" : "block",
              "gps" : {
                "latitude" : 9.965781217890562,
                "longitude" : 9.369310271410669
              },
              "building" : "building"
            },
            "name" : "name",
            "id" : 0
          }, {
            "address" : {
              "number" : "number",
              "city" : "city",
              "street" : "street",
              "block" : "block",
              "gps" : {
                "latitude" : 9.965781217890562,
                "longitude" : 9.369310271410669
              },
              "building" : "building"
            },
            "name" : "name",
            "id" : 0
          } ]
        },
        "properties" : {
          "warehouses" : {
            "description" : "Список складов Маркета (FBY).",
            "items" : {
              "$ref" : "#/components/schemas/FulfillmentWarehouseDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "warehouses" ],
        "type" : "object"
      },
      "CategoryContentParametersDTO" : {
        "description" : "Информация о параметрах категории.",
        "example" : {
          "parameters" : [ {
            "values" : [ {
              "description" : "description",
              "id" : 5,
              "value" : "value"
            }, {
              "description" : "description",
              "id" : 5,
              "value" : "value"
            } ],
            "recommendationTypes" : [ "HAS_VIDEO", "HAS_VIDEO" ],
            "description" : "description",
            "type" : "TEXT",
            "constraints" : {
              "minValue" : 2.3021358869347655,
              "maxValue" : 7.061401241503109,
              "maxLength" : 9
            },
            "required" : true,
            "multivalue" : true,
            "unit" : {
              "defaultUnitId" : 1,
              "units" : [ {
                "name" : "кг",
                "fullName" : "килограмм",
                "id" : 5
              }, {
                "name" : "кг",
                "fullName" : "килограмм",
                "id" : 5
              } ]
            },
            "valueRestrictions" : [ {
              "limitedValues" : [ {
                "limitingOptionValueId" : 2,
                "optionValueIds" : [ 4, 4 ]
              }, {
                "limitingOptionValueId" : 2,
                "optionValueIds" : [ 4, 4 ]
              } ],
              "limitingParameterId" : 3
            }, {
              "limitedValues" : [ {
                "limitingOptionValueId" : 2,
                "optionValueIds" : [ 4, 4 ]
              }, {
                "limitingOptionValueId" : 2,
                "optionValueIds" : [ 4, 4 ]
              } ],
              "limitingParameterId" : 3
            } ],
            "distinctive" : true,
            "name" : "name",
            "id" : 6,
            "filtering" : true,
            "allowCustomValues" : true
          }, {
            "values" : [ {
              "description" : "description",
              "id" : 5,
              "value" : "value"
            }, {
              "description" : "description",
              "id" : 5,
              "value" : "value"
            } ],
            "recommendationTypes" : [ "HAS_VIDEO", "HAS_VIDEO" ],
            "description" : "description",
            "type" : "TEXT",
            "constraints" : {
              "minValue" : 2.3021358869347655,
              "maxValue" : 7.061401241503109,
              "maxLength" : 9
            },
            "required" : true,
            "multivalue" : true,
            "unit" : {
              "defaultUnitId" : 1,
              "units" : [ {
                "name" : "кг",
                "fullName" : "килограмм",
                "id" : 5
              }, {
                "name" : "кг",
                "fullName" : "килограмм",
                "id" : 5
              } ]
            },
            "valueRestrictions" : [ {
              "limitedValues" : [ {
                "limitingOptionValueId" : 2,
                "optionValueIds" : [ 4, 4 ]
              }, {
                "limitingOptionValueId" : 2,
                "optionValueIds" : [ 4, 4 ]
              } ],
              "limitingParameterId" : 3
            }, {
              "limitedValues" : [ {
                "limitingOptionValueId" : 2,
                "optionValueIds" : [ 4, 4 ]
              }, {
                "limitingOptionValueId" : 2,
                "optionValueIds" : [ 4, 4 ]
              } ],
              "limitingParameterId" : 3
            } ],
            "distinctive" : true,
            "name" : "name",
            "id" : 6,
            "filtering" : true,
            "allowCustomValues" : true
          } ],
          "categoryId" : 0
        },
        "properties" : {
          "categoryId" : {
            "description" : "Идентификатор категории на Маркете. Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).",
            "format" : "int32",
            "type" : "integer"
          },
          "parameters" : {
            "description" : "Список характеристик.",
            "items" : {
              "$ref" : "#/components/schemas/CategoryParameterDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "categoryId" ],
        "type" : "object"
      },
      "CategoryId" : {
        "description" : "Идентификатор категории на Маркете. Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).",
        "format" : "int32",
        "type" : "integer"
      },
      "OfferCardsContentStatusDTO" : {
        "description" : "Список товаров с информацией о состоянии карточек.",
        "example" : {
          "offerCards" : [ {
            "mapping" : {
              "marketSkuName" : "marketSkuName",
              "marketCategoryName" : "marketCategoryName",
              "marketCategoryId" : 4,
              "marketSku" : 3,
              "marketModelId" : 2,
              "marketModelName" : "marketModelName"
            },
            "warnings" : [ {
              "comment" : "comment",
              "message" : "message"
            }, {
              "comment" : "comment",
              "message" : "message"
            } ],
            "offerId" : "offerId",
            "contentRating" : 0,
            "recommendations" : [ {
              "type" : "HAS_VIDEO",
              "percent" : 60
            }, {
              "type" : "HAS_VIDEO",
              "percent" : 60
            } ],
            "cardStatus" : "HAS_CARD_CAN_NOT_UPDATE",
            "errors" : [ {
              "comment" : "comment",
              "message" : "message"
            }, {
              "comment" : "comment",
              "message" : "message"
            } ],
            "parameterValues" : [ {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            } ]
          }, {
            "mapping" : {
              "marketSkuName" : "marketSkuName",
              "marketCategoryName" : "marketCategoryName",
              "marketCategoryId" : 4,
              "marketSku" : 3,
              "marketModelId" : 2,
              "marketModelName" : "marketModelName"
            },
            "warnings" : [ {
              "comment" : "comment",
              "message" : "message"
            }, {
              "comment" : "comment",
              "message" : "message"
            } ],
            "offerId" : "offerId",
            "contentRating" : 0,
            "recommendations" : [ {
              "type" : "HAS_VIDEO",
              "percent" : 60
            }, {
              "type" : "HAS_VIDEO",
              "percent" : 60
            } ],
            "cardStatus" : "HAS_CARD_CAN_NOT_UPDATE",
            "errors" : [ {
              "comment" : "comment",
              "message" : "message"
            }, {
              "comment" : "comment",
              "message" : "message"
            } ],
            "parameterValues" : [ {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            }, {
              "valueId" : 5,
              "parameterId" : 1,
              "unitId" : 5,
              "value" : "value"
            } ]
          } ],
          "paging" : {
            "nextPageToken" : "nextPageToken"
          }
        },
        "properties" : {
          "offerCards" : {
            "description" : "Страница списка товаров с информацией о состоянии карточек.",
            "items" : {
              "$ref" : "#/components/schemas/OfferCardDTO"
            },
            "type" : "array"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardScrollingPagerDTO"
          }
        },
        "required" : [ "offerCards" ],
        "type" : "object"
      },
      "OfferContentDTO" : {
        "description" : "Товар с указанными характеристиками.",
        "example" : {
          "offerId" : "offerId",
          "categoryId" : 0,
          "parameterValues" : [ {
            "valueId" : 5,
            "parameterId" : 1,
            "unitId" : 5,
            "value" : "value"
          }, {
            "valueId" : 5,
            "parameterId" : 1,
            "unitId" : 5,
            "value" : "value"
          }, {
            "valueId" : 5,
            "parameterId" : 1,
            "unitId" : 5,
            "value" : "value"
          }, {
            "valueId" : 5,
            "parameterId" : 1,
            "unitId" : 5,
            "value" : "value"
          }, {
            "valueId" : 5,
            "parameterId" : 1,
            "unitId" : 5,
            "value" : "value"
          } ]
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "categoryId" : {
            "description" : "Идентификатор категории на Маркете. Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).",
            "format" : "int32",
            "type" : "integer"
          },
          "parameterValues" : {
            "description" : "Список характеристик с их значениями.\n\nС `parameterValues` обязательно передавайте `marketCategoryId` — идентификатор категории на Маркете, к которой относятся указанные характеристики товара.\n\nПри **изменении** характеристик передавайте только те, значение которых нужно обновить.\n\nЧтобы **удалить** значение заданной характеристики, передайте ее `parameterId` с пустым `value`.\n\nМаксимальное количество характеристик — 300.\n",
            "items" : {
              "$ref" : "#/components/schemas/ParameterValueDTO"
            },
            "maxItems" : 300,
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "categoryId", "offerId", "parameterValues" ],
        "type" : "object"
      },
      "UpdateOfferContentResultDTO" : {
        "description" : "Ошибки и предупреждения, которые появились из-за переданных характеристик.",
        "example" : {
          "warnings" : [ {
            "parameterId" : 0,
            "type" : "OFFER_NOT_FOUND",
            "message" : "message"
          }, {
            "parameterId" : 0,
            "type" : "OFFER_NOT_FOUND",
            "message" : "message"
          } ],
          "offerId" : "offerId",
          "errors" : [ {
            "parameterId" : 0,
            "type" : "OFFER_NOT_FOUND",
            "message" : "message"
          }, {
            "parameterId" : 0,
            "type" : "OFFER_NOT_FOUND",
            "message" : "message"
          } ]
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "errors" : {
            "description" : "Ошибки — информация в каталоге не обновится.",
            "items" : {
              "$ref" : "#/components/schemas/OfferContentErrorDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "warnings" : {
            "description" : "Предупреждения — информация в каталоге обновится.",
            "items" : {
              "$ref" : "#/components/schemas/OfferContentErrorDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "offerId" ],
        "type" : "object"
      },
      "CreateChatResultDTO" : {
        "description" : "Информация о созданном чате.",
        "example" : {
          "chatId" : 0
        },
        "properties" : {
          "chatId" : {
            "description" : "Идентификатор чата.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "chatId" ],
        "type" : "object"
      },
      "ChatType" : {
        "description" : "Тип чата:\n\n* `CHAT` — чат с покупателем.\n* `ARBITRAGE` — спор.\n",
        "enum" : [ "CHAT", "ARBITRAGE" ],
        "type" : "string"
      },
      "ChatStatusType" : {
        "description" : "Статус чата:\n\n* `NEW` — новый чат.\n* `WAITING_FOR_CUSTOMER` — нужен ответ покупателя.\n* `WAITING_FOR_PARTNER` — нужен ответ магазина.\n* `WAITING_FOR_ARBITER` — нужен ответ арбитра.\n* `WAITING_FOR_MARKET` — нужен ответ Маркета.\n* `FINISHED` — чат завершен.\n",
        "enum" : [ "NEW", "WAITING_FOR_CUSTOMER", "WAITING_FOR_PARTNER", "WAITING_FOR_ARBITER", "WAITING_FOR_MARKET", "FINISHED" ],
        "type" : "string"
      },
      "GetChatsInfoDTO" : {
        "description" : "Список чатов.",
        "example" : {
          "chats" : [ {
            "createdAt" : "2000-01-23T04:56:07.000+00:00",
            "chatId" : 0,
            "orderId" : 6,
            "type" : "CHAT",
            "status" : "NEW",
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          }, {
            "createdAt" : "2000-01-23T04:56:07.000+00:00",
            "chatId" : 0,
            "orderId" : 6,
            "type" : "CHAT",
            "status" : "NEW",
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          } ],
          "paging" : {
            "nextPageToken" : "nextPageToken"
          }
        },
        "properties" : {
          "chats" : {
            "description" : "Информация о чатах.",
            "items" : {
              "$ref" : "#/components/schemas/GetChatInfoDTO"
            },
            "type" : "array"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardScrollingPagerDTO"
          }
        },
        "required" : [ "chats" ],
        "type" : "object"
      },
      "ChatMessagesResultDTO" : {
        "description" : "Информация о сообщениях.",
        "example" : {
          "orderId" : 0,
          "messages" : [ {
            "createdAt" : "2000-01-23T04:56:07.000+00:00",
            "sender" : "PARTNER",
            "payload" : [ {
              "size" : 1,
              "name" : "name",
              "url" : "url"
            }, {
              "size" : 1,
              "name" : "name",
              "url" : "url"
            } ],
            "messageId" : 6,
            "message" : "message"
          }, {
            "createdAt" : "2000-01-23T04:56:07.000+00:00",
            "sender" : "PARTNER",
            "payload" : [ {
              "size" : 1,
              "name" : "name",
              "url" : "url"
            }, {
              "size" : 1,
              "name" : "name",
              "url" : "url"
            } ],
            "messageId" : 6,
            "message" : "message"
          } ],
          "paging" : {
            "nextPageToken" : "nextPageToken"
          }
        },
        "properties" : {
          "orderId" : {
            "description" : "Идентификатор заказа.",
            "format" : "int64",
            "type" : "integer"
          },
          "messages" : {
            "description" : "Информация о сообщениях.",
            "items" : {
              "$ref" : "#/components/schemas/ChatMessageDTO"
            },
            "type" : "array"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardScrollingPagerDTO"
          }
        },
        "required" : [ "messages", "orderId" ],
        "type" : "object"
      },
      "CalculateTariffsParametersDTO" : {
        "description" : "Параметры для расчета стоимости услуг.",
        "example" : {
          "campaignId" : 0,
          "sellingProgram" : "FBY",
          "frequency" : "DAILY"
        },
        "properties" : {
          "campaignId" : {
            "description" : "Идентификатор кампании. У пользователя, который выполняет запрос, должен быть доступ к этой кампании.\n\nИспользуйте параметр `campaignId`, если уже завершили подключение магазина на Маркете. Иначе вернется пустой список.\n\nОбязательный параметр, если не указан параметр `sellingProgram`. Совместное использование параметров приведет к ошибке.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "sellingProgram" : {
            "$ref" : "#/components/schemas/SellingProgramType"
          },
          "frequency" : {
            "$ref" : "#/components/schemas/PaymentFrequencyType"
          }
        },
        "type" : "object"
      },
      "CalculateTariffsOfferDTO" : {
        "description" : "Параметры товара, для которого нужно рассчитать стоимость услуг.",
        "example" : {
          "quantity" : 1,
          "price" : 0.6027456183070403,
          "length" : 0.14658129805029452,
          "width" : 0.5962133916683182,
          "weight" : 0.23021358869347652,
          "categoryId" : 0,
          "height" : 0.5637376656633328
        },
        "properties" : {
          "categoryId" : {
            "description" : "Идентификатор категории товара на Маркете.\n\nДля расчета стоимости услуг необходимо указать идентификатор листовой категории товара — той, которая не имеет дочерних категорий.\n\nЧтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).\n",
            "exclusiveMinimum" : true,
            "format" : "int64",
            "minimum" : 0,
            "type" : "integer"
          },
          "price" : {
            "description" : "Цена на товар в рублях.",
            "exclusiveMinimum" : true,
            "minimum" : 0,
            "type" : "number"
          },
          "length" : {
            "description" : "Длина товара в сантиметрах.",
            "exclusiveMinimum" : true,
            "minimum" : 0,
            "type" : "number"
          },
          "width" : {
            "description" : "Ширина товара в сантиметрах.",
            "exclusiveMinimum" : true,
            "minimum" : 0,
            "type" : "number"
          },
          "height" : {
            "description" : "Высота товара в сантиметрах.",
            "exclusiveMinimum" : true,
            "minimum" : 0,
            "type" : "number"
          },
          "weight" : {
            "description" : "Вес товара в килограммах.",
            "exclusiveMinimum" : true,
            "minimum" : 0,
            "type" : "number"
          },
          "quantity" : {
            "default" : 1,
            "description" : "Квант продажи — количество единиц товара в одном товарном предложении.",
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        },
        "required" : [ "categoryId", "height", "length", "price", "weight", "width" ],
        "type" : "object"
      },
      "CalculateTariffsResponseDTO" : {
        "description" : "Расчет стоимости услуг.",
        "example" : {
          "offers" : [ {
            "offer" : {
              "quantity" : 1,
              "price" : 0.6027456183070403,
              "length" : 0.14658129805029452,
              "width" : 0.5962133916683182,
              "weight" : 0.23021358869347652,
              "categoryId" : 0,
              "height" : 0.5637376656633328
            },
            "tariffs" : [ {
              "amount" : 9.301444243932576,
              "type" : "AGENCY_COMMISSION",
              "parameters" : [ {
                "name" : "name",
                "value" : "value"
              }, {
                "name" : "name",
                "value" : "value"
              } ]
            }, {
              "amount" : 9.301444243932576,
              "type" : "AGENCY_COMMISSION",
              "parameters" : [ {
                "name" : "name",
                "value" : "value"
              }, {
                "name" : "name",
                "value" : "value"
              } ]
            } ]
          }, {
            "offer" : {
              "quantity" : 1,
              "price" : 0.6027456183070403,
              "length" : 0.14658129805029452,
              "width" : 0.5962133916683182,
              "weight" : 0.23021358869347652,
              "categoryId" : 0,
              "height" : 0.5637376656633328
            },
            "tariffs" : [ {
              "amount" : 9.301444243932576,
              "type" : "AGENCY_COMMISSION",
              "parameters" : [ {
                "name" : "name",
                "value" : "value"
              }, {
                "name" : "name",
                "value" : "value"
              } ]
            }, {
              "amount" : 9.301444243932576,
              "type" : "AGENCY_COMMISSION",
              "parameters" : [ {
                "name" : "name",
                "value" : "value"
              }, {
                "name" : "name",
                "value" : "value"
              } ]
            } ]
          } ]
        },
        "properties" : {
          "offers" : {
            "description" : "Стоимость услуг.",
            "items" : {
              "$ref" : "#/components/schemas/CalculateTariffsOfferInfoDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "offers" ],
        "type" : "object"
      },
      "LanguageType" : {
        "description" : "Язык:\n\n* `RU` — русский.\n\n* `EN` — английский.\n",
        "enum" : [ "RU", "EN" ],
        "type" : "string"
      },
      "CategoryDTO" : {
        "description" : "Информация о категории.\n\nКатегория считается листовой, если у нее нет дочерних категорий.\n",
        "example" : {
          "children" : [ null, null ],
          "name" : "name",
          "id" : 0
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор категории.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Название категории.",
            "type" : "string"
          },
          "children" : {
            "description" : "Дочерние категории.",
            "items" : {
              "$ref" : "#/components/schemas/CategoryDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "id", "name" ],
        "type" : "object"
      },
      "GetCategoriesMaxSaleQuantumDTO" : {
        "description" : "Категории и лимит на установку кванта и минимального количества товаров.",
        "properties" : {
          "results" : {
            "description" : "Категории и лимит на установку кванта и минимального количества товаров.",
            "items" : {
              "$ref" : "#/components/schemas/MaxSaleQuantumDTO"
            },
            "type" : "array"
          },
          "errors" : {
            "description" : "Ошибки, которые появились из-за переданных категорий.",
            "items" : {
              "$ref" : "#/components/schemas/CategoryErrorDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "results" ],
        "type" : "object"
      },
      "CampaignsQualityRatingDTO" : {
        "description" : "Информация об индексе качества магазинов.",
        "example" : {
          "campaignRatings" : [ {
            "campaignId" : 0,
            "ratings" : [ {
              "components" : [ {
                "componentType" : "DBS_CANCELLATION_RATE",
                "value" : 14.658129805029452
              }, {
                "componentType" : "DBS_CANCELLATION_RATE",
                "value" : 14.658129805029452
              } ],
              "rating" : 60,
              "calculationDate" : "2000-01-23"
            }, {
              "components" : [ {
                "componentType" : "DBS_CANCELLATION_RATE",
                "value" : 14.658129805029452
              }, {
                "componentType" : "DBS_CANCELLATION_RATE",
                "value" : 14.658129805029452
              } ],
              "rating" : 60,
              "calculationDate" : "2000-01-23"
            } ]
          }, {
            "campaignId" : 0,
            "ratings" : [ {
              "components" : [ {
                "componentType" : "DBS_CANCELLATION_RATE",
                "value" : 14.658129805029452
              }, {
                "componentType" : "DBS_CANCELLATION_RATE",
                "value" : 14.658129805029452
              } ],
              "rating" : 60,
              "calculationDate" : "2000-01-23"
            }, {
              "components" : [ {
                "componentType" : "DBS_CANCELLATION_RATE",
                "value" : 14.658129805029452
              }, {
                "componentType" : "DBS_CANCELLATION_RATE",
                "value" : 14.658129805029452
              } ],
              "rating" : 60,
              "calculationDate" : "2000-01-23"
            } ]
          } ]
        },
        "properties" : {
          "campaignRatings" : {
            "description" : "Список магазинов c информацией об их индексе качества.",
            "items" : {
              "$ref" : "#/components/schemas/CampaignQualityRatingDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "campaignRatings" ],
        "type" : "object"
      },
      "QualityRatingDetailsDTO" : {
        "description" : "Информация о заказах, которые повлияли на индекс качества.",
        "example" : {
          "affectedOrders" : [ {
            "componentType" : "DBS_CANCELLATION_RATE",
            "orderId" : 0,
            "description" : "description"
          }, {
            "componentType" : "DBS_CANCELLATION_RATE",
            "orderId" : 0,
            "description" : "description"
          } ]
        },
        "properties" : {
          "affectedOrders" : {
            "description" : "Список заказов, которые повлияли на индекс качества.",
            "items" : {
              "$ref" : "#/components/schemas/QualityRatingAffectedOrderDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "affectedOrders" ],
        "type" : "object"
      },
      "PromoParticipationType" : {
        "description" : "Какие акции вернутся:\n\n* `PARTICIPATING_NOW` — текущие и будущие акции продавца.\n\n* `PARTICIPATED` — завершенные акции продавца за последний год. Если за год их было меньше 15, в ответе придут 15 последних акций за все время.\n",
        "enum" : [ "PARTICIPATING_NOW", "PARTICIPATED" ],
        "type" : "string"
      },
      "MechanicsType" : {
        "description" : "Тип акции:\n\n* `DIRECT_DISCOUNT` — прямая скидка.\n\n* `BLUE_FLASH` — флеш-акция.\n\n* `MARKET_PROMOCODE` — скидка по промокоду.\n",
        "enum" : [ "DIRECT_DISCOUNT", "BLUE_FLASH", "MARKET_PROMOCODE" ],
        "type" : "string"
      },
      "GetPromosResultDTO" : {
        "description" : "Информация об акциях Маркета.",
        "example" : {
          "promos" : [ {
            "period" : {
              "dateTimeFrom" : "2000-01-23T04:56:07.000+00:00",
              "dateTimeTo" : "2000-01-23T04:56:07.000+00:00"
            },
            "channels" : [ "{}", "{}" ],
            "mechanicsInfo" : {
              "promocodeInfo" : {
                "promocode" : "promocode",
                "discount" : 1
              },
              "type" : "DIRECT_DISCOUNT"
            },
            "bestsellerInfo" : {
              "bestseller" : true,
              "entryDeadline" : "2000-01-23T04:56:07.000+00:00"
            },
            "name" : "name",
            "participating" : true,
            "id" : "id",
            "constraints" : {
              "warehouseIds" : [ 5, 5 ]
            },
            "assortmentInfo" : {
              "activeOffers" : 0,
              "processing" : true,
              "potentialOffers" : 6
            }
          }, {
            "period" : {
              "dateTimeFrom" : "2000-01-23T04:56:07.000+00:00",
              "dateTimeTo" : "2000-01-23T04:56:07.000+00:00"
            },
            "channels" : [ "{}", "{}" ],
            "mechanicsInfo" : {
              "promocodeInfo" : {
                "promocode" : "promocode",
                "discount" : 1
              },
              "type" : "DIRECT_DISCOUNT"
            },
            "bestsellerInfo" : {
              "bestseller" : true,
              "entryDeadline" : "2000-01-23T04:56:07.000+00:00"
            },
            "name" : "name",
            "participating" : true,
            "id" : "id",
            "constraints" : {
              "warehouseIds" : [ 5, 5 ]
            },
            "assortmentInfo" : {
              "activeOffers" : 0,
              "processing" : true,
              "potentialOffers" : 6
            }
          } ]
        },
        "properties" : {
          "promos" : {
            "description" : "Акции Маркета.",
            "items" : {
              "$ref" : "#/components/schemas/GetPromoDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "promos" ],
        "type" : "object"
      },
      "PromoOfferParticipationStatusFilterType" : {
        "description" : "Фильтр для товаров, которые добавлены в акцию вручную:\n\n* `MANUALLY_ADDED` — товары, которые добавлены вручную.\n\n* `NOT_MANUALLY_ADDED`— товары, которые не участвуют в акции и те, которые добавлены автоматически.\n\nЕсли не передать параметр `statusType`, вернутся все товары.\n\nОб автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).\n",
        "enum" : [ "MANUALLY_ADDED", "NOT_MANUALLY_ADDED" ],
        "type" : "string"
      },
      "GetPromoOffersResultDTO" : {
        "description" : "Список товаров, которые участвуют или могут участвовать в акции.",
        "example" : {
          "offers" : [ {
            "offerId" : "offerId",
            "params" : {
              "discountParams" : {
                "promoPrice" : 6,
                "maxPromoPrice" : 1,
                "price" : 0
              },
              "promocodeParams" : {
                "maxPrice" : 5
              }
            },
            "status" : "AUTO",
            "autoParticipatingDetails" : {
              "campaignIds" : [ 5, 5 ]
            }
          }, {
            "offerId" : "offerId",
            "params" : {
              "discountParams" : {
                "promoPrice" : 6,
                "maxPromoPrice" : 1,
                "price" : 0
              },
              "promocodeParams" : {
                "maxPrice" : 5
              }
            },
            "status" : "AUTO",
            "autoParticipatingDetails" : {
              "campaignIds" : [ 5, 5 ]
            }
          } ],
          "paging" : {
            "nextPageToken" : "nextPageToken"
          }
        },
        "properties" : {
          "offers" : {
            "description" : "Товары, которые участвуют или могут участвовать в акции.",
            "items" : {
              "$ref" : "#/components/schemas/GetPromoOfferDTO"
            },
            "type" : "array"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardScrollingPagerDTO"
          }
        },
        "required" : [ "offers" ],
        "type" : "object"
      },
      "UpdatePromoOfferDTO" : {
        "description" : "Описание товаров, которые участвуют в акции.",
        "example" : {
          "offerId" : "offerId",
          "params" : {
            "discountParams" : {
              "promoPrice" : 1,
              "price" : 1
            }
          }
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "params" : {
            "$ref" : "#/components/schemas/UpdatePromoOfferParamsDTO"
          }
        },
        "required" : [ "offerId" ],
        "type" : "object"
      },
      "UpdatePromoOffersResultDTO" : {
        "description" : "Ошибки и предупреждения, которые появились при добавлении товаров в акцию.",
        "example" : {
          "rejectedOffers" : [ {
            "reason" : "OFFER_DOES_NOT_EXIST",
            "offerId" : "offerId"
          }, {
            "reason" : "OFFER_DOES_NOT_EXIST",
            "offerId" : "offerId"
          } ],
          "warningOffers" : [ {
            "warnings" : [ {
              "code" : "DEEP_DISCOUNT_OFFER",
              "campaignIds" : [ 0, 0 ]
            }, {
              "code" : "DEEP_DISCOUNT_OFFER",
              "campaignIds" : [ 0, 0 ]
            } ],
            "offerId" : "offerId"
          }, {
            "warnings" : [ {
              "code" : "DEEP_DISCOUNT_OFFER",
              "campaignIds" : [ 0, 0 ]
            }, {
              "code" : "DEEP_DISCOUNT_OFFER",
              "campaignIds" : [ 0, 0 ]
            } ],
            "offerId" : "offerId"
          } ]
        },
        "properties" : {
          "rejectedOffers" : {
            "description" : "Изменения, которые были отклонены.\n\nВозвращается, только если есть отклоненные изменения.\n",
            "items" : {
              "$ref" : "#/components/schemas/RejectedPromoOfferUpdateDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "warningOffers" : {
            "description" : "Изменения, по которым есть предупреждения. Они информируют о возможных проблемах. Информация о товарах обновится.\n\nВозвращается, только если есть предупреждения.\n",
            "items" : {
              "$ref" : "#/components/schemas/WarningPromoOfferUpdateDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "DeletePromoOffersResultDTO" : {
        "description" : "Результат удаления товаров из акции.\n\nВозвращается, только если в запросе был передан параметр `offerIds`.\n",
        "example" : {
          "rejectedOffers" : [ {
            "reason" : "OFFER_DOES_NOT_EXIST",
            "offerId" : "offerId"
          }, {
            "reason" : "OFFER_DOES_NOT_EXIST",
            "offerId" : "offerId"
          } ]
        },
        "properties" : {
          "rejectedOffers" : {
            "description" : "Товары, при удалении которых появились ошибки.\n\nВозвращается, только если есть такие товары.\n",
            "items" : {
              "$ref" : "#/components/schemas/RejectedPromoOfferDeleteDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ApiResponseStatusType" : {
        "description" : "Тип ответа.",
        "enum" : [ "OK", "ERROR" ],
        "type" : "string"
      },
      "BusinessDTO" : {
        "description" : "Информация о кабинете.",
        "example" : {
          "name" : "name",
          "id" : 0
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор кабинета.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Название бизнеса.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BusinessSettingsDTO" : {
        "description" : "Настройки кабинета.",
        "example" : {
          "currency" : "RUR",
          "onlyDefaultPrice" : true
        },
        "properties" : {
          "onlyDefaultPrice" : {
            "description" : "Можно ли установить только [базовую цену](*rule):\n* `false` — можно задать и базовую цену, и цены в конкретных магазинах.\n* `true` — можно задать только базовую цену.\n",
            "type" : "boolean"
          },
          "currency" : {
            "$ref" : "#/components/schemas/CurrencyType"
          }
        },
        "type" : "object"
      },
      "ApiErrorDTO" : {
        "description" : "Общий формат ошибки.",
        "example" : {
          "code" : "code",
          "message" : "message"
        },
        "properties" : {
          "code" : {
            "description" : "Код ошибки.",
            "type" : "string"
          },
          "message" : {
            "description" : "Описание ошибки.",
            "type" : "string"
          }
        },
        "required" : [ "code" ],
        "type" : "object"
      },
      "CampaignSettingsLocalRegionDTO" : {
        "description" : "Информация о своем регионе магазина.",
        "example" : {
          "delivery" : {
            "schedule" : {
              "customWorkingDays" : [ "23-09-2022", "23-09-2022" ],
              "period" : {
                "fromDate" : "23-09-2022",
                "toDate" : "23-09-2022"
              },
              "customHolidays" : [ "23-09-2022", "23-09-2022" ],
              "weeklyHolidays" : [ 1, 1 ],
              "availableOnHolidays" : true,
              "totalHolidays" : [ "23-09-2022", "23-09-2022" ]
            }
          },
          "name" : "name",
          "id" : 6,
          "type" : "OTHER",
          "deliveryOptionsSource" : "WEB"
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор региона.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Название региона.",
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/RegionType"
          },
          "deliveryOptionsSource" : {
            "$ref" : "#/components/schemas/CampaignSettingsScheduleSourceType"
          },
          "delivery" : {
            "$ref" : "#/components/schemas/CampaignSettingsDeliveryDTO"
          }
        },
        "type" : "object"
      },
      "RegionType" : {
        "description" : "Тип региона.\n\nВозможные значения:\n\n* `CITY_DISTRICT` — район города.\n\n* `CITY` — крупный город.\n\n* `CONTINENT` — континент.\n\n* `COUNTRY_DISTRICT` — область.\n\n* `COUNTRY` — страна.\n\n* `REGION` — регион.\n\n* `REPUBLIC_AREA` — район субъекта федерации.\n\n* `REPUBLIC` — субъект федерации.\n\n* `SUBWAY_STATION` — станция метро.\n\n* `VILLAGE` — город.\n\n* `OTHER` — неизвестный регион.\n",
        "enum" : [ "OTHER", "CONTINENT", "REGION", "COUNTRY", "COUNTRY_DISTRICT", "REPUBLIC", "CITY", "VILLAGE", "CITY_DISTRICT", "SUBWAY_STATION", "REPUBLIC_AREA" ],
        "type" : "string"
      },
      "DateDdMmYyyyHhMmSs" : {
        "example" : "23-09-2022 09:12:41",
        "format" : "date-dd-MM-yyyy-HH-mm-ss",
        "type" : "string"
      },
      "OrderPaymentType" : {
        "description" : "Тип оплаты заказа:\n\n* `PREPAID` — оплата при оформлении заказа.\n\n* `POSTPAID` — оплата при получении заказа.\n\n* `UNKNOWN` — неизвестный тип.\n\nЕсли параметр отсутствует, заказ будет оплачен при получении.\n",
        "enum" : [ "PREPAID", "POSTPAID", "UNKNOWN" ],
        "type" : "string"
      },
      "OrderPaymentMethodType" : {
        "description" : "Способ оплаты заказа:\n\n* Значения, если выбрана оплата при оформлении заказа (`\"paymentType\": \"PREPAID\"`):\n\n  * `YANDEX` — банковской картой.\n\n  * `APPLE_PAY` — Apple Pay.\n\n  * `GOOGLE_PAY` — Google Pay.\n\n  * `CREDIT` — в кредит.\n\n  * `TINKOFF_CREDIT` — в кредит в Тинькофф Банке.\n\n  * `TINKOFF_INSTALLMENTS` — рассрочка в Тинькофф Банке.\n\n  * `EXTERNAL_CERTIFICATE` — подарочным сертификатом (например, из приложения «Сбербанк Онлайн»).\n\n  * `SBP` — через систему быстрых платежей.\n\n  * `B2B_ACCOUNT_PREPAYMENT` — заказ оплачивает организация.\n\n\n* Значения, если выбрана оплата при получении заказа (`\"paymentType\": \"POSTPAID\"`):\n\n  * `CARD_ON_DELIVERY` — банковской картой.\n\n  * `BOUND_CARD_ON_DELIVERY` — привязанной картой при получении.\n\n  * `CASH_ON_DELIVERY` — наличными.\n\n  * `B2B_ACCOUNT_POSTPAYMENT` — заказ оплачивает организация после доставки.\n\n* `UNKNOWN` — неизвестный тип.\n\nЗначение по умолчанию: `CASH_ON_DELIVERY`.\n",
        "enum" : [ "CASH_ON_DELIVERY", "CARD_ON_DELIVERY", "BOUND_CARD_ON_DELIVERY", "YANDEX", "APPLE_PAY", "EXTERNAL_CERTIFICATE", "CREDIT", "GOOGLE_PAY", "TINKOFF_CREDIT", "SBP", "TINKOFF_INSTALLMENTS", "B2B_ACCOUNT_PREPAYMENT", "B2B_ACCOUNT_POSTPAYMENT", "UNKNOWN" ],
        "type" : "string"
      },
      "OrderItemDTO" : {
        "description" : "Список товаров в заказе.",
        "example" : {
          "offerName" : "offerName",
          "subsidy" : 1.0246457001441578,
          "instances" : [ {
            "rnpt" : "rnpt",
            "gtd" : "gtd",
            "cisFull" : "cisFull",
            "uin" : "uin",
            "cis" : "cis"
          }, {
            "rnpt" : "rnpt",
            "gtd" : "gtd",
            "cisFull" : "cisFull",
            "uin" : "uin",
            "cis" : "cis"
          } ],
          "priceBeforeDiscount" : 7.386281948385884,
          "count" : 1,
          "vat" : "NO_VAT",
          "requiredInstanceTypes" : [ "CIS", "CIS" ],
          "buyerPriceBeforeDiscount" : 4.145608029883936,
          "shopSku" : "shopSku",
          "price" : 3.616076749251911,
          "partnerWarehouseId" : "partnerWarehouseId",
          "subsidies" : [ {
            "amount" : 1.1730742509559433,
            "type" : "YANDEX_CASHBACK"
          }, {
            "amount" : 1.1730742509559433,
            "type" : "YANDEX_CASHBACK"
          } ],
          "offerId" : "offerId",
          "buyerPrice" : 2.027123023002322,
          "details" : [ {
            "updateDate" : "23-09-2022",
            "itemStatus" : "REJECTED",
            "itemCount" : 7
          }, {
            "updateDate" : "23-09-2022",
            "itemStatus" : "REJECTED",
            "itemCount" : 7
          } ],
          "id" : 9,
          "promos" : [ {
            "subsidy" : 6.84685269835264,
            "shopPromoId" : "shopPromoId",
            "discount" : 1.4894159098541704,
            "marketPromoId" : "marketPromoId",
            "type" : "DIRECT_DISCOUNT"
          }, {
            "subsidy" : 6.84685269835264,
            "shopPromoId" : "shopPromoId",
            "discount" : 1.4894159098541704,
            "marketPromoId" : "marketPromoId",
            "type" : "DIRECT_DISCOUNT"
          } ]
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор товара в заказе.\n\nПозволяет идентифицировать товар в рамках данного заказа.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "offerName" : {
            "description" : "Название товара.",
            "type" : "string"
          },
          "price" : {
            "description" : "Цена на товар в валюте заказа без учета вознаграждения партнеру за скидки по промокодам, купонам и акциям (параметр `subsidies`).\n",
            "format" : "decimal",
            "type" : "number"
          },
          "buyerPrice" : {
            "description" : "Цена на товар в валюте покупателя. В цене уже учтены скидки по:\n\n* акциям;\n* купонам;\n* промокодам.\n",
            "format" : "decimal",
            "type" : "number"
          },
          "buyerPriceBeforeDiscount" : {
            "description" : "Стоимость товара в валюте покупателя до применения скидок по:\n\n* акциям;\n* купонам;\n* промокодам.\n",
            "format" : "decimal",
            "type" : "number"
          },
          "priceBeforeDiscount" : {
            "deprecated" : true,
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел.\n\n{% endnote %}\n\nСтоимость товара в валюте магазина до применения скидок.\n",
            "format" : "decimal",
            "type" : "number"
          },
          "count" : {
            "description" : "Количество единиц товара.",
            "type" : "integer"
          },
          "vat" : {
            "$ref" : "#/components/schemas/OrderVatType"
          },
          "shopSku" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "subsidy" : {
            "deprecated" : true,
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Вместо него используйте `subsidies`.\n\n{% endnote %}\n\nОбщее вознаграждение партнеру за DBS-доставку и все скидки на товар:\n\n* по промокодам;\n* по купонам;\n* по баллам Плюса;\n* по акциям.\n\nПередается в валюте заказа.\n",
            "format" : "decimal",
            "type" : "number"
          },
          "partnerWarehouseId" : {
            "deprecated" : true,
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nИдентификатор склада в системе партнера, на который сформирован заказ.\n",
            "type" : "string"
          },
          "promos" : {
            "description" : "Информация о вознаграждениях партнеру за скидки на товар по промокодам, купонам и акциям.",
            "items" : {
              "$ref" : "#/components/schemas/OrderItemPromoDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "instances" : {
            "description" : "Информация о маркировке единиц товара.\n\nВозвращаются данные для маркировки, переданные в запросе [PUT campaigns/{campaignId}/orders/{orderId}/cis](../../reference/orders/provideOrderItemCis.md).\n\nЕсли магазин еще не передавал коды для этого заказа, `instances` отсутствует.\n",
            "items" : {
              "$ref" : "#/components/schemas/OrderItemInstanceDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "details" : {
            "description" : "Информация об удалении товара из заказа.\n",
            "items" : {
              "$ref" : "#/components/schemas/OrderItemDetailDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "subsidies" : {
            "description" : "Список субсидий по типам.",
            "items" : {
              "$ref" : "#/components/schemas/OrderItemSubsidyDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "requiredInstanceTypes" : {
            "description" : "Список необходимых маркировок товара.",
            "items" : {
              "$ref" : "#/components/schemas/OrderItemInstanceType"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "OrderSubsidyDTO" : {
        "description" : "Общее вознаграждение партнеру за DBS-доставку и все скидки на товар:\n\n* по промокодам, купонам и акциям;\n* по баллам Плюса;\n* по доставке (DBS).\n\nПередается в валюте заказа.\n",
        "example" : {
          "amount" : 4.965218492984954,
          "type" : "YANDEX_CASHBACK"
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/OrderSubsidyType"
          },
          "amount" : {
            "description" : "Сумма субсидии.",
            "format" : "decimal",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "OrderDeliveryDTO" : {
        "description" : "Информация о доставке.",
        "example" : {
          "dispatchType" : "UNKNOWN",
          "address" : {
            "country" : "country",
            "city" : "city",
            "postcode" : "postcode",
            "gps" : {
              "latitude" : 9.965781217890562,
              "longitude" : 9.369310271410669
            },
            "house" : "house",
            "subway" : "subway",
            "phone" : "phone",
            "street" : "street",
            "district" : "district",
            "recipient" : "recipient",
            "entryphone" : "entryphone",
            "block" : "block",
            "entrance" : "entrance",
            "floor" : "floor",
            "apartment" : "apartment"
          },
          "liftType" : "NOT_NEEDED",
          "deliveryServiceId" : 6,
          "vat" : null,
          "estimated" : true,
          "dates" : {
            "fromDate" : "23-09-2022",
            "toDate" : "23-09-2022",
            "fromTime" : "fromTime",
            "toTime" : "toTime",
            "realDeliveryDate" : "23-09-2022"
          },
          "type" : "DELIVERY",
          "serviceName" : "serviceName",
          "shipments" : [ {
            "boxes" : [ {
              "fulfilmentId" : "fulfilmentId",
              "id" : 3
            }, {
              "fulfilmentId" : "fulfilmentId",
              "id" : 3
            } ],
            "id" : 6,
            "shipmentDate" : "23-09-2022",
            "shipmentTime" : "shipmentTime",
            "tracks" : [ {
              "trackCode" : "trackCode",
              "deliveryServiceId" : 9
            }, {
              "trackCode" : "trackCode",
              "deliveryServiceId" : 9
            } ]
          }, {
            "boxes" : [ {
              "fulfilmentId" : "fulfilmentId",
              "id" : 3
            }, {
              "fulfilmentId" : "fulfilmentId",
              "id" : 3
            } ],
            "id" : 6,
            "shipmentDate" : "23-09-2022",
            "shipmentTime" : "shipmentTime",
            "tracks" : [ {
              "trackCode" : "trackCode",
              "deliveryServiceId" : 9
            }, {
              "trackCode" : "trackCode",
              "deliveryServiceId" : 9
            } ]
          } ],
          "tracks" : [ {
            "trackCode" : "trackCode",
            "deliveryServiceId" : 9
          }, {
            "trackCode" : "trackCode",
            "deliveryServiceId" : 9
          } ],
          "courier" : {
            "vehicleDescription" : "vehicleDescription",
            "phone" : "phone",
            "phoneExtension" : "phoneExtension",
            "fullName" : "fullName",
            "vehicleNumber" : "vehicleNumber"
          },
          "price" : 5.025004791520295,
          "outletStorageLimitDate" : "23-09-2022",
          "eacType" : "MERCHANT_TO_COURIER",
          "liftPrice" : 8.762042012749001,
          "eacCode" : "eacCode",
          "id" : "id",
          "region" : {
            "parent" : null,
            "children" : [ null, null ],
            "name" : "name",
            "id" : 0,
            "type" : "OTHER"
          },
          "deliveryPartnerType" : "SHOP",
          "outletCode" : "outletCode"
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор доставки, присвоенный магазином.\n\nУказывается, только если магазин передал данный идентификатор в ответе на запрос методом [POST cart](../../pushapi/reference/cart.md).\n",
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/OrderDeliveryType"
          },
          "serviceName" : {
            "description" : "Наименование службы доставки.",
            "type" : "string"
          },
          "price" : {
            "deprecated" : true,
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Стоимость доставки смотрите в параметре `deliveryTotal`.\n\n{% endnote %}\n\nСтоимость доставки в валюте заказа.\n",
            "format" : "decimal",
            "type" : "number"
          },
          "deliveryPartnerType" : {
            "$ref" : "#/components/schemas/OrderDeliveryPartnerType"
          },
          "courier" : {
            "$ref" : "#/components/schemas/OrderCourierDTO"
          },
          "dates" : {
            "$ref" : "#/components/schemas/OrderDeliveryDatesDTO"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionDTO"
          },
          "address" : {
            "$ref" : "#/components/schemas/OrderDeliveryAddressDTO"
          },
          "vat" : {
            "$ref" : "#/components/schemas/OrderVatType"
          },
          "deliveryServiceId" : {
            "description" : "Идентификатор службы доставки.",
            "format" : "int64",
            "type" : "integer"
          },
          "liftType" : {
            "$ref" : "#/components/schemas/OrderLiftType"
          },
          "liftPrice" : {
            "description" : "Стоимость подъема на этаж.",
            "format" : "decimal",
            "type" : "number"
          },
          "outletCode" : {
            "description" : "Идентификатор пункта самовывоза, присвоенный магазином.",
            "type" : "string"
          },
          "outletStorageLimitDate" : {
            "description" : "Формат даты: `ДД-ММ-ГГГГ`.\n",
            "example" : "23-09-2022",
            "format" : "date-dd-MM-yyyy",
            "type" : "string"
          },
          "dispatchType" : {
            "$ref" : "#/components/schemas/OrderDeliveryDispatchType"
          },
          "tracks" : {
            "description" : "Информация для отслеживания перемещений посылки.",
            "items" : {
              "$ref" : "#/components/schemas/OrderTrackDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "shipments" : {
            "description" : "Информация о посылках.",
            "items" : {
              "$ref" : "#/components/schemas/OrderShipmentDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "estimated" : {
            "description" : "Приблизительная ли дата доставки.",
            "type" : "boolean"
          },
          "eacType" : {
            "$ref" : "#/components/schemas/OrderDeliveryEacType"
          },
          "eacCode" : {
            "description" : "Код подтверждения ЭАПП (для типа `MERCHANT_TO_COURIER`).\n",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "OrderBuyerDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/OrderBuyerBasicInfoDTO"
        }, {
          "type" : "object"
        } ],
        "description" : "Информация о покупателе.\n\nПараметры `id`, `lastName`, `firstName` и `middleName` возвращаются, только если вы работаете по модели DBS.\n",
        "example" : {
          "lastName" : "lastName",
          "firstName" : "firstName",
          "middleName" : "middleName",
          "id" : "id",
          "type" : "PERSON"
        },
        "type" : "object"
      },
      "OrderTaxSystemType" : {
        "description" : "Система налогообложения (СНО) магазина на момент оформления заказа:\n\n* `ECHN` — единый сельскохозяйственный налог (ЕСХН).\n\n* `ENVD` — единый налог на вмененный доход (ЕНВД).\n\n* `OSN` — общая система налогообложения (ОСН).\n\n* `PSN` — патентная система налогообложения (ПСН).\n\n* `USN` — упрощенная система налогообложения (УСН).\n\n* `USN_MINUS_COST` — упрощенная система налогообложения, доходы, уменьшенные на величину расходов (УСН «Доходы минус расходы»).\n\n* `NPD` — налог на профессиональный доход (НПД).\n\n* `UNKNOWN_VALUE` — неизвестное значение.\nИспользуется только совместно с параметром `payment-method=YANDEX`.\n",
        "enum" : [ "OSN", "USN", "USN_MINUS_COST", "ENVD", "ECHN", "PSN", "NPD", "UNKNOWN_VALUE" ],
        "type" : "string"
      },
      "BriefOrderItemInstanceDTO" : {
        "description" : "Идентификатор единицы товара.\n\nЗаполните только одно поле в зависимости от того, в какой системе маркирован товар.\n\nПодробно о работе с маркируемыми товарами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/cz.html).\n",
        "example" : {
          "rnpt" : "rnpt",
          "gtd" : "gtd",
          "uin" : "uin",
          "cis" : "cis"
        },
        "properties" : {
          "cis" : {
            "description" : "Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).\n\n{% note warning %}\n\nНе экранируйте косую черту в коде символа-разделителя `\\u001d`!\n\n✅ `01030410947874432155Qbag!\\u001d93Zjqw`\n\n❌ `01030410947874432155Qbag!\\\\u001d93Zjqw`\n\nКосые черты и кавычки в других местах экранируйте по правилам JSON: `\\\\` и `\\\"`\n\n{% endnote %}\n",
            "type" : "string"
          },
          "uin" : {
            "description" : "Уникальный идентификационный номер ювелирного изделия.\n\nПредставляет собой число из 16 цифр.\n",
            "type" : "string"
          },
          "rnpt" : {
            "description" : "Регистрационный номер партии товара.\n\nПредставляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.\n\nПервая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации.\n",
            "type" : "string"
          },
          "gtd" : {
            "description" : "Грузовая таможенная декларация.\n\nПредставляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.\n\nПервая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации.\n",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BriefOrderItemDTO" : {
        "description" : "Информация о маркированном товаре.",
        "example" : {
          "offerName" : "offerName",
          "instances" : [ {
            "rnpt" : "rnpt",
            "gtd" : "gtd",
            "cisFull" : "cisFull",
            "uin" : "uin",
            "cis" : "cis"
          }, {
            "rnpt" : "rnpt",
            "gtd" : "gtd",
            "cisFull" : "cisFull",
            "uin" : "uin",
            "cis" : "cis"
          } ],
          "price" : 1.4658129805029452,
          "vat" : "NO_VAT",
          "count" : 6,
          "offerId" : "offerId",
          "id" : 0
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор товара в заказе.\n\nПозволяет идентифицировать товар в рамках данного заказа.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "vat" : {
            "$ref" : "#/components/schemas/OrderVatType"
          },
          "count" : {
            "description" : "Количество единиц товара.",
            "format" : "int32",
            "type" : "integer"
          },
          "price" : {
            "description" : "Цена на товар. Указана в той валюте, которая была задана в каталоге. Разделитель целой и дробной части — точка.\n",
            "type" : "number"
          },
          "offerName" : {
            "description" : "Название товара.",
            "type" : "string"
          },
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "instances" : {
            "description" : "Переданные вами коды маркировки.",
            "items" : {
              "$ref" : "#/components/schemas/OrderItemInstanceDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "OrderStatusChangeDeliveryDTO" : {
        "description" : "Информация о доставке.",
        "example" : {
          "dates" : {
            "realDeliveryDate" : "2000-01-23"
          }
        },
        "properties" : {
          "dates" : {
            "$ref" : "#/components/schemas/OrderStatusChangeDeliveryDatesDTO"
          }
        },
        "type" : "object"
      },
      "UpdateOrderStatusDTO" : {
        "description" : "Список заказов.",
        "example" : {
          "substatus" : "RESERVATION_EXPIRED",
          "updateStatus" : "OK",
          "id" : 0,
          "status" : "PLACING",
          "errorDetails" : "errorDetails"
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор заказа.",
            "format" : "int64",
            "type" : "integer"
          },
          "status" : {
            "$ref" : "#/components/schemas/OrderStatusType"
          },
          "substatus" : {
            "$ref" : "#/components/schemas/OrderSubstatusType"
          },
          "updateStatus" : {
            "$ref" : "#/components/schemas/OrderUpdateStatusType"
          },
          "errorDetails" : {
            "description" : "Ошибка при изменении статуса заказа. Содержит описание ошибки и идентификатор заказа.\n\nВозвращается, если параметр `updateStatus` принимает значение `ERROR`.\n",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ParcelBoxDTO" : {
        "description" : "Элемент отображает одно грузовое место. Вложенные поля больше не используются, передавайте элемент пустым в запросах и не обращайте внимание на содержимое в ответах.",
        "example" : {
          "fulfilmentId" : "fulfilmentId",
          "id" : 0
        },
        "properties" : {
          "id" : {
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n",
            "format" : "int64",
            "type" : "integer"
          },
          "fulfilmentId" : {
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n",
            "pattern" : "^[\\p{Alnum}- ]*$",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "OrderBoxLayoutItemDTO" : {
        "description" : "Информация о товаре в коробке.",
        "example" : {
          "partialCount" : {
            "current" : 1,
            "total" : 2
          },
          "instances" : [ {
            "rnpt" : "rnpt",
            "gtd" : "gtd",
            "uin" : "uin",
            "cis" : "cis"
          }, {
            "rnpt" : "rnpt",
            "gtd" : "gtd",
            "uin" : "uin",
            "cis" : "cis"
          } ],
          "id" : 0,
          "fullCount" : 1
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор товара в заказе.\n\n{% cut \"Где его взять\" %}\n\nИдентификатор приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`.\n\n{% endcut %}\n \n",
            "format" : "int64",
            "type" : "integer"
          },
          "fullCount" : {
            "description" : "Количество единиц товара в коробке.\n\nИспользуйте это поле, если в коробке поедут целые товары, не разделенные на части. Не используйте это поле одновременно с `partialCount`.\n",
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "partialCount" : {
            "$ref" : "#/components/schemas/OrderBoxLayoutPartialCountDTO"
          },
          "instances" : {
            "description" : "Переданные вами коды маркировки.",
            "items" : {
              "$ref" : "#/components/schemas/BriefOrderItemInstanceDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "EnrichedOrderBoxLayoutDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/OrderBoxLayoutDTO"
        }, {
          "properties" : {
            "boxId" : {
              "description" : "Идентификатор коробки.",
              "format" : "int64",
              "type" : "integer"
            }
          },
          "type" : "object"
        } ],
        "description" : "Информация о коробке.",
        "example" : {
          "items" : [ {
            "partialCount" : {
              "current" : 1,
              "total" : 2
            },
            "instances" : [ {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "uin" : "uin",
              "cis" : "cis"
            }, {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "uin" : "uin",
              "cis" : "cis"
            } ],
            "id" : 0,
            "fullCount" : 1
          }, {
            "partialCount" : {
              "current" : 1,
              "total" : 2
            },
            "instances" : [ {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "uin" : "uin",
              "cis" : "cis"
            }, {
              "rnpt" : "rnpt",
              "gtd" : "gtd",
              "uin" : "uin",
              "cis" : "cis"
            } ],
            "id" : 0,
            "fullCount" : 1
          } ],
          "boxId" : 5
        },
        "type" : "object"
      },
      "OrderBuyerBasicInfoDTO" : {
        "description" : "Информация о покупателе с базовыми полями.",
        "properties" : {
          "id" : {
            "description" : "Идентификатор покупателя.",
            "type" : "string"
          },
          "lastName" : {
            "description" : "Фамилия покупателя.",
            "type" : "string"
          },
          "firstName" : {
            "description" : "Имя покупателя.",
            "type" : "string"
          },
          "middleName" : {
            "description" : "Отчество покупателя.",
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/OrderBuyerType"
          }
        },
        "type" : "object"
      },
      "EacVerificationStatusType" : {
        "description" : "Статус проверки кода подтверждения:\n\n* `ACCEPTED` — код верный.\n* `REJECTED` — код неверный.\n* `NEED_UPDATE` — Маркет отправит новый код. Значение возвращается, если превышено количество попыток отправки кода.\n",
        "enum" : [ "ACCEPTED", "REJECTED", "NEED_UPDATE" ],
        "type" : "string"
      },
      "ParcelBoxLabelDTO" : {
        "description" : "Информация о ярлыке для коробки.",
        "example" : {
          "supplierName" : "supplierName",
          "deliveryServiceId" : "deliveryServiceId",
          "orderId" : 1,
          "fulfilmentId" : "fulfilmentId",
          "orderNum" : "orderNum",
          "weight" : "weight",
          "url" : "url",
          "deliveryServiceName" : "deliveryServiceName",
          "deliveryAddress" : "deliveryAddress",
          "recipientName" : "recipientName",
          "place" : "place",
          "shipmentDate" : "shipmentDate",
          "boxId" : 5
        },
        "properties" : {
          "url" : {
            "description" : "Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label](../../reference/orders/generateOrderLabel.md).\n",
            "type" : "string"
          },
          "supplierName" : {
            "description" : "Юридическое название магазина.",
            "type" : "string"
          },
          "deliveryServiceName" : {
            "description" : "Юридическое название службы доставки.",
            "type" : "string"
          },
          "orderId" : {
            "description" : "Идентификатор заказа в системе Маркета.",
            "format" : "int64",
            "type" : "integer"
          },
          "orderNum" : {
            "description" : "Идентификатор заказа в информационной системе магазина.\n\nСовпадает с `orderId`, если Маркету неизвестен номер заказа в системе магазина.\n",
            "type" : "string"
          },
          "recipientName" : {
            "description" : "Фамилия и инициалы получателя заказа.",
            "type" : "string"
          },
          "boxId" : {
            "description" : "Идентификатор коробки.",
            "format" : "int64",
            "type" : "integer"
          },
          "fulfilmentId" : {
            "description" : "Идентификатор коробки в информационной системе магазина.\n\nВозвращается в формате: `номер заказа на Маркете-номер коробки`. Например, `7206821‑1`, `7206821‑2` и т. д.\n",
            "type" : "string"
          },
          "place" : {
            "description" : "Номер коробки в заказе. Возвращается в формате: `номер места/общее количество мест`.\n",
            "type" : "string"
          },
          "weight" : {
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nОбщая масса всех товаров в заказе. Возвращается в формате: `weight кг`.\n",
            "type" : "string"
          },
          "deliveryServiceId" : {
            "description" : "Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).",
            "type" : "string"
          },
          "deliveryAddress" : {
            "description" : "Адрес получателя.",
            "type" : "string"
          },
          "shipmentDate" : {
            "description" : "Дата отгрузки в формате `dd.MM.yyyy`.",
            "type" : "string"
          }
        },
        "required" : [ "boxId", "deliveryServiceId", "deliveryServiceName", "fulfilmentId", "orderId", "orderNum", "place", "recipientName", "supplierName", "url", "weight" ],
        "type" : "object"
      },
      "DocumentDTO" : {
        "description" : "Информация о документе.",
        "example" : {
          "date" : "2000-01-23",
          "number" : "number",
          "status" : "READY"
        },
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/OrderDocumentStatusType"
          },
          "number" : {
            "description" : "Номер документа.",
            "type" : "string"
          },
          "date" : {
            "description" : "Дата создания документа.",
            "format" : "date",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "LogisticPickupPointDTO" : {
        "description" : "Описание пункта вывоза для возврата.",
        "example" : {
          "logisticPartnerId" : 5,
          "address" : {
            "country" : "Россия",
            "city" : "Москва",
            "street" : "Стрелецкая улица",
            "postcode" : "123518",
            "house" : "9к2"
          },
          "instruction" : "instruction",
          "name" : "name",
          "id" : 1,
          "type" : "WAREHOUSE"
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор пункта вывоза.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Название пункта вывоза.",
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/PickupAddressDTO"
          },
          "instruction" : {
            "description" : "Дополнительные инструкции к вывозу.",
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/LogisticPointType"
          },
          "logisticPartnerId" : {
            "description" : "Идентификатор логистического партнера, к которому относится логистическая точка.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "RecipientType" : {
        "description" : "Способ возврата товара покупателем:\n\n* `SHOP` — в точку возврата магазина.\n\n* `DELIVERY_SERVICE` — отправить курьером.\n\n* `POST` — почта.\n",
        "enum" : [ "SHOP", "DELIVERY_SERVICE", "POST" ],
        "type" : "string"
      },
      "ReturnShipmentStatusType" : {
        "description" : "Статус передачи возврата:\n\n* `CREATED` — возврат создан.\n\n* `RECEIVED` — принят у покупателя.\n\n* `IN_TRANSIT` — возврат в пути.\n\n* `READY_FOR_PICKUP` — возврат готов к выдаче магазину.\n\n* `PICKED` — возврат выдан магазину.\n\n* `LOST` — возврат утерян при транспортировке.\n\n* `CANCELLED` — возврат отменен.\n\n* `FULFILMENT_RECEIVED` — возврат принят на складе Маркета.\n\n* `PREPARED_FOR_UTILIZATION` — возврат передан в утилизацию.\n\n* `UTILIZED` — возврат утилизирован.\n",
        "enum" : [ "CREATED", "RECEIVED", "IN_TRANSIT", "READY_FOR_PICKUP", "PICKED", "LOST", "EXPIRED", "CANCELLED", "FULFILMENT_RECEIVED", "PREPARED_FOR_UTILIZATION", "NOT_IN_DEMAND", "UTILIZED", "READY_FOR_EXPROPRIATION", "RECEIVED_FOR_EXPROPRIATION" ],
        "type" : "string"
      },
      "ReturnItemDTO" : {
        "description" : "Список товаров в возврате.",
        "example" : {
          "shopSku" : "shopSku",
          "instances" : [ {
            "stockType" : "FIT",
            "imei" : "imei",
            "cis" : "cis",
            "status" : "CREATED"
          }, {
            "stockType" : "FIT",
            "imei" : "imei",
            "cis" : "cis",
            "status" : "CREATED"
          } ],
          "marketSku" : 2,
          "count" : 7,
          "decisions" : [ {
            "images" : [ "images", "images" ],
            "returnItemId" : 9,
            "subreasonType" : "USER_DID_NOT_LIKE",
            "count" : 3,
            "comment" : "comment",
            "decisionType" : "REFUND_MONEY",
            "reasonType" : "BAD_QUALITY",
            "partnerCompensation" : 4,
            "refundAmount" : 2
          }, {
            "images" : [ "images", "images" ],
            "returnItemId" : 9,
            "subreasonType" : "USER_DID_NOT_LIKE",
            "count" : 3,
            "comment" : "comment",
            "decisionType" : "REFUND_MONEY",
            "reasonType" : "BAD_QUALITY",
            "partnerCompensation" : 4,
            "refundAmount" : 2
          } ],
          "tracks" : [ {
            "trackCode" : "trackCode"
          }, {
            "trackCode" : "trackCode"
          } ]
        },
        "properties" : {
          "marketSku" : {
            "description" : "SKU на Маркете.",
            "format" : "int64",
            "type" : "integer"
          },
          "shopSku" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "count" : {
            "description" : "Количество единиц товара.",
            "format" : "int64",
            "type" : "integer"
          },
          "decisions" : {
            "description" : "Список решений по возврату.",
            "items" : {
              "$ref" : "#/components/schemas/ReturnDecisionDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "instances" : {
            "description" : "Список логистических позиций возврата.",
            "items" : {
              "$ref" : "#/components/schemas/ReturnInstanceDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "tracks" : {
            "description" : "Список трек-кодов для почтовых отправлений.",
            "items" : {
              "$ref" : "#/components/schemas/TrackDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "count", "shopSku" ],
        "type" : "object"
      },
      "BaseShipmentDTO" : {
        "description" : "Информация об отгрузке.",
        "properties" : {
          "id" : {
            "description" : "Идентификатор отгрузки.",
            "format" : "int64",
            "type" : "integer"
          },
          "planIntervalFrom" : {
            "description" : "Начало планового интервала отгрузки.",
            "format" : "date-time",
            "type" : "string"
          },
          "planIntervalTo" : {
            "description" : "Конец планового интервала отгрузки.",
            "format" : "date-time",
            "type" : "string"
          },
          "shipmentType" : {
            "$ref" : "#/components/schemas/ShipmentType"
          },
          "warehouse" : {
            "$ref" : "#/components/schemas/PartnerShipmentWarehouseDTO"
          },
          "warehouseTo" : {
            "$ref" : "#/components/schemas/PartnerShipmentWarehouseDTO"
          },
          "externalId" : {
            "description" : "Идентификатор отгрузки в вашей системе. Если вы еще не передавали идентификатор, вернется идентификатор из параметра `id`.",
            "type" : "string"
          },
          "deliveryService" : {
            "$ref" : "#/components/schemas/DeliveryServiceDTO"
          },
          "palletsCount" : {
            "$ref" : "#/components/schemas/PalletsCountDTO"
          },
          "orderIds" : {
            "description" : "Идентификаторы заказов в отгрузке.",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "draftCount" : {
            "description" : "Количество заказов, которое Маркет запланировал к отгрузке.",
            "format" : "int32",
            "type" : "integer"
          },
          "plannedCount" : {
            "description" : "Количество заказов, которое Маркет подтвердил к отгрузке.",
            "format" : "int32",
            "type" : "integer"
          },
          "factCount" : {
            "description" : "Количество заказов, принятых в сортировочном центре или пункте приема.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [ "orderIds" ],
        "type" : "object"
      },
      "ExtensionShipmentDTO" : {
        "description" : "Информация об отгрузке.",
        "properties" : {
          "currentStatus" : {
            "$ref" : "#/components/schemas/ShipmentStatusChangeDTO"
          },
          "availableActions" : {
            "description" : "Доступные действия над отгрузкой.",
            "items" : {
              "$ref" : "#/components/schemas/ShipmentActionType"
            },
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "availableActions" ],
        "type" : "object"
      },
      "ShipmentInfoDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseShipmentDTO"
        }, {
          "properties" : {
            "status" : {
              "$ref" : "#/components/schemas/ShipmentStatusType"
            },
            "statusDescription" : {
              "description" : "Описание статуса отгрузки.",
              "type" : "string"
            },
            "statusUpdateTime" : {
              "description" : "Время последнего изменения статуса отгрузки.",
              "format" : "date-time",
              "type" : "string"
            }
          },
          "type" : "object"
        } ],
        "description" : "Список с информацией об отгрузках.",
        "example" : {
          "deliveryService" : {
            "name" : "name",
            "id" : 1
          },
          "draftCount" : 1,
          "plannedCount" : 5,
          "planIntervalTo" : "2000-01-23T04:56:07.000+00:00",
          "externalId" : "externalId",
          "warehouse" : {
            "address" : "address",
            "name" : "name",
            "id" : 6
          },
          "shipmentType" : "IMPORT",
          "planIntervalFrom" : "2000-01-23T04:56:07.000+00:00",
          "statusDescription" : "statusDescription",
          "warehouseTo" : {
            "address" : "address",
            "name" : "name",
            "id" : 6
          },
          "factCount" : 5,
          "palletsCount" : {
            "fact" : 5,
            "planned" : 5
          },
          "id" : 0,
          "orderIds" : [ 6, 6 ],
          "statusUpdateTime" : "2000-01-23T04:56:07.000+00:00",
          "status" : "OUTBOUND_CREATED"
        },
        "type" : "object"
      },
      "GetOfferMappingDTO" : {
        "description" : "Информация о товаре.",
        "example" : {
          "offer" : {
            "downloadable" : true,
            "sellingPrograms" : [ {
              "sellingProgram" : "FBY",
              "status" : "FINE"
            }, {
              "sellingProgram" : "FBY",
              "status" : "FINE"
            } ],
            "marketCategoryId" : 0,
            "manufacturerCountries" : [ "Россия", "Россия" ],
            "description" : "description",
            "videos" : [ "videos", "videos", "videos", "videos", "videos" ],
            "purchasePrice" : {
              "currencyId" : null,
              "value" : 0.7061401241503109,
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            },
            "type" : "DEFAULT",
            "pictures" : [ "pictures", "pictures" ],
            "vendorCode" : "VNDR-0005A",
            "archived" : true,
            "campaigns" : [ {
              "campaignId" : 9,
              "status" : "PUBLISHED"
            }, {
              "campaignId" : 9,
              "status" : "PUBLISHED"
            } ],
            "vendor" : "LEVENHUK",
            "basicPrice" : {
              "discountBase" : 0.23021358869347652,
              "currencyId" : "RUR",
              "value" : 0.5637376656633328,
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            },
            "lifeTime" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "shelfLife" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "cofinancePrice" : {
              "currencyId" : null,
              "value" : 0.7061401241503109,
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            },
            "cardStatus" : "HAS_CARD_CAN_NOT_UPDATE",
            "barcodes" : [ "46012300000000", "46012300000000" ],
            "params" : [ {
              "name" : "Wi-Fi",
              "value" : "есть"
            }, {
              "name" : "Wi-Fi",
              "value" : "есть"
            } ],
            "tags" : [ "до 500 рублей", "до 500 рублей" ],
            "condition" : {
              "reason" : "reason",
              "type" : "PREOWNED",
              "quality" : "PERFECT"
            },
            "certificates" : [ "certificates", "certificates" ],
            "boxCount" : 1,
            "additionalExpenses" : {
              "currencyId" : null,
              "value" : 0.7061401241503109,
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            },
            "name" : "Ударная дрель Makita HP1630, 710 Вт",
            "offerId" : "offerId",
            "guaranteePeriod" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "weightDimensions" : {
              "length" : 65.55,
              "width" : 50.7,
              "weight" : 1.001,
              "height" : 20
            },
            "category" : "category",
            "customsCommodityCode" : "8517610008",
            "adult" : true,
            "age" : {
              "ageUnit" : "YEAR",
              "value" : 0.5962133916683182
            },
            "manuals" : [ {
              "title" : "title",
              "url" : "url"
            }, {
              "title" : "title",
              "url" : "url"
            }, {
              "title" : "title",
              "url" : "url"
            }, {
              "title" : "title",
              "url" : "url"
            }, {
              "title" : "title",
              "url" : "url"
            } ]
          },
          "mapping" : {
            "marketSkuName" : "marketSkuName",
            "marketCategoryName" : "marketCategoryName",
            "marketCategoryId" : 4,
            "marketSku" : 3,
            "marketModelId" : 2,
            "marketModelName" : "marketModelName"
          }
        },
        "properties" : {
          "offer" : {
            "$ref" : "#/components/schemas/GetOfferDTO"
          },
          "mapping" : {
            "$ref" : "#/components/schemas/GetMappingDTO"
          }
        },
        "type" : "object"
      },
      "UpdateOfferDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseOfferDTO"
        }, {
          "properties" : {
            "parameterValues" : {
              "description" : "Список характеристик с их значениями.\n\nС `parameterValues` обязательно передавайте `marketCategoryId` — идентификатор категории на Маркете, к которой относятся указанные характеристики товара.\n\nПри **изменении** характеристик передавайте только те, значение которых нужно обновить.\n\nЧтобы **удалить** значение заданной характеристики, передайте ее `parameterId` с пустым `value`.\n\nМаксимальное количество характеристик — 300.\n",
              "items" : {
                "$ref" : "#/components/schemas/ParameterValueDTO"
              },
              "maxItems" : 300,
              "nullable" : true,
              "type" : "array"
            },
            "basicPrice" : {
              "$ref" : "#/components/schemas/UpdatePriceWithDiscountDTO"
            },
            "purchasePrice" : {
              "$ref" : "#/components/schemas/BasePriceDTO"
            },
            "additionalExpenses" : {
              "$ref" : "#/components/schemas/BasePriceDTO"
            },
            "cofinancePrice" : {
              "$ref" : "#/components/schemas/BasePriceDTO"
            }
          },
          "type" : "object"
        } ],
        "description" : "Параметры товара.",
        "example" : {
          "downloadable" : true,
          "marketCategoryId" : 0,
          "manufacturerCountries" : [ "Россия", "Россия" ],
          "description" : "description",
          "videos" : [ "videos", "videos", "videos", "videos", "videos" ],
          "purchasePrice" : {
            "currencyId" : null,
            "value" : 0.9301444243932576
          },
          "type" : "DEFAULT",
          "pictures" : [ "pictures", "pictures" ],
          "vendorCode" : "VNDR-0005A",
          "vendor" : "LEVENHUK",
          "basicPrice" : {
            "discountBase" : 0.7061401241503109,
            "currencyId" : "RUR",
            "value" : 0.23021358869347652
          },
          "lifeTime" : {
            "timePeriod" : 6,
            "comment" : "comment",
            "timeUnit" : "HOUR"
          },
          "shelfLife" : {
            "timePeriod" : 6,
            "comment" : "comment",
            "timeUnit" : "HOUR"
          },
          "cofinancePrice" : {
            "currencyId" : null,
            "value" : 0.9301444243932576
          },
          "parameterValues" : [ {
            "valueId" : 5,
            "parameterId" : 1,
            "unitId" : 5,
            "value" : "value"
          }, {
            "valueId" : 5,
            "parameterId" : 1,
            "unitId" : 5,
            "value" : "value"
          }, {
            "valueId" : 5,
            "parameterId" : 1,
            "unitId" : 5,
            "value" : "value"
          }, {
            "valueId" : 5,
            "parameterId" : 1,
            "unitId" : 5,
            "value" : "value"
          }, {
            "valueId" : 5,
            "parameterId" : 1,
            "unitId" : 5,
            "value" : "value"
          } ],
          "barcodes" : [ "46012300000000", "46012300000000" ],
          "params" : [ {
            "name" : "Wi-Fi",
            "value" : "есть"
          }, {
            "name" : "Wi-Fi",
            "value" : "есть"
          } ],
          "tags" : [ "до 500 рублей", "до 500 рублей" ],
          "condition" : {
            "reason" : "reason",
            "type" : "PREOWNED",
            "quality" : "PERFECT"
          },
          "certificates" : [ "certificates", "certificates" ],
          "boxCount" : 6,
          "additionalExpenses" : {
            "currencyId" : null,
            "value" : 0.9301444243932576
          },
          "name" : "Ударная дрель Makita HP1630, 710 Вт",
          "offerId" : "offerId",
          "guaranteePeriod" : {
            "timePeriod" : 6,
            "comment" : "comment",
            "timeUnit" : "HOUR"
          },
          "weightDimensions" : {
            "length" : 65.55,
            "width" : 50.7,
            "weight" : 1.001,
            "height" : 20
          },
          "category" : "category",
          "customsCommodityCode" : "8517610008",
          "adult" : true,
          "age" : {
            "ageUnit" : "YEAR",
            "value" : 0.5962133916683182
          },
          "manuals" : [ {
            "title" : "title",
            "url" : "url"
          }, {
            "title" : "title",
            "url" : "url"
          }, {
            "title" : "title",
            "url" : "url"
          }, {
            "title" : "title",
            "url" : "url"
          }, {
            "title" : "title",
            "url" : "url"
          } ]
        },
        "type" : "object"
      },
      "UpdateMappingDTO" : {
        "description" : "Карточка на Маркете, которая, с вашей точки зрения, подходит товару. Чтобы определить идентификатор подходящей карточки, воспользуйтесь поиском в кабинете (**Товары** → **Каталог** → **Загрузить товары**).\n\nПо результатам проверки Маркет может привязать товар к более подходящей карточке.\n",
        "example" : {
          "marketSku" : 3
        },
        "properties" : {
          "marketSku" : {
            "description" : "SKU на Маркете.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "OfferMappingErrorDTO" : {
        "description" : "Текст ошибки.",
        "example" : {
          "parameterId" : 0,
          "type" : "UNKNOWN_CATEGORY",
          "message" : "message"
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/OfferMappingErrorType"
          },
          "parameterId" : {
            "description" : "Идентификатор характеристики, с которой связана ошибка.",
            "format" : "int64",
            "type" : "integer"
          },
          "message" : {
            "description" : "Текст ошибки.",
            "type" : "string"
          }
        },
        "required" : [ "message", "type" ],
        "type" : "object"
      },
      "OfferName" : {
        "description" : "Составляйте название по схеме: тип + бренд или производитель + модель + особенности, если есть (например, цвет, размер или вес) и количество в упаковке.\n\nНе включайте в название условия продажи (например, «скидка», «бесплатная доставка» и т. д.), эмоциональные характеристики («хит», «супер» и т. д.). Не пишите слова большими буквами — кроме устоявшихся названий брендов и моделей.\n\nОптимальная длина — 50–60 символов, максимальная — 256.\n\n[Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/title.html)\n",
        "example" : "Ударная дрель Makita HP1630, 710 Вт",
        "maxLength" : 256,
        "type" : "string"
      },
      "OfferCategory" : {
        "description" : "Категория товара в вашем магазине. Значение будет использовано для определения категории товара на Маркете в случае, если вы не передали категорию в параметре `marketCategoryId`.\n\nУказывайте конкретные категории — например, набор ножей лучше отнести к категории **Столовые приборы**, а не просто **Посуда**.\n\nВыбирайте категории, которые описывают товар, а не абстрактный признак — например, **Духи**, а не **Подарки**.\n\nЗначение будет использовано для определения категории товара на Маркете в случае, если вы не передали категорию в параметре `marketCategoryId`.\n",
        "type" : "string"
      },
      "OfferVendor" : {
        "description" : "Название бренда или производителя. Должно быть записано так, как его пишет сам бренд.",
        "example" : "LEVENHUK",
        "type" : "string"
      },
      "OfferBarcodes" : {
        "description" : "Указывайте в виде последовательности цифр. Подойдут коды EAN-13, EAN-8, UPC-A, UPC-E или Code 128.\n\nДля книг указывайте ISBN.\n\nДля товаров [определенных категорий и торговых марок](https://yastatic.net/s3/doc-binary/src/support/market/ru/yandex-market-list-for-gtin.xlsx) штрихкод должен быть действительным кодом GTIN. Обратите внимание: внутренние штрихкоды, начинающиеся на 2 или 02, и коды формата Code 128 не являются GTIN.\n\n[Что такое GTIN](*gtin)\n\n",
        "items" : {
          "example" : "46012300000000",
          "type" : "string"
        },
        "nullable" : true,
        "type" : "array"
      },
      "OfferDescription" : {
        "description" : "Подробное описание товара: например, его преимущества и особенности.\n\nНе давайте в описании инструкций по установке и сборке. Не используйте слова «скидка», «распродажа», «дешевый», «подарок» (кроме подарочных категорий), «бесплатно», «акция», «специальная цена», «новинка», «new», «аналог», «заказ», «хит». Не указывайте никакой контактной информации и не давайте ссылок.\n\nМожно использовать теги:\n\n* \\<h>, \\<h1>, \\<h2> и так далее — для заголовков;\n* \\<br> и \\<p> — для переноса строки;\n* \\<ol> — для нумерованного списка;\n* \\<ul> — для маркированного списка;\n* \\<li> — для создания элементов списка (должен находиться внутри \\<ol> или \\<ul>);\n* \\<div> — поддерживается, но не влияет на отображение текста.\n\nОптимальная длина — 400–600 символов, максимальная — 6000.\n\n[Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/description.html)\n",
        "maxLength" : 6000,
        "type" : "string"
      },
      "OfferVendorCode" : {
        "description" : "Артикул товара от производителя.",
        "example" : "VNDR-0005A",
        "type" : "string"
      },
      "BasePriceDTO" : {
        "description" : "Цена на товар.",
        "example" : {
          "currencyId" : null,
          "value" : 0.9301444243932576
        },
        "properties" : {
          "value" : {
            "description" : "Значение.",
            "exclusiveMinimum" : true,
            "minimum" : 0,
            "type" : "number"
          },
          "currencyId" : {
            "$ref" : "#/components/schemas/CurrencyType"
          }
        },
        "required" : [ "currencyId", "value" ],
        "type" : "object"
      },
      "SuggestedOfferMappingDTO" : {
        "description" : "Товар с соответствующей карточкой на Маркете.",
        "example" : {
          "offer" : {
            "vendor" : "LEVENHUK",
            "basicPrice" : {
              "currencyId" : null,
              "value" : 0.9301444243932576
            },
            "name" : "Ударная дрель Makita HP1630, 710 Вт",
            "offerId" : "offerId",
            "description" : "description",
            "category" : "category",
            "barcodes" : [ "46012300000000", "46012300000000" ],
            "vendorCode" : "VNDR-0005A"
          },
          "mapping" : {
            "marketSkuName" : "marketSkuName",
            "marketCategoryName" : "marketCategoryName",
            "marketCategoryId" : 4,
            "marketSku" : 3,
            "marketModelId" : 2,
            "marketModelName" : "marketModelName"
          }
        },
        "properties" : {
          "offer" : {
            "$ref" : "#/components/schemas/SuggestedOfferDTO"
          },
          "mapping" : {
            "$ref" : "#/components/schemas/GetMappingDTO"
          }
        },
        "type" : "object"
      },
      "AddOffersToArchiveErrorDTO" : {
        "description" : "Товар, который не удалось поместить в архив.",
        "example" : {
          "offerId" : "offerId",
          "error" : "OFFER_HAS_STOCKS"
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "error" : {
            "$ref" : "#/components/schemas/AddOffersToArchiveErrorType"
          }
        },
        "required" : [ "error", "offerId" ],
        "type" : "object"
      },
      "OfferMappingEntryDTO" : {
        "allOf" : [ {
          "properties" : {
            "offer" : {
              "$ref" : "#/components/schemas/MappingsOfferDTO"
            }
          },
          "type" : "object"
        }, {
          "$ref" : "#/components/schemas/OfferMappingInfoDTO"
        } ],
        "description" : "Список товаров.\n",
        "example" : {
          "offer" : {
            "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
            "certificate" : "certificate",
            "description" : "description",
            "availability" : "ACTIVE",
            "pictures" : [ "pictures", "pictures" ],
            "vendorCode" : "VNDR-0005A",
            "manufacturer" : "manufacturer",
            "urls" : [ "urls", "urls" ],
            "deliveryDurationDays" : 5,
            "feedId" : 0,
            "vendor" : "LEVENHUK",
            "price" : 2.027123023002322,
            "transportUnitSize" : 1,
            "id" : "id",
            "lifeTime" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "shelfLife" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
            "lifeTimeDays" : 9,
            "quantumOfSupply" : 5,
            "barcodes" : [ "46012300000000", "46012300000000" ],
            "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
            "processingState" : {
              "notes" : [ {
                "payload" : "payload",
                "type" : "ASSORTMENT"
              }, {
                "payload" : "payload",
                "type" : "ASSORTMENT"
              } ],
              "status" : "UNKNOWN"
            },
            "shopSku" : "shopSku",
            "boxCount" : 2,
            "minShipment" : 6,
            "name" : "Ударная дрель Makita HP1630, 710 Вт",
            "shelfLifeDays" : 7,
            "guaranteePeriod" : {
              "timePeriod" : 6,
              "comment" : "comment",
              "timeUnit" : "HOUR"
            },
            "weightDimensions" : {
              "length" : 65.55,
              "width" : 50.7,
              "weight" : 1.001,
              "height" : 20
            },
            "category" : "category",
            "guaranteePeriodDays" : 3
          },
          "mapping" : {
            "modelId" : 7,
            "marketSku" : 4,
            "categoryId" : 1
          },
          "awaitingModerationMapping" : {
            "modelId" : 7,
            "marketSku" : 4,
            "categoryId" : 1
          },
          "rejectedMapping" : {
            "modelId" : 7,
            "marketSku" : 4,
            "categoryId" : 1
          }
        },
        "type" : "object"
      },
      "UpdateMappingsOfferDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MappingsOfferInfoDTO"
        } ],
        "description" : "Информация о товарах в каталоге.",
        "example" : {
          "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
          "certificate" : "certificate",
          "description" : "description",
          "availability" : "ACTIVE",
          "pictures" : [ "pictures", "pictures" ],
          "vendorCode" : "VNDR-0005A",
          "manufacturer" : "manufacturer",
          "urls" : [ "urls", "urls" ],
          "deliveryDurationDays" : 5,
          "feedId" : 0,
          "vendor" : "LEVENHUK",
          "transportUnitSize" : 1,
          "id" : "id",
          "lifeTime" : {
            "timePeriod" : 6,
            "comment" : "comment",
            "timeUnit" : "HOUR"
          },
          "shelfLife" : {
            "timePeriod" : 6,
            "comment" : "comment",
            "timeUnit" : "HOUR"
          },
          "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
          "lifeTimeDays" : 9,
          "quantumOfSupply" : 5,
          "barcodes" : [ "46012300000000", "46012300000000" ],
          "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
          "processingState" : {
            "notes" : [ {
              "payload" : "payload",
              "type" : "ASSORTMENT"
            }, {
              "payload" : "payload",
              "type" : "ASSORTMENT"
            } ],
            "status" : "UNKNOWN"
          },
          "shopSku" : "shopSku",
          "boxCount" : 2,
          "minShipment" : 6,
          "name" : "Ударная дрель Makita HP1630, 710 Вт",
          "shelfLifeDays" : 7,
          "guaranteePeriod" : {
            "timePeriod" : 6,
            "comment" : "comment",
            "timeUnit" : "HOUR"
          },
          "weightDimensions" : {
            "length" : 65.55,
            "width" : 50.7,
            "weight" : 1.001,
            "height" : 20
          },
          "category" : "category",
          "guaranteePeriodDays" : 3
        },
        "type" : "object"
      },
      "OfferMappingInfoDTO" : {
        "description" : "Информация о карточке товара.",
        "properties" : {
          "mapping" : {
            "$ref" : "#/components/schemas/OfferMappingDTO"
          },
          "awaitingModerationMapping" : {
            "$ref" : "#/components/schemas/OfferMappingDTO"
          },
          "rejectedMapping" : {
            "$ref" : "#/components/schemas/OfferMappingDTO"
          }
        },
        "type" : "object"
      },
      "MappingsOfferInfoDTO" : {
        "description" : "Базовая информация о товарах в каталоге.",
        "properties" : {
          "name" : {
            "description" : "Составляйте название по схеме: тип + бренд или производитель + модель + особенности, если есть (например, цвет, размер или вес) и количество в упаковке.\n\nНе включайте в название условия продажи (например, «скидка», «бесплатная доставка» и т. д.), эмоциональные характеристики («хит», «супер» и т. д.). Не пишите слова большими буквами — кроме устоявшихся названий брендов и моделей.\n\nОптимальная длина — 50–60 символов, максимальная — 256.\n\n[Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/title.html)\n",
            "example" : "Ударная дрель Makita HP1630, 710 Вт",
            "maxLength" : 256,
            "type" : "string"
          },
          "shopSku" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "category" : {
            "description" : "Категория товара в вашем магазине. Значение будет использовано для определения категории товара на Маркете в случае, если вы не передали категорию в параметре `marketCategoryId`.\n\nУказывайте конкретные категории — например, набор ножей лучше отнести к категории **Столовые приборы**, а не просто **Посуда**.\n\nВыбирайте категории, которые описывают товар, а не абстрактный признак — например, **Духи**, а не **Подарки**.\n\nЗначение будет использовано для определения категории товара на Маркете в случае, если вы не передали категорию в параметре `marketCategoryId`.\n",
            "type" : "string"
          },
          "vendor" : {
            "description" : "Название бренда или производителя. Должно быть записано так, как его пишет сам бренд.",
            "example" : "LEVENHUK",
            "type" : "string"
          },
          "vendorCode" : {
            "description" : "Артикул товара от производителя.",
            "example" : "VNDR-0005A",
            "type" : "string"
          },
          "description" : {
            "description" : "Подробное описание товара: например, его преимущества и особенности.\n\nНе давайте в описании инструкций по установке и сборке. Не используйте слова «скидка», «распродажа», «дешевый», «подарок» (кроме подарочных категорий), «бесплатно», «акция», «специальная цена», «новинка», «new», «аналог», «заказ», «хит». Не указывайте никакой контактной информации и не давайте ссылок.\n\nМожно использовать теги:\n\n* \\<h>, \\<h1>, \\<h2> и так далее — для заголовков;\n* \\<br> и \\<p> — для переноса строки;\n* \\<ol> — для нумерованного списка;\n* \\<ul> — для маркированного списка;\n* \\<li> — для создания элементов списка (должен находиться внутри \\<ol> или \\<ul>);\n* \\<div> — поддерживается, но не влияет на отображение текста.\n\nОптимальная длина — 400–600 символов, максимальная — 6000.\n\n[Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/description.html)\n",
            "maxLength" : 6000,
            "type" : "string"
          },
          "id" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "feedId" : {
            "description" : "Идентификатор фида.",
            "format" : "int64",
            "type" : "integer"
          },
          "barcodes" : {
            "description" : "Указывайте в виде последовательности цифр. Подойдут коды EAN-13, EAN-8, UPC-A, UPC-E или Code 128.\n\nДля книг указывайте ISBN.\n\nДля товаров [определенных категорий и торговых марок](https://yastatic.net/s3/doc-binary/src/support/market/ru/yandex-market-list-for-gtin.xlsx) штрихкод должен быть действительным кодом GTIN. Обратите внимание: внутренние штрихкоды, начинающиеся на 2 или 02, и коды формата Code 128 не являются GTIN.\n\n[Что такое GTIN](*gtin)\n\n",
            "items" : {
              "example" : "46012300000000",
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          },
          "urls" : {
            "description" : "URL фотографии товара или страницы с описанием на вашем сайте.\n\nПереданные данные не будут отображаться на витрине, но они помогут специалистам Маркета найти карточку для вашего товара.\n\nДолжен содержать один вложенный параметр url.\n",
            "items" : {
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          },
          "pictures" : {
            "description" : "Ссылки (URL) изображений товара в хорошем качестве.\n\nМожно указать до 30 ссылок. При этом изображение по первой ссылке будет основным. Оно используется в качестве изображения товара в поиске Маркета и на карточке товара. Другие изображения товара доступны в режиме просмотра увеличенных изображений.\n\nОбязательный параметр.\n\nДолжен содержать хотя бы один вложенный параметр `picture`.\n",
            "items" : {
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          },
          "manufacturer" : {
            "description" : "Изготовитель товара: компания, которая произвела товар, ее адрес и регистрационный номер (если есть).\n\nНеобязательный параметр.\n",
            "type" : "string"
          },
          "manufacturerCountries" : {
            "description" : "Список стран, в которых произведен товар.\n\nОбязательный параметр.\n\nДолжен содержать хотя бы одну, но не больше 5 стран.\n",
            "items" : {
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          },
          "minShipment" : {
            "description" : "Минимальное количество единиц товара, которое вы поставляете на склад.\n\nНапример, если вы поставляете детское питание партиями минимум по 10 коробок, а в каждой коробке по 6 баночек, укажите значение 60.\n",
            "format" : "int32",
            "type" : "integer"
          },
          "transportUnitSize" : {
            "description" : "Количество единиц товара в одной упаковке, которую вы поставляете на склад.\n\nНапример, если вы поставляете детское питание коробками по 6 баночек, укажите значение 6.\n",
            "format" : "int32",
            "type" : "integer"
          },
          "quantumOfSupply" : {
            "description" : "Добавочная партия: по сколько единиц товара можно добавлять к минимальному количеству minShipment.\n\nНапример, если вы поставляете детское питание партиями минимум по 10 коробок и хотите добавлять к минимальной партии по 2 коробки, а в каждой коробке по 6 баночек, укажите значение 12.\n",
            "format" : "int32",
            "type" : "integer"
          },
          "deliveryDurationDays" : {
            "description" : "Срок, за который продавец поставляет товары на склад, в днях.",
            "format" : "int32",
            "type" : "integer"
          },
          "boxCount" : {
            "description" : "Сколько мест (если больше одного) занимает товар.\n\nПараметр указывается, только если товар занимает больше одного места (например, кондиционер занимает два места: внешний и внутренний блоки в двух коробках). Если товар занимает одно место, не указывайте этот параметр.\n",
            "format" : "int32",
            "type" : "integer"
          },
          "customsCommodityCodes" : {
            "description" : "Список кодов товара в единой Товарной номенклатуре внешнеэкономической деятельности (ТН ВЭД).\n\nОбязательный параметр, если товар подлежит особому учету (например, в системе «Меркурий» как продукция животного происхождения или в системе «Честный ЗНАК»).\n\nМожет содержать только один вложенный код ТН ВЭД.\n",
            "items" : {
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          },
          "weightDimensions" : {
            "$ref" : "#/components/schemas/OfferWeightDimensionsDTO"
          },
          "supplyScheduleDays" : {
            "description" : "Дни недели, в которые продавец поставляет товары на склад.",
            "items" : {
              "$ref" : "#/components/schemas/DayOfWeekType"
            },
            "nullable" : true,
            "type" : "array"
          },
          "shelfLifeDays" : {
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Вместо него используйте `shelfLife`. Совместное использование обоих параметров приведет к ошибке.\n\n{% endnote %}\n\nСрок годности: через сколько дней товар станет непригоден для использования.\n",
            "format" : "int32",
            "type" : "integer"
          },
          "lifeTimeDays" : {
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Вместо него используйте `lifeTime`. Совместное использование обоих параметров приведет к ошибке.\n\n{% endnote %}\n\nСрок службы: сколько дней товар будет исправно выполнять свою функцию, а изготовитель — нести ответственность за его существенные недостатки.\n",
            "format" : "int32",
            "type" : "integer"
          },
          "guaranteePeriodDays" : {
            "description" : "Гарантийный срок товара: сколько дней возможно обслуживание и ремонт товара или возврат денег, а изготовитель или продавец будет нести ответственность за недостатки товара.\n",
            "format" : "int32",
            "type" : "integer"
          },
          "processingState" : {
            "$ref" : "#/components/schemas/OfferProcessingStateDTO"
          },
          "availability" : {
            "$ref" : "#/components/schemas/OfferAvailabilityStatusType"
          },
          "shelfLife" : {
            "$ref" : "#/components/schemas/TimePeriodDTO"
          },
          "lifeTime" : {
            "$ref" : "#/components/schemas/TimePeriodDTO"
          },
          "guaranteePeriod" : {
            "$ref" : "#/components/schemas/TimePeriodDTO"
          },
          "certificate" : {
            "description" : "Номер документа на товар.\n\nПеред указанием номера документ нужно загрузить в кабинете продавца на Маркете. [Инструкция](https://yandex.ru/support/marketplace/assortment/restrictions/certificates.html)\n",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EnrichedMappingsOfferDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MappingsOfferDTO"
        }, {
          "properties" : {
            "marketCategoryId" : {
              "description" : "Идентификатор категории для рекомендованной карточки товара на Маркете.\n\nВозвращается только вместе с параметром ##marketSku##.\n",
              "format" : "int64",
              "type" : "integer"
            },
            "marketCategoryName" : {
              "description" : "Название категории для рекомендованной карточки товара на Маркете.\n\nМожет отсутствовать в ответе.\n",
              "type" : "string"
            },
            "marketModelId" : {
              "description" : "Идентификатор модели для рекомендованной карточки товара на Маркете.\n\nМожет отсутствовать в ответе.\n",
              "format" : "int64",
              "type" : "integer"
            },
            "marketModelName" : {
              "description" : "Название модели для рекомендованной карточки товара на Маркете.\n\nВозвращается только вместе с параметром ##marketSku##.\n",
              "type" : "string"
            },
            "marketSku" : {
              "$ref" : "#/components/schemas/MarketSku"
            },
            "marketSkuName" : {
              "description" : "Название товара с рекомендованной карточки на Маркете.\n\nМожет отсутствовать в ответе.\n",
              "type" : "string"
            }
          },
          "type" : "object"
        } ],
        "description" : "Информация о рекомендованных карточках товаров.",
        "example" : {
          "manufacturerCountries" : [ "manufacturerCountries", "manufacturerCountries" ],
          "marketCategoryId" : 4,
          "certificate" : "certificate",
          "description" : "description",
          "availability" : "ACTIVE",
          "marketModelId" : 7,
          "pictures" : [ "pictures", "pictures" ],
          "vendorCode" : "VNDR-0005A",
          "manufacturer" : "manufacturer",
          "marketSkuName" : "marketSkuName",
          "urls" : [ "urls", "urls" ],
          "deliveryDurationDays" : 5,
          "feedId" : 0,
          "vendor" : "LEVENHUK",
          "price" : 2.027123023002322,
          "marketSku" : null,
          "transportUnitSize" : 1,
          "id" : "id",
          "lifeTime" : {
            "timePeriod" : 6,
            "comment" : "comment",
            "timeUnit" : "HOUR"
          },
          "shelfLife" : {
            "timePeriod" : 6,
            "comment" : "comment",
            "timeUnit" : "HOUR"
          },
          "supplyScheduleDays" : [ "MONDAY", "MONDAY" ],
          "marketModelName" : "marketModelName",
          "lifeTimeDays" : 9,
          "quantumOfSupply" : 5,
          "barcodes" : [ "46012300000000", "46012300000000" ],
          "customsCommodityCodes" : [ "customsCommodityCodes", "customsCommodityCodes" ],
          "processingState" : {
            "notes" : [ {
              "payload" : "payload",
              "type" : "ASSORTMENT"
            }, {
              "payload" : "payload",
              "type" : "ASSORTMENT"
            } ],
            "status" : "UNKNOWN"
          },
          "marketCategoryName" : "marketCategoryName",
          "shopSku" : "shopSku",
          "boxCount" : 2,
          "minShipment" : 6,
          "name" : "Ударная дрель Makita HP1630, 710 Вт",
          "shelfLifeDays" : 7,
          "guaranteePeriod" : {
            "timePeriod" : 6,
            "comment" : "comment",
            "timeUnit" : "HOUR"
          },
          "weightDimensions" : {
            "length" : 65.55,
            "width" : 50.7,
            "weight" : 1.001,
            "height" : 20
          },
          "category" : "category",
          "guaranteePeriodDays" : 3
        },
        "type" : "object"
      },
      "UpdatePriceWithDiscountDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePriceDTO"
        }, {
          "properties" : {
            "discountBase" : {
              "description" : "Цена до скидки.\n\nЧисло должно быть целым. Вы можете указать цену со скидкой от 5 до 99%.\n\nПередавайте этот параметр при каждом обновлении цены, если предоставляете скидку на товар.\n",
              "exclusiveMinimum" : true,
              "minimum" : 0,
              "type" : "number"
            }
          },
          "type" : "object"
        } ],
        "description" : "Цена с указанием скидки.",
        "example" : {
          "discountBase" : 0.7061401241503109,
          "currencyId" : "RUR",
          "value" : 0.23021358869347652
        },
        "type" : "object"
      },
      "PriceDTO" : {
        "description" : "Цена с указанием скидки, валюты и времени последнего обновления.",
        "example" : {
          "vat" : 1,
          "discountBase" : 6.027456183070403,
          "currencyId" : "RUR",
          "value" : 0.8008281904610115
        },
        "properties" : {
          "value" : {
            "description" : "Цена на товар.",
            "type" : "number"
          },
          "discountBase" : {
            "description" : "Цена на товар без скидки.\n\nЧисло должно быть целым. Вы можете указать цену со скидкой от 5 до 99%.\n\nПередавайте этот параметр при каждом обновлении цены, если предоставляете скидку на товар.\n",
            "type" : "number"
          },
          "currencyId" : {
            "$ref" : "#/components/schemas/CurrencyType"
          },
          "vat" : {
            "description" : "Идентификатор ставки НДС, применяемой для товара:\n\n* `2` — 10%.\n* `5` — 0%.\n* `6` — не облагается НДС.\n* `7` — 20%.\n\nЕсли параметр не указан, используется ставка НДС, установленная в кабинете.\n",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "OfferPriceResponseDTO" : {
        "description" : "Информация об установленной цене на товар.",
        "example" : {
          "price" : {
            "vat" : 1,
            "discountBase" : 6.027456183070403,
            "currencyId" : "RUR",
            "value" : 0.8008281904610115
          },
          "marketSku" : 0,
          "id" : "id",
          "updatedAt" : "2000-01-23T04:56:07.000+00:00"
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор предложения из прайс-листа.",
            "type" : "string"
          },
          "price" : {
            "$ref" : "#/components/schemas/PriceDTO"
          },
          "marketSku" : {
            "description" : "SKU на Маркете.",
            "format" : "int64",
            "type" : "integer"
          },
          "updatedAt" : {
            "description" : "Дата и время последнего обновления цены на товар.",
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "OfferPriceByOfferIdsResponseDTO" : {
        "description" : "Информация об установленной цене.",
        "example" : {
          "price" : {
            "vat" : 1,
            "discountBase" : 6.027456183070403,
            "currencyId" : "RUR",
            "value" : 0.8008281904610115
          },
          "offerId" : "offerId",
          "updatedAt" : "2000-01-23T04:56:07.000+00:00"
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "price" : {
            "$ref" : "#/components/schemas/PriceDTO"
          },
          "updatedAt" : {
            "description" : "Дата и время последнего обновления цены.",
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MarketSku" : {
        "description" : "SKU на Маркете.",
        "format" : "int64",
        "type" : "integer"
      },
      "PriceSuggestOfferDTO" : {
        "description" : "Товар с ценами для продвижения.",
        "example" : {
          "marketSku" : 0,
          "offerId" : "offerId",
          "priceSuggestion" : [ {
            "price" : 6.027456183070403,
            "type" : "BUYBOX"
          }, {
            "price" : 6.027456183070403,
            "type" : "BUYBOX"
          } ]
        },
        "properties" : {
          "marketSku" : {
            "description" : "SKU на Маркете.",
            "format" : "int64",
            "type" : "integer"
          },
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "priceSuggestion" : {
            "description" : "Цены для продвижения.\n",
            "items" : {
              "$ref" : "#/components/schemas/PriceSuggestDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "QuarantineOfferDTO" : {
        "description" : "Товар в карантине.",
        "example" : {
          "verdicts" : [ {
            "type" : "PRICE_CHANGE",
            "params" : [ {
              "name" : "CURRENT_PRICE",
              "value" : "value"
            }, {
              "name" : "CURRENT_PRICE",
              "value" : "value"
            } ]
          }, {
            "type" : "PRICE_CHANGE",
            "params" : [ {
              "name" : "CURRENT_PRICE",
              "value" : "value"
            }, {
              "name" : "CURRENT_PRICE",
              "value" : "value"
            } ]
          } ],
          "offerId" : "offerId",
          "currentPrice" : {
            "currencyId" : null,
            "value" : 0.9301444243932576
          },
          "lastValidPrice" : {
            "currencyId" : null,
            "value" : 0.9301444243932576
          }
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "currentPrice" : {
            "$ref" : "#/components/schemas/BasePriceDTO"
          },
          "lastValidPrice" : {
            "$ref" : "#/components/schemas/BasePriceDTO"
          },
          "verdicts" : {
            "description" : "Причины попадания товара в карантин.",
            "items" : {
              "$ref" : "#/components/schemas/PriceQuarantineVerdictDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UpdateStockItemDTO" : {
        "description" : "Информация об остатках товара.\n",
        "example" : {
          "count" : 160165638,
          "updatedAt" : "2000-01-23T04:56:07.000+00:00"
        },
        "properties" : {
          "count" : {
            "description" : "Количество доступного товара.\n",
            "format" : "int64",
            "maximum" : 2000000000,
            "minimum" : 0,
            "type" : "integer"
          },
          "updatedAt" : {
            "description" : "Дата и время последнего обновления информации об остатках.\n<br><br>\nЕсли вы не передали параметр `updatedAt`, используется текущее время.\n<br><br>\nФормат даты и времени: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.\n",
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "count" ],
        "type" : "object"
      },
      "WarehouseOffersDTO" : {
        "description" : "Информация об остатках товаров на складе.",
        "example" : {
          "offers" : [ {
            "offerId" : "offerId",
            "turnoverSummary" : {
              "turnoverDays" : 6.027456183070403,
              "turnover" : "LOW"
            },
            "stocks" : [ {
              "count" : 1,
              "type" : "FIT"
            }, {
              "count" : 1,
              "type" : "FIT"
            } ],
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          }, {
            "offerId" : "offerId",
            "turnoverSummary" : {
              "turnoverDays" : 6.027456183070403,
              "turnover" : "LOW"
            },
            "stocks" : [ {
              "count" : 1,
              "type" : "FIT"
            }, {
              "count" : 1,
              "type" : "FIT"
            } ],
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          } ],
          "warehouseId" : 0
        },
        "properties" : {
          "warehouseId" : {
            "description" : "Идентификатор склада.",
            "format" : "int64",
            "type" : "integer"
          },
          "offers" : {
            "description" : "Информация об остатках.",
            "items" : {
              "$ref" : "#/components/schemas/WarehouseOfferDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "offers", "warehouseId" ],
        "type" : "object"
      },
      "DeliveryServiceInfoDTO" : {
        "description" : "Информация о службе доставки.",
        "example" : {
          "name" : "name",
          "id" : 0
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор службы доставки.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Наименование службы доставки.",
            "type" : "string"
          }
        },
        "required" : [ "id", "name" ],
        "type" : "object"
      },
      "OrdersStatsOrderDTO" : {
        "description" : "Информация о заказе.",
        "example" : {
          "partnerOrderId" : "partnerOrderId",
          "commissions" : [ {
            "actual" : 1.2315135367772556,
            "type" : "FEE"
          }, {
            "actual" : 1.2315135367772556,
            "type" : "FEE"
          } ],
          "statusUpdateDate" : "2000-01-23T04:56:07.000+00:00",
          "payments" : [ {
            "date" : "2000-01-23",
            "total" : 7.386281948385884,
            "paymentOrder" : {
              "date" : "2000-01-23",
              "id" : "id"
            },
            "id" : "id",
            "source" : "BUYER",
            "type" : "PAYMENT"
          }, {
            "date" : "2000-01-23",
            "total" : 7.386281948385884,
            "paymentOrder" : {
              "date" : "2000-01-23",
              "id" : "id"
            },
            "id" : "id",
            "source" : "BUYER",
            "type" : "PAYMENT"
          } ],
          "fake" : true,
          "deliveryRegion" : {
            "name" : "name",
            "id" : 6
          },
          "id" : 0,
          "creationDate" : "2000-01-23",
          "items" : [ {
            "cofinanceValue" : 4.145608029883936,
            "initialCount" : 3,
            "offerName" : "offerName",
            "shopSku" : "shopSku",
            "cisList" : [ "cisList", "cisList" ],
            "marketSku" : 1,
            "count" : 5,
            "bidFee" : 570,
            "cofinanceThreshold" : 2.027123023002322,
            "details" : [ {
              "updateDate" : "2000-01-23",
              "stockType" : "FIT",
              "itemStatus" : "REJECTED",
              "itemCount" : 9
            }, {
              "updateDate" : "2000-01-23",
              "stockType" : "FIT",
              "itemStatus" : "REJECTED",
              "itemCount" : 9
            } ],
            "prices" : [ {
              "total" : 2.3021358869347655,
              "costPerItem" : 5.637376656633329,
              "type" : "BUYER"
            }, {
              "total" : 2.3021358869347655,
              "costPerItem" : 5.637376656633329,
              "type" : "BUYER"
            } ],
            "warehouse" : {
              "name" : "name",
              "id" : 7
            }
          }, {
            "cofinanceValue" : 4.145608029883936,
            "initialCount" : 3,
            "offerName" : "offerName",
            "shopSku" : "shopSku",
            "cisList" : [ "cisList", "cisList" ],
            "marketSku" : 1,
            "count" : 5,
            "bidFee" : 570,
            "cofinanceThreshold" : 2.027123023002322,
            "details" : [ {
              "updateDate" : "2000-01-23",
              "stockType" : "FIT",
              "itemStatus" : "REJECTED",
              "itemCount" : 9
            }, {
              "updateDate" : "2000-01-23",
              "stockType" : "FIT",
              "itemStatus" : "REJECTED",
              "itemCount" : 9
            } ],
            "prices" : [ {
              "total" : 2.3021358869347655,
              "costPerItem" : 5.637376656633329,
              "type" : "BUYER"
            }, {
              "total" : 2.3021358869347655,
              "costPerItem" : 5.637376656633329,
              "type" : "BUYER"
            } ],
            "warehouse" : {
              "name" : "name",
              "id" : 7
            }
          } ],
          "initialItems" : [ {
            "cofinanceValue" : 4.145608029883936,
            "initialCount" : 3,
            "offerName" : "offerName",
            "shopSku" : "shopSku",
            "cisList" : [ "cisList", "cisList" ],
            "marketSku" : 1,
            "count" : 5,
            "bidFee" : 570,
            "cofinanceThreshold" : 2.027123023002322,
            "details" : [ {
              "updateDate" : "2000-01-23",
              "stockType" : "FIT",
              "itemStatus" : "REJECTED",
              "itemCount" : 9
            }, {
              "updateDate" : "2000-01-23",
              "stockType" : "FIT",
              "itemStatus" : "REJECTED",
              "itemCount" : 9
            } ],
            "prices" : [ {
              "total" : 2.3021358869347655,
              "costPerItem" : 5.637376656633329,
              "type" : "BUYER"
            }, {
              "total" : 2.3021358869347655,
              "costPerItem" : 5.637376656633329,
              "type" : "BUYER"
            } ],
            "warehouse" : {
              "name" : "name",
              "id" : 7
            }
          }, {
            "cofinanceValue" : 4.145608029883936,
            "initialCount" : 3,
            "offerName" : "offerName",
            "shopSku" : "shopSku",
            "cisList" : [ "cisList", "cisList" ],
            "marketSku" : 1,
            "count" : 5,
            "bidFee" : 570,
            "cofinanceThreshold" : 2.027123023002322,
            "details" : [ {
              "updateDate" : "2000-01-23",
              "stockType" : "FIT",
              "itemStatus" : "REJECTED",
              "itemCount" : 9
            }, {
              "updateDate" : "2000-01-23",
              "stockType" : "FIT",
              "itemStatus" : "REJECTED",
              "itemCount" : 9
            } ],
            "prices" : [ {
              "total" : 2.3021358869347655,
              "costPerItem" : 5.637376656633329,
              "type" : "BUYER"
            }, {
              "total" : 2.3021358869347655,
              "costPerItem" : 5.637376656633329,
              "type" : "BUYER"
            } ],
            "warehouse" : {
              "name" : "name",
              "id" : 7
            }
          } ],
          "status" : "CANCELLED_BEFORE_PROCESSING",
          "paymentType" : "CREDIT"
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор заказа.",
            "format" : "int64",
            "type" : "integer"
          },
          "creationDate" : {
            "description" : "Дата создания заказа.\n\nФормат даты: `ГГГГ-ММ-ДД`.\n",
            "format" : "date",
            "type" : "string"
          },
          "statusUpdateDate" : {
            "description" : "Дата и время, когда статус заказа был изменен в последний раз.\n\nФормат даты и времени: ISO 8601. Например, `2017-11-21T00:00:00`. Часовой пояс — UTC+03:00 (Москва).\n",
            "format" : "date-time",
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/OrderStatsStatusType"
          },
          "partnerOrderId" : {
            "description" : "Идентификатор заказа в информационной системе магазина.",
            "type" : "string"
          },
          "paymentType" : {
            "$ref" : "#/components/schemas/OrdersStatsOrderPaymentType"
          },
          "fake" : {
            "description" : "Тип заказа:\n\n* `false` — настоящий заказ покупателя.\n\n* `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета.\n",
            "type" : "boolean"
          },
          "deliveryRegion" : {
            "$ref" : "#/components/schemas/OrdersStatsDeliveryRegionDTO"
          },
          "items" : {
            "description" : "Список товаров в заказе после возможных изменений.",
            "items" : {
              "$ref" : "#/components/schemas/OrdersStatsItemDTO"
            },
            "type" : "array"
          },
          "initialItems" : {
            "description" : "Список товаров в заказе до изменений.",
            "items" : {
              "$ref" : "#/components/schemas/OrdersStatsItemDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "payments" : {
            "description" : "Информация о денежных переводах по заказу.",
            "items" : {
              "$ref" : "#/components/schemas/OrdersStatsPaymentDTO"
            },
            "type" : "array"
          },
          "commissions" : {
            "description" : "Информация о комиссиях за заказ.",
            "items" : {
              "$ref" : "#/components/schemas/OrdersStatsCommissionDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "commissions", "items", "payments" ],
        "type" : "object"
      },
      "GoodsStatsGoodsDTO" : {
        "description" : "Информация о товаре.",
        "example" : {
          "shopSku" : "shopSku",
          "marketSku" : 0,
          "price" : 6.027456183070403,
          "name" : "name",
          "warehouses" : [ {
            "name" : "name",
            "id" : 9,
            "stocks" : [ {
              "count" : 1,
              "type" : "FIT"
            }, {
              "count" : 1,
              "type" : "FIT"
            } ]
          }, {
            "name" : "name",
            "id" : 9,
            "stocks" : [ {
              "count" : 1,
              "type" : "FIT"
            }, {
              "count" : 1,
              "type" : "FIT"
            } ]
          } ],
          "weightDimensions" : {
            "length" : 5.962133916683182,
            "width" : 5.637376656633329,
            "weight" : 7.061401241503109,
            "height" : 2.3021358869347655
          },
          "categoryName" : "categoryName",
          "categoryId" : 1,
          "pictures" : [ "pictures", "pictures" ],
          "tariffs" : [ {
            "amount" : 2.027123023002322,
            "type" : "AGENCY_COMMISSION",
            "percent" : 3.616076749251911,
            "parameters" : [ {
              "name" : "name",
              "value" : "value"
            }, {
              "name" : "name",
              "value" : "value"
            } ]
          }, {
            "amount" : 2.027123023002322,
            "type" : "AGENCY_COMMISSION",
            "percent" : 3.616076749251911,
            "parameters" : [ {
              "name" : "name",
              "value" : "value"
            }, {
              "name" : "name",
              "value" : "value"
            } ]
          } ]
        },
        "properties" : {
          "shopSku" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "marketSku" : {
            "description" : "SKU на Маркете.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Название товара.",
            "type" : "string"
          },
          "price" : {
            "description" : "Цена на товар в валюте, которая установлена [в кабинете продавца на Маркете](https://partner.market.yandex.ru/).",
            "type" : "number"
          },
          "categoryId" : {
            "description" : "Идентификатор категории товара на Маркете.",
            "format" : "int64",
            "type" : "integer"
          },
          "categoryName" : {
            "description" : "Название категории товара на Маркете.",
            "type" : "string"
          },
          "weightDimensions" : {
            "$ref" : "#/components/schemas/GoodsStatsWeightDimensionsDTO"
          },
          "warehouses" : {
            "description" : "Информация о складах, на которых хранится товар.\n\nПараметр не приходит, если товара нет ни на одном складе.\n",
            "items" : {
              "$ref" : "#/components/schemas/GoodsStatsWarehouseDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "tariffs" : {
            "description" : "Информация о тарифах, по которым нужно заплатить за услуги Маркета.\n\nПо некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели FBS стоимость услуги `SORTING` (обработка заказа) зависит от способа отгрузки\nи количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/).\n",
            "items" : {
              "$ref" : "#/components/schemas/TariffDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "pictures" : {
            "description" : "Ссылки (URL) изображений товара в хорошем качестве.",
            "items" : {
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ReportStatusType" : {
        "description" : "Статус генерации отчета:\n\n* `PENDING` — отчет ожидает генерации.\n* `PROCESSING` — отчет генерируется.\n* `FAILED` — во время генерации произошла ошибка.\n* `DONE` — отчет готов.\n",
        "enum" : [ "PENDING", "PROCESSING", "FAILED", "DONE" ],
        "type" : "string"
      },
      "ReportSubStatusType" : {
        "description" : "Подстатус генерации отчета:\n* `NO_DATA` — для такого отчета нет данных.\n* `TOO_LARGE` — отчет превысил допустимый размер — укажите меньший период времени или уточните условия запроса.\n* `RESOURCE_NOT_FOUND` — для такого отчета не удалось найти часть сущностей.\n",
        "enum" : [ "NO_DATA", "TOO_LARGE", "RESOURCE_NOT_FOUND" ],
        "type" : "string"
      },
      "OutletStatusType" : {
        "description" : "Статус точки продаж.\n\nВозможные значения:\n\n* `AT_MODERATION` — проверяется.\n* `FAILED` — не прошла проверку и отклонена модератором.\n* `MODERATED` — проверена и одобрена.\n* `NONMODERATED` — новая точка, нуждается в проверке.\n",
        "enum" : [ "AT_MODERATION", "FAILED", "MODERATED", "NONMODERATED", "UNKNOWN" ],
        "type" : "string"
      },
      "OutletType" : {
        "description" : "Тип точки продаж.\n\nВозможные значения:\n\n* `DEPOT` — пункт выдачи заказов.\n* `MIXED` — смешанный тип точки продаж (торговый зал и пункт выдачи заказов).\n* `RETAIL` — розничная точка продаж (торговый зал).\n",
        "enum" : [ "DEPOT", "MIXED", "RETAIL", "NOT_DEFINED" ],
        "type" : "string"
      },
      "OutletVisibilityType" : {
        "description" : "Состояние точки продаж.\n\nВозможные значения:\n\n* `HIDDEN` — точка продаж выключена.\n* `VISIBLE` — точка продаж включена.\n",
        "enum" : [ "HIDDEN", "VISIBLE", "UNKNOWN" ],
        "type" : "string"
      },
      "OutletAddressDTO" : {
        "description" : "Адрес точки продаж.\n",
        "example" : {
          "number" : "number",
          "km" : 6,
          "regionId" : 0,
          "city" : "city",
          "street" : "street",
          "additional" : "additional",
          "estate" : "estate",
          "block" : "block",
          "building" : "building"
        },
        "properties" : {
          "regionId" : {
            "description" : "Идентификатор региона.\n\nИдентификатор можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).\n\n{% note alert %}\n\nПри создании и редактировании точек продаж можно указывать только регионы типов `TOWN` (город), `CITY` (крупный город) и `REPUBLIC_AREA` (район субъекта федерации). Тип региона указан в выходных параметрах type запросов [GET regions](../../reference/regions/searchRegionsByName.md) и [GET regions/{regionId}](../../reference/regions/searchRegionsById.md).\n\n{% endnote %}\n",
            "format" : "int64",
            "type" : "integer"
          },
          "street" : {
            "description" : "Улица.",
            "maxLength" : 512,
            "type" : "string"
          },
          "number" : {
            "description" : "Номер дома.",
            "maxLength" : 256,
            "type" : "string"
          },
          "building" : {
            "description" : "Номер строения.",
            "maxLength" : 16,
            "type" : "string"
          },
          "estate" : {
            "description" : "Номер владения.",
            "maxLength" : 16,
            "type" : "string"
          },
          "block" : {
            "description" : "Номер корпуса.",
            "maxLength" : 16,
            "type" : "string"
          },
          "additional" : {
            "description" : "Дополнительная информация.",
            "type" : "string"
          },
          "km" : {
            "description" : "Порядковый номер километра дороги, на котором располагается точка продаж, если отсутствует улица.",
            "format" : "int32",
            "type" : "integer"
          },
          "city" : {
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Не используйте его. Город или населенный пункт возвращается в параметре `regionId`.\n\n{% endnote %}\n",
            "maxLength" : 200,
            "type" : "string"
          }
        },
        "required" : [ "regionId" ],
        "type" : "object"
      },
      "OutletWorkingScheduleDTO" : {
        "description" : "Список режимов работы точки продаж.\n",
        "example" : {
          "scheduleItems" : [ {
            "startDay" : "MONDAY",
            "endDay" : null,
            "startTime" : "startTime",
            "endTime" : "endTime"
          }, {
            "startDay" : "MONDAY",
            "endDay" : null,
            "startTime" : "startTime",
            "endTime" : "endTime"
          } ],
          "workInHoliday" : true
        },
        "properties" : {
          "workInHoliday" : {
            "description" : "Признак, работает ли точка продаж в дни государственных праздников.\n\nВозможные значения:\n\n* `false` — точка продаж не работает в дни государственных праздников.\n* `true` — точка продаж работает в дни государственных праздников.\n",
            "type" : "boolean"
          },
          "scheduleItems" : {
            "description" : "Список расписаний работы точки продаж.\n",
            "items" : {
              "$ref" : "#/components/schemas/OutletWorkingScheduleItemDTO"
            },
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "scheduleItems" ],
        "type" : "object"
      },
      "OutletDeliveryRuleDTO" : {
        "description" : "Информация об условиях доставки для данной точки продаж.",
        "example" : {
          "priceFreePickup" : 7.061401241503109,
          "deliveryServiceId" : 5,
          "maxDeliveryDays" : 5,
          "minDeliveryDays" : 1,
          "orderBefore" : 5,
          "unspecifiedDeliveryInterval" : true
        },
        "properties" : {
          "minDeliveryDays" : {
            "description" : "Минимальный срок доставки товаров в точку продаж. Указан в рабочих днях.\n\nМинимальное значение: `0` — доставка в день заказа.\n\nМаксимальное значение: `60`.\n\nДопустимые сроки доставки (разница между `minDeliveryDays` и `maxDeliveryDays`) зависят от региона.\n\nДля доставки по своему региону разница не должна превышать двух дней. Например, если `minDeliveryDays` равно 1, то для `maxDeliveryDays` допускаются значения от 1 до 3.\n\nДля доставки в другие регионы:\n\n* Если `minDeliveryDays` до 18 дней, разница не должна превышать четырех дней. Например, если `minDeliveryDays` равно 10, то для `maxDeliveryDays` допускаются значения от 10 до 14.\n* Если `minDeliveryDays` больше 18 дней, разница должна быть не больше чем в два раза. Например, если `minDeliveryDays` равно 21, то для `maxDeliveryDays` допускаются значения от 21 до 42.\n\nОбязательный параметр, если `type=\"DEPOT\"` или `type=\"MIXED\"`.\n\nВзаимоисключающий с параметром `unspecifiedDeliveryInterval`.\n",
            "format" : "int32",
            "type" : "integer"
          },
          "maxDeliveryDays" : {
            "description" : "Максимальный срок доставки товаров в точку продаж. Указан в рабочих днях.\n\nМинимальное значение: `0` — доставка в день заказа.\n\nМаксимальное значение: `60`.\n\nДопустимые сроки доставки (разница между `minDeliveryDays` и `maxDeliveryDays`) зависят от региона.\n\nДля доставки по своему региону разница не должна превышать двух дней. Например, если `minDeliveryDays` равно 1, то для `maxDeliveryDays` допускаются значения от 1 до 3.\n\nДля доставки в другие регионы:\n\n* Если `minDeliveryDays` до 18 дней, разница не должна превышать четырех дней. Например, если `minDeliveryDays` равно 10, то для `maxDeliveryDays` допускаются значения от 10 до 14.\n* Если `minDeliveryDays` больше 18 дней, разница должна быть не больше чем в два раза. Например, если `minDeliveryDays` равно 21, то для `maxDeliveryDays` допускаются значения от 21 до 42.\n\nОбязательный параметр, если `type=\"DEPOT\"` или `type=\"MIXED\"`.\n\nВзаимоисключающий с параметром `unspecifiedDeliveryInterval`.\n",
            "format" : "int32",
            "type" : "integer"
          },
          "deliveryServiceId" : {
            "description" : "Идентификатор службы доставки товаров в точку продаж.\n\nИнформацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).\n",
            "format" : "int64",
            "type" : "integer"
          },
          "orderBefore" : {
            "description" : "Час, до которого покупателю нужно сделать заказ, чтобы он был доставлен в точку продаж в сроки от `minDeliveryDays` до `maxDeliveryDays`.\n\nЕсли покупатель оформит заказ после указанного часа, он будет доставлен в сроки от `minDeliveryDays` + 1 рабочий день до `maxDeliveryDays` + 1 рабочий день.\n\nЗначение по умолчанию: `24`.\n",
            "format" : "int32",
            "maximum" : 24,
            "minimum" : 0,
            "type" : "integer"
          },
          "priceFreePickup" : {
            "description" : "Цена на товар, начиная с которой действует бесплатный самовывоз товара из точки продаж.",
            "type" : "number"
          },
          "unspecifiedDeliveryInterval" : {
            "description" : "Признак доставки товаров в точку продаж на заказ.\n\nПризнак выставлен, если:\n\n* точный срок доставки в точку продаж заранее неизвестен (например, если магазин собирает несколько заказов для отправки в точку или населенный пункт);\n* все товары изготавливаются или поставляются на заказ.\n\nВозможные значения:\n* `true` — товары доставляются в точку продаж на заказ.\n\nПараметр указывается только со значением `true`.\n\nВзаимоисключающий с параметрами `minDeliveryDays` и `maxDeliveryDays`.\n",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "FullOutletLicenseDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/OutletLicenseDTO"
        }, {
          "properties" : {
            "checkStatus" : {
              "$ref" : "#/components/schemas/LicenseCheckStatusType"
            },
            "checkComment" : {
              "description" : "Причина, по которой лицензия не прошла проверку.\n\nПараметр возвращается, только если параметр `checkStatus` имеет значение `FAIL`.\n",
              "type" : "string"
            }
          },
          "type" : "object"
        } ],
        "description" : "Информация о лицензии.",
        "example" : {
          "licenseType" : "ALCOHOL",
          "number" : "number",
          "dateOfExpiry" : "2000-01-23T04:56:07.000+00:00",
          "checkStatus" : "NEW",
          "outletId" : 6,
          "id" : 0,
          "dateOfIssue" : "2000-01-23T04:56:07.000+00:00",
          "checkComment" : "checkComment"
        },
        "type" : "object"
      },
      "LicenseType" : {
        "description" : "Тип лицензии:\n\n* `ALCOHOL` — лицензия на розничную продажу алкогольной продукции.\n",
        "enum" : [ "ALCOHOL", "UNKNOWN" ],
        "type" : "string"
      },
      "FeedbackDTO" : {
        "description" : "Отзыв пользователя Яндекс Маркета об указанном магазине.",
        "example" : {
          "comments" : [ {
            "createdAt" : "2000-01-23T04:56:07.000+00:00",
            "children" : [ null, null ],
            "author" : {
              "name" : "name",
              "type" : "USER"
            },
            "id" : 6,
            "body" : "body",
            "parentId" : 1,
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          }, {
            "createdAt" : "2000-01-23T04:56:07.000+00:00",
            "children" : [ null, null ],
            "author" : {
              "name" : "name",
              "type" : "USER"
            },
            "id" : 6,
            "body" : "body",
            "parentId" : 1,
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          } ],
          "shop" : {
            "name" : "name"
          },
          "author" : {
            "name" : "name",
            "region" : {
              "parent" : null,
              "children" : [ null, null ],
              "name" : "name",
              "id" : 0,
              "type" : "OTHER"
            }
          },
          "verified" : true,
          "recommend" : true,
          "grades" : {
            "average" : 5.962133916683182,
            "agreeCount" : 5,
            "rejectCount" : 2,
            "factors" : [ {
              "description" : "description",
              "id" : 7,
              "title" : "title",
              "value" : 9
            }, {
              "description" : "description",
              "id" : 7,
              "title" : "title",
              "value" : 9
            } ]
          },
          "pro" : "pro",
          "createdAt" : "2000-01-23T04:56:07.000+00:00",
          "id" : 0,
          "text" : "text",
          "state" : "LAST",
          "contra" : "contra",
          "resolved" : true,
          "order" : {
            "delivery" : "DELIVERY",
            "shopOrderId" : "shopOrderId"
          }
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор отзыва.",
            "format" : "int64",
            "type" : "integer"
          },
          "createdAt" : {
            "description" : "Дата и время создания отзыва.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`.\n",
            "format" : "date-time",
            "type" : "string"
          },
          "text" : {
            "description" : "Комментарий автора отзыва.",
            "type" : "string"
          },
          "state" : {
            "$ref" : "#/components/schemas/FeedbackStateType"
          },
          "author" : {
            "$ref" : "#/components/schemas/FeedbackAuthorDTO"
          },
          "pro" : {
            "description" : "Достоинства магазина, описанные в отзыве.",
            "type" : "string"
          },
          "contra" : {
            "description" : "Недостатки магазина, описанные в отзыве.",
            "type" : "string"
          },
          "comments" : {
            "description" : "Переписка автора отзыва с магазином.",
            "items" : {
              "$ref" : "#/components/schemas/FeedbackCommentDTO"
            },
            "type" : "array"
          },
          "shop" : {
            "$ref" : "#/components/schemas/FeedbackShopDTO"
          },
          "resolved" : {
            "description" : "Решена ли проблема автора отзыва:\n\n* `true` — да.\n* `false` — нет.\n\nЕсли проблема решена, около отзыва на странице магазина появляется соответствующая надпись.\n",
            "type" : "boolean"
          },
          "verified" : {
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nЯвляется ли отзыв рекомендованным:\n\n* `true` — да.\n* `false` — нет.\n",
            "type" : "boolean"
          },
          "recommend" : {
            "description" : "Купил бы автор отзыва в магазине снова:\n\n* `true` — да.\n* `false` — нет.\n",
            "type" : "boolean"
          },
          "grades" : {
            "$ref" : "#/components/schemas/FeedbackGradesDTO"
          },
          "order" : {
            "$ref" : "#/components/schemas/FeedbackOrderDTO"
          }
        },
        "required" : [ "comments" ],
        "type" : "object"
      },
      "GoodsFeedbackDTO" : {
        "description" : "Отзыв о товаре.",
        "example" : {
          "createdAt" : "2000-01-23T04:56:07.000+00:00",
          "needReaction" : true,
          "identifiers" : {
            "orderId" : 6,
            "modelId" : 1
          },
          "author" : "author",
          "feedbackId" : 0,
          "description" : {
            "advantages" : "advantages",
            "disadvantages" : "disadvantages",
            "comment" : "comment"
          },
          "media" : {
            "videos" : [ "videos", "videos" ],
            "photos" : [ "photos", "photos" ]
          },
          "statistics" : {
            "commentsCount" : 5,
            "rating" : 3,
            "paidAmount" : 2,
            "recommended" : true
          }
        },
        "properties" : {
          "feedbackId" : {
            "description" : "Идентификатор отзыва.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "createdAt" : {
            "description" : "Дата и время создания отзыва.",
            "format" : "date-time",
            "type" : "string"
          },
          "needReaction" : {
            "description" : "Нужен ли ответ на отзыв.",
            "type" : "boolean"
          },
          "identifiers" : {
            "$ref" : "#/components/schemas/GoodsFeedbackIdentifiersDTO"
          },
          "author" : {
            "description" : "Имя автора отзыва.",
            "type" : "string"
          },
          "description" : {
            "$ref" : "#/components/schemas/GoodsFeedbackDescriptionDTO"
          },
          "media" : {
            "$ref" : "#/components/schemas/GoodsFeedbackMediaDTO"
          },
          "statistics" : {
            "$ref" : "#/components/schemas/GoodsFeedbackStatisticsDTO"
          }
        },
        "required" : [ "createdAt", "feedbackId", "identifiers", "needReaction", "statistics" ],
        "type" : "object"
      },
      "GoodsFeedbackCommentText" : {
        "description" : "Текст комментария.",
        "maxLength" : 4096,
        "minLength" : 1,
        "type" : "string"
      },
      "GoodsFeedbackCommentAuthorDTO" : {
        "description" : "Информация об авторе комментария.",
        "example" : {
          "name" : "name",
          "type" : "USER"
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/GoodsFeedbackCommentAuthorType"
          },
          "name" : {
            "description" : "Имя автора или название кабинета.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "GoodsFeedbackCommentStatusType" : {
        "description" : "Статус комментария:\n\n* `PUBLISHED` — опубликован.\n* `UNMODERATED` — не проверен.\n* `BANNED` — заблокирован.\n* `DELETED` — удален.\n",
        "enum" : [ "PUBLISHED", "UNMODERATED", "BANNED", "DELETED" ],
        "type" : "string"
      },
      "OfferDTO" : {
        "description" : "Предложение.",
        "example" : {
          "marketCategoryId" : 1,
          "preDiscountPrice" : 5.962133916683182,
          "shopCategoryId" : "shopCategoryId",
          "modelId" : 2,
          "fee" : 3.616076749251911,
          "discount" : 5,
          "url" : "url",
          "cbid" : 9.301444243932576,
          "blocked" : true,
          "feedId" : 6,
          "price" : 0.8008281904610115,
          "name" : "name",
          "currency" : "RUR",
          "id" : "id",
          "cutPrice" : true,
          "bid" : 7.061401241503109
        },
        "properties" : {
          "price" : {
            "description" : "Цена предложения.\n\nДо версии 2.0 партнерского API у параметра был тип String.\n",
            "type" : "number"
          },
          "feedId" : {
            "description" : "Идентификатор прайс-листа, содержащего предложение.\n\nПараметр доступен начиная с версии 2.0 партнерского API.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "id" : {
            "description" : "Идентификатор предложения из прайс-листа.\n\nПараметр выводится, если в прайс-листе задан уникальный идентификатор. Если в прайс-листе содержится несколько предложений с одинаковыми идентификаторами, параметр `id` указывается только для первого из них, для остальных параметры `id` и `feedId` не выводятся.\n\nПараметр доступен начиная с версии 2.0 партнерского API.\n",
            "type" : "string"
          },
          "shopCategoryId" : {
            "description" : "Идентификатор категории предложения, указанный магазином в прайс-листе.\n\nПараметр выводится только для предложений, у которых указана категория в прайс-листе.\n\nПараметр доступен начиная с версии 2.0 партнерского API.\n",
            "type" : "string"
          },
          "marketCategoryId" : {
            "description" : "Идентификатор категории предложения в дереве категорий Маркета.\nПараметр доступен начиная с версии 2.0 партнерского API.\n",
            "format" : "int32",
            "type" : "integer"
          },
          "preDiscountPrice" : {
            "description" : "Цена предложения без скидки.",
            "type" : "number"
          },
          "discount" : {
            "description" : "Скидка на предложение в процентах.",
            "format" : "int32",
            "type" : "integer"
          },
          "cutPrice" : {
            "description" : "Является ли предложение уцененным:\n\n* `true` — да.\n* `false` — нет.\n\nПараметр доступен начиная с версии 2.58 партнерского API.\n",
            "type" : "boolean"
          },
          "url" : {
            "description" : "URL-адрес предложения на сайте магазина.",
            "type" : "string"
          },
          "modelId" : {
            "description" : "Идентификатор модели Маркета, с которой соотнесено предложение.\n\nЕсли предложение не соотнесено ни с какой карточкой модели, то параметр `modelid` содержит значение `0`.\n\n{% note info %}\n\nИдентификатор модели присутствует в URL карточки модели в виде значения параметра `product`. Например: `https://market.yandex.ru/product/13584121`.\n\n{% endnote %}\n",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Наименование предложения.",
            "type" : "string"
          },
          "currency" : {
            "$ref" : "#/components/schemas/CurrencyType"
          },
          "bid" : {
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nСтавка на клик.\n",
            "type" : "number"
          },
          "cbid" : {
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nСтавка на клик.\n",
            "type" : "number"
          },
          "fee" : {
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nПроцент комиссии на товар при продаже по CPA.\n",
            "type" : "number"
          },
          "blocked" : {
            "description" : "Признак блокировки предложения.\nВозможные значения:\n* `false` — предложение активно, параметр не выводится.\n* `true` — предложение заблокировано.\nПараметр выводится, если предложение заблокировано и не попадает в выдачу Маркета. Это может произойти из-за отключения магазина.\n",
            "type" : "boolean"
          }
        },
        "required" : [ "modelId" ],
        "type" : "object"
      },
      "GetCampaignOfferDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseCampaignOfferDTO"
        }, {
          "properties" : {
            "basicPrice" : {
              "$ref" : "#/components/schemas/GetPriceWithDiscountDTO"
            },
            "campaignPrice" : {
              "$ref" : "#/components/schemas/GetPriceWithVatDTO"
            },
            "status" : {
              "$ref" : "#/components/schemas/OfferCampaignStatusType"
            },
            "errors" : {
              "description" : "Ошибки, препятствующие размещению товара на витрине.\n",
              "items" : {
                "$ref" : "#/components/schemas/OfferErrorDTO"
              },
              "nullable" : true,
              "type" : "array"
            },
            "warnings" : {
              "description" : "Предупреждения, не препятствующие размещению товара на витрине.\n",
              "items" : {
                "$ref" : "#/components/schemas/OfferErrorDTO"
              },
              "nullable" : true,
              "type" : "array"
            }
          },
          "type" : "object"
        } ],
        "description" : "Параметры размещения товара в магазине.",
        "example" : {
          "campaignPrice" : {
            "vat" : 5,
            "discountBase" : 5.962133916683182,
            "currencyId" : "RUR",
            "value" : 1.4658129805029452,
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          },
          "basicPrice" : {
            "discountBase" : 0.23021358869347652,
            "currencyId" : "RUR",
            "value" : 0.5637376656633328,
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          },
          "warnings" : [ {
            "comment" : "comment",
            "message" : "message"
          }, {
            "comment" : "comment",
            "message" : "message"
          } ],
          "available" : true,
          "offerId" : "offerId",
          "quantum" : {
            "minQuantity" : 1,
            "stepQuantity" : 60
          },
          "errors" : [ {
            "comment" : "comment",
            "message" : "message"
          }, {
            "comment" : "comment",
            "message" : "message"
          } ],
          "status" : "PUBLISHED"
        },
        "type" : "object"
      },
      "BaseCampaignOfferDTO" : {
        "description" : "Информация о новой цене на товар.",
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "quantum" : {
            "$ref" : "#/components/schemas/QuantumDTO"
          },
          "available" : {
            "description" : "Есть ли товар в продаже.\n",
            "type" : "boolean"
          }
        },
        "required" : [ "offerId" ],
        "type" : "object"
      },
      "OfferRecommendationDTO" : {
        "description" : "Информация о состоянии цен и рекомендации.\n",
        "example" : {
          "offer" : {
            "shows" : 0,
            "price" : {
              "currencyId" : null,
              "value" : 0.9301444243932576
            },
            "offerId" : "offerId",
            "competitiveness" : "OPTIMAL",
            "cofinancePrice" : {
              "currencyId" : null,
              "value" : 0.7061401241503109,
              "updatedAt" : "2000-01-23T04:56:07.000+00:00"
            }
          },
          "recommendation" : {
            "recommendedCofinancePrice" : {
              "currencyId" : null,
              "value" : 0.9301444243932576
            },
            "offerId" : "offerId",
            "competitivenessThresholds" : {
              "optimalPrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              },
              "averagePrice" : {
                "currencyId" : null,
                "value" : 0.9301444243932576
              }
            }
          }
        },
        "properties" : {
          "offer" : {
            "$ref" : "#/components/schemas/OfferForRecommendationDTO"
          },
          "recommendation" : {
            "$ref" : "#/components/schemas/OfferRecommendationInfoDTO"
          }
        },
        "type" : "object"
      },
      "FeedContentDTO" : {
        "description" : "Информация о проверке содержимого прайс-листа, загруженного на Маркет.",
        "example" : {
          "rejectedOffersCount" : 6,
          "error" : {
            "type" : "PARSE_ERROR"
          },
          "status" : "ERROR",
          "totalOffersCount" : 1
        },
        "properties" : {
          "rejectedOffersCount" : {
            "description" : "Количество предложений, в которых найдены ошибки на этапе загрузки прайс-листа.\nВыводится, если параметр `content status=OK`.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "status" : {
            "$ref" : "#/components/schemas/FeedStatusType"
          },
          "totalOffersCount" : {
            "description" : "Количество предложений в прайс-листе.\nВыводится, если параметр `content status=OK`.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "error" : {
            "$ref" : "#/components/schemas/FeedContentErrorDTO"
          }
        },
        "type" : "object"
      },
      "FeedDownloadDTO" : {
        "description" : "Информация о последней загрузке прайс-листа.",
        "example" : {
          "error" : {
            "description" : "description",
            "type" : "DOWNLOAD_ERROR",
            "httpStatusCode" : 5
          },
          "status" : null
        },
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/FeedStatusType"
          },
          "error" : {
            "$ref" : "#/components/schemas/FeedDownloadErrorDTO"
          }
        },
        "type" : "object"
      },
      "FeedPlacementDTO" : {
        "description" : "Информация о размещении предложений из прайс-листа на Маркете на момент выполнения запроса.",
        "example" : {
          "status" : null,
          "totalOffersCount" : 5
        },
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/FeedStatusType"
          },
          "totalOffersCount" : {
            "description" : "Количество предложений из прайс-листа, которые размещаются на Яндекс Маркете в момент выполнения запроса.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "FeedPublicationDTO" : {
        "description" : "Информация о последней публикации предложений из прайс-листа на Маркете.",
        "example" : {
          "priceAndStockUpdate" : {
            "fileTime" : "2000-01-23T04:56:07.000+00:00",
            "publishedTime" : "2000-01-23T04:56:07.000+00:00"
          },
          "status" : null,
          "full" : {
            "fileTime" : "2000-01-23T04:56:07.000+00:00",
            "publishedTime" : "2000-01-23T04:56:07.000+00:00"
          }
        },
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/FeedStatusType"
          },
          "full" : {
            "$ref" : "#/components/schemas/FeedPublicationFullDTO"
          },
          "priceAndStockUpdate" : {
            "$ref" : "#/components/schemas/FeedPublicationPriceAndStockUpdateDTO"
          }
        },
        "type" : "object"
      },
      "FeedIndexLogsFeedDTO" : {
        "description" : "Информация о прайс-листе.",
        "example" : {
          "id" : 0
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор прайс-листа.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "FeedIndexLogsRecordDTO" : {
        "description" : "Список отчетов по индексации прайс-листа.",
        "example" : {
          "offers" : {
            "rejectedCount" : 5,
            "totalCount" : 5
          },
          "fileTime" : "2000-01-23T04:56:07.000+00:00",
          "generationId" : 6,
          "indexType" : "DIFF",
          "publishedTime" : "2000-01-23T04:56:07.000+00:00",
          "error" : {
            "description" : "description",
            "type" : "DOWNLOAD_ERROR",
            "httpStatusCode" : 1
          },
          "downloadTime" : "2000-01-23T04:56:07.000+00:00",
          "status" : "ERROR"
        },
        "properties" : {
          "downloadTime" : {
            "description" : "Дата и время загрузки прайс-листа.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.\n",
            "format" : "date-time",
            "type" : "string"
          },
          "fileTime" : {
            "description" : "Дата и время, которые магазин указал в прайс-листе.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.\n",
            "format" : "date-time",
            "type" : "string"
          },
          "generationId" : {
            "description" : "Идентификатор индексации.",
            "format" : "int64",
            "type" : "integer"
          },
          "indexType" : {
            "$ref" : "#/components/schemas/FeedIndexLogsIndexType"
          },
          "publishedTime" : {
            "description" : "Дата и время публикации предложений из прайс-листа на Яндекс Маркете.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.\n",
            "format" : "date-time",
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/FeedIndexLogsStatusType"
          },
          "error" : {
            "$ref" : "#/components/schemas/FeedIndexLogsErrorDTO"
          },
          "offers" : {
            "$ref" : "#/components/schemas/FeedIndexLogsOffersDTO"
          }
        },
        "type" : "object"
      },
      "FeedParameterName" : {
        "description" : "Название параметра.\n\nВозможное значение:\n- `reparseIntervalMinutes` — период скачивания прайс-листа.\nМаркет будет скачивать прайс-лист через количество минут, указанное в параметре `value`. Например, при `value=1440`, Маркет будет скачивать прайс-лист один раз в сутки.\n\n{% note alert %}\n\nНесмотря на установленное значение, Маркет скачает прайс-лист один раз в сутки.\n\n{% endnote %}\n\nОбязательный параметр.\n",
        "type" : "string"
      },
      "ModelDTO" : {
        "description" : "Модель товара.",
        "example" : {
          "name" : "name",
          "id" : 0,
          "prices" : {
            "avg" : 6.027456183070403,
            "min" : 5.962133916683182,
            "max" : 1.4658129805029452
          }
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор модели товара.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Название модели товара.",
            "type" : "string"
          },
          "prices" : {
            "$ref" : "#/components/schemas/ModelPriceDTO"
          }
        },
        "type" : "object"
      },
      "EnrichedModelDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelDTO"
        }, {
          "properties" : {
            "offers" : {
              "description" : "Список первых десяти предложений, расположенных на карточке модели.\n\nВ ответе на запрос возвращаются предложения различных магазинов. Если есть несколько предложений от одного магазина, в ответе отображается только одно, наиболее релевантное из них.\n",
              "items" : {
                "$ref" : "#/components/schemas/ModelOfferDTO"
              },
              "nullable" : true,
              "type" : "array"
            },
            "offlineOffers" : {
              "description" : "Суммарное количество предложений в розничных магазинах в регионе. Учитываются все предложения от каждого магазина.",
              "format" : "int32",
              "type" : "integer"
            },
            "onlineOffers" : {
              "description" : "Суммарное количество предложений в интернет-магазинах в регионе. Учитываются все предложения от каждого магазина.",
              "format" : "int32",
              "type" : "integer"
            }
          },
          "type" : "object"
        } ],
        "description" : "Модель товара.",
        "example" : {
          "offers" : [ {
            "shopRating" : 9,
            "preDiscountPrice" : 5.962133916683182,
            "shippingCost" : 7.061401241503109,
            "pos" : 1,
            "regionId" : 2,
            "price" : 5.637376656633329,
            "name" : "name",
            "discount" : 6,
            "shopName" : "shopName",
            "inStock" : 3
          }, {
            "shopRating" : 9,
            "preDiscountPrice" : 5.962133916683182,
            "shippingCost" : 7.061401241503109,
            "pos" : 1,
            "regionId" : 2,
            "price" : 5.637376656633329,
            "name" : "name",
            "discount" : 6,
            "shopName" : "shopName",
            "inStock" : 3
          } ],
          "onlineOffers" : 4,
          "name" : "name",
          "id" : 0,
          "prices" : {
            "avg" : 6.027456183070403,
            "min" : 5.962133916683182,
            "max" : 1.4658129805029452
          },
          "offlineOffers" : 2
        },
        "type" : "object"
      },
      "Bid" : {
        "description" : "Значение ставки.",
        "example" : 570,
        "format" : "int32",
        "maximum" : 9999,
        "minimum" : 0,
        "type" : "integer"
      },
      "SkuBidRecommendationItemDTO" : {
        "description" : "Список товаров с рекомендованными ставками.",
        "example" : {
          "bidRecommendations" : [ {
            "showPercent" : 8,
            "bid" : 570
          }, {
            "showPercent" : 8,
            "bid" : 570
          } ],
          "priceRecommendations" : [ {
            "campaignId" : 6,
            "price" : 1.1465812980502945
          }, {
            "campaignId" : 6,
            "price" : 1.1465812980502945
          } ],
          "sku" : "sku",
          "bid" : 570
        },
        "properties" : {
          "sku" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "bid" : {
            "description" : "Значение ставки.",
            "example" : 570,
            "format" : "int32",
            "maximum" : 9999,
            "minimum" : 0,
            "type" : "integer"
          },
          "bidRecommendations" : {
            "description" : "Список рекомендованных ставок с соответствующими долями показов. Чем больше ставка, тем большую долю показов она помогает получить.\n",
            "items" : {
              "$ref" : "#/components/schemas/BidRecommendationItemDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "priceRecommendations" : {
            "description" : "Рекомендованные цены.",
            "items" : {
              "$ref" : "#/components/schemas/PriceRecommendationItemDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "bid", "sku" ],
        "type" : "object"
      },
      "WarehouseDTO" : {
        "description" : "Информация о складе.",
        "example" : {
          "address" : {
            "number" : "number",
            "city" : "city",
            "street" : "street",
            "block" : "block",
            "gps" : {
              "latitude" : 9.965781217890562,
              "longitude" : 9.369310271410669
            },
            "building" : "building"
          },
          "campaignId" : 6,
          "name" : "name",
          "express" : true,
          "id" : 0
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор склада.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Название склада.",
            "type" : "string"
          },
          "campaignId" : {
            "description" : "Идентификатор кампании в API и идентификатор магазина.",
            "format" : "int64",
            "type" : "integer"
          },
          "express" : {
            "description" : "Возможна ли доставка по модели Экспресс.",
            "type" : "boolean"
          },
          "address" : {
            "$ref" : "#/components/schemas/WarehouseAddressDTO"
          }
        },
        "required" : [ "campaignId", "express", "id", "name" ],
        "type" : "object"
      },
      "WarehouseGroupDTO" : {
        "description" : "Информация о группе складов.",
        "example" : {
          "name" : "name",
          "warehouses" : [ {
            "address" : {
              "number" : "number",
              "city" : "city",
              "street" : "street",
              "block" : "block",
              "gps" : {
                "latitude" : 9.965781217890562,
                "longitude" : 9.369310271410669
              },
              "building" : "building"
            },
            "campaignId" : 6,
            "name" : "name",
            "express" : true,
            "id" : 0
          }, {
            "address" : {
              "number" : "number",
              "city" : "city",
              "street" : "street",
              "block" : "block",
              "gps" : {
                "latitude" : 9.965781217890562,
                "longitude" : 9.369310271410669
              },
              "building" : "building"
            },
            "campaignId" : 6,
            "name" : "name",
            "express" : true,
            "id" : 0
          } ],
          "mainWarehouse" : {
            "address" : {
              "number" : "number",
              "city" : "city",
              "street" : "street",
              "block" : "block",
              "gps" : {
                "latitude" : 9.965781217890562,
                "longitude" : 9.369310271410669
              },
              "building" : "building"
            },
            "campaignId" : 6,
            "name" : "name",
            "express" : true,
            "id" : 0
          }
        },
        "properties" : {
          "name" : {
            "description" : "Название группы складов.",
            "type" : "string"
          },
          "mainWarehouse" : {
            "$ref" : "#/components/schemas/WarehouseDTO"
          },
          "warehouses" : {
            "description" : "Список складов, входящих в группу.",
            "items" : {
              "$ref" : "#/components/schemas/WarehouseDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "mainWarehouse", "name", "warehouses" ],
        "type" : "object"
      },
      "FulfillmentWarehouseDTO" : {
        "description" : "Склад Маркета (FBY).",
        "example" : {
          "address" : {
            "number" : "number",
            "city" : "city",
            "street" : "street",
            "block" : "block",
            "gps" : {
              "latitude" : 9.965781217890562,
              "longitude" : 9.369310271410669
            },
            "building" : "building"
          },
          "name" : "name",
          "id" : 0
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор склада.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Название склада.",
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/WarehouseAddressDTO"
          }
        },
        "required" : [ "id", "name" ],
        "type" : "object"
      },
      "CategoryParameterDTO" : {
        "description" : "Характеристика товара.",
        "example" : {
          "values" : [ {
            "description" : "description",
            "id" : 5,
            "value" : "value"
          }, {
            "description" : "description",
            "id" : 5,
            "value" : "value"
          } ],
          "recommendationTypes" : [ "HAS_VIDEO", "HAS_VIDEO" ],
          "description" : "description",
          "type" : "TEXT",
          "constraints" : {
            "minValue" : 2.3021358869347655,
            "maxValue" : 7.061401241503109,
            "maxLength" : 9
          },
          "required" : true,
          "multivalue" : true,
          "unit" : {
            "defaultUnitId" : 1,
            "units" : [ {
              "name" : "кг",
              "fullName" : "килограмм",
              "id" : 5
            }, {
              "name" : "кг",
              "fullName" : "килограмм",
              "id" : 5
            } ]
          },
          "valueRestrictions" : [ {
            "limitedValues" : [ {
              "limitingOptionValueId" : 2,
              "optionValueIds" : [ 4, 4 ]
            }, {
              "limitingOptionValueId" : 2,
              "optionValueIds" : [ 4, 4 ]
            } ],
            "limitingParameterId" : 3
          }, {
            "limitedValues" : [ {
              "limitingOptionValueId" : 2,
              "optionValueIds" : [ 4, 4 ]
            }, {
              "limitingOptionValueId" : 2,
              "optionValueIds" : [ 4, 4 ]
            } ],
            "limitingParameterId" : 3
          } ],
          "distinctive" : true,
          "name" : "name",
          "id" : 6,
          "filtering" : true,
          "allowCustomValues" : true
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор характеристики.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Название характеристики.",
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/ParameterType"
          },
          "unit" : {
            "$ref" : "#/components/schemas/CategoryParameterUnitDTO"
          },
          "description" : {
            "description" : "Описание характеристики.",
            "type" : "string"
          },
          "recommendationTypes" : {
            "description" : "Перечень возможных рекомендаций по заполнению карточки, к которым относится данная характеристика.",
            "items" : {
              "$ref" : "#/components/schemas/OfferCardRecommendationType"
            },
            "nullable" : true,
            "type" : "array"
          },
          "required" : {
            "description" : "Обязательность характеристики.",
            "type" : "boolean"
          },
          "filtering" : {
            "description" : "Используется ли характеристика в фильтре.",
            "type" : "boolean"
          },
          "distinctive" : {
            "description" : "Является ли характеристика особенностью варианта.",
            "type" : "boolean"
          },
          "multivalue" : {
            "description" : "Можно ли передать сразу несколько значений.",
            "type" : "boolean"
          },
          "allowCustomValues" : {
            "description" : "Можно ли передавать собственное значение, которого нет в списке вариантов Маркета. Только для характеристик типа `ENUM`.",
            "type" : "boolean"
          },
          "values" : {
            "description" : "Список допустимых значений параметра. Только для характеристик типа `ENUM`.",
            "items" : {
              "$ref" : "#/components/schemas/ParameterValueOptionDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "constraints" : {
            "$ref" : "#/components/schemas/ParameterValueConstraintsDTO"
          },
          "valueRestrictions" : {
            "description" : "Ограничения на значения, накладываемые другими характеристиками. Только для характеристик типа `ENUM`.",
            "items" : {
              "$ref" : "#/components/schemas/ValueRestrictionDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "allowCustomValues", "distinctive", "filtering", "id", "multivalue", "required", "type" ],
        "type" : "object"
      },
      "OfferCardDTO" : {
        "description" : "Информация о состоянии карточки товара.\n\nЕсли поле `mapping` отсутствует в ответе, Маркет еще не успел обработать информацию о товаре. Чтобы определить категорию такого товара, повторите запрос через несколько минут.\n",
        "example" : {
          "mapping" : {
            "marketSkuName" : "marketSkuName",
            "marketCategoryName" : "marketCategoryName",
            "marketCategoryId" : 4,
            "marketSku" : 3,
            "marketModelId" : 2,
            "marketModelName" : "marketModelName"
          },
          "warnings" : [ {
            "comment" : "comment",
            "message" : "message"
          }, {
            "comment" : "comment",
            "message" : "message"
          } ],
          "offerId" : "offerId",
          "contentRating" : 0,
          "recommendations" : [ {
            "type" : "HAS_VIDEO",
            "percent" : 60
          }, {
            "type" : "HAS_VIDEO",
            "percent" : 60
          } ],
          "cardStatus" : "HAS_CARD_CAN_NOT_UPDATE",
          "errors" : [ {
            "comment" : "comment",
            "message" : "message"
          }, {
            "comment" : "comment",
            "message" : "message"
          } ],
          "parameterValues" : [ {
            "valueId" : 5,
            "parameterId" : 1,
            "unitId" : 5,
            "value" : "value"
          }, {
            "valueId" : 5,
            "parameterId" : 1,
            "unitId" : 5,
            "value" : "value"
          } ]
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "mapping" : {
            "$ref" : "#/components/schemas/GetMappingDTO"
          },
          "parameterValues" : {
            "description" : "Список характеристик с их значениями.\n",
            "items" : {
              "$ref" : "#/components/schemas/ParameterValueDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "cardStatus" : {
            "$ref" : "#/components/schemas/OfferCardStatusType"
          },
          "contentRating" : {
            "description" : "Процент заполненности карточки.",
            "format" : "int32",
            "type" : "integer"
          },
          "recommendations" : {
            "description" : "Список рекомендаций к заполнению карточки.\n\nРекомендации Маркета помогают заполнять карточку так, чтобы покупателям было проще найти ваш товар и решиться на покупку.\n",
            "items" : {
              "$ref" : "#/components/schemas/OfferCardRecommendationDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "errors" : {
            "description" : "Ошибки в контенте, препятствующие размещению товара на витрине.",
            "items" : {
              "$ref" : "#/components/schemas/OfferErrorDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "warnings" : {
            "description" : "Связанные с контентом предупреждения, не препятствующие размещению товара на витрине.",
            "items" : {
              "$ref" : "#/components/schemas/OfferErrorDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "offerId" ],
        "type" : "object"
      },
      "ParameterValueDTO" : {
        "description" : "Значение характеристики.\n\nВы можете указывать несколько значений одной характеристики при условии, что:\n\n* Тип характеристики — `ENUM`.\n* В ответе на запрос [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md) у данной характеристики поле `multivalue` имеет значение `true`.\n\nДля этого в `parameterValues` передавайте каждое значение отдельно — несколько объектов с параметрами `parameterId`, `valueId` и `value`. Параметр `parameterId` должен быть одинаковым.\n",
        "example" : {
          "valueId" : 5,
          "parameterId" : 1,
          "unitId" : 5,
          "value" : "value"
        },
        "properties" : {
          "parameterId" : {
            "description" : "Идентификатор характеристики.",
            "format" : "int64",
            "type" : "integer"
          },
          "unitId" : {
            "description" : "Идентификатор единицы измерения. Если вы не передали параметр `unitId`, используется единица измерения по умолчанию.",
            "format" : "int64",
            "type" : "integer"
          },
          "valueId" : {
            "description" : "Идентификатор значения.\n\nОбязательно указывайте идентификатор, если передаете значение из перечня допустимых значений, полученного от Маркета.\n\nТолько для характеристик типа `ENUM`.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "value" : {
            "description" : "Значение.",
            "type" : "string"
          }
        },
        "required" : [ "parameterId" ],
        "type" : "object"
      },
      "OfferContentErrorDTO" : {
        "description" : "Текст ошибки.",
        "example" : {
          "parameterId" : 0,
          "type" : "OFFER_NOT_FOUND",
          "message" : "message"
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/OfferContentErrorType"
          },
          "parameterId" : {
            "description" : "Идентификатор характеристики, с которой связана ошибка.",
            "format" : "int64",
            "type" : "integer"
          },
          "message" : {
            "description" : "Текст ошибки.",
            "type" : "string"
          }
        },
        "required" : [ "message", "type" ],
        "type" : "object"
      },
      "GetChatInfoDTO" : {
        "description" : "Информация о чатах.",
        "example" : {
          "createdAt" : "2000-01-23T04:56:07.000+00:00",
          "chatId" : 0,
          "orderId" : 6,
          "type" : "CHAT",
          "status" : "NEW",
          "updatedAt" : "2000-01-23T04:56:07.000+00:00"
        },
        "properties" : {
          "chatId" : {
            "description" : "Идентификатор чата.",
            "format" : "int64",
            "type" : "integer"
          },
          "orderId" : {
            "description" : "Идентификатор заказа.",
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "$ref" : "#/components/schemas/ChatType"
          },
          "status" : {
            "$ref" : "#/components/schemas/ChatStatusType"
          },
          "createdAt" : {
            "description" : "Дата и время создания чата.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`.\n",
            "format" : "date-time",
            "type" : "string"
          },
          "updatedAt" : {
            "description" : "Дата и время последнего сообщения в чате.",
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "chatId", "createdAt", "orderId", "status", "type", "updatedAt" ],
        "type" : "object"
      },
      "ChatMessageDTO" : {
        "description" : "Информация о сообщениях.",
        "example" : {
          "createdAt" : "2000-01-23T04:56:07.000+00:00",
          "sender" : "PARTNER",
          "payload" : [ {
            "size" : 1,
            "name" : "name",
            "url" : "url"
          }, {
            "size" : 1,
            "name" : "name",
            "url" : "url"
          } ],
          "messageId" : 6,
          "message" : "message"
        },
        "properties" : {
          "messageId" : {
            "description" : "Идентификатор сообщения.",
            "format" : "int64",
            "type" : "integer"
          },
          "createdAt" : {
            "description" : "Дата и время создания сообщения.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`.\n",
            "format" : "date-time",
            "type" : "string"
          },
          "sender" : {
            "$ref" : "#/components/schemas/ChatMessageSenderType"
          },
          "message" : {
            "description" : "Текст сообщения.\n\nНеобязательный параметр, если возвращается параметр `payload`.\n",
            "type" : "string"
          },
          "payload" : {
            "description" : "Информация о приложенных к сообщению файлах.\n\nНеобязательный параметр, если возвращается параметр `message`.\n",
            "items" : {
              "$ref" : "#/components/schemas/ChatMessagePayloadDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "createdAt", "messageId", "sender" ],
        "type" : "object"
      },
      "SellingProgramType" : {
        "description" : "Модель размещения:\n\n* `FBY` — FBY.\n* `FBS` — FBS.\n* `DBS` — DBS.\n* `EXPRESS` — Экспресс.\n",
        "enum" : [ "FBY", "FBS", "DBS", "EXPRESS" ],
        "type" : "string"
      },
      "PaymentFrequencyType" : {
        "description" : "Частота выплат:\n\n* `DAILY` — ежедневно.\n* `WEEKLY` — раз в неделю.\n* `BIWEEKLY` — раз в две недели.\n* `MONTHLY` — раз в месяц.\n\nПодробнее о графике выплат читайте [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/introduction/rates/acquiring.html).\n",
        "enum" : [ "DAILY", "WEEKLY", "BIWEEKLY", "MONTHLY" ],
        "type" : "string"
      },
      "CalculateTariffsOfferInfoDTO" : {
        "description" : "Стоимость услуг.",
        "example" : {
          "offer" : {
            "quantity" : 1,
            "price" : 0.6027456183070403,
            "length" : 0.14658129805029452,
            "width" : 0.5962133916683182,
            "weight" : 0.23021358869347652,
            "categoryId" : 0,
            "height" : 0.5637376656633328
          },
          "tariffs" : [ {
            "amount" : 9.301444243932576,
            "type" : "AGENCY_COMMISSION",
            "parameters" : [ {
              "name" : "name",
              "value" : "value"
            }, {
              "name" : "name",
              "value" : "value"
            } ]
          }, {
            "amount" : 9.301444243932576,
            "type" : "AGENCY_COMMISSION",
            "parameters" : [ {
              "name" : "name",
              "value" : "value"
            }, {
              "name" : "name",
              "value" : "value"
            } ]
          } ]
        },
        "properties" : {
          "offer" : {
            "$ref" : "#/components/schemas/CalculateTariffsOfferDTO"
          },
          "tariffs" : {
            "description" : "Список услуг и их стоимость.\n\nПо некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели FBS стоимость услуги `SORTING` (обработка заказа) зависит от способа отгрузки и количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/).\n",
            "items" : {
              "$ref" : "#/components/schemas/CalculatedTariffDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "offer", "tariffs" ],
        "type" : "object"
      },
      "MaxSaleQuantumDTO" : {
        "description" : "Лимит на установку кванта и минимального количества товаров по категориям.\n",
        "example" : {
          "maxSaleQuantum" : 6,
          "name" : "name",
          "id" : 0
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор категории.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Название категории.",
            "type" : "string"
          },
          "maxSaleQuantum" : {
            "description" : "Лимит на установку кванта и минимального количества товаров.",
            "type" : "integer"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "CategoryErrorDTO" : {
        "description" : "Текст ошибки.",
        "example" : {
          "type" : "UNKNOWN_CATEGORY",
          "categoryId" : 1
        },
        "properties" : {
          "categoryId" : {
            "description" : "Идентификатор категории.",
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "$ref" : "#/components/schemas/CategoryErrorType"
          }
        },
        "type" : "object"
      },
      "CampaignQualityRatingDTO" : {
        "description" : "Информация об индексе качества магазина.",
        "example" : {
          "campaignId" : 0,
          "ratings" : [ {
            "components" : [ {
              "componentType" : "DBS_CANCELLATION_RATE",
              "value" : 14.658129805029452
            }, {
              "componentType" : "DBS_CANCELLATION_RATE",
              "value" : 14.658129805029452
            } ],
            "rating" : 60,
            "calculationDate" : "2000-01-23"
          }, {
            "components" : [ {
              "componentType" : "DBS_CANCELLATION_RATE",
              "value" : 14.658129805029452
            }, {
              "componentType" : "DBS_CANCELLATION_RATE",
              "value" : 14.658129805029452
            } ],
            "rating" : 60,
            "calculationDate" : "2000-01-23"
          } ]
        },
        "properties" : {
          "campaignId" : {
            "description" : "Идентификатор магазина.",
            "format" : "int64",
            "type" : "integer"
          },
          "ratings" : {
            "description" : "Список значений индекса качества.",
            "items" : {
              "$ref" : "#/components/schemas/QualityRatingDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "campaignId", "ratings" ],
        "type" : "object"
      },
      "QualityRatingAffectedOrderDTO" : {
        "description" : "Информация о заказе, который повлиял на индекс качества.",
        "example" : {
          "componentType" : "DBS_CANCELLATION_RATE",
          "orderId" : 0,
          "description" : "description"
        },
        "properties" : {
          "orderId" : {
            "description" : "Идентификатор заказа.",
            "format" : "int64",
            "minimum" : 0,
            "type" : "integer"
          },
          "description" : {
            "description" : "Описание проблемы.",
            "type" : "string"
          },
          "componentType" : {
            "$ref" : "#/components/schemas/AffectedOrderQualityRatingComponentType"
          }
        },
        "required" : [ "componentType", "description", "orderId" ],
        "type" : "object"
      },
      "GetPromoDTO" : {
        "description" : "Информация об акции.",
        "example" : {
          "period" : {
            "dateTimeFrom" : "2000-01-23T04:56:07.000+00:00",
            "dateTimeTo" : "2000-01-23T04:56:07.000+00:00"
          },
          "channels" : [ "{}", "{}" ],
          "mechanicsInfo" : {
            "promocodeInfo" : {
              "promocode" : "promocode",
              "discount" : 1
            },
            "type" : "DIRECT_DISCOUNT"
          },
          "bestsellerInfo" : {
            "bestseller" : true,
            "entryDeadline" : "2000-01-23T04:56:07.000+00:00"
          },
          "name" : "name",
          "participating" : true,
          "id" : "id",
          "constraints" : {
            "warehouseIds" : [ 5, 5 ]
          },
          "assortmentInfo" : {
            "activeOffers" : 0,
            "processing" : true,
            "potentialOffers" : 6
          }
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор акции.",
            "type" : "string"
          },
          "name" : {
            "description" : "Название акции.",
            "type" : "string"
          },
          "period" : {
            "$ref" : "#/components/schemas/PromoPeriodDTO"
          },
          "participating" : {
            "description" : "Участвует или участвовал ли продавец в этой акции.\n\nДля текущих и будущих акций возвращается со значением `true`, если в акции есть товары, которые были добавлены вручную. Если товары не участвуют в акции или добавлены в нее автоматически, параметр возвращается со значением `false`.\n\nДля прошедших акций всегда возвращается со значением `true`.\n\nОб автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).\n",
            "type" : "boolean"
          },
          "assortmentInfo" : {
            "$ref" : "#/components/schemas/GetPromoAssortmentInfoDTO"
          },
          "mechanicsInfo" : {
            "$ref" : "#/components/schemas/GetPromoMechanicsInfoDTO"
          },
          "bestsellerInfo" : {
            "$ref" : "#/components/schemas/GetPromoBestsellerInfoDTO"
          },
          "channels" : {
            "description" : "Список каналов продвижения товаров.",
            "items" : {
              "$ref" : "#/components/schemas/ChannelType"
            },
            "nullable" : true,
            "type" : "array"
          },
          "constraints" : {
            "$ref" : "#/components/schemas/GetPromoConstraintsDTO"
          }
        },
        "required" : [ "assortmentInfo", "bestsellerInfo", "id", "mechanicsInfo", "name", "participating", "period" ],
        "type" : "object"
      },
      "GetPromoOfferDTO" : {
        "description" : "Товар, который участвует или может участвовать в акции.",
        "example" : {
          "offerId" : "offerId",
          "params" : {
            "discountParams" : {
              "promoPrice" : 6,
              "maxPromoPrice" : 1,
              "price" : 0
            },
            "promocodeParams" : {
              "maxPrice" : 5
            }
          },
          "status" : "AUTO",
          "autoParticipatingDetails" : {
            "campaignIds" : [ 5, 5 ]
          }
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/PromoOfferParticipationStatusType"
          },
          "params" : {
            "$ref" : "#/components/schemas/PromoOfferParamsDTO"
          },
          "autoParticipatingDetails" : {
            "$ref" : "#/components/schemas/PromoOfferAutoParticipatingDetailsDTO"
          }
        },
        "required" : [ "offerId", "params", "status" ],
        "type" : "object"
      },
      "UpdatePromoOfferParamsDTO" : {
        "description" : "Параметры товара, который участвует в акции.",
        "example" : {
          "discountParams" : {
            "promoPrice" : 1,
            "price" : 1
          }
        },
        "properties" : {
          "discountParams" : {
            "$ref" : "#/components/schemas/UpdatePromoOfferDiscountParamsDTO"
          }
        },
        "type" : "object"
      },
      "RejectedPromoOfferUpdateDTO" : {
        "description" : "Описание отклоненного изменения.",
        "example" : {
          "reason" : "OFFER_DOES_NOT_EXIST",
          "offerId" : "offerId"
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "reason" : {
            "$ref" : "#/components/schemas/RejectedPromoOfferUpdateReasonType"
          }
        },
        "required" : [ "offerId", "reason" ],
        "type" : "object"
      },
      "WarningPromoOfferUpdateDTO" : {
        "description" : "Описание предупреждения, которое появилось при добавлении товара.",
        "example" : {
          "warnings" : [ {
            "code" : "DEEP_DISCOUNT_OFFER",
            "campaignIds" : [ 0, 0 ]
          }, {
            "code" : "DEEP_DISCOUNT_OFFER",
            "campaignIds" : [ 0, 0 ]
          } ],
          "offerId" : "offerId"
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "warnings" : {
            "description" : "Предупреждения, которые появились при добавлении товара в акцию или изменении его цен.",
            "items" : {
              "$ref" : "#/components/schemas/PromoOfferUpdateWarningDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "offerId", "warnings" ],
        "type" : "object"
      },
      "RejectedPromoOfferDeleteDTO" : {
        "description" : "Информация о товаре и ошибки, которые появились при его удалении.",
        "example" : {
          "reason" : "OFFER_DOES_NOT_EXIST",
          "offerId" : "offerId"
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "reason" : {
            "$ref" : "#/components/schemas/RejectedPromoOfferDeleteReasonType"
          }
        },
        "required" : [ "offerId", "reason" ],
        "type" : "object"
      },
      "CampaignSettingsScheduleSourceType" : {
        "description" : "Источник информации о расписании работы службы доставки.\nВозможные значения:\n* `WEB` — информация получена из настроек кабинета продавца на Маркете.\n* `YML` — информация получена из прайс-листа магазина.\n",
        "enum" : [ "WEB", "YML" ],
        "type" : "string"
      },
      "CampaignSettingsDeliveryDTO" : {
        "description" : "Информация о доставке в своем регионе магазина.",
        "example" : {
          "schedule" : {
            "customWorkingDays" : [ "23-09-2022", "23-09-2022" ],
            "period" : {
              "fromDate" : "23-09-2022",
              "toDate" : "23-09-2022"
            },
            "customHolidays" : [ "23-09-2022", "23-09-2022" ],
            "weeklyHolidays" : [ 1, 1 ],
            "availableOnHolidays" : true,
            "totalHolidays" : [ "23-09-2022", "23-09-2022" ]
          }
        },
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/CampaignSettingsScheduleDTO"
          }
        },
        "type" : "object"
      },
      "OrderVatType" : {
        "description" : "Ставка налога на добавленную стоимость (НДС) на товар:\n\n* `NO_VAT` — НДС не облагается, используется только для отдельных видов услуг.\n\n* `VAT_0` — НДС 0%. Например, используется при продаже товаров, вывезенных в таможенной процедуре экспорта, или при оказании услуг по международной перевозке товаров.\n\n* `VAT_10` — НДС 10%. Например, используется при реализации отдельных продовольственных и медицинских товаров.\n\n* `VAT_10_110` — НДС 10/110. Расчетная ставка НДС 10%, применяется только при предоплате.\n\n* `VAT_20` — НДС 20%. Основная ставка с 2019 года.\n\n* `VAT_20_120` — НДС 20/120. Расчетная ставка НДС 20%, применяется только при предоплате.\n\n* `VAT_18` — НДС 18%. Основная ставка до 2019 года.\n\n* `VAT_18_118` — НДС 18/118. Ставка использовалась до 1 января 2019 года при предоплате.\n\n* `UNKNOWN_VALUE` — неизвестный тип.\n\nИспользуется только совместно с параметром `payment-method=YANDEX`.\n",
        "enum" : [ "NO_VAT", "VAT_0", "VAT_10", "VAT_10_110", "VAT_20", "VAT_20_120", "VAT_18", "VAT_18_118", "UNKNOWN_VALUE" ],
        "type" : "string"
      },
      "OrderItemPromoDTO" : {
        "description" : "Информация о вознаграждениях партнеру за скидки на товар по промокодам, купонам и акциям.",
        "example" : {
          "subsidy" : 6.84685269835264,
          "shopPromoId" : "shopPromoId",
          "discount" : 1.4894159098541704,
          "marketPromoId" : "marketPromoId",
          "type" : "DIRECT_DISCOUNT"
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/OrderPromoType"
          },
          "discount" : {
            "description" : "Размер пользовательской скидки в валюте покупателя.\n",
            "format" : "decimal",
            "type" : "number"
          },
          "subsidy" : {
            "description" : "Вознаграждение партнеру от Маркета за товар, проданный в рамках акции.\n\nПередается в валюте заказа.\n",
            "format" : "decimal",
            "type" : "number"
          },
          "shopPromoId" : {
            "description" : "Идентификатор акции поставщика.\n",
            "type" : "string"
          },
          "marketPromoId" : {
            "description" : "Идентификатор акции в рамках соглашения на оказание услуг по продвижению сервиса между Маркетом и партнером.\n\nПараметр передается, только если параметр `type=MARKET_DEAL`.\n",
            "type" : "string"
          }
        },
        "required" : [ "type" ],
        "type" : "object"
      },
      "OrderItemInstanceDTO" : {
        "description" : "Переданные вами для данной позиции коды маркировки или УИНы. Коды «Честного знака» возвращаются в двух вариантах — с криптохвостом и без.\n",
        "example" : {
          "rnpt" : "rnpt",
          "gtd" : "gtd",
          "cisFull" : "cisFull",
          "uin" : "uin",
          "cis" : "cis"
        },
        "properties" : {
          "cis" : {
            "description" : "Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/) без криптохвоста.",
            "type" : "string"
          },
          "cisFull" : {
            "description" : "Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/) с криптохвостом.",
            "type" : "string"
          },
          "uin" : {
            "description" : "УИН ювелирного изделия (16-значный код)\nПроизводитель получает УИН, когда регистрирует изделие в системе контроля за оборотом драгоценных металлов и камней — ГИИС ДМДК.\n",
            "type" : "string"
          },
          "rnpt" : {
            "description" : "Регистрационный номер партии товара.\n\nПредставляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.\n\nПервая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации.\n",
            "type" : "string"
          },
          "gtd" : {
            "description" : "Грузовая таможенная декларация.\n\nПредставляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.\n\nПервая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации.\n",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "OrderItemDetailDTO" : {
        "description" : "Детали по товару в заказе.",
        "example" : {
          "updateDate" : "23-09-2022",
          "itemStatus" : "REJECTED",
          "itemCount" : 7
        },
        "properties" : {
          "itemCount" : {
            "description" : "Количество единиц товара.",
            "format" : "int64",
            "type" : "integer"
          },
          "itemStatus" : {
            "$ref" : "#/components/schemas/OrderItemStatusType"
          },
          "updateDate" : {
            "description" : "Формат даты: `ДД-ММ-ГГГГ`.\n",
            "example" : "23-09-2022",
            "format" : "date-dd-MM-yyyy",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "OrderItemSubsidyDTO" : {
        "description" : "Общее вознаграждение партнеру за все скидки на товар:\n\n* по промокодам, купонам и акциям;\n* по баллам Плюса.\n\nПередается в валюте заказа.\n",
        "example" : {
          "amount" : 1.1730742509559433,
          "type" : "YANDEX_CASHBACK"
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/OrderItemSubsidyType"
          },
          "amount" : {
            "description" : "Сумма субсидии.",
            "format" : "decimal",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "OrderItemInstanceType" : {
        "description" : "Вид маркировки товара:\n\n* `CIS` — КИЗ, идентификатор единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).\n\n* `UIN` — УИН, уникальный идентификационный номер.\n\n* `RNPT` — РНПТ, регистрационный номер партии товара.\n\n* `GTD` — номер ГТД, грузовой таможенной декларации.\n",
        "enum" : [ "CIS", "UIN", "RNPT", "GTD" ],
        "type" : "string"
      },
      "OrderSubsidyType" : {
        "description" : "Тип субсидии:\n\n* `YANDEX_CASHBACK` — скидка по подписке Яндекс Плюс.\n\n* `SUBSIDY` — скидка Маркета (по акциям, промокодам, купонам и т. д.)\n\n* `DELIVERY` — скидка за доставку (DBS).\n",
        "enum" : [ "YANDEX_CASHBACK", "SUBSIDY", "DELIVERY" ],
        "type" : "string"
      },
      "OrderDeliveryType" : {
        "description" : "Способ доставки заказа:\n\n* `DELIVERY` — курьерская доставка.\n\n* `PICKUP` — самовывоз.\n\n* `POST` — почта.\n\n* `DIGITAL` — для цифровых товаров.\n\n* `UNKNOWN` — неизвестный тип.\n",
        "enum" : [ "DELIVERY", "PICKUP", "POST", "DIGITAL", "UNKNOWN" ],
        "type" : "string"
      },
      "OrderDeliveryPartnerType" : {
        "description" : "Тип сотрудничества со службой доставки в рамках конкретного заказа:\n\n* `SHOP` — магазин работает со службой доставки напрямую или доставляет заказы самостоятельно.\n\n* `YANDEX_MARKET` — магазин работает со службой доставки через Маркет.\n\n* `UNKNOWN` — неизвестный тип.\n",
        "enum" : [ "SHOP", "YANDEX_MARKET", "UNKNOWN" ],
        "type" : "string"
      },
      "OrderCourierDTO" : {
        "description" : "Информация о курьере.",
        "example" : {
          "vehicleDescription" : "vehicleDescription",
          "phone" : "phone",
          "phoneExtension" : "phoneExtension",
          "fullName" : "fullName",
          "vehicleNumber" : "vehicleNumber"
        },
        "properties" : {
          "fullName" : {
            "description" : "Полное имя курьера.",
            "type" : "string"
          },
          "phone" : {
            "description" : "Номер телефона курьера.",
            "type" : "string"
          },
          "phoneExtension" : {
            "description" : "Добавочный номер телефона.",
            "type" : "string"
          },
          "vehicleNumber" : {
            "description" : "Номер транспортного средства.",
            "type" : "string"
          },
          "vehicleDescription" : {
            "description" : "Описание машины. Например, модель и цвет.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "OrderDeliveryDatesDTO" : {
        "description" : "Диапазон дат доставки.",
        "example" : {
          "fromDate" : "23-09-2022",
          "toDate" : "23-09-2022",
          "fromTime" : "fromTime",
          "toTime" : "toTime",
          "realDeliveryDate" : "23-09-2022"
        },
        "properties" : {
          "fromDate" : {
            "description" : "Формат даты: `ДД-ММ-ГГГГ`.\n",
            "example" : "23-09-2022",
            "format" : "date-dd-MM-yyyy",
            "type" : "string"
          },
          "toDate" : {
            "description" : "Формат даты: `ДД-ММ-ГГГГ`.\n",
            "example" : "23-09-2022",
            "format" : "date-dd-MM-yyyy",
            "type" : "string"
          },
          "fromTime" : {
            "description" : "Начало интервала времени доставки.\n\nПередается только совместно с параметром `type=DELIVERY`.\n\nФормат времени: 24-часовой, `ЧЧ:ММ`. В качестве минут всегда должно быть указано `00` (исключение — `23:59`).\n\nМинимальное значение: `00:00`.\n",
            "format" : "time",
            "type" : "string"
          },
          "toTime" : {
            "description" : "Конец интервала времени доставки.\n\nПередается только совместно с параметром `type=DELIVERY`.\n\nФормат времени: 24-часовой, `ЧЧ:ММ`. В качестве минут всегда должно быть указано `00` (исключение — `23:59`).\n\nМаксимальное значение: `23:59`.\n",
            "format" : "time",
            "type" : "string"
          },
          "realDeliveryDate" : {
            "description" : "Формат даты: `ДД-ММ-ГГГГ`.\n",
            "example" : "23-09-2022",
            "format" : "date-dd-MM-yyyy",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "OrderDeliveryAddressDTO" : {
        "description" : "Адрес доставки.\n\nУказывается, если `type=DELIVERY`, `type=POST` или `type=PICKUP` (адрес пункта выдачи).\n",
        "example" : {
          "country" : "country",
          "city" : "city",
          "postcode" : "postcode",
          "gps" : {
            "latitude" : 9.965781217890562,
            "longitude" : 9.369310271410669
          },
          "house" : "house",
          "subway" : "subway",
          "phone" : "phone",
          "street" : "street",
          "district" : "district",
          "recipient" : "recipient",
          "entryphone" : "entryphone",
          "block" : "block",
          "entrance" : "entrance",
          "floor" : "floor",
          "apartment" : "apartment"
        },
        "properties" : {
          "country" : {
            "description" : "Страна.\n\nОбязательный параметр.\n",
            "type" : "string"
          },
          "postcode" : {
            "description" : "Почтовый индекс.\n\nУказывается, если выбрана доставка почтой (`delivery type=POST`).\n",
            "type" : "string"
          },
          "city" : {
            "description" : "Город или населенный пункт.\n\nОбязательный параметр.\n",
            "type" : "string"
          },
          "district" : {
            "description" : "Район.",
            "type" : "string"
          },
          "subway" : {
            "description" : "Станция метро.",
            "type" : "string"
          },
          "street" : {
            "description" : "Улица.\n\nОбязательный параметр.\n",
            "type" : "string"
          },
          "house" : {
            "description" : "Дом или владение.\n\nОбязательный параметр.\n",
            "type" : "string"
          },
          "block" : {
            "description" : "Корпус или строение.",
            "type" : "string"
          },
          "entrance" : {
            "description" : "Подъезд.",
            "type" : "string"
          },
          "entryphone" : {
            "description" : "Код домофона.",
            "type" : "string"
          },
          "floor" : {
            "description" : "Этаж.",
            "type" : "string"
          },
          "apartment" : {
            "description" : "Квартира или офис.",
            "type" : "string"
          },
          "phone" : {
            "description" : "Телефон получателя заказа.\n\nОбязательный параметр.\n",
            "type" : "string"
          },
          "recipient" : {
            "description" : "Фамилия, имя и отчество получателя заказа.\n\nОбязательный параметр.\n",
            "type" : "string"
          },
          "gps" : {
            "$ref" : "#/components/schemas/GpsDTO"
          }
        },
        "type" : "object"
      },
      "OrderLiftType" : {
        "description" : "Тип подъема заказа на этаж:\n\n* `NOT_NEEDED` — не требуется.\n\n* `MANUAL` — ручной.\n\n* `ELEVATOR` — лифт.\n\n* `CARGO_ELEVATOR` — грузовой лифт.\n\n* `FREE` — любой из перечисленных выше, если включена опция бесплатного подъема.\n\n* `UNKNOWN` — неизвестный тип.\n",
        "enum" : [ "NOT_NEEDED", "MANUAL", "ELEVATOR", "CARGO_ELEVATOR", "FREE", "UNKNOWN" ],
        "type" : "string"
      },
      "DateDdMmYyyy" : {
        "description" : "Формат даты: `ДД-ММ-ГГГГ`.\n",
        "example" : "23-09-2022",
        "format" : "date-dd-MM-yyyy",
        "type" : "string"
      },
      "OrderTrackDTO" : {
        "description" : "Информация о трек-номере посылки (DBS).",
        "example" : {
          "trackCode" : "trackCode",
          "deliveryServiceId" : 9
        },
        "properties" : {
          "trackCode" : {
            "description" : "Трек‑номер посылки.",
            "type" : "string"
          },
          "deliveryServiceId" : {
            "description" : "Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "OrderShipmentDTO" : {
        "description" : "Список посылок.\n\nВ параметре может указываться несколько посылок.\n",
        "example" : {
          "boxes" : [ {
            "fulfilmentId" : "fulfilmentId",
            "id" : 3
          }, {
            "fulfilmentId" : "fulfilmentId",
            "id" : 3
          } ],
          "id" : 6,
          "shipmentDate" : "23-09-2022",
          "shipmentTime" : "shipmentTime",
          "tracks" : [ {
            "trackCode" : "trackCode",
            "deliveryServiceId" : 9
          }, {
            "trackCode" : "trackCode",
            "deliveryServiceId" : 9
          } ]
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор посылки, присвоенный Маркетом.",
            "format" : "int64",
            "type" : "integer"
          },
          "shipmentDate" : {
            "description" : "Формат даты: `ДД-ММ-ГГГГ`.\n",
            "example" : "23-09-2022",
            "format" : "date-dd-MM-yyyy",
            "type" : "string"
          },
          "shipmentTime" : {
            "description" : "**Только для модели Экспресс**\n\nВремя, к которому магазин должен упаковать заказ и перевести его в статус `READY_TO_SHIP`. После смены статуса за заказом приедет курьер.\n\nПоле может появиться не сразу. Запрашивайте информацию о заказе в течении 5–10 минут, пока оно не вернется.\n\nФормат времени: 24-часовой, `ЧЧ:ММ`.\n\nЕсли заказ сделан организацией, параметр не возвращается до согласования даты доставки.\n",
            "type" : "string"
          },
          "tracks" : {
            "description" : "**Только для модели DBS**\n\nИнформация для отслеживания перемещений посылки.\n",
            "items" : {
              "$ref" : "#/components/schemas/OrderTrackDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "boxes" : {
            "description" : "Список грузовых мест.",
            "items" : {
              "$ref" : "#/components/schemas/OrderParcelBoxDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "OrderDeliveryEacType" : {
        "description" : "Тип кода подтверждения ЭАПП:\n\n* `MERCHANT_TO_COURIER` — продавец передает код курьеру.\n\n* `COURIER_TO_MERCHANT` — курьер передает код продавцу.\n\n* `CHECKING_BY_MERCHANT` — продавец проверяет код на своей стороне.\n",
        "enum" : [ "MERCHANT_TO_COURIER", "COURIER_TO_MERCHANT", "CHECKING_BY_MERCHANT" ],
        "type" : "string"
      },
      "Cis" : {
        "description" : "Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).\n\n{% note warning %}\n\nНе экранируйте косую черту в коде символа-разделителя `\\u001d`!\n\n✅ `01030410947874432155Qbag!\\u001d93Zjqw`\n\n❌ `01030410947874432155Qbag!\\\\u001d93Zjqw`\n\nКосые черты и кавычки в других местах экранируйте по правилам JSON: `\\\\` и `\\\"`\n\n{% endnote %}\n",
        "type" : "string"
      },
      "OrderStatusChangeDeliveryDatesDTO" : {
        "description" : "Диапазон дат доставки.",
        "example" : {
          "realDeliveryDate" : "2000-01-23"
        },
        "properties" : {
          "realDeliveryDate" : {
            "description" : "**Только для модели DBS**\n\nФактическая дата доставки.\n<br><br>\nКогда передавать параметр `realDeliveryDate`:\n\n* Не передавайте параметр, если:\n  * переводите заказ в любой статус, кроме `PICKUP` или `DELIVERED`;\n  * меняете статус заказа на `PICKUP` или `DELIVERED` в день доставки — будет указана дата выполнения запроса.\n* Передавайте дату доставки, если переводите заказ в статус `PICKUP` или `DELIVERED` не в день доставки. Нельзя указывать дату доставки в будущем.\n\n  {% note warning \"Индекс качества\" %}\n\n  Передача статуса после установленного срока снижает индекс качества. О сроках читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/tech#dbs).\n\n  {% endnote %}\n\n   \n",
            "format" : "date",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "OrderUpdateStatusType" : {
        "description" : "Изменился ли статус заказа:\n\n* `OK` — статус изменен.\n\n* `ERROR` — статус не изменен. В этом случае появится сообщение об ошибке в параметре `errorDetails`.\n",
        "enum" : [ "OK", "ERROR" ],
        "type" : "string"
      },
      "OrderBoxLayoutPartialCountDTO" : {
        "description" : "Информация о части товара в коробке.",
        "example" : {
          "current" : 1,
          "total" : 2
        },
        "properties" : {
          "current" : {
            "description" : "Номер части, начиная с 1.",
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "total" : {
            "description" : "На сколько всего частей разделен товар.",
            "format" : "int32",
            "minimum" : 2,
            "type" : "integer"
          }
        },
        "required" : [ "current", "total" ],
        "type" : "object"
      },
      "OrderDocumentStatusType" : {
        "description" : "Статус документа:\n\n* `READY` — готов.\n* `NOT_READY` — не готов.\n",
        "enum" : [ "READY", "NOT_READY" ],
        "type" : "string"
      },
      "PickupAddressDTO" : {
        "description" : "Адрес доставки.",
        "example" : {
          "country" : "Россия",
          "city" : "Москва",
          "street" : "Стрелецкая улица",
          "postcode" : "123518",
          "house" : "9к2"
        },
        "properties" : {
          "country" : {
            "description" : "Страна.",
            "example" : "Россия",
            "type" : "string"
          },
          "city" : {
            "description" : "Город.",
            "example" : "Москва",
            "type" : "string"
          },
          "street" : {
            "description" : "Улица.",
            "example" : "Стрелецкая улица",
            "type" : "string"
          },
          "house" : {
            "description" : "Номер дома.",
            "example" : "9к2",
            "type" : "string"
          },
          "postcode" : {
            "description" : "Почтовый индекс.",
            "example" : "123518",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "LogisticPointType" : {
        "description" : "Тип логистической точки:\n\n  * `WAREHOUSE` — склад.\n  * `PICKUP_POINT` — обычная точка выдачи заказов (ПВЗ).\n  * `PICKUP_TERMINAL` — постамат.\n  * `PICKUP_POST_OFFICE` — отделение почтовой связи (ОПС).\n  * `PICKUP_MIXED` — торговый зал и пункт выдачи заказов.\n  * `PICKUP_RETAIL` — торговый зал.\n",
        "enum" : [ "WAREHOUSE", "PICKUP_POINT", "PICKUP_TERMINAL", "PICKUP_POST_OFFICE", "PICKUP_MIXED", "PICKUP_RETAIL", "UNKNOWN" ],
        "type" : "string"
      },
      "ReturnDecisionDTO" : {
        "description" : "Решения по возвратам.",
        "example" : {
          "images" : [ "images", "images" ],
          "returnItemId" : 9,
          "subreasonType" : "USER_DID_NOT_LIKE",
          "count" : 3,
          "comment" : "comment",
          "decisionType" : "REFUND_MONEY",
          "reasonType" : "BAD_QUALITY",
          "partnerCompensation" : 4,
          "refundAmount" : 2
        },
        "properties" : {
          "returnItemId" : {
            "description" : "Идентификатор товара в возврате.",
            "format" : "int64",
            "type" : "integer"
          },
          "count" : {
            "description" : "Количество единиц товара.",
            "format" : "int32",
            "type" : "integer"
          },
          "comment" : {
            "description" : "Комментарий.",
            "type" : "string"
          },
          "reasonType" : {
            "$ref" : "#/components/schemas/ReturnDecisionReasonType"
          },
          "subreasonType" : {
            "$ref" : "#/components/schemas/ReturnDecisionSubreasonType"
          },
          "decisionType" : {
            "$ref" : "#/components/schemas/ReturnDecisionType"
          },
          "refundAmount" : {
            "description" : "Сумма возврата.",
            "format" : "int64",
            "type" : "integer"
          },
          "partnerCompensation" : {
            "description" : "Компенсация за обратную доставку.",
            "format" : "int64",
            "type" : "integer"
          },
          "images" : {
            "description" : "Список хеш-кодов фотографий товара от покупателя.",
            "items" : {
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ReturnInstanceDTO" : {
        "description" : "Логистическая информация по возврату.",
        "example" : {
          "stockType" : "FIT",
          "imei" : "imei",
          "cis" : "cis",
          "status" : "CREATED"
        },
        "properties" : {
          "stockType" : {
            "$ref" : "#/components/schemas/ReturnInstanceStockType"
          },
          "status" : {
            "$ref" : "#/components/schemas/ReturnInstanceStatusType"
          },
          "cis" : {
            "description" : "Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).",
            "type" : "string"
          },
          "imei" : {
            "description" : "Международный идентификатор мобильного оборудования.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TrackDTO" : {
        "description" : "Информация о трек-номерах.",
        "example" : {
          "trackCode" : "trackCode"
        },
        "properties" : {
          "trackCode" : {
            "description" : "Трек-код почтового отправления.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ShipmentType" : {
        "description" : "Способ отгрузки заказов:\n\n* `IMPORT` — вы самостоятельно привозите заказы в выбранный сортировочный центр или пункт приема заказов.\n* `WITHDRAW` — вы отгружаете заказы со своего склада курьерам Яндекс Маркета.\n",
        "enum" : [ "IMPORT", "WITHDRAW" ],
        "type" : "string"
      },
      "PartnerShipmentWarehouseDTO" : {
        "description" : "Данные о складе отправления.",
        "example" : {
          "address" : "address",
          "name" : "name",
          "id" : 6
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор склада отправления.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Наименование склада отправления.",
            "type" : "string"
          },
          "address" : {
            "description" : "Адрес склада отправления.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "DeliveryServiceDTO" : {
        "description" : "Служба доставки.",
        "example" : {
          "name" : "name",
          "id" : 1
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор службы доставки.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Наименование службы доставки.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PalletsCountDTO" : {
        "description" : "Количество палет в отгрузке.",
        "example" : {
          "fact" : 5,
          "planned" : 5
        },
        "properties" : {
          "planned" : {
            "description" : "Количество палет, которое заявил продавец.",
            "format" : "int32",
            "type" : "integer"
          },
          "fact" : {
            "description" : "Количество палет, которое приняли в сортировочном центре.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "ShipmentStatusChangeDTO" : {
        "description" : "Статус отгрузки.",
        "example" : {
          "description" : "description",
          "updateTime" : "2000-01-23T04:56:07.000+00:00",
          "status" : "OUTBOUND_CREATED"
        },
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/ShipmentStatusType"
          },
          "description" : {
            "description" : "Описание статуса отгрузки.",
            "type" : "string"
          },
          "updateTime" : {
            "description" : "Время последнего изменения статуса отгрузки.",
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ShipmentActionType" : {
        "description" : "Действия с отгрузкой:\n\n* `CONFIRM` — подтвердить отгрузку.\n* `DOWNLOAD_ACT` — скачать акт приема-передачи отгрузки.\n* `DOWNLOAD_INBOUND_ACT` — скачать список принятых заказов.\n* `DOWNLOAD_DISCREPANCY_ACT` — скачать акт расхождений.\n* `CHANGE_PALLETS_COUNT` — указать количество палет.\n",
        "enum" : [ "CONFIRM", "DOWNLOAD_ACT", "DOWNLOAD_INBOUND_ACT", "DOWNLOAD_DISCREPANCY_ACT", "CHANGE_PALLETS_COUNT" ],
        "type" : "string"
      },
      "GetOfferDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseOfferDTO"
        }, {
          "properties" : {
            "basicPrice" : {
              "$ref" : "#/components/schemas/GetPriceWithDiscountDTO"
            },
            "purchasePrice" : {
              "$ref" : "#/components/schemas/GetPriceDTO"
            },
            "additionalExpenses" : {
              "$ref" : "#/components/schemas/GetPriceDTO"
            },
            "cofinancePrice" : {
              "$ref" : "#/components/schemas/GetPriceDTO"
            },
            "cardStatus" : {
              "$ref" : "#/components/schemas/OfferCardStatusType"
            },
            "campaigns" : {
              "description" : "Список магазинов, в которых размещен товар.\n",
              "items" : {
                "$ref" : "#/components/schemas/OfferCampaignStatusDTO"
              },
              "nullable" : true,
              "type" : "array"
            },
            "sellingPrograms" : {
              "description" : "Информация о том, какие для товара доступны модели размещения.\n",
              "items" : {
                "$ref" : "#/components/schemas/OfferSellingProgramDTO"
              },
              "nullable" : true,
              "type" : "array"
            },
            "archived" : {
              "description" : "Товар помещен в архив.\n",
              "type" : "boolean"
            }
          },
          "type" : "object"
        } ],
        "description" : "Параметры товара.",
        "example" : {
          "downloadable" : true,
          "sellingPrograms" : [ {
            "sellingProgram" : "FBY",
            "status" : "FINE"
          }, {
            "sellingProgram" : "FBY",
            "status" : "FINE"
          } ],
          "marketCategoryId" : 0,
          "manufacturerCountries" : [ "Россия", "Россия" ],
          "description" : "description",
          "videos" : [ "videos", "videos", "videos", "videos", "videos" ],
          "purchasePrice" : {
            "currencyId" : null,
            "value" : 0.7061401241503109,
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          },
          "type" : "DEFAULT",
          "pictures" : [ "pictures", "pictures" ],
          "vendorCode" : "VNDR-0005A",
          "archived" : true,
          "campaigns" : [ {
            "campaignId" : 9,
            "status" : "PUBLISHED"
          }, {
            "campaignId" : 9,
            "status" : "PUBLISHED"
          } ],
          "vendor" : "LEVENHUK",
          "basicPrice" : {
            "discountBase" : 0.23021358869347652,
            "currencyId" : "RUR",
            "value" : 0.5637376656633328,
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          },
          "lifeTime" : {
            "timePeriod" : 6,
            "comment" : "comment",
            "timeUnit" : "HOUR"
          },
          "shelfLife" : {
            "timePeriod" : 6,
            "comment" : "comment",
            "timeUnit" : "HOUR"
          },
          "cofinancePrice" : {
            "currencyId" : null,
            "value" : 0.7061401241503109,
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          },
          "cardStatus" : "HAS_CARD_CAN_NOT_UPDATE",
          "barcodes" : [ "46012300000000", "46012300000000" ],
          "params" : [ {
            "name" : "Wi-Fi",
            "value" : "есть"
          }, {
            "name" : "Wi-Fi",
            "value" : "есть"
          } ],
          "tags" : [ "до 500 рублей", "до 500 рублей" ],
          "condition" : {
            "reason" : "reason",
            "type" : "PREOWNED",
            "quality" : "PERFECT"
          },
          "certificates" : [ "certificates", "certificates" ],
          "boxCount" : 1,
          "additionalExpenses" : {
            "currencyId" : null,
            "value" : 0.7061401241503109,
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          },
          "name" : "Ударная дрель Makita HP1630, 710 Вт",
          "offerId" : "offerId",
          "guaranteePeriod" : {
            "timePeriod" : 6,
            "comment" : "comment",
            "timeUnit" : "HOUR"
          },
          "weightDimensions" : {
            "length" : 65.55,
            "width" : 50.7,
            "weight" : 1.001,
            "height" : 20
          },
          "category" : "category",
          "customsCommodityCode" : "8517610008",
          "adult" : true,
          "age" : {
            "ageUnit" : "YEAR",
            "value" : 0.5962133916683182
          },
          "manuals" : [ {
            "title" : "title",
            "url" : "url"
          }, {
            "title" : "title",
            "url" : "url"
          }, {
            "title" : "title",
            "url" : "url"
          }, {
            "title" : "title",
            "url" : "url"
          }, {
            "title" : "title",
            "url" : "url"
          } ]
        },
        "type" : "object"
      },
      "GetMappingDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateMappingDTO"
        }, {
          "properties" : {
            "marketSkuName" : {
              "description" : "Название карточки товара.\n\nМожет отсутствовать в ответе, если товар еще не привязан к карточке.\n",
              "type" : "string"
            },
            "marketModelId" : {
              "description" : "Идентификатор модели на Маркете.\n\nМожет отсутствовать в ответе, если товар еще не привязан к карточке.\n",
              "format" : "int64",
              "type" : "integer"
            },
            "marketModelName" : {
              "description" : "Название модели на Маркете.\n\nМожет отсутствовать в ответе, если товар еще не привязан к карточке.\n",
              "type" : "string"
            },
            "marketCategoryId" : {
              "description" : "Идентификатор категории на Маркете, в которую попал товар.\n\nМожет отсутствовать в ответе, если Маркет еще не определил категорию товара.\n",
              "format" : "int64",
              "type" : "integer"
            },
            "marketCategoryName" : {
              "description" : "Название категории карточки на Маркете.\n\nМожет отсутствовать в ответе, если Маркет еще не определил категорию товара.\n",
              "type" : "string"
            }
          },
          "type" : "object"
        } ],
        "description" : "Информация о товарах в каталоге.\n",
        "example" : {
          "marketSkuName" : "marketSkuName",
          "marketCategoryName" : "marketCategoryName",
          "marketCategoryId" : 4,
          "marketSku" : 3,
          "marketModelId" : 2,
          "marketModelName" : "marketModelName"
        },
        "type" : "object"
      },
      "BaseOfferDTO" : {
        "description" : "Основные параметры товара.",
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "name" : {
            "description" : "Составляйте название по схеме: тип + бренд или производитель + модель + особенности, если есть (например, цвет, размер или вес) и количество в упаковке.\n\nНе включайте в название условия продажи (например, «скидка», «бесплатная доставка» и т. д.), эмоциональные характеристики («хит», «супер» и т. д.). Не пишите слова большими буквами — кроме устоявшихся названий брендов и моделей.\n\nОптимальная длина — 50–60 символов, максимальная — 256.\n\n[Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/title.html)\n",
            "example" : "Ударная дрель Makita HP1630, 710 Вт",
            "maxLength" : 256,
            "type" : "string"
          },
          "marketCategoryId" : {
            "description" : "Идентификатор категории на Маркете, к которой вы относите свой товар.\n\nЕсли не указать `marketCategoryId`, то маркетная категория будет определена автоматически.\n\nПри изменении информации о товаре передавайте тот же идентификатор категории. Если вы укажете другой, категория товара не поменяется. Изменить ее можно только в кабинете продавца на Маркете.\n\nСписок категорий Маркета можно получить с помощью запроса  [POST categories/tree](../../reference/categories/getCategoriesTree.md).\n",
            "format" : "int64",
            "type" : "integer"
          },
          "category" : {
            "description" : "Категория товара в вашем магазине. Значение будет использовано для определения категории товара на Маркете в случае, если вы не передали категорию в параметре `marketCategoryId`.\n\nУказывайте конкретные категории — например, набор ножей лучше отнести к категории **Столовые приборы**, а не просто **Посуда**.\n\nВыбирайте категории, которые описывают товар, а не абстрактный признак — например, **Духи**, а не **Подарки**.\n\nЗначение будет использовано для определения категории товара на Маркете в случае, если вы не передали категорию в параметре `marketCategoryId`.\n",
            "type" : "string"
          },
          "pictures" : {
            "description" : "Ссылки на изображения товара. Изображение по первой ссылке считается основным, остальные дополнительными.\n\n**Требования к ссылкам**\n\n* Ссылок может быть до 30.\n* Указывайте ссылку целиком, включая протокол http или https.\n* Максимальная длина — 512 символов.\n* Русские буквы в URL можно.\n* Можно использовать прямые ссылки на изображения и на Яндекс Диск. Ссылки на Яндекс Диске нужно копировать с помощью функции **Поделиться**. Относительные ссылки и ссылки на другие облачные хранилища — не работают.\n\n✅ `https://example-shop.ru/images/sku12345.jpg`\n\n✅ `https://yadi.sk/i/NaBoRsimVOLov`\n\n❌ `/images/sku12345.jpg`\n\n❌ `https://www.dropbox.com/s/818f/tovar.jpg`\n\nСсылки на изображение должны быть постоянными. Нельзя использовать динамические ссылки, меняющиеся от выгрузки к выгрузке.\n\nЕсли нужно заменить изображение, выложите новое изображение по новой ссылке, а ссылку на старое удалите. Если просто заменить изображение по старой ссылке, оно не обновится.\n\n[Требования к изображениям](https://yandex.ru/support/marketplace/assortment/fields/images.html)\n",
            "items" : {
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          },
          "videos" : {
            "description" : "Ссылка (URL) на видео товара.\n\nМаксимальное количество ссылок — 6.\n\n**Требования к ссылке**\n\n* Указывайте ссылку целиком, включая протокол http или https.\n* Максимальная длина — 512 символов.\n* Русские буквы в URL можно.\n* Можно использовать прямые ссылки на видео и на Яндекс Диск. Ссылки на Яндекс Диске нужно копировать с помощью функции **Поделиться**. Относительные ссылки и ссылки на другие облачные хранилища — не работают.\n\n✅ `https://example-shop.ru/video/sku12345.avi`\n\n✅ `https://yadi.sk/i/NaBoRsimVOLov`\n\n❌ `/video/sku12345.avi`\n\n❌ `https://www.dropbox.com/s/818f/super-tovar.avi`\n\nСсылки на видео должны быть постоянными. Нельзя использовать динамические ссылки, меняющиеся от выгрузки к выгрузке.\n\nЕсли нужно заменить видео, выложите новое видео по новой ссылке, а ссылку на старое удалите. Если просто заменить видео по старой ссылке, оно не обновится.\n\n[Требования к видео](https://yandex.ru/support/marketplace/assortment/fields/video.html)\n",
            "items" : {
              "type" : "string"
            },
            "maxItems" : 6,
            "nullable" : true,
            "type" : "array"
          },
          "manuals" : {
            "description" : "Список инструкций по использованию товара.\n\nМаксимальное количество инструкций — 6.\n\nЕсли вы передадите пустое поле `manuals`, загруженные ранее инструкции удалятся.\n",
            "items" : {
              "$ref" : "#/components/schemas/OfferManualDTO"
            },
            "maxItems" : 6,
            "nullable" : true,
            "type" : "array"
          },
          "vendor" : {
            "description" : "Название бренда или производителя. Должно быть записано так, как его пишет сам бренд.",
            "example" : "LEVENHUK",
            "type" : "string"
          },
          "barcodes" : {
            "description" : "Указывайте в виде последовательности цифр. Подойдут коды EAN-13, EAN-8, UPC-A, UPC-E или Code 128.\n\nДля книг указывайте ISBN.\n\nДля товаров [определенных категорий и торговых марок](https://yastatic.net/s3/doc-binary/src/support/market/ru/yandex-market-list-for-gtin.xlsx) штрихкод должен быть действительным кодом GTIN. Обратите внимание: внутренние штрихкоды, начинающиеся на 2 или 02, и коды формата Code 128 не являются GTIN.\n\n[Что такое GTIN](*gtin)\n\n",
            "items" : {
              "example" : "46012300000000",
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          },
          "description" : {
            "description" : "Подробное описание товара: например, его преимущества и особенности.\n\nНе давайте в описании инструкций по установке и сборке. Не используйте слова «скидка», «распродажа», «дешевый», «подарок» (кроме подарочных категорий), «бесплатно», «акция», «специальная цена», «новинка», «new», «аналог», «заказ», «хит». Не указывайте никакой контактной информации и не давайте ссылок.\n\nМожно использовать теги:\n\n* \\<h>, \\<h1>, \\<h2> и так далее — для заголовков;\n* \\<br> и \\<p> — для переноса строки;\n* \\<ol> — для нумерованного списка;\n* \\<ul> — для маркированного списка;\n* \\<li> — для создания элементов списка (должен находиться внутри \\<ol> или \\<ul>);\n* \\<div> — поддерживается, но не влияет на отображение текста.\n\nОптимальная длина — 400–600 символов, максимальная — 6000.\n\n[Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/description.html)\n",
            "maxLength" : 6000,
            "type" : "string"
          },
          "manufacturerCountries" : {
            "description" : "Страна, где был произведен товар.\n\nЗаписывайте названия стран так, как они записаны в [списке](https://yastatic.net/s3/doc-binary/src/support/market/ru/countries.xlsx).\n",
            "items" : {
              "example" : "Россия",
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          },
          "weightDimensions" : {
            "$ref" : "#/components/schemas/OfferWeightDimensionsDTO"
          },
          "vendorCode" : {
            "description" : "Артикул товара от производителя.",
            "example" : "VNDR-0005A",
            "type" : "string"
          },
          "tags" : {
            "description" : "Метки товара, используемые магазином. Покупателям теги не видны. По тегам можно группировать и фильтровать разные товары в каталоге — например, товары одной серии, коллекции или линейки.\n\nМаксимальная длина тега 20 символов. У одного товара может быть максимум 10 тегов. Всего можно создать не больше 50 разных тегов.\n",
            "items" : {
              "example" : "до 500 рублей",
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          },
          "shelfLife" : {
            "$ref" : "#/components/schemas/TimePeriodDTO"
          },
          "lifeTime" : {
            "$ref" : "#/components/schemas/TimePeriodDTO"
          },
          "guaranteePeriod" : {
            "$ref" : "#/components/schemas/TimePeriodDTO"
          },
          "customsCommodityCode" : {
            "description" : "Код товара в единой Товарной номенклатуре внешнеэкономической деятельности (ТН ВЭД) — 10 или 14 цифр без пробелов.\n\nОбязательно укажите, если он есть.\n",
            "example" : "8517610008",
            "type" : "string"
          },
          "certificates" : {
            "description" : "Номера документов на товар: сертификата, декларации соответствия и т. п.\n\nПередавать можно только номера документов, сканы которого загружены в кабинете продавца по [инструкции](https://yandex.ru/support/marketplace/assortment/restrictions/certificates.html).\n",
            "items" : {
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          },
          "boxCount" : {
            "description" : "Количество грузовых мест.\n\nПараметр используется, если товар представляет собой несколько коробок, упаковок и так далее. Например, кондиционер занимает два места — внешний и внутренний блоки в двух коробках.\n\nДля товаров, занимающих одно место, не передавайте этот параметр.\n",
            "format" : "int32",
            "type" : "integer"
          },
          "condition" : {
            "$ref" : "#/components/schemas/OfferConditionDTO"
          },
          "type" : {
            "$ref" : "#/components/schemas/OfferType"
          },
          "downloadable" : {
            "description" : "Признак цифрового товара. Укажите `true`, если товар доставляется по электронной почте.\n\n[Как работать с цифровыми товарами](../../step-by-step/digital.md)\n",
            "type" : "boolean"
          },
          "adult" : {
            "description" : "Параметр включает для товара пометку 18+. Устанавливайте ее только для товаров, которые относятся к удовлетворению сексуальных потребностей.\n",
            "type" : "boolean"
          },
          "age" : {
            "$ref" : "#/components/schemas/AgeDTO"
          },
          "params" : {
            "deprecated" : true,
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. При передаче характеристик используйте `parameterValues`.\n\n{% endnote %}\n\nХарактеристики, которые есть только у товаров конкретной категории — например, диаметр колес велосипеда или материал подошвы обуви.\n",
            "items" : {
              "$ref" : "#/components/schemas/OfferParamDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "offerId" ],
        "type" : "object"
      },
      "OfferMappingErrorType" : {
        "description" : "Типы ошибок:\n\n* `UNKNOWN_CATEGORY` — указана неизвестная категория.\n* `CATEGORY_MISMATCH` — указана категория, которая не совпадает с категорией товара.\n* `EMPTY_MARKET_CATEGORY` — не указана категория Маркета при передаче характеристик категории.\n* `UNKNOWN_PARAMETER` — передана характеристика, которой нет среди характеристик категории.\n* `UNEXPECTED_BOOLEAN_VALUE` — вместо boolean-значения передано что-то другое.\n* `NUMBER_FORMAT` — передана строка, не обозначающая число, вместо числа.\n* `VALUE_BLANK` — передано пустое значение.\n* `INVALID_UNIT_ID` — передана единица измерения, недопустимая для характеристики.\n* `INVALID_GROUP_ID_LENGTH` — в названии превышено допустимое значение символов — 255.\n* `INVALID_GROUP_ID_CHARACTERS` — переданы [недопустимые символы](*ascii-code).\n* `INVALID_PICKER_URL` — передана ссылка на изображение для миниатюры, которой нет в переданных ссылках на изображение товара.\n",
        "enum" : [ "UNKNOWN_CATEGORY", "CATEGORY_MISMATCH", "EMPTY_MARKET_CATEGORY", "UNKNOWN_PARAMETER", "UNEXPECTED_BOOLEAN_VALUE", "NUMBER_FORMAT", "VALUE_BLANK", "INVALID_UNIT_ID", "INVALID_GROUP_ID_LENGTH", "INVALID_GROUP_ID_CHARACTERS", "INVALID_PICKER_URL" ],
        "type" : "string"
      },
      "AddOffersToArchiveErrorType" : {
        "description" : "Причина, по которой товар не удалось поместить в архив:\n\n* `OFFER_HAS_STOCKS` — товар хранится на складе Маркета.\n",
        "enum" : [ "OFFER_HAS_STOCKS", "UNKNOWN" ],
        "type" : "string"
      },
      "OfferMappingDTO" : {
        "description" : "Информация о текущей карточке товара на Маркете.",
        "example" : {
          "modelId" : 7,
          "marketSku" : 4,
          "categoryId" : 1
        },
        "properties" : {
          "marketSku" : {
            "description" : "SKU на Маркете.",
            "format" : "int64",
            "type" : "integer"
          },
          "modelId" : {
            "description" : "Идентификатор модели для текущей карточки товара на Маркете.\n\nНапример, две лопатки разных цветов имеют разные SKU на Маркете (параметр `marketSku`), но одинаковый идентификатор модели товара.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "categoryId" : {
            "description" : "Идентификатор категории для текущей карточки товара на Маркете.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "OfferWeightDimensionsDTO" : {
        "description" : "Габариты упаковки и вес товара.\n\nЕсли товар занимает несколько коробок, перед измерением размеров сложите их компактно.\n\n![Схема измерения многоместных грузов](../../_images/reference/boxes-measure.png)\n",
        "example" : {
          "length" : 65.55,
          "width" : 50.7,
          "weight" : 1.001,
          "height" : 20
        },
        "properties" : {
          "length" : {
            "description" : "Длина упаковки в см.\n",
            "example" : 65.55,
            "type" : "number"
          },
          "width" : {
            "description" : "Ширина упаковки в см.\n",
            "example" : 50.7,
            "type" : "number"
          },
          "height" : {
            "description" : "Высота упаковки в см.\n",
            "example" : 20,
            "type" : "number"
          },
          "weight" : {
            "description" : "Вес товара в кг с учетом упаковки (брутто).\n",
            "example" : 1.001,
            "type" : "number"
          }
        },
        "required" : [ "height", "length", "weight", "width" ],
        "type" : "object"
      },
      "DayOfWeekType" : {
        "description" : "День недели:\n\n* `MONDAY` — понедельник.\n* `TUESDAY` — вторник.\n* `WEDNESDAY` — среда.\n* `THURSDAY` — четверг.\n* `FRIDAY` — пятница.\n* `SATURDAY` — суббота.\n* `SUNDAY` — воскресенье.\n",
        "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ],
        "type" : "string"
      },
      "OfferProcessingStateDTO" : {
        "description" : "Информация о статусе публикации товара на Маркете.",
        "example" : {
          "notes" : [ {
            "payload" : "payload",
            "type" : "ASSORTMENT"
          }, {
            "payload" : "payload",
            "type" : "ASSORTMENT"
          } ],
          "status" : "UNKNOWN"
        },
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/OfferProcessingStatusType"
          },
          "notes" : {
            "description" : "Причины, по которым товар не прошел модерацию.",
            "items" : {
              "$ref" : "#/components/schemas/OfferProcessingNoteDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "TimePeriodDTO" : {
        "description" : "Временной отрезок с комментарием. Требования к содержанию комментария зависят от контекста использования параметра и указаны в описании поля, которое его содержит.",
        "example" : {
          "timePeriod" : 6,
          "comment" : "comment",
          "timeUnit" : "HOUR"
        },
        "properties" : {
          "timePeriod" : {
            "description" : "Продолжительность в указанных единицах.",
            "type" : "integer"
          },
          "timeUnit" : {
            "$ref" : "#/components/schemas/TimeUnitType"
          },
          "comment" : {
            "description" : "Комментарий.",
            "type" : "string"
          }
        },
        "required" : [ "timePeriod", "timeUnit" ],
        "type" : "object"
      },
      "PriceSuggestDTO" : {
        "description" : "Тип цены.",
        "example" : {
          "price" : 6.027456183070403,
          "type" : "BUYBOX"
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/PriceSuggestType"
          },
          "price" : {
            "description" : "Цена в рублях.",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "PriceQuarantineVerdictDTO" : {
        "description" : "Причина попадания товара в карантин.",
        "example" : {
          "type" : "PRICE_CHANGE",
          "params" : [ {
            "name" : "CURRENT_PRICE",
            "value" : "value"
          }, {
            "name" : "CURRENT_PRICE",
            "value" : "value"
          } ]
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/PriceQuarantineVerdictType"
          },
          "params" : {
            "description" : "Цена, из-за которой товар попал в карантин, и значения для сравнения. Конкретный набор параметров зависит от типа карантина.",
            "items" : {
              "$ref" : "#/components/schemas/PriceQuarantineVerdictParameterDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "params" ],
        "type" : "object"
      },
      "WarehouseOfferDTO" : {
        "description" : "Информация об остатках товара.",
        "example" : {
          "offerId" : "offerId",
          "turnoverSummary" : {
            "turnoverDays" : 6.027456183070403,
            "turnover" : "LOW"
          },
          "stocks" : [ {
            "count" : 1,
            "type" : "FIT"
          }, {
            "count" : 1,
            "type" : "FIT"
          } ],
          "updatedAt" : "2000-01-23T04:56:07.000+00:00"
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "turnoverSummary" : {
            "$ref" : "#/components/schemas/TurnoverDTO"
          },
          "stocks" : {
            "description" : "Информация об остатках.",
            "items" : {
              "$ref" : "#/components/schemas/WarehouseStockDTO"
            },
            "type" : "array"
          },
          "updatedAt" : {
            "description" : "Дата и время последнего обновления информации об остатках.\n\nФормат даты и времени: ISO 8601 со смещением относительно UTC. Например, `2023-11-21T00:42:42+03:00`.\n",
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "offerId", "stocks" ],
        "type" : "object"
      },
      "OrdersStatsOrderPaymentType" : {
        "description" : "Тип оплаты заказа:\n- `CREDIT` — заказ оформлен в кредит.\n- `POSTPAID` — заказ оплачен после того, как был получен.\n- `PREPAID` — заказ оплачен до того, как был получен.\n",
        "enum" : [ "CREDIT", "POSTPAID", "PREPAID", "TINKOFF_CREDIT" ],
        "type" : "string"
      },
      "OrdersStatsDeliveryRegionDTO" : {
        "description" : "Информация о регионе доставки.",
        "example" : {
          "name" : "name",
          "id" : 6
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор региона доставки.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Название региона доставки.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "OrdersStatsItemDTO" : {
        "description" : "Список товаров в заказе после возможных изменений.\n\nВ ходе обработки заказа Маркет может удалить из него единицы товаров — при проблемах на складе или по инициативе пользователя.\n\n* Если из заказа удалены все единицы товара, его не будет в списке `items` — только в списке `initialItems`.\n\n* Если в заказе осталась хотя бы одна единица товара, он будет и в списке `items` (с уменьшенным количеством единиц `count`), и в списке `initialItems` (с первоначальным количеством единиц `initialCount`).\n",
        "example" : {
          "cofinanceValue" : 4.145608029883936,
          "initialCount" : 3,
          "offerName" : "offerName",
          "shopSku" : "shopSku",
          "cisList" : [ "cisList", "cisList" ],
          "marketSku" : 1,
          "count" : 5,
          "bidFee" : 570,
          "cofinanceThreshold" : 2.027123023002322,
          "details" : [ {
            "updateDate" : "2000-01-23",
            "stockType" : "FIT",
            "itemStatus" : "REJECTED",
            "itemCount" : 9
          }, {
            "updateDate" : "2000-01-23",
            "stockType" : "FIT",
            "itemStatus" : "REJECTED",
            "itemCount" : 9
          } ],
          "prices" : [ {
            "total" : 2.3021358869347655,
            "costPerItem" : 5.637376656633329,
            "type" : "BUYER"
          }, {
            "total" : 2.3021358869347655,
            "costPerItem" : 5.637376656633329,
            "type" : "BUYER"
          } ],
          "warehouse" : {
            "name" : "name",
            "id" : 7
          }
        },
        "properties" : {
          "offerName" : {
            "description" : "Название товара.",
            "type" : "string"
          },
          "marketSku" : {
            "description" : "SKU на Маркете.",
            "format" : "int64",
            "type" : "integer"
          },
          "shopSku" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "count" : {
            "description" : "Количество единиц товара с учетом удаленных единиц.\n\nЕсли из заказа удалены все единицы товара, он попадет только в список `initialItems`.\n",
            "format" : "int32",
            "type" : "integer"
          },
          "prices" : {
            "description" : "Цена или скидки на товар.",
            "items" : {
              "$ref" : "#/components/schemas/OrdersStatsPriceDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "warehouse" : {
            "$ref" : "#/components/schemas/OrdersStatsWarehouseDTO"
          },
          "details" : {
            "description" : "Информация об удалении товара из заказа.",
            "items" : {
              "$ref" : "#/components/schemas/OrdersStatsDetailsDTO"
            },
            "nullable" : true,
            "type" : "array"
          },
          "cisList" : {
            "description" : "Список кодов идентификации товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).",
            "items" : {
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          },
          "initialCount" : {
            "description" : "Первоначальное количество единиц товара.",
            "format" : "int32",
            "type" : "integer"
          },
          "bidFee" : {
            "description" : "Списанная ставка ближайшего конкурента.\n\nУказывается в процентах от стоимости товара и умножается на 100. Например, ставка 5% обозначается как 500.\n",
            "example" : 570,
            "format" : "int32",
            "maximum" : 10000,
            "minimum" : 0,
            "type" : "integer"
          },
          "cofinanceThreshold" : {
            "description" : "Порог для скидок с Маркетом на момент оформления заказа. [Что это такое?](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)\n\nУказан в рублях. Точность — два знака после запятой.\n",
            "type" : "number"
          },
          "cofinanceValue" : {
            "description" : "Скидка с Маркетом. [Что это такое?](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)\n\nУказана в рублях. Точность — два знака после запятой.\n",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "OrdersStatsPaymentDTO" : {
        "description" : "Информация о денежных переводах по заказу.",
        "example" : {
          "date" : "2000-01-23",
          "total" : 7.386281948385884,
          "paymentOrder" : {
            "date" : "2000-01-23",
            "id" : "id"
          },
          "id" : "id",
          "source" : "BUYER",
          "type" : "PAYMENT"
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор денежного перевода.",
            "type" : "string"
          },
          "date" : {
            "description" : "Дата денежного перевода.\n\nФормат даты: `ГГГГ-ММ-ДД`.\n",
            "format" : "date",
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/OrdersStatsPaymentType"
          },
          "source" : {
            "$ref" : "#/components/schemas/OrdersStatsPaymentSourceType"
          },
          "total" : {
            "description" : "Сумма денежного перевода.\nЗначение указывается в рублях независимо от способа денежного перевода.\nТочность — два знака после запятой.\n",
            "type" : "number"
          },
          "paymentOrder" : {
            "$ref" : "#/components/schemas/OrdersStatsPaymentOrderDTO"
          }
        },
        "type" : "object"
      },
      "OrdersStatsCommissionDTO" : {
        "description" : "Информация о стоимости услуг.",
        "example" : {
          "actual" : 1.2315135367772556,
          "type" : "FEE"
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/OrdersStatsCommissionType"
          },
          "actual" : {
            "description" : "Сумма в рублях, которая была выставлена в момент создания заказа и которую нужно оплатить.\nТочность — два знака после запятой.\n",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "GoodsStatsWeightDimensionsDTO" : {
        "description" : "Информация о весе и габаритах товара.\n\nЕсли товар уже привязан к карточке (`marketSku`), в ответе вернутся габариты из карточки Маркета, а не размеры, которые вы передаете.\n",
        "example" : {
          "length" : 5.962133916683182,
          "width" : 5.637376656633329,
          "weight" : 7.061401241503109,
          "height" : 2.3021358869347655
        },
        "properties" : {
          "length" : {
            "description" : "Длина товара в сантиметрах.",
            "type" : "number"
          },
          "width" : {
            "description" : "Ширина товара в сантиметрах.",
            "type" : "number"
          },
          "height" : {
            "description" : "Высота товара в сантиметрах.",
            "type" : "number"
          },
          "weight" : {
            "description" : "Вес товара в килограммах.",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "GoodsStatsWarehouseDTO" : {
        "description" : "Информация о складе.",
        "example" : {
          "name" : "name",
          "id" : 9,
          "stocks" : [ {
            "count" : 1,
            "type" : "FIT"
          }, {
            "count" : 1,
            "type" : "FIT"
          } ]
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор склада.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Название склада.",
            "type" : "string"
          },
          "stocks" : {
            "description" : "Информация об остатках товаров на складе.",
            "items" : {
              "$ref" : "#/components/schemas/WarehouseStockDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "stocks" ],
        "type" : "object"
      },
      "TariffDTO" : {
        "description" : "Информация о тарифах, по которым нужно заплатить за услуги Маркета.",
        "example" : {
          "amount" : 2.027123023002322,
          "type" : "AGENCY_COMMISSION",
          "percent" : 3.616076749251911,
          "parameters" : [ {
            "name" : "name",
            "value" : "value"
          }, {
            "name" : "name",
            "value" : "value"
          } ]
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/TariffType"
          },
          "percent" : {
            "deprecated" : true,
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n\nЗначение тарифа в процентах.\n",
            "type" : "number"
          },
          "amount" : {
            "description" : "Значение тарифа в рублях.",
            "type" : "number"
          },
          "parameters" : {
            "description" : "Параметры расчета тарифа.",
            "items" : {
              "$ref" : "#/components/schemas/TariffParameterDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "amount", "parameters", "type" ],
        "type" : "object"
      },
      "OutletWorkingScheduleItemDTO" : {
        "description" : "Расписание работы точки продаж.",
        "example" : {
          "startDay" : "MONDAY",
          "endDay" : null,
          "startTime" : "startTime",
          "endTime" : "endTime"
        },
        "properties" : {
          "startDay" : {
            "$ref" : "#/components/schemas/DayOfWeekType"
          },
          "endDay" : {
            "$ref" : "#/components/schemas/DayOfWeekType"
          },
          "startTime" : {
            "description" : "Точка продаж работает c указанного часа.\n\nФормат: `ЧЧ:ММ`.\n",
            "minLength" : 1,
            "type" : "string"
          },
          "endTime" : {
            "description" : "Точка продаж работает до указанного часа.\n\nФормат: `ЧЧ:ММ`.\n",
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [ "endDay", "endTime", "startDay", "startTime" ],
        "type" : "object"
      },
      "LicenseCheckStatusType" : {
        "description" : "Статус проверки лицензии:\n\n* `NEW` — лицензия проверяется.\n* `SUCCESS` — лицензия прошла проверку.\n* `FAIL` — лицензия не прошла проверку.\n",
        "enum" : [ "NEW", "SUCCESS", "FAIL", "REVOKE", "DONT_WANT", "FAIL_MANUAL" ],
        "type" : "string"
      },
      "FeedbackStateType" : {
        "description" : "Статус отзыва:\n\n* `LAST` — актуален.\n* `PREVIOUS` — устарел.\n* `DELETED` — удален.\n",
        "enum" : [ "LAST", "PREVIOUS", "DELETED" ],
        "type" : "string"
      },
      "FeedbackAuthorDTO" : {
        "description" : "Информация об авторе отзыва.\n\nЕсли отзыв оставлен анонимно, параметр не возвращается.\n",
        "example" : {
          "name" : "name",
          "region" : {
            "parent" : null,
            "children" : [ null, null ],
            "name" : "name",
            "id" : 0,
            "type" : "OTHER"
          }
        },
        "properties" : {
          "name" : {
            "description" : "Имя автора отзыва.",
            "type" : "string"
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionDTO"
          }
        },
        "type" : "object"
      },
      "FeedbackCommentDTO" : {
        "description" : "Комментарий к отзыву на магазин.",
        "example" : {
          "createdAt" : "2000-01-23T04:56:07.000+00:00",
          "children" : [ null, null ],
          "author" : {
            "name" : "name",
            "type" : "USER"
          },
          "id" : 6,
          "body" : "body",
          "parentId" : 1,
          "updatedAt" : "2000-01-23T04:56:07.000+00:00"
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор ответа.",
            "format" : "int64",
            "type" : "integer"
          },
          "parentId" : {
            "description" : "Идентификатор родительского ответа.",
            "format" : "int64",
            "type" : "integer"
          },
          "body" : {
            "description" : "Текст ответа.",
            "type" : "string"
          },
          "createdAt" : {
            "description" : "Дата и время создания ответа.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`.\n",
            "format" : "date-time",
            "type" : "string"
          },
          "updatedAt" : {
            "description" : "Дата и время изменения ответа.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`.\n",
            "format" : "date-time",
            "type" : "string"
          },
          "author" : {
            "$ref" : "#/components/schemas/FeedbackCommentAuthorDTO"
          },
          "children" : {
            "description" : "Дочерние ответы.",
            "items" : {
              "$ref" : "#/components/schemas/FeedbackCommentDTO"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "FeedbackShopDTO" : {
        "description" : "Информация о магазине.",
        "example" : {
          "name" : "name"
        },
        "properties" : {
          "name" : {
            "description" : "Название магазина.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FeedbackGradesDTO" : {
        "description" : "Информация об оценках, которые поставил автор отзыва магазину, и об оценках полезности отзыва от других пользователей Маркета.",
        "example" : {
          "average" : 5.962133916683182,
          "agreeCount" : 5,
          "rejectCount" : 2,
          "factors" : [ {
            "description" : "description",
            "id" : 7,
            "title" : "title",
            "value" : 9
          }, {
            "description" : "description",
            "id" : 7,
            "title" : "title",
            "value" : 9
          } ]
        },
        "properties" : {
          "average" : {
            "description" : "Общая оценка, указанная в отзыве: от `1` («Ужасный магазин») до `5` («Отличный магазин»).",
            "type" : "number"
          },
          "agreeCount" : {
            "description" : "Количество пользователей, считающих отзыв полезным.",
            "format" : "int64",
            "type" : "integer"
          },
          "rejectCount" : {
            "description" : "Количество пользователей, считающих отзыв бесполезным.",
            "format" : "int64",
            "type" : "integer"
          },
          "factors" : {
            "description" : "Информация об оценках по параметрам, указанных в отзыве.\n\nПри создании отзыва автору предлагается поставить оценки магазину по нескольким параметрам: например, за скорость обработки заказа или удобство самовывоза. Набор параметров зависит от того, какой способ покупки (параметр `delivery`) указал автор.\n",
            "items" : {
              "$ref" : "#/components/schemas/FeedbackFactorDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "factors" ],
        "type" : "object"
      },
      "FeedbackOrderDTO" : {
        "description" : "Информация о заказе, указанная в отзыве.",
        "example" : {
          "delivery" : "DELIVERY",
          "shopOrderId" : "shopOrderId"
        },
        "properties" : {
          "shopOrderId" : {
            "description" : "Номер заказа, указанный в отзыве.",
            "type" : "string"
          },
          "delivery" : {
            "$ref" : "#/components/schemas/FeedbackDeliveryType"
          }
        },
        "type" : "object"
      },
      "GoodsFeedbackIdentifiersDTO" : {
        "description" : "Идентификаторы, которые связаны с отзывом.",
        "example" : {
          "orderId" : 6,
          "modelId" : 1
        },
        "properties" : {
          "orderId" : {
            "description" : "Идентификатор заказа на Маркете.",
            "format" : "int64",
            "type" : "integer"
          },
          "modelId" : {
            "description" : "Идентификатор модели товара.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "modelId", "orderId" ],
        "type" : "object"
      },
      "GoodsFeedbackDescriptionDTO" : {
        "description" : "Текстовая часть отзыва.",
        "example" : {
          "advantages" : "advantages",
          "disadvantages" : "disadvantages",
          "comment" : "comment"
        },
        "properties" : {
          "advantages" : {
            "description" : "Описание плюсов товара в отзыве.",
            "type" : "string"
          },
          "disadvantages" : {
            "description" : "Описание минусов товара в отзыве.",
            "type" : "string"
          },
          "comment" : {
            "description" : "Комментарий в отзыве.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "GoodsFeedbackMediaDTO" : {
        "description" : "Фото и видео.",
        "example" : {
          "videos" : [ "videos", "videos" ],
          "photos" : [ "photos", "photos" ]
        },
        "properties" : {
          "photos" : {
            "description" : "Ссылки на фото.",
            "items" : {
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          },
          "videos" : {
            "description" : "Ссылки на видео.",
            "items" : {
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "GoodsFeedbackStatisticsDTO" : {
        "description" : "Статистическая информация по отзыву.",
        "example" : {
          "commentsCount" : 5,
          "rating" : 3,
          "paidAmount" : 2,
          "recommended" : true
        },
        "properties" : {
          "rating" : {
            "description" : "Оценка товара.",
            "format" : "int32",
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer"
          },
          "commentsCount" : {
            "description" : "Количество комментариев к отзыву.\n\nУчитываются только ответы на отзывы, а не дочерние комментарии.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "recommended" : {
            "description" : "Рекомендуют ли этот товар.",
            "type" : "boolean"
          },
          "paidAmount" : {
            "description" : "Количество баллов Плюса, которое автор получил за отзыв.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "commentsCount", "rating" ],
        "type" : "object"
      },
      "GoodsFeedbackCommentAuthorType" : {
        "description" : "Тип автора:\n\n* `USER` — пользователь.\n* `BUSINESS` — кабинет.\n",
        "enum" : [ "USER", "BUSINESS" ],
        "type" : "string"
      },
      "GetPriceWithDiscountDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdatePriceWithDiscountDTO"
        }, {
          "$ref" : "#/components/schemas/UpdateTimeDTO"
        } ],
        "description" : "Цена с указанием скидки и времени последнего обновления.",
        "example" : {
          "discountBase" : 0.23021358869347652,
          "currencyId" : "RUR",
          "value" : 0.5637376656633328,
          "updatedAt" : "2000-01-23T04:56:07.000+00:00"
        },
        "type" : "object"
      },
      "GetPriceWithVatDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PriceDTO"
        }, {
          "$ref" : "#/components/schemas/UpdateTimeDTO"
        } ],
        "description" : "Цена с указанием ставки НДС и времени последнего обновления.",
        "example" : {
          "vat" : 5,
          "discountBase" : 5.962133916683182,
          "currencyId" : "RUR",
          "value" : 1.4658129805029452,
          "updatedAt" : "2000-01-23T04:56:07.000+00:00"
        },
        "type" : "object"
      },
      "OfferErrorDTO" : {
        "description" : "Сообщение об ошибке, связанной с размещением товара.",
        "example" : {
          "comment" : "comment",
          "message" : "message"
        },
        "properties" : {
          "message" : {
            "description" : "Тип ошибки.",
            "type" : "string"
          },
          "comment" : {
            "description" : "Пояснение.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "QuantumDTO" : {
        "description" : "Настройка продажи квантами.\n\nЧтобы сбросить установленные ранее значения, передайте пустой параметр `quantum`.\n\n{% cut \"Пример\" %}\n\n```json\n{\n  \"offers\": [\n    {\n      \"offerId\": \"08e35dc1-89a2-11e3-8055-0015e9b8c48d\",\n      \"quantum\": {}\n    }\n  ]\n}\n```\n\n{% endcut %}\n",
        "example" : {
          "minQuantity" : 1,
          "stepQuantity" : 60
        },
        "properties" : {
          "minQuantity" : {
            "description" : "Минимальное количество единиц товара в заказе. Например, если указать 10, покупатель сможет добавить в корзину не меньше 10 единиц.\n\n⚠️ Если количество товара на складе меньше заданного, ограничение не сработает и покупатель сможет его заказать.\n",
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "stepQuantity" : {
            "description" : "На сколько единиц покупатель сможет увеличить количество товара в корзине.\n\nНапример, если задать 5, покупатель сможет добавить к заказу только 5, 10, 15, ... единиц товара.\n\n⚠️ Если количество товара на складе не дотягивает до кванта, ограничение не сработает и покупатель сможет заказать количество, не кратное кванту.\n",
            "format" : "int32",
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "OfferForRecommendationDTO" : {
        "description" : "Информация о состоянии цены на товар.",
        "example" : {
          "shows" : 0,
          "price" : {
            "currencyId" : null,
            "value" : 0.9301444243932576
          },
          "offerId" : "offerId",
          "competitiveness" : "OPTIMAL",
          "cofinancePrice" : {
            "currencyId" : null,
            "value" : 0.7061401241503109,
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          }
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "price" : {
            "$ref" : "#/components/schemas/BasePriceDTO"
          },
          "cofinancePrice" : {
            "$ref" : "#/components/schemas/GetPriceDTO"
          },
          "competitiveness" : {
            "$ref" : "#/components/schemas/PriceCompetitivenessType"
          },
          "shows" : {
            "description" : "Количество показов карточки товара за последние 7 дней.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "OfferRecommendationInfoDTO" : {
        "description" : "Рекомендации, касающиеся цены на товар.",
        "example" : {
          "recommendedCofinancePrice" : {
            "currencyId" : null,
            "value" : 0.9301444243932576
          },
          "offerId" : "offerId",
          "competitivenessThresholds" : {
            "optimalPrice" : {
              "currencyId" : null,
              "value" : 0.9301444243932576
            },
            "averagePrice" : {
              "currencyId" : null,
              "value" : 0.9301444243932576
            }
          }
        },
        "properties" : {
          "offerId" : {
            "description" : "Ваш SKU — идентификатор товара в вашей системе.\n\nРазрешена любая последовательность длиной до 255 знаков.\n\nПравила использования SKU:\n\n* У каждого товара SKU должен быть свой.\n\n* SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.\n\n* Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n[Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n",
            "maxLength" : 255,
            "minLength" : 1,
            "pattern" : "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$",
            "type" : "string"
          },
          "recommendedCofinancePrice" : {
            "$ref" : "#/components/schemas/BasePriceDTO"
          },
          "competitivenessThresholds" : {
            "$ref" : "#/components/schemas/PriceCompetitivenessThresholdsDTO"
          }
        },
        "type" : "object"
      },
      "FeedStatusType" : {
        "description" : "Статус прайс-листа.\n\nВозможные значения:\n\n  * `ERROR` — найдены ошибки.\n  * `NA` — прайс-лист не загружался более семи дней или на этапе загрузки произошла ошибка.\n  * `OK` — ошибок не найдено.\n",
        "enum" : [ "ERROR", "NA", "OK" ],
        "type" : "string"
      },
      "FeedContentErrorDTO" : {
        "description" : "Информация об ошибке в содержимом прайс-листа.\nВыводится, если параметр `content status=ERROR`.\n",
        "example" : {
          "type" : "PARSE_ERROR"
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/FeedContentErrorType"
          }
        },
        "type" : "object"
      },
      "FeedDownloadErrorDTO" : {
        "description" : "Информация об ошибке при загрузке прайс-листа.\nВыводится, если параметр `download status=ERROR`.\n",
        "example" : {
          "description" : "description",
          "type" : "DOWNLOAD_ERROR",
          "httpStatusCode" : 5
        },
        "properties" : {
          "httpStatusCode" : {
            "description" : "HTTP-код ошибки индексации прайс-листа.\nВыводится, если `type=DOWNLOAD_HTTP_ERROR`.\n",
            "format" : "int32",
            "type" : "integer"
          },
          "type" : {
            "$ref" : "#/components/schemas/FeedDownloadErrorType"
          },
          "description" : {
            "description" : "Описание ошибки.\nВыводится, если `type=DOWNLOAD_ERROR`.\n",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FeedPublicationFullDTO" : {
        "description" : "Информация о последней публикации предложений из прайс-листа на Маркете.\n",
        "example" : {
          "fileTime" : "2000-01-23T04:56:07.000+00:00",
          "publishedTime" : "2000-01-23T04:56:07.000+00:00"
        },
        "properties" : {
          "fileTime" : {
            "description" : "Дата и время, которые магазин указал в прайс-листе.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.\n",
            "format" : "date-time",
            "type" : "string"
          },
          "publishedTime" : {
            "description" : "Дата и время публикации предложений из прайс-листа на Маркете.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.\n",
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FeedPublicationPriceAndStockUpdateDTO" : {
        "description" : "Последнее обновление цен и наличия товаров на Маркете.\nЕсли последнее по времени обновление было полным, в параметре выводятся те же данные, что и в параметре `full`.\nВыводится, если параметр `publication status=OK`.\n",
        "example" : {
          "fileTime" : "2000-01-23T04:56:07.000+00:00",
          "publishedTime" : "2000-01-23T04:56:07.000+00:00"
        },
        "properties" : {
          "fileTime" : {
            "description" : "Дата и время, которые магазин указал в прайс-листе.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.\n",
            "format" : "date-time",
            "type" : "string"
          },
          "publishedTime" : {
            "description" : "Дата и время публикации предложений из прайс-листа на Маркете.\n\nФормат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.\n",
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FeedIndexLogsIndexType" : {
        "description" : "Тип обновления.\n\nВозможные значения:\n\n* `DIFF` — частичное обновление данных на Яндекс Маркете (например, обновление цен ранее опубликованных предложений и публикация новых).\n* `FAST_PRICE` — только обновление цен ранее опубликованных предложений.\n* `FULL` — полное обновление данных на Яндекс Маркете.\n",
        "enum" : [ "DIFF", "FAST_PRICE", "FULL" ],
        "type" : "string"
      },
      "FeedIndexLogsErrorDTO" : {
        "description" : "Информация об ошибке, произошедшей во время индексации прайс-листа.\n\nВыводится, если во время индексации произошли ошибки (`index-log-record status=ERROR`).\n",
        "example" : {
          "description" : "description",
          "type" : "DOWNLOAD_ERROR",
          "httpStatusCode" : 1
        },
        "properties" : {
          "httpStatusCode" : {
            "description" : "HTTP-код ошибки индексации прайс-листа.\n\nВыводится, если `type=DOWNLOAD_HTTP_ERROR`.\n",
            "format" : "int32",
            "type" : "integer"
          },
          "type" : {
            "$ref" : "#/components/schemas/FeedIndexLogsErrorType"
          },
          "description" : {
            "description" : "Описание ошибки.\n\nВыводится, если `type=DOWNLOAD_ERROR`.\n",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FeedIndexLogsOffersDTO" : {
        "description" : "Информация о предложениях прайс-листа.",
        "example" : {
          "rejectedCount" : 5,
          "totalCount" : 5
        },
        "properties" : {
          "rejectedCount" : {
            "description" : "Количество предложений, который не опубликованы на Маркете из-за найденных ошибок.",
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "Количество предложений в прайс-листе.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "ModelPriceDTO" : {
        "description" : "Информация о ценах на модель товара.",
        "example" : {
          "avg" : 6.027456183070403,
          "min" : 5.962133916683182,
          "max" : 1.4658129805029452
        },
        "properties" : {
          "avg" : {
            "description" : "Средняя цена предложения для модели в регионе.",
            "type" : "number"
          },
          "max" : {
            "description" : "Максимальная цена предложения для модели в регионе.",
            "type" : "number"
          },
          "min" : {
            "description" : "Минимальная цена предложения для модели в регионе.",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "ModelOfferDTO" : {
        "description" : "Информация о предложении.",
        "example" : {
          "shopRating" : 9,
          "preDiscountPrice" : 5.962133916683182,
          "shippingCost" : 7.061401241503109,
          "pos" : 1,
          "regionId" : 2,
          "price" : 5.637376656633329,
          "name" : "name",
          "discount" : 6,
          "shopName" : "shopName",
          "inStock" : 3
        },
        "properties" : {
          "discount" : {
            "description" : "Скидка на предложение в процентах.",
            "format" : "int32",
            "type" : "integer"
          },
          "name" : {
            "description" : "Наименование предложения.",
            "type" : "string"
          },
          "pos" : {
            "description" : "Позиция предложения в выдаче Маркета на карточке модели.",
            "format" : "int32",
            "type" : "integer"
          },
          "preDiscountPrice" : {
            "description" : "Цена предложения без скидки магазина.",
            "type" : "number"
          },
          "price" : {
            "description" : "Цена предложения без скидки, которую получает покупатель при оплате через Yandex Pay.",
            "type" : "number"
          },
          "regionId" : {
            "description" : "Идентификатор региона предложения (регион, откуда доставляется товар).\n\nСначала показываются предложения, доставляемые из региона, указанного в запросе в параметре `regionId`. Предложения, доставляемые из других регионов, показываются после них.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "shippingCost" : {
            "description" : "Стоимость доставки товара в регион:\n\n* `0` — доставка осуществляется бесплатно.\n* `-1` — магазин не осуществляет доставку этого товара (самовывоз).\n\nЕсли стоимость доставки неизвестна, параметр не выводится.\n",
            "type" : "number"
          },
          "shopName" : {
            "description" : "Название магазина (в том виде, в котором отображается на Маркете).",
            "type" : "string"
          },
          "shopRating" : {
            "description" : "Рейтинг магазина.\n\nВозможные значения:\n* `-1` — у магазинов, недавно появившихся на Маркете, рейтинг появляется не сразу. До момента появления рейтинга для таких магазинов возвращается значение `-1`.\n* `1`.\n* `2`.\n* `3`.\n* `4`.\n* `5`.\n",
            "format" : "int32",
            "type" : "integer"
          },
          "inStock" : {
            "deprecated" : true,
            "description" : "{% note warning \"\" %}\n\nЭтот параметр устарел. Не используйте его.\n\n{% endnote %}\n",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "BidRecommendationItemDTO" : {
        "description" : "Рекомендованная ставка и возможная доля показов.",
        "example" : {
          "showPercent" : 8,
          "bid" : 570
        },
        "properties" : {
          "bid" : {
            "description" : "Значение ставки.",
            "example" : 570,
            "format" : "int32",
            "maximum" : 9999,
            "minimum" : 0,
            "type" : "integer"
          },
          "showPercent" : {
            "description" : "Доля показов.\n",
            "format" : "int64",
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer"
          }
        },
        "required" : [ "bid", "showPercent" ],
        "type" : "object"
      },
      "PriceRecommendationItemDTO" : {
        "description" : "Рекомендованная цена.",
        "example" : {
          "campaignId" : 6,
          "price" : 1.1465812980502945
        },
        "properties" : {
          "campaignId" : {
            "description" : "Идентификатор кампании.",
            "format" : "int64",
            "type" : "integer"
          },
          "price" : {
            "description" : "Рекомендованная цена на товар. Чтобы продвижение хорошо работало, цена на товар должна быть не выше этого значения. [Подробно о рекомендованных ценах](https://yandex.ru/support/marketplace/marketing/campaigns.html#prices)\n",
            "format" : "decimal",
            "minimum" : 1,
            "type" : "number"
          }
        },
        "required" : [ "campaignId", "price" ],
        "type" : "object"
      },
      "WarehouseAddressDTO" : {
        "description" : "Адрес склада.",
        "example" : {
          "number" : "number",
          "city" : "city",
          "street" : "street",
          "block" : "block",
          "gps" : {
            "latitude" : 9.965781217890562,
            "longitude" : 9.369310271410669
          },
          "building" : "building"
        },
        "properties" : {
          "city" : {
            "description" : "Город.",
            "maxLength" : 200,
            "type" : "string"
          },
          "street" : {
            "description" : "Улица.",
            "maxLength" : 512,
            "type" : "string"
          },
          "number" : {
            "description" : "Номер дома.",
            "maxLength" : 256,
            "type" : "string"
          },
          "building" : {
            "description" : "Номер строения.",
            "maxLength" : 16,
            "type" : "string"
          },
          "block" : {
            "description" : "Номер корпуса.",
            "maxLength" : 16,
            "type" : "string"
          },
          "gps" : {
            "$ref" : "#/components/schemas/GpsDTO"
          }
        },
        "required" : [ "city", "gps" ],
        "type" : "object"
      },
      "ParameterType" : {
        "description" : "Тип данных:\n\n* `TEXT` — текст.\n* `ENUM` — список возможных значений.\n* `BOOLEAN` — `true` или `false`.\n* `NUMERIC` — число.\n",
        "enum" : [ "TEXT", "ENUM", "BOOLEAN", "NUMERIC" ],
        "type" : "string"
      },
      "CategoryParameterUnitDTO" : {
        "description" : "Единицы измерения характеристики товара.",
        "example" : {
          "defaultUnitId" : 1,
          "units" : [ {
            "name" : "кг",
            "fullName" : "килограмм",
            "id" : 5
          }, {
            "name" : "кг",
            "fullName" : "килограмм",
            "id" : 5
          } ]
        },
        "properties" : {
          "defaultUnitId" : {
            "description" : "Единица измерения по умолчанию.",
            "format" : "int64",
            "type" : "integer"
          },
          "units" : {
            "description" : "Допустимые единицы измерения.",
            "items" : {
              "$ref" : "#/components/schemas/UnitDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "defaultUnitId", "units" ],
        "type" : "object"
      },
      "OfferCardRecommendationType" : {
        "description" : "Рекомендация по дополнению или замене контента. Не возвращается для карточек, которые заполнены Маркетом или содержат бывшие в употреблении товары.\n\nЧасть рекомендаций относятся к **основным параметрам**, которые есть у товаров любых категорий. Другие — к тем **характеристикам**, которые есть у товара потому, что он относится к определенной категории.\n\n**1. Рекомендации, относящиеся к основным параметрам**\n\nКаждая такая рекомендация относится к **единственному параметру**. Чтобы заполнить этот параметр, пользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).\n\nРекомендации по заполнению параметров в `updateOfferMappings`:\n\n* `RECOGNIZED_VENDOR` — напишите название производителя так, как его пишет сам производитель (параметр `vendor`).\n* `PICTURE_COUNT` — добавьте изображения (параметр `pictures`).\n* `FIRST_PICTURE_SIZE` — замените первое изображение более крупным (параметр `pictures`).\n* `TITLE_LENGTH` — измените название (параметр `name`). Составьте название по схеме: тип + бренд или производитель + модель + особенности, если есть (размер, вес, цвет).\n* `DESCRIPTION_LENGTH` — добавьте описание рекомендуемого размера (параметр `description`).\n* `AVERAGE_PICTURE_SIZE` — замените все изображения на изображения высокого качества (параметр `pictures`).\n* `FIRST_VIDEO_LENGTH` — добавьте первое видео рекомендуемой длины (параметр `videos`).\n* `AVERAGE_VIDEO_SIZE` — замените все видео на видео высокого качества (параметр `videos`).\n* `VIDEO_COUNT` — добавьте больше видео (параметр `videos`).\n\nРекомендуемые значения параметров описаны в [Справке Яндекс Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/add/).\n\n**2. Рекомендации, относящиеся к характеристикам по категориям**\n\nКаждая такая рекомендация предполагает заполнение **одной или нескольких характеристик**. Чтобы узнать, какие именно характеристики нужно заполнить, воспользуйтесь запросом [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md). Например, если вы получили рекомендацию `MAIN`, нужно заполнить характеристики, имеющие `MAIN` в массиве `recommendationTypes`.\n\nРекомендации:\n\n* `MAIN` — заполните ключевые характеристики товара, которые используются в поиске и фильтрах.\n* `ADDITIONAL` — заполните дополнительные характеристики товара.\n* `DISTINCTIVE` — заполните характеристики, которыми отличаются друг от друга варианты товара.\n\n**3. Устаревшие рекомендации**\n\n* `HAS_VIDEO`.\n* `FILTERABLE`.\n* `HAS_DESCRIPTION`.\n* `HAS_BARCODE`.\n",
        "enum" : [ "HAS_VIDEO", "RECOGNIZED_VENDOR", "MAIN", "ADDITIONAL", "DISTINCTIVE", "FILTERABLE", "PICTURE_COUNT", "HAS_DESCRIPTION", "HAS_BARCODE", "FIRST_PICTURE_SIZE", "TITLE_LENGTH", "DESCRIPTION_LENGTH", "AVERAGE_PICTURE_SIZE", "FIRST_VIDEO_SIZE", "FIRST_VIDEO_LENGTH", "AVERAGE_VIDEO_SIZE", "VIDEO_COUNT" ],
        "type" : "string"
      },
      "ParameterValueOptionDTO" : {
        "description" : "Значение характеристики.",
        "example" : {
          "description" : "description",
          "id" : 5,
          "value" : "value"
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор значения.",
            "format" : "int64",
            "type" : "integer"
          },
          "value" : {
            "description" : "Значение.",
            "type" : "string"
          },
          "description" : {
            "description" : "Описание значения.",
            "type" : "string"
          }
        },
        "required" : [ "id", "value" ],
        "type" : "object"
      },
      "ParameterValueConstraintsDTO" : {
        "description" : "Ограничения на значения характеристик.",
        "example" : {
          "minValue" : 2.3021358869347655,
          "maxValue" : 7.061401241503109,
          "maxLength" : 9
        },
        "properties" : {
          "minValue" : {
            "description" : "Минимальное число.",
            "format" : "double",
            "type" : "number"
          },
          "maxValue" : {
            "description" : "Максимальное число.",
            "format" : "double",
            "type" : "number"
          },
          "maxLength" : {
            "description" : "Максимальная длина текста.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "ValueRestrictionDTO" : {
        "description" : "Ограничение на возможные значения, накладываемое другой характеристикой.\n\nЕсли ограничивающая характеристика принимает определенное значение, список возможных значений ограничиваемой характеристики сокращается.\n\n**Пример**\n\nХарактеристика **размер** сама по себе может принимать девять разных значений: `S`, `M`, `L`, `44`, `46`, `48`, `42/164`, `46/176`, `44S`.\n\nЕсли ограничивающая характеристика **размерная сетка** принимает значение `RU`, список возможных значений размера сокращается до `44`, `46`, `48`.\n",
        "example" : {
          "limitedValues" : [ {
            "limitingOptionValueId" : 2,
            "optionValueIds" : [ 4, 4 ]
          }, {
            "limitingOptionValueId" : 2,
            "optionValueIds" : [ 4, 4 ]
          } ],
          "limitingParameterId" : 3
        },
        "properties" : {
          "limitingParameterId" : {
            "description" : "Идентификатор ограничивающей характеристики.",
            "format" : "int64",
            "type" : "integer"
          },
          "limitedValues" : {
            "description" : "Значения ограничивающей характеристики и соответствующие допустимые значения текущей характеристики.",
            "items" : {
              "$ref" : "#/components/schemas/OptionValuesLimitedDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "limitedValues", "limitingParameterId" ],
        "type" : "object"
      },
      "OfferCardRecommendationDTO" : {
        "description" : "Рекомендация по заполнению карточки товара.",
        "example" : {
          "type" : "HAS_VIDEO",
          "percent" : 60
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/OfferCardRecommendationType"
          },
          "percent" : {
            "description" : "Процент выполнения рекомендации. Указывается для рекомендаций некоторых типов.",
            "exclusiveMaximum" : true,
            "format" : "int32",
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer"
          }
        },
        "required" : [ "type" ],
        "type" : "object"
      },
      "OfferContentErrorType" : {
        "description" : "Типы ошибок:\n\n* `OFFER_NOT_FOUND` — такого товара нет в каталоге.\n* `UNKNOWN_CATEGORY` — указана неизвестная категория.\n* `CATEGORY_MISMATCH` — указана категория, которая не совпадает с категорией товара.\n* `UNKNOWN_PARAMETER` — передана характеристика, которой нет среди характеристик категории.\n* `UNEXPECTED_BOOLEAN_VALUE` — вместо boolean-значения передано что-то другое.\n* `NUMBER_FORMAT` — передана строка, не обозначающая число, вместо числа.\n* `VALUE_BLANK` — передано пустое значение.\n* `INVALID_UNIT_ID` — передана единица измерения, недопустимая для характеристики.\n* `INVALID_GROUP_ID_LENGTH` — в названии превышено допустимое значение символов — 255.\n* `INVALID_GROUP_ID_CHARACTERS` — переданы [недопустимые символы](*ascii-code).\n",
        "enum" : [ "OFFER_NOT_FOUND", "UNKNOWN_CATEGORY", "CATEGORY_MISMATCH", "UNKNOWN_PARAMETER", "UNEXPECTED_BOOLEAN_VALUE", "NUMBER_FORMAT", "VALUE_BLANK", "INVALID_UNIT_ID", "INVALID_GROUP_ID_LENGTH", "INVALID_GROUP_ID_CHARACTERS" ],
        "type" : "string"
      },
      "ChatMessageSenderType" : {
        "description" : "Кто отправил сообщение:\n\n* `PARTNER` — магазин.\n* `CUSTOMER` — покупатель.\n* `MARKET` — Маркет.\n* `SUPPORT` — сотрудник службы поддержки Маркета.\n",
        "enum" : [ "PARTNER", "CUSTOMER", "MARKET", "SUPPORT" ],
        "type" : "string"
      },
      "ChatMessagePayloadDTO" : {
        "description" : "Информация о приложенных к сообщению файлах.",
        "example" : {
          "size" : 1,
          "name" : "name",
          "url" : "url"
        },
        "properties" : {
          "name" : {
            "description" : "Имя файла.",
            "type" : "string"
          },
          "url" : {
            "description" : "Ссылка для скачивания файла.",
            "type" : "string"
          },
          "size" : {
            "description" : "Размер файла в байтах.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [ "name", "size", "url" ],
        "type" : "object"
      },
      "CalculatedTariffDTO" : {
        "description" : "Информация об услугах Маркета.",
        "example" : {
          "amount" : 9.301444243932576,
          "type" : "AGENCY_COMMISSION",
          "parameters" : [ {
            "name" : "name",
            "value" : "value"
          }, {
            "name" : "name",
            "value" : "value"
          } ]
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/CalculatedTariffType"
          },
          "amount" : {
            "description" : "Стоимость услуги в рублях.",
            "type" : "number"
          },
          "parameters" : {
            "description" : "Параметры расчета тарифа.",
            "items" : {
              "$ref" : "#/components/schemas/TariffParameterDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "parameters", "type" ],
        "type" : "object"
      },
      "CategoryErrorType" : {
        "description" : "Типы ошибок:\n\n* `UNKNOWN_CATEGORY` — указана неизвестная категория.\n* `CATEGORY_IS_NOT_LEAF` — указана нелистовая категория. Укажите ту, которая не имеет дочерних категорий.\n",
        "enum" : [ "UNKNOWN_CATEGORY", "CATEGORY_IS_NOT_LEAF" ],
        "type" : "string"
      },
      "QualityRatingDTO" : {
        "description" : "Информация об индексе качества.",
        "example" : {
          "components" : [ {
            "componentType" : "DBS_CANCELLATION_RATE",
            "value" : 14.658129805029452
          }, {
            "componentType" : "DBS_CANCELLATION_RATE",
            "value" : 14.658129805029452
          } ],
          "rating" : 60,
          "calculationDate" : "2000-01-23"
        },
        "properties" : {
          "rating" : {
            "description" : "Значение индекса качества.",
            "format" : "int64",
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer"
          },
          "calculationDate" : {
            "description" : "Дата вычисления.\n\nФормат даты: `ГГГГ‑ММ‑ДД`.\n",
            "format" : "date",
            "type" : "string"
          },
          "components" : {
            "description" : "Составляющие индекса качества.",
            "items" : {
              "$ref" : "#/components/schemas/QualityRatingComponentDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "calculationDate", "components", "rating" ],
        "type" : "object"
      },
      "AffectedOrderQualityRatingComponentType" : {
        "description" : "Составляющие индекса качества.\n\n**Для модели DBS:**\n* `DBS_CANCELLATION_RATE` — доля отмененных товаров.\n* `DBS_LATE_DELIVERY_RATE` — доля заказов, доставленных после плановой даты.\n\n**Для моделей FBS и Экспресс:**\n* `FBS_CANCELLATION_RATE` — доля отмененных товаров.\n* `FBS_LATE_SHIP_RATE` — доля не вовремя отгруженных заказов.\n",
        "enum" : [ "DBS_CANCELLATION_RATE", "DBS_LATE_DELIVERY_RATE", "FBS_CANCELLATION_RATE", "FBS_LATE_SHIP_RATE" ],
        "type" : "string"
      },
      "PromoPeriodDTO" : {
        "description" : "Время проведения акции.",
        "example" : {
          "dateTimeFrom" : "2000-01-23T04:56:07.000+00:00",
          "dateTimeTo" : "2000-01-23T04:56:07.000+00:00"
        },
        "properties" : {
          "dateTimeFrom" : {
            "description" : "Дата и время начала акции.",
            "format" : "date-time",
            "type" : "string"
          },
          "dateTimeTo" : {
            "description" : "Дата и время окончания акции.",
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "dateTimeFrom", "dateTimeTo" ],
        "type" : "object"
      },
      "GetPromoAssortmentInfoDTO" : {
        "description" : "Информация о товарах в акции.",
        "example" : {
          "activeOffers" : 0,
          "processing" : true,
          "potentialOffers" : 6
        },
        "properties" : {
          "activeOffers" : {
            "description" : "Количество товаров, которые участвуют или участвовали в акции.\n\nУчитываются только товары, которые были добавлены вручную.\n\nОб автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).\n",
            "format" : "int32",
            "type" : "integer"
          },
          "potentialOffers" : {
            "description" : "Количество доступных товаров в акции.\n\nПараметр возвращается только для текущих и будущих акций.\n",
            "format" : "int32",
            "type" : "integer"
          },
          "processing" : {
            "description" : "Есть ли изменения в ассортименте, которые еще не применились. Сохранение изменений занимает некоторое время.\n\nПараметр возвращается только для текущих и будущих акций.\n",
            "type" : "boolean"
          }
        },
        "required" : [ "activeOffers" ],
        "type" : "object"
      },
      "GetPromoMechanicsInfoDTO" : {
        "description" : "Информация о типе акции.",
        "example" : {
          "promocodeInfo" : {
            "promocode" : "promocode",
            "discount" : 1
          },
          "type" : "DIRECT_DISCOUNT"
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/MechanicsType"
          },
          "promocodeInfo" : {
            "$ref" : "#/components/schemas/GetPromoPromocodeInfoDTO"
          }
        },
        "required" : [ "type" ],
        "type" : "object"
      },
      "GetPromoBestsellerInfoDTO" : {
        "description" : "Информация об акции «Бестселлеры Маркета».",
        "example" : {
          "bestseller" : true,
          "entryDeadline" : "2000-01-23T04:56:07.000+00:00"
        },
        "properties" : {
          "bestseller" : {
            "description" : "Является ли акция «Бестселлером Маркета». Подробнее об этой акции читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/bestsellers).",
            "type" : "boolean"
          },
          "entryDeadline" : {
            "description" : "До какой даты можно добавить товар в акцию «Бестселлеры Маркета».\n\nПараметр возвращается только для текущих и будущих акций «Бестселлеры Маркета».\n",
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "bestseller" ],
        "type" : "object"
      },
      "ChannelType" : {
        "description" : "Каналы продвижения товаров:\n\n* `PUSH` — пуш-уведомление из приложения Яндекс Маркет.\n\n* `STRETCH_MAIN` — верхний баннер-растяжка на главной странице Яндекс Маркета.\n\n* `MAIN_PAGE_CAROUSEL` — карусель акций на главной странице Яндекс Маркета.\n\n* `PRODUCT_RETAIL_PAGE` — товар на странице ритейл-повода.\n\n* `MAIN_PAGE_CAROUSEL_WEB` — карусель акций на главной странице веб версии Яндекс Маркета.\n\n* `PRODUCT_SEPARATE_LANDING` — товар на лендинге акции.\n\n* `SUPER_SHELF_CATEGORY` — полка в категориях.\n\n* `CAROUSEL_RETAIL_PAGE` — карусель на лендинге ритейл-повода.\n\n* `POPUP_APPLICATION` — всплывающее окно в приложении Яндекс Маркет.\n\n* `POST_TELEGRAM` — пост в Телеграм-канале Яндекс Маркета.\n\n* `CPA` — реклама в партнерской сети Яндекс Маркета.\n\n* `WEB_PERFORMANCE_DIRECT` — реклама в Яндекс Директе.\n\n* `APP_PERFORMANCE` — реклама в AppStore и Google Play.\n\n* `BANNER_PICKUP_POINT` — баннер в ПВЗ Маркета.\n\n* `BLOGGER_PERFORMANCE` — рекламная интеграция у блогеров.\n\n* `DIGITAL_CHANNEL_BANNER` — баннер в digital-каналах и социальных сетях VK, Одноклассники.\n\n* `YANDEX_ECOSYSTEM_CHANNELS` — реклама в других сервисах Яндекса: GO, Delivery, Еда.\n\n* `PARTNERS_MAIN_BANNER` — баннер на главной странице mail.ru, auto.ru, ya.ru.\n\n* `OTHER` — прочее.\n",
        "enum" : [ "PUSH", "STRETCH_MAIN", "MAIN_PAGE_CAROUSEL", "PRODUCT_RETAIL_PAGE", "MAIN_PAGE_CAROUSEL_WEB", "PRODUCT_SEPARATE_LANDING", "SUPER_SHELF_CATEGORY", "CAROUSEL_RETAIL_PAGE", "POPUP_APPLICATION", "POST_TELEGRAM", "CPA", "WEB_PERFORMANCE_DIRECT", "APP_PERFORMANCE", "BANNER_PICKUP_POINT", "BLOGGER_PERFORMANCE", "DIGITAL_CHANNEL_BANNER", "YANDEX_ECOSYSTEM_CHANNELS", "PARTNERS_MAIN_BANNER", "OTHER" ],
        "type" : "object"
      },
      "GetPromoConstraintsDTO" : {
        "description" : "Ограничения в акции.",
        "example" : {
          "warehouseIds" : [ 5, 5 ]
        },
        "properties" : {
          "warehouseIds" : {
            "description" : "Идентификаторы складов, для которых действует акция. Товары, которые лежат на других складах, не будут продаваться по акции.\n\nПараметр возвращается, только если в условиях акции есть ограничение по складу.\n",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "PromoOfferParticipationStatusType" : {
        "description" : "Статус товара в акции:\n\n* `AUTO` — добавлен автоматически во всех магазинах кабинета, в которых товар доступен для покупки.\n\n* `PARTIALLY_AUTO` — добавлен автоматически у части магазинов.\n\n* `MANUAL` — добавлен вручную.\n\n* `NOT_PARTICIPATING` — не участвует в акции.\n\nОб автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).\n",
        "enum" : [ "AUTO", "PARTIALLY_AUTO", "MANUAL", "NOT_PARTICIPATING" ],
        "type" : "string"
      },
      "PromoOfferParamsDTO" : {
        "description" : "Параметры товара в акции.\n\nВозвращается параметр, который соответствует типу акции.\n",
        "example" : {
          "discountParams" : {
            "promoPrice" : 6,
            "maxPromoPrice" : 1,
            "price" : 0
          },
          "promocodeParams" : {
            "maxPrice" : 5
          }
        },
        "properties" : {
          "discountParams" : {
            "$ref" : "#/components/schemas/PromoOfferDiscountParamsDTO"
          },
          "promocodeParams" : {
            "$ref" : "#/components/schemas/PromoOfferPromocodeParamsDTO"
          }
        },
        "type" : "object"
      },
      "PromoOfferAutoParticipatingDetailsDTO" : {
        "description" : "Информация об автоматическом добавлении товара в акцию.\n\nПричины, по которым товар не был добавлен автоматически в других магазинах, можно узнать в кабинете продавца на Маркете на странице акции.\n\nОб автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).\n",
        "example" : {
          "campaignIds" : [ 5, 5 ]
        },
        "properties" : {
          "campaignIds" : {
            "description" : "Магазины, в которых товар добавлен в акцию автоматически.\n\nВозвращается, если статус товара в акции — `PARTIALLY_AUTO`.\n",
            "items" : {
              "description" : "Идентификатор магазина.",
              "format" : "int64",
              "type" : "integer"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UpdatePromoOfferDiscountParamsDTO" : {
        "description" : "Параметры товара в акции с типом `DIRECT_DISCOUNT` или `BLUE_FLASH`.\n\nОбязательный параметр для акций с этими типами.\n",
        "example" : {
          "promoPrice" : 1,
          "price" : 1
        },
        "properties" : {
          "price" : {
            "description" : "Зачеркнутая цена — та, по которой товар продавался до акции.\n\nУказывается в рублях.\n\nЧисло должно быть целым.\n",
            "format" : "int64",
            "minimum" : 1,
            "type" : "integer"
          },
          "promoPrice" : {
            "description" : "Цена по акции — та, по которой вы хотите продавать товар.\n\nУказывается в рублях.\n\nЧисло должно быть целым.\n",
            "format" : "int64",
            "minimum" : 1,
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "RejectedPromoOfferUpdateReasonType" : {
        "description" : "Причина отклонения изменения:\n\n* `OFFER_DOES_NOT_EXIST` — в кабинете нет товара с таким SKU.\n\n* `OFFER_DUPLICATION` — один и тот же товар передан несколько раз.\n\n* `OFFER_NOT_ELIGIBLE_FOR_PROMO` — товар не подходит под условия акции.\n\n* `OFFER_PROMOS_MAX_BYTE_SIZE_EXCEEDED` — товар не добавлен в акцию по техническим причинам.\n\n* `DEADLINE_FOR_FOCUS_PROMOS_EXCEEDED` — истек срок добавления товаров в акцию.\n\n* `EMPTY_OLD_PRICE` — не указана зачеркнутая цена.\n\n* `EMPTY_PROMO_PRICE` — не указана цена по акции.\n\n* `MAX_PROMO_PRICE_EXCEEDED` — цена по акции превышает максимально возможную цену для участия в акции.\n\n* `PROMO_PRICE_BIGGER_THAN_MAX` — цена по акции больше 95% от зачеркнутой цены.\n\n* `PROMO_PRICE_SMALLER_THAN_MIN` — цена по акции меньше 1% от зачеркнутой цены.\n",
        "enum" : [ "OFFER_DOES_NOT_EXIST", "OFFER_DUPLICATION", "OFFER_NOT_ELIGIBLE_FOR_PROMO", "OFFER_PROMOS_MAX_BYTE_SIZE_EXCEEDED", "DEADLINE_FOR_FOCUS_PROMOS_EXCEEDED", "EMPTY_OLD_PRICE", "EMPTY_PROMO_PRICE", "MAX_PROMO_PRICE_EXCEEDED", "PROMO_PRICE_BIGGER_THAN_MAX", "PROMO_PRICE_SMALLER_THAN_MIN" ],
        "type" : "string"
      },
      "PromoOfferUpdateWarningDTO" : {
        "description" : "Предупреждение, которое появилось при добавлении товара в акцию или изменении его цен.",
        "example" : {
          "code" : "DEEP_DISCOUNT_OFFER",
          "campaignIds" : [ 0, 0 ]
        },
        "properties" : {
          "code" : {
            "$ref" : "#/components/schemas/PromoOfferUpdateWarningCodeType"
          },
          "campaignIds" : {
            "description" : "Идентификаторы магазинов в кабинете, для которых получены предупреждения.\n\nНе возвращается, если предупреждения действуют для всех магазинов в кабинете.\n",
            "items" : {
              "description" : "Идентификатор магазина.",
              "format" : "int64",
              "type" : "integer"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "required" : [ "code" ],
        "type" : "object"
      },
      "RejectedPromoOfferDeleteReasonType" : {
        "description" : "Описание ошибки:\n\n* `OFFER_DOES_NOT_EXIST` — в кабинете нет товара с таким SKU.\n",
        "enum" : [ "OFFER_DOES_NOT_EXIST" ],
        "type" : "string"
      },
      "CampaignSettingsScheduleDTO" : {
        "description" : "Расписание работы службы доставки в своем регионе.",
        "example" : {
          "customWorkingDays" : [ "23-09-2022", "23-09-2022" ],
          "period" : {
            "fromDate" : "23-09-2022",
            "toDate" : "23-09-2022"
          },
          "customHolidays" : [ "23-09-2022", "23-09-2022" ],
          "weeklyHolidays" : [ 1, 1 ],
          "availableOnHolidays" : true,
          "totalHolidays" : [ "23-09-2022", "23-09-2022" ]
        },
        "properties" : {
          "availableOnHolidays" : {
            "description" : "Признак работы службы доставки в государственные праздники.\nВозможные значения.\n* `false` — служба доставки не работает в праздничные дни.\n* `true` — служба доставки работает в праздничные дни.\n",
            "type" : "boolean"
          },
          "customHolidays" : {
            "description" : "Список дней, в которые служба доставки не работает. Дни магазин указал в кабинете продавца на Маркете.",
            "items" : {
              "$ref" : "#/components/schemas/DateDdMmYyyy"
            },
            "type" : "array"
          },
          "customWorkingDays" : {
            "description" : "Список выходных и праздничных дней, в которые служба доставки работает. Дни магазин указал в кабинете продавца на Маркете.",
            "items" : {
              "$ref" : "#/components/schemas/DateDdMmYyyy"
            },
            "type" : "array"
          },
          "period" : {
            "$ref" : "#/components/schemas/CampaignSettingsTimePeriodDTO"
          },
          "totalHolidays" : {
            "description" : "Итоговый список нерабочих дней службы доставки. Список рассчитывается с учетом выходных, нерабочих дней и государственных праздников. Информацию по ним магазин указывает в кабинете продавца на Маркете.",
            "items" : {
              "$ref" : "#/components/schemas/DateDdMmYyyy"
            },
            "type" : "array"
          },
          "weeklyHolidays" : {
            "description" : "Список выходных дней недели и государственных праздников.",
            "items" : {
              "description" : "Номер дня недели.\nВозможные значения:\n* `1` — понедельник.\n* `2` — вторник.\n* `3` — среда.\n* `4` — четверг.\n* `5` — пятница.\n* `6` — суббота.\n* `7` — воскресенье.\n\nДля формата JSON выводится номер дня в виде числа.\n",
              "format" : "int32",
              "maximum" : 7,
              "minimum" : 1,
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "required" : [ "customHolidays", "customWorkingDays", "totalHolidays", "weeklyHolidays" ],
        "type" : "object"
      },
      "OrderPromoType" : {
        "description" : "Тип скидки:\n\n* `DIRECT_DISCOUNT` — прямая скидка, которую устанавливает продавец или Маркет.\n\n* `BLUE_SET` — комплекты.\n\n* `BLUE_FLASH` — флеш-акция.\n\n* `MARKET_COUPON` — скидка по промокоду Маркета.\n\n* `MARKET_PROMOCODE` — скидка по промокоду магазина.\n\n* `MARKET_BLUE` — скидка на Маркете.\n\n* `YANDEX_PLUS` — бесплатная доставка с подпиской Яндекс Плюс.\n\n* `YANDEX_EMPLOYEE` — бесплатная доставка по определенным адресам.\n\n* `LIMITED_FREE_DELIVERY_PROMO` — бесплатная доставка по ограниченному предложению.\n\n* `FREE_DELIVERY_THRESHOLD` — бесплатная доставка при достижении определенной суммы заказа.\n\n* `MULTICART_DISCOUNT` — скидка за то, что оформлена мультикорзина.\n\n* `FREE_DELIVERY_FOR_LDI` — бесплатная доставка за то, что один из товаров крупногабаритный.\n\n* `FREE_DELIVERY_FOR_LSC` — бесплатная доставка за то, что одна из корзин в мультикорзине крупногабаритная.\n\n* `FREE_PICKUP` — бесплатная доставка в пункт выдачи заказов.\n\n* `CHEAPEST_AS_GIFT` — самый дешевый товар в подарок.\n\n* `CASHBACK` — кешбэк.\n\n* `SUPPLIER_MULTICART_DISCOUNT` — скидка за доставку.\n\n* `SPREAD_DISCOUNT_COUNT` — скидка за количество одинаковых товаров.\n\n* `SPREAD_DISCOUNT_RECEIPT` — скидка от суммы чека.\n\n* `ANNOUNCEMENT_PROMO` — информационная акция, скидка не применяется к товарам.\n\n* `DISCOUNT_BY_PAYMENT_TYPE` — прямая скидка при оплате картой Плюса.\n\n* `PERCENT_DISCOUNT` — прямая скидка в процентах.\n\n* `DCO_EXTRA_DISCOUNT` — дополнительная скидка, необходимая для расчета субсидии от Маркета.\n\n* `EMPTY_PROMO` — скрытые промокоды.\n\n* `BLOCKING_PROMO` — блокирующее промо.\n\n* `UNKNOWN` — неизвестный тип.\n\nУстаревшие типы:\n\n* `GENERIC_BUNDLE`.\n\n* `MARKET_DEAL`.\n\n* `MARKET_PRIME`.\n\n* `MARKET_COIN`.\n\n* `BERU_PLUS`.\n\n* `PRICE_DROP_AS_YOU_SHOP`.\n\n* `SECRET_SALE`.\n",
        "enum" : [ "DIRECT_DISCOUNT", "BLUE_SET", "BLUE_FLASH", "GENERIC_BUNDLE", "MARKET_COUPON", "MARKET_PROMOCODE", "MARKET_DEAL", "MARKET_BLUE", "MARKET_PRIME", "YANDEX_PLUS", "BERU_PLUS", "MARKET_COIN", "YANDEX_EMPLOYEE", "LIMITED_FREE_DELIVERY_PROMO", "FREE_DELIVERY_THRESHOLD", "MULTICART_DISCOUNT", "PRICE_DROP_AS_YOU_SHOP", "FREE_DELIVERY_FOR_LDI", "FREE_DELIVERY_FOR_LSC", "SECRET_SALE", "FREE_PICKUP", "CHEAPEST_AS_GIFT", "CASHBACK", "SUPPLIER_MULTICART_DISCOUNT", "SPREAD_DISCOUNT_COUNT", "SPREAD_DISCOUNT_RECEIPT", "ANNOUNCEMENT_PROMO", "DISCOUNT_BY_PAYMENT_TYPE", "PERCENT_DISCOUNT", "DCO_EXTRA_DISCOUNT", "EMPTY_PROMO", "BLOCKING_PROMO", "UNKNOWN" ],
        "type" : "string"
      },
      "OrderItemStatusType" : {
        "description" : "Возвращенный или невыкупленный товар:\n\n* `REJECTED` — невыкупленный.\n\n* `RETURNED` — возвращенный.\n",
        "enum" : [ "REJECTED", "RETURNED" ],
        "type" : "string"
      },
      "OrderItemSubsidyType" : {
        "description" : "Тип субсидии:\n\n* `YANDEX_CASHBACK` — скидка по подписке Яндекс Плюс.\n\n* `SUBSIDY` — скидка Маркета (по акциям, промокодам, купонам и т. д.).\n",
        "enum" : [ "YANDEX_CASHBACK", "SUBSIDY" ],
        "type" : "string"
      },
      "GpsDTO" : {
        "description" : "GPS-координаты широты и долготы.\n",
        "example" : {
          "latitude" : 9.965781217890562,
          "longitude" : 9.369310271410669
        },
        "properties" : {
          "latitude" : {
            "description" : "Широта.",
            "format" : "decimal",
            "type" : "number"
          },
          "longitude" : {
            "description" : "Долгота.",
            "format" : "decimal",
            "type" : "number"
          }
        },
        "required" : [ "latitude", "longitude" ],
        "type" : "object"
      },
      "OrderParcelBoxDTO" : {
        "description" : "Информация о грузоместе.",
        "example" : {
          "fulfilmentId" : "fulfilmentId",
          "id" : 3
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор грузоместа.",
            "format" : "int64",
            "type" : "integer"
          },
          "fulfilmentId" : {
            "description" : "Идентификатор грузового места в информационной системе магазина.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ReturnDecisionReasonType" : {
        "description" : "Причины возврата:\n\n* `BAD_QUALITY` — бракованный товар (есть недостатки).\n\n* `DO_NOT_FIT` — товар не подошел.\n\n* `WRONG_ITEM` — привезли не тот товар.\n\n* `DAMAGE_DELIVERY` — товар поврежден при доставке.\n\n* `LOYALTY_FAIL` — невозможно установить виновного в браке/пересорте.\n\n* `CONTENT_FAIL` — ошибочное описание товара по вине Маркета.\n\n* `UNKNOWN` — причина не известна.\n",
        "enum" : [ "BAD_QUALITY", "DOES_NOT_FIT", "WRONG_ITEM", "DAMAGE_DELIVERY", "LOYALTY_FAIL", "CONTENT_FAIL", "UNKNOWN" ],
        "type" : "string"
      },
      "ReturnDecisionSubreasonType" : {
        "description" : "Детали причин возврата:\n  * `DO_NOT_FIT`:\n    * `USER_DID_NOT_LIKE` — товар не понравился.\n    * `USER_CHANGED_MIND` — передумал покупать.\n    * `DELIVERED_TOO_LONG` — длительный срок доставки, поэтому передумал.\n\n  * `BAD_QUALITY`:\n    * `BAD_PACKAGE` — упаковка товара была нарушена.\n    * `DAMAGED` — царапины, сколы.\n    * `NOT_WORKING` — не включается / не работает.\n    * `INCOMPLETENESS` — некомплект (не хватает детали в наборе, к товару).\n\n  * `WRONG_ITEM`:\n    * `WRONG_ITEM` — не тот товар.\n    * `WRONG_COLOR` — не соответствует по цвету.\n    * `DID_NOT_MATCH_DESCRIPTION` — не соответствует заявленным характеристикам/описанию.\n",
        "enum" : [ "USER_DID_NOT_LIKE", "USER_CHANGED_MIND", "DELIVERED_TOO_LONG", "BAD_PACKAGE", "DAMAGED", "NOT_WORKING", "INCOMPLETENESS", "WRONG_ITEM", "WRONG_COLOR", "DID_NOT_MATCH_DESCRIPTION", "UNKNOWN" ],
        "type" : "string"
      },
      "ReturnDecisionType" : {
        "description" : "Решение по возврату:\n\n* `REFUND_MONEY` — вернуть деньги покупателю.\n\n* `REFUND_MONEY_INCLUDING_SHIPMENT` — вернуть деньги за товар и пересылку.\n\n* `REPAIR` — отремонтировать товар.\n\n* `REPLACE` — заменить товар.\n\n* `SEND_TO_EXAMINATION` — взять товар на экспертизу.\n\n* `DECLINE_REFUND` — отказать в возврате.\n\n* `OTHER_DECISION` — другое решение.\n",
        "enum" : [ "REFUND_MONEY", "REFUND_MONEY_INCLUDING_SHIPMENT", "REPAIR", "REPLACE", "SEND_TO_EXAMINATION", "DECLINE_REFUND", "OTHER_DECISION", "UNKNOWN" ],
        "type" : "string"
      },
      "ReturnInstanceStockType" : {
        "description" : "Тип остатка на складе.",
        "enum" : [ "FIT", "DEFECT", "ANOMALY", "SURPLUS", "EXPIRED", "MISGRADING", "UNDEFINED", "INCORRECT_IMEI", "INCORRECT_SERIAL_NUMBER", "INCORRECT_CIS", "PART_MISSING", "NON_COMPLIENT", "NOT_ACCEPTABLE", "SERVICE", "MARKDOWN", "DEMO", "REPAIR", "FIRMWARE", "UNKNOWN" ],
        "type" : "string"
      },
      "ReturnInstanceStatusType" : {
        "description" : "Логистический статус конкретного товара.",
        "enum" : [ "CREATED", "RECEIVED", "IN_TRANSIT", "READY_FOR_PICKUP", "PICKED", "RECEIVED_ON_FULFILLMENT", "CANCELLED", "LOST", "UTILIZED", "PREPARED_FOR_UTILIZATION", "EXPROPRIATED", "NOT_IN_DEMAND" ],
        "type" : "string"
      },
      "GetPriceDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePriceDTO"
        }, {
          "$ref" : "#/components/schemas/UpdateTimeDTO"
        } ],
        "description" : "Цена с указанием времени последнего обновления.",
        "example" : {
          "currencyId" : null,
          "value" : 0.7061401241503109,
          "updatedAt" : "2000-01-23T04:56:07.000+00:00"
        },
        "type" : "object"
      },
      "OfferCampaignStatusDTO" : {
        "description" : "Статус товара в магазине.",
        "example" : {
          "campaignId" : 9,
          "status" : "PUBLISHED"
        },
        "properties" : {
          "campaignId" : {
            "description" : "Идентификатор кампании.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "status" : {
            "$ref" : "#/components/schemas/OfferCampaignStatusType"
          }
        },
        "required" : [ "campaignId", "status" ],
        "type" : "object"
      },
      "OfferSellingProgramDTO" : {
        "description" : "Информация о том, по каким моделям можно продавать товар, а по каким нельзя.",
        "example" : {
          "sellingProgram" : "FBY",
          "status" : "FINE"
        },
        "properties" : {
          "sellingProgram" : {
            "$ref" : "#/components/schemas/SellingProgramType"
          },
          "status" : {
            "$ref" : "#/components/schemas/OfferSellingProgramStatusType"
          }
        },
        "required" : [ "sellingProgram", "status" ],
        "type" : "object"
      },
      "PartnerMarketCategoryId" : {
        "description" : "Идентификатор категории на Маркете, к которой вы относите свой товар.\n\nЕсли не указать `marketCategoryId`, то маркетная категория будет определена автоматически.\n\nПри изменении информации о товаре передавайте тот же идентификатор категории. Если вы укажете другой, категория товара не поменяется. Изменить ее можно только в кабинете продавца на Маркете.\n\nСписок категорий Маркета можно получить с помощью запроса  [POST categories/tree](../../reference/categories/getCategoriesTree.md).\n",
        "format" : "int64",
        "type" : "integer"
      },
      "OfferManualDTO" : {
        "description" : "Инструкция по использованию товара.\n",
        "example" : {
          "title" : "title",
          "url" : "url"
        },
        "properties" : {
          "url" : {
            "description" : "Ссылка на инструкцию.",
            "type" : "string"
          },
          "title" : {
            "description" : "Название инструкции, которое будет отображаться на карточке товара.\n",
            "type" : "string"
          }
        },
        "required" : [ "url" ],
        "type" : "object"
      },
      "OfferConditionDTO" : {
        "description" : "Состояние уцененного товара.\n",
        "example" : {
          "reason" : "reason",
          "type" : "PREOWNED",
          "quality" : "PERFECT"
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/OfferConditionType"
          },
          "quality" : {
            "$ref" : "#/components/schemas/OfferConditionQualityType"
          },
          "reason" : {
            "description" : "Описание товара. Подробно опишите дефекты, насколько они заметны и где их искать.\n",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "OfferType" : {
        "description" : "Особый тип товара:\n\n* `MEDICINE` — лекарства.\n* `BOOK` — бумажные и электронные книги.\n* `AUDIOBOOK` — аудиокниги.\n* `ARTIST_TITLE` — музыкальная и видеопродукция.\n* `ON_DEMAND` — товары на заказ.\n\n{% note info \"Если ваш товар — книга\" %}\n\nУкажите год издания в характеристиках товара. [Подробнее о параметре](../../reference/business-assortment/updateOfferMappings.md#offerparamdto)\n\n{% endnote %}\n",
        "enum" : [ "DEFAULT", "MEDICINE", "BOOK", "AUDIOBOOK", "ARTIST_TITLE", "ON_DEMAND" ],
        "type" : "string"
      },
      "AgeDTO" : {
        "description" : "Возраст в заданных единицах измерения.",
        "example" : {
          "ageUnit" : "YEAR",
          "value" : 0.5962133916683182
        },
        "properties" : {
          "value" : {
            "description" : "Значение.\n",
            "minimum" : 0,
            "type" : "number"
          },
          "ageUnit" : {
            "$ref" : "#/components/schemas/AgeUnitType"
          }
        },
        "required" : [ "ageUnit", "value" ],
        "type" : "object"
      },
      "OfferParamDTO" : {
        "description" : "Параметры товара.\n\nЕсли у товара несколько значений одного параметра, передайте их с одним и тем же `name`, но разными `value`.\n\n{% cut \"Пример\" %}\n\n```json\n\"params\": [\n  {\n    \"name\": \"Цвет\",\n    \"value\": \"Зеленый\"\n  },\n  {\n    \"name\": \"Цвет\",\n    \"value\": \"Желтый\"\n  }\n]\n```\n\n{% endcut %}\n",
        "example" : {
          "name" : "Wi-Fi",
          "value" : "есть"
        },
        "properties" : {
          "name" : {
            "description" : "Название.\n\nДолжно совпадать с названием характеристики на Маркете. Узнать его можно из Excel-шаблона категории или через запрос [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).\n",
            "example" : "Wi-Fi",
            "type" : "string"
          },
          "value" : {
            "description" : "Значение.\n",
            "example" : "есть",
            "type" : "string"
          }
        },
        "required" : [ "name", "value" ],
        "type" : "object"
      },
      "OfferProcessingNoteDTO" : {
        "description" : "Причины, по которым товар не прошел модерацию.",
        "example" : {
          "payload" : "payload",
          "type" : "ASSORTMENT"
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/OfferProcessingNoteType"
          },
          "payload" : {
            "description" : "Дополнительная информация о причине отклонения товара.\n",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TimeUnitType" : {
        "description" : "Единица измерения времени:\n\n* `HOUR` — час.\n* `DAY` — сутки.\n* `WEEK` — неделя.\n* `MONTH` — месяц.\n* `YEAR` — год.\n",
        "enum" : [ "HOUR", "DAY", "WEEK", "MONTH", "YEAR" ],
        "type" : "string"
      },
      "PriceSuggestType" : {
        "description" : "Тип цены:\n\n* `BUYBOX` — самая низкая цена на товар, по которой он продается сейчас. Эта цена обновляется в режиме реального времени. Если вы установите цену ниже, начнет показываться ваше предложение. Если для этого значения в параметре `price` указана цена, которая совпадает с вашей, значит, ваш товар уже показывается на витрине. Если кроме вас этот товар продают другие продавцы по такой же цене, их предложения также будут отображаться вместе с вашими по очереди.\n* `DEFAULT_OFFER` — рекомендованная Маркетом цена, которая привлекает покупателей. Рассчитывается только для популярных на сервисе товаров и обновляется раз в четыре часа.\n* `MIN_PRICE_MARKET` — минимальная цена на Маркете. Самая низкая цена среди всех предложений товара на Маркете во всех регионах, включая те, которые не видны на витрине. Эта цена обновляется в режиме реального времени и обеспечивает большее количество показов на Маркете, чем самая низкая или рекомендованная цена.\n",
        "enum" : [ "BUYBOX", "DEFAULT_OFFER", "MIN_PRICE_MARKET" ],
        "type" : "string"
      },
      "PriceQuarantineVerdictType" : {
        "description" : "Типы карантина:\n\n* `PRICE_CHANGE` — новая цена слишком сильно отличается от прежней. В поле `params` будет  новая цена `CURRENT_PRICE` и последняя цена до попадания в карантин `LAST_VALID_PRICE`.\n* `LOW_PRICE` — установленная цена слишком сильно отличается от рыночной. В поле `params` будет установленная вами цена `CURRENT_PRICE` и порог попадания в карантин `MIN_PRICE`.\n* `LOW_PRICE_PROMO` — цена после применения акций слишком сильно отличается от рыночной. В поле `params` будет цена после применения акций `CURRENT_PRICE` и порог попадания в карантин `MIN_PRICE`.\n",
        "enum" : [ "PRICE_CHANGE", "LOW_PRICE", "LOW_PRICE_PROMO" ],
        "type" : "string"
      },
      "PriceQuarantineVerdictParameterDTO" : {
        "description" : "Параметр карантина.",
        "example" : {
          "name" : "CURRENT_PRICE",
          "value" : "value"
        },
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/PriceQuarantineVerdictParamNameType"
          },
          "value" : {
            "description" : "Значение параметра.",
            "type" : "string"
          }
        },
        "required" : [ "name", "value" ],
        "type" : "object"
      },
      "TurnoverDTO" : {
        "description" : "Информация об оборачиваемости товара.",
        "example" : {
          "turnoverDays" : 6.027456183070403,
          "turnover" : "LOW"
        },
        "properties" : {
          "turnover" : {
            "$ref" : "#/components/schemas/TurnoverType"
          },
          "turnoverDays" : {
            "description" : "Значение в днях. [Что это за число?](https://yandex.ru/support/marketplace/analytics/turnover.html)",
            "format" : "double",
            "type" : "number"
          }
        },
        "required" : [ "turnover" ],
        "type" : "object"
      },
      "WarehouseStockDTO" : {
        "description" : "Информация об остатках товара.",
        "example" : {
          "count" : 1,
          "type" : "FIT"
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/WarehouseStockType"
          },
          "count" : {
            "description" : "Значение остатков.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "count", "type" ],
        "type" : "object"
      },
      "OrdersStatsPriceDTO" : {
        "description" : "Цена или скидки на товар.",
        "example" : {
          "total" : 2.3021358869347655,
          "costPerItem" : 5.637376656633329,
          "type" : "BUYER"
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/OrdersStatsPriceType"
          },
          "costPerItem" : {
            "description" : "Цена или скидка на единицу товара в заказе.\nУказана в рублях.\nТочность — два знака после запятой.\n",
            "type" : "number"
          },
          "total" : {
            "description" : "Суммарная цена или скидка на все единицы товара в заказе.\nУказана в рублях.\nТочность — два знака после запятой.\n",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "OrdersStatsWarehouseDTO" : {
        "description" : "Информация о складе, на котором хранится товар.",
        "example" : {
          "name" : "name",
          "id" : 7
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор склада.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Название склада.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "OrdersStatsDetailsDTO" : {
        "description" : "Информация об удалении товара из заказа.",
        "example" : {
          "updateDate" : "2000-01-23",
          "stockType" : "FIT",
          "itemStatus" : "REJECTED",
          "itemCount" : 9
        },
        "properties" : {
          "itemStatus" : {
            "$ref" : "#/components/schemas/OrdersStatsItemStatusType"
          },
          "itemCount" : {
            "description" : "Количество товара со статусом, указанном в параметре `itemStatus`.",
            "format" : "int64",
            "type" : "integer"
          },
          "updateDate" : {
            "description" : "Дата, когда товар получил статус, указанный в параметре `itemStatus`.\n\nФормат даты: `ГГГГ-ММ-ДД`.\n",
            "format" : "date",
            "type" : "string"
          },
          "stockType" : {
            "$ref" : "#/components/schemas/OrdersStatsStockType"
          }
        },
        "type" : "object"
      },
      "OrdersStatsPaymentType" : {
        "description" : "Тип денежного перевода:\n- `PAYMENT` — оплата.\n- `REFUND` — возврат.\n",
        "enum" : [ "PAYMENT", "REFUND", "UNKNOWN" ],
        "type" : "string"
      },
      "OrdersStatsPaymentSourceType" : {
        "description" : "Способ денежного перевода:\n- `BUYER` — оплата или возврат деньгами.\n- `CASHBACK` — оплата или возврат баллами Плюса.\n- `MARKETPLACE` — оплата или возврат купонами.\n- `SPLIT` — оплата картой по частям (Сплит).\n",
        "enum" : [ "BUYER", "CASHBACK", "MARKETPLACE", "SPLIT" ],
        "type" : "string"
      },
      "OrdersStatsPaymentOrderDTO" : {
        "description" : "Информация о платежном получении.",
        "example" : {
          "date" : "2000-01-23",
          "id" : "id"
        },
        "properties" : {
          "id" : {
            "description" : "Номер платежного поручения.",
            "type" : "string"
          },
          "date" : {
            "description" : "Дата платежного поручения.\n\nФормат даты: `ГГГГ‑ММ‑ДД`.\n",
            "format" : "date",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "OrdersStatsCommissionType" : {
        "description" : "Услуга:\n\n* `FEE` — размещение товара на Маркете.\n* `FULFILLMENT` — складская обработка. Не возвращается с 1 января 2024 года.\n* `LOYALTY_PARTICIPATION_FEE` — участие в программе лояльности и отзывы за баллы.\n* `AUCTION_PROMOTION` — буст продаж с оплатой за продажи.\n* `INSTALLMENT` — рассрочка. Не возвращается с 24 февраля 2022 года.\n* `DELIVERY_TO_CUSTOMER` — доставка покупателю (FBY, FBS). Для DBS и Экспресс — если заказ возвращается через логистику Маркета.\n* `EXPRESS_DELIVERY_TO_CUSTOMER` — экспресс-доставка покупателю (Экспресс).\n* `AGENCY` — прием платежа покупателя.\n* `PAYMENT_TRANSFER` — перевод платежа покупателя.\n* `RETURNED_ORDERS_STORAGE` — хранение невыкупов и возвратов (FBS). Для DBS и Экспресс — если заказ возвращается через логистику Маркета.\n* `SORTING` — обработка заказа (FBS).\n* `INTAKE_SORTING` — организация забора заказов со склада продавца (FBS).\n* `RETURN_PROCESSING` — обработка заказов на складе (FBS). Для DBS и Экспресс — если заказ возвращается через логистику Маркета.\n* `ILLIQUID_GOODS_SALE` — вознаграждение за продажу невывезенных товаров.\n",
        "enum" : [ "FEE", "FULFILLMENT", "LOYALTY_PARTICIPATION_FEE", "AUCTION_PROMOTION", "INSTALLMENT", "DELIVERY_TO_CUSTOMER", "EXPRESS_DELIVERY_TO_CUSTOMER", "AGENCY", "PAYMENT_TRANSFER", "RETURNED_ORDERS_STORAGE", "SORTING", "INTAKE_SORTING", "RETURN_PROCESSING", "ILLIQUID_GOODS_SALE" ],
        "type" : "string"
      },
      "TariffType" : {
        "description" : "Услуга Маркета или дополнительный тариф к услуге размещения:\n\n* `AGENCY_COMMISSION` — прием платежа покупателя.\n\n* `PAYMENT_TRANSFER` — перевод платежа покупателя.\n\n* `STORAGE` — хранение товара на складе Маркета в течение суток.\n\n* `SURPLUS` — хранение излишков на складе Маркета.\n\n* `WITHDRAW` — вывоз товара со склада Маркета.\n\n* `FEE` — размещение товара на Маркете.\n\n* `DELIVERY_TO_CUSTOMER` — доставка покупателю.\n\n* `CROSSREGIONAL_DELIVERY` — доставка в федеральный округ, город или населенный пункт.\n\n* `CROSSREGIONAL_DELIVERY_RETURN` — доставка невыкупов и возвратов.\n\n* `DISPOSAL` — утилизация.\n\n* `SORTING_CENTER_STORAGE` — хранение невыкупов и возвратов.\n\n* `EXPRESS_DELIVERY` — экспресс-доставка покупателю.\n\n* `FF_XDOC_SUPPLY_BOX` — поставка товара через транзитный склад (за короб).\n\n* `FF_XDOC_SUPPLY_PALLET` — поставка товара через транзитный склад (за палету).\n\n* `SORTING` — обработка заказа.\n\n* `MIDDLE_MILE` — средняя миля.\n\n* `RETURN_PROCESSING` — обработка невыкупов и возвратов.\n\n* `EXPRESS_CANCELLED_BY_PARTNER` — отмена заказа с экспресс-доставкой.\n\n* `DELIVERY_TO_CUSTOMER_RETURN` — возврат доставляемого товара на склад.\n\n* `CROSSBORDER_DELIVERY` — доставка из-за рубежа.\n\n* `INTAKE_SORTING_BULKY_CARGO` — сортировка заказов с крупногабаритными товарами, которые Маркет забрал со склада продавца.\n\n* `INTAKE_SORTING_SMALL_GOODS` — сортировка заказов с малогабаритными товарами, которые Маркет забрал со склада продавца.\n\n* `INTAKE_SORTING_DAILY` — организация забора заказов со склада продавца.\n\n* `FF_STORAGE_BILLING` — хранения товаров на складе.\n\n* `CANCELLED_ORDER_FEE_QI` — отмена заказа по вине продавца.\n\n* `LATE_ORDER_EXECUTION_FEE_QI` — несвоевременная отгрузка или доставка.\n\nПодробнее об услугах Маркета читайте [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/introduction/rates/index.html).\n",
        "enum" : [ "AGENCY_COMMISSION", "PAYMENT_TRANSFER", "STORAGE", "WITHDRAW", "SURPLUS", "FEE", "DELIVERY_TO_CUSTOMER", "CROSSREGIONAL_DELIVERY", "CROSSREGIONAL_DELIVERY_RETURN", "DISPOSAL", "SORTING_CENTER_STORAGE", "EXPRESS_DELIVERY", "FF_XDOC_SUPPLY_BOX", "FF_XDOC_SUPPLY_PALLET", "SORTING", "MIDDLE_MILE", "RETURN_PROCESSING", "EXPRESS_CANCELLED_BY_PARTNER", "DELIVERY_TO_CUSTOMER_RETURN", "CROSSBORDER_DELIVERY", "INTAKE_SORTING_BULKY_CARGO", "INTAKE_SORTING_SMALL_GOODS", "INTAKE_SORTING_DAILY", "FF_STORAGE_BILLING", "CANCELLED_ORDER_FEE_QI", "LATE_ORDER_EXECUTION_FEE_QI" ],
        "type" : "string"
      },
      "TariffParameterDTO" : {
        "description" : "Детали расчета конкретной услуги Маркета.",
        "example" : {
          "name" : "name",
          "value" : "value"
        },
        "properties" : {
          "name" : {
            "description" : "Название параметра.",
            "type" : "string"
          },
          "value" : {
            "description" : "Значение параметра.",
            "type" : "string"
          }
        },
        "required" : [ "name", "value" ],
        "type" : "object"
      },
      "FeedbackCommentAuthorDTO" : {
        "description" : "Информация об авторе комментария.",
        "example" : {
          "name" : "name",
          "type" : "USER"
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/FeedbackCommentAuthorType"
          },
          "name" : {
            "description" : "Имя автора отзыва или название магазина.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FeedbackFactorDTO" : {
        "description" : "Информация об оценках по параметрам, указанных в отзыве.\n\nПри создании отзыва автору предлагается поставить оценки магазину по нескольким параметрам: например, за скорость обработки заказа или удобство самовывоза. Набор параметров зависит от того, какой способ покупки (параметр `delivery`) указал автор.\n",
        "example" : {
          "description" : "description",
          "id" : 7,
          "title" : "title",
          "value" : 9
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор параметра.",
            "format" : "int64",
            "type" : "integer"
          },
          "title" : {
            "description" : "Название параметра. Например, `Скорость обработки заказа`.",
            "type" : "string"
          },
          "description" : {
            "description" : "Описание параметра. Например, `Как быстро с вами связались для подтверждения заказа?`.",
            "type" : "string"
          },
          "value" : {
            "description" : "Оценка по параметру, указанная в отзыве: от `1` (низшая оценка) до `5` (высшая оценка).\n",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "FeedbackDeliveryType" : {
        "description" : "Способ покупки, указанный в отзыве:\n\n* `DELIVERY` — доставка.\n* `PICKUP` — самовывоз.\n* `INSTORE` — в магазине.\n",
        "enum" : [ "DELIVERY", "PICKUP", "INSTORE" ],
        "type" : "string"
      },
      "UpdateTimeDTO" : {
        "description" : "Время последнего обновления.",
        "properties" : {
          "updatedAt" : {
            "description" : "Время последнего обновления.",
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "updatedAt" ],
        "type" : "object"
      },
      "PriceCompetitivenessThresholdsDTO" : {
        "description" : "Максимальные значения цены, при которых она является привлекательной или умеренной.",
        "example" : {
          "optimalPrice" : {
            "currencyId" : null,
            "value" : 0.9301444243932576
          },
          "averagePrice" : {
            "currencyId" : null,
            "value" : 0.9301444243932576
          }
        },
        "properties" : {
          "optimalPrice" : {
            "$ref" : "#/components/schemas/BasePriceDTO"
          },
          "averagePrice" : {
            "$ref" : "#/components/schemas/BasePriceDTO"
          }
        },
        "type" : "object"
      },
      "FeedContentErrorType" : {
        "description" : "Тип ошибки в содержимом прайс-листа.\n\nВозможные значения:\n\n* `PARSE_ERROR` — ошибка при проверке прайс-листа, не связанная с форматом YML. Например, прайс-лист пустой или его не удалось разархивировать.\n* `PARSE_XML_ERROR` — несоответствие техническим требованиям формата YML. Например, элементы и их значения описаны некорректно.\n* `TOO_MANY_REJECTED_OFFERS` — более чем в половине предложений из прайс-листа найдены ошибки. Все предложения из прайс-листа не будут опубликованы на Маркете.\n",
        "enum" : [ "PARSE_ERROR", "PARSE_XML_ERROR", "TOO_MANY_REJECTED_OFFERS" ],
        "type" : "string"
      },
      "FeedDownloadErrorType" : {
        "description" : "Тип ошибки загрузки прайс-листа.\n\nВозможные значения:\n\n* `DOWNLOAD_ERROR` — ошибка загрузки прайс-листа. Например, проблема с DNS-сервером или обрыв интернет-соединения.\n  Проблема описана в параметре `description`.\n\n* `DOWNLOAD_HTTP_ERROR` — Яндекс Маркет передал запрос на получение прайс-листа и получил в ответ HTTP-код, отличный от 2xx.\n\nHTTP-код выведен в параметре `httpStatusCode`.\n",
        "enum" : [ "DOWNLOAD_ERROR", "DOWNLOAD_HTTP_ERROR" ],
        "type" : "string"
      },
      "FeedIndexLogsErrorType" : {
        "description" : "Тип ошибки индексации прайс-листа.\n\nВозможные значения:\n\n* `DOWNLOAD_ERROR` — ошибка загрузки прайс-листа. Например, проблема с DNS-сервером или обрыв интернет-соединения.\n   Проблема описана в параметре `description`.\n\n* `DOWNLOAD_HTTP_ERROR` — Маркет передал запрос на получение прайс-листа и получил в ответ HTTP-код, отличный от 2xx.\n   HTTP-код выведен в параметре `httpStatusCode`.\n\n* `PARSE_ERROR` — ошибка при проверке прайс-листа, не связанная с форматом YML. Например, прайс-лист пустой или его не удалось разархивировать.\n\n* `PARSE_XML_ERROR` — несоответствие техническим требованиям формата YML. Например, элементы и их значения описаны некорректно.\n\n* `TOO_MANY_REJECTED_OFFERS` — более чем в половине предложений из прайс-листа найдены ошибки. Все предложения из прайс-листа не будут опубликованы на Маркете.\n",
        "enum" : [ "DOWNLOAD_ERROR", "DOWNLOAD_HTTP_ERROR", "PARSE_ERROR", "PARSE_XML_ERROR", "TOO_MANY_REJECTED_OFFERS", "NOT_INDEXED" ],
        "type" : "string"
      },
      "UnitDTO" : {
        "description" : "Единица измерения.",
        "example" : {
          "name" : "кг",
          "fullName" : "килограмм",
          "id" : 5
        },
        "properties" : {
          "id" : {
            "description" : "Идентификатор единицы измерения.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Сокращенное название единицы измерения.",
            "example" : "кг",
            "type" : "string"
          },
          "fullName" : {
            "description" : "Полное название единицы измерения.",
            "example" : "килограмм",
            "type" : "string"
          }
        },
        "required" : [ "fullName", "id", "name" ],
        "type" : "object"
      },
      "OptionValuesLimitedDTO" : {
        "description" : "Значение ограничивающей характеристики и список допустимых значений ограничиваемой характеристики.",
        "example" : {
          "limitingOptionValueId" : 2,
          "optionValueIds" : [ 4, 4 ]
        },
        "properties" : {
          "limitingOptionValueId" : {
            "description" : "Идентификатор значения ограничивающей характеристики.",
            "format" : "int64",
            "type" : "integer"
          },
          "optionValueIds" : {
            "description" : "Идентификаторы допустимых значений ограничиваемой характеристики.\n",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "required" : [ "limitingOptionValueId", "optionValueIds" ],
        "type" : "object"
      },
      "CalculatedTariffType" : {
        "description" : "Услуга Маркета:\n\n* `AGENCY_COMMISSION` — прием платежа покупателя.\n\n* `PAYMENT_TRANSFER` — перевод платежа покупателя.\n\n* `FEE` — размещение товара на Маркете.\n\n* `DELIVERY_TO_CUSTOMER` — доставка покупателю.\n\n* `CROSSREGIONAL_DELIVERY` — доставка в федеральный округ, город или населенный пункт.\n\n* `EXPRESS_DELIVERY` — экспресс-доставка покупателю.\n\n* `SORTING` — обработка заказа.\n\n* `MIDDLE_MILE` — средняя миля.\n\nПодробнее об услугах Маркета читайте [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/introduction/rates/index.html).\n",
        "enum" : [ "AGENCY_COMMISSION", "PAYMENT_TRANSFER", "FEE", "DELIVERY_TO_CUSTOMER", "CROSSREGIONAL_DELIVERY", "EXPRESS_DELIVERY", "SORTING", "MIDDLE_MILE" ],
        "type" : "string"
      },
      "QualityRatingComponentDTO" : {
        "description" : "Составляющая индекса качества.",
        "example" : {
          "componentType" : "DBS_CANCELLATION_RATE",
          "value" : 14.658129805029452
        },
        "properties" : {
          "value" : {
            "description" : "Значение составляющей в процентах.",
            "format" : "double",
            "maximum" : 100,
            "minimum" : 0,
            "type" : "number"
          },
          "componentType" : {
            "$ref" : "#/components/schemas/QualityRatingComponentType"
          }
        },
        "required" : [ "componentType", "value" ],
        "type" : "object"
      },
      "GetPromoPromocodeInfoDTO" : {
        "description" : "Информация для типа `MARKET_PROMOCODE`.\n\nПараметр заполняется только для этого типа акции.\n",
        "example" : {
          "promocode" : "promocode",
          "discount" : 1
        },
        "properties" : {
          "promocode" : {
            "description" : "Промокод.",
            "type" : "string"
          },
          "discount" : {
            "description" : "Процент скидки по промокоду.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [ "discount", "promocode" ],
        "type" : "object"
      },
      "PromoOfferDiscountParamsDTO" : {
        "description" : "Параметры товара в акции с типом `DIRECT_DISCOUNT` или `BLUE_FLASH`.",
        "example" : {
          "promoPrice" : 6,
          "maxPromoPrice" : 1,
          "price" : 0
        },
        "properties" : {
          "price" : {
            "description" : "Зачеркнутая цена — та, по которой товар продавался до акции.\n\nУказывается в рублях.\n\nВозвращается, только если товар участвует в акции.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "promoPrice" : {
            "description" : "Цена по акции — та, по которой вы хотите продавать товар.\n\nУказывается в рублях.\n\nВозвращается, только если товар участвует в акции.\n",
            "format" : "int64",
            "type" : "integer"
          },
          "maxPromoPrice" : {
            "description" : "Максимально возможная цена для участия в акции.\n\nУказывается в рублях.\n\nВозвращается для всех товаров.\n",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "maxPromoPrice" ],
        "type" : "object"
      },
      "PromoOfferPromocodeParamsDTO" : {
        "description" : "Параметры товара в акции с типом `MARKET_PROMOCODE`.",
        "example" : {
          "maxPrice" : 5
        },
        "properties" : {
          "maxPrice" : {
            "description" : "Максимально возможная цена для участия в акции до применения промокода.\n\nУказывается в рублях.\n\nВозвращается для всех товаров.\n",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "maxPrice" ],
        "type" : "object"
      },
      "PromoOfferUpdateWarningCodeType" : {
        "description" : "Предупреждение, которое появилось при добавлении товара:\n\n* `DEEP_DISCOUNT_OFFER` — большая разница с ценой в каталоге. Проверьте, нет ли ошибки.\n\n* `CATALOG_PRICE_IS_LOWER_THAN_PROMO` — [базовая цена](*basic-price) в кабинете ниже цены по акции. У товара в акции будет отображаться базовая цена.\n\n* `SHOP_PRICES_ARE_LOWER_THAN_PROMO` — цена в отдельном магазине ниже цены по акции. У товара в акции будет отображаться цена в магазине. Для остальных магазинов будет действовать цена по акции.\n\n* `PROMOCODE_PRICE_MORE_THAN_MAX_FAIR_PRICE` — в отдельном магазине цена с учетом промокода выше максимально возможной цены. Товар не будет участвовать в акции.\n\n* `SHOP_OFFER_NOT_ELIGIBLE_FOR_PROMO` — товар в отдельном магазине не подходит под условия акции.\n",
        "enum" : [ "DEEP_DISCOUNT_OFFER", "CATALOG_PRICE_IS_LOWER_THAN_PROMO", "SHOP_PRICES_ARE_LOWER_THAN_PROMO", "PROMOCODE_PRICE_MORE_THAN_MAX_FAIR_PRICE", "SHOP_OFFER_NOT_ELIGIBLE_FOR_PROMO" ],
        "type" : "string"
      },
      "CampaignSettingsTimePeriodDTO" : {
        "description" : "Период, за который рассчитывается итоговый список нерабочих дней службы доставки.",
        "example" : {
          "fromDate" : "23-09-2022",
          "toDate" : "23-09-2022"
        },
        "properties" : {
          "fromDate" : {
            "description" : "Формат даты: `ДД-ММ-ГГГГ`.\n",
            "example" : "23-09-2022",
            "format" : "date-dd-MM-yyyy",
            "type" : "string"
          },
          "toDate" : {
            "description" : "Формат даты: `ДД-ММ-ГГГГ`.\n",
            "example" : "23-09-2022",
            "format" : "date-dd-MM-yyyy",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "OfferSellingProgramStatusType" : {
        "description" : "Информация о доступности или недоступности.\n\n* `FINE` — доступно.\n* `REJECT` — недоступно.\n",
        "enum" : [ "FINE", "REJECT" ],
        "type" : "string"
      },
      "OfferConditionType" : {
        "description" : "Тип уценки:\n\n* `PREOWNED` —  бывший в употреблении товар, раньше принадлежал другому человеку.\n* `SHOWCASESAMPLE` — витринный образец.\n* `REFURBISHED` — повторная продажа товара.\n* `REDUCTION` — товар с дефектами.\n* `RENOVATED` — восстановленный товар.\n* `NOT_SPECIFIED` — не выбран.\n\n`REFURBISHED` — специальное значение для одежды, обуви и аксессуаров. Используется только для уцененных товаров из этой категории. Другие значения для одежды, обуви и аксессуаров не используются.\n",
        "enum" : [ "PREOWNED", "SHOWCASESAMPLE", "REFURBISHED", "REDUCTION", "RENOVATED", "NOT_SPECIFIED" ],
        "type" : "string"
      },
      "OfferConditionQualityType" : {
        "description" : "Внешний вид товара:\n\n* `PERFECT` — идеальный.\n* `EXCELLENT` — отличный.\n* `GOOD` — хороший.\n* `NOT_SPECIFIED` — не выбран.\n",
        "enum" : [ "PERFECT", "EXCELLENT", "GOOD", "NOT_SPECIFIED" ],
        "type" : "string"
      },
      "AgeUnitType" : {
        "description" : "Единицы измерения возраста:\n\n* `YEAR` — год.\n* `MONTH` — месяц.\n",
        "enum" : [ "YEAR", "MONTH" ],
        "type" : "string"
      },
      "OfferProcessingNoteType" : {
        "description" : "Тип причины, по которой товар не прошел модерацию:\n\n* `ASSORTMENT` — товар производится в разных вариантах. Каждый из них нужно описать как отдельный товар (входной параметр `offer-mapping-entry` запроса [POST campaigns/{campaignId}/offer-mapping-entries/updates](../../reference/offer-mappings/updateOfferMappingEntries.md) или строка в каталоге, если вы загружаете товары через кабинет продавца на Маркете).\n* `CANCELLED` — товар отозван с модерации по вашей инициативе.\n* `CONFLICTING_INFORMATION` _(ранее ошибочно `CONFLICTING`)_ — вы предоставили противоречивую информацию о товаре. Параметры, которые нужно исправить, указаны в параметре `payload`.\n* `DEPARTMENT_FROZEN` — правила размещения товаров в данной категории перерабатываются, поэтому товар пока не может пройти модерацию.\n* `INCORRECT_INFORMATION` — информация о товаре, которую вы предоставили, противоречит описанию от производителя. Параметры, которые нужно исправить, указаны в параметре `payload`.\n* `LEGAL_CONFLICT` — товар не прошел модерацию по юридическим причинам. Например, он официально не продается в России или у вас нет разрешения на его продажу.\n* `NEED_CLASSIFICATION_INFORMATION` — информации о товаре, которую вы предоставили, не хватает, чтобы отнести его к категории. Проверьте, что правильно указали название, категорию, производителя и страны производства товара, а также URL изображений или страниц с описанием, по которым можно идентифицировать товар.\n* `NEED_INFORMATION` — товар раньше не продавался в России и пока не размещается на Маркете. Для него можно создать карточку. Подробнее см. в разделе [Работа с карточкой товара](https://yandex.ru/support/marketplace/assortment/content/index.html) Справки Маркета для продавцов.\n* `NEED_PICTURES` — для идентификации товара нужны его изображения. Отправьте URL изображений товара в запросе [POST campaigns/{campaignId}/offer-mapping-entries/updates](../../reference/offer-mappings/updateOfferMappingEntries.md) или загрузите обновленный каталог через кабинет продавца на Маркете.\n* `NEED_VENDOR` — неверно указан производитель товара.\n* `NO_CATEGORY`, `NO_KNOWLEDGE` — товары из указанной категории пока не размещаются на Маркете. Если категория появится, товар будет снова отправлен на модерацию.\n* `NO_PARAMETERS_IN_SHOP_TITLE` — товар производится в разных вариантах, и из указанного названия непонятно, о каком идет речь. Параметры, которые нужно добавить в название товара, указаны в параметре `payload`.\n* `NO_SIZE_MEASURE` — для этого товара нужна размерная сетка. Отправьте ее в службу поддержки или вашему менеджеру. Требования к размерной сетке указаны в параметре `payload`.\n* `UNKNOWN` — товар не прошел модерацию по другой причине. Обратитесь в службу поддержки или к вашему менеджеру.\n",
        "enum" : [ "ASSORTMENT", "CANCELLED", "CONFLICTING_INFORMATION", "OTHER", "DEPARTMENT_FROZEN", "INCORRECT_INFORMATION", "LEGAL_CONFLICT", "NEED_CLASSIFICATION_INFORMATION", "NEED_INFORMATION", "NEED_PICTURES", "NEED_VENDOR", "NO_CATEGORY", "NO_KNOWLEDGE", "NO_PARAMETERS_IN_SHOP_TITLE", "NO_SIZE_MEASURE", "SAMPLE_LINE" ],
        "type" : "string"
      },
      "PriceQuarantineVerdictParamNameType" : {
        "description" : "Имя параметра причины скрытия товара по цене.\n\n* `CURRENT_PRICE` — цена, из-за которой товар попал в карантин.\n* `LAST_VALID_PRICE` — последняя цена до попадания в карантин (только для карантина типа `PRICE_CHANGE`).\n* `MIN_PRICE` — порог попадания в карантин (только для карантина типов `LOW_PRICE` и `LOW_PRICE_PROMO`).\n* `CURRENCY` — валюта.\n",
        "enum" : [ "CURRENT_PRICE", "LAST_VALID_PRICE", "MIN_PRICE", "CURRENCY" ],
        "type" : "string"
      },
      "TurnoverType" : {
        "description" : "Оценка оборачиваемости.\n\n|enum|Диапазон оборачиваемости|Комментарий|\n|-|-|-|\n|`LOW`|`turnoverDays` ≥ 120||\n|`ALMOST_LOW`|100 ≤ `turnoverDays` < 120||\n|`HIGH`|45 ≤ `turnoverDays` < 100||\n|`VERY_HIGH`|0 ≤ `turnoverDays` < 45||\n|`NO_SALES`|—|Продаж нет.|\n|`FREE_STORE`|Любое значение.|Товары этой категории сейчас хранятся бесплатно.|\n",
        "enum" : [ "LOW", "ALMOST_LOW", "HIGH", "VERY_HIGH", "NO_SALES", "FREE_STORE" ],
        "type" : "string"
      },
      "WarehouseStockType" : {
        "description" : "Тип остатков товаров на складе:\n\n* `AVAILABLE` (соответствует типу «Доступный к заказу» в отчете «Остатки на складе» в кабинете продавца на Маркете) — товар, доступный для продажи.\n\n* `DEFECT` (соответствует типу «Брак») — товар с браком.\n\n* `EXPIRED` (соответствует типу «Просрочен») — товар с истекшим сроком годности.\n\n* `FIT` (соответствует типу «Годный») — товар, который доступен для продажи или уже зарезервирован.\n\n* `FREEZE` — товар, который зарезервирован для заказов.\n\n* `QUARANTINE` (соответствует типу «Карантин») — товар, временно недоступный для продажи (например, товар перемещают из одного помещения склада в другое).\n\n* `UTILIZATION` — товар, который будет утилизирован.\n",
        "enum" : [ "FIT", "FREEZE", "AVAILABLE", "QUARANTINE", "UTILIZATION", "DEFECT", "EXPIRED" ],
        "type" : "string"
      },
      "OrdersStatsPriceType" : {
        "description" : "Тип скидки или цена на товар:\n- `BUYER` — цена на товар с учетом скидок, в том числе купонов.\n- `CASHBACK` — баллы Плюса.\n- `MARKETPLACE` — купоны.\n",
        "enum" : [ "BUYER", "CASHBACK", "MARKETPLACE" ],
        "type" : "string"
      },
      "OrdersStatsItemStatusType" : {
        "description" : "Статус товара:\n\n* `REJECTED` — товар был добавлен в созданный заказ, но не был оплачен.\n* `RETURNED` — товар вернули.\n",
        "enum" : [ "REJECTED", "RETURNED" ],
        "type" : "string"
      },
      "OrdersStatsStockType" : {
        "description" : "Тип товара:\n\n* `DEFECT` — товар бракованный.\n\n* `FIT` — товар надлежащего качества.\n",
        "enum" : [ "FIT", "FREEZE", "AVAILABLE", "QUARANTINE", "UTILIZATION", "DEFECT", "EXPIRED" ],
        "type" : "string"
      },
      "FeedbackCommentAuthorType" : {
        "description" : "Тип автора:\n\n* `USER` — пользователь.\n* `SHOP` — магазин.\n",
        "enum" : [ "USER", "SHOP" ],
        "type" : "string"
      },
      "QualityRatingComponentType" : {
        "description" : "Составляющие индекса качества.\n\n**Для модели DBS:**\n* `DBS_CANCELLATION_RATE` — доля отмененных товаров.\n* `DBS_LATE_DELIVERY_RATE` — доля заказов, доставленных после плановой даты.\n\n**Для моделей FBS и Экспресс:**\n* `FBS_CANCELLATION_RATE` — доля отмененных товаров.\n* `FBS_LATE_SHIP_RATE` — доля не вовремя отгруженных заказов.\n\n**Для модели FBY:**\n* `FBY_LATE_DELIVERY_RATE` — доля товаров, которые приехали на склад с опозданием.\n* `FBY_CANCELLATION_RATE` — доля отмененных или недоставленных товаров.\n* `FBY_DELIVERY_DIFF_RATE` — доля товаров, которые не прибыли вместе с поставкой или которые не приняли.\n* `FBY_LATE_EDITING_RATE` — доля товаров, которые поздно убрали из заявки.\n",
        "enum" : [ "DBS_CANCELLATION_RATE", "DBS_LATE_DELIVERY_RATE", "FBS_CANCELLATION_RATE", "FBS_LATE_SHIP_RATE", "FBY_LATE_DELIVERY_RATE", "FBY_CANCELLATION_RATE", "FBY_DELIVERY_DIFF_RATE", "FBY_LATE_EDITING_RATE" ],
        "type" : "string"
      }
    },
    "securitySchemes" : {
      "OAuth" : {
        "flows" : {
          "implicit" : {
            "authorizationUrl" : "https://oauth.yandex.ru/authorize",
            "scopes" : {
              "market:partner-api" : "API Яндекс.Маркета / Поиска по товарам для партнеров"
            }
          }
        },
        "type" : "oauth2"
      }
    }
  }
}