# 
# Партнерский API Маркета
# 
# 
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# 
# Version: LATEST
# 
# Generated by OpenAPI Generator: https://openapi-generator.tech

# package ympa_graphql_nodejs_express_server

# returns_api



input SetReturnDecisionInput {
    # Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    campaignId: Int!, 
    # Идентификатор заказа.
    orderId: Int!, 
    # Идентификатор возврата.
    returnId: Int!, 
    
    setReturnDecisionRequest: SetReturnDecisionRequestInput
}

input SubmitReturnDecisionInput {
    # Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    campaignId: Int!, 
    # Идентификатор заказа.
    orderId: Int!, 
    # Идентификатор возврата.
    returnId: Int!
}

type Mutation {
  # Принятие или изменение решения по возврату
  # Выбирает решение по возврату от покупателя. После этого для подтверждения решения нужно выполнить запрос [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit](../../reference/orders/submitReturnDecision.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
  # @param Int! campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  # @param Int! orderId Идентификатор заказа.
  # @param Int! returnId Идентификатор возврата.
  # @param SetReturnDecisionRequest setReturnDecisionRequest 
  # @return [EmptyApiResponse]
  SetReturnDecision(input: SetReturnDecisionInput!): EmptyApiResponse
  # Подтверждение решения по возврату
  # Подтверждает выбранное решение по возврату, отправленное в запросе [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision](../../reference/orders/setReturnDecision.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
  # @param Int! campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  # @param Int! orderId Идентификатор заказа.
  # @param Int! returnId Идентификатор возврата.
  # @return [EmptyApiResponse]
  SubmitReturnDecision(input: SubmitReturnDecisionInput!): EmptyApiResponse
}

type Query {
  # Информация о невыкупе или возврате
  # Получает информацию по одному невыкупу или возврату.  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
  # @param Int! campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  # @param Int! orderId Идентификатор заказа.
  # @param Int! returnId Идентификатор возврата.
  # @return [GetReturnResponse]
  GetReturn(campaignId: Int!, orderId: Int!, returnId: Int!): GetReturnResponse
  # Получение заявления на возврат
  # Загружает заявление покупателя на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
  # @param Int! campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  # @param Int! orderId Идентификатор заказа.
  # @param Int! returnId Идентификатор возврата.
  # @return [String!]
  GetReturnApplication(campaignId: Int!, orderId: Int!, returnId: Int!): String!
  # Получение фотографии возврата
  # Получает фотографии, которые покупатель приложил к заявлению на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
  # @param Int! campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  # @param Int! orderId Идентификатор заказа.
  # @param Int! returnId Идентификатор возврата.
  # @param Int! itemId Идентификатор товара в возврате.
  # @param String! imageHash Хеш ссылки изображения для загрузки.
  # @return [String!]
  GetReturnPhoto(campaignId: Int!, orderId: Int!, returnId: Int!, itemId: Int!, imageHash: String!): String!
  # Список невыкупов и возвратов
  # Получает список невыкупов и возвратов.  Чтобы получить информацию по одному возврату или невыкупу, выполните запрос [GET campaigns/{campaignId}/orders/{orderId}/returns/{returnId}](../../reference/orders/getReturn.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
  # @param Int! campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  # @param String! pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. 
  # @param Int! limit Количество значений на одной странице. 
  # @param Int! orderIds Идентификаторы заказов — для фильтрации результатов.  Несколько идентификаторов перечисляются через запятую без пробела. Максимальное количество идентификаторов — 50. 
  # @param RefundStatusType statuses Статусы возвратов или невыкупов — для фильтрации результатов.  Несколько статусов перечисляются через запятую. 
  # @param ReturnType Type_ Тип заказа для фильтрации:  * &#x60;RETURN&#x60; — возврат.  * &#x60;UNREDEEMED&#x60; — невыкуп.  Если не указывать, в ответе будут и возвраты, и невыкупы. 
  # @param String! fromDate Начальная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: &#x60;ГГГГ-ММ-ДД&#x60;. 
  # @param String! toDate Конечная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: &#x60;ГГГГ-ММ-ДД&#x60;. 
  # @param String! fromDate2 {% note warning \&quot;\&quot; %}  Этот параметр устарел. Вместо него используйте &#x60;fromDate&#x60;.  {% endnote %}  Начальная дата для фильтрации возвратов или невыкупов по дате обновления. 
  # @param String! toDate2 {% note warning \&quot;\&quot; %}  Этот параметр устарел. Вместо него используйте &#x60;toDate&#x60;.  {% endnote %}  Конечная дата для фильтрации возвратов или невыкупов по дате обновления. 
  # @return [GetReturnsResponse]
  GetReturns(campaignId: Int!, pageToken: String!, limit: Int!, orderIds: Int!, statuses: RefundStatusType, Type_: ReturnType, fromDate: String!, toDate: String!, fromDate2: String!, toDate2: String!): GetReturnsResponse
}

