/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ympa_go_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetGoodsFeedbackCommentsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetGoodsFeedbackCommentsRequest{}

// GetGoodsFeedbackCommentsRequest Фильтр запроса комментариев отзыва. 
type GetGoodsFeedbackCommentsRequest struct {
	// Идентификатор отзыва. 
	FeedbackId int64 `json:"feedbackId"`
}

type _GetGoodsFeedbackCommentsRequest GetGoodsFeedbackCommentsRequest

// NewGetGoodsFeedbackCommentsRequest instantiates a new GetGoodsFeedbackCommentsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetGoodsFeedbackCommentsRequest(feedbackId int64) *GetGoodsFeedbackCommentsRequest {
	this := GetGoodsFeedbackCommentsRequest{}
	this.FeedbackId = feedbackId
	return &this
}

// NewGetGoodsFeedbackCommentsRequestWithDefaults instantiates a new GetGoodsFeedbackCommentsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetGoodsFeedbackCommentsRequestWithDefaults() *GetGoodsFeedbackCommentsRequest {
	this := GetGoodsFeedbackCommentsRequest{}
	return &this
}

// GetFeedbackId returns the FeedbackId field value
func (o *GetGoodsFeedbackCommentsRequest) GetFeedbackId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FeedbackId
}

// GetFeedbackIdOk returns a tuple with the FeedbackId field value
// and a boolean to check if the value has been set.
func (o *GetGoodsFeedbackCommentsRequest) GetFeedbackIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeedbackId, true
}

// SetFeedbackId sets field value
func (o *GetGoodsFeedbackCommentsRequest) SetFeedbackId(v int64) {
	o.FeedbackId = v
}

func (o GetGoodsFeedbackCommentsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetGoodsFeedbackCommentsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["feedbackId"] = o.FeedbackId
	return toSerialize, nil
}

func (o *GetGoodsFeedbackCommentsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"feedbackId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetGoodsFeedbackCommentsRequest := _GetGoodsFeedbackCommentsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetGoodsFeedbackCommentsRequest)

	if err != nil {
		return err
	}

	*o = GetGoodsFeedbackCommentsRequest(varGetGoodsFeedbackCommentsRequest)

	return err
}

type NullableGetGoodsFeedbackCommentsRequest struct {
	value *GetGoodsFeedbackCommentsRequest
	isSet bool
}

func (v NullableGetGoodsFeedbackCommentsRequest) Get() *GetGoodsFeedbackCommentsRequest {
	return v.value
}

func (v *NullableGetGoodsFeedbackCommentsRequest) Set(val *GetGoodsFeedbackCommentsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGoodsFeedbackCommentsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGoodsFeedbackCommentsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGoodsFeedbackCommentsRequest(val *GetGoodsFeedbackCommentsRequest) *NullableGetGoodsFeedbackCommentsRequest {
	return &NullableGetGoodsFeedbackCommentsRequest{value: val, isSet: true}
}

func (v NullableGetGoodsFeedbackCommentsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGoodsFeedbackCommentsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


