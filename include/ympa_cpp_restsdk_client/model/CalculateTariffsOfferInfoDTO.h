/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CalculateTariffsOfferInfoDTO.h
 *
 * Стоимость услуг.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CalculateTariffsOfferInfoDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CalculateTariffsOfferInfoDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/CalculateTariffsOfferDTO.h"
#include <vector>
#include "ympa_cpp_restsdk_client/model/CalculatedTariffDTO.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class CalculateTariffsOfferDTO;
class CalculatedTariffDTO;


/// <summary>
/// Стоимость услуг.
/// </summary>
class  CalculateTariffsOfferInfoDTO
    : public ModelBase
{
public:
    CalculateTariffsOfferInfoDTO();
    virtual ~CalculateTariffsOfferInfoDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CalculateTariffsOfferInfoDTO members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CalculateTariffsOfferDTO> getOffer() const;
    bool offerIsSet() const;
    void unsetOffer();

    void setOffer(const std::shared_ptr<CalculateTariffsOfferDTO>& value);

    /// <summary>
    /// Список услуг и их стоимость.  По некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели FBS стоимость услуги &#x60;SORTING&#x60; (обработка заказа) зависит от способа отгрузки и количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/). 
    /// </summary>
    std::vector<std::shared_ptr<CalculatedTariffDTO>>& getTariffs();
    bool tariffsIsSet() const;
    void unsetTariffs();

    void setTariffs(const std::vector<std::shared_ptr<CalculatedTariffDTO>>& value);


protected:
    std::shared_ptr<CalculateTariffsOfferDTO> m_Offer;
    bool m_OfferIsSet;
    std::vector<std::shared_ptr<CalculatedTariffDTO>> m_Tariffs;
    bool m_TariffsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CalculateTariffsOfferInfoDTO_H_ */
