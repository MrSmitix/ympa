/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * TariffDTO.h
 *
 * Информация о тарифах, по которым нужно заплатить за услуги Маркета.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_TariffDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_TariffDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include <vector>
#include "ympa_cpp_restsdk_client/model/TariffParameterDTO.h"
#include "ympa_cpp_restsdk_client/model/TariffType.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class TariffParameterDTO;


/// <summary>
/// Информация о тарифах, по которым нужно заплатить за услуги Маркета.
/// </summary>
class  TariffDTO
    : public ModelBase
{
public:
    TariffDTO();
    virtual ~TariffDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// TariffDTO members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<TariffType> getType() const;
    bool typeIsSet() const;
    void unsetType();

    void setType(const std::shared_ptr<TariffType>& value);

    /// <summary>
    /// {% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Значение тарифа в процентах. 
    /// </summary>
    double getPercent() const;
    bool percentIsSet() const;
    void unsetPercent();

    void setPercent(double value);

    /// <summary>
    /// Значение тарифа в рублях.
    /// </summary>
    double getAmount() const;
    bool amountIsSet() const;
    void unsetAmount();

    void setAmount(double value);

    /// <summary>
    /// Параметры расчета тарифа.
    /// </summary>
    std::vector<std::shared_ptr<TariffParameterDTO>>& getParameters();
    bool parametersIsSet() const;
    void unsetParameters();

    void setParameters(const std::vector<std::shared_ptr<TariffParameterDTO>>& value);


protected:
    std::shared_ptr<TariffType> m_Type;
    bool m_TypeIsSet;
    double m_Percent;
    bool m_PercentIsSet;
    double m_Amount;
    bool m_AmountIsSet;
    std::vector<std::shared_ptr<TariffParameterDTO>> m_Parameters;
    bool m_ParametersIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_TariffDTO_H_ */
