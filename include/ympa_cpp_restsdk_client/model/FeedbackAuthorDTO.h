/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * FeedbackAuthorDTO.h
 *
 * Информация об авторе отзыва.  Если отзыв оставлен анонимно, параметр не возвращается. 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_FeedbackAuthorDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_FeedbackAuthorDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/RegionDTO.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class RegionDTO;


/// <summary>
/// Информация об авторе отзыва.  Если отзыв оставлен анонимно, параметр не возвращается. 
/// </summary>
class  FeedbackAuthorDTO
    : public ModelBase
{
public:
    FeedbackAuthorDTO();
    virtual ~FeedbackAuthorDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// FeedbackAuthorDTO members

    /// <summary>
    /// Имя автора отзыва.
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<RegionDTO> getRegion() const;
    bool regionIsSet() const;
    void unsetRegion();

    void setRegion(const std::shared_ptr<RegionDTO>& value);


protected:
    utility::string_t m_Name;
    bool m_NameIsSet;
    std::shared_ptr<RegionDTO> m_Region;
    bool m_RegionIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_FeedbackAuthorDTO_H_ */
