/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OutletDeliveryRuleDTO.h
 *
 * Информация об условиях доставки для данной точки продаж.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_OutletDeliveryRuleDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_OutletDeliveryRuleDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"


namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Информация об условиях доставки для данной точки продаж.
/// </summary>
class  OutletDeliveryRuleDTO
    : public ModelBase
{
public:
    OutletDeliveryRuleDTO();
    virtual ~OutletDeliveryRuleDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OutletDeliveryRuleDTO members

    /// <summary>
    /// Минимальный срок доставки товаров в точку продаж. Указан в рабочих днях.  Минимальное значение: &#x60;0&#x60; — доставка в день заказа.  Максимальное значение: &#x60;60&#x60;.  Допустимые сроки доставки (разница между &#x60;minDeliveryDays&#x60; и &#x60;maxDeliveryDays&#x60;) зависят от региона.  Для доставки по своему региону разница не должна превышать двух дней. Например, если &#x60;minDeliveryDays&#x60; равно 1, то для &#x60;maxDeliveryDays&#x60; допускаются значения от 1 до 3.  Для доставки в другие регионы:  * Если &#x60;minDeliveryDays&#x60; до 18 дней, разница не должна превышать четырех дней. Например, если &#x60;minDeliveryDays&#x60; равно 10, то для &#x60;maxDeliveryDays&#x60; допускаются значения от 10 до 14. * Если &#x60;minDeliveryDays&#x60; больше 18 дней, разница должна быть не больше чем в два раза. Например, если &#x60;minDeliveryDays&#x60; равно 21, то для &#x60;maxDeliveryDays&#x60; допускаются значения от 21 до 42.  Обязательный параметр, если &#x60;type&#x3D;\&quot;DEPOT\&quot;&#x60; или &#x60;type&#x3D;\&quot;MIXED\&quot;&#x60;.  Взаимоисключающий с параметром &#x60;unspecifiedDeliveryInterval&#x60;. 
    /// </summary>
    int32_t getMinDeliveryDays() const;
    bool minDeliveryDaysIsSet() const;
    void unsetMinDeliveryDays();

    void setMinDeliveryDays(int32_t value);

    /// <summary>
    /// Максимальный срок доставки товаров в точку продаж. Указан в рабочих днях.  Минимальное значение: &#x60;0&#x60; — доставка в день заказа.  Максимальное значение: &#x60;60&#x60;.  Допустимые сроки доставки (разница между &#x60;minDeliveryDays&#x60; и &#x60;maxDeliveryDays&#x60;) зависят от региона.  Для доставки по своему региону разница не должна превышать двух дней. Например, если &#x60;minDeliveryDays&#x60; равно 1, то для &#x60;maxDeliveryDays&#x60; допускаются значения от 1 до 3.  Для доставки в другие регионы:  * Если &#x60;minDeliveryDays&#x60; до 18 дней, разница не должна превышать четырех дней. Например, если &#x60;minDeliveryDays&#x60; равно 10, то для &#x60;maxDeliveryDays&#x60; допускаются значения от 10 до 14. * Если &#x60;minDeliveryDays&#x60; больше 18 дней, разница должна быть не больше чем в два раза. Например, если &#x60;minDeliveryDays&#x60; равно 21, то для &#x60;maxDeliveryDays&#x60; допускаются значения от 21 до 42.  Обязательный параметр, если &#x60;type&#x3D;\&quot;DEPOT\&quot;&#x60; или &#x60;type&#x3D;\&quot;MIXED\&quot;&#x60;.  Взаимоисключающий с параметром &#x60;unspecifiedDeliveryInterval&#x60;. 
    /// </summary>
    int32_t getMaxDeliveryDays() const;
    bool maxDeliveryDaysIsSet() const;
    void unsetMaxDeliveryDays();

    void setMaxDeliveryDays(int32_t value);

    /// <summary>
    /// Идентификатор службы доставки товаров в точку продаж.  Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md). 
    /// </summary>
    int64_t getDeliveryServiceId() const;
    bool deliveryServiceIdIsSet() const;
    void unsetDeliveryServiceId();

    void setDeliveryServiceId(int64_t value);

    /// <summary>
    /// Час, до которого покупателю нужно сделать заказ, чтобы он был доставлен в точку продаж в сроки от &#x60;minDeliveryDays&#x60; до &#x60;maxDeliveryDays&#x60;.  Если покупатель оформит заказ после указанного часа, он будет доставлен в сроки от &#x60;minDeliveryDays&#x60; + 1 рабочий день до &#x60;maxDeliveryDays&#x60; + 1 рабочий день.  Значение по умолчанию: &#x60;24&#x60;. 
    /// </summary>
    int32_t getOrderBefore() const;
    bool orderBeforeIsSet() const;
    void unsetOrderBefore();

    void setOrderBefore(int32_t value);

    /// <summary>
    /// Цена на товар, начиная с которой действует бесплатный самовывоз товара из точки продаж.
    /// </summary>
    double getPriceFreePickup() const;
    bool priceFreePickupIsSet() const;
    void unsetPriceFreePickup();

    void setPriceFreePickup(double value);

    /// <summary>
    /// Признак доставки товаров в точку продаж на заказ.  Признак выставлен, если:  * точный срок доставки в точку продаж заранее неизвестен (например, если магазин собирает несколько заказов для отправки в точку или населенный пункт); * все товары изготавливаются или поставляются на заказ.  Возможные значения: * &#x60;true&#x60; — товары доставляются в точку продаж на заказ.  Параметр указывается только со значением &#x60;true&#x60;.  Взаимоисключающий с параметрами &#x60;minDeliveryDays&#x60; и &#x60;maxDeliveryDays&#x60;. 
    /// </summary>
    bool isUnspecifiedDeliveryInterval() const;
    bool unspecifiedDeliveryIntervalIsSet() const;
    void unsetUnspecifiedDeliveryInterval();

    void setUnspecifiedDeliveryInterval(bool value);


protected:
    int32_t m_MinDeliveryDays;
    bool m_MinDeliveryDaysIsSet;
    int32_t m_MaxDeliveryDays;
    bool m_MaxDeliveryDaysIsSet;
    int64_t m_DeliveryServiceId;
    bool m_DeliveryServiceIdIsSet;
    int32_t m_OrderBefore;
    bool m_OrderBeforeIsSet;
    double m_PriceFreePickup;
    bool m_PriceFreePickupIsSet;
    bool m_UnspecifiedDeliveryInterval;
    bool m_UnspecifiedDeliveryIntervalIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_OutletDeliveryRuleDTO_H_ */
