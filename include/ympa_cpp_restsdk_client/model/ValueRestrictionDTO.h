/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ValueRestrictionDTO.h
 *
 * Ограничение на возможные значения, накладываемое другой характеристикой.  Если ограничивающая характеристика принимает определенное значение, список возможных значений ограничиваемой характеристики сокращается.  **Пример**  Характеристика **размер** сама по себе может принимать девять разных значений: &#x60;S&#x60;, &#x60;M&#x60;, &#x60;L&#x60;, &#x60;44&#x60;, &#x60;46&#x60;, &#x60;48&#x60;, &#x60;42/164&#x60;, &#x60;46/176&#x60;, &#x60;44S&#x60;.  Если ограничивающая характеристика **размерная сетка** принимает значение &#x60;RU&#x60;, список возможных значений размера сокращается до &#x60;44&#x60;, &#x60;46&#x60;, &#x60;48&#x60;. 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ValueRestrictionDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ValueRestrictionDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/OptionValuesLimitedDTO.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class OptionValuesLimitedDTO;


/// <summary>
/// Ограничение на возможные значения, накладываемое другой характеристикой.  Если ограничивающая характеристика принимает определенное значение, список возможных значений ограничиваемой характеристики сокращается.  **Пример**  Характеристика **размер** сама по себе может принимать девять разных значений: &#x60;S&#x60;, &#x60;M&#x60;, &#x60;L&#x60;, &#x60;44&#x60;, &#x60;46&#x60;, &#x60;48&#x60;, &#x60;42/164&#x60;, &#x60;46/176&#x60;, &#x60;44S&#x60;.  Если ограничивающая характеристика **размерная сетка** принимает значение &#x60;RU&#x60;, список возможных значений размера сокращается до &#x60;44&#x60;, &#x60;46&#x60;, &#x60;48&#x60;. 
/// </summary>
class  ValueRestrictionDTO
    : public ModelBase
{
public:
    ValueRestrictionDTO();
    virtual ~ValueRestrictionDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ValueRestrictionDTO members

    /// <summary>
    /// Идентификатор ограничивающей характеристики.
    /// </summary>
    int64_t getLimitingParameterId() const;
    bool limitingParameterIdIsSet() const;
    void unsetLimitingParameterId();

    void setLimitingParameterId(int64_t value);

    /// <summary>
    /// Значения ограничивающей характеристики и соответствующие допустимые значения текущей характеристики.
    /// </summary>
    std::vector<std::shared_ptr<OptionValuesLimitedDTO>>& getLimitedValues();
    bool limitedValuesIsSet() const;
    void unsetLimitedValues();

    void setLimitedValues(const std::vector<std::shared_ptr<OptionValuesLimitedDTO>>& value);


protected:
    int64_t m_LimitingParameterId;
    bool m_LimitingParameterIdIsSet;
    std::vector<std::shared_ptr<OptionValuesLimitedDTO>> m_LimitedValues;
    bool m_LimitedValuesIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ValueRestrictionDTO_H_ */
