/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GetWarehouseStocksRequest.h
 *
 * Фильтры для запроса остатков. 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_GetWarehouseStocksRequest_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_GetWarehouseStocksRequest_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <set>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Фильтры для запроса остатков. 
/// </summary>
class  GetWarehouseStocksRequest
    : public ModelBase
{
public:
    GetWarehouseStocksRequest();
    virtual ~GetWarehouseStocksRequest();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// GetWarehouseStocksRequest members

    /// <summary>
    /// **Только для модели FBY**  Возвращать ли информацию по оборачиваемости.  Значение по умолчанию — &#x60;false&#x60;. Если информация нужна, передайте значение &#x60;true&#x60;. 
    /// </summary>
    bool isWithTurnover() const;
    bool withTurnoverIsSet() const;
    void unsetWithTurnover();

    void setWithTurnover(bool value);

    /// <summary>
    /// Фильтр по нахождению в архиве.  Передайте &#x60;true&#x60;, чтобы получить информацию об остатках товаров, которые находятся в архиве. Если фильтр не заполнен или передано &#x60;false&#x60;, в ответе возвращается информация о товарах, которые не находятся в архиве. 
    /// </summary>
    bool isArchived() const;
    bool archivedIsSet() const;
    void unsetArchived();

    void setArchived(bool value);

    /// <summary>
    /// Фильтр по вашим SKU товаров.  Возвращается информация об остатках всех переданных SKU, включая товары в архиве.  {% note warning \&quot;Такой список возвращается только целиком\&quot; %}  Если вы запрашиваете информацию по конкретным SKU, не заполняйте:  * &#x60;page_token&#x60; * &#x60;limit&#x60; * &#x60;archived&#x60;  {% endnote %}    
    /// </summary>
    std::set<std::shared_ptr<utility::string_t>>& getOfferIds();
    bool offerIdsIsSet() const;
    void unsetOfferIds();

    void setOfferIds(const std::set<std::shared_ptr<utility::string_t>>& value);


protected:
    bool m_WithTurnover;
    bool m_WithTurnoverIsSet;
    bool m_Archived;
    bool m_ArchivedIsSet;
    std::set<std::shared_ptr<utility::string_t>> m_OfferIds;
    bool m_OfferIdsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_GetWarehouseStocksRequest_H_ */
