/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrderItemInstanceDTO.h
 *
 * Переданные вами для данной позиции коды маркировки или УИНы. Коды «Честного знака» возвращаются в двух вариантах — с криптохвостом и без. 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_OrderItemInstanceDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_OrderItemInstanceDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Переданные вами для данной позиции коды маркировки или УИНы. Коды «Честного знака» возвращаются в двух вариантах — с криптохвостом и без. 
/// </summary>
class  OrderItemInstanceDTO
    : public ModelBase
{
public:
    OrderItemInstanceDTO();
    virtual ~OrderItemInstanceDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OrderItemInstanceDTO members

    /// <summary>
    /// Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/) без криптохвоста.
    /// </summary>
    utility::string_t getCis() const;
    bool cisIsSet() const;
    void unsetCis();

    void setCis(const utility::string_t& value);

    /// <summary>
    /// Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/) с криптохвостом.
    /// </summary>
    utility::string_t getCisFull() const;
    bool cisFullIsSet() const;
    void unsetCisFull();

    void setCisFull(const utility::string_t& value);

    /// <summary>
    /// УИН ювелирного изделия (16-значный код) Производитель получает УИН, когда регистрирует изделие в системе контроля за оборотом драгоценных металлов и камней — ГИИС ДМДК. 
    /// </summary>
    utility::string_t getUin() const;
    bool uinIsSet() const;
    void unsetUin();

    void setUin(const utility::string_t& value);

    /// <summary>
    /// Регистрационный номер партии товара.  Представляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации. 
    /// </summary>
    utility::string_t getRnpt() const;
    bool rnptIsSet() const;
    void unsetRnpt();

    void setRnpt(const utility::string_t& value);

    /// <summary>
    /// Грузовая таможенная декларация.  Представляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации. 
    /// </summary>
    utility::string_t getGtd() const;
    bool gtdIsSet() const;
    void unsetGtd();

    void setGtd(const utility::string_t& value);


protected:
    utility::string_t m_Cis;
    bool m_CisIsSet;
    utility::string_t m_CisFull;
    bool m_CisFullIsSet;
    utility::string_t m_Uin;
    bool m_UinIsSet;
    utility::string_t m_Rnpt;
    bool m_RnptIsSet;
    utility::string_t m_Gtd;
    bool m_GtdIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_OrderItemInstanceDTO_H_ */
