/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CategoryParameterUnitDTO.h
 *
 * Единицы измерения характеристики товара.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CategoryParameterUnitDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CategoryParameterUnitDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include <vector>
#include "ympa_cpp_restsdk_client/model/UnitDTO.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class UnitDTO;


/// <summary>
/// Единицы измерения характеристики товара.
/// </summary>
class  CategoryParameterUnitDTO
    : public ModelBase
{
public:
    CategoryParameterUnitDTO();
    virtual ~CategoryParameterUnitDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CategoryParameterUnitDTO members

    /// <summary>
    /// Единица измерения по умолчанию.
    /// </summary>
    int64_t getDefaultUnitId() const;
    bool defaultUnitIdIsSet() const;
    void unsetDefaultUnitId();

    void setDefaultUnitId(int64_t value);

    /// <summary>
    /// Допустимые единицы измерения.
    /// </summary>
    std::vector<std::shared_ptr<UnitDTO>>& getUnits();
    bool unitsIsSet() const;
    void unsetUnits();

    void setUnits(const std::vector<std::shared_ptr<UnitDTO>>& value);


protected:
    int64_t m_DefaultUnitId;
    bool m_DefaultUnitIdIsSet;
    std::vector<std::shared_ptr<UnitDTO>> m_Units;
    bool m_UnitsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CategoryParameterUnitDTO_H_ */
