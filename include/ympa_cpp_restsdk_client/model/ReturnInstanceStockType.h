/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ReturnInstanceStockType.h
 *
 * Тип остатка на складе.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ReturnInstanceStockType_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ReturnInstanceStockType_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"


namespace org {
namespace openapitools {
namespace client {
namespace model {


class  ReturnInstanceStockType
    : public ModelBase
{
public:
    ReturnInstanceStockType();
    virtual ~ReturnInstanceStockType();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    enum class eReturnInstanceStockType
    {
        ReturnInstanceStockType_FIT,
        ReturnInstanceStockType_DEFECT,
        ReturnInstanceStockType_ANOMALY,
        ReturnInstanceStockType_SURPLUS,
        ReturnInstanceStockType_EXPIRED,
        ReturnInstanceStockType_MISGRADING,
        ReturnInstanceStockType_UNDEFINED,
        ReturnInstanceStockType_INCORRECT_IMEI,
        ReturnInstanceStockType_INCORRECT_SERIAL_NUMBER,
        ReturnInstanceStockType_INCORRECT_CIS,
        ReturnInstanceStockType_PART_MISSING,
        ReturnInstanceStockType_NON_COMPLIENT,
        ReturnInstanceStockType_NOT_ACCEPTABLE,
        ReturnInstanceStockType_SERVICE,
        ReturnInstanceStockType_MARKDOWN,
        ReturnInstanceStockType_DEMO,
        ReturnInstanceStockType_REPAIR,
        ReturnInstanceStockType_FIRMWARE,
        ReturnInstanceStockType_UNKNOWN,
    };

    eReturnInstanceStockType getValue() const;
    void setValue(eReturnInstanceStockType const value);

    protected:
        eReturnInstanceStockType m_value;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ReturnInstanceStockType_H_ */
