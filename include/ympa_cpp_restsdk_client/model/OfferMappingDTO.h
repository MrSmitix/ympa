/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OfferMappingDTO.h
 *
 * Информация о текущей карточке товара на Маркете.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_OfferMappingDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_OfferMappingDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"


namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Информация о текущей карточке товара на Маркете.
/// </summary>
class  OfferMappingDTO
    : public ModelBase
{
public:
    OfferMappingDTO();
    virtual ~OfferMappingDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OfferMappingDTO members

    /// <summary>
    /// SKU на Маркете.
    /// </summary>
    int64_t getMarketSku() const;
    bool marketSkuIsSet() const;
    void unsetMarketSku();

    void setMarketSku(int64_t value);

    /// <summary>
    /// Идентификатор модели для текущей карточки товара на Маркете.  Например, две лопатки разных цветов имеют разные SKU на Маркете (параметр &#x60;marketSku&#x60;), но одинаковый идентификатор модели товара. 
    /// </summary>
    int64_t getModelId() const;
    bool modelIdIsSet() const;
    void unsetModelId();

    void setModelId(int64_t value);

    /// <summary>
    /// Идентификатор категории для текущей карточки товара на Маркете.
    /// </summary>
    int64_t getCategoryId() const;
    bool categoryIdIsSet() const;
    void unsetCategoryId();

    void setCategoryId(int64_t value);


protected:
    int64_t m_MarketSku;
    bool m_MarketSkuIsSet;
    int64_t m_ModelId;
    bool m_ModelIdIsSet;
    int64_t m_CategoryId;
    bool m_CategoryIdIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_OfferMappingDTO_H_ */
