/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrdersStatsDetailsDTO.h
 *
 * Информация об удалении товара из заказа.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_OrdersStatsDetailsDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_OrdersStatsDetailsDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/OrdersStatsItemStatusType.h"
#include <cpprest/details/basic_types.h>
#include "ympa_cpp_restsdk_client/model/OrdersStatsStockType.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Информация об удалении товара из заказа.
/// </summary>
class  OrdersStatsDetailsDTO
    : public ModelBase
{
public:
    OrdersStatsDetailsDTO();
    virtual ~OrdersStatsDetailsDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OrdersStatsDetailsDTO members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<OrdersStatsItemStatusType> getItemStatus() const;
    bool itemStatusIsSet() const;
    void unsetItemStatus();

    void setItemStatus(const std::shared_ptr<OrdersStatsItemStatusType>& value);

    /// <summary>
    /// Количество товара со статусом, указанном в параметре &#x60;itemStatus&#x60;.
    /// </summary>
    int64_t getItemCount() const;
    bool itemCountIsSet() const;
    void unsetItemCount();

    void setItemCount(int64_t value);

    /// <summary>
    /// Дата, когда товар получил статус, указанный в параметре &#x60;itemStatus&#x60;.  Формат даты: &#x60;ГГГГ-ММ-ДД&#x60;. 
    /// </summary>
    utility::datetime getUpdateDate() const;
    bool updateDateIsSet() const;
    void unsetUpdateDate();

    void setUpdateDate(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<OrdersStatsStockType> getStockType() const;
    bool stockTypeIsSet() const;
    void unsetStockType();

    void setStockType(const std::shared_ptr<OrdersStatsStockType>& value);


protected:
    std::shared_ptr<OrdersStatsItemStatusType> m_ItemStatus;
    bool m_ItemStatusIsSet;
    int64_t m_ItemCount;
    bool m_ItemCountIsSet;
    utility::datetime m_UpdateDate;
    bool m_UpdateDateIsSet;
    std::shared_ptr<OrdersStatsStockType> m_StockType;
    bool m_StockTypeIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_OrdersStatsDetailsDTO_H_ */
