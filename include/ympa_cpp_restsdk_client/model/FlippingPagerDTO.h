/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * FlippingPagerDTO.h
 *
 * Модель для пагинации.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_FlippingPagerDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_FlippingPagerDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"


namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Модель для пагинации.
/// </summary>
class  FlippingPagerDTO
    : public ModelBase
{
public:
    FlippingPagerDTO();
    virtual ~FlippingPagerDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// FlippingPagerDTO members

    /// <summary>
    /// Сколько всего найдено элементов.
    /// </summary>
    int32_t getTotal() const;
    bool totalIsSet() const;
    void unsetTotal();

    void setTotal(int32_t value);

    /// <summary>
    /// Начальный номер найденного элемента на странице.
    /// </summary>
    int32_t getFrom() const;
    bool fromIsSet() const;
    void unsetFrom();

    void setFrom(int32_t value);

    /// <summary>
    /// Конечный номер найденного элемента на странице.
    /// </summary>
    int32_t getTo() const;
    bool toIsSet() const;
    void unsetTo();

    void setTo(int32_t value);

    /// <summary>
    /// Текущая страница.
    /// </summary>
    int32_t getCurrentPage() const;
    bool currentPageIsSet() const;
    void unsetCurrentPage();

    void setCurrentPage(int32_t value);

    /// <summary>
    /// Общее количество страниц.
    /// </summary>
    int32_t getPagesCount() const;
    bool pagesCountIsSet() const;
    void unsetPagesCount();

    void setPagesCount(int32_t value);

    /// <summary>
    /// Размер страницы.
    /// </summary>
    int32_t getPageSize() const;
    bool pageSizeIsSet() const;
    void unsetPageSize();

    void setPageSize(int32_t value);


protected:
    int32_t m_Total;
    bool m_TotalIsSet;
    int32_t m_From;
    bool m_FromIsSet;
    int32_t m_To;
    bool m_ToIsSet;
    int32_t m_CurrentPage;
    bool m_CurrentPageIsSet;
    int32_t m_PagesCount;
    bool m_PagesCountIsSet;
    int32_t m_PageSize;
    bool m_PageSizeIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_FlippingPagerDTO_H_ */
