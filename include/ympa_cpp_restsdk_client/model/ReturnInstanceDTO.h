/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ReturnInstanceDTO.h
 *
 * Логистическая информация по возврату.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ReturnInstanceDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ReturnInstanceDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/ReturnInstanceStatusType.h"
#include "ympa_cpp_restsdk_client/model/ReturnInstanceStockType.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Логистическая информация по возврату.
/// </summary>
class  ReturnInstanceDTO
    : public ModelBase
{
public:
    ReturnInstanceDTO();
    virtual ~ReturnInstanceDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ReturnInstanceDTO members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ReturnInstanceStockType> getStockType() const;
    bool stockTypeIsSet() const;
    void unsetStockType();

    void setStockType(const std::shared_ptr<ReturnInstanceStockType>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ReturnInstanceStatusType> getStatus() const;
    bool statusIsSet() const;
    void unsetStatus();

    void setStatus(const std::shared_ptr<ReturnInstanceStatusType>& value);

    /// <summary>
    /// Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).
    /// </summary>
    utility::string_t getCis() const;
    bool cisIsSet() const;
    void unsetCis();

    void setCis(const utility::string_t& value);

    /// <summary>
    /// Международный идентификатор мобильного оборудования.
    /// </summary>
    utility::string_t getImei() const;
    bool imeiIsSet() const;
    void unsetImei();

    void setImei(const utility::string_t& value);


protected:
    std::shared_ptr<ReturnInstanceStockType> m_StockType;
    bool m_StockTypeIsSet;
    std::shared_ptr<ReturnInstanceStatusType> m_Status;
    bool m_StatusIsSet;
    utility::string_t m_Cis;
    bool m_CisIsSet;
    utility::string_t m_Imei;
    bool m_ImeiIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ReturnInstanceDTO_H_ */
