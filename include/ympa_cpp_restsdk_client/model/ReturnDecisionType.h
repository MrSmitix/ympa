/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ReturnDecisionType.h
 *
 * Решение по возврату:  * &#x60;REFUND_MONEY&#x60; — вернуть деньги покупателю.  * &#x60;REFUND_MONEY_INCLUDING_SHIPMENT&#x60; — вернуть деньги за товар и пересылку.  * &#x60;REPAIR&#x60; — отремонтировать товар.  * &#x60;REPLACE&#x60; — заменить товар.  * &#x60;SEND_TO_EXAMINATION&#x60; — взять товар на экспертизу.  * &#x60;DECLINE_REFUND&#x60; — отказать в возврате.  * &#x60;OTHER_DECISION&#x60; — другое решение. 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ReturnDecisionType_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ReturnDecisionType_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"


namespace org {
namespace openapitools {
namespace client {
namespace model {


class  ReturnDecisionType
    : public ModelBase
{
public:
    ReturnDecisionType();
    virtual ~ReturnDecisionType();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    enum class eReturnDecisionType
    {
        ReturnDecisionType_REFUND_MONEY,
        ReturnDecisionType_REFUND_MONEY_INCLUDING_SHIPMENT,
        ReturnDecisionType_REPAIR,
        ReturnDecisionType_REPLACE,
        ReturnDecisionType_SEND_TO_EXAMINATION,
        ReturnDecisionType_DECLINE_REFUND,
        ReturnDecisionType_OTHER_DECISION,
        ReturnDecisionType_UNKNOWN,
    };

    eReturnDecisionType getValue() const;
    void setValue(eReturnDecisionType const value);

    protected:
        eReturnDecisionType m_value;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ReturnDecisionType_H_ */
