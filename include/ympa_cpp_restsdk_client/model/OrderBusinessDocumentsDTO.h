/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrderBusinessDocumentsDTO.h
 *
 * Информация о документах. 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_OrderBusinessDocumentsDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_OrderBusinessDocumentsDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/DocumentDTO.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class DocumentDTO;


/// <summary>
/// Информация о документах. 
/// </summary>
class  OrderBusinessDocumentsDTO
    : public ModelBase
{
public:
    OrderBusinessDocumentsDTO();
    virtual ~OrderBusinessDocumentsDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OrderBusinessDocumentsDTO members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<DocumentDTO> getUpd() const;
    bool updIsSet() const;
    void unsetUpd();

    void setUpd(const std::shared_ptr<DocumentDTO>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<DocumentDTO> getUkd() const;
    bool ukdIsSet() const;
    void unsetUkd();

    void setUkd(const std::shared_ptr<DocumentDTO>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<DocumentDTO> getTorgTwelve() const;
    bool torgTwelveIsSet() const;
    void unsetTorgTwelve();

    void setTorgTwelve(const std::shared_ptr<DocumentDTO>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<DocumentDTO> getSf() const;
    bool sfIsSet() const;
    void unsetSf();

    void setSf(const std::shared_ptr<DocumentDTO>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<DocumentDTO> getKsf() const;
    bool ksfIsSet() const;
    void unsetKsf();

    void setKsf(const std::shared_ptr<DocumentDTO>& value);


protected:
    std::shared_ptr<DocumentDTO> m_Upd;
    bool m_UpdIsSet;
    std::shared_ptr<DocumentDTO> m_Ukd;
    bool m_UkdIsSet;
    std::shared_ptr<DocumentDTO> m_TorgTwelve;
    bool m_TorgTwelveIsSet;
    std::shared_ptr<DocumentDTO> m_Sf;
    bool m_SfIsSet;
    std::shared_ptr<DocumentDTO> m_Ksf;
    bool m_KsfIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_OrderBusinessDocumentsDTO_H_ */
