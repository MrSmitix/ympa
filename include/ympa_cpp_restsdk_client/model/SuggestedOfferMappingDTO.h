/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SuggestedOfferMappingDTO.h
 *
 * Товар с соответствующей карточкой на Маркете.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_SuggestedOfferMappingDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_SuggestedOfferMappingDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/GetMappingDTO.h"
#include "ympa_cpp_restsdk_client/model/SuggestedOfferDTO.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class SuggestedOfferDTO;
class GetMappingDTO;


/// <summary>
/// Товар с соответствующей карточкой на Маркете.
/// </summary>
class  SuggestedOfferMappingDTO
    : public ModelBase
{
public:
    SuggestedOfferMappingDTO();
    virtual ~SuggestedOfferMappingDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SuggestedOfferMappingDTO members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SuggestedOfferDTO> getOffer() const;
    bool offerIsSet() const;
    void unsetOffer();

    void setOffer(const std::shared_ptr<SuggestedOfferDTO>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<GetMappingDTO> getMapping() const;
    bool mappingIsSet() const;
    void unsetMapping();

    void setMapping(const std::shared_ptr<GetMappingDTO>& value);


protected:
    std::shared_ptr<SuggestedOfferDTO> m_Offer;
    bool m_OfferIsSet;
    std::shared_ptr<GetMappingDTO> m_Mapping;
    bool m_MappingIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_SuggestedOfferMappingDTO_H_ */
