/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * UpdateOrderItemRequest.h
 *
 * Запрос на обновление состава заказа.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_UpdateOrderItemRequest_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_UpdateOrderItemRequest_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/OrderItemModificationDTO.h"
#include "ympa_cpp_restsdk_client/model/OrderItemsModificationRequestReasonType.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class OrderItemModificationDTO;


/// <summary>
/// Запрос на обновление состава заказа.
/// </summary>
class  UpdateOrderItemRequest
    : public ModelBase
{
public:
    UpdateOrderItemRequest();
    virtual ~UpdateOrderItemRequest();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// UpdateOrderItemRequest members

    /// <summary>
    /// Список товаров в заказе.  Если магазин не передал информацию о товаре во входных данных, он будет удален из заказа.  Обязательный параметр. 
    /// </summary>
    std::vector<std::shared_ptr<OrderItemModificationDTO>>& getItems();
    bool itemsIsSet() const;
    void unsetItems();

    void setItems(const std::vector<std::shared_ptr<OrderItemModificationDTO>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<OrderItemsModificationRequestReasonType> getReason() const;
    bool reasonIsSet() const;
    void unsetReason();

    void setReason(const std::shared_ptr<OrderItemsModificationRequestReasonType>& value);


protected:
    std::vector<std::shared_ptr<OrderItemModificationDTO>> m_Items;
    bool m_ItemsIsSet;
    std::shared_ptr<OrderItemsModificationRequestReasonType> m_Reason;
    bool m_ReasonIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_UpdateOrderItemRequest_H_ */
