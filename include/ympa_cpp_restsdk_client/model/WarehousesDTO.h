/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * WarehousesDTO.h
 *
 * Информация о складах и группах складов.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_WarehousesDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_WarehousesDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/WarehouseGroupDTO.h"
#include "ympa_cpp_restsdk_client/model/WarehouseDTO.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class WarehouseDTO;
class WarehouseGroupDTO;


/// <summary>
/// Информация о складах и группах складов.
/// </summary>
class  WarehousesDTO
    : public ModelBase
{
public:
    WarehousesDTO();
    virtual ~WarehousesDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// WarehousesDTO members

    /// <summary>
    /// Список складов, не входящих в группы.
    /// </summary>
    std::vector<std::shared_ptr<WarehouseDTO>>& getWarehouses();
    bool warehousesIsSet() const;
    void unsetWarehouses();

    void setWarehouses(const std::vector<std::shared_ptr<WarehouseDTO>>& value);

    /// <summary>
    /// Список групп складов.
    /// </summary>
    std::vector<std::shared_ptr<WarehouseGroupDTO>>& getWarehouseGroups();
    bool warehouseGroupsIsSet() const;
    void unsetWarehouseGroups();

    void setWarehouseGroups(const std::vector<std::shared_ptr<WarehouseGroupDTO>>& value);


protected:
    std::vector<std::shared_ptr<WarehouseDTO>> m_Warehouses;
    bool m_WarehousesIsSet;
    std::vector<std::shared_ptr<WarehouseGroupDTO>> m_WarehouseGroups;
    bool m_WarehouseGroupsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_WarehousesDTO_H_ */
