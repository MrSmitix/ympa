/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ReturnDecisionReasonType.h
 *
 * Причины возврата:  * &#x60;BAD_QUALITY&#x60; — бракованный товар (есть недостатки).  * &#x60;DO_NOT_FIT&#x60; — товар не подошел.  * &#x60;WRONG_ITEM&#x60; — привезли не тот товар.  * &#x60;DAMAGE_DELIVERY&#x60; — товар поврежден при доставке.  * &#x60;LOYALTY_FAIL&#x60; — невозможно установить виновного в браке/пересорте.  * &#x60;CONTENT_FAIL&#x60; — ошибочное описание товара по вине Маркета.  * &#x60;UNKNOWN&#x60; — причина не известна. 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ReturnDecisionReasonType_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ReturnDecisionReasonType_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"


namespace org {
namespace openapitools {
namespace client {
namespace model {


class  ReturnDecisionReasonType
    : public ModelBase
{
public:
    ReturnDecisionReasonType();
    virtual ~ReturnDecisionReasonType();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    enum class eReturnDecisionReasonType
    {
        ReturnDecisionReasonType_BAD_QUALITY,
        ReturnDecisionReasonType_DOES_NOT_FIT,
        ReturnDecisionReasonType_WRONG_ITEM,
        ReturnDecisionReasonType_DAMAGE_DELIVERY,
        ReturnDecisionReasonType_LOYALTY_FAIL,
        ReturnDecisionReasonType_CONTENT_FAIL,
        ReturnDecisionReasonType_UNKNOWN,
    };

    eReturnDecisionReasonType getValue() const;
    void setValue(eReturnDecisionReasonType const value);

    protected:
        eReturnDecisionReasonType m_value;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ReturnDecisionReasonType_H_ */
