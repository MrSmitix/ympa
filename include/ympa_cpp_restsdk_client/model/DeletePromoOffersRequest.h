/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * DeletePromoOffersRequest.h
 *
 * Удаление товаров из акции.  Чтобы убрать:  * все товары из акции и больше не участвовать в ней, передайте значение &#x60;true&#x60; в параметре &#x60;deleteAllOffers&#x60;;  * часть товаров, передайте их идентификаторы в параметре &#x60;offersIds&#x60;. 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_DeletePromoOffersRequest_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_DeletePromoOffersRequest_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Удаление товаров из акции.  Чтобы убрать:  * все товары из акции и больше не участвовать в ней, передайте значение &#x60;true&#x60; в параметре &#x60;deleteAllOffers&#x60;;  * часть товаров, передайте их идентификаторы в параметре &#x60;offersIds&#x60;. 
/// </summary>
class  DeletePromoOffersRequest
    : public ModelBase
{
public:
    DeletePromoOffersRequest();
    virtual ~DeletePromoOffersRequest();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// DeletePromoOffersRequest members

    /// <summary>
    /// Идентификатор акции.
    /// </summary>
    utility::string_t getPromoId() const;
    bool promoIdIsSet() const;
    void unsetPromoId();

    void setPromoId(const utility::string_t& value);

    /// <summary>
    /// Чтобы убрать все товары из акции и больше не участвовать в ней, передайте значение &#x60;true&#x60; и не передавайте параметр &#x60;offerIds&#x60;.
    /// </summary>
    bool isDeleteAllOffers() const;
    bool deleteAllOffersIsSet() const;
    void unsetDeleteAllOffers();

    void setDeleteAllOffers(bool value);

    /// <summary>
    /// Товары, которые нужно убрать из акции.
    /// </summary>
    std::vector<std::shared_ptr<utility::string_t>>& getOfferIds();
    bool offerIdsIsSet() const;
    void unsetOfferIds();

    void setOfferIds(const std::vector<std::shared_ptr<utility::string_t>>& value);


protected:
    utility::string_t m_PromoId;
    bool m_PromoIdIsSet;
    bool m_DeleteAllOffers;
    bool m_DeleteAllOffersIsSet;
    std::vector<std::shared_ptr<utility::string_t>> m_OfferIds;
    bool m_OfferIdsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_DeletePromoOffersRequest_H_ */
