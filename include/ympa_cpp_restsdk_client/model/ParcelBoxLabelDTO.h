/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ParcelBoxLabelDTO.h
 *
 * Информация о ярлыке для коробки.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ParcelBoxLabelDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ParcelBoxLabelDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Информация о ярлыке для коробки.
/// </summary>
class  ParcelBoxLabelDTO
    : public ModelBase
{
public:
    ParcelBoxLabelDTO();
    virtual ~ParcelBoxLabelDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ParcelBoxLabelDTO members

    /// <summary>
    /// Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label](../../reference/orders/generateOrderLabel.md). 
    /// </summary>
    utility::string_t getUrl() const;
    bool urlIsSet() const;
    void unsetUrl();

    void setUrl(const utility::string_t& value);

    /// <summary>
    /// Юридическое название магазина.
    /// </summary>
    utility::string_t getSupplierName() const;
    bool supplierNameIsSet() const;
    void unsetSupplierName();

    void setSupplierName(const utility::string_t& value);

    /// <summary>
    /// Юридическое название службы доставки.
    /// </summary>
    utility::string_t getDeliveryServiceName() const;
    bool deliveryServiceNameIsSet() const;
    void unsetDeliveryServiceName();

    void setDeliveryServiceName(const utility::string_t& value);

    /// <summary>
    /// Идентификатор заказа в системе Маркета.
    /// </summary>
    int64_t getOrderId() const;
    bool orderIdIsSet() const;
    void unsetOrderId();

    void setOrderId(int64_t value);

    /// <summary>
    /// Идентификатор заказа в информационной системе магазина.  Совпадает с &#x60;orderId&#x60;, если Маркету неизвестен номер заказа в системе магазина. 
    /// </summary>
    utility::string_t getOrderNum() const;
    bool orderNumIsSet() const;
    void unsetOrderNum();

    void setOrderNum(const utility::string_t& value);

    /// <summary>
    /// Фамилия и инициалы получателя заказа.
    /// </summary>
    utility::string_t getRecipientName() const;
    bool recipientNameIsSet() const;
    void unsetRecipientName();

    void setRecipientName(const utility::string_t& value);

    /// <summary>
    /// Идентификатор коробки.
    /// </summary>
    int64_t getBoxId() const;
    bool boxIdIsSet() const;
    void unsetBoxId();

    void setBoxId(int64_t value);

    /// <summary>
    /// Идентификатор коробки в информационной системе магазина.  Возвращается в формате: &#x60;номер заказа на Маркете-номер коробки&#x60;. Например, &#x60;7206821‑1&#x60;, &#x60;7206821‑2&#x60; и т. д. 
    /// </summary>
    utility::string_t getFulfilmentId() const;
    bool fulfilmentIdIsSet() const;
    void unsetFulfilmentId();

    void setFulfilmentId(const utility::string_t& value);

    /// <summary>
    /// Номер коробки в заказе. Возвращается в формате: &#x60;номер места/общее количество мест&#x60;. 
    /// </summary>
    utility::string_t getPlace() const;
    bool placeIsSet() const;
    void unsetPlace();

    void setPlace(const utility::string_t& value);

    /// <summary>
    /// {% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Общая масса всех товаров в заказе. Возвращается в формате: &#x60;weight кг&#x60;. 
    /// </summary>
    utility::string_t getWeight() const;
    bool weightIsSet() const;
    void unsetWeight();

    void setWeight(const utility::string_t& value);

    /// <summary>
    /// Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).
    /// </summary>
    utility::string_t getDeliveryServiceId() const;
    bool deliveryServiceIdIsSet() const;
    void unsetDeliveryServiceId();

    void setDeliveryServiceId(const utility::string_t& value);

    /// <summary>
    /// Адрес получателя.
    /// </summary>
    utility::string_t getDeliveryAddress() const;
    bool deliveryAddressIsSet() const;
    void unsetDeliveryAddress();

    void setDeliveryAddress(const utility::string_t& value);

    /// <summary>
    /// Дата отгрузки в формате &#x60;dd.MM.yyyy&#x60;.
    /// </summary>
    utility::string_t getShipmentDate() const;
    bool shipmentDateIsSet() const;
    void unsetShipmentDate();

    void setShipmentDate(const utility::string_t& value);


protected:
    utility::string_t m_Url;
    bool m_UrlIsSet;
    utility::string_t m_SupplierName;
    bool m_SupplierNameIsSet;
    utility::string_t m_DeliveryServiceName;
    bool m_DeliveryServiceNameIsSet;
    int64_t m_OrderId;
    bool m_OrderIdIsSet;
    utility::string_t m_OrderNum;
    bool m_OrderNumIsSet;
    utility::string_t m_RecipientName;
    bool m_RecipientNameIsSet;
    int64_t m_BoxId;
    bool m_BoxIdIsSet;
    utility::string_t m_FulfilmentId;
    bool m_FulfilmentIdIsSet;
    utility::string_t m_Place;
    bool m_PlaceIsSet;
    utility::string_t m_Weight;
    bool m_WeightIsSet;
    utility::string_t m_DeliveryServiceId;
    bool m_DeliveryServiceIdIsSet;
    utility::string_t m_DeliveryAddress;
    bool m_DeliveryAddressIsSet;
    utility::string_t m_ShipmentDate;
    bool m_ShipmentDateIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ParcelBoxLabelDTO_H_ */
