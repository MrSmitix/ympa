/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrderLabelDTO.h
 *
 * Данные для печати ярлыка.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_OrderLabelDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_OrderLabelDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/ParcelBoxLabelDTO.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class ParcelBoxLabelDTO;


/// <summary>
/// Данные для печати ярлыка.
/// </summary>
class  OrderLabelDTO
    : public ModelBase
{
public:
    OrderLabelDTO();
    virtual ~OrderLabelDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OrderLabelDTO members

    /// <summary>
    /// Идентификатор заказа.
    /// </summary>
    int64_t getOrderId() const;
    bool orderIdIsSet() const;
    void unsetOrderId();

    void setOrderId(int64_t value);

    /// <summary>
    /// Количество коробок в заказе.
    /// </summary>
    int32_t getPlacesNumber() const;
    bool placesNumberIsSet() const;
    void unsetPlacesNumber();

    void setPlacesNumber(int32_t value);

    /// <summary>
    /// URL файла с ярлыками‑наклейками на все коробки в заказе.  Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/labels](../../reference/orders/generateOrderLabels.md). 
    /// </summary>
    utility::string_t getUrl() const;
    bool urlIsSet() const;
    void unsetUrl();

    void setUrl(const utility::string_t& value);

    /// <summary>
    /// Информация на ярлыке.
    /// </summary>
    std::vector<std::shared_ptr<ParcelBoxLabelDTO>>& getParcelBoxLabels();
    bool parcelBoxLabelsIsSet() const;
    void unsetParcelBoxLabels();

    void setParcelBoxLabels(const std::vector<std::shared_ptr<ParcelBoxLabelDTO>>& value);


protected:
    int64_t m_OrderId;
    bool m_OrderIdIsSet;
    int32_t m_PlacesNumber;
    bool m_PlacesNumberIsSet;
    utility::string_t m_Url;
    bool m_UrlIsSet;
    std::vector<std::shared_ptr<ParcelBoxLabelDTO>> m_ParcelBoxLabels;
    bool m_ParcelBoxLabelsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_OrderLabelDTO_H_ */
