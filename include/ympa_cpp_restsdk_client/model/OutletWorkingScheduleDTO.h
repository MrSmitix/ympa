/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OutletWorkingScheduleDTO.h
 *
 * Список режимов работы точки продаж. 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_OutletWorkingScheduleDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_OutletWorkingScheduleDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/OutletWorkingScheduleItemDTO.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class OutletWorkingScheduleItemDTO;


/// <summary>
/// Список режимов работы точки продаж. 
/// </summary>
class  OutletWorkingScheduleDTO
    : public ModelBase
{
public:
    OutletWorkingScheduleDTO();
    virtual ~OutletWorkingScheduleDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OutletWorkingScheduleDTO members

    /// <summary>
    /// Признак, работает ли точка продаж в дни государственных праздников.  Возможные значения:  * &#x60;false&#x60; — точка продаж не работает в дни государственных праздников. * &#x60;true&#x60; — точка продаж работает в дни государственных праздников. 
    /// </summary>
    bool isWorkInHoliday() const;
    bool workInHolidayIsSet() const;
    void unsetWorkInHoliday();

    void setWorkInHoliday(bool value);

    /// <summary>
    /// Список расписаний работы точки продаж. 
    /// </summary>
    std::vector<std::shared_ptr<OutletWorkingScheduleItemDTO>>& getScheduleItems();
    bool scheduleItemsIsSet() const;
    void unsetScheduleItems();

    void setScheduleItems(const std::vector<std::shared_ptr<OutletWorkingScheduleItemDTO>>& value);


protected:
    bool m_WorkInHoliday;
    bool m_WorkInHolidayIsSet;
    std::vector<std::shared_ptr<OutletWorkingScheduleItemDTO>> m_ScheduleItems;
    bool m_ScheduleItemsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_OutletWorkingScheduleDTO_H_ */
