/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GoodsStatsGoodsDTO.h
 *
 * Информация о товаре.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_GoodsStatsGoodsDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_GoodsStatsGoodsDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/TariffDTO.h"
#include <cpprest/details/basic_types.h>
#include "ympa_cpp_restsdk_client/model/GoodsStatsWarehouseDTO.h"
#include "ympa_cpp_restsdk_client/model/GoodsStatsWeightDimensionsDTO.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class GoodsStatsWeightDimensionsDTO;
class GoodsStatsWarehouseDTO;
class TariffDTO;


/// <summary>
/// Информация о товаре.
/// </summary>
class  GoodsStatsGoodsDTO
    : public ModelBase
{
public:
    GoodsStatsGoodsDTO();
    virtual ~GoodsStatsGoodsDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// GoodsStatsGoodsDTO members

    /// <summary>
    /// Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
    /// </summary>
    utility::string_t getShopSku() const;
    bool shopSkuIsSet() const;
    void unsetShopSku();

    void setShopSku(const utility::string_t& value);

    /// <summary>
    /// SKU на Маркете.
    /// </summary>
    int64_t getMarketSku() const;
    bool marketSkuIsSet() const;
    void unsetMarketSku();

    void setMarketSku(int64_t value);

    /// <summary>
    /// Название товара.
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// Цена на товар в валюте, которая установлена [в кабинете продавца на Маркете](https://partner.market.yandex.ru/).
    /// </summary>
    double getPrice() const;
    bool priceIsSet() const;
    void unsetPrice();

    void setPrice(double value);

    /// <summary>
    /// Идентификатор категории товара на Маркете.
    /// </summary>
    int64_t getCategoryId() const;
    bool categoryIdIsSet() const;
    void unsetCategoryId();

    void setCategoryId(int64_t value);

    /// <summary>
    /// Название категории товара на Маркете.
    /// </summary>
    utility::string_t getCategoryName() const;
    bool categoryNameIsSet() const;
    void unsetCategoryName();

    void setCategoryName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<GoodsStatsWeightDimensionsDTO> getWeightDimensions() const;
    bool weightDimensionsIsSet() const;
    void unsetWeightDimensions();

    void setWeightDimensions(const std::shared_ptr<GoodsStatsWeightDimensionsDTO>& value);

    /// <summary>
    /// Информация о складах, на которых хранится товар.  Параметр не приходит, если товара нет ни на одном складе. 
    /// </summary>
    std::vector<std::shared_ptr<GoodsStatsWarehouseDTO>>& getWarehouses();
    bool warehousesIsSet() const;
    void unsetWarehouses();

    void setWarehouses(const std::vector<std::shared_ptr<GoodsStatsWarehouseDTO>>& value);

    /// <summary>
    /// Информация о тарифах, по которым нужно заплатить за услуги Маркета.  По некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели FBS стоимость услуги &#x60;SORTING&#x60; (обработка заказа) зависит от способа отгрузки и количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/). 
    /// </summary>
    std::vector<std::shared_ptr<TariffDTO>>& getTariffs();
    bool tariffsIsSet() const;
    void unsetTariffs();

    void setTariffs(const std::vector<std::shared_ptr<TariffDTO>>& value);

    /// <summary>
    /// Ссылки (URL) изображений товара в хорошем качестве.
    /// </summary>
    std::vector<utility::string_t>& getPictures();
    bool picturesIsSet() const;
    void unsetPictures();

    void setPictures(const std::vector<utility::string_t>& value);


protected:
    utility::string_t m_ShopSku;
    bool m_ShopSkuIsSet;
    int64_t m_MarketSku;
    bool m_MarketSkuIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    double m_Price;
    bool m_PriceIsSet;
    int64_t m_CategoryId;
    bool m_CategoryIdIsSet;
    utility::string_t m_CategoryName;
    bool m_CategoryNameIsSet;
    std::shared_ptr<GoodsStatsWeightDimensionsDTO> m_WeightDimensions;
    bool m_WeightDimensionsIsSet;
    std::vector<std::shared_ptr<GoodsStatsWarehouseDTO>> m_Warehouses;
    bool m_WarehousesIsSet;
    std::vector<std::shared_ptr<TariffDTO>> m_Tariffs;
    bool m_TariffsIsSet;
    std::vector<utility::string_t> m_Pictures;
    bool m_PicturesIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_GoodsStatsGoodsDTO_H_ */
