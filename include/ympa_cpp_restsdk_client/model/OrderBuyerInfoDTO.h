/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrderBuyerInfoDTO.h
 *
 * Информация о покупателе и его номере телефона.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_OrderBuyerInfoDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_OrderBuyerInfoDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/OrderBuyerType.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Информация о покупателе и его номере телефона.
/// </summary>
class  OrderBuyerInfoDTO
    : public ModelBase
{
public:
    OrderBuyerInfoDTO();
    virtual ~OrderBuyerInfoDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OrderBuyerInfoDTO members

    /// <summary>
    /// Идентификатор покупателя.
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// Фамилия покупателя.
    /// </summary>
    utility::string_t getLastName() const;
    bool lastNameIsSet() const;
    void unsetLastName();

    void setLastName(const utility::string_t& value);

    /// <summary>
    /// Имя покупателя.
    /// </summary>
    utility::string_t getFirstName() const;
    bool firstNameIsSet() const;
    void unsetFirstName();

    void setFirstName(const utility::string_t& value);

    /// <summary>
    /// Отчество покупателя.
    /// </summary>
    utility::string_t getMiddleName() const;
    bool middleNameIsSet() const;
    void unsetMiddleName();

    void setMiddleName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<OrderBuyerType> getType() const;
    bool typeIsSet() const;
    void unsetType();

    void setType(const std::shared_ptr<OrderBuyerType>& value);

    /// <summary>
    /// Подменный номер телефона покупателя. Подробнее о таких номерах читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/orders/dbs/call#fake-number).  Формат номера: &#x60;+&lt;код_страны&gt;&lt;код_региона&gt;&lt;номер_телефона&gt;&#x60;. 
    /// </summary>
    utility::string_t getPhone() const;
    bool phoneIsSet() const;
    void unsetPhone();

    void setPhone(const utility::string_t& value);


protected:
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_LastName;
    bool m_LastNameIsSet;
    utility::string_t m_FirstName;
    bool m_FirstNameIsSet;
    utility::string_t m_MiddleName;
    bool m_MiddleNameIsSet;
    std::shared_ptr<OrderBuyerType> m_Type;
    bool m_TypeIsSet;
    utility::string_t m_Phone;
    bool m_PhoneIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_OrderBuyerInfoDTO_H_ */
