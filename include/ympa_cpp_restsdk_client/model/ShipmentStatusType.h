/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ShipmentStatusType.h
 *
 * Статус отгрузки:  * &#x60;OUTBOUND_CREATED&#x60; — формируется. * &#x60;OUTBOUND_READY_FOR_CONFIRMATION&#x60; — можно обрабатывать. * &#x60;OUTBOUND_CONFIRMED&#x60; — подтверждена и готова к отправке. * &#x60;OUTBOUND_SIGNED&#x60; — по ней подписан электронный акт приема-передачи. * &#x60;ACCEPTED&#x60; — принята в сортировочном центре или пункте приема. * &#x60;ACCEPTED_WITH_DISCREPANCIES&#x60; — принята с расхождениями. * &#x60;FINISHED&#x60; — завершена. * &#x60;ERROR&#x60; — отменена из-за ошибки. 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ShipmentStatusType_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ShipmentStatusType_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"


namespace org {
namespace openapitools {
namespace client {
namespace model {


class  ShipmentStatusType
    : public ModelBase
{
public:
    ShipmentStatusType();
    virtual ~ShipmentStatusType();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    enum class eShipmentStatusType
    {
        ShipmentStatusType_OUTBOUND_CREATED,
        ShipmentStatusType_OUTBOUND_READY_FOR_CONFIRMATION,
        ShipmentStatusType_OUTBOUND_CONFIRMED,
        ShipmentStatusType_OUTBOUND_SIGNED,
        ShipmentStatusType_FINISHED,
        ShipmentStatusType_ACCEPTED,
        ShipmentStatusType_ACCEPTED_WITH_DISCREPANCIES,
        ShipmentStatusType_ERROR,
    };

    eShipmentStatusType getValue() const;
    void setValue(eShipmentStatusType const value);

    protected:
        eShipmentStatusType m_value;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ShipmentStatusType_H_ */
