/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CampaignDTO.h
 *
 * Информация о магазине.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CampaignDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CampaignDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/BusinessDTO.h"
#include <cpprest/details/basic_types.h>
#include "ympa_cpp_restsdk_client/model/PlacementType.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class BusinessDTO;


/// <summary>
/// Информация о магазине.
/// </summary>
class  CampaignDTO
    : public ModelBase
{
public:
    CampaignDTO();
    virtual ~CampaignDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CampaignDTO members

    /// <summary>
    /// URL магазина.
    /// </summary>
    utility::string_t getDomain() const;
    bool domainIsSet() const;
    void unsetDomain();

    void setDomain(const utility::string_t& value);

    /// <summary>
    /// Идентификатор кампании.
    /// </summary>
    int64_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(int64_t value);

    /// <summary>
    /// Идентификатор плательщика в Яндекс Балансе.
    /// </summary>
    int64_t getClientId() const;
    bool clientIdIsSet() const;
    void unsetClientId();

    void setClientId(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<BusinessDTO> getBusiness() const;
    bool businessIsSet() const;
    void unsetBusiness();

    void setBusiness(const std::shared_ptr<BusinessDTO>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<PlacementType> getPlacementType() const;
    bool placementTypeIsSet() const;
    void unsetPlacementType();

    void setPlacementType(const std::shared_ptr<PlacementType>& value);


protected:
    utility::string_t m_Domain;
    bool m_DomainIsSet;
    int64_t m_Id;
    bool m_IdIsSet;
    int64_t m_ClientId;
    bool m_ClientIdIsSet;
    std::shared_ptr<BusinessDTO> m_Business;
    bool m_BusinessIsSet;
    std::shared_ptr<PlacementType> m_PlacementType;
    bool m_PlacementTypeIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CampaignDTO_H_ */
