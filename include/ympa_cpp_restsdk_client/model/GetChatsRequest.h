/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GetChatsRequest.h
 *
 * Фильтры по чатам, которые нужно вернуть. 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_GetChatsRequest_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_GetChatsRequest_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/ChatType.h"
#include "ympa_cpp_restsdk_client/model/ChatStatusType.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Фильтры по чатам, которые нужно вернуть. 
/// </summary>
class  GetChatsRequest
    : public ModelBase
{
public:
    GetChatsRequest();
    virtual ~GetChatsRequest();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// GetChatsRequest members

    /// <summary>
    /// Фильтр по идентификаторам заказов на Маркете.
    /// </summary>
    std::vector<int64_t>& getOrderIds();
    bool orderIdsIsSet() const;
    void unsetOrderIds();

    void setOrderIds(std::vector<int64_t> value);

    /// <summary>
    /// Фильтр по типам чатов.
    /// </summary>
    std::vector<std::shared_ptr<ChatType>>& getTypes();
    bool typesIsSet() const;
    void unsetTypes();

    void setTypes(const std::vector<std::shared_ptr<ChatType>>& value);

    /// <summary>
    /// Фильтр по статусам чатов.
    /// </summary>
    std::vector<std::shared_ptr<ChatStatusType>>& getStatuses();
    bool statusesIsSet() const;
    void unsetStatuses();

    void setStatuses(const std::vector<std::shared_ptr<ChatStatusType>>& value);


protected:
    std::vector<int64_t> m_OrderIds;
    bool m_OrderIdsIsSet;
    std::vector<std::shared_ptr<ChatType>> m_Types;
    bool m_TypesIsSet;
    std::vector<std::shared_ptr<ChatStatusType>> m_Statuses;
    bool m_StatusesIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_GetChatsRequest_H_ */
