/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GetQualityRatingRequest.h
 *
 * Запрос информации по индексу качества.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_GetQualityRatingRequest_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_GetQualityRatingRequest_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <set>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Запрос информации по индексу качества.
/// </summary>
class  GetQualityRatingRequest
    : public ModelBase
{
public:
    GetQualityRatingRequest();
    virtual ~GetQualityRatingRequest();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// GetQualityRatingRequest members

    /// <summary>
    /// Начало периода.  Формат даты: &#x60;ГГГГ‑ММ‑ДД&#x60;.  Не может быть раньше 30 дней от текущей даты. 
    /// </summary>
    utility::datetime getDateFrom() const;
    bool dateFromIsSet() const;
    void unsetDateFrom();

    void setDateFrom(const utility::datetime& value);

    /// <summary>
    /// Конец периода.  Формат даты: &#x60;ГГГГ‑ММ‑ДД&#x60;.  Не может быть позже текущей даты. 
    /// </summary>
    utility::datetime getDateTo() const;
    bool dateToIsSet() const;
    void unsetDateTo();

    void setDateTo(const utility::datetime& value);

    /// <summary>
    /// Список идентификаторов магазинов.
    /// </summary>
    std::set<int64_t>& getCampaignIds();
    bool campaignIdsIsSet() const;
    void unsetCampaignIds();

    void setCampaignIds(std::set<int64_t> value);


protected:
    utility::datetime m_DateFrom;
    bool m_DateFromIsSet;
    utility::datetime m_DateTo;
    bool m_DateToIsSet;
    std::set<int64_t> m_CampaignIds;
    bool m_CampaignIdsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_GetQualityRatingRequest_H_ */
