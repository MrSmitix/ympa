/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * EacVerificationResultDTO.h
 *
 * Результат выполнения запроса.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_EacVerificationResultDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_EacVerificationResultDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/EacVerificationStatusType.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Результат выполнения запроса.
/// </summary>
class  EacVerificationResultDTO
    : public ModelBase
{
public:
    EacVerificationResultDTO();
    virtual ~EacVerificationResultDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// EacVerificationResultDTO members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<EacVerificationStatusType> getVerificationResult() const;
    bool verificationResultIsSet() const;
    void unsetVerificationResult();

    void setVerificationResult(const std::shared_ptr<EacVerificationStatusType>& value);

    /// <summary>
    /// Количество оставшихся попыток проверки кода.  Возвращается, если магазин отправил некорректный код.  Когда все попытки будут исчерпаны, код обновится. 
    /// </summary>
    int32_t getAttemptsLeft() const;
    bool attemptsLeftIsSet() const;
    void unsetAttemptsLeft();

    void setAttemptsLeft(int32_t value);


protected:
    std::shared_ptr<EacVerificationStatusType> m_VerificationResult;
    bool m_VerificationResultIsSet;
    int32_t m_AttemptsLeft;
    bool m_AttemptsLeftIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_EacVerificationResultDTO_H_ */
