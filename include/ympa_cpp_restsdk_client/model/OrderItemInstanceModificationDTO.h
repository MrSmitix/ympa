/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrderItemInstanceModificationDTO.h
 *
 * Позиция в корзине, требующая маркировки.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_OrderItemInstanceModificationDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_OrderItemInstanceModificationDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/BriefOrderItemInstanceDTO.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class BriefOrderItemInstanceDTO;


/// <summary>
/// Позиция в корзине, требующая маркировки.
/// </summary>
class  OrderItemInstanceModificationDTO
    : public ModelBase
{
public:
    OrderItemInstanceModificationDTO();
    virtual ~OrderItemInstanceModificationDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OrderItemInstanceModificationDTO members

    /// <summary>
    /// Идентификатор товара в заказе.  Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр &#x60;id&#x60; в &#x60;items&#x60;. 
    /// </summary>
    int64_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(int64_t value);

    /// <summary>
    /// Список кодов маркировки единиц товара. 
    /// </summary>
    std::vector<std::shared_ptr<BriefOrderItemInstanceDTO>>& getInstances();
    bool instancesIsSet() const;
    void unsetInstances();

    void setInstances(const std::vector<std::shared_ptr<BriefOrderItemInstanceDTO>>& value);


protected:
    int64_t m_Id;
    bool m_IdIsSet;
    std::vector<std::shared_ptr<BriefOrderItemInstanceDTO>> m_Instances;
    bool m_InstancesIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_OrderItemInstanceModificationDTO_H_ */
