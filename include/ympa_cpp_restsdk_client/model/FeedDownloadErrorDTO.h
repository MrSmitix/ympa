/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * FeedDownloadErrorDTO.h
 *
 * Информация об ошибке при загрузке прайс-листа. Выводится, если параметр &#x60;download status&#x3D;ERROR&#x60;. 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_FeedDownloadErrorDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_FeedDownloadErrorDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "ympa_cpp_restsdk_client/model/FeedDownloadErrorType.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Информация об ошибке при загрузке прайс-листа. Выводится, если параметр &#x60;download status&#x3D;ERROR&#x60;. 
/// </summary>
class  FeedDownloadErrorDTO
    : public ModelBase
{
public:
    FeedDownloadErrorDTO();
    virtual ~FeedDownloadErrorDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// FeedDownloadErrorDTO members

    /// <summary>
    /// HTTP-код ошибки индексации прайс-листа. Выводится, если &#x60;type&#x3D;DOWNLOAD_HTTP_ERROR&#x60;. 
    /// </summary>
    int32_t getHttpStatusCode() const;
    bool httpStatusCodeIsSet() const;
    void unsetHttpStatusCode();

    void setHttpStatusCode(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<FeedDownloadErrorType> getType() const;
    bool typeIsSet() const;
    void unsetType();

    void setType(const std::shared_ptr<FeedDownloadErrorType>& value);

    /// <summary>
    /// Описание ошибки. Выводится, если &#x60;type&#x3D;DOWNLOAD_ERROR&#x60;. 
    /// </summary>
    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();

    void setDescription(const utility::string_t& value);


protected:
    int32_t m_HttpStatusCode;
    bool m_HttpStatusCodeIsSet;
    std::shared_ptr<FeedDownloadErrorType> m_Type;
    bool m_TypeIsSet;
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_FeedDownloadErrorDTO_H_ */
