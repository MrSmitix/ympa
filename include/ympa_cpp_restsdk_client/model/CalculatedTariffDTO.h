/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CalculatedTariffDTO.h
 *
 * Информация об услугах Маркета.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CalculatedTariffDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CalculatedTariffDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include <vector>
#include "ympa_cpp_restsdk_client/model/CalculatedTariffType.h"
#include "ympa_cpp_restsdk_client/model/TariffParameterDTO.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class TariffParameterDTO;


/// <summary>
/// Информация об услугах Маркета.
/// </summary>
class  CalculatedTariffDTO
    : public ModelBase
{
public:
    CalculatedTariffDTO();
    virtual ~CalculatedTariffDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CalculatedTariffDTO members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CalculatedTariffType> getType() const;
    bool typeIsSet() const;
    void unsetType();

    void setType(const std::shared_ptr<CalculatedTariffType>& value);

    /// <summary>
    /// Стоимость услуги в рублях.
    /// </summary>
    double getAmount() const;
    bool amountIsSet() const;
    void unsetAmount();

    void setAmount(double value);

    /// <summary>
    /// Параметры расчета тарифа.
    /// </summary>
    std::vector<std::shared_ptr<TariffParameterDTO>>& getParameters();
    bool parametersIsSet() const;
    void unsetParameters();

    void setParameters(const std::vector<std::shared_ptr<TariffParameterDTO>>& value);


protected:
    std::shared_ptr<CalculatedTariffType> m_Type;
    bool m_TypeIsSet;
    double m_Amount;
    bool m_AmountIsSet;
    std::vector<std::shared_ptr<TariffParameterDTO>> m_Parameters;
    bool m_ParametersIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CalculatedTariffDTO_H_ */
