/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SetReturnDecisionRequest.h
 *
 * Решения по позиции в возврате.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_SetReturnDecisionRequest_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_SetReturnDecisionRequest_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/ReturnRequestDecisionType.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Решения по позиции в возврате.
/// </summary>
class  SetReturnDecisionRequest
    : public ModelBase
{
public:
    SetReturnDecisionRequest();
    virtual ~SetReturnDecisionRequest();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SetReturnDecisionRequest members

    /// <summary>
    /// Идентификатор товара в возврате.
    /// </summary>
    int64_t getReturnItemId() const;
    bool returnItemIdIsSet() const;
    void unsetReturnItemId();

    void setReturnItemId(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ReturnRequestDecisionType> getDecisionType() const;
    bool decisionTypeIsSet() const;
    void unsetDecisionType();

    void setDecisionType(const std::shared_ptr<ReturnRequestDecisionType>& value);

    /// <summary>
    /// Комментарий к решению. Укажите:  * для &#x60;REFUND_MONEY_INCLUDING_SHIPMENT&#x60;— стоимость обратной пересылки;  * для &#x60;REPAIR&#x60; — когда вы устраните недостатки товара;  * для &#x60;DECLINE_REFUND&#x60; — причину отказа;  * для &#x60;OTHER_DECISION&#x60; — какое решение вы предлагаете. 
    /// </summary>
    utility::string_t getComment() const;
    bool commentIsSet() const;
    void unsetComment();

    void setComment(const utility::string_t& value);


protected:
    int64_t m_ReturnItemId;
    bool m_ReturnItemIdIsSet;
    std::shared_ptr<ReturnRequestDecisionType> m_DecisionType;
    bool m_DecisionTypeIsSet;
    utility::string_t m_Comment;
    bool m_CommentIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_SetReturnDecisionRequest_H_ */
