/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrdersStatsCommissionDTO.h
 *
 * Информация о стоимости услуг.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_OrdersStatsCommissionDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_OrdersStatsCommissionDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/OrdersStatsCommissionType.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// Информация о стоимости услуг.
/// </summary>
class  OrdersStatsCommissionDTO
    : public ModelBase
{
public:
    OrdersStatsCommissionDTO();
    virtual ~OrdersStatsCommissionDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OrdersStatsCommissionDTO members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<OrdersStatsCommissionType> getType() const;
    bool typeIsSet() const;
    void unsetType();

    void setType(const std::shared_ptr<OrdersStatsCommissionType>& value);

    /// <summary>
    /// Сумма в рублях, которая была выставлена в момент создания заказа и которую нужно оплатить. Точность — два знака после запятой. 
    /// </summary>
    double getActual() const;
    bool actualIsSet() const;
    void unsetActual();

    void setActual(double value);


protected:
    std::shared_ptr<OrdersStatsCommissionType> m_Type;
    bool m_TypeIsSet;
    double m_Actual;
    bool m_ActualIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_OrdersStatsCommissionDTO_H_ */
