/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OfferPriceResponseDTO.h
 *
 * Информация об установленной цене на товар.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_OfferPriceResponseDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_OfferPriceResponseDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/PriceDTO.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class PriceDTO;


/// <summary>
/// Информация об установленной цене на товар.
/// </summary>
class  OfferPriceResponseDTO
    : public ModelBase
{
public:
    OfferPriceResponseDTO();
    virtual ~OfferPriceResponseDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OfferPriceResponseDTO members

    /// <summary>
    /// Идентификатор предложения из прайс-листа.
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<PriceDTO> getPrice() const;
    bool priceIsSet() const;
    void unsetPrice();

    void setPrice(const std::shared_ptr<PriceDTO>& value);

    /// <summary>
    /// SKU на Маркете.
    /// </summary>
    int64_t getMarketSku() const;
    bool marketSkuIsSet() const;
    void unsetMarketSku();

    void setMarketSku(int64_t value);

    /// <summary>
    /// Дата и время последнего обновления цены на товар.
    /// </summary>
    utility::datetime getUpdatedAt() const;
    bool updatedAtIsSet() const;
    void unsetUpdatedAt();

    void setUpdatedAt(const utility::datetime& value);


protected:
    utility::string_t m_Id;
    bool m_IdIsSet;
    std::shared_ptr<PriceDTO> m_Price;
    bool m_PriceIsSet;
    int64_t m_MarketSku;
    bool m_MarketSkuIsSet;
    utility::datetime m_UpdatedAt;
    bool m_UpdatedAtIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_OfferPriceResponseDTO_H_ */
