/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GoodsStatsWarehouseDTO.h
 *
 * Информация о складе.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_GoodsStatsWarehouseDTO_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_GoodsStatsWarehouseDTO_H_


#include "ympa_cpp_restsdk_client/ModelBase.h"

#include "ympa_cpp_restsdk_client/model/WarehouseStockDTO.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class WarehouseStockDTO;


/// <summary>
/// Информация о складе.
/// </summary>
class  GoodsStatsWarehouseDTO
    : public ModelBase
{
public:
    GoodsStatsWarehouseDTO();
    virtual ~GoodsStatsWarehouseDTO();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// GoodsStatsWarehouseDTO members

    /// <summary>
    /// Идентификатор склада.
    /// </summary>
    int64_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(int64_t value);

    /// <summary>
    /// Название склада.
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// Информация об остатках товаров на складе.
    /// </summary>
    std::vector<std::shared_ptr<WarehouseStockDTO>>& getStocks();
    bool stocksIsSet() const;
    void unsetStocks();

    void setStocks(const std::vector<std::shared_ptr<WarehouseStockDTO>>& value);


protected:
    int64_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    std::vector<std::shared_ptr<WarehouseStockDTO>> m_Stocks;
    bool m_StocksIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_GoodsStatsWarehouseDTO_H_ */
