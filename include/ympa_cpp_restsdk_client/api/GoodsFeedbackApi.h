/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GoodsFeedbackApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_GoodsFeedbackApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_GoodsFeedbackApi_H_



#include "ympa_cpp_restsdk_client/ApiClient.h"

#include "ympa_cpp_restsdk_client/model/ApiClientDataErrorResponse.h"
#include "ympa_cpp_restsdk_client/model/ApiForbiddenErrorResponse.h"
#include "ympa_cpp_restsdk_client/model/ApiLimitErrorResponse.h"
#include "ympa_cpp_restsdk_client/model/ApiNotFoundErrorResponse.h"
#include "ympa_cpp_restsdk_client/model/ApiServerErrorResponse.h"
#include "ympa_cpp_restsdk_client/model/ApiUnauthorizedErrorResponse.h"
#include "ympa_cpp_restsdk_client/model/DeleteGoodsFeedbackCommentRequest.h"
#include "ympa_cpp_restsdk_client/model/EmptyApiResponse.h"
#include "ympa_cpp_restsdk_client/model/GetGoodsFeedbackCommentsRequest.h"
#include "ympa_cpp_restsdk_client/model/GetGoodsFeedbackCommentsResponse.h"
#include "ympa_cpp_restsdk_client/model/GetGoodsFeedbackRequest.h"
#include "ympa_cpp_restsdk_client/model/GetGoodsFeedbackResponse.h"
#include "ympa_cpp_restsdk_client/model/SkipGoodsFeedbackReactionRequest.h"
#include "ympa_cpp_restsdk_client/model/UpdateGoodsFeedbackCommentRequest.h"
#include "ympa_cpp_restsdk_client/model/UpdateGoodsFeedbackCommentResponse.h"
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  GoodsFeedbackApi 
{
public:

    explicit GoodsFeedbackApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~GoodsFeedbackApi();

    /// <summary>
    /// Удаление комментария к отзыву
    /// </summary>
    /// <remarks>
    /// Удаляет комментарий магазина.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
    /// </remarks>
    /// <param name="businessId">Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </param>
    /// <param name="deleteGoodsFeedbackCommentRequest"></param>
    pplx::task<std::shared_ptr<EmptyApiResponse>> deleteGoodsFeedbackComment(
        int64_t businessId,
        std::shared_ptr<DeleteGoodsFeedbackCommentRequest> deleteGoodsFeedbackCommentRequest
    ) const;
    /// <summary>
    /// Получение комментариев к отзыву
    /// </summary>
    /// <remarks>
    /// Возвращает комментарии к отзыву.  Результаты возвращаются постранично, одна страница содержит не более 20 комментариев.  Комментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в &#x60;page_token&#x60;, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
    /// </remarks>
    /// <param name="businessId">Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </param>
    /// <param name="getGoodsFeedbackCommentsRequest"></param>
    /// <param name="pageToken">Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.  (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">Количество значений на одной странице.  (optional, default to 0)</param>
    pplx::task<std::shared_ptr<GetGoodsFeedbackCommentsResponse>> getGoodsFeedbackComments(
        int64_t businessId,
        std::shared_ptr<GetGoodsFeedbackCommentsRequest> getGoodsFeedbackCommentsRequest,
        boost::optional<utility::string_t> pageToken,
        boost::optional<int32_t> limit
    ) const;
    /// <summary>
    /// Получение отзывов о товарах продавца
    /// </summary>
    /// <remarks>
    /// Возвращает все отзывы о товарах продавца по указанным фильтрам.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов.  Отзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в &#x60;page_token&#x60;, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
    /// </remarks>
    /// <param name="businessId">Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </param>
    /// <param name="pageToken">Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.  (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">Количество значений на одной странице.  (optional, default to 0)</param>
    /// <param name="getGoodsFeedbackRequest"> (optional)</param>
    pplx::task<std::shared_ptr<GetGoodsFeedbackResponse>> getGoodsFeedbacks(
        int64_t businessId,
        boost::optional<utility::string_t> pageToken,
        boost::optional<int32_t> limit,
        boost::optional<std::shared_ptr<GetGoodsFeedbackRequest>> getGoodsFeedbackRequest
    ) const;
    /// <summary>
    /// Отказ от ответа на отзывы
    /// </summary>
    /// <remarks>
    /// Пропускает отзывы — они больше не будут возвращаться в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
    /// </remarks>
    /// <param name="businessId">Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </param>
    /// <param name="skipGoodsFeedbackReactionRequest"></param>
    pplx::task<std::shared_ptr<EmptyApiResponse>> skipGoodsFeedbacksReaction(
        int64_t businessId,
        std::shared_ptr<SkipGoodsFeedbackReactionRequest> skipGoodsFeedbackReactionRequest
    ) const;
    /// <summary>
    /// Добавление нового или изменение созданного комментария
    /// </summary>
    /// <remarks>
    /// Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.  Для создания комментария к отзыву передайте только идентификатор отзыва &#x60;feedbackId&#x60;.  Чтобы добавить комментарий к другому комментарию, передайте:  * &#x60;feedbackId&#x60; — идентификатор отзыва; * &#x60;comment.parentId&#x60; — идентификатор родительского комментария.  Чтобы изменить комментарий, передайте:  * &#x60;feedbackId&#x60;— идентификатор отзыва; * &#x60;comment.id&#x60; — идентификатор комментария, который нужно изменить.  Если передать одновременно &#x60;comment.parentId&#x60; и &#x60;comment.id&#x60;, будет изменен существующий комментарий.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
    /// </remarks>
    /// <param name="businessId">Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </param>
    /// <param name="updateGoodsFeedbackCommentRequest"></param>
    pplx::task<std::shared_ptr<UpdateGoodsFeedbackCommentResponse>> updateGoodsFeedbackComment(
        int64_t businessId,
        std::shared_ptr<UpdateGoodsFeedbackCommentRequest> updateGoodsFeedbackCommentRequest
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_GoodsFeedbackApi_H_ */

