/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * PromosApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_PromosApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_PromosApi_H_



#include "ympa_cpp_restsdk_client/ApiClient.h"

#include "ympa_cpp_restsdk_client/model/ApiClientDataErrorResponse.h"
#include "ympa_cpp_restsdk_client/model/ApiForbiddenErrorResponse.h"
#include "ympa_cpp_restsdk_client/model/ApiLimitErrorResponse.h"
#include "ympa_cpp_restsdk_client/model/ApiNotFoundErrorResponse.h"
#include "ympa_cpp_restsdk_client/model/ApiServerErrorResponse.h"
#include "ympa_cpp_restsdk_client/model/ApiUnauthorizedErrorResponse.h"
#include "ympa_cpp_restsdk_client/model/DeletePromoOffersRequest.h"
#include "ympa_cpp_restsdk_client/model/DeletePromoOffersResponse.h"
#include "ympa_cpp_restsdk_client/model/GetPromoOffersRequest.h"
#include "ympa_cpp_restsdk_client/model/GetPromoOffersResponse.h"
#include "ympa_cpp_restsdk_client/model/GetPromosRequest.h"
#include "ympa_cpp_restsdk_client/model/GetPromosResponse.h"
#include "ympa_cpp_restsdk_client/model/UpdatePromoOffersRequest.h"
#include "ympa_cpp_restsdk_client/model/UpdatePromoOffersResponse.h"
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  PromosApi 
{
public:

    explicit PromosApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~PromosApi();

    /// <summary>
    /// Удаление товаров из акции
    /// </summary>
    /// <remarks>
    /// Убирает товары из акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-| 
    /// </remarks>
    /// <param name="businessId">Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </param>
    /// <param name="deletePromoOffersRequest"></param>
    pplx::task<std::shared_ptr<DeletePromoOffersResponse>> deletePromoOffers(
        int64_t businessId,
        std::shared_ptr<DeletePromoOffersRequest> deletePromoOffersRequest
    ) const;
    /// <summary>
    /// Получение списка товаров, которые участвуют или могут участвовать в акции
    /// </summary>
    /// <remarks>
    /// Возвращает список товаров, которые участвуют или могут участвовать в акции.  {% note warning %}  В параметре &#x60;limit&#x60; не передавайте значение больше 500.  {% endnote %}  |**⚙️ Лимит:** 10000 запросов в час| |-| 
    /// </remarks>
    /// <param name="businessId">Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </param>
    /// <param name="getPromoOffersRequest"></param>
    /// <param name="pageToken">Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.  (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">Количество значений на одной странице.  (optional, default to 0)</param>
    pplx::task<std::shared_ptr<GetPromoOffersResponse>> getPromoOffers(
        int64_t businessId,
        std::shared_ptr<GetPromoOffersRequest> getPromoOffersRequest,
        boost::optional<utility::string_t> pageToken,
        boost::optional<int32_t> limit
    ) const;
    /// <summary>
    /// Получение списка акций
    /// </summary>
    /// <remarks>
    /// Возвращает информацию об акциях Маркета.  По умолчанию возвращаются акции, в которых продавец участвует или может принять участие.  Чтобы получить текущие или завершенные акции, передайте параметр &#x60;participation&#x60;.  Типы акций, которые возвращаются в ответе:  * прямая скидка; * флеш-акция; * скидка по промокоду.  |**⚙️ Лимит:** 1000 запросов в час| |-| 
    /// </remarks>
    /// <param name="businessId">Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </param>
    /// <param name="getPromosRequest"> (optional)</param>
    pplx::task<std::shared_ptr<GetPromosResponse>> getPromos(
        int64_t businessId,
        boost::optional<std::shared_ptr<GetPromosRequest>> getPromosRequest
    ) const;
    /// <summary>
    /// Добавление товаров в акцию или изменение их цен
    /// </summary>
    /// <remarks>
    /// Добавляет товары в акцию или изменяет цены на товары, которые участвуют в акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-| 
    /// </remarks>
    /// <param name="businessId">Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </param>
    /// <param name="updatePromoOffersRequest"></param>
    pplx::task<std::shared_ptr<UpdatePromoOffersResponse>> updatePromoOffers(
        int64_t businessId,
        std::shared_ptr<UpdatePromoOffersRequest> updatePromoOffersRequest
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_PromosApi_H_ */

