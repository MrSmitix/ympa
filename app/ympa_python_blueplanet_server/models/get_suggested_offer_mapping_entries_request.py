# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.ympa_python_blueplanet_server.models.base_model import Model
from app.ympa_python_blueplanet_server.models.mappings_offer_dto import MappingsOfferDTO  # noqa: F401,E501
from ympa_python_blueplanet_server import util


class GetSuggestedOfferMappingEntriesRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, offers: List[MappingsOfferDTO]=None):  # noqa: E501
        """GetSuggestedOfferMappingEntriesRequest - a model defined in Swagger

        :param offers: The offers of this GetSuggestedOfferMappingEntriesRequest.  # noqa: E501
        :type offers: List[MappingsOfferDTO]
        """
        self.swagger_types = {
            'offers': List[MappingsOfferDTO]
        }

        self.attribute_map = {
            'offers': 'offers'
        }

        self._offers = offers

    @classmethod
    def from_dict(cls, dikt) -> 'GetSuggestedOfferMappingEntriesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetSuggestedOfferMappingEntriesRequest of this GetSuggestedOfferMappingEntriesRequest.  # noqa: E501
        :rtype: GetSuggestedOfferMappingEntriesRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offers(self) -> List[MappingsOfferDTO]:
        """Gets the offers of this GetSuggestedOfferMappingEntriesRequest.

        Список товаров.  # noqa: E501

        :return: The offers of this GetSuggestedOfferMappingEntriesRequest.
        :rtype: List[MappingsOfferDTO]
        """
        return self._offers

    @offers.setter
    def offers(self, offers: List[MappingsOfferDTO]):
        """Sets the offers of this GetSuggestedOfferMappingEntriesRequest.

        Список товаров.  # noqa: E501

        :param offers: The offers of this GetSuggestedOfferMappingEntriesRequest.
        :type offers: List[MappingsOfferDTO]
        """
        if offers is None:
            raise ValueError("Invalid value for `offers`, must not be `None`")  # noqa: E501
        if offers is not None and len(offers) > 500:
            raise ValueError("Invalid value for `offers`, number of items must be less than or equal to `500`")  # noqa: E501
        if offers is not None and len(offers) < 1:
            raise ValueError("Invalid value for `offers`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._offers = offers
