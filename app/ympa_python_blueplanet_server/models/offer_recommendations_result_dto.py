# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.ympa_python_blueplanet_server.models.base_model import Model
from app.ympa_python_blueplanet_server.models.offer_recommendation_dto import OfferRecommendationDTO  # noqa: F401,E501
from app.ympa_python_blueplanet_server.models.scrolling_pager_dto import ScrollingPagerDTO  # noqa: F401,E501
from ympa_python_blueplanet_server import util


class OfferRecommendationsResultDTO(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, paging: ScrollingPagerDTO=None, offer_recommendations: List[OfferRecommendationDTO]=None):  # noqa: E501
        """OfferRecommendationsResultDTO - a model defined in Swagger

        :param paging: The paging of this OfferRecommendationsResultDTO.  # noqa: E501
        :type paging: ScrollingPagerDTO
        :param offer_recommendations: The offer_recommendations of this OfferRecommendationsResultDTO.  # noqa: E501
        :type offer_recommendations: List[OfferRecommendationDTO]
        """
        self.swagger_types = {
            'paging': ScrollingPagerDTO,
            'offer_recommendations': List[OfferRecommendationDTO]
        }

        self.attribute_map = {
            'paging': 'paging',
            'offer_recommendations': 'offerRecommendations'
        }

        self._paging = paging
        self._offer_recommendations = offer_recommendations

    @classmethod
    def from_dict(cls, dikt) -> 'OfferRecommendationsResultDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OfferRecommendationsResultDTO of this OfferRecommendationsResultDTO.  # noqa: E501
        :rtype: OfferRecommendationsResultDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def paging(self) -> ScrollingPagerDTO:
        """Gets the paging of this OfferRecommendationsResultDTO.


        :return: The paging of this OfferRecommendationsResultDTO.
        :rtype: ScrollingPagerDTO
        """
        return self._paging

    @paging.setter
    def paging(self, paging: ScrollingPagerDTO):
        """Sets the paging of this OfferRecommendationsResultDTO.


        :param paging: The paging of this OfferRecommendationsResultDTO.
        :type paging: ScrollingPagerDTO
        """

        self._paging = paging

    @property
    def offer_recommendations(self) -> List[OfferRecommendationDTO]:
        """Gets the offer_recommendations of this OfferRecommendationsResultDTO.

        Страница списка товаров.  # noqa: E501

        :return: The offer_recommendations of this OfferRecommendationsResultDTO.
        :rtype: List[OfferRecommendationDTO]
        """
        return self._offer_recommendations

    @offer_recommendations.setter
    def offer_recommendations(self, offer_recommendations: List[OfferRecommendationDTO]):
        """Sets the offer_recommendations of this OfferRecommendationsResultDTO.

        Страница списка товаров.  # noqa: E501

        :param offer_recommendations: The offer_recommendations of this OfferRecommendationsResultDTO.
        :type offer_recommendations: List[OfferRecommendationDTO]
        """
        if offer_recommendations is None:
            raise ValueError("Invalid value for `offer_recommendations`, must not be `None`")  # noqa: E501

        self._offer_recommendations = offer_recommendations
