# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.ympa_python_blueplanet_server.models.base_model import Model
from app.ympa_python_blueplanet_server.models.order_courier_dto import OrderCourierDTO  # noqa: F401,E501
from app.ympa_python_blueplanet_server.models.order_delivery_address_dto import OrderDeliveryAddressDTO  # noqa: F401,E501
from app.ympa_python_blueplanet_server.models.order_delivery_dates_dto import OrderDeliveryDatesDTO  # noqa: F401,E501
from app.ympa_python_blueplanet_server.models.order_delivery_dispatch_type import OrderDeliveryDispatchType  # noqa: F401,E501
from app.ympa_python_blueplanet_server.models.order_delivery_eac_type import OrderDeliveryEacType  # noqa: F401,E501
from app.ympa_python_blueplanet_server.models.order_delivery_partner_type import OrderDeliveryPartnerType  # noqa: F401,E501
from app.ympa_python_blueplanet_server.models.order_delivery_type import OrderDeliveryType  # noqa: F401,E501
from app.ympa_python_blueplanet_server.models.order_lift_type import OrderLiftType  # noqa: F401,E501
from app.ympa_python_blueplanet_server.models.order_shipment_dto import OrderShipmentDTO  # noqa: F401,E501
from app.ympa_python_blueplanet_server.models.order_track_dto import OrderTrackDTO  # noqa: F401,E501
from app.ympa_python_blueplanet_server.models.order_vat_type import OrderVatType  # noqa: F401,E501
from app.ympa_python_blueplanet_server.models.region_dto import RegionDTO  # noqa: F401,E501
from ympa_python_blueplanet_server import util


class OrderDeliveryDTO(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, type: OrderDeliveryType=None, service_name: str=None, price: float=None, delivery_partner_type: OrderDeliveryPartnerType=None, courier: OrderCourierDTO=None, dates: OrderDeliveryDatesDTO=None, region: RegionDTO=None, address: OrderDeliveryAddressDTO=None, vat: OrderVatType=None, delivery_service_id: int=None, lift_type: OrderLiftType=None, lift_price: float=None, outlet_code: str=None, outlet_storage_limit_date: str=None, dispatch_type: OrderDeliveryDispatchType=None, tracks: List[OrderTrackDTO]=None, shipments: List[OrderShipmentDTO]=None, estimated: bool=None, eac_type: OrderDeliveryEacType=None, eac_code: str=None):  # noqa: E501
        """OrderDeliveryDTO - a model defined in Swagger

        :param id: The id of this OrderDeliveryDTO.  # noqa: E501
        :type id: str
        :param type: The type of this OrderDeliveryDTO.  # noqa: E501
        :type type: OrderDeliveryType
        :param service_name: The service_name of this OrderDeliveryDTO.  # noqa: E501
        :type service_name: str
        :param price: The price of this OrderDeliveryDTO.  # noqa: E501
        :type price: float
        :param delivery_partner_type: The delivery_partner_type of this OrderDeliveryDTO.  # noqa: E501
        :type delivery_partner_type: OrderDeliveryPartnerType
        :param courier: The courier of this OrderDeliveryDTO.  # noqa: E501
        :type courier: OrderCourierDTO
        :param dates: The dates of this OrderDeliveryDTO.  # noqa: E501
        :type dates: OrderDeliveryDatesDTO
        :param region: The region of this OrderDeliveryDTO.  # noqa: E501
        :type region: RegionDTO
        :param address: The address of this OrderDeliveryDTO.  # noqa: E501
        :type address: OrderDeliveryAddressDTO
        :param vat: The vat of this OrderDeliveryDTO.  # noqa: E501
        :type vat: OrderVatType
        :param delivery_service_id: The delivery_service_id of this OrderDeliveryDTO.  # noqa: E501
        :type delivery_service_id: int
        :param lift_type: The lift_type of this OrderDeliveryDTO.  # noqa: E501
        :type lift_type: OrderLiftType
        :param lift_price: The lift_price of this OrderDeliveryDTO.  # noqa: E501
        :type lift_price: float
        :param outlet_code: The outlet_code of this OrderDeliveryDTO.  # noqa: E501
        :type outlet_code: str
        :param outlet_storage_limit_date: The outlet_storage_limit_date of this OrderDeliveryDTO.  # noqa: E501
        :type outlet_storage_limit_date: str
        :param dispatch_type: The dispatch_type of this OrderDeliveryDTO.  # noqa: E501
        :type dispatch_type: OrderDeliveryDispatchType
        :param tracks: The tracks of this OrderDeliveryDTO.  # noqa: E501
        :type tracks: List[OrderTrackDTO]
        :param shipments: The shipments of this OrderDeliveryDTO.  # noqa: E501
        :type shipments: List[OrderShipmentDTO]
        :param estimated: The estimated of this OrderDeliveryDTO.  # noqa: E501
        :type estimated: bool
        :param eac_type: The eac_type of this OrderDeliveryDTO.  # noqa: E501
        :type eac_type: OrderDeliveryEacType
        :param eac_code: The eac_code of this OrderDeliveryDTO.  # noqa: E501
        :type eac_code: str
        """
        self.swagger_types = {
            'id': str,
            'type': OrderDeliveryType,
            'service_name': str,
            'price': float,
            'delivery_partner_type': OrderDeliveryPartnerType,
            'courier': OrderCourierDTO,
            'dates': OrderDeliveryDatesDTO,
            'region': RegionDTO,
            'address': OrderDeliveryAddressDTO,
            'vat': OrderVatType,
            'delivery_service_id': int,
            'lift_type': OrderLiftType,
            'lift_price': float,
            'outlet_code': str,
            'outlet_storage_limit_date': str,
            'dispatch_type': OrderDeliveryDispatchType,
            'tracks': List[OrderTrackDTO],
            'shipments': List[OrderShipmentDTO],
            'estimated': bool,
            'eac_type': OrderDeliveryEacType,
            'eac_code': str
        }

        self.attribute_map = {
            'id': 'id',
            'type': 'type',
            'service_name': 'serviceName',
            'price': 'price',
            'delivery_partner_type': 'deliveryPartnerType',
            'courier': 'courier',
            'dates': 'dates',
            'region': 'region',
            'address': 'address',
            'vat': 'vat',
            'delivery_service_id': 'deliveryServiceId',
            'lift_type': 'liftType',
            'lift_price': 'liftPrice',
            'outlet_code': 'outletCode',
            'outlet_storage_limit_date': 'outletStorageLimitDate',
            'dispatch_type': 'dispatchType',
            'tracks': 'tracks',
            'shipments': 'shipments',
            'estimated': 'estimated',
            'eac_type': 'eacType',
            'eac_code': 'eacCode'
        }

        self._id = id
        self._type = type
        self._service_name = service_name
        self._price = price
        self._delivery_partner_type = delivery_partner_type
        self._courier = courier
        self._dates = dates
        self._region = region
        self._address = address
        self._vat = vat
        self._delivery_service_id = delivery_service_id
        self._lift_type = lift_type
        self._lift_price = lift_price
        self._outlet_code = outlet_code
        self._outlet_storage_limit_date = outlet_storage_limit_date
        self._dispatch_type = dispatch_type
        self._tracks = tracks
        self._shipments = shipments
        self._estimated = estimated
        self._eac_type = eac_type
        self._eac_code = eac_code

    @classmethod
    def from_dict(cls, dikt) -> 'OrderDeliveryDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OrderDeliveryDTO of this OrderDeliveryDTO.  # noqa: E501
        :rtype: OrderDeliveryDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this OrderDeliveryDTO.

        Идентификатор доставки, присвоенный магазином.  Указывается, только если магазин передал данный идентификатор в ответе на запрос методом [POST cart](../../pushapi/reference/cart.md).   # noqa: E501

        :return: The id of this OrderDeliveryDTO.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this OrderDeliveryDTO.

        Идентификатор доставки, присвоенный магазином.  Указывается, только если магазин передал данный идентификатор в ответе на запрос методом [POST cart](../../pushapi/reference/cart.md).   # noqa: E501

        :param id: The id of this OrderDeliveryDTO.
        :type id: str
        """

        self._id = id

    @property
    def type(self) -> OrderDeliveryType:
        """Gets the type of this OrderDeliveryDTO.


        :return: The type of this OrderDeliveryDTO.
        :rtype: OrderDeliveryType
        """
        return self._type

    @type.setter
    def type(self, type: OrderDeliveryType):
        """Sets the type of this OrderDeliveryDTO.


        :param type: The type of this OrderDeliveryDTO.
        :type type: OrderDeliveryType
        """

        self._type = type

    @property
    def service_name(self) -> str:
        """Gets the service_name of this OrderDeliveryDTO.

        Наименование службы доставки.  # noqa: E501

        :return: The service_name of this OrderDeliveryDTO.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name: str):
        """Sets the service_name of this OrderDeliveryDTO.

        Наименование службы доставки.  # noqa: E501

        :param service_name: The service_name of this OrderDeliveryDTO.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def price(self) -> float:
        """Gets the price of this OrderDeliveryDTO.

        {% note warning \"\" %}  Этот параметр устарел. Стоимость доставки смотрите в параметре `deliveryTotal`.  {% endnote %}  Стоимость доставки в валюте заказа.   # noqa: E501

        :return: The price of this OrderDeliveryDTO.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price: float):
        """Sets the price of this OrderDeliveryDTO.

        {% note warning \"\" %}  Этот параметр устарел. Стоимость доставки смотрите в параметре `deliveryTotal`.  {% endnote %}  Стоимость доставки в валюте заказа.   # noqa: E501

        :param price: The price of this OrderDeliveryDTO.
        :type price: float
        """

        self._price = price

    @property
    def delivery_partner_type(self) -> OrderDeliveryPartnerType:
        """Gets the delivery_partner_type of this OrderDeliveryDTO.


        :return: The delivery_partner_type of this OrderDeliveryDTO.
        :rtype: OrderDeliveryPartnerType
        """
        return self._delivery_partner_type

    @delivery_partner_type.setter
    def delivery_partner_type(self, delivery_partner_type: OrderDeliveryPartnerType):
        """Sets the delivery_partner_type of this OrderDeliveryDTO.


        :param delivery_partner_type: The delivery_partner_type of this OrderDeliveryDTO.
        :type delivery_partner_type: OrderDeliveryPartnerType
        """

        self._delivery_partner_type = delivery_partner_type

    @property
    def courier(self) -> OrderCourierDTO:
        """Gets the courier of this OrderDeliveryDTO.


        :return: The courier of this OrderDeliveryDTO.
        :rtype: OrderCourierDTO
        """
        return self._courier

    @courier.setter
    def courier(self, courier: OrderCourierDTO):
        """Sets the courier of this OrderDeliveryDTO.


        :param courier: The courier of this OrderDeliveryDTO.
        :type courier: OrderCourierDTO
        """

        self._courier = courier

    @property
    def dates(self) -> OrderDeliveryDatesDTO:
        """Gets the dates of this OrderDeliveryDTO.


        :return: The dates of this OrderDeliveryDTO.
        :rtype: OrderDeliveryDatesDTO
        """
        return self._dates

    @dates.setter
    def dates(self, dates: OrderDeliveryDatesDTO):
        """Sets the dates of this OrderDeliveryDTO.


        :param dates: The dates of this OrderDeliveryDTO.
        :type dates: OrderDeliveryDatesDTO
        """

        self._dates = dates

    @property
    def region(self) -> RegionDTO:
        """Gets the region of this OrderDeliveryDTO.


        :return: The region of this OrderDeliveryDTO.
        :rtype: RegionDTO
        """
        return self._region

    @region.setter
    def region(self, region: RegionDTO):
        """Sets the region of this OrderDeliveryDTO.


        :param region: The region of this OrderDeliveryDTO.
        :type region: RegionDTO
        """

        self._region = region

    @property
    def address(self) -> OrderDeliveryAddressDTO:
        """Gets the address of this OrderDeliveryDTO.


        :return: The address of this OrderDeliveryDTO.
        :rtype: OrderDeliveryAddressDTO
        """
        return self._address

    @address.setter
    def address(self, address: OrderDeliveryAddressDTO):
        """Sets the address of this OrderDeliveryDTO.


        :param address: The address of this OrderDeliveryDTO.
        :type address: OrderDeliveryAddressDTO
        """

        self._address = address

    @property
    def vat(self) -> OrderVatType:
        """Gets the vat of this OrderDeliveryDTO.


        :return: The vat of this OrderDeliveryDTO.
        :rtype: OrderVatType
        """
        return self._vat

    @vat.setter
    def vat(self, vat: OrderVatType):
        """Sets the vat of this OrderDeliveryDTO.


        :param vat: The vat of this OrderDeliveryDTO.
        :type vat: OrderVatType
        """

        self._vat = vat

    @property
    def delivery_service_id(self) -> int:
        """Gets the delivery_service_id of this OrderDeliveryDTO.

        Идентификатор службы доставки.  # noqa: E501

        :return: The delivery_service_id of this OrderDeliveryDTO.
        :rtype: int
        """
        return self._delivery_service_id

    @delivery_service_id.setter
    def delivery_service_id(self, delivery_service_id: int):
        """Sets the delivery_service_id of this OrderDeliveryDTO.

        Идентификатор службы доставки.  # noqa: E501

        :param delivery_service_id: The delivery_service_id of this OrderDeliveryDTO.
        :type delivery_service_id: int
        """

        self._delivery_service_id = delivery_service_id

    @property
    def lift_type(self) -> OrderLiftType:
        """Gets the lift_type of this OrderDeliveryDTO.


        :return: The lift_type of this OrderDeliveryDTO.
        :rtype: OrderLiftType
        """
        return self._lift_type

    @lift_type.setter
    def lift_type(self, lift_type: OrderLiftType):
        """Sets the lift_type of this OrderDeliveryDTO.


        :param lift_type: The lift_type of this OrderDeliveryDTO.
        :type lift_type: OrderLiftType
        """

        self._lift_type = lift_type

    @property
    def lift_price(self) -> float:
        """Gets the lift_price of this OrderDeliveryDTO.

        Стоимость подъема на этаж.  # noqa: E501

        :return: The lift_price of this OrderDeliveryDTO.
        :rtype: float
        """
        return self._lift_price

    @lift_price.setter
    def lift_price(self, lift_price: float):
        """Sets the lift_price of this OrderDeliveryDTO.

        Стоимость подъема на этаж.  # noqa: E501

        :param lift_price: The lift_price of this OrderDeliveryDTO.
        :type lift_price: float
        """

        self._lift_price = lift_price

    @property
    def outlet_code(self) -> str:
        """Gets the outlet_code of this OrderDeliveryDTO.

        Идентификатор пункта самовывоза, присвоенный магазином.  # noqa: E501

        :return: The outlet_code of this OrderDeliveryDTO.
        :rtype: str
        """
        return self._outlet_code

    @outlet_code.setter
    def outlet_code(self, outlet_code: str):
        """Sets the outlet_code of this OrderDeliveryDTO.

        Идентификатор пункта самовывоза, присвоенный магазином.  # noqa: E501

        :param outlet_code: The outlet_code of this OrderDeliveryDTO.
        :type outlet_code: str
        """

        self._outlet_code = outlet_code

    @property
    def outlet_storage_limit_date(self) -> str:
        """Gets the outlet_storage_limit_date of this OrderDeliveryDTO.

        Формат даты: `ДД-ММ-ГГГГ`.   # noqa: E501

        :return: The outlet_storage_limit_date of this OrderDeliveryDTO.
        :rtype: str
        """
        return self._outlet_storage_limit_date

    @outlet_storage_limit_date.setter
    def outlet_storage_limit_date(self, outlet_storage_limit_date: str):
        """Sets the outlet_storage_limit_date of this OrderDeliveryDTO.

        Формат даты: `ДД-ММ-ГГГГ`.   # noqa: E501

        :param outlet_storage_limit_date: The outlet_storage_limit_date of this OrderDeliveryDTO.
        :type outlet_storage_limit_date: str
        """

        self._outlet_storage_limit_date = outlet_storage_limit_date

    @property
    def dispatch_type(self) -> OrderDeliveryDispatchType:
        """Gets the dispatch_type of this OrderDeliveryDTO.


        :return: The dispatch_type of this OrderDeliveryDTO.
        :rtype: OrderDeliveryDispatchType
        """
        return self._dispatch_type

    @dispatch_type.setter
    def dispatch_type(self, dispatch_type: OrderDeliveryDispatchType):
        """Sets the dispatch_type of this OrderDeliveryDTO.


        :param dispatch_type: The dispatch_type of this OrderDeliveryDTO.
        :type dispatch_type: OrderDeliveryDispatchType
        """

        self._dispatch_type = dispatch_type

    @property
    def tracks(self) -> List[OrderTrackDTO]:
        """Gets the tracks of this OrderDeliveryDTO.

        Информация для отслеживания перемещений посылки.  # noqa: E501

        :return: The tracks of this OrderDeliveryDTO.
        :rtype: List[OrderTrackDTO]
        """
        return self._tracks

    @tracks.setter
    def tracks(self, tracks: List[OrderTrackDTO]):
        """Sets the tracks of this OrderDeliveryDTO.

        Информация для отслеживания перемещений посылки.  # noqa: E501

        :param tracks: The tracks of this OrderDeliveryDTO.
        :type tracks: List[OrderTrackDTO]
        """

        self._tracks = tracks

    @property
    def shipments(self) -> List[OrderShipmentDTO]:
        """Gets the shipments of this OrderDeliveryDTO.

        Информация о посылках.  # noqa: E501

        :return: The shipments of this OrderDeliveryDTO.
        :rtype: List[OrderShipmentDTO]
        """
        return self._shipments

    @shipments.setter
    def shipments(self, shipments: List[OrderShipmentDTO]):
        """Sets the shipments of this OrderDeliveryDTO.

        Информация о посылках.  # noqa: E501

        :param shipments: The shipments of this OrderDeliveryDTO.
        :type shipments: List[OrderShipmentDTO]
        """

        self._shipments = shipments

    @property
    def estimated(self) -> bool:
        """Gets the estimated of this OrderDeliveryDTO.

        Приблизительная ли дата доставки.  # noqa: E501

        :return: The estimated of this OrderDeliveryDTO.
        :rtype: bool
        """
        return self._estimated

    @estimated.setter
    def estimated(self, estimated: bool):
        """Sets the estimated of this OrderDeliveryDTO.

        Приблизительная ли дата доставки.  # noqa: E501

        :param estimated: The estimated of this OrderDeliveryDTO.
        :type estimated: bool
        """

        self._estimated = estimated

    @property
    def eac_type(self) -> OrderDeliveryEacType:
        """Gets the eac_type of this OrderDeliveryDTO.


        :return: The eac_type of this OrderDeliveryDTO.
        :rtype: OrderDeliveryEacType
        """
        return self._eac_type

    @eac_type.setter
    def eac_type(self, eac_type: OrderDeliveryEacType):
        """Sets the eac_type of this OrderDeliveryDTO.


        :param eac_type: The eac_type of this OrderDeliveryDTO.
        :type eac_type: OrderDeliveryEacType
        """

        self._eac_type = eac_type

    @property
    def eac_code(self) -> str:
        """Gets the eac_code of this OrderDeliveryDTO.

        Код подтверждения ЭАПП (для типа `MERCHANT_TO_COURIER`).   # noqa: E501

        :return: The eac_code of this OrderDeliveryDTO.
        :rtype: str
        """
        return self._eac_code

    @eac_code.setter
    def eac_code(self, eac_code: str):
        """Sets the eac_code of this OrderDeliveryDTO.

        Код подтверждения ЭАПП (для типа `MERCHANT_TO_COURIER`).   # noqa: E501

        :param eac_code: The eac_code of this OrderDeliveryDTO.
        :type eac_code: str
        """

        self._eac_code = eac_code
