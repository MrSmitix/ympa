# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.ympa_python_blueplanet_server.models.base_model import Model
from app.ympa_python_blueplanet_server.models.update_mapping_dto import UpdateMappingDTO  # noqa: F401,E501
from app.ympa_python_blueplanet_server.models.update_offer_dto import UpdateOfferDTO  # noqa: F401,E501
from ympa_python_blueplanet_server import util


class UpdateOfferMappingDTO(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, offer: UpdateOfferDTO=None, mapping: UpdateMappingDTO=None):  # noqa: E501
        """UpdateOfferMappingDTO - a model defined in Swagger

        :param offer: The offer of this UpdateOfferMappingDTO.  # noqa: E501
        :type offer: UpdateOfferDTO
        :param mapping: The mapping of this UpdateOfferMappingDTO.  # noqa: E501
        :type mapping: UpdateMappingDTO
        """
        self.swagger_types = {
            'offer': UpdateOfferDTO,
            'mapping': UpdateMappingDTO
        }

        self.attribute_map = {
            'offer': 'offer',
            'mapping': 'mapping'
        }

        self._offer = offer
        self._mapping = mapping

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateOfferMappingDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UpdateOfferMappingDTO of this UpdateOfferMappingDTO.  # noqa: E501
        :rtype: UpdateOfferMappingDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offer(self) -> UpdateOfferDTO:
        """Gets the offer of this UpdateOfferMappingDTO.


        :return: The offer of this UpdateOfferMappingDTO.
        :rtype: UpdateOfferDTO
        """
        return self._offer

    @offer.setter
    def offer(self, offer: UpdateOfferDTO):
        """Sets the offer of this UpdateOfferMappingDTO.


        :param offer: The offer of this UpdateOfferMappingDTO.
        :type offer: UpdateOfferDTO
        """
        if offer is None:
            raise ValueError("Invalid value for `offer`, must not be `None`")  # noqa: E501

        self._offer = offer

    @property
    def mapping(self) -> UpdateMappingDTO:
        """Gets the mapping of this UpdateOfferMappingDTO.


        :return: The mapping of this UpdateOfferMappingDTO.
        :rtype: UpdateMappingDTO
        """
        return self._mapping

    @mapping.setter
    def mapping(self, mapping: UpdateMappingDTO):
        """Sets the mapping of this UpdateOfferMappingDTO.


        :param mapping: The mapping of this UpdateOfferMappingDTO.
        :type mapping: UpdateMappingDTO
        """

        self._mapping = mapping
