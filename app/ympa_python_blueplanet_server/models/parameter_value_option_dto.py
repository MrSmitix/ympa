# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.ympa_python_blueplanet_server.models.base_model import Model
from ympa_python_blueplanet_server import util


class ParameterValueOptionDTO(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, value: str=None, description: str=None):  # noqa: E501
        """ParameterValueOptionDTO - a model defined in Swagger

        :param id: The id of this ParameterValueOptionDTO.  # noqa: E501
        :type id: int
        :param value: The value of this ParameterValueOptionDTO.  # noqa: E501
        :type value: str
        :param description: The description of this ParameterValueOptionDTO.  # noqa: E501
        :type description: str
        """
        self.swagger_types = {
            'id': int,
            'value': str,
            'description': str
        }

        self.attribute_map = {
            'id': 'id',
            'value': 'value',
            'description': 'description'
        }

        self._id = id
        self._value = value
        self._description = description

    @classmethod
    def from_dict(cls, dikt) -> 'ParameterValueOptionDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ParameterValueOptionDTO of this ParameterValueOptionDTO.  # noqa: E501
        :rtype: ParameterValueOptionDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this ParameterValueOptionDTO.

        Идентификатор значения.  # noqa: E501

        :return: The id of this ParameterValueOptionDTO.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this ParameterValueOptionDTO.

        Идентификатор значения.  # noqa: E501

        :param id: The id of this ParameterValueOptionDTO.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def value(self) -> str:
        """Gets the value of this ParameterValueOptionDTO.

        Значение.  # noqa: E501

        :return: The value of this ParameterValueOptionDTO.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value: str):
        """Sets the value of this ParameterValueOptionDTO.

        Значение.  # noqa: E501

        :param value: The value of this ParameterValueOptionDTO.
        :type value: str
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")  # noqa: E501

        self._value = value

    @property
    def description(self) -> str:
        """Gets the description of this ParameterValueOptionDTO.

        Описание значения.  # noqa: E501

        :return: The description of this ParameterValueOptionDTO.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this ParameterValueOptionDTO.

        Описание значения.  # noqa: E501

        :param description: The description of this ParameterValueOptionDTO.
        :type description: str
        """

        self._description = description
