# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.ympa_python_blueplanet_server.models.base_model import Model
from app.ympa_python_blueplanet_server.models.hidden_offer_dto import HiddenOfferDTO  # noqa: F401,E501
from ympa_python_blueplanet_server import util


class DeleteHiddenOffersRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, hidden_offers: List[HiddenOfferDTO]=None):  # noqa: E501
        """DeleteHiddenOffersRequest - a model defined in Swagger

        :param hidden_offers: The hidden_offers of this DeleteHiddenOffersRequest.  # noqa: E501
        :type hidden_offers: List[HiddenOfferDTO]
        """
        self.swagger_types = {
            'hidden_offers': List[HiddenOfferDTO]
        }

        self.attribute_map = {
            'hidden_offers': 'hiddenOffers'
        }

        self._hidden_offers = hidden_offers

    @classmethod
    def from_dict(cls, dikt) -> 'DeleteHiddenOffersRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeleteHiddenOffersRequest of this DeleteHiddenOffersRequest.  # noqa: E501
        :rtype: DeleteHiddenOffersRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hidden_offers(self) -> List[HiddenOfferDTO]:
        """Gets the hidden_offers of this DeleteHiddenOffersRequest.

        Список скрытых товаров.   # noqa: E501

        :return: The hidden_offers of this DeleteHiddenOffersRequest.
        :rtype: List[HiddenOfferDTO]
        """
        return self._hidden_offers

    @hidden_offers.setter
    def hidden_offers(self, hidden_offers: List[HiddenOfferDTO]):
        """Sets the hidden_offers of this DeleteHiddenOffersRequest.

        Список скрытых товаров.   # noqa: E501

        :param hidden_offers: The hidden_offers of this DeleteHiddenOffersRequest.
        :type hidden_offers: List[HiddenOfferDTO]
        """
        if hidden_offers is None:
            raise ValueError("Invalid value for `hidden_offers`, must not be `None`")  # noqa: E501
        if hidden_offers is not None and len(hidden_offers) > 500:
            raise ValueError("Invalid value for `hidden_offers`, number of items must be less than or equal to `500`")  # noqa: E501
        if hidden_offers is not None and len(hidden_offers) < 1:
            raise ValueError("Invalid value for `hidden_offers`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._hidden_offers = hidden_offers
