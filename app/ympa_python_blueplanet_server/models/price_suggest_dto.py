# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.ympa_python_blueplanet_server.models.base_model import Model
from app.ympa_python_blueplanet_server.models.price_suggest_type import PriceSuggestType  # noqa: F401,E501
from ympa_python_blueplanet_server import util


class PriceSuggestDTO(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, type: PriceSuggestType=None, price: float=None):  # noqa: E501
        """PriceSuggestDTO - a model defined in Swagger

        :param type: The type of this PriceSuggestDTO.  # noqa: E501
        :type type: PriceSuggestType
        :param price: The price of this PriceSuggestDTO.  # noqa: E501
        :type price: float
        """
        self.swagger_types = {
            'type': PriceSuggestType,
            'price': float
        }

        self.attribute_map = {
            'type': 'type',
            'price': 'price'
        }

        self._type = type
        self._price = price

    @classmethod
    def from_dict(cls, dikt) -> 'PriceSuggestDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PriceSuggestDTO of this PriceSuggestDTO.  # noqa: E501
        :rtype: PriceSuggestDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> PriceSuggestType:
        """Gets the type of this PriceSuggestDTO.


        :return: The type of this PriceSuggestDTO.
        :rtype: PriceSuggestType
        """
        return self._type

    @type.setter
    def type(self, type: PriceSuggestType):
        """Sets the type of this PriceSuggestDTO.


        :param type: The type of this PriceSuggestDTO.
        :type type: PriceSuggestType
        """

        self._type = type

    @property
    def price(self) -> float:
        """Gets the price of this PriceSuggestDTO.

        Цена в рублях.  # noqa: E501

        :return: The price of this PriceSuggestDTO.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price: float):
        """Sets the price of this PriceSuggestDTO.

        Цена в рублях.  # noqa: E501

        :param price: The price of this PriceSuggestDTO.
        :type price: float
        """

        self._price = price
