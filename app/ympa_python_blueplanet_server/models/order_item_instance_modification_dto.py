# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.ympa_python_blueplanet_server.models.base_model import Model
from app.ympa_python_blueplanet_server.models.brief_order_item_instance_dto import BriefOrderItemInstanceDTO  # noqa: F401,E501
from ympa_python_blueplanet_server import util


class OrderItemInstanceModificationDTO(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, instances: List[BriefOrderItemInstanceDTO]=None):  # noqa: E501
        """OrderItemInstanceModificationDTO - a model defined in Swagger

        :param id: The id of this OrderItemInstanceModificationDTO.  # noqa: E501
        :type id: int
        :param instances: The instances of this OrderItemInstanceModificationDTO.  # noqa: E501
        :type instances: List[BriefOrderItemInstanceDTO]
        """
        self.swagger_types = {
            'id': int,
            'instances': List[BriefOrderItemInstanceDTO]
        }

        self.attribute_map = {
            'id': 'id',
            'instances': 'instances'
        }

        self._id = id
        self._instances = instances

    @classmethod
    def from_dict(cls, dikt) -> 'OrderItemInstanceModificationDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OrderItemInstanceModificationDTO of this OrderItemInstanceModificationDTO.  # noqa: E501
        :rtype: OrderItemInstanceModificationDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this OrderItemInstanceModificationDTO.

        Идентификатор товара в заказе.  Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`.   # noqa: E501

        :return: The id of this OrderItemInstanceModificationDTO.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this OrderItemInstanceModificationDTO.

        Идентификатор товара в заказе.  Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`.   # noqa: E501

        :param id: The id of this OrderItemInstanceModificationDTO.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def instances(self) -> List[BriefOrderItemInstanceDTO]:
        """Gets the instances of this OrderItemInstanceModificationDTO.

        Список кодов маркировки единиц товара.   # noqa: E501

        :return: The instances of this OrderItemInstanceModificationDTO.
        :rtype: List[BriefOrderItemInstanceDTO]
        """
        return self._instances

    @instances.setter
    def instances(self, instances: List[BriefOrderItemInstanceDTO]):
        """Sets the instances of this OrderItemInstanceModificationDTO.

        Список кодов маркировки единиц товара.   # noqa: E501

        :param instances: The instances of this OrderItemInstanceModificationDTO.
        :type instances: List[BriefOrderItemInstanceDTO]
        """
        if instances is None:
            raise ValueError("Invalid value for `instances`, must not be `None`")  # noqa: E501

        self._instances = instances
