# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.ympa_python_blueplanet_server.models.base_model import Model
from ympa_python_blueplanet_server import util


class OrderDigitalItemDTO(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, code: str=None, slip: str=None, activate_till: date=None):  # noqa: E501
        """OrderDigitalItemDTO - a model defined in Swagger

        :param id: The id of this OrderDigitalItemDTO.  # noqa: E501
        :type id: int
        :param code: The code of this OrderDigitalItemDTO.  # noqa: E501
        :type code: str
        :param slip: The slip of this OrderDigitalItemDTO.  # noqa: E501
        :type slip: str
        :param activate_till: The activate_till of this OrderDigitalItemDTO.  # noqa: E501
        :type activate_till: date
        """
        self.swagger_types = {
            'id': int,
            'code': str,
            'slip': str,
            'activate_till': date
        }

        self.attribute_map = {
            'id': 'id',
            'code': 'code',
            'slip': 'slip',
            'activate_till': 'activate_till'
        }

        self._id = id
        self._code = code
        self._slip = slip
        self._activate_till = activate_till

    @classmethod
    def from_dict(cls, dikt) -> 'OrderDigitalItemDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OrderDigitalItemDTO of this OrderDigitalItemDTO.  # noqa: E501
        :rtype: OrderDigitalItemDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this OrderDigitalItemDTO.

        Идентификатор товара в заказе.  Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`.   # noqa: E501

        :return: The id of this OrderDigitalItemDTO.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this OrderDigitalItemDTO.

        Идентификатор товара в заказе.  Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`.   # noqa: E501

        :param id: The id of this OrderDigitalItemDTO.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def code(self) -> str:
        """Gets the code of this OrderDigitalItemDTO.

        Сам ключ.  # noqa: E501

        :return: The code of this OrderDigitalItemDTO.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code: str):
        """Sets the code of this OrderDigitalItemDTO.

        Сам ключ.  # noqa: E501

        :param code: The code of this OrderDigitalItemDTO.
        :type code: str
        """
        if code is None:
            raise ValueError("Invalid value for `code`, must not be `None`")  # noqa: E501

        self._code = code

    @property
    def slip(self) -> str:
        """Gets the slip of this OrderDigitalItemDTO.

        Инструкция по активации.  # noqa: E501

        :return: The slip of this OrderDigitalItemDTO.
        :rtype: str
        """
        return self._slip

    @slip.setter
    def slip(self, slip: str):
        """Sets the slip of this OrderDigitalItemDTO.

        Инструкция по активации.  # noqa: E501

        :param slip: The slip of this OrderDigitalItemDTO.
        :type slip: str
        """
        if slip is None:
            raise ValueError("Invalid value for `slip`, must not be `None`")  # noqa: E501

        self._slip = slip

    @property
    def activate_till(self) -> date:
        """Gets the activate_till of this OrderDigitalItemDTO.

        Дата, до которой нужно активировать ключ. Если ключ действует бессрочно, укажите любую дату в отдаленном будущем.  Формат даты: `ГГГГ-ММ-ДД`.   # noqa: E501

        :return: The activate_till of this OrderDigitalItemDTO.
        :rtype: date
        """
        return self._activate_till

    @activate_till.setter
    def activate_till(self, activate_till: date):
        """Sets the activate_till of this OrderDigitalItemDTO.

        Дата, до которой нужно активировать ключ. Если ключ действует бессрочно, укажите любую дату в отдаленном будущем.  Формат даты: `ГГГГ-ММ-ДД`.   # noqa: E501

        :param activate_till: The activate_till of this OrderDigitalItemDTO.
        :type activate_till: date
        """
        if activate_till is None:
            raise ValueError("Invalid value for `activate_till`, must not be `None`")  # noqa: E501

        self._activate_till = activate_till
