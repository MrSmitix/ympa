# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.ympa_python_blueplanet_server.models.base_model import Model
from app.ympa_python_blueplanet_server.models.feed_index_logs_error_dto import FeedIndexLogsErrorDTO  # noqa: F401,E501
from app.ympa_python_blueplanet_server.models.feed_index_logs_index_type import FeedIndexLogsIndexType  # noqa: F401,E501
from app.ympa_python_blueplanet_server.models.feed_index_logs_offers_dto import FeedIndexLogsOffersDTO  # noqa: F401,E501
from app.ympa_python_blueplanet_server.models.feed_index_logs_status_type import FeedIndexLogsStatusType  # noqa: F401,E501
from ympa_python_blueplanet_server import util


class FeedIndexLogsRecordDTO(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, download_time: datetime=None, file_time: datetime=None, generation_id: int=None, index_type: FeedIndexLogsIndexType=None, published_time: datetime=None, status: FeedIndexLogsStatusType=None, error: FeedIndexLogsErrorDTO=None, offers: FeedIndexLogsOffersDTO=None):  # noqa: E501
        """FeedIndexLogsRecordDTO - a model defined in Swagger

        :param download_time: The download_time of this FeedIndexLogsRecordDTO.  # noqa: E501
        :type download_time: datetime
        :param file_time: The file_time of this FeedIndexLogsRecordDTO.  # noqa: E501
        :type file_time: datetime
        :param generation_id: The generation_id of this FeedIndexLogsRecordDTO.  # noqa: E501
        :type generation_id: int
        :param index_type: The index_type of this FeedIndexLogsRecordDTO.  # noqa: E501
        :type index_type: FeedIndexLogsIndexType
        :param published_time: The published_time of this FeedIndexLogsRecordDTO.  # noqa: E501
        :type published_time: datetime
        :param status: The status of this FeedIndexLogsRecordDTO.  # noqa: E501
        :type status: FeedIndexLogsStatusType
        :param error: The error of this FeedIndexLogsRecordDTO.  # noqa: E501
        :type error: FeedIndexLogsErrorDTO
        :param offers: The offers of this FeedIndexLogsRecordDTO.  # noqa: E501
        :type offers: FeedIndexLogsOffersDTO
        """
        self.swagger_types = {
            'download_time': datetime,
            'file_time': datetime,
            'generation_id': int,
            'index_type': FeedIndexLogsIndexType,
            'published_time': datetime,
            'status': FeedIndexLogsStatusType,
            'error': FeedIndexLogsErrorDTO,
            'offers': FeedIndexLogsOffersDTO
        }

        self.attribute_map = {
            'download_time': 'downloadTime',
            'file_time': 'fileTime',
            'generation_id': 'generationId',
            'index_type': 'indexType',
            'published_time': 'publishedTime',
            'status': 'status',
            'error': 'error',
            'offers': 'offers'
        }

        self._download_time = download_time
        self._file_time = file_time
        self._generation_id = generation_id
        self._index_type = index_type
        self._published_time = published_time
        self._status = status
        self._error = error
        self._offers = offers

    @classmethod
    def from_dict(cls, dikt) -> 'FeedIndexLogsRecordDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FeedIndexLogsRecordDTO of this FeedIndexLogsRecordDTO.  # noqa: E501
        :rtype: FeedIndexLogsRecordDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def download_time(self) -> datetime:
        """Gets the download_time of this FeedIndexLogsRecordDTO.

        Дата и время загрузки прайс-листа.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.   # noqa: E501

        :return: The download_time of this FeedIndexLogsRecordDTO.
        :rtype: datetime
        """
        return self._download_time

    @download_time.setter
    def download_time(self, download_time: datetime):
        """Sets the download_time of this FeedIndexLogsRecordDTO.

        Дата и время загрузки прайс-листа.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.   # noqa: E501

        :param download_time: The download_time of this FeedIndexLogsRecordDTO.
        :type download_time: datetime
        """

        self._download_time = download_time

    @property
    def file_time(self) -> datetime:
        """Gets the file_time of this FeedIndexLogsRecordDTO.

        Дата и время, которые магазин указал в прайс-листе.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.   # noqa: E501

        :return: The file_time of this FeedIndexLogsRecordDTO.
        :rtype: datetime
        """
        return self._file_time

    @file_time.setter
    def file_time(self, file_time: datetime):
        """Sets the file_time of this FeedIndexLogsRecordDTO.

        Дата и время, которые магазин указал в прайс-листе.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.   # noqa: E501

        :param file_time: The file_time of this FeedIndexLogsRecordDTO.
        :type file_time: datetime
        """

        self._file_time = file_time

    @property
    def generation_id(self) -> int:
        """Gets the generation_id of this FeedIndexLogsRecordDTO.

        Идентификатор индексации.  # noqa: E501

        :return: The generation_id of this FeedIndexLogsRecordDTO.
        :rtype: int
        """
        return self._generation_id

    @generation_id.setter
    def generation_id(self, generation_id: int):
        """Sets the generation_id of this FeedIndexLogsRecordDTO.

        Идентификатор индексации.  # noqa: E501

        :param generation_id: The generation_id of this FeedIndexLogsRecordDTO.
        :type generation_id: int
        """

        self._generation_id = generation_id

    @property
    def index_type(self) -> FeedIndexLogsIndexType:
        """Gets the index_type of this FeedIndexLogsRecordDTO.


        :return: The index_type of this FeedIndexLogsRecordDTO.
        :rtype: FeedIndexLogsIndexType
        """
        return self._index_type

    @index_type.setter
    def index_type(self, index_type: FeedIndexLogsIndexType):
        """Sets the index_type of this FeedIndexLogsRecordDTO.


        :param index_type: The index_type of this FeedIndexLogsRecordDTO.
        :type index_type: FeedIndexLogsIndexType
        """

        self._index_type = index_type

    @property
    def published_time(self) -> datetime:
        """Gets the published_time of this FeedIndexLogsRecordDTO.

        Дата и время публикации предложений из прайс-листа на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.   # noqa: E501

        :return: The published_time of this FeedIndexLogsRecordDTO.
        :rtype: datetime
        """
        return self._published_time

    @published_time.setter
    def published_time(self, published_time: datetime):
        """Sets the published_time of this FeedIndexLogsRecordDTO.

        Дата и время публикации предложений из прайс-листа на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.   # noqa: E501

        :param published_time: The published_time of this FeedIndexLogsRecordDTO.
        :type published_time: datetime
        """

        self._published_time = published_time

    @property
    def status(self) -> FeedIndexLogsStatusType:
        """Gets the status of this FeedIndexLogsRecordDTO.


        :return: The status of this FeedIndexLogsRecordDTO.
        :rtype: FeedIndexLogsStatusType
        """
        return self._status

    @status.setter
    def status(self, status: FeedIndexLogsStatusType):
        """Sets the status of this FeedIndexLogsRecordDTO.


        :param status: The status of this FeedIndexLogsRecordDTO.
        :type status: FeedIndexLogsStatusType
        """

        self._status = status

    @property
    def error(self) -> FeedIndexLogsErrorDTO:
        """Gets the error of this FeedIndexLogsRecordDTO.


        :return: The error of this FeedIndexLogsRecordDTO.
        :rtype: FeedIndexLogsErrorDTO
        """
        return self._error

    @error.setter
    def error(self, error: FeedIndexLogsErrorDTO):
        """Sets the error of this FeedIndexLogsRecordDTO.


        :param error: The error of this FeedIndexLogsRecordDTO.
        :type error: FeedIndexLogsErrorDTO
        """

        self._error = error

    @property
    def offers(self) -> FeedIndexLogsOffersDTO:
        """Gets the offers of this FeedIndexLogsRecordDTO.


        :return: The offers of this FeedIndexLogsRecordDTO.
        :rtype: FeedIndexLogsOffersDTO
        """
        return self._offers

    @offers.setter
    def offers(self, offers: FeedIndexLogsOffersDTO):
        """Sets the offers of this FeedIndexLogsRecordDTO.


        :param offers: The offers of this FeedIndexLogsRecordDTO.
        :type offers: FeedIndexLogsOffersDTO
        """

        self._offers = offers
