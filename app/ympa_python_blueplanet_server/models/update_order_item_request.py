# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.ympa_python_blueplanet_server.models.base_model import Model
from app.ympa_python_blueplanet_server.models.order_item_modification_dto import OrderItemModificationDTO  # noqa: F401,E501
from app.ympa_python_blueplanet_server.models.order_items_modification_request_reason_type import OrderItemsModificationRequestReasonType  # noqa: F401,E501
from ympa_python_blueplanet_server import util


class UpdateOrderItemRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, items: List[OrderItemModificationDTO]=None, reason: OrderItemsModificationRequestReasonType=None):  # noqa: E501
        """UpdateOrderItemRequest - a model defined in Swagger

        :param items: The items of this UpdateOrderItemRequest.  # noqa: E501
        :type items: List[OrderItemModificationDTO]
        :param reason: The reason of this UpdateOrderItemRequest.  # noqa: E501
        :type reason: OrderItemsModificationRequestReasonType
        """
        self.swagger_types = {
            'items': List[OrderItemModificationDTO],
            'reason': OrderItemsModificationRequestReasonType
        }

        self.attribute_map = {
            'items': 'items',
            'reason': 'reason'
        }

        self._items = items
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateOrderItemRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UpdateOrderItemRequest of this UpdateOrderItemRequest.  # noqa: E501
        :rtype: UpdateOrderItemRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items(self) -> List[OrderItemModificationDTO]:
        """Gets the items of this UpdateOrderItemRequest.

        Список товаров в заказе.  Если магазин не передал информацию о товаре во входных данных, он будет удален из заказа.  Обязательный параметр.   # noqa: E501

        :return: The items of this UpdateOrderItemRequest.
        :rtype: List[OrderItemModificationDTO]
        """
        return self._items

    @items.setter
    def items(self, items: List[OrderItemModificationDTO]):
        """Sets the items of this UpdateOrderItemRequest.

        Список товаров в заказе.  Если магазин не передал информацию о товаре во входных данных, он будет удален из заказа.  Обязательный параметр.   # noqa: E501

        :param items: The items of this UpdateOrderItemRequest.
        :type items: List[OrderItemModificationDTO]
        """
        if items is None:
            raise ValueError("Invalid value for `items`, must not be `None`")  # noqa: E501
        if items is not None and len(items) < 1:
            raise ValueError("Invalid value for `items`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._items = items

    @property
    def reason(self) -> OrderItemsModificationRequestReasonType:
        """Gets the reason of this UpdateOrderItemRequest.


        :return: The reason of this UpdateOrderItemRequest.
        :rtype: OrderItemsModificationRequestReasonType
        """
        return self._reason

    @reason.setter
    def reason(self, reason: OrderItemsModificationRequestReasonType):
        """Sets the reason of this UpdateOrderItemRequest.


        :param reason: The reason of this UpdateOrderItemRequest.
        :type reason: OrderItemsModificationRequestReasonType
        """

        self._reason = reason
