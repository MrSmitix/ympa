# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.ympa_python_blueplanet_server.models.base_model import Model
from ympa_python_blueplanet_server import util


class ModelOfferDTO(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, discount: int=None, name: str=None, pos: int=None, pre_discount_price: float=None, price: float=None, region_id: int=None, shipping_cost: float=None, shop_name: str=None, shop_rating: int=None, in_stock: int=None):  # noqa: E501
        """ModelOfferDTO - a model defined in Swagger

        :param discount: The discount of this ModelOfferDTO.  # noqa: E501
        :type discount: int
        :param name: The name of this ModelOfferDTO.  # noqa: E501
        :type name: str
        :param pos: The pos of this ModelOfferDTO.  # noqa: E501
        :type pos: int
        :param pre_discount_price: The pre_discount_price of this ModelOfferDTO.  # noqa: E501
        :type pre_discount_price: float
        :param price: The price of this ModelOfferDTO.  # noqa: E501
        :type price: float
        :param region_id: The region_id of this ModelOfferDTO.  # noqa: E501
        :type region_id: int
        :param shipping_cost: The shipping_cost of this ModelOfferDTO.  # noqa: E501
        :type shipping_cost: float
        :param shop_name: The shop_name of this ModelOfferDTO.  # noqa: E501
        :type shop_name: str
        :param shop_rating: The shop_rating of this ModelOfferDTO.  # noqa: E501
        :type shop_rating: int
        :param in_stock: The in_stock of this ModelOfferDTO.  # noqa: E501
        :type in_stock: int
        """
        self.swagger_types = {
            'discount': int,
            'name': str,
            'pos': int,
            'pre_discount_price': float,
            'price': float,
            'region_id': int,
            'shipping_cost': float,
            'shop_name': str,
            'shop_rating': int,
            'in_stock': int
        }

        self.attribute_map = {
            'discount': 'discount',
            'name': 'name',
            'pos': 'pos',
            'pre_discount_price': 'preDiscountPrice',
            'price': 'price',
            'region_id': 'regionId',
            'shipping_cost': 'shippingCost',
            'shop_name': 'shopName',
            'shop_rating': 'shopRating',
            'in_stock': 'inStock'
        }

        self._discount = discount
        self._name = name
        self._pos = pos
        self._pre_discount_price = pre_discount_price
        self._price = price
        self._region_id = region_id
        self._shipping_cost = shipping_cost
        self._shop_name = shop_name
        self._shop_rating = shop_rating
        self._in_stock = in_stock

    @classmethod
    def from_dict(cls, dikt) -> 'ModelOfferDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ModelOfferDTO of this ModelOfferDTO.  # noqa: E501
        :rtype: ModelOfferDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def discount(self) -> int:
        """Gets the discount of this ModelOfferDTO.

        Скидка на предложение в процентах.  # noqa: E501

        :return: The discount of this ModelOfferDTO.
        :rtype: int
        """
        return self._discount

    @discount.setter
    def discount(self, discount: int):
        """Sets the discount of this ModelOfferDTO.

        Скидка на предложение в процентах.  # noqa: E501

        :param discount: The discount of this ModelOfferDTO.
        :type discount: int
        """

        self._discount = discount

    @property
    def name(self) -> str:
        """Gets the name of this ModelOfferDTO.

        Наименование предложения.  # noqa: E501

        :return: The name of this ModelOfferDTO.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this ModelOfferDTO.

        Наименование предложения.  # noqa: E501

        :param name: The name of this ModelOfferDTO.
        :type name: str
        """

        self._name = name

    @property
    def pos(self) -> int:
        """Gets the pos of this ModelOfferDTO.

        Позиция предложения в выдаче Маркета на карточке модели.  # noqa: E501

        :return: The pos of this ModelOfferDTO.
        :rtype: int
        """
        return self._pos

    @pos.setter
    def pos(self, pos: int):
        """Sets the pos of this ModelOfferDTO.

        Позиция предложения в выдаче Маркета на карточке модели.  # noqa: E501

        :param pos: The pos of this ModelOfferDTO.
        :type pos: int
        """

        self._pos = pos

    @property
    def pre_discount_price(self) -> float:
        """Gets the pre_discount_price of this ModelOfferDTO.

        Цена предложения без скидки магазина.  # noqa: E501

        :return: The pre_discount_price of this ModelOfferDTO.
        :rtype: float
        """
        return self._pre_discount_price

    @pre_discount_price.setter
    def pre_discount_price(self, pre_discount_price: float):
        """Sets the pre_discount_price of this ModelOfferDTO.

        Цена предложения без скидки магазина.  # noqa: E501

        :param pre_discount_price: The pre_discount_price of this ModelOfferDTO.
        :type pre_discount_price: float
        """

        self._pre_discount_price = pre_discount_price

    @property
    def price(self) -> float:
        """Gets the price of this ModelOfferDTO.

        Цена предложения без скидки, которую получает покупатель при оплате через Yandex Pay.  # noqa: E501

        :return: The price of this ModelOfferDTO.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price: float):
        """Sets the price of this ModelOfferDTO.

        Цена предложения без скидки, которую получает покупатель при оплате через Yandex Pay.  # noqa: E501

        :param price: The price of this ModelOfferDTO.
        :type price: float
        """

        self._price = price

    @property
    def region_id(self) -> int:
        """Gets the region_id of this ModelOfferDTO.

        Идентификатор региона предложения (регион, откуда доставляется товар).  Сначала показываются предложения, доставляемые из региона, указанного в запросе в параметре `regionId`. Предложения, доставляемые из других регионов, показываются после них.   # noqa: E501

        :return: The region_id of this ModelOfferDTO.
        :rtype: int
        """
        return self._region_id

    @region_id.setter
    def region_id(self, region_id: int):
        """Sets the region_id of this ModelOfferDTO.

        Идентификатор региона предложения (регион, откуда доставляется товар).  Сначала показываются предложения, доставляемые из региона, указанного в запросе в параметре `regionId`. Предложения, доставляемые из других регионов, показываются после них.   # noqa: E501

        :param region_id: The region_id of this ModelOfferDTO.
        :type region_id: int
        """

        self._region_id = region_id

    @property
    def shipping_cost(self) -> float:
        """Gets the shipping_cost of this ModelOfferDTO.

        Стоимость доставки товара в регион:  * `0` — доставка осуществляется бесплатно. * `-1` — магазин не осуществляет доставку этого товара (самовывоз).  Если стоимость доставки неизвестна, параметр не выводится.   # noqa: E501

        :return: The shipping_cost of this ModelOfferDTO.
        :rtype: float
        """
        return self._shipping_cost

    @shipping_cost.setter
    def shipping_cost(self, shipping_cost: float):
        """Sets the shipping_cost of this ModelOfferDTO.

        Стоимость доставки товара в регион:  * `0` — доставка осуществляется бесплатно. * `-1` — магазин не осуществляет доставку этого товара (самовывоз).  Если стоимость доставки неизвестна, параметр не выводится.   # noqa: E501

        :param shipping_cost: The shipping_cost of this ModelOfferDTO.
        :type shipping_cost: float
        """

        self._shipping_cost = shipping_cost

    @property
    def shop_name(self) -> str:
        """Gets the shop_name of this ModelOfferDTO.

        Название магазина (в том виде, в котором отображается на Маркете).  # noqa: E501

        :return: The shop_name of this ModelOfferDTO.
        :rtype: str
        """
        return self._shop_name

    @shop_name.setter
    def shop_name(self, shop_name: str):
        """Sets the shop_name of this ModelOfferDTO.

        Название магазина (в том виде, в котором отображается на Маркете).  # noqa: E501

        :param shop_name: The shop_name of this ModelOfferDTO.
        :type shop_name: str
        """

        self._shop_name = shop_name

    @property
    def shop_rating(self) -> int:
        """Gets the shop_rating of this ModelOfferDTO.

        Рейтинг магазина.  Возможные значения: * `-1` — у магазинов, недавно появившихся на Маркете, рейтинг появляется не сразу. До момента появления рейтинга для таких магазинов возвращается значение `-1`. * `1`. * `2`. * `3`. * `4`. * `5`.   # noqa: E501

        :return: The shop_rating of this ModelOfferDTO.
        :rtype: int
        """
        return self._shop_rating

    @shop_rating.setter
    def shop_rating(self, shop_rating: int):
        """Sets the shop_rating of this ModelOfferDTO.

        Рейтинг магазина.  Возможные значения: * `-1` — у магазинов, недавно появившихся на Маркете, рейтинг появляется не сразу. До момента появления рейтинга для таких магазинов возвращается значение `-1`. * `1`. * `2`. * `3`. * `4`. * `5`.   # noqa: E501

        :param shop_rating: The shop_rating of this ModelOfferDTO.
        :type shop_rating: int
        """

        self._shop_rating = shop_rating

    @property
    def in_stock(self) -> int:
        """Gets the in_stock of this ModelOfferDTO.

        {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}   # noqa: E501

        :return: The in_stock of this ModelOfferDTO.
        :rtype: int
        """
        return self._in_stock

    @in_stock.setter
    def in_stock(self, in_stock: int):
        """Sets the in_stock of this ModelOfferDTO.

        {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}   # noqa: E501

        :param in_stock: The in_stock of this ModelOfferDTO.
        :type in_stock: int
        """

        self._in_stock = in_stock
