// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpHeaders } from '../runtime';
import type {
    ApiClientDataErrorResponse,
    ApiForbiddenErrorResponse,
    ApiLimitErrorResponse,
    ApiNotFoundErrorResponse,
    ApiServerErrorResponse,
    ApiUnauthorizedErrorResponse,
    GetBusinessSettingsResponse,
} from '../models';

export interface GetBusinessSettingsRequest {
    businessId: number;
}

/**
 * no description
 */
export class BusinessesApi extends BaseAPI {

    /**
     * Возвращает информацию о настройках кабинета, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-| 
     * Настройки кабинета
     */
    getBusinessSettings({ businessId }: GetBusinessSettingsRequest): Observable<GetBusinessSettingsResponse>
    getBusinessSettings({ businessId }: GetBusinessSettingsRequest, opts?: OperationOpts): Observable<AjaxResponse<GetBusinessSettingsResponse>>
    getBusinessSettings({ businessId }: GetBusinessSettingsRequest, opts?: OperationOpts): Observable<GetBusinessSettingsResponse | AjaxResponse<GetBusinessSettingsResponse>> {
        throwIfNullOrUndefined(businessId, 'businessId', 'getBusinessSettings');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('OAuth', ['market:partner-api'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        return this.request<GetBusinessSettingsResponse>({
            url: '/businesses/{businessId}/settings'.replace('{businessId}', encodeURI(businessId)),
            method: 'POST',
            headers,
        }, opts?.responseOpts);
    };

}
