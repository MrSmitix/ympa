/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiClientDataErrorResponse,
  ApiForbiddenErrorResponse,
  ApiLimitErrorResponse,
  ApiLockedErrorResponse,
  ApiNotFoundErrorResponse,
  ApiServerErrorResponse,
  ApiUnauthorizedErrorResponse,
  ConfirmPricesRequest,
  EmptyApiResponse,
  GetQuarantineOffersRequest,
  GetQuarantineOffersResponse,
} from '../models/index';
import {
    ApiClientDataErrorResponseFromJSON,
    ApiClientDataErrorResponseToJSON,
    ApiForbiddenErrorResponseFromJSON,
    ApiForbiddenErrorResponseToJSON,
    ApiLimitErrorResponseFromJSON,
    ApiLimitErrorResponseToJSON,
    ApiLockedErrorResponseFromJSON,
    ApiLockedErrorResponseToJSON,
    ApiNotFoundErrorResponseFromJSON,
    ApiNotFoundErrorResponseToJSON,
    ApiServerErrorResponseFromJSON,
    ApiServerErrorResponseToJSON,
    ApiUnauthorizedErrorResponseFromJSON,
    ApiUnauthorizedErrorResponseToJSON,
    ConfirmPricesRequestFromJSON,
    ConfirmPricesRequestToJSON,
    EmptyApiResponseFromJSON,
    EmptyApiResponseToJSON,
    GetQuarantineOffersRequestFromJSON,
    GetQuarantineOffersRequestToJSON,
    GetQuarantineOffersResponseFromJSON,
    GetQuarantineOffersResponseToJSON,
} from '../models/index';

export interface ConfirmBusinessPricesRequest {
    businessId: number;
    confirmPricesRequest: ConfirmPricesRequest;
}

export interface ConfirmCampaignPricesRequest {
    campaignId: number;
    confirmPricesRequest: ConfirmPricesRequest;
}

export interface GetBusinessQuarantineOffersRequest {
    businessId: number;
    getQuarantineOffersRequest: GetQuarantineOffersRequest;
    pageToken?: string;
    limit?: number;
}

export interface GetCampaignQuarantineOffersRequest {
    campaignId: number;
    getQuarantineOffersRequest: GetQuarantineOffersRequest;
    pageToken?: string;
    limit?: number;
}

/**
 * 
 */
export class PriceQuarantineApi extends runtime.BaseAPI {

    /**
     * Подтверждает основную цену на товары, которые попали в карантин, и удаляет их из карантина.  Основная цена задается в каталоге и действует во всех магазинах кабинета.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| 
     * Удаление товара из карантина по цене в кабинете
     */
    async confirmBusinessPricesRaw(requestParameters: ConfirmBusinessPricesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EmptyApiResponse>> {
        if (requestParameters['businessId'] == null) {
            throw new runtime.RequiredError(
                'businessId',
                'Required parameter "businessId" was null or undefined when calling confirmBusinessPrices().'
            );
        }

        if (requestParameters['confirmPricesRequest'] == null) {
            throw new runtime.RequiredError(
                'confirmPricesRequest',
                'Required parameter "confirmPricesRequest" was null or undefined when calling confirmBusinessPrices().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/businesses/{businessId}/price-quarantine/confirm`.replace(`{${"businessId"}}`, encodeURIComponent(String(requestParameters['businessId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ConfirmPricesRequestToJSON(requestParameters['confirmPricesRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EmptyApiResponseFromJSON(jsonValue));
    }

    /**
     * Подтверждает основную цену на товары, которые попали в карантин, и удаляет их из карантина.  Основная цена задается в каталоге и действует во всех магазинах кабинета.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| 
     * Удаление товара из карантина по цене в кабинете
     */
    async confirmBusinessPrices(requestParameters: ConfirmBusinessPricesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EmptyApiResponse> {
        const response = await this.confirmBusinessPricesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Подтверждает в заданном магазине цену на товары, которые попали в карантин, и удаляет их из карантина.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
     * Удаление товара из карантина по цене в магазине
     */
    async confirmCampaignPricesRaw(requestParameters: ConfirmCampaignPricesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EmptyApiResponse>> {
        if (requestParameters['campaignId'] == null) {
            throw new runtime.RequiredError(
                'campaignId',
                'Required parameter "campaignId" was null or undefined when calling confirmCampaignPrices().'
            );
        }

        if (requestParameters['confirmPricesRequest'] == null) {
            throw new runtime.RequiredError(
                'confirmPricesRequest',
                'Required parameter "confirmPricesRequest" was null or undefined when calling confirmCampaignPrices().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/campaigns/{campaignId}/price-quarantine/confirm`.replace(`{${"campaignId"}}`, encodeURIComponent(String(requestParameters['campaignId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ConfirmPricesRequestToJSON(requestParameters['confirmPricesRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EmptyApiResponseFromJSON(jsonValue));
    }

    /**
     * Подтверждает в заданном магазине цену на товары, которые попали в карантин, и удаляет их из карантина.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
     * Удаление товара из карантина по цене в магазине
     */
    async confirmCampaignPrices(requestParameters: ConfirmCampaignPricesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EmptyApiResponse> {
        const response = await this.confirmCampaignPricesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Возвращает список товаров, которые находятся в карантине по **основной цене**. Основная цена задается в каталоге и действует во всех магазинах кабинета.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| 
     * Список товаров, находящихся в карантине по цене в кабинете
     */
    async getBusinessQuarantineOffersRaw(requestParameters: GetBusinessQuarantineOffersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetQuarantineOffersResponse>> {
        if (requestParameters['businessId'] == null) {
            throw new runtime.RequiredError(
                'businessId',
                'Required parameter "businessId" was null or undefined when calling getBusinessQuarantineOffers().'
            );
        }

        if (requestParameters['getQuarantineOffersRequest'] == null) {
            throw new runtime.RequiredError(
                'getQuarantineOffersRequest',
                'Required parameter "getQuarantineOffersRequest" was null or undefined when calling getBusinessQuarantineOffers().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['pageToken'] != null) {
            queryParameters['page_token'] = requestParameters['pageToken'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/businesses/{businessId}/price-quarantine`.replace(`{${"businessId"}}`, encodeURIComponent(String(requestParameters['businessId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GetQuarantineOffersRequestToJSON(requestParameters['getQuarantineOffersRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetQuarantineOffersResponseFromJSON(jsonValue));
    }

    /**
     * Возвращает список товаров, которые находятся в карантине по **основной цене**. Основная цена задается в каталоге и действует во всех магазинах кабинета.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| 
     * Список товаров, находящихся в карантине по цене в кабинете
     */
    async getBusinessQuarantineOffers(requestParameters: GetBusinessQuarantineOffersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetQuarantineOffersResponse> {
        const response = await this.getBusinessQuarantineOffersRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Возвращает список товаров, которые находятся в карантине по цене, установленной в заданном магазине.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
     * Список товаров, находящихся в карантине по цене в магазине
     */
    async getCampaignQuarantineOffersRaw(requestParameters: GetCampaignQuarantineOffersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetQuarantineOffersResponse>> {
        if (requestParameters['campaignId'] == null) {
            throw new runtime.RequiredError(
                'campaignId',
                'Required parameter "campaignId" was null or undefined when calling getCampaignQuarantineOffers().'
            );
        }

        if (requestParameters['getQuarantineOffersRequest'] == null) {
            throw new runtime.RequiredError(
                'getQuarantineOffersRequest',
                'Required parameter "getQuarantineOffersRequest" was null or undefined when calling getCampaignQuarantineOffers().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['pageToken'] != null) {
            queryParameters['page_token'] = requestParameters['pageToken'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/campaigns/{campaignId}/price-quarantine`.replace(`{${"campaignId"}}`, encodeURIComponent(String(requestParameters['campaignId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GetQuarantineOffersRequestToJSON(requestParameters['getQuarantineOffersRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetQuarantineOffersResponseFromJSON(jsonValue));
    }

    /**
     * Возвращает список товаров, которые находятся в карантине по цене, установленной в заданном магазине.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
     * Список товаров, находящихся в карантине по цене в магазине
     */
    async getCampaignQuarantineOffers(requestParameters: GetCampaignQuarantineOffersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetQuarantineOffersResponse> {
        const response = await this.getCampaignQuarantineOffersRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
