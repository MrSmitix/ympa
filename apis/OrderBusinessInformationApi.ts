// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpHeaders } from '../runtime';
import type {
    ApiClientDataErrorResponse,
    ApiForbiddenErrorResponse,
    ApiLimitErrorResponse,
    ApiNotFoundErrorResponse,
    ApiServerErrorResponse,
    ApiUnauthorizedErrorResponse,
    GetBusinessBuyerInfoResponse,
    GetBusinessDocumentsInfoResponse,
} from '../models';

export interface GetOrderBusinessBuyerInfoRequest {
    campaignId: number;
    orderId: number;
}

export interface GetOrderBusinessDocumentsInfoRequest {
    campaignId: number;
    orderId: number;
}

/**
 * no description
 */
export class OrderBusinessInformationApi extends BaseAPI {

    /**
     * Возвращает информацию о покупателе по идентификатору заказа.  {% note info \"\" %}  Чтобы получить информацию о покупателе, который является физическим лицом, воспользуйтесь запросом [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  {% endnote %}  Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY`, `PICKUP` или `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-| 
     * Информация о покупателе — юридическом лице
     */
    getOrderBusinessBuyerInfo({ campaignId, orderId }: GetOrderBusinessBuyerInfoRequest): Observable<GetBusinessBuyerInfoResponse>
    getOrderBusinessBuyerInfo({ campaignId, orderId }: GetOrderBusinessBuyerInfoRequest, opts?: OperationOpts): Observable<AjaxResponse<GetBusinessBuyerInfoResponse>>
    getOrderBusinessBuyerInfo({ campaignId, orderId }: GetOrderBusinessBuyerInfoRequest, opts?: OperationOpts): Observable<GetBusinessBuyerInfoResponse | AjaxResponse<GetBusinessBuyerInfoResponse>> {
        throwIfNullOrUndefined(campaignId, 'campaignId', 'getOrderBusinessBuyerInfo');
        throwIfNullOrUndefined(orderId, 'orderId', 'getOrderBusinessBuyerInfo');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('OAuth', ['market:partner-api'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        return this.request<GetBusinessBuyerInfoResponse>({
            url: '/campaigns/{campaignId}/orders/{orderId}/business-buyer'.replace('{campaignId}', encodeURI(campaignId)).replace('{orderId}', encodeURI(orderId)),
            method: 'POST',
            headers,
        }, opts?.responseOpts);
    };

    /**
     * Возвращает информацию о документах по идентификатору заказа.  Получить данные можно после того, как заказ перейдет в статус `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-| 
     * Информация о документах
     */
    getOrderBusinessDocumentsInfo({ campaignId, orderId }: GetOrderBusinessDocumentsInfoRequest): Observable<GetBusinessDocumentsInfoResponse>
    getOrderBusinessDocumentsInfo({ campaignId, orderId }: GetOrderBusinessDocumentsInfoRequest, opts?: OperationOpts): Observable<AjaxResponse<GetBusinessDocumentsInfoResponse>>
    getOrderBusinessDocumentsInfo({ campaignId, orderId }: GetOrderBusinessDocumentsInfoRequest, opts?: OperationOpts): Observable<GetBusinessDocumentsInfoResponse | AjaxResponse<GetBusinessDocumentsInfoResponse>> {
        throwIfNullOrUndefined(campaignId, 'campaignId', 'getOrderBusinessDocumentsInfo');
        throwIfNullOrUndefined(orderId, 'orderId', 'getOrderBusinessDocumentsInfo');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('OAuth', ['market:partner-api'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        return this.request<GetBusinessDocumentsInfoResponse>({
            url: '/campaigns/{campaignId}/orders/{orderId}/documents'.replace('{campaignId}', encodeURI(campaignId)).replace('{orderId}', encodeURI(orderId)),
            method: 'POST',
            headers,
        }, opts?.responseOpts);
    };

}
