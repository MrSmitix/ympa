// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpHeaders } from '../runtime';
import type {
    ApiClientDataErrorResponse,
    ApiForbiddenErrorResponse,
    ApiLimitErrorResponse,
    ApiNotFoundErrorResponse,
    ApiServerErrorResponse,
    ApiUnauthorizedErrorResponse,
    GetFulfillmentWarehousesResponse,
    GetWarehousesResponse,
} from '../models';

export interface GetWarehousesRequest {
    businessId: number;
}

/**
 * no description
 */
export class WarehousesApi extends BaseAPI {

    /**
     * Возвращает список складов Маркета с их идентификаторами.  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
     * Идентификаторы складов Маркета (FBY)
     */
    getFulfillmentWarehouses(): Observable<GetFulfillmentWarehousesResponse>
    getFulfillmentWarehouses(opts?: OperationOpts): Observable<AjaxResponse<GetFulfillmentWarehousesResponse>>
    getFulfillmentWarehouses(opts?: OperationOpts): Observable<GetFulfillmentWarehousesResponse | AjaxResponse<GetFulfillmentWarehousesResponse>> {
        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('OAuth', ['market:partner-api'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        return this.request<GetFulfillmentWarehousesResponse>({
            url: '/warehouses',
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     * Возвращает список складов и, если склады объединены, список групп складов. [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)  Среди прочего запрос позволяет определить идентификатор, который нужно использовать при передаче остатков для группы складов.  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
     * Список складов и групп складов
     */
    getWarehouses({ businessId }: GetWarehousesRequest): Observable<GetWarehousesResponse>
    getWarehouses({ businessId }: GetWarehousesRequest, opts?: OperationOpts): Observable<AjaxResponse<GetWarehousesResponse>>
    getWarehouses({ businessId }: GetWarehousesRequest, opts?: OperationOpts): Observable<GetWarehousesResponse | AjaxResponse<GetWarehousesResponse>> {
        throwIfNullOrUndefined(businessId, 'businessId', 'getWarehouses');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('OAuth', ['market:partner-api'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        return this.request<GetWarehousesResponse>({
            url: '/businesses/{businessId}/warehouses'.replace('{businessId}', encodeURI(businessId)),
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

}
