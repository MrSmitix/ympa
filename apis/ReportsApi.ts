/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiClientDataErrorResponse,
  ApiForbiddenErrorResponse,
  ApiLimitErrorResponse,
  ApiNotFoundErrorResponse,
  ApiServerErrorResponse,
  ApiUnauthorizedErrorResponse,
  GenerateBoostConsolidatedRequest,
  GenerateCompetitorsPositionReportRequest,
  GenerateGoodsFeedbackRequest,
  GenerateGoodsMovementReportRequest,
  GenerateGoodsRealizationReportRequest,
  GenerateGoodsTurnoverRequest,
  GenerateMassOrderLabelsRequest,
  GeneratePricesReportRequest,
  GenerateReportResponse,
  GenerateShelfsStatisticsRequest,
  GenerateShipmentListDocumentReportRequest,
  GenerateShowsSalesReportRequest,
  GenerateStocksOnWarehousesReportRequest,
  GenerateUnitedMarketplaceServicesReportRequest,
  GenerateUnitedNettingReportRequest,
  GenerateUnitedOrdersRequest,
  GetReportInfoResponse,
  PageFormatType,
  ReportFormatType,
} from '../models/index';
import {
    ApiClientDataErrorResponseFromJSON,
    ApiClientDataErrorResponseToJSON,
    ApiForbiddenErrorResponseFromJSON,
    ApiForbiddenErrorResponseToJSON,
    ApiLimitErrorResponseFromJSON,
    ApiLimitErrorResponseToJSON,
    ApiNotFoundErrorResponseFromJSON,
    ApiNotFoundErrorResponseToJSON,
    ApiServerErrorResponseFromJSON,
    ApiServerErrorResponseToJSON,
    ApiUnauthorizedErrorResponseFromJSON,
    ApiUnauthorizedErrorResponseToJSON,
    GenerateBoostConsolidatedRequestFromJSON,
    GenerateBoostConsolidatedRequestToJSON,
    GenerateCompetitorsPositionReportRequestFromJSON,
    GenerateCompetitorsPositionReportRequestToJSON,
    GenerateGoodsFeedbackRequestFromJSON,
    GenerateGoodsFeedbackRequestToJSON,
    GenerateGoodsMovementReportRequestFromJSON,
    GenerateGoodsMovementReportRequestToJSON,
    GenerateGoodsRealizationReportRequestFromJSON,
    GenerateGoodsRealizationReportRequestToJSON,
    GenerateGoodsTurnoverRequestFromJSON,
    GenerateGoodsTurnoverRequestToJSON,
    GenerateMassOrderLabelsRequestFromJSON,
    GenerateMassOrderLabelsRequestToJSON,
    GeneratePricesReportRequestFromJSON,
    GeneratePricesReportRequestToJSON,
    GenerateReportResponseFromJSON,
    GenerateReportResponseToJSON,
    GenerateShelfsStatisticsRequestFromJSON,
    GenerateShelfsStatisticsRequestToJSON,
    GenerateShipmentListDocumentReportRequestFromJSON,
    GenerateShipmentListDocumentReportRequestToJSON,
    GenerateShowsSalesReportRequestFromJSON,
    GenerateShowsSalesReportRequestToJSON,
    GenerateStocksOnWarehousesReportRequestFromJSON,
    GenerateStocksOnWarehousesReportRequestToJSON,
    GenerateUnitedMarketplaceServicesReportRequestFromJSON,
    GenerateUnitedMarketplaceServicesReportRequestToJSON,
    GenerateUnitedNettingReportRequestFromJSON,
    GenerateUnitedNettingReportRequestToJSON,
    GenerateUnitedOrdersRequestFromJSON,
    GenerateUnitedOrdersRequestToJSON,
    GetReportInfoResponseFromJSON,
    GetReportInfoResponseToJSON,
    PageFormatTypeFromJSON,
    PageFormatTypeToJSON,
    ReportFormatTypeFromJSON,
    ReportFormatTypeToJSON,
} from '../models/index';

export interface GenerateBoostConsolidatedReportRequest {
    generateBoostConsolidatedRequest: GenerateBoostConsolidatedRequest;
    format?: ReportFormatType;
}

export interface GenerateCompetitorsPositionReportOperationRequest {
    generateCompetitorsPositionReportRequest: GenerateCompetitorsPositionReportRequest;
    format?: ReportFormatType;
}

export interface GenerateGoodsFeedbackReportRequest {
    generateGoodsFeedbackRequest: GenerateGoodsFeedbackRequest;
    format?: ReportFormatType;
}

export interface GenerateGoodsMovementReportOperationRequest {
    generateGoodsMovementReportRequest: GenerateGoodsMovementReportRequest;
    format?: ReportFormatType;
}

export interface GenerateGoodsRealizationReportOperationRequest {
    generateGoodsRealizationReportRequest: GenerateGoodsRealizationReportRequest;
    format?: ReportFormatType;
}

export interface GenerateGoodsTurnoverReportRequest {
    generateGoodsTurnoverRequest: GenerateGoodsTurnoverRequest;
    format?: ReportFormatType;
}

export interface GenerateMassOrderLabelsReportRequest {
    generateMassOrderLabelsRequest: GenerateMassOrderLabelsRequest;
    format?: PageFormatType;
}

export interface GeneratePricesReportOperationRequest {
    generatePricesReportRequest: GeneratePricesReportRequest;
    format?: ReportFormatType;
}

export interface GenerateShelfsStatisticsReportRequest {
    generateShelfsStatisticsRequest: GenerateShelfsStatisticsRequest;
    format?: ReportFormatType;
}

export interface GenerateShipmentListDocumentReportOperationRequest {
    generateShipmentListDocumentReportRequest: GenerateShipmentListDocumentReportRequest;
}

export interface GenerateShowsSalesReportOperationRequest {
    generateShowsSalesReportRequest: GenerateShowsSalesReportRequest;
    format?: ReportFormatType;
}

export interface GenerateStocksOnWarehousesReportOperationRequest {
    generateStocksOnWarehousesReportRequest: GenerateStocksOnWarehousesReportRequest;
    format?: ReportFormatType;
}

export interface GenerateUnitedMarketplaceServicesReportOperationRequest {
    generateUnitedMarketplaceServicesReportRequest: GenerateUnitedMarketplaceServicesReportRequest;
    format?: ReportFormatType;
}

export interface GenerateUnitedNettingReportOperationRequest {
    generateUnitedNettingReportRequest: GenerateUnitedNettingReportRequest;
    format?: ReportFormatType;
}

export interface GenerateUnitedOrdersReportRequest {
    generateUnitedOrdersRequest: GenerateUnitedOrdersRequest;
    format?: ReportFormatType;
}

export interface GetReportInfoRequest {
    reportId: string;
}

/**
 * 
 */
export class ReportsApi extends runtime.BaseAPI {

    /**
     * Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по бусту продаж
     */
    async generateBoostConsolidatedReportRaw(requestParameters: GenerateBoostConsolidatedReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenerateReportResponse>> {
        if (requestParameters['generateBoostConsolidatedRequest'] == null) {
            throw new runtime.RequiredError(
                'generateBoostConsolidatedRequest',
                'Required parameter "generateBoostConsolidatedRequest" was null or undefined when calling generateBoostConsolidatedReport().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/reports/boost-consolidated/generate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GenerateBoostConsolidatedRequestToJSON(requestParameters['generateBoostConsolidatedRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenerateReportResponseFromJSON(jsonValue));
    }

    /**
     * Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по бусту продаж
     */
    async generateBoostConsolidatedReport(requestParameters: GenerateBoostConsolidatedReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenerateReportResponse> {
        const response = await this.generateBoostConsolidatedReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \"Значение -1 в отчете\" %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| 
     * Отчет «Конкурентная позиция»
     */
    async generateCompetitorsPositionReportRaw(requestParameters: GenerateCompetitorsPositionReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenerateReportResponse>> {
        if (requestParameters['generateCompetitorsPositionReportRequest'] == null) {
            throw new runtime.RequiredError(
                'generateCompetitorsPositionReportRequest',
                'Required parameter "generateCompetitorsPositionReportRequest" was null or undefined when calling generateCompetitorsPositionReport().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/reports/competitors-position/generate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GenerateCompetitorsPositionReportRequestToJSON(requestParameters['generateCompetitorsPositionReportRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenerateReportResponseFromJSON(jsonValue));
    }

    /**
     * Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \"Значение -1 в отчете\" %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| 
     * Отчет «Конкурентная позиция»
     */
    async generateCompetitorsPositionReport(requestParameters: GenerateCompetitorsPositionReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenerateReportResponse> {
        const response = await this.generateCompetitorsPositionReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по отзывам о товарах
     */
    async generateGoodsFeedbackReportRaw(requestParameters: GenerateGoodsFeedbackReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenerateReportResponse>> {
        if (requestParameters['generateGoodsFeedbackRequest'] == null) {
            throw new runtime.RequiredError(
                'generateGoodsFeedbackRequest',
                'Required parameter "generateGoodsFeedbackRequest" was null or undefined when calling generateGoodsFeedbackReport().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/reports/goods-feedback/generate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GenerateGoodsFeedbackRequestToJSON(requestParameters['generateGoodsFeedbackRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenerateReportResponseFromJSON(jsonValue));
    }

    /**
     * Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по отзывам о товарах
     */
    async generateGoodsFeedbackReport(requestParameters: GenerateGoodsFeedbackReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenerateReportResponse> {
        const response = await this.generateGoodsFeedbackReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по движению товаров
     */
    async generateGoodsMovementReportRaw(requestParameters: GenerateGoodsMovementReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenerateReportResponse>> {
        if (requestParameters['generateGoodsMovementReportRequest'] == null) {
            throw new runtime.RequiredError(
                'generateGoodsMovementReportRequest',
                'Required parameter "generateGoodsMovementReportRequest" was null or undefined when calling generateGoodsMovementReport().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/reports/goods-movement/generate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GenerateGoodsMovementReportRequestToJSON(requestParameters['generateGoodsMovementReportRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenerateReportResponseFromJSON(jsonValue));
    }

    /**
     * Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по движению товаров
     */
    async generateGoodsMovementReport(requestParameters: GenerateGoodsMovementReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenerateReportResponse> {
        const response = await this.generateGoodsMovementReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по реализации
     */
    async generateGoodsRealizationReportRaw(requestParameters: GenerateGoodsRealizationReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenerateReportResponse>> {
        if (requestParameters['generateGoodsRealizationReportRequest'] == null) {
            throw new runtime.RequiredError(
                'generateGoodsRealizationReportRequest',
                'Required parameter "generateGoodsRealizationReportRequest" was null or undefined when calling generateGoodsRealizationReport().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/reports/goods-realization/generate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GenerateGoodsRealizationReportRequestToJSON(requestParameters['generateGoodsRealizationReportRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenerateReportResponseFromJSON(jsonValue));
    }

    /**
     * Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по реализации
     */
    async generateGoodsRealizationReport(requestParameters: GenerateGoodsRealizationReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenerateReportResponse> {
        const response = await this.generateGoodsRealizationReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по оборачиваемости
     */
    async generateGoodsTurnoverReportRaw(requestParameters: GenerateGoodsTurnoverReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenerateReportResponse>> {
        if (requestParameters['generateGoodsTurnoverRequest'] == null) {
            throw new runtime.RequiredError(
                'generateGoodsTurnoverRequest',
                'Required parameter "generateGoodsTurnoverRequest" was null or undefined when calling generateGoodsTurnoverReport().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/reports/goods-turnover/generate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GenerateGoodsTurnoverRequestToJSON(requestParameters['generateGoodsTurnoverRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenerateReportResponseFromJSON(jsonValue));
    }

    /**
     * Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по оборачиваемости
     */
    async generateGoodsTurnoverReport(requestParameters: GenerateGoodsTurnoverReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenerateReportResponse> {
        const response = await this.generateGoodsTurnoverReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| 
     * Готовые ярлыки‑наклейки на все коробки в нескольких заказах
     */
    async generateMassOrderLabelsReportRaw(requestParameters: GenerateMassOrderLabelsReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenerateReportResponse>> {
        if (requestParameters['generateMassOrderLabelsRequest'] == null) {
            throw new runtime.RequiredError(
                'generateMassOrderLabelsRequest',
                'Required parameter "generateMassOrderLabelsRequest" was null or undefined when calling generateMassOrderLabelsReport().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/reports/documents/labels/generate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GenerateMassOrderLabelsRequestToJSON(requestParameters['generateMassOrderLabelsRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenerateReportResponseFromJSON(jsonValue));
    }

    /**
     * Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| 
     * Готовые ярлыки‑наклейки на все коробки в нескольких заказах
     */
    async generateMassOrderLabelsReport(requestParameters: GenerateMassOrderLabelsReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenerateReportResponse> {
        const response = await this.generateMassOrderLabelsReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет «Цены на рынке»
     */
    async generatePricesReportRaw(requestParameters: GeneratePricesReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenerateReportResponse>> {
        if (requestParameters['generatePricesReportRequest'] == null) {
            throw new runtime.RequiredError(
                'generatePricesReportRequest',
                'Required parameter "generatePricesReportRequest" was null or undefined when calling generatePricesReport().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/reports/prices/generate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GeneratePricesReportRequestToJSON(requestParameters['generatePricesReportRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenerateReportResponseFromJSON(jsonValue));
    }

    /**
     * Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет «Цены на рынке»
     */
    async generatePricesReport(requestParameters: GeneratePricesReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenerateReportResponse> {
        const response = await this.generatePricesReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по полкам
     */
    async generateShelfsStatisticsReportRaw(requestParameters: GenerateShelfsStatisticsReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenerateReportResponse>> {
        if (requestParameters['generateShelfsStatisticsRequest'] == null) {
            throw new runtime.RequiredError(
                'generateShelfsStatisticsRequest',
                'Required parameter "generateShelfsStatisticsRequest" was null or undefined when calling generateShelfsStatisticsReport().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/reports/shelf-statistics/generate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GenerateShelfsStatisticsRequestToJSON(requestParameters['generateShelfsStatisticsRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenerateReportResponseFromJSON(jsonValue));
    }

    /**
     * Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по полкам
     */
    async generateShelfsStatisticsReport(requestParameters: GenerateShelfsStatisticsReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenerateReportResponse> {
        const response = await this.generateShelfsStatisticsReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Получение листа сборки
     */
    async generateShipmentListDocumentReportRaw(requestParameters: GenerateShipmentListDocumentReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenerateReportResponse>> {
        if (requestParameters['generateShipmentListDocumentReportRequest'] == null) {
            throw new runtime.RequiredError(
                'generateShipmentListDocumentReportRequest',
                'Required parameter "generateShipmentListDocumentReportRequest" was null or undefined when calling generateShipmentListDocumentReport().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/reports/documents/shipment-list/generate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GenerateShipmentListDocumentReportRequestToJSON(requestParameters['generateShipmentListDocumentReportRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenerateReportResponseFromJSON(jsonValue));
    }

    /**
     * Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Получение листа сборки
     */
    async generateShipmentListDocumentReport(requestParameters: GenerateShipmentListDocumentReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenerateReportResponse> {
        const response = await this.generateShipmentListDocumentReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| 
     * Отчет «Аналитика продаж»
     */
    async generateShowsSalesReportRaw(requestParameters: GenerateShowsSalesReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenerateReportResponse>> {
        if (requestParameters['generateShowsSalesReportRequest'] == null) {
            throw new runtime.RequiredError(
                'generateShowsSalesReportRequest',
                'Required parameter "generateShowsSalesReportRequest" was null or undefined when calling generateShowsSalesReport().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/reports/shows-sales/generate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GenerateShowsSalesReportRequestToJSON(requestParameters['generateShowsSalesReportRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenerateReportResponseFromJSON(jsonValue));
    }

    /**
     * Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| 
     * Отчет «Аналитика продаж»
     */
    async generateShowsSalesReport(requestParameters: GenerateShowsSalesReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenerateReportResponse> {
        const response = await this.generateShowsSalesReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по остаткам на складах
     */
    async generateStocksOnWarehousesReportRaw(requestParameters: GenerateStocksOnWarehousesReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenerateReportResponse>> {
        if (requestParameters['generateStocksOnWarehousesReportRequest'] == null) {
            throw new runtime.RequiredError(
                'generateStocksOnWarehousesReportRequest',
                'Required parameter "generateStocksOnWarehousesReportRequest" was null or undefined when calling generateStocksOnWarehousesReport().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/reports/stocks-on-warehouses/generate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GenerateStocksOnWarehousesReportRequestToJSON(requestParameters['generateStocksOnWarehousesReportRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenerateReportResponseFromJSON(jsonValue));
    }

    /**
     * Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по остаткам на складах
     */
    async generateStocksOnWarehousesReport(requestParameters: GenerateStocksOnWarehousesReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenerateReportResponse> {
        const response = await this.generateStocksOnWarehousesReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |-----------------------------|---------------------------------| |По дате начисления услуги    |`dateFrom` и `dateTo`            | |По дате формирования акта    |`year` и `month`                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по стоимости услуг
     */
    async generateUnitedMarketplaceServicesReportRaw(requestParameters: GenerateUnitedMarketplaceServicesReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenerateReportResponse>> {
        if (requestParameters['generateUnitedMarketplaceServicesReportRequest'] == null) {
            throw new runtime.RequiredError(
                'generateUnitedMarketplaceServicesReportRequest',
                'Required parameter "generateUnitedMarketplaceServicesReportRequest" was null or undefined when calling generateUnitedMarketplaceServicesReport().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/reports/united-marketplace-services/generate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GenerateUnitedMarketplaceServicesReportRequestToJSON(requestParameters['generateUnitedMarketplaceServicesReportRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenerateReportResponseFromJSON(jsonValue));
    }

    /**
     * Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |-----------------------------|---------------------------------| |По дате начисления услуги    |`dateFrom` и `dateTo`            | |По дате формирования акта    |`year` и `month`                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по стоимости услуг
     */
    async generateUnitedMarketplaceServicesReport(requestParameters: GenerateUnitedMarketplaceServicesReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenerateReportResponse> {
        const response = await this.generateUnitedMarketplaceServicesReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |-------------------------|---------------------------------------| |О платежах за период     |`dateFrom` и `dateTo`                  | |О платежном поручении    |`bankOrderId` и `bankOrderDateTime`    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по платежам
     */
    async generateUnitedNettingReportRaw(requestParameters: GenerateUnitedNettingReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenerateReportResponse>> {
        if (requestParameters['generateUnitedNettingReportRequest'] == null) {
            throw new runtime.RequiredError(
                'generateUnitedNettingReportRequest',
                'Required parameter "generateUnitedNettingReportRequest" was null or undefined when calling generateUnitedNettingReport().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/reports/united-netting/generate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GenerateUnitedNettingReportRequestToJSON(requestParameters['generateUnitedNettingReportRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenerateReportResponseFromJSON(jsonValue));
    }

    /**
     * Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |-------------------------|---------------------------------------| |О платежах за период     |`dateFrom` и `dateTo`                  | |О платежном поручении    |`bankOrderId` и `bankOrderDateTime`    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по платежам
     */
    async generateUnitedNettingReport(requestParameters: GenerateUnitedNettingReportOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenerateReportResponse> {
        const response = await this.generateUnitedNettingReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \"\" %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по заказам
     */
    async generateUnitedOrdersReportRaw(requestParameters: GenerateUnitedOrdersReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenerateReportResponse>> {
        if (requestParameters['generateUnitedOrdersRequest'] == null) {
            throw new runtime.RequiredError(
                'generateUnitedOrdersRequest',
                'Required parameter "generateUnitedOrdersRequest" was null or undefined when calling generateUnitedOrdersReport().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/reports/united-orders/generate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GenerateUnitedOrdersRequestToJSON(requestParameters['generateUnitedOrdersRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenerateReportResponseFromJSON(jsonValue));
    }

    /**
     * Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \"\" %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Отчет по заказам
     */
    async generateUnitedOrdersReport(requestParameters: GenerateUnitedOrdersReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenerateReportResponse> {
        const response = await this.generateUnitedOrdersReportRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
     * Получение заданного отчета
     */
    async getReportInfoRaw(requestParameters: GetReportInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetReportInfoResponse>> {
        if (requestParameters['reportId'] == null) {
            throw new runtime.RequiredError(
                'reportId',
                'Required parameter "reportId" was null or undefined when calling getReportInfo().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/reports/info/{reportId}`.replace(`{${"reportId"}}`, encodeURIComponent(String(requestParameters['reportId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetReportInfoResponseFromJSON(jsonValue));
    }

    /**
     * Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
     * Получение заданного отчета
     */
    async getReportInfo(requestParameters: GetReportInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetReportInfoResponse> {
        const response = await this.getReportInfoRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
