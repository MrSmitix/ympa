// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI, COLLECTION_FORMATS } from '../runtime';
import type { OperationOpts, HttpHeaders, HttpQuery } from '../runtime';
import type {
    ApiClientDataErrorResponse,
    ApiForbiddenErrorResponse,
    ApiLimitErrorResponse,
    ApiNotFoundErrorResponse,
    ApiServerErrorResponse,
    ApiUnauthorizedErrorResponse,
    EmptyApiResponse,
    GetOutletLicensesResponse,
    UpdateOutletLicenseRequest,
} from '../models';

export interface DeleteOutletLicensesRequest {
    campaignId: number;
    ids?: Set<number>;
}

export interface GetOutletLicensesRequest {
    campaignId: number;
    outletIds?: Set<number>;
    ids?: Set<number>;
}

export interface UpdateOutletLicensesRequest {
    campaignId: number;
    updateOutletLicenseRequest: UpdateOutletLicenseRequest;
}

/**
 * no description
 */
export class OutletLicensesApi extends BaseAPI {

    /**
     * Удаляет информацию о лицензиях для точек продаж.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| 
     * Удаление лицензий для точек продаж
     */
    deleteOutletLicenses({ campaignId, ids }: DeleteOutletLicensesRequest): Observable<EmptyApiResponse>
    deleteOutletLicenses({ campaignId, ids }: DeleteOutletLicensesRequest, opts?: OperationOpts): Observable<AjaxResponse<EmptyApiResponse>>
    deleteOutletLicenses({ campaignId, ids }: DeleteOutletLicensesRequest, opts?: OperationOpts): Observable<EmptyApiResponse | AjaxResponse<EmptyApiResponse>> {
        throwIfNullOrUndefined(campaignId, 'campaignId', 'deleteOutletLicenses');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('OAuth', ['market:partner-api'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (ids != null) { query['ids'] = ids.join(COLLECTION_FORMATS['csv']); }

        return this.request<EmptyApiResponse>({
            url: '/campaigns/{campaignId}/outlets/licenses'.replace('{campaignId}', encodeURI(campaignId)),
            method: 'DELETE',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Возвращает информацию о лицензиях для точек продаж.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| 
     * Информация о лицензиях для точек продаж
     */
    getOutletLicenses({ campaignId, outletIds, ids }: GetOutletLicensesRequest): Observable<GetOutletLicensesResponse>
    getOutletLicenses({ campaignId, outletIds, ids }: GetOutletLicensesRequest, opts?: OperationOpts): Observable<AjaxResponse<GetOutletLicensesResponse>>
    getOutletLicenses({ campaignId, outletIds, ids }: GetOutletLicensesRequest, opts?: OperationOpts): Observable<GetOutletLicensesResponse | AjaxResponse<GetOutletLicensesResponse>> {
        throwIfNullOrUndefined(campaignId, 'campaignId', 'getOutletLicenses');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('OAuth', ['market:partner-api'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (outletIds != null) { query['outletIds'] = outletIds.join(COLLECTION_FORMATS['csv']); }
        if (ids != null) { query['ids'] = ids.join(COLLECTION_FORMATS['csv']); }

        return this.request<GetOutletLicensesResponse>({
            url: '/campaigns/{campaignId}/outlets/licenses'.replace('{campaignId}', encodeURI(campaignId)),
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     * Передает информацию о новых и существующих лицензиях для точек продаж. Поддерживаются только лицензии на розничную продажу алкоголя.  Чтобы размещать алкогольную продукцию на Маркете, надо также прислать гарантийное письмо (если вы еще не делали этого раньше) и правильно оформить предложения в прайс-листе. Далее информация о лицензиях проходит проверку.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| 
     * Создание и изменение лицензий для точек продаж
     */
    updateOutletLicenses({ campaignId, updateOutletLicenseRequest }: UpdateOutletLicensesRequest): Observable<EmptyApiResponse>
    updateOutletLicenses({ campaignId, updateOutletLicenseRequest }: UpdateOutletLicensesRequest, opts?: OperationOpts): Observable<AjaxResponse<EmptyApiResponse>>
    updateOutletLicenses({ campaignId, updateOutletLicenseRequest }: UpdateOutletLicensesRequest, opts?: OperationOpts): Observable<EmptyApiResponse | AjaxResponse<EmptyApiResponse>> {
        throwIfNullOrUndefined(campaignId, 'campaignId', 'updateOutletLicenses');
        throwIfNullOrUndefined(updateOutletLicenseRequest, 'updateOutletLicenseRequest', 'updateOutletLicenses');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('OAuth', ['market:partner-api'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        return this.request<EmptyApiResponse>({
            url: '/campaigns/{campaignId}/outlets/licenses'.replace('{campaignId}', encodeURI(campaignId)),
            method: 'POST',
            headers,
            body: updateOutletLicenseRequest,
        }, opts?.responseOpts);
    };

}
