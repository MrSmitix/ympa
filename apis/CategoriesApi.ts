/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiClientDataErrorResponse,
  ApiForbiddenErrorResponse,
  ApiLimitErrorResponse,
  ApiNotFoundErrorResponse,
  ApiServerErrorResponse,
  ApiUnauthorizedErrorResponse,
  GetCategoriesMaxSaleQuantumRequest,
  GetCategoriesMaxSaleQuantumResponse,
  GetCategoriesRequest,
  GetCategoriesResponse,
} from '../models/index';
import {
    ApiClientDataErrorResponseFromJSON,
    ApiClientDataErrorResponseToJSON,
    ApiForbiddenErrorResponseFromJSON,
    ApiForbiddenErrorResponseToJSON,
    ApiLimitErrorResponseFromJSON,
    ApiLimitErrorResponseToJSON,
    ApiNotFoundErrorResponseFromJSON,
    ApiNotFoundErrorResponseToJSON,
    ApiServerErrorResponseFromJSON,
    ApiServerErrorResponseToJSON,
    ApiUnauthorizedErrorResponseFromJSON,
    ApiUnauthorizedErrorResponseToJSON,
    GetCategoriesMaxSaleQuantumRequestFromJSON,
    GetCategoriesMaxSaleQuantumRequestToJSON,
    GetCategoriesMaxSaleQuantumResponseFromJSON,
    GetCategoriesMaxSaleQuantumResponseToJSON,
    GetCategoriesRequestFromJSON,
    GetCategoriesRequestToJSON,
    GetCategoriesResponseFromJSON,
    GetCategoriesResponseToJSON,
} from '../models/index';

export interface GetCategoriesMaxSaleQuantumOperationRequest {
    getCategoriesMaxSaleQuantumRequest: GetCategoriesMaxSaleQuantumRequest;
}

export interface GetCategoriesTreeRequest {
    getCategoriesRequest?: GetCategoriesRequest;
}

/**
 * 
 */
export class CategoriesApi extends runtime.BaseAPI {

    /**
     * Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
     * Лимит на установку кванта продажи и минимального количества товаров в заказе
     */
    async getCategoriesMaxSaleQuantumRaw(requestParameters: GetCategoriesMaxSaleQuantumOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetCategoriesMaxSaleQuantumResponse>> {
        if (requestParameters['getCategoriesMaxSaleQuantumRequest'] == null) {
            throw new runtime.RequiredError(
                'getCategoriesMaxSaleQuantumRequest',
                'Required parameter "getCategoriesMaxSaleQuantumRequest" was null or undefined when calling getCategoriesMaxSaleQuantum().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/categories/max-sale-quantum`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GetCategoriesMaxSaleQuantumRequestToJSON(requestParameters['getCategoriesMaxSaleQuantumRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetCategoriesMaxSaleQuantumResponseFromJSON(jsonValue));
    }

    /**
     * Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
     * Лимит на установку кванта продажи и минимального количества товаров в заказе
     */
    async getCategoriesMaxSaleQuantum(requestParameters: GetCategoriesMaxSaleQuantumOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetCategoriesMaxSaleQuantumResponse> {
        const response = await this.getCategoriesMaxSaleQuantumRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
     * Дерево категорий
     */
    async getCategoriesTreeRaw(requestParameters: GetCategoriesTreeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetCategoriesResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth", ["market:partner-api"]);
        }

        const response = await this.request({
            path: `/categories/tree`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GetCategoriesRequestToJSON(requestParameters['getCategoriesRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetCategoriesResponseFromJSON(jsonValue));
    }

    /**
     * Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
     * Дерево категорий
     */
    async getCategoriesTree(requestParameters: GetCategoriesTreeRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetCategoriesResponse> {
        const response = await this.getCategoriesTreeRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
