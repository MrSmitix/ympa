// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpHeaders, HttpQuery } from '../runtime';
import type {
    ApiClientDataErrorResponse,
    ApiForbiddenErrorResponse,
    ApiLimitErrorResponse,
    ApiNotFoundErrorResponse,
    ApiServerErrorResponse,
    ApiUnauthorizedErrorResponse,
    GetFeedbackListResponse,
} from '../models';

export interface GetFeedbackAndCommentUpdatesRequest {
    campaignId: number;
    pageToken?: string;
    limit?: number;
    fromDate?: string;
}

/**
 * no description
 */
export class FeedbacksApi extends BaseAPI {

    /**
     * {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает новые и обновленные отзывы о магазине на Маркете.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов. Выходные данные содержат идентификатор следующей страницы.  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * Новые и обновленные отзывы о магазине
     */
    getFeedbackAndCommentUpdates({ campaignId, pageToken, limit, fromDate }: GetFeedbackAndCommentUpdatesRequest): Observable<GetFeedbackListResponse>
    getFeedbackAndCommentUpdates({ campaignId, pageToken, limit, fromDate }: GetFeedbackAndCommentUpdatesRequest, opts?: OperationOpts): Observable<AjaxResponse<GetFeedbackListResponse>>
    getFeedbackAndCommentUpdates({ campaignId, pageToken, limit, fromDate }: GetFeedbackAndCommentUpdatesRequest, opts?: OperationOpts): Observable<GetFeedbackListResponse | AjaxResponse<GetFeedbackListResponse>> {
        throwIfNullOrUndefined(campaignId, 'campaignId', 'getFeedbackAndCommentUpdates');

        const headers: HttpHeaders = {
            // oauth required
            ...(this.configuration.accessToken != null
                ? { Authorization: typeof this.configuration.accessToken === 'function'
                    ? this.configuration.accessToken('OAuth', ['market:partner-api'])
                    : this.configuration.accessToken }
                : undefined
            ),
        };

        const query: HttpQuery = {};

        if (pageToken != null) { query['page_token'] = pageToken; }
        if (limit != null) { query['limit'] = limit; }
        if (fromDate != null) { query['from_date'] = (fromDate as any).toISOString().split('T')[0]; }

        return this.request<GetFeedbackListResponse>({
            url: '/campaigns/{campaignId}/feedback/updates'.replace('{campaignId}', encodeURI(campaignId)),
            method: 'GET',
            headers,
            query,
        }, opts?.responseOpts);
    };

}
