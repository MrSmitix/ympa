# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.get_promo_dto import GetPromoDTO
from ympa_python_aiohttp_server import util


class GetPromosResultDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, promos: List[GetPromoDTO]=None):
        """GetPromosResultDTO - a model defined in OpenAPI

        :param promos: The promos of this GetPromosResultDTO.
        """
        self.openapi_types = {
            'promos': List[GetPromoDTO]
        }

        self.attribute_map = {
            'promos': 'promos'
        }

        self._promos = promos

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetPromosResultDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetPromosResultDTO of this GetPromosResultDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def promos(self):
        """Gets the promos of this GetPromosResultDTO.

        Акции Маркета.

        :return: The promos of this GetPromosResultDTO.
        :rtype: List[GetPromoDTO]
        """
        return self._promos

    @promos.setter
    def promos(self, promos):
        """Sets the promos of this GetPromosResultDTO.

        Акции Маркета.

        :param promos: The promos of this GetPromosResultDTO.
        :type promos: List[GetPromoDTO]
        """
        if promos is None:
            raise ValueError("Invalid value for `promos`, must not be `None`")

        self._promos = promos
