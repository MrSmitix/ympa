# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.feed_download_error_dto import FeedDownloadErrorDTO
from ympa_python_aiohttp_server.models.feed_status_type import FeedStatusType
from ympa_python_aiohttp_server import util


class FeedDownloadDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: FeedStatusType=None, error: FeedDownloadErrorDTO=None):
        """FeedDownloadDTO - a model defined in OpenAPI

        :param status: The status of this FeedDownloadDTO.
        :param error: The error of this FeedDownloadDTO.
        """
        self.openapi_types = {
            'status': FeedStatusType,
            'error': FeedDownloadErrorDTO
        }

        self.attribute_map = {
            'status': 'status',
            'error': 'error'
        }

        self._status = status
        self._error = error

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FeedDownloadDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FeedDownloadDTO of this FeedDownloadDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this FeedDownloadDTO.


        :return: The status of this FeedDownloadDTO.
        :rtype: FeedStatusType
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this FeedDownloadDTO.


        :param status: The status of this FeedDownloadDTO.
        :type status: FeedStatusType
        """

        self._status = status

    @property
    def error(self):
        """Gets the error of this FeedDownloadDTO.


        :return: The error of this FeedDownloadDTO.
        :rtype: FeedDownloadErrorDTO
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this FeedDownloadDTO.


        :param error: The error of this FeedDownloadDTO.
        :type error: FeedDownloadErrorDTO
        """

        self._error = error
