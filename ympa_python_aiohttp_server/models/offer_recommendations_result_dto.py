# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.offer_recommendation_dto import OfferRecommendationDTO
from ympa_python_aiohttp_server.models.scrolling_pager_dto import ScrollingPagerDTO
from ympa_python_aiohttp_server import util


class OfferRecommendationsResultDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, paging: ScrollingPagerDTO=None, offer_recommendations: List[OfferRecommendationDTO]=None):
        """OfferRecommendationsResultDTO - a model defined in OpenAPI

        :param paging: The paging of this OfferRecommendationsResultDTO.
        :param offer_recommendations: The offer_recommendations of this OfferRecommendationsResultDTO.
        """
        self.openapi_types = {
            'paging': ScrollingPagerDTO,
            'offer_recommendations': List[OfferRecommendationDTO]
        }

        self.attribute_map = {
            'paging': 'paging',
            'offer_recommendations': 'offerRecommendations'
        }

        self._paging = paging
        self._offer_recommendations = offer_recommendations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OfferRecommendationsResultDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OfferRecommendationsResultDTO of this OfferRecommendationsResultDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def paging(self):
        """Gets the paging of this OfferRecommendationsResultDTO.


        :return: The paging of this OfferRecommendationsResultDTO.
        :rtype: ScrollingPagerDTO
        """
        return self._paging

    @paging.setter
    def paging(self, paging):
        """Sets the paging of this OfferRecommendationsResultDTO.


        :param paging: The paging of this OfferRecommendationsResultDTO.
        :type paging: ScrollingPagerDTO
        """

        self._paging = paging

    @property
    def offer_recommendations(self):
        """Gets the offer_recommendations of this OfferRecommendationsResultDTO.

        Страница списка товаров.

        :return: The offer_recommendations of this OfferRecommendationsResultDTO.
        :rtype: List[OfferRecommendationDTO]
        """
        return self._offer_recommendations

    @offer_recommendations.setter
    def offer_recommendations(self, offer_recommendations):
        """Sets the offer_recommendations of this OfferRecommendationsResultDTO.

        Страница списка товаров.

        :param offer_recommendations: The offer_recommendations of this OfferRecommendationsResultDTO.
        :type offer_recommendations: List[OfferRecommendationDTO]
        """
        if offer_recommendations is None:
            raise ValueError("Invalid value for `offer_recommendations`, must not be `None`")

        self._offer_recommendations = offer_recommendations
