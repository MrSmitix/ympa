# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.return_instance_status_type import ReturnInstanceStatusType
from ympa_python_aiohttp_server.models.return_instance_stock_type import ReturnInstanceStockType
from ympa_python_aiohttp_server import util


class ReturnInstanceDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stock_type: ReturnInstanceStockType=None, status: ReturnInstanceStatusType=None, cis: str=None, imei: str=None):
        """ReturnInstanceDTO - a model defined in OpenAPI

        :param stock_type: The stock_type of this ReturnInstanceDTO.
        :param status: The status of this ReturnInstanceDTO.
        :param cis: The cis of this ReturnInstanceDTO.
        :param imei: The imei of this ReturnInstanceDTO.
        """
        self.openapi_types = {
            'stock_type': ReturnInstanceStockType,
            'status': ReturnInstanceStatusType,
            'cis': str,
            'imei': str
        }

        self.attribute_map = {
            'stock_type': 'stockType',
            'status': 'status',
            'cis': 'cis',
            'imei': 'imei'
        }

        self._stock_type = stock_type
        self._status = status
        self._cis = cis
        self._imei = imei

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReturnInstanceDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReturnInstanceDTO of this ReturnInstanceDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stock_type(self):
        """Gets the stock_type of this ReturnInstanceDTO.


        :return: The stock_type of this ReturnInstanceDTO.
        :rtype: ReturnInstanceStockType
        """
        return self._stock_type

    @stock_type.setter
    def stock_type(self, stock_type):
        """Sets the stock_type of this ReturnInstanceDTO.


        :param stock_type: The stock_type of this ReturnInstanceDTO.
        :type stock_type: ReturnInstanceStockType
        """

        self._stock_type = stock_type

    @property
    def status(self):
        """Gets the status of this ReturnInstanceDTO.


        :return: The status of this ReturnInstanceDTO.
        :rtype: ReturnInstanceStatusType
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ReturnInstanceDTO.


        :param status: The status of this ReturnInstanceDTO.
        :type status: ReturnInstanceStatusType
        """

        self._status = status

    @property
    def cis(self):
        """Gets the cis of this ReturnInstanceDTO.

        Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).

        :return: The cis of this ReturnInstanceDTO.
        :rtype: str
        """
        return self._cis

    @cis.setter
    def cis(self, cis):
        """Sets the cis of this ReturnInstanceDTO.

        Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).

        :param cis: The cis of this ReturnInstanceDTO.
        :type cis: str
        """

        self._cis = cis

    @property
    def imei(self):
        """Gets the imei of this ReturnInstanceDTO.

        Международный идентификатор мобильного оборудования.

        :return: The imei of this ReturnInstanceDTO.
        :rtype: str
        """
        return self._imei

    @imei.setter
    def imei(self, imei):
        """Sets the imei of this ReturnInstanceDTO.

        Международный идентификатор мобильного оборудования.

        :param imei: The imei of this ReturnInstanceDTO.
        :type imei: str
        """

        self._imei = imei
