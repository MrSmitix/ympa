# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.parcel_box_dto import ParcelBoxDTO
from ympa_python_aiohttp_server import util


class ShipmentBoxesDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, boxes: List[ParcelBoxDTO]=None):
        """ShipmentBoxesDTO - a model defined in OpenAPI

        :param boxes: The boxes of this ShipmentBoxesDTO.
        """
        self.openapi_types = {
            'boxes': List[ParcelBoxDTO]
        }

        self.attribute_map = {
            'boxes': 'boxes'
        }

        self._boxes = boxes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShipmentBoxesDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShipmentBoxesDTO of this ShipmentBoxesDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def boxes(self):
        """Gets the boxes of this ShipmentBoxesDTO.

        Список грузовых мест. Маркет определил количество мест по длине этого списка. 

        :return: The boxes of this ShipmentBoxesDTO.
        :rtype: List[ParcelBoxDTO]
        """
        return self._boxes

    @boxes.setter
    def boxes(self, boxes):
        """Sets the boxes of this ShipmentBoxesDTO.

        Список грузовых мест. Маркет определил количество мест по длине этого списка. 

        :param boxes: The boxes of this ShipmentBoxesDTO.
        :type boxes: List[ParcelBoxDTO]
        """
        if boxes is None:
            raise ValueError("Invalid value for `boxes`, must not be `None`")

        self._boxes = boxes
