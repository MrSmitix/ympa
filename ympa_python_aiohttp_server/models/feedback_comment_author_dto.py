# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.feedback_comment_author_type import FeedbackCommentAuthorType
from ympa_python_aiohttp_server import util


class FeedbackCommentAuthorDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: FeedbackCommentAuthorType=None, name: str=None):
        """FeedbackCommentAuthorDTO - a model defined in OpenAPI

        :param type: The type of this FeedbackCommentAuthorDTO.
        :param name: The name of this FeedbackCommentAuthorDTO.
        """
        self.openapi_types = {
            'type': FeedbackCommentAuthorType,
            'name': str
        }

        self.attribute_map = {
            'type': 'type',
            'name': 'name'
        }

        self._type = type
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FeedbackCommentAuthorDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FeedbackCommentAuthorDTO of this FeedbackCommentAuthorDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this FeedbackCommentAuthorDTO.


        :return: The type of this FeedbackCommentAuthorDTO.
        :rtype: FeedbackCommentAuthorType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this FeedbackCommentAuthorDTO.


        :param type: The type of this FeedbackCommentAuthorDTO.
        :type type: FeedbackCommentAuthorType
        """

        self._type = type

    @property
    def name(self):
        """Gets the name of this FeedbackCommentAuthorDTO.

        Имя автора отзыва или название магазина.

        :return: The name of this FeedbackCommentAuthorDTO.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this FeedbackCommentAuthorDTO.

        Имя автора отзыва или название магазина.

        :param name: The name of this FeedbackCommentAuthorDTO.
        :type name: str
        """

        self._name = name
