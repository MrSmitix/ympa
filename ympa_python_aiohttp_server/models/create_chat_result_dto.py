# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server import util


class CreateChatResultDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chat_id: int=None):
        """CreateChatResultDTO - a model defined in OpenAPI

        :param chat_id: The chat_id of this CreateChatResultDTO.
        """
        self.openapi_types = {
            'chat_id': int
        }

        self.attribute_map = {
            'chat_id': 'chatId'
        }

        self._chat_id = chat_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateChatResultDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateChatResultDTO of this CreateChatResultDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chat_id(self):
        """Gets the chat_id of this CreateChatResultDTO.

        Идентификатор чата.

        :return: The chat_id of this CreateChatResultDTO.
        :rtype: int
        """
        return self._chat_id

    @chat_id.setter
    def chat_id(self, chat_id):
        """Sets the chat_id of this CreateChatResultDTO.

        Идентификатор чата.

        :param chat_id: The chat_id of this CreateChatResultDTO.
        :type chat_id: int
        """
        if chat_id is None:
            raise ValueError("Invalid value for `chat_id`, must not be `None`")

        self._chat_id = chat_id
