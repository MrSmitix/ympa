# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server import util


class TransferOrdersFromShipmentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, order_ids: List[int]=None):
        """TransferOrdersFromShipmentRequest - a model defined in OpenAPI

        :param order_ids: The order_ids of this TransferOrdersFromShipmentRequest.
        """
        self.openapi_types = {
            'order_ids': List[int]
        }

        self.attribute_map = {
            'order_ids': 'orderIds'
        }

        self._order_ids = order_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransferOrdersFromShipmentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransferOrdersFromShipmentRequest of this TransferOrdersFromShipmentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def order_ids(self):
        """Gets the order_ids of this TransferOrdersFromShipmentRequest.

        Список заказов, которые вы не успеваете подготовить.

        :return: The order_ids of this TransferOrdersFromShipmentRequest.
        :rtype: List[int]
        """
        return self._order_ids

    @order_ids.setter
    def order_ids(self, order_ids):
        """Sets the order_ids of this TransferOrdersFromShipmentRequest.

        Список заказов, которые вы не успеваете подготовить.

        :param order_ids: The order_ids of this TransferOrdersFromShipmentRequest.
        :type order_ids: List[int]
        """
        if order_ids is None:
            raise ValueError("Invalid value for `order_ids`, must not be `None`")
        if order_ids is not None and len(order_ids) > 500:
            raise ValueError("Invalid value for `order_ids`, number of items must be less than or equal to `500`")
        if order_ids is not None and len(order_ids) < 1:
            raise ValueError("Invalid value for `order_ids`, number of items must be greater than or equal to `1`")

        self._order_ids = order_ids
