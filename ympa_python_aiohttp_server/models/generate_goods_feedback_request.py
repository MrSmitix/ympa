# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server import util


class GenerateGoodsFeedbackRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, business_id: int=None):
        """GenerateGoodsFeedbackRequest - a model defined in OpenAPI

        :param business_id: The business_id of this GenerateGoodsFeedbackRequest.
        """
        self.openapi_types = {
            'business_id': int
        }

        self.attribute_map = {
            'business_id': 'businessId'
        }

        self._business_id = business_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenerateGoodsFeedbackRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenerateGoodsFeedbackRequest of this GenerateGoodsFeedbackRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def business_id(self):
        """Gets the business_id of this GenerateGoodsFeedbackRequest.

        Идентификатор бизнеса.

        :return: The business_id of this GenerateGoodsFeedbackRequest.
        :rtype: int
        """
        return self._business_id

    @business_id.setter
    def business_id(self, business_id):
        """Sets the business_id of this GenerateGoodsFeedbackRequest.

        Идентификатор бизнеса.

        :param business_id: The business_id of this GenerateGoodsFeedbackRequest.
        :type business_id: int
        """
        if business_id is None:
            raise ValueError("Invalid value for `business_id`, must not be `None`")

        self._business_id = business_id
