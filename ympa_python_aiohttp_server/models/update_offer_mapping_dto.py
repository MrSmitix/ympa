# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.update_mapping_dto import UpdateMappingDTO
from ympa_python_aiohttp_server.models.update_offer_dto import UpdateOfferDTO
from ympa_python_aiohttp_server import util


class UpdateOfferMappingDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offer: UpdateOfferDTO=None, mapping: UpdateMappingDTO=None):
        """UpdateOfferMappingDTO - a model defined in OpenAPI

        :param offer: The offer of this UpdateOfferMappingDTO.
        :param mapping: The mapping of this UpdateOfferMappingDTO.
        """
        self.openapi_types = {
            'offer': UpdateOfferDTO,
            'mapping': UpdateMappingDTO
        }

        self.attribute_map = {
            'offer': 'offer',
            'mapping': 'mapping'
        }

        self._offer = offer
        self._mapping = mapping

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateOfferMappingDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateOfferMappingDTO of this UpdateOfferMappingDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offer(self):
        """Gets the offer of this UpdateOfferMappingDTO.


        :return: The offer of this UpdateOfferMappingDTO.
        :rtype: UpdateOfferDTO
        """
        return self._offer

    @offer.setter
    def offer(self, offer):
        """Sets the offer of this UpdateOfferMappingDTO.


        :param offer: The offer of this UpdateOfferMappingDTO.
        :type offer: UpdateOfferDTO
        """
        if offer is None:
            raise ValueError("Invalid value for `offer`, must not be `None`")

        self._offer = offer

    @property
    def mapping(self):
        """Gets the mapping of this UpdateOfferMappingDTO.


        :return: The mapping of this UpdateOfferMappingDTO.
        :rtype: UpdateMappingDTO
        """
        return self._mapping

    @mapping.setter
    def mapping(self, mapping):
        """Sets the mapping of this UpdateOfferMappingDTO.


        :param mapping: The mapping of this UpdateOfferMappingDTO.
        :type mapping: UpdateMappingDTO
        """

        self._mapping = mapping
