# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.promo_offer_auto_participating_details_dto import PromoOfferAutoParticipatingDetailsDTO
from ympa_python_aiohttp_server.models.promo_offer_params_dto import PromoOfferParamsDTO
from ympa_python_aiohttp_server.models.promo_offer_participation_status_type import PromoOfferParticipationStatusType
import re
from ympa_python_aiohttp_server import util


class GetPromoOfferDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offer_id: str=None, status: PromoOfferParticipationStatusType=None, params: PromoOfferParamsDTO=None, auto_participating_details: PromoOfferAutoParticipatingDetailsDTO=None):
        """GetPromoOfferDTO - a model defined in OpenAPI

        :param offer_id: The offer_id of this GetPromoOfferDTO.
        :param status: The status of this GetPromoOfferDTO.
        :param params: The params of this GetPromoOfferDTO.
        :param auto_participating_details: The auto_participating_details of this GetPromoOfferDTO.
        """
        self.openapi_types = {
            'offer_id': str,
            'status': PromoOfferParticipationStatusType,
            'params': PromoOfferParamsDTO,
            'auto_participating_details': PromoOfferAutoParticipatingDetailsDTO
        }

        self.attribute_map = {
            'offer_id': 'offerId',
            'status': 'status',
            'params': 'params',
            'auto_participating_details': 'autoParticipatingDetails'
        }

        self._offer_id = offer_id
        self._status = status
        self._params = params
        self._auto_participating_details = auto_participating_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetPromoOfferDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetPromoOfferDTO of this GetPromoOfferDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offer_id(self):
        """Gets the offer_id of this GetPromoOfferDTO.

        Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 

        :return: The offer_id of this GetPromoOfferDTO.
        :rtype: str
        """
        return self._offer_id

    @offer_id.setter
    def offer_id(self, offer_id):
        """Sets the offer_id of this GetPromoOfferDTO.

        Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 

        :param offer_id: The offer_id of this GetPromoOfferDTO.
        :type offer_id: str
        """
        if offer_id is None:
            raise ValueError("Invalid value for `offer_id`, must not be `None`")
        if offer_id is not None and len(offer_id) > 255:
            raise ValueError("Invalid value for `offer_id`, length must be less than or equal to `255`")
        if offer_id is not None and len(offer_id) < 1:
            raise ValueError("Invalid value for `offer_id`, length must be greater than or equal to `1`")
        if offer_id is not None and not re.search(r'^[^\x00-\x08\x0A-\x1f\x7f]{1,255}$', offer_id):
            raise ValueError("Invalid value for `offer_id`, must be a follow pattern or equal to `/^[^\x00-\x08\x0A-\x1f\x7f]{1,255}$/`")

        self._offer_id = offer_id

    @property
    def status(self):
        """Gets the status of this GetPromoOfferDTO.


        :return: The status of this GetPromoOfferDTO.
        :rtype: PromoOfferParticipationStatusType
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetPromoOfferDTO.


        :param status: The status of this GetPromoOfferDTO.
        :type status: PromoOfferParticipationStatusType
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def params(self):
        """Gets the params of this GetPromoOfferDTO.


        :return: The params of this GetPromoOfferDTO.
        :rtype: PromoOfferParamsDTO
        """
        return self._params

    @params.setter
    def params(self, params):
        """Sets the params of this GetPromoOfferDTO.


        :param params: The params of this GetPromoOfferDTO.
        :type params: PromoOfferParamsDTO
        """
        if params is None:
            raise ValueError("Invalid value for `params`, must not be `None`")

        self._params = params

    @property
    def auto_participating_details(self):
        """Gets the auto_participating_details of this GetPromoOfferDTO.


        :return: The auto_participating_details of this GetPromoOfferDTO.
        :rtype: PromoOfferAutoParticipatingDetailsDTO
        """
        return self._auto_participating_details

    @auto_participating_details.setter
    def auto_participating_details(self, auto_participating_details):
        """Sets the auto_participating_details of this GetPromoOfferDTO.


        :param auto_participating_details: The auto_participating_details of this GetPromoOfferDTO.
        :type auto_participating_details: PromoOfferAutoParticipatingDetailsDTO
        """

        self._auto_participating_details = auto_participating_details
