# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.region_dto import RegionDTO
from ympa_python_aiohttp_server import util


class FeedbackAuthorDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, region: RegionDTO=None):
        """FeedbackAuthorDTO - a model defined in OpenAPI

        :param name: The name of this FeedbackAuthorDTO.
        :param region: The region of this FeedbackAuthorDTO.
        """
        self.openapi_types = {
            'name': str,
            'region': RegionDTO
        }

        self.attribute_map = {
            'name': 'name',
            'region': 'region'
        }

        self._name = name
        self._region = region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FeedbackAuthorDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FeedbackAuthorDTO of this FeedbackAuthorDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this FeedbackAuthorDTO.

        Имя автора отзыва.

        :return: The name of this FeedbackAuthorDTO.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this FeedbackAuthorDTO.

        Имя автора отзыва.

        :param name: The name of this FeedbackAuthorDTO.
        :type name: str
        """

        self._name = name

    @property
    def region(self):
        """Gets the region of this FeedbackAuthorDTO.


        :return: The region of this FeedbackAuthorDTO.
        :rtype: RegionDTO
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this FeedbackAuthorDTO.


        :param region: The region of this FeedbackAuthorDTO.
        :type region: RegionDTO
        """

        self._region = region
