# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.quality_rating_affected_order_dto import QualityRatingAffectedOrderDTO
from ympa_python_aiohttp_server import util


class QualityRatingDetailsDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, affected_orders: List[QualityRatingAffectedOrderDTO]=None):
        """QualityRatingDetailsDTO - a model defined in OpenAPI

        :param affected_orders: The affected_orders of this QualityRatingDetailsDTO.
        """
        self.openapi_types = {
            'affected_orders': List[QualityRatingAffectedOrderDTO]
        }

        self.attribute_map = {
            'affected_orders': 'affectedOrders'
        }

        self._affected_orders = affected_orders

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QualityRatingDetailsDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QualityRatingDetailsDTO of this QualityRatingDetailsDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def affected_orders(self):
        """Gets the affected_orders of this QualityRatingDetailsDTO.

        Список заказов, которые повлияли на индекс качества.

        :return: The affected_orders of this QualityRatingDetailsDTO.
        :rtype: List[QualityRatingAffectedOrderDTO]
        """
        return self._affected_orders

    @affected_orders.setter
    def affected_orders(self, affected_orders):
        """Sets the affected_orders of this QualityRatingDetailsDTO.

        Список заказов, которые повлияли на индекс качества.

        :param affected_orders: The affected_orders of this QualityRatingDetailsDTO.
        :type affected_orders: List[QualityRatingAffectedOrderDTO]
        """
        if affected_orders is None:
            raise ValueError("Invalid value for `affected_orders`, must not be `None`")

        self._affected_orders = affected_orders
