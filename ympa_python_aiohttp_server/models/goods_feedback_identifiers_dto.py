# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server import util


class GoodsFeedbackIdentifiersDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, order_id: int=None, model_id: int=None):
        """GoodsFeedbackIdentifiersDTO - a model defined in OpenAPI

        :param order_id: The order_id of this GoodsFeedbackIdentifiersDTO.
        :param model_id: The model_id of this GoodsFeedbackIdentifiersDTO.
        """
        self.openapi_types = {
            'order_id': int,
            'model_id': int
        }

        self.attribute_map = {
            'order_id': 'orderId',
            'model_id': 'modelId'
        }

        self._order_id = order_id
        self._model_id = model_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoodsFeedbackIdentifiersDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoodsFeedbackIdentifiersDTO of this GoodsFeedbackIdentifiersDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def order_id(self):
        """Gets the order_id of this GoodsFeedbackIdentifiersDTO.

        Идентификатор заказа на Маркете.

        :return: The order_id of this GoodsFeedbackIdentifiersDTO.
        :rtype: int
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this GoodsFeedbackIdentifiersDTO.

        Идентификатор заказа на Маркете.

        :param order_id: The order_id of this GoodsFeedbackIdentifiersDTO.
        :type order_id: int
        """
        if order_id is None:
            raise ValueError("Invalid value for `order_id`, must not be `None`")

        self._order_id = order_id

    @property
    def model_id(self):
        """Gets the model_id of this GoodsFeedbackIdentifiersDTO.

        Идентификатор модели товара.

        :return: The model_id of this GoodsFeedbackIdentifiersDTO.
        :rtype: int
        """
        return self._model_id

    @model_id.setter
    def model_id(self, model_id):
        """Sets the model_id of this GoodsFeedbackIdentifiersDTO.

        Идентификатор модели товара.

        :param model_id: The model_id of this GoodsFeedbackIdentifiersDTO.
        :type model_id: int
        """
        if model_id is None:
            raise ValueError("Invalid value for `model_id`, must not be `None`")

        self._model_id = model_id
