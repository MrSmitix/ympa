# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.order_promo_type import OrderPromoType
from ympa_python_aiohttp_server import util


class OrderItemPromoDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: OrderPromoType=None, discount: float=None, subsidy: float=None, shop_promo_id: str=None, market_promo_id: str=None):
        """OrderItemPromoDTO - a model defined in OpenAPI

        :param type: The type of this OrderItemPromoDTO.
        :param discount: The discount of this OrderItemPromoDTO.
        :param subsidy: The subsidy of this OrderItemPromoDTO.
        :param shop_promo_id: The shop_promo_id of this OrderItemPromoDTO.
        :param market_promo_id: The market_promo_id of this OrderItemPromoDTO.
        """
        self.openapi_types = {
            'type': OrderPromoType,
            'discount': float,
            'subsidy': float,
            'shop_promo_id': str,
            'market_promo_id': str
        }

        self.attribute_map = {
            'type': 'type',
            'discount': 'discount',
            'subsidy': 'subsidy',
            'shop_promo_id': 'shopPromoId',
            'market_promo_id': 'marketPromoId'
        }

        self._type = type
        self._discount = discount
        self._subsidy = subsidy
        self._shop_promo_id = shop_promo_id
        self._market_promo_id = market_promo_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderItemPromoDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderItemPromoDTO of this OrderItemPromoDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this OrderItemPromoDTO.


        :return: The type of this OrderItemPromoDTO.
        :rtype: OrderPromoType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OrderItemPromoDTO.


        :param type: The type of this OrderItemPromoDTO.
        :type type: OrderPromoType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def discount(self):
        """Gets the discount of this OrderItemPromoDTO.

        Размер пользовательской скидки в валюте покупателя. 

        :return: The discount of this OrderItemPromoDTO.
        :rtype: float
        """
        return self._discount

    @discount.setter
    def discount(self, discount):
        """Sets the discount of this OrderItemPromoDTO.

        Размер пользовательской скидки в валюте покупателя. 

        :param discount: The discount of this OrderItemPromoDTO.
        :type discount: float
        """

        self._discount = discount

    @property
    def subsidy(self):
        """Gets the subsidy of this OrderItemPromoDTO.

        Вознаграждение партнеру от Маркета за товар, проданный в рамках акции.  Передается в валюте заказа. 

        :return: The subsidy of this OrderItemPromoDTO.
        :rtype: float
        """
        return self._subsidy

    @subsidy.setter
    def subsidy(self, subsidy):
        """Sets the subsidy of this OrderItemPromoDTO.

        Вознаграждение партнеру от Маркета за товар, проданный в рамках акции.  Передается в валюте заказа. 

        :param subsidy: The subsidy of this OrderItemPromoDTO.
        :type subsidy: float
        """

        self._subsidy = subsidy

    @property
    def shop_promo_id(self):
        """Gets the shop_promo_id of this OrderItemPromoDTO.

        Идентификатор акции поставщика. 

        :return: The shop_promo_id of this OrderItemPromoDTO.
        :rtype: str
        """
        return self._shop_promo_id

    @shop_promo_id.setter
    def shop_promo_id(self, shop_promo_id):
        """Sets the shop_promo_id of this OrderItemPromoDTO.

        Идентификатор акции поставщика. 

        :param shop_promo_id: The shop_promo_id of this OrderItemPromoDTO.
        :type shop_promo_id: str
        """

        self._shop_promo_id = shop_promo_id

    @property
    def market_promo_id(self):
        """Gets the market_promo_id of this OrderItemPromoDTO.

        Идентификатор акции в рамках соглашения на оказание услуг по продвижению сервиса между Маркетом и партнером.  Параметр передается, только если параметр `type=MARKET_DEAL`. 

        :return: The market_promo_id of this OrderItemPromoDTO.
        :rtype: str
        """
        return self._market_promo_id

    @market_promo_id.setter
    def market_promo_id(self, market_promo_id):
        """Sets the market_promo_id of this OrderItemPromoDTO.

        Идентификатор акции в рамках соглашения на оказание услуг по продвижению сервиса между Маркетом и партнером.  Параметр передается, только если параметр `type=MARKET_DEAL`. 

        :param market_promo_id: The market_promo_id of this OrderItemPromoDTO.
        :type market_promo_id: str
        """

        self._market_promo_id = market_promo_id
