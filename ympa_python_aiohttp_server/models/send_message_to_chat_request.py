# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server import util


class SendMessageToChatRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message: str=None):
        """SendMessageToChatRequest - a model defined in OpenAPI

        :param message: The message of this SendMessageToChatRequest.
        """
        self.openapi_types = {
            'message': str
        }

        self.attribute_map = {
            'message': 'message'
        }

        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendMessageToChatRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendMessageToChatRequest of this SendMessageToChatRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this SendMessageToChatRequest.

        Текст сообщения. Максимальная длина — 4096 символа.

        :return: The message of this SendMessageToChatRequest.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this SendMessageToChatRequest.

        Текст сообщения. Максимальная длина — 4096 символа.

        :param message: The message of this SendMessageToChatRequest.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")
        if message is not None and len(message) > 4096:
            raise ValueError("Invalid value for `message`, length must be less than or equal to `4096`")
        if message is not None and len(message) < 1:
            raise ValueError("Invalid value for `message`, length must be greater than or equal to `1`")

        self._message = message
