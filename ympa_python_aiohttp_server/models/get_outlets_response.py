# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.flipping_pager_dto import FlippingPagerDTO
from ympa_python_aiohttp_server.models.full_outlet_dto import FullOutletDTO
from ympa_python_aiohttp_server.models.scrolling_pager_dto import ScrollingPagerDTO
from ympa_python_aiohttp_server import util


class GetOutletsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, outlets: List[FullOutletDTO]=None, paging: ScrollingPagerDTO=None, pager: FlippingPagerDTO=None):
        """GetOutletsResponse - a model defined in OpenAPI

        :param outlets: The outlets of this GetOutletsResponse.
        :param paging: The paging of this GetOutletsResponse.
        :param pager: The pager of this GetOutletsResponse.
        """
        self.openapi_types = {
            'outlets': List[FullOutletDTO],
            'paging': ScrollingPagerDTO,
            'pager': FlippingPagerDTO
        }

        self.attribute_map = {
            'outlets': 'outlets',
            'paging': 'paging',
            'pager': 'pager'
        }

        self._outlets = outlets
        self._paging = paging
        self._pager = pager

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOutletsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetOutletsResponse of this GetOutletsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def outlets(self):
        """Gets the outlets of this GetOutletsResponse.

        Информация о точках продаж.

        :return: The outlets of this GetOutletsResponse.
        :rtype: List[FullOutletDTO]
        """
        return self._outlets

    @outlets.setter
    def outlets(self, outlets):
        """Sets the outlets of this GetOutletsResponse.

        Информация о точках продаж.

        :param outlets: The outlets of this GetOutletsResponse.
        :type outlets: List[FullOutletDTO]
        """
        if outlets is None:
            raise ValueError("Invalid value for `outlets`, must not be `None`")

        self._outlets = outlets

    @property
    def paging(self):
        """Gets the paging of this GetOutletsResponse.


        :return: The paging of this GetOutletsResponse.
        :rtype: ScrollingPagerDTO
        """
        return self._paging

    @paging.setter
    def paging(self, paging):
        """Sets the paging of this GetOutletsResponse.


        :param paging: The paging of this GetOutletsResponse.
        :type paging: ScrollingPagerDTO
        """

        self._paging = paging

    @property
    def pager(self):
        """Gets the pager of this GetOutletsResponse.


        :return: The pager of this GetOutletsResponse.
        :rtype: FlippingPagerDTO
        """
        return self._pager

    @pager.setter
    def pager(self, pager):
        """Sets the pager of this GetOutletsResponse.


        :param pager: The pager of this GetOutletsResponse.
        :type pager: FlippingPagerDTO
        """

        self._pager = pager
