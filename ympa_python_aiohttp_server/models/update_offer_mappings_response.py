# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.api_response_status_type import ApiResponseStatusType
from ympa_python_aiohttp_server.models.update_offer_mapping_result_dto import UpdateOfferMappingResultDTO
from ympa_python_aiohttp_server import util


class UpdateOfferMappingsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: ApiResponseStatusType=None, results: List[UpdateOfferMappingResultDTO]=None):
        """UpdateOfferMappingsResponse - a model defined in OpenAPI

        :param status: The status of this UpdateOfferMappingsResponse.
        :param results: The results of this UpdateOfferMappingsResponse.
        """
        self.openapi_types = {
            'status': ApiResponseStatusType,
            'results': List[UpdateOfferMappingResultDTO]
        }

        self.attribute_map = {
            'status': 'status',
            'results': 'results'
        }

        self._status = status
        self._results = results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateOfferMappingsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateOfferMappingsResponse of this UpdateOfferMappingsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this UpdateOfferMappingsResponse.


        :return: The status of this UpdateOfferMappingsResponse.
        :rtype: ApiResponseStatusType
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UpdateOfferMappingsResponse.


        :param status: The status of this UpdateOfferMappingsResponse.
        :type status: ApiResponseStatusType
        """

        self._status = status

    @property
    def results(self):
        """Gets the results of this UpdateOfferMappingsResponse.

        Ошибки и предупреждения, которые появились при обработке списка характеристик. Каждый элемент списка соответствует одному товару.  Если ошибок и предупреждений нет, поле не передается. 

        :return: The results of this UpdateOfferMappingsResponse.
        :rtype: List[UpdateOfferMappingResultDTO]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this UpdateOfferMappingsResponse.

        Ошибки и предупреждения, которые появились при обработке списка характеристик. Каждый элемент списка соответствует одному товару.  Если ошибок и предупреждений нет, поле не передается. 

        :param results: The results of this UpdateOfferMappingsResponse.
        :type results: List[UpdateOfferMappingResultDTO]
        """

        self._results = results
