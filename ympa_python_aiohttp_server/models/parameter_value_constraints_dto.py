# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server import util


class ParameterValueConstraintsDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, min_value: float=None, max_value: float=None, max_length: int=None):
        """ParameterValueConstraintsDTO - a model defined in OpenAPI

        :param min_value: The min_value of this ParameterValueConstraintsDTO.
        :param max_value: The max_value of this ParameterValueConstraintsDTO.
        :param max_length: The max_length of this ParameterValueConstraintsDTO.
        """
        self.openapi_types = {
            'min_value': float,
            'max_value': float,
            'max_length': int
        }

        self.attribute_map = {
            'min_value': 'minValue',
            'max_value': 'maxValue',
            'max_length': 'maxLength'
        }

        self._min_value = min_value
        self._max_value = max_value
        self._max_length = max_length

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ParameterValueConstraintsDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ParameterValueConstraintsDTO of this ParameterValueConstraintsDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def min_value(self):
        """Gets the min_value of this ParameterValueConstraintsDTO.

        Минимальное число.

        :return: The min_value of this ParameterValueConstraintsDTO.
        :rtype: float
        """
        return self._min_value

    @min_value.setter
    def min_value(self, min_value):
        """Sets the min_value of this ParameterValueConstraintsDTO.

        Минимальное число.

        :param min_value: The min_value of this ParameterValueConstraintsDTO.
        :type min_value: float
        """

        self._min_value = min_value

    @property
    def max_value(self):
        """Gets the max_value of this ParameterValueConstraintsDTO.

        Максимальное число.

        :return: The max_value of this ParameterValueConstraintsDTO.
        :rtype: float
        """
        return self._max_value

    @max_value.setter
    def max_value(self, max_value):
        """Sets the max_value of this ParameterValueConstraintsDTO.

        Максимальное число.

        :param max_value: The max_value of this ParameterValueConstraintsDTO.
        :type max_value: float
        """

        self._max_value = max_value

    @property
    def max_length(self):
        """Gets the max_length of this ParameterValueConstraintsDTO.

        Максимальная длина текста.

        :return: The max_length of this ParameterValueConstraintsDTO.
        :rtype: int
        """
        return self._max_length

    @max_length.setter
    def max_length(self, max_length):
        """Sets the max_length of this ParameterValueConstraintsDTO.

        Максимальная длина текста.

        :param max_length: The max_length of this ParameterValueConstraintsDTO.
        :type max_length: int
        """

        self._max_length = max_length
