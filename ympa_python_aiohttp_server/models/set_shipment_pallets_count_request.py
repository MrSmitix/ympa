# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server import util


class SetShipmentPalletsCountRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, places_count: int=None):
        """SetShipmentPalletsCountRequest - a model defined in OpenAPI

        :param places_count: The places_count of this SetShipmentPalletsCountRequest.
        """
        self.openapi_types = {
            'places_count': int
        }

        self.attribute_map = {
            'places_count': 'placesCount'
        }

        self._places_count = places_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetShipmentPalletsCountRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SetShipmentPalletsCountRequest of this SetShipmentPalletsCountRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def places_count(self):
        """Gets the places_count of this SetShipmentPalletsCountRequest.

        Количество упаковок в отгрузке.

        :return: The places_count of this SetShipmentPalletsCountRequest.
        :rtype: int
        """
        return self._places_count

    @places_count.setter
    def places_count(self, places_count):
        """Sets the places_count of this SetShipmentPalletsCountRequest.

        Количество упаковок в отгрузке.

        :param places_count: The places_count of this SetShipmentPalletsCountRequest.
        :type places_count: int
        """
        if places_count is None:
            raise ValueError("Invalid value for `places_count`, must not be `None`")
        if places_count is not None and places_count < 0:
            raise ValueError("Invalid value for `places_count`, must be a value greater than or equal to `0`")

        self._places_count = places_count
