# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.sku_bid_item_dto import SkuBidItemDTO
from ympa_python_aiohttp_server import util


class PutSkuBidsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bids: List[SkuBidItemDTO]=None):
        """PutSkuBidsRequest - a model defined in OpenAPI

        :param bids: The bids of this PutSkuBidsRequest.
        """
        self.openapi_types = {
            'bids': List[SkuBidItemDTO]
        }

        self.attribute_map = {
            'bids': 'bids'
        }

        self._bids = bids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutSkuBidsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutSkuBidsRequest of this PutSkuBidsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bids(self):
        """Gets the bids of this PutSkuBidsRequest.

        Список товаров и ставки для продвижения, которые на них нужно установить.

        :return: The bids of this PutSkuBidsRequest.
        :rtype: List[SkuBidItemDTO]
        """
        return self._bids

    @bids.setter
    def bids(self, bids):
        """Sets the bids of this PutSkuBidsRequest.

        Список товаров и ставки для продвижения, которые на них нужно установить.

        :param bids: The bids of this PutSkuBidsRequest.
        :type bids: List[SkuBidItemDTO]
        """
        if bids is None:
            raise ValueError("Invalid value for `bids`, must not be `None`")
        if bids is not None and len(bids) > 1500:
            raise ValueError("Invalid value for `bids`, number of items must be less than or equal to `1500`")
        if bids is not None and len(bids) < 1:
            raise ValueError("Invalid value for `bids`, number of items must be greater than or equal to `1`")

        self._bids = bids
