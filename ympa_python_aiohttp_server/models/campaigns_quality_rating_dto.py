# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.campaign_quality_rating_dto import CampaignQualityRatingDTO
from ympa_python_aiohttp_server import util


class CampaignsQualityRatingDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, campaign_ratings: List[CampaignQualityRatingDTO]=None):
        """CampaignsQualityRatingDTO - a model defined in OpenAPI

        :param campaign_ratings: The campaign_ratings of this CampaignsQualityRatingDTO.
        """
        self.openapi_types = {
            'campaign_ratings': List[CampaignQualityRatingDTO]
        }

        self.attribute_map = {
            'campaign_ratings': 'campaignRatings'
        }

        self._campaign_ratings = campaign_ratings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CampaignsQualityRatingDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CampaignsQualityRatingDTO of this CampaignsQualityRatingDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def campaign_ratings(self):
        """Gets the campaign_ratings of this CampaignsQualityRatingDTO.

        Список магазинов c информацией об их индексе качества.

        :return: The campaign_ratings of this CampaignsQualityRatingDTO.
        :rtype: List[CampaignQualityRatingDTO]
        """
        return self._campaign_ratings

    @campaign_ratings.setter
    def campaign_ratings(self, campaign_ratings):
        """Sets the campaign_ratings of this CampaignsQualityRatingDTO.

        Список магазинов c информацией об их индексе качества.

        :param campaign_ratings: The campaign_ratings of this CampaignsQualityRatingDTO.
        :type campaign_ratings: List[CampaignQualityRatingDTO]
        """
        if campaign_ratings is None:
            raise ValueError("Invalid value for `campaign_ratings`, must not be `None`")

        self._campaign_ratings = campaign_ratings
