# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.update_order_status_dto import UpdateOrderStatusDTO
from ympa_python_aiohttp_server import util


class UpdateOrderStatusesDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, orders: List[UpdateOrderStatusDTO]=None):
        """UpdateOrderStatusesDTO - a model defined in OpenAPI

        :param orders: The orders of this UpdateOrderStatusesDTO.
        """
        self.openapi_types = {
            'orders': List[UpdateOrderStatusDTO]
        }

        self.attribute_map = {
            'orders': 'orders'
        }

        self._orders = orders

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateOrderStatusesDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateOrderStatusesDTO of this UpdateOrderStatusesDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def orders(self):
        """Gets the orders of this UpdateOrderStatusesDTO.

        Список с обновленными заказами.

        :return: The orders of this UpdateOrderStatusesDTO.
        :rtype: List[UpdateOrderStatusDTO]
        """
        return self._orders

    @orders.setter
    def orders(self, orders):
        """Sets the orders of this UpdateOrderStatusesDTO.

        Список с обновленными заказами.

        :param orders: The orders of this UpdateOrderStatusesDTO.
        :type orders: List[UpdateOrderStatusDTO]
        """
        if orders is None:
            raise ValueError("Invalid value for `orders`, must not be `None`")

        self._orders = orders
