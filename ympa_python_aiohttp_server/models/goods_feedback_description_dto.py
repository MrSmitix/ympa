# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server import util


class GoodsFeedbackDescriptionDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advantages: str=None, disadvantages: str=None, comment: str=None):
        """GoodsFeedbackDescriptionDTO - a model defined in OpenAPI

        :param advantages: The advantages of this GoodsFeedbackDescriptionDTO.
        :param disadvantages: The disadvantages of this GoodsFeedbackDescriptionDTO.
        :param comment: The comment of this GoodsFeedbackDescriptionDTO.
        """
        self.openapi_types = {
            'advantages': str,
            'disadvantages': str,
            'comment': str
        }

        self.attribute_map = {
            'advantages': 'advantages',
            'disadvantages': 'disadvantages',
            'comment': 'comment'
        }

        self._advantages = advantages
        self._disadvantages = disadvantages
        self._comment = comment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoodsFeedbackDescriptionDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoodsFeedbackDescriptionDTO of this GoodsFeedbackDescriptionDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advantages(self):
        """Gets the advantages of this GoodsFeedbackDescriptionDTO.

        Описание плюсов товара в отзыве.

        :return: The advantages of this GoodsFeedbackDescriptionDTO.
        :rtype: str
        """
        return self._advantages

    @advantages.setter
    def advantages(self, advantages):
        """Sets the advantages of this GoodsFeedbackDescriptionDTO.

        Описание плюсов товара в отзыве.

        :param advantages: The advantages of this GoodsFeedbackDescriptionDTO.
        :type advantages: str
        """

        self._advantages = advantages

    @property
    def disadvantages(self):
        """Gets the disadvantages of this GoodsFeedbackDescriptionDTO.

        Описание минусов товара в отзыве.

        :return: The disadvantages of this GoodsFeedbackDescriptionDTO.
        :rtype: str
        """
        return self._disadvantages

    @disadvantages.setter
    def disadvantages(self, disadvantages):
        """Sets the disadvantages of this GoodsFeedbackDescriptionDTO.

        Описание минусов товара в отзыве.

        :param disadvantages: The disadvantages of this GoodsFeedbackDescriptionDTO.
        :type disadvantages: str
        """

        self._disadvantages = disadvantages

    @property
    def comment(self):
        """Gets the comment of this GoodsFeedbackDescriptionDTO.

        Комментарий в отзыве.

        :return: The comment of this GoodsFeedbackDescriptionDTO.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this GoodsFeedbackDescriptionDTO.

        Комментарий в отзыве.

        :param comment: The comment of this GoodsFeedbackDescriptionDTO.
        :type comment: str
        """

        self._comment = comment
