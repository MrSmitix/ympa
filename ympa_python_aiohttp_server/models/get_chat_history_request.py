# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server import util


class GetChatHistoryRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message_id_from: int=None):
        """GetChatHistoryRequest - a model defined in OpenAPI

        :param message_id_from: The message_id_from of this GetChatHistoryRequest.
        """
        self.openapi_types = {
            'message_id_from': int
        }

        self.attribute_map = {
            'message_id_from': 'messageIdFrom'
        }

        self._message_id_from = message_id_from

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetChatHistoryRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetChatHistoryRequest of this GetChatHistoryRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message_id_from(self):
        """Gets the message_id_from of this GetChatHistoryRequest.

        Идентификатор сообщения, начиная с которого нужно получить все последующие сообщения.

        :return: The message_id_from of this GetChatHistoryRequest.
        :rtype: int
        """
        return self._message_id_from

    @message_id_from.setter
    def message_id_from(self, message_id_from):
        """Sets the message_id_from of this GetChatHistoryRequest.

        Идентификатор сообщения, начиная с которого нужно получить все последующие сообщения.

        :param message_id_from: The message_id_from of this GetChatHistoryRequest.
        :type message_id_from: int
        """

        self._message_id_from = message_id_from
