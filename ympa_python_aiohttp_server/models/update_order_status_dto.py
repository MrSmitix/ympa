# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.order_status_type import OrderStatusType
from ympa_python_aiohttp_server.models.order_substatus_type import OrderSubstatusType
from ympa_python_aiohttp_server.models.order_update_status_type import OrderUpdateStatusType
from ympa_python_aiohttp_server import util


class UpdateOrderStatusDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, status: OrderStatusType=None, substatus: OrderSubstatusType=None, update_status: OrderUpdateStatusType=None, error_details: str=None):
        """UpdateOrderStatusDTO - a model defined in OpenAPI

        :param id: The id of this UpdateOrderStatusDTO.
        :param status: The status of this UpdateOrderStatusDTO.
        :param substatus: The substatus of this UpdateOrderStatusDTO.
        :param update_status: The update_status of this UpdateOrderStatusDTO.
        :param error_details: The error_details of this UpdateOrderStatusDTO.
        """
        self.openapi_types = {
            'id': int,
            'status': OrderStatusType,
            'substatus': OrderSubstatusType,
            'update_status': OrderUpdateStatusType,
            'error_details': str
        }

        self.attribute_map = {
            'id': 'id',
            'status': 'status',
            'substatus': 'substatus',
            'update_status': 'updateStatus',
            'error_details': 'errorDetails'
        }

        self._id = id
        self._status = status
        self._substatus = substatus
        self._update_status = update_status
        self._error_details = error_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateOrderStatusDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateOrderStatusDTO of this UpdateOrderStatusDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this UpdateOrderStatusDTO.

        Идентификатор заказа.

        :return: The id of this UpdateOrderStatusDTO.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UpdateOrderStatusDTO.

        Идентификатор заказа.

        :param id: The id of this UpdateOrderStatusDTO.
        :type id: int
        """

        self._id = id

    @property
    def status(self):
        """Gets the status of this UpdateOrderStatusDTO.


        :return: The status of this UpdateOrderStatusDTO.
        :rtype: OrderStatusType
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UpdateOrderStatusDTO.


        :param status: The status of this UpdateOrderStatusDTO.
        :type status: OrderStatusType
        """

        self._status = status

    @property
    def substatus(self):
        """Gets the substatus of this UpdateOrderStatusDTO.


        :return: The substatus of this UpdateOrderStatusDTO.
        :rtype: OrderSubstatusType
        """
        return self._substatus

    @substatus.setter
    def substatus(self, substatus):
        """Sets the substatus of this UpdateOrderStatusDTO.


        :param substatus: The substatus of this UpdateOrderStatusDTO.
        :type substatus: OrderSubstatusType
        """

        self._substatus = substatus

    @property
    def update_status(self):
        """Gets the update_status of this UpdateOrderStatusDTO.


        :return: The update_status of this UpdateOrderStatusDTO.
        :rtype: OrderUpdateStatusType
        """
        return self._update_status

    @update_status.setter
    def update_status(self, update_status):
        """Sets the update_status of this UpdateOrderStatusDTO.


        :param update_status: The update_status of this UpdateOrderStatusDTO.
        :type update_status: OrderUpdateStatusType
        """

        self._update_status = update_status

    @property
    def error_details(self):
        """Gets the error_details of this UpdateOrderStatusDTO.

        Ошибка при изменении статуса заказа. Содержит описание ошибки и идентификатор заказа.  Возвращается, если параметр `updateStatus` принимает значение `ERROR`. 

        :return: The error_details of this UpdateOrderStatusDTO.
        :rtype: str
        """
        return self._error_details

    @error_details.setter
    def error_details(self, error_details):
        """Sets the error_details of this UpdateOrderStatusDTO.

        Ошибка при изменении статуса заказа. Содержит описание ошибки и идентификатор заказа.  Возвращается, если параметр `updateStatus` принимает значение `ERROR`. 

        :param error_details: The error_details of this UpdateOrderStatusDTO.
        :type error_details: str
        """

        self._error_details = error_details
