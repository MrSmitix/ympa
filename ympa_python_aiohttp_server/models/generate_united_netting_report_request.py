# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.placement_type import PlacementType
from ympa_python_aiohttp_server import util


class GenerateUnitedNettingReportRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, business_id: int=None, date_time_from: datetime=None, date_time_to: datetime=None, date_from: date=None, date_to: date=None, bank_order_id: int=None, bank_order_date_time: datetime=None, placement_programs: List[PlacementType]=None, inns: List[str]=None, campaign_ids: List[int]=None):
        """GenerateUnitedNettingReportRequest - a model defined in OpenAPI

        :param business_id: The business_id of this GenerateUnitedNettingReportRequest.
        :param date_time_from: The date_time_from of this GenerateUnitedNettingReportRequest.
        :param date_time_to: The date_time_to of this GenerateUnitedNettingReportRequest.
        :param date_from: The date_from of this GenerateUnitedNettingReportRequest.
        :param date_to: The date_to of this GenerateUnitedNettingReportRequest.
        :param bank_order_id: The bank_order_id of this GenerateUnitedNettingReportRequest.
        :param bank_order_date_time: The bank_order_date_time of this GenerateUnitedNettingReportRequest.
        :param placement_programs: The placement_programs of this GenerateUnitedNettingReportRequest.
        :param inns: The inns of this GenerateUnitedNettingReportRequest.
        :param campaign_ids: The campaign_ids of this GenerateUnitedNettingReportRequest.
        """
        self.openapi_types = {
            'business_id': int,
            'date_time_from': datetime,
            'date_time_to': datetime,
            'date_from': date,
            'date_to': date,
            'bank_order_id': int,
            'bank_order_date_time': datetime,
            'placement_programs': List[PlacementType],
            'inns': List[str],
            'campaign_ids': List[int]
        }

        self.attribute_map = {
            'business_id': 'businessId',
            'date_time_from': 'dateTimeFrom',
            'date_time_to': 'dateTimeTo',
            'date_from': 'dateFrom',
            'date_to': 'dateTo',
            'bank_order_id': 'bankOrderId',
            'bank_order_date_time': 'bankOrderDateTime',
            'placement_programs': 'placementPrograms',
            'inns': 'inns',
            'campaign_ids': 'campaignIds'
        }

        self._business_id = business_id
        self._date_time_from = date_time_from
        self._date_time_to = date_time_to
        self._date_from = date_from
        self._date_to = date_to
        self._bank_order_id = bank_order_id
        self._bank_order_date_time = bank_order_date_time
        self._placement_programs = placement_programs
        self._inns = inns
        self._campaign_ids = campaign_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenerateUnitedNettingReportRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenerateUnitedNettingReportRequest of this GenerateUnitedNettingReportRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def business_id(self):
        """Gets the business_id of this GenerateUnitedNettingReportRequest.

        Идентификатор бизнеса.

        :return: The business_id of this GenerateUnitedNettingReportRequest.
        :rtype: int
        """
        return self._business_id

    @business_id.setter
    def business_id(self, business_id):
        """Sets the business_id of this GenerateUnitedNettingReportRequest.

        Идентификатор бизнеса.

        :param business_id: The business_id of this GenerateUnitedNettingReportRequest.
        :type business_id: int
        """
        if business_id is None:
            raise ValueError("Invalid value for `business_id`, must not be `None`")

        self._business_id = business_id

    @property
    def date_time_from(self):
        """Gets the date_time_from of this GenerateUnitedNettingReportRequest.

        {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Начало периода, включительно. 

        :return: The date_time_from of this GenerateUnitedNettingReportRequest.
        :rtype: datetime
        """
        return self._date_time_from

    @date_time_from.setter
    def date_time_from(self, date_time_from):
        """Sets the date_time_from of this GenerateUnitedNettingReportRequest.

        {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Начало периода, включительно. 

        :param date_time_from: The date_time_from of this GenerateUnitedNettingReportRequest.
        :type date_time_from: datetime
        """

        self._date_time_from = date_time_from

    @property
    def date_time_to(self):
        """Gets the date_time_to of this GenerateUnitedNettingReportRequest.

        {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Конец периода, включительно. Максимальный период — 1 год. 

        :return: The date_time_to of this GenerateUnitedNettingReportRequest.
        :rtype: datetime
        """
        return self._date_time_to

    @date_time_to.setter
    def date_time_to(self, date_time_to):
        """Sets the date_time_to of this GenerateUnitedNettingReportRequest.

        {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Конец периода, включительно. Максимальный период — 1 год. 

        :param date_time_to: The date_time_to of this GenerateUnitedNettingReportRequest.
        :type date_time_to: datetime
        """

        self._date_time_to = date_time_to

    @property
    def date_from(self):
        """Gets the date_from of this GenerateUnitedNettingReportRequest.

        Начало периода, включительно.

        :return: The date_from of this GenerateUnitedNettingReportRequest.
        :rtype: date
        """
        return self._date_from

    @date_from.setter
    def date_from(self, date_from):
        """Sets the date_from of this GenerateUnitedNettingReportRequest.

        Начало периода, включительно.

        :param date_from: The date_from of this GenerateUnitedNettingReportRequest.
        :type date_from: date
        """

        self._date_from = date_from

    @property
    def date_to(self):
        """Gets the date_to of this GenerateUnitedNettingReportRequest.

        Конец периода, включительно. Максимальный период — 1 год.

        :return: The date_to of this GenerateUnitedNettingReportRequest.
        :rtype: date
        """
        return self._date_to

    @date_to.setter
    def date_to(self, date_to):
        """Sets the date_to of this GenerateUnitedNettingReportRequest.

        Конец периода, включительно. Максимальный период — 1 год.

        :param date_to: The date_to of this GenerateUnitedNettingReportRequest.
        :type date_to: date
        """

        self._date_to = date_to

    @property
    def bank_order_id(self):
        """Gets the bank_order_id of this GenerateUnitedNettingReportRequest.

        Номер платежного поручения.

        :return: The bank_order_id of this GenerateUnitedNettingReportRequest.
        :rtype: int
        """
        return self._bank_order_id

    @bank_order_id.setter
    def bank_order_id(self, bank_order_id):
        """Sets the bank_order_id of this GenerateUnitedNettingReportRequest.

        Номер платежного поручения.

        :param bank_order_id: The bank_order_id of this GenerateUnitedNettingReportRequest.
        :type bank_order_id: int
        """

        self._bank_order_id = bank_order_id

    @property
    def bank_order_date_time(self):
        """Gets the bank_order_date_time of this GenerateUnitedNettingReportRequest.

        Дата платежного поручения.

        :return: The bank_order_date_time of this GenerateUnitedNettingReportRequest.
        :rtype: datetime
        """
        return self._bank_order_date_time

    @bank_order_date_time.setter
    def bank_order_date_time(self, bank_order_date_time):
        """Sets the bank_order_date_time of this GenerateUnitedNettingReportRequest.

        Дата платежного поручения.

        :param bank_order_date_time: The bank_order_date_time of this GenerateUnitedNettingReportRequest.
        :type bank_order_date_time: datetime
        """

        self._bank_order_date_time = bank_order_date_time

    @property
    def placement_programs(self):
        """Gets the placement_programs of this GenerateUnitedNettingReportRequest.

        Список моделей, которые нужны в отчете. 

        :return: The placement_programs of this GenerateUnitedNettingReportRequest.
        :rtype: List[PlacementType]
        """
        return self._placement_programs

    @placement_programs.setter
    def placement_programs(self, placement_programs):
        """Sets the placement_programs of this GenerateUnitedNettingReportRequest.

        Список моделей, которые нужны в отчете. 

        :param placement_programs: The placement_programs of this GenerateUnitedNettingReportRequest.
        :type placement_programs: List[PlacementType]
        """

        self._placement_programs = placement_programs

    @property
    def inns(self):
        """Gets the inns of this GenerateUnitedNettingReportRequest.

        Список ИНН, которые нужны в отчете.

        :return: The inns of this GenerateUnitedNettingReportRequest.
        :rtype: List[str]
        """
        return self._inns

    @inns.setter
    def inns(self, inns):
        """Sets the inns of this GenerateUnitedNettingReportRequest.

        Список ИНН, которые нужны в отчете.

        :param inns: The inns of this GenerateUnitedNettingReportRequest.
        :type inns: List[str]
        """

        self._inns = inns

    @property
    def campaign_ids(self):
        """Gets the campaign_ids of this GenerateUnitedNettingReportRequest.

        Список магазинов, которые нужны в отчете.

        :return: The campaign_ids of this GenerateUnitedNettingReportRequest.
        :rtype: List[int]
        """
        return self._campaign_ids

    @campaign_ids.setter
    def campaign_ids(self, campaign_ids):
        """Sets the campaign_ids of this GenerateUnitedNettingReportRequest.

        Список магазинов, которые нужны в отчете.

        :param campaign_ids: The campaign_ids of this GenerateUnitedNettingReportRequest.
        :type campaign_ids: List[int]
        """

        self._campaign_ids = campaign_ids
