# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server import util


class GetCampaignLoginsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, logins: List[str]=None):
        """GetCampaignLoginsResponse - a model defined in OpenAPI

        :param logins: The logins of this GetCampaignLoginsResponse.
        """
        self.openapi_types = {
            'logins': List[str]
        }

        self.attribute_map = {
            'logins': 'logins'
        }

        self._logins = logins

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCampaignLoginsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetCampaignLoginsResponse of this GetCampaignLoginsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def logins(self):
        """Gets the logins of this GetCampaignLoginsResponse.

        Список логинов.

        :return: The logins of this GetCampaignLoginsResponse.
        :rtype: List[str]
        """
        return self._logins

    @logins.setter
    def logins(self, logins):
        """Sets the logins of this GetCampaignLoginsResponse.

        Список логинов.

        :param logins: The logins of this GetCampaignLoginsResponse.
        :type logins: List[str]
        """
        if logins is None:
            raise ValueError("Invalid value for `logins`, must not be `None`")

        self._logins = logins
