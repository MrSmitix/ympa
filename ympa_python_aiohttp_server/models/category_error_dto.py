# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.category_error_type import CategoryErrorType
from ympa_python_aiohttp_server import util


class CategoryErrorDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_id: int=None, type: CategoryErrorType=None):
        """CategoryErrorDTO - a model defined in OpenAPI

        :param category_id: The category_id of this CategoryErrorDTO.
        :param type: The type of this CategoryErrorDTO.
        """
        self.openapi_types = {
            'category_id': int,
            'type': CategoryErrorType
        }

        self.attribute_map = {
            'category_id': 'categoryId',
            'type': 'type'
        }

        self._category_id = category_id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CategoryErrorDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CategoryErrorDTO of this CategoryErrorDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_id(self):
        """Gets the category_id of this CategoryErrorDTO.

        Идентификатор категории.

        :return: The category_id of this CategoryErrorDTO.
        :rtype: int
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this CategoryErrorDTO.

        Идентификатор категории.

        :param category_id: The category_id of this CategoryErrorDTO.
        :type category_id: int
        """

        self._category_id = category_id

    @property
    def type(self):
        """Gets the type of this CategoryErrorDTO.


        :return: The type of this CategoryErrorDTO.
        :rtype: CategoryErrorType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CategoryErrorDTO.


        :param type: The type of this CategoryErrorDTO.
        :type type: CategoryErrorType
        """

        self._type = type
