# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server import util


class FlippingPagerDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total: int=None, _from: int=None, to: int=None, current_page: int=None, pages_count: int=None, page_size: int=None):
        """FlippingPagerDTO - a model defined in OpenAPI

        :param total: The total of this FlippingPagerDTO.
        :param _from: The _from of this FlippingPagerDTO.
        :param to: The to of this FlippingPagerDTO.
        :param current_page: The current_page of this FlippingPagerDTO.
        :param pages_count: The pages_count of this FlippingPagerDTO.
        :param page_size: The page_size of this FlippingPagerDTO.
        """
        self.openapi_types = {
            'total': int,
            '_from': int,
            'to': int,
            'current_page': int,
            'pages_count': int,
            'page_size': int
        }

        self.attribute_map = {
            'total': 'total',
            '_from': 'from',
            'to': 'to',
            'current_page': 'currentPage',
            'pages_count': 'pagesCount',
            'page_size': 'pageSize'
        }

        self._total = total
        self.__from = _from
        self._to = to
        self._current_page = current_page
        self._pages_count = pages_count
        self._page_size = page_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlippingPagerDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FlippingPagerDTO of this FlippingPagerDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total(self):
        """Gets the total of this FlippingPagerDTO.

        Сколько всего найдено элементов.

        :return: The total of this FlippingPagerDTO.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this FlippingPagerDTO.

        Сколько всего найдено элементов.

        :param total: The total of this FlippingPagerDTO.
        :type total: int
        """

        self._total = total

    @property
    def _from(self):
        """Gets the _from of this FlippingPagerDTO.

        Начальный номер найденного элемента на странице.

        :return: The _from of this FlippingPagerDTO.
        :rtype: int
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this FlippingPagerDTO.

        Начальный номер найденного элемента на странице.

        :param _from: The _from of this FlippingPagerDTO.
        :type _from: int
        """

        self.__from = _from

    @property
    def to(self):
        """Gets the to of this FlippingPagerDTO.

        Конечный номер найденного элемента на странице.

        :return: The to of this FlippingPagerDTO.
        :rtype: int
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this FlippingPagerDTO.

        Конечный номер найденного элемента на странице.

        :param to: The to of this FlippingPagerDTO.
        :type to: int
        """

        self._to = to

    @property
    def current_page(self):
        """Gets the current_page of this FlippingPagerDTO.

        Текущая страница.

        :return: The current_page of this FlippingPagerDTO.
        :rtype: int
        """
        return self._current_page

    @current_page.setter
    def current_page(self, current_page):
        """Sets the current_page of this FlippingPagerDTO.

        Текущая страница.

        :param current_page: The current_page of this FlippingPagerDTO.
        :type current_page: int
        """

        self._current_page = current_page

    @property
    def pages_count(self):
        """Gets the pages_count of this FlippingPagerDTO.

        Общее количество страниц.

        :return: The pages_count of this FlippingPagerDTO.
        :rtype: int
        """
        return self._pages_count

    @pages_count.setter
    def pages_count(self, pages_count):
        """Sets the pages_count of this FlippingPagerDTO.

        Общее количество страниц.

        :param pages_count: The pages_count of this FlippingPagerDTO.
        :type pages_count: int
        """

        self._pages_count = pages_count

    @property
    def page_size(self):
        """Gets the page_size of this FlippingPagerDTO.

        Размер страницы.

        :return: The page_size of this FlippingPagerDTO.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this FlippingPagerDTO.

        Размер страницы.

        :param page_size: The page_size of this FlippingPagerDTO.
        :type page_size: int
        """

        self._page_size = page_size
