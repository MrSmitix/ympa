# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.currency_type import CurrencyType
from ympa_python_aiohttp_server import util


class RegionalModelInfoDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency: CurrencyType=None, region_id: int=None):
        """RegionalModelInfoDTO - a model defined in OpenAPI

        :param currency: The currency of this RegionalModelInfoDTO.
        :param region_id: The region_id of this RegionalModelInfoDTO.
        """
        self.openapi_types = {
            'currency': CurrencyType,
            'region_id': int
        }

        self.attribute_map = {
            'currency': 'currency',
            'region_id': 'regionId'
        }

        self._currency = currency
        self._region_id = region_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegionalModelInfoDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegionalModelInfoDTO of this RegionalModelInfoDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency(self):
        """Gets the currency of this RegionalModelInfoDTO.


        :return: The currency of this RegionalModelInfoDTO.
        :rtype: CurrencyType
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this RegionalModelInfoDTO.


        :param currency: The currency of this RegionalModelInfoDTO.
        :type currency: CurrencyType
        """

        self._currency = currency

    @property
    def region_id(self):
        """Gets the region_id of this RegionalModelInfoDTO.

        Идентификатор региона, для которого выводится информация о предложениях модели (доставляемых в этот регион).  Информацию о регионе по идентификатору можно получить с помощью запроса [GET regions/{regionId}](../../reference/regions/searchRegionsById.md). 

        :return: The region_id of this RegionalModelInfoDTO.
        :rtype: int
        """
        return self._region_id

    @region_id.setter
    def region_id(self, region_id):
        """Sets the region_id of this RegionalModelInfoDTO.

        Идентификатор региона, для которого выводится информация о предложениях модели (доставляемых в этот регион).  Информацию о регионе по идентификатору можно получить с помощью запроса [GET regions/{regionId}](../../reference/regions/searchRegionsById.md). 

        :param region_id: The region_id of this RegionalModelInfoDTO.
        :type region_id: int
        """

        self._region_id = region_id
