# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.order_parcel_box_dto import OrderParcelBoxDTO
from ympa_python_aiohttp_server.models.order_track_dto import OrderTrackDTO
from ympa_python_aiohttp_server import util


class OrderShipmentDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, shipment_date: str=None, shipment_time: str=None, tracks: List[OrderTrackDTO]=None, boxes: List[OrderParcelBoxDTO]=None):
        """OrderShipmentDTO - a model defined in OpenAPI

        :param id: The id of this OrderShipmentDTO.
        :param shipment_date: The shipment_date of this OrderShipmentDTO.
        :param shipment_time: The shipment_time of this OrderShipmentDTO.
        :param tracks: The tracks of this OrderShipmentDTO.
        :param boxes: The boxes of this OrderShipmentDTO.
        """
        self.openapi_types = {
            'id': int,
            'shipment_date': str,
            'shipment_time': str,
            'tracks': List[OrderTrackDTO],
            'boxes': List[OrderParcelBoxDTO]
        }

        self.attribute_map = {
            'id': 'id',
            'shipment_date': 'shipmentDate',
            'shipment_time': 'shipmentTime',
            'tracks': 'tracks',
            'boxes': 'boxes'
        }

        self._id = id
        self._shipment_date = shipment_date
        self._shipment_time = shipment_time
        self._tracks = tracks
        self._boxes = boxes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderShipmentDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderShipmentDTO of this OrderShipmentDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this OrderShipmentDTO.

        Идентификатор посылки, присвоенный Маркетом.

        :return: The id of this OrderShipmentDTO.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrderShipmentDTO.

        Идентификатор посылки, присвоенный Маркетом.

        :param id: The id of this OrderShipmentDTO.
        :type id: int
        """

        self._id = id

    @property
    def shipment_date(self):
        """Gets the shipment_date of this OrderShipmentDTO.

        Формат даты: `ДД-ММ-ГГГГ`. 

        :return: The shipment_date of this OrderShipmentDTO.
        :rtype: str
        """
        return self._shipment_date

    @shipment_date.setter
    def shipment_date(self, shipment_date):
        """Sets the shipment_date of this OrderShipmentDTO.

        Формат даты: `ДД-ММ-ГГГГ`. 

        :param shipment_date: The shipment_date of this OrderShipmentDTO.
        :type shipment_date: str
        """

        self._shipment_date = shipment_date

    @property
    def shipment_time(self):
        """Gets the shipment_time of this OrderShipmentDTO.

        **Только для модели Экспресс**  Время, к которому магазин должен упаковать заказ и перевести его в статус `READY_TO_SHIP`. После смены статуса за заказом приедет курьер.  Поле может появиться не сразу. Запрашивайте информацию о заказе в течении 5–10 минут, пока оно не вернется.  Формат времени: 24-часовой, `ЧЧ:ММ`.  Если заказ сделан организацией, параметр не возвращается до согласования даты доставки. 

        :return: The shipment_time of this OrderShipmentDTO.
        :rtype: str
        """
        return self._shipment_time

    @shipment_time.setter
    def shipment_time(self, shipment_time):
        """Sets the shipment_time of this OrderShipmentDTO.

        **Только для модели Экспресс**  Время, к которому магазин должен упаковать заказ и перевести его в статус `READY_TO_SHIP`. После смены статуса за заказом приедет курьер.  Поле может появиться не сразу. Запрашивайте информацию о заказе в течении 5–10 минут, пока оно не вернется.  Формат времени: 24-часовой, `ЧЧ:ММ`.  Если заказ сделан организацией, параметр не возвращается до согласования даты доставки. 

        :param shipment_time: The shipment_time of this OrderShipmentDTO.
        :type shipment_time: str
        """

        self._shipment_time = shipment_time

    @property
    def tracks(self):
        """Gets the tracks of this OrderShipmentDTO.

        **Только для модели DBS**  Информация для отслеживания перемещений посылки. 

        :return: The tracks of this OrderShipmentDTO.
        :rtype: List[OrderTrackDTO]
        """
        return self._tracks

    @tracks.setter
    def tracks(self, tracks):
        """Sets the tracks of this OrderShipmentDTO.

        **Только для модели DBS**  Информация для отслеживания перемещений посылки. 

        :param tracks: The tracks of this OrderShipmentDTO.
        :type tracks: List[OrderTrackDTO]
        """

        self._tracks = tracks

    @property
    def boxes(self):
        """Gets the boxes of this OrderShipmentDTO.

        Список грузовых мест.

        :return: The boxes of this OrderShipmentDTO.
        :rtype: List[OrderParcelBoxDTO]
        """
        return self._boxes

    @boxes.setter
    def boxes(self, boxes):
        """Sets the boxes of this OrderShipmentDTO.

        Список грузовых мест.

        :param boxes: The boxes of this OrderShipmentDTO.
        :type boxes: List[OrderParcelBoxDTO]
        """

        self._boxes = boxes
