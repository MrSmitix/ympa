# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server import util


class OrdersShipmentInfoDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, order_ids_with_labels: list[int]=None, order_ids_without_labels: list[int]=None):
        """OrdersShipmentInfoDTO - a model defined in OpenAPI

        :param order_ids_with_labels: The order_ids_with_labels of this OrdersShipmentInfoDTO.
        :param order_ids_without_labels: The order_ids_without_labels of this OrdersShipmentInfoDTO.
        """
        self.openapi_types = {
            'order_ids_with_labels': list[int],
            'order_ids_without_labels': list[int]
        }

        self.attribute_map = {
            'order_ids_with_labels': 'orderIdsWithLabels',
            'order_ids_without_labels': 'orderIdsWithoutLabels'
        }

        self._order_ids_with_labels = order_ids_with_labels
        self._order_ids_without_labels = order_ids_without_labels

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrdersShipmentInfoDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrdersShipmentInfoDTO of this OrdersShipmentInfoDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def order_ids_with_labels(self):
        """Gets the order_ids_with_labels of this OrdersShipmentInfoDTO.

        Идентификаторы заказов в отгрузке, для которых можно распечатать ярлыки.

        :return: The order_ids_with_labels of this OrdersShipmentInfoDTO.
        :rtype: list[int]
        """
        return self._order_ids_with_labels

    @order_ids_with_labels.setter
    def order_ids_with_labels(self, order_ids_with_labels):
        """Sets the order_ids_with_labels of this OrdersShipmentInfoDTO.

        Идентификаторы заказов в отгрузке, для которых можно распечатать ярлыки.

        :param order_ids_with_labels: The order_ids_with_labels of this OrdersShipmentInfoDTO.
        :type order_ids_with_labels: list[int]
        """
        if order_ids_with_labels is None:
            raise ValueError("Invalid value for `order_ids_with_labels`, must not be `None`")

        self._order_ids_with_labels = order_ids_with_labels

    @property
    def order_ids_without_labels(self):
        """Gets the order_ids_without_labels of this OrdersShipmentInfoDTO.

        Идентификаторы заказов в отгрузке, для которых нельзя распечатать ярлыки.

        :return: The order_ids_without_labels of this OrdersShipmentInfoDTO.
        :rtype: list[int]
        """
        return self._order_ids_without_labels

    @order_ids_without_labels.setter
    def order_ids_without_labels(self, order_ids_without_labels):
        """Sets the order_ids_without_labels of this OrdersShipmentInfoDTO.

        Идентификаторы заказов в отгрузке, для которых нельзя распечатать ярлыки.

        :param order_ids_without_labels: The order_ids_without_labels of this OrdersShipmentInfoDTO.
        :type order_ids_without_labels: list[int]
        """
        if order_ids_without_labels is None:
            raise ValueError("Invalid value for `order_ids_without_labels`, must not be `None`")

        self._order_ids_without_labels = order_ids_without_labels
