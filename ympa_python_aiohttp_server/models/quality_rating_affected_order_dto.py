# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.affected_order_quality_rating_component_type import AffectedOrderQualityRatingComponentType
from ympa_python_aiohttp_server import util


class QualityRatingAffectedOrderDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, order_id: int=None, description: str=None, component_type: AffectedOrderQualityRatingComponentType=None):
        """QualityRatingAffectedOrderDTO - a model defined in OpenAPI

        :param order_id: The order_id of this QualityRatingAffectedOrderDTO.
        :param description: The description of this QualityRatingAffectedOrderDTO.
        :param component_type: The component_type of this QualityRatingAffectedOrderDTO.
        """
        self.openapi_types = {
            'order_id': int,
            'description': str,
            'component_type': AffectedOrderQualityRatingComponentType
        }

        self.attribute_map = {
            'order_id': 'orderId',
            'description': 'description',
            'component_type': 'componentType'
        }

        self._order_id = order_id
        self._description = description
        self._component_type = component_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QualityRatingAffectedOrderDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QualityRatingAffectedOrderDTO of this QualityRatingAffectedOrderDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def order_id(self):
        """Gets the order_id of this QualityRatingAffectedOrderDTO.

        Идентификатор заказа.

        :return: The order_id of this QualityRatingAffectedOrderDTO.
        :rtype: int
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this QualityRatingAffectedOrderDTO.

        Идентификатор заказа.

        :param order_id: The order_id of this QualityRatingAffectedOrderDTO.
        :type order_id: int
        """
        if order_id is None:
            raise ValueError("Invalid value for `order_id`, must not be `None`")
        if order_id is not None and order_id < 0:
            raise ValueError("Invalid value for `order_id`, must be a value greater than or equal to `0`")

        self._order_id = order_id

    @property
    def description(self):
        """Gets the description of this QualityRatingAffectedOrderDTO.

        Описание проблемы.

        :return: The description of this QualityRatingAffectedOrderDTO.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this QualityRatingAffectedOrderDTO.

        Описание проблемы.

        :param description: The description of this QualityRatingAffectedOrderDTO.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def component_type(self):
        """Gets the component_type of this QualityRatingAffectedOrderDTO.


        :return: The component_type of this QualityRatingAffectedOrderDTO.
        :rtype: AffectedOrderQualityRatingComponentType
        """
        return self._component_type

    @component_type.setter
    def component_type(self, component_type):
        """Sets the component_type of this QualityRatingAffectedOrderDTO.


        :param component_type: The component_type of this QualityRatingAffectedOrderDTO.
        :type component_type: AffectedOrderQualityRatingComponentType
        """
        if component_type is None:
            raise ValueError("Invalid value for `component_type`, must not be `None`")

        self._component_type = component_type
