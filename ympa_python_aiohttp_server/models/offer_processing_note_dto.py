# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.offer_processing_note_type import OfferProcessingNoteType
from ympa_python_aiohttp_server import util


class OfferProcessingNoteDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: OfferProcessingNoteType=None, payload: str=None):
        """OfferProcessingNoteDTO - a model defined in OpenAPI

        :param type: The type of this OfferProcessingNoteDTO.
        :param payload: The payload of this OfferProcessingNoteDTO.
        """
        self.openapi_types = {
            'type': OfferProcessingNoteType,
            'payload': str
        }

        self.attribute_map = {
            'type': 'type',
            'payload': 'payload'
        }

        self._type = type
        self._payload = payload

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OfferProcessingNoteDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OfferProcessingNoteDTO of this OfferProcessingNoteDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this OfferProcessingNoteDTO.


        :return: The type of this OfferProcessingNoteDTO.
        :rtype: OfferProcessingNoteType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OfferProcessingNoteDTO.


        :param type: The type of this OfferProcessingNoteDTO.
        :type type: OfferProcessingNoteType
        """

        self._type = type

    @property
    def payload(self):
        """Gets the payload of this OfferProcessingNoteDTO.

        Дополнительная информация о причине отклонения товара. 

        :return: The payload of this OfferProcessingNoteDTO.
        :rtype: str
        """
        return self._payload

    @payload.setter
    def payload(self, payload):
        """Sets the payload of this OfferProcessingNoteDTO.

        Дополнительная информация о причине отклонения товара. 

        :param payload: The payload of this OfferProcessingNoteDTO.
        :type payload: str
        """

        self._payload = payload
