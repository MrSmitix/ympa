# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from ympa_python_aiohttp_server.models.base_model import Model
from ympa_python_aiohttp_server.models.rejected_promo_offer_update_dto import RejectedPromoOfferUpdateDTO
from ympa_python_aiohttp_server.models.warning_promo_offer_update_dto import WarningPromoOfferUpdateDTO
from ympa_python_aiohttp_server import util


class UpdatePromoOffersResultDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rejected_offers: List[RejectedPromoOfferUpdateDTO]=None, warning_offers: List[WarningPromoOfferUpdateDTO]=None):
        """UpdatePromoOffersResultDTO - a model defined in OpenAPI

        :param rejected_offers: The rejected_offers of this UpdatePromoOffersResultDTO.
        :param warning_offers: The warning_offers of this UpdatePromoOffersResultDTO.
        """
        self.openapi_types = {
            'rejected_offers': List[RejectedPromoOfferUpdateDTO],
            'warning_offers': List[WarningPromoOfferUpdateDTO]
        }

        self.attribute_map = {
            'rejected_offers': 'rejectedOffers',
            'warning_offers': 'warningOffers'
        }

        self._rejected_offers = rejected_offers
        self._warning_offers = warning_offers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdatePromoOffersResultDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdatePromoOffersResultDTO of this UpdatePromoOffersResultDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rejected_offers(self):
        """Gets the rejected_offers of this UpdatePromoOffersResultDTO.

        Изменения, которые были отклонены.  Возвращается, только если есть отклоненные изменения. 

        :return: The rejected_offers of this UpdatePromoOffersResultDTO.
        :rtype: List[RejectedPromoOfferUpdateDTO]
        """
        return self._rejected_offers

    @rejected_offers.setter
    def rejected_offers(self, rejected_offers):
        """Sets the rejected_offers of this UpdatePromoOffersResultDTO.

        Изменения, которые были отклонены.  Возвращается, только если есть отклоненные изменения. 

        :param rejected_offers: The rejected_offers of this UpdatePromoOffersResultDTO.
        :type rejected_offers: List[RejectedPromoOfferUpdateDTO]
        """

        self._rejected_offers = rejected_offers

    @property
    def warning_offers(self):
        """Gets the warning_offers of this UpdatePromoOffersResultDTO.

        Изменения, по которым есть предупреждения. Они информируют о возможных проблемах. Информация о товарах обновится.  Возвращается, только если есть предупреждения. 

        :return: The warning_offers of this UpdatePromoOffersResultDTO.
        :rtype: List[WarningPromoOfferUpdateDTO]
        """
        return self._warning_offers

    @warning_offers.setter
    def warning_offers(self, warning_offers):
        """Sets the warning_offers of this UpdatePromoOffersResultDTO.

        Изменения, по которым есть предупреждения. Они информируют о возможных проблемах. Информация о товарах обновится.  Возвращается, только если есть предупреждения. 

        :param warning_offers: The warning_offers of this UpdatePromoOffersResultDTO.
        :type warning_offers: List[WarningPromoOfferUpdateDTO]
        """

        self._warning_offers = warning_offers
