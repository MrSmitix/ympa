<?php

/**
 * Партнерский API Маркета
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\ParcelBoxLabelDTO;

/**
 * ParcelBoxLabelDTOTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\ParcelBoxLabelDTO
 */
class ParcelBoxLabelDTOTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ParcelBoxLabelDTO"
     */
    public function testParcelBoxLabelDTO()
    {
        $testParcelBoxLabelDTO = new ParcelBoxLabelDTO();
        $namespacedClassname = ParcelBoxLabelDTO::getModelsNamespace() . '\\ParcelBoxLabelDTO';
        $this->assertSame('\\' . ParcelBoxLabelDTO::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        self::markTestIncomplete(
            'Test of "ParcelBoxLabelDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "url"
     */
    public function testPropertyUrl()
    {
        self::markTestIncomplete(
            'Test of "url" property in "ParcelBoxLabelDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "supplierName"
     */
    public function testPropertySupplierName()
    {
        self::markTestIncomplete(
            'Test of "supplierName" property in "ParcelBoxLabelDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "deliveryServiceName"
     */
    public function testPropertyDeliveryServiceName()
    {
        self::markTestIncomplete(
            'Test of "deliveryServiceName" property in "ParcelBoxLabelDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "orderId"
     */
    public function testPropertyOrderId()
    {
        self::markTestIncomplete(
            'Test of "orderId" property in "ParcelBoxLabelDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "orderNum"
     */
    public function testPropertyOrderNum()
    {
        self::markTestIncomplete(
            'Test of "orderNum" property in "ParcelBoxLabelDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "recipientName"
     */
    public function testPropertyRecipientName()
    {
        self::markTestIncomplete(
            'Test of "recipientName" property in "ParcelBoxLabelDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "boxId"
     */
    public function testPropertyBoxId()
    {
        self::markTestIncomplete(
            'Test of "boxId" property in "ParcelBoxLabelDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "fulfilmentId"
     */
    public function testPropertyFulfilmentId()
    {
        self::markTestIncomplete(
            'Test of "fulfilmentId" property in "ParcelBoxLabelDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "place"
     */
    public function testPropertyPlace()
    {
        self::markTestIncomplete(
            'Test of "place" property in "ParcelBoxLabelDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "weight"
     */
    public function testPropertyWeight()
    {
        self::markTestIncomplete(
            'Test of "weight" property in "ParcelBoxLabelDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "deliveryServiceId"
     */
    public function testPropertyDeliveryServiceId()
    {
        self::markTestIncomplete(
            'Test of "deliveryServiceId" property in "ParcelBoxLabelDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "deliveryAddress"
     */
    public function testPropertyDeliveryAddress()
    {
        self::markTestIncomplete(
            'Test of "deliveryAddress" property in "ParcelBoxLabelDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "shipmentDate"
     */
    public function testPropertyShipmentDate()
    {
        self::markTestIncomplete(
            'Test of "shipmentDate" property in "ParcelBoxLabelDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = ParcelBoxLabelDTO::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}

