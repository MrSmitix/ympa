<?php

/**
 * Партнерский API Маркета
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\OrdersStatsItemDTO;

/**
 * OrdersStatsItemDTOTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\OrdersStatsItemDTO
 */
class OrdersStatsItemDTOTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "OrdersStatsItemDTO"
     */
    public function testOrdersStatsItemDTO()
    {
        $testOrdersStatsItemDTO = new OrdersStatsItemDTO();
        $namespacedClassname = OrdersStatsItemDTO::getModelsNamespace() . '\\OrdersStatsItemDTO';
        $this->assertSame('\\' . OrdersStatsItemDTO::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        self::markTestIncomplete(
            'Test of "OrdersStatsItemDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "offerName"
     */
    public function testPropertyOfferName()
    {
        self::markTestIncomplete(
            'Test of "offerName" property in "OrdersStatsItemDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "marketSku"
     */
    public function testPropertyMarketSku()
    {
        self::markTestIncomplete(
            'Test of "marketSku" property in "OrdersStatsItemDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "shopSku"
     */
    public function testPropertyShopSku()
    {
        self::markTestIncomplete(
            'Test of "shopSku" property in "OrdersStatsItemDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "count"
     */
    public function testPropertyCount()
    {
        self::markTestIncomplete(
            'Test of "count" property in "OrdersStatsItemDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "prices"
     */
    public function testPropertyPrices()
    {
        self::markTestIncomplete(
            'Test of "prices" property in "OrdersStatsItemDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "warehouse"
     */
    public function testPropertyWarehouse()
    {
        self::markTestIncomplete(
            'Test of "warehouse" property in "OrdersStatsItemDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "details"
     */
    public function testPropertyDetails()
    {
        self::markTestIncomplete(
            'Test of "details" property in "OrdersStatsItemDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "cisList"
     */
    public function testPropertyCisList()
    {
        self::markTestIncomplete(
            'Test of "cisList" property in "OrdersStatsItemDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "initialCount"
     */
    public function testPropertyInitialCount()
    {
        self::markTestIncomplete(
            'Test of "initialCount" property in "OrdersStatsItemDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "bidFee"
     */
    public function testPropertyBidFee()
    {
        self::markTestIncomplete(
            'Test of "bidFee" property in "OrdersStatsItemDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "cofinanceThreshold"
     */
    public function testPropertyCofinanceThreshold()
    {
        self::markTestIncomplete(
            'Test of "cofinanceThreshold" property in "OrdersStatsItemDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "cofinanceValue"
     */
    public function testPropertyCofinanceValue()
    {
        self::markTestIncomplete(
            'Test of "cofinanceValue" property in "OrdersStatsItemDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = OrdersStatsItemDTO::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}

