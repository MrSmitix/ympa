<?php

/**
 * Партнерский API Маркета
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\UpdateOfferDTO;

/**
 * UpdateOfferDTOTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\UpdateOfferDTO
 */
class UpdateOfferDTOTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "UpdateOfferDTO"
     */
    public function testUpdateOfferDTO()
    {
        $testUpdateOfferDTO = new UpdateOfferDTO();
        $namespacedClassname = UpdateOfferDTO::getModelsNamespace() . '\\UpdateOfferDTO';
        $this->assertSame('\\' . UpdateOfferDTO::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        self::markTestIncomplete(
            'Test of "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "offerId"
     */
    public function testPropertyOfferId()
    {
        self::markTestIncomplete(
            'Test of "offerId" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
        self::markTestIncomplete(
            'Test of "name" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "marketCategoryId"
     */
    public function testPropertyMarketCategoryId()
    {
        self::markTestIncomplete(
            'Test of "marketCategoryId" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "category"
     */
    public function testPropertyCategory()
    {
        self::markTestIncomplete(
            'Test of "category" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "pictures"
     */
    public function testPropertyPictures()
    {
        self::markTestIncomplete(
            'Test of "pictures" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "videos"
     */
    public function testPropertyVideos()
    {
        self::markTestIncomplete(
            'Test of "videos" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "manuals"
     */
    public function testPropertyManuals()
    {
        self::markTestIncomplete(
            'Test of "manuals" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "vendor"
     */
    public function testPropertyVendor()
    {
        self::markTestIncomplete(
            'Test of "vendor" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "barcodes"
     */
    public function testPropertyBarcodes()
    {
        self::markTestIncomplete(
            'Test of "barcodes" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
        self::markTestIncomplete(
            'Test of "description" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "manufacturerCountries"
     */
    public function testPropertyManufacturerCountries()
    {
        self::markTestIncomplete(
            'Test of "manufacturerCountries" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "weightDimensions"
     */
    public function testPropertyWeightDimensions()
    {
        self::markTestIncomplete(
            'Test of "weightDimensions" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "vendorCode"
     */
    public function testPropertyVendorCode()
    {
        self::markTestIncomplete(
            'Test of "vendorCode" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "tags"
     */
    public function testPropertyTags()
    {
        self::markTestIncomplete(
            'Test of "tags" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "shelfLife"
     */
    public function testPropertyShelfLife()
    {
        self::markTestIncomplete(
            'Test of "shelfLife" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "lifeTime"
     */
    public function testPropertyLifeTime()
    {
        self::markTestIncomplete(
            'Test of "lifeTime" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "guaranteePeriod"
     */
    public function testPropertyGuaranteePeriod()
    {
        self::markTestIncomplete(
            'Test of "guaranteePeriod" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "customsCommodityCode"
     */
    public function testPropertyCustomsCommodityCode()
    {
        self::markTestIncomplete(
            'Test of "customsCommodityCode" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "certificates"
     */
    public function testPropertyCertificates()
    {
        self::markTestIncomplete(
            'Test of "certificates" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "boxCount"
     */
    public function testPropertyBoxCount()
    {
        self::markTestIncomplete(
            'Test of "boxCount" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "condition"
     */
    public function testPropertyCondition()
    {
        self::markTestIncomplete(
            'Test of "condition" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
        self::markTestIncomplete(
            'Test of "type" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "downloadable"
     */
    public function testPropertyDownloadable()
    {
        self::markTestIncomplete(
            'Test of "downloadable" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "adult"
     */
    public function testPropertyAdult()
    {
        self::markTestIncomplete(
            'Test of "adult" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "age"
     */
    public function testPropertyAge()
    {
        self::markTestIncomplete(
            'Test of "age" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "params"
     */
    public function testPropertyParams()
    {
        self::markTestIncomplete(
            'Test of "params" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "parameterValues"
     */
    public function testPropertyParameterValues()
    {
        self::markTestIncomplete(
            'Test of "parameterValues" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "basicPrice"
     */
    public function testPropertyBasicPrice()
    {
        self::markTestIncomplete(
            'Test of "basicPrice" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "purchasePrice"
     */
    public function testPropertyPurchasePrice()
    {
        self::markTestIncomplete(
            'Test of "purchasePrice" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "additionalExpenses"
     */
    public function testPropertyAdditionalExpenses()
    {
        self::markTestIncomplete(
            'Test of "additionalExpenses" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "cofinancePrice"
     */
    public function testPropertyCofinancePrice()
    {
        self::markTestIncomplete(
            'Test of "cofinancePrice" property in "UpdateOfferDTO" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = UpdateOfferDTO::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}

