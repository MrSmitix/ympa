<?php

/**
 * Партнерский API Маркета
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the endpoint.
 */
namespace OpenAPIServer\Api;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Api\ShipmentsApi;

/**
 * ShipmentsApiTest Class Doc Comment
 *
 * @package OpenAPIServer\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Api\ShipmentsApi
 */
class ShipmentsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for confirmShipment
     *
     * Подтверждение отгрузки.
     *
     * @covers ::confirmShipment
     */
    public function testConfirmShipment()
    {
        self::markTestIncomplete(
            'Test of "confirmShipment" method has not been implemented yet.'
        );
    }

    /**
     * Test case for downloadShipmentAct
     *
     * Получение акта приема-передачи.
     *
     * @covers ::downloadShipmentAct
     */
    public function testDownloadShipmentAct()
    {
        self::markTestIncomplete(
            'Test of "downloadShipmentAct" method has not been implemented yet.'
        );
    }

    /**
     * Test case for downloadShipmentDiscrepancyAct
     *
     * Получение акта расхождений.
     *
     * @covers ::downloadShipmentDiscrepancyAct
     */
    public function testDownloadShipmentDiscrepancyAct()
    {
        self::markTestIncomplete(
            'Test of "downloadShipmentDiscrepancyAct" method has not been implemented yet.'
        );
    }

    /**
     * Test case for downloadShipmentInboundAct
     *
     * Получение фактического акта приема-передачи.
     *
     * @covers ::downloadShipmentInboundAct
     */
    public function testDownloadShipmentInboundAct()
    {
        self::markTestIncomplete(
            'Test of "downloadShipmentInboundAct" method has not been implemented yet.'
        );
    }

    /**
     * Test case for downloadShipmentPalletLabels
     *
     * Ярлыки для доверительной приемки (FBS).
     *
     * @covers ::downloadShipmentPalletLabels
     */
    public function testDownloadShipmentPalletLabels()
    {
        self::markTestIncomplete(
            'Test of "downloadShipmentPalletLabels" method has not been implemented yet.'
        );
    }

    /**
     * Test case for downloadShipmentReceptionTransferAct
     *
     * Подтверждение ближайшей отгрузки и получение акта приема-передачи для нее.
     *
     * @covers ::downloadShipmentReceptionTransferAct
     */
    public function testDownloadShipmentReceptionTransferAct()
    {
        self::markTestIncomplete(
            'Test of "downloadShipmentReceptionTransferAct" method has not been implemented yet.'
        );
    }

    /**
     * Test case for downloadShipmentTransportationWaybill
     *
     * Получение транспортной накладной.
     *
     * @covers ::downloadShipmentTransportationWaybill
     */
    public function testDownloadShipmentTransportationWaybill()
    {
        self::markTestIncomplete(
            'Test of "downloadShipmentTransportationWaybill" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getShipment
     *
     * Получение информации об одной отгрузке.
     *
     * @covers ::getShipment
     */
    public function testGetShipment()
    {
        self::markTestIncomplete(
            'Test of "getShipment" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getShipmentOrdersInfo
     *
     * Получение информации о возможности печати ярлыков (FBS).
     *
     * @covers ::getShipmentOrdersInfo
     */
    public function testGetShipmentOrdersInfo()
    {
        self::markTestIncomplete(
            'Test of "getShipmentOrdersInfo" method has not been implemented yet.'
        );
    }

    /**
     * Test case for searchShipments
     *
     * Получение информации о нескольких отгрузках.
     *
     * @covers ::searchShipments
     */
    public function testSearchShipments()
    {
        self::markTestIncomplete(
            'Test of "searchShipments" method has not been implemented yet.'
        );
    }

    /**
     * Test case for setShipmentPalletsCount
     *
     * Передача количества упаковок в отгрузке.
     *
     * @covers ::setShipmentPalletsCount
     */
    public function testSetShipmentPalletsCount()
    {
        self::markTestIncomplete(
            'Test of "setShipmentPalletsCount" method has not been implemented yet.'
        );
    }

    /**
     * Test case for transferOrdersFromShipment
     *
     * Перенос заказов в следующую отгрузку.
     *
     * @covers ::transferOrdersFromShipment
     */
    public function testTransferOrdersFromShipment()
    {
        self::markTestIncomplete(
            'Test of "transferOrdersFromShipment" method has not been implemented yet.'
        );
    }
}
