<?php

/**
 * Партнерский API Маркета
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the endpoint.
 */
namespace OpenAPIServer\Api;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Api\OrdersApi;

/**
 * OrdersApiTest Class Doc Comment
 *
 * @package OpenAPIServer\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Api\OrdersApi
 */
class OrdersApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for acceptOrderCancellation
     *
     * Отмена заказа покупателем.
     *
     * @covers ::acceptOrderCancellation
     */
    public function testAcceptOrderCancellation()
    {
        self::markTestIncomplete(
            'Test of "acceptOrderCancellation" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getOrder
     *
     * Информация об одном заказе.
     *
     * @covers ::getOrder
     */
    public function testGetOrder()
    {
        self::markTestIncomplete(
            'Test of "getOrder" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getOrders
     *
     * Информация о нескольких заказах.
     *
     * @covers ::getOrders
     */
    public function testGetOrders()
    {
        self::markTestIncomplete(
            'Test of "getOrders" method has not been implemented yet.'
        );
    }

    /**
     * Test case for provideOrderDigitalCodes
     *
     * Передача ключей цифровых товаров.
     *
     * @covers ::provideOrderDigitalCodes
     */
    public function testProvideOrderDigitalCodes()
    {
        self::markTestIncomplete(
            'Test of "provideOrderDigitalCodes" method has not been implemented yet.'
        );
    }

    /**
     * Test case for provideOrderItemIdentifiers
     *
     * Передача кодов маркировки единиц товара.
     *
     * @covers ::provideOrderItemIdentifiers
     */
    public function testProvideOrderItemIdentifiers()
    {
        self::markTestIncomplete(
            'Test of "provideOrderItemIdentifiers" method has not been implemented yet.'
        );
    }

    /**
     * Test case for setOrderBoxLayout
     *
     * Подготовка заказа.
     *
     * @covers ::setOrderBoxLayout
     */
    public function testSetOrderBoxLayout()
    {
        self::markTestIncomplete(
            'Test of "setOrderBoxLayout" method has not been implemented yet.'
        );
    }

    /**
     * Test case for setOrderShipmentBoxes
     *
     * Передача количества грузовых мест в заказе.
     *
     * @covers ::setOrderShipmentBoxes
     */
    public function testSetOrderShipmentBoxes()
    {
        self::markTestIncomplete(
            'Test of "setOrderShipmentBoxes" method has not been implemented yet.'
        );
    }

    /**
     * Test case for updateOrderItems
     *
     * Удаление товара из заказа или уменьшение числа единиц.
     *
     * @covers ::updateOrderItems
     */
    public function testUpdateOrderItems()
    {
        self::markTestIncomplete(
            'Test of "updateOrderItems" method has not been implemented yet.'
        );
    }

    /**
     * Test case for updateOrderStatus
     *
     * Изменение статуса одного заказа.
     *
     * @covers ::updateOrderStatus
     */
    public function testUpdateOrderStatus()
    {
        self::markTestIncomplete(
            'Test of "updateOrderStatus" method has not been implemented yet.'
        );
    }

    /**
     * Test case for updateOrderStatuses
     *
     * Изменение статусов нескольких заказов.
     *
     * @covers ::updateOrderStatuses
     */
    public function testUpdateOrderStatuses()
    {
        self::markTestIncomplete(
            'Test of "updateOrderStatuses" method has not been implemented yet.'
        );
    }
}
