<?php

/**
 * Партнерский API Маркета
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the endpoint.
 */
namespace OpenAPIServer\Api;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Api\FbsApi;

/**
 * FbsApiTest Class Doc Comment
 *
 * @package OpenAPIServer\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Api\FbsApi
 */
class FbsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addHiddenOffers
     *
     * Скрытие товаров и настройки скрытия.
     *
     * @covers ::addHiddenOffers
     */
    public function testAddHiddenOffers()
    {
        self::markTestIncomplete(
            'Test of "addHiddenOffers" method has not been implemented yet.'
        );
    }

    /**
     * Test case for addOffersToArchive
     *
     * Добавление товаров в архив.
     *
     * @covers ::addOffersToArchive
     */
    public function testAddOffersToArchive()
    {
        self::markTestIncomplete(
            'Test of "addOffersToArchive" method has not been implemented yet.'
        );
    }

    /**
     * Test case for calculateTariffs
     *
     * Калькулятор стоимости услуг.
     *
     * @covers ::calculateTariffs
     */
    public function testCalculateTariffs()
    {
        self::markTestIncomplete(
            'Test of "calculateTariffs" method has not been implemented yet.'
        );
    }

    /**
     * Test case for confirmBusinessPrices
     *
     * Удаление товара из карантина по цене в кабинете.
     *
     * @covers ::confirmBusinessPrices
     */
    public function testConfirmBusinessPrices()
    {
        self::markTestIncomplete(
            'Test of "confirmBusinessPrices" method has not been implemented yet.'
        );
    }

    /**
     * Test case for confirmCampaignPrices
     *
     * Удаление товара из карантина по цене в магазине.
     *
     * @covers ::confirmCampaignPrices
     */
    public function testConfirmCampaignPrices()
    {
        self::markTestIncomplete(
            'Test of "confirmCampaignPrices" method has not been implemented yet.'
        );
    }

    /**
     * Test case for confirmShipment
     *
     * Подтверждение отгрузки.
     *
     * @covers ::confirmShipment
     */
    public function testConfirmShipment()
    {
        self::markTestIncomplete(
            'Test of "confirmShipment" method has not been implemented yet.'
        );
    }

    /**
     * Test case for createChat
     *
     * Создание нового чата с покупателем.
     *
     * @covers ::createChat
     */
    public function testCreateChat()
    {
        self::markTestIncomplete(
            'Test of "createChat" method has not been implemented yet.'
        );
    }

    /**
     * Test case for deleteCampaignOffers
     *
     * Удаление товаров из ассортимента магазина.
     *
     * @covers ::deleteCampaignOffers
     */
    public function testDeleteCampaignOffers()
    {
        self::markTestIncomplete(
            'Test of "deleteCampaignOffers" method has not been implemented yet.'
        );
    }

    /**
     * Test case for deleteGoodsFeedbackComment
     *
     * Удаление комментария к отзыву.
     *
     * @covers ::deleteGoodsFeedbackComment
     */
    public function testDeleteGoodsFeedbackComment()
    {
        self::markTestIncomplete(
            'Test of "deleteGoodsFeedbackComment" method has not been implemented yet.'
        );
    }

    /**
     * Test case for deleteHiddenOffers
     *
     * Возобновление показа товаров.
     *
     * @covers ::deleteHiddenOffers
     */
    public function testDeleteHiddenOffers()
    {
        self::markTestIncomplete(
            'Test of "deleteHiddenOffers" method has not been implemented yet.'
        );
    }

    /**
     * Test case for deleteOffers
     *
     * Удаление товаров из каталога.
     *
     * @covers ::deleteOffers
     */
    public function testDeleteOffers()
    {
        self::markTestIncomplete(
            'Test of "deleteOffers" method has not been implemented yet.'
        );
    }

    /**
     * Test case for deleteOffersFromArchive
     *
     * Удаление товаров из архива.
     *
     * @covers ::deleteOffersFromArchive
     */
    public function testDeleteOffersFromArchive()
    {
        self::markTestIncomplete(
            'Test of "deleteOffersFromArchive" method has not been implemented yet.'
        );
    }

    /**
     * Test case for deletePromoOffers
     *
     * Удаление товаров из акции.
     *
     * @covers ::deletePromoOffers
     */
    public function testDeletePromoOffers()
    {
        self::markTestIncomplete(
            'Test of "deletePromoOffers" method has not been implemented yet.'
        );
    }

    /**
     * Test case for downloadShipmentAct
     *
     * Получение акта приема-передачи.
     *
     * @covers ::downloadShipmentAct
     */
    public function testDownloadShipmentAct()
    {
        self::markTestIncomplete(
            'Test of "downloadShipmentAct" method has not been implemented yet.'
        );
    }

    /**
     * Test case for downloadShipmentDiscrepancyAct
     *
     * Получение акта расхождений.
     *
     * @covers ::downloadShipmentDiscrepancyAct
     */
    public function testDownloadShipmentDiscrepancyAct()
    {
        self::markTestIncomplete(
            'Test of "downloadShipmentDiscrepancyAct" method has not been implemented yet.'
        );
    }

    /**
     * Test case for downloadShipmentInboundAct
     *
     * Получение фактического акта приема-передачи.
     *
     * @covers ::downloadShipmentInboundAct
     */
    public function testDownloadShipmentInboundAct()
    {
        self::markTestIncomplete(
            'Test of "downloadShipmentInboundAct" method has not been implemented yet.'
        );
    }

    /**
     * Test case for downloadShipmentPalletLabels
     *
     * Ярлыки для доверительной приемки (FBS).
     *
     * @covers ::downloadShipmentPalletLabels
     */
    public function testDownloadShipmentPalletLabels()
    {
        self::markTestIncomplete(
            'Test of "downloadShipmentPalletLabels" method has not been implemented yet.'
        );
    }

    /**
     * Test case for downloadShipmentReceptionTransferAct
     *
     * Подтверждение ближайшей отгрузки и получение акта приема-передачи для нее.
     *
     * @covers ::downloadShipmentReceptionTransferAct
     */
    public function testDownloadShipmentReceptionTransferAct()
    {
        self::markTestIncomplete(
            'Test of "downloadShipmentReceptionTransferAct" method has not been implemented yet.'
        );
    }

    /**
     * Test case for downloadShipmentTransportationWaybill
     *
     * Получение транспортной накладной.
     *
     * @covers ::downloadShipmentTransportationWaybill
     */
    public function testDownloadShipmentTransportationWaybill()
    {
        self::markTestIncomplete(
            'Test of "downloadShipmentTransportationWaybill" method has not been implemented yet.'
        );
    }

    /**
     * Test case for generateBoostConsolidatedReport
     *
     * Отчет по бусту продаж.
     *
     * @covers ::generateBoostConsolidatedReport
     */
    public function testGenerateBoostConsolidatedReport()
    {
        self::markTestIncomplete(
            'Test of "generateBoostConsolidatedReport" method has not been implemented yet.'
        );
    }

    /**
     * Test case for generateCompetitorsPositionReport
     *
     * Отчет «Конкурентная позиция».
     *
     * @covers ::generateCompetitorsPositionReport
     */
    public function testGenerateCompetitorsPositionReport()
    {
        self::markTestIncomplete(
            'Test of "generateCompetitorsPositionReport" method has not been implemented yet.'
        );
    }

    /**
     * Test case for generateGoodsFeedbackReport
     *
     * Отчет по отзывам о товарах.
     *
     * @covers ::generateGoodsFeedbackReport
     */
    public function testGenerateGoodsFeedbackReport()
    {
        self::markTestIncomplete(
            'Test of "generateGoodsFeedbackReport" method has not been implemented yet.'
        );
    }

    /**
     * Test case for generateGoodsRealizationReport
     *
     * Отчет по реализации.
     *
     * @covers ::generateGoodsRealizationReport
     */
    public function testGenerateGoodsRealizationReport()
    {
        self::markTestIncomplete(
            'Test of "generateGoodsRealizationReport" method has not been implemented yet.'
        );
    }

    /**
     * Test case for generateMassOrderLabelsReport
     *
     * Готовые ярлыки‑наклейки на все коробки в нескольких заказах.
     *
     * @covers ::generateMassOrderLabelsReport
     */
    public function testGenerateMassOrderLabelsReport()
    {
        self::markTestIncomplete(
            'Test of "generateMassOrderLabelsReport" method has not been implemented yet.'
        );
    }

    /**
     * Test case for generateOrderLabel
     *
     * Готовый ярлык‑наклейка для коробки в заказе.
     *
     * @covers ::generateOrderLabel
     */
    public function testGenerateOrderLabel()
    {
        self::markTestIncomplete(
            'Test of "generateOrderLabel" method has not been implemented yet.'
        );
    }

    /**
     * Test case for generateOrderLabels
     *
     * Готовые ярлыки‑наклейки на все коробки в одном заказе.
     *
     * @covers ::generateOrderLabels
     */
    public function testGenerateOrderLabels()
    {
        self::markTestIncomplete(
            'Test of "generateOrderLabels" method has not been implemented yet.'
        );
    }

    /**
     * Test case for generatePricesReport
     *
     * Отчет «Цены на рынке».
     *
     * @covers ::generatePricesReport
     */
    public function testGeneratePricesReport()
    {
        self::markTestIncomplete(
            'Test of "generatePricesReport" method has not been implemented yet.'
        );
    }

    /**
     * Test case for generateShelfsStatisticsReport
     *
     * Отчет по полкам.
     *
     * @covers ::generateShelfsStatisticsReport
     */
    public function testGenerateShelfsStatisticsReport()
    {
        self::markTestIncomplete(
            'Test of "generateShelfsStatisticsReport" method has not been implemented yet.'
        );
    }

    /**
     * Test case for generateShipmentListDocumentReport
     *
     * Получение листа сборки.
     *
     * @covers ::generateShipmentListDocumentReport
     */
    public function testGenerateShipmentListDocumentReport()
    {
        self::markTestIncomplete(
            'Test of "generateShipmentListDocumentReport" method has not been implemented yet.'
        );
    }

    /**
     * Test case for generateShowsSalesReport
     *
     * Отчет «Аналитика продаж».
     *
     * @covers ::generateShowsSalesReport
     */
    public function testGenerateShowsSalesReport()
    {
        self::markTestIncomplete(
            'Test of "generateShowsSalesReport" method has not been implemented yet.'
        );
    }

    /**
     * Test case for generateStocksOnWarehousesReport
     *
     * Отчет по остаткам на складах.
     *
     * @covers ::generateStocksOnWarehousesReport
     */
    public function testGenerateStocksOnWarehousesReport()
    {
        self::markTestIncomplete(
            'Test of "generateStocksOnWarehousesReport" method has not been implemented yet.'
        );
    }

    /**
     * Test case for generateUnitedMarketplaceServicesReport
     *
     * Отчет по стоимости услуг.
     *
     * @covers ::generateUnitedMarketplaceServicesReport
     */
    public function testGenerateUnitedMarketplaceServicesReport()
    {
        self::markTestIncomplete(
            'Test of "generateUnitedMarketplaceServicesReport" method has not been implemented yet.'
        );
    }

    /**
     * Test case for generateUnitedNettingReport
     *
     * Отчет по платежам.
     *
     * @covers ::generateUnitedNettingReport
     */
    public function testGenerateUnitedNettingReport()
    {
        self::markTestIncomplete(
            'Test of "generateUnitedNettingReport" method has not been implemented yet.'
        );
    }

    /**
     * Test case for generateUnitedOrdersReport
     *
     * Отчет по заказам.
     *
     * @covers ::generateUnitedOrdersReport
     */
    public function testGenerateUnitedOrdersReport()
    {
        self::markTestIncomplete(
            'Test of "generateUnitedOrdersReport" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getAllOffers
     *
     * Все предложения магазина.
     *
     * @covers ::getAllOffers
     */
    public function testGetAllOffers()
    {
        self::markTestIncomplete(
            'Test of "getAllOffers" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getBidsInfoForBusiness
     *
     * Информация об установленных ставках.
     *
     * @covers ::getBidsInfoForBusiness
     */
    public function testGetBidsInfoForBusiness()
    {
        self::markTestIncomplete(
            'Test of "getBidsInfoForBusiness" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getBidsRecommendations
     *
     * Рекомендованные ставки для заданных товаров.
     *
     * @covers ::getBidsRecommendations
     */
    public function testGetBidsRecommendations()
    {
        self::markTestIncomplete(
            'Test of "getBidsRecommendations" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getBusinessQuarantineOffers
     *
     * Список товаров, находящихся в карантине по цене в кабинете.
     *
     * @covers ::getBusinessQuarantineOffers
     */
    public function testGetBusinessQuarantineOffers()
    {
        self::markTestIncomplete(
            'Test of "getBusinessQuarantineOffers" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getBusinessSettings
     *
     * Настройки кабинета.
     *
     * @covers ::getBusinessSettings
     */
    public function testGetBusinessSettings()
    {
        self::markTestIncomplete(
            'Test of "getBusinessSettings" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getCampaign
     *
     * Информация о магазине.
     *
     * @covers ::getCampaign
     */
    public function testGetCampaign()
    {
        self::markTestIncomplete(
            'Test of "getCampaign" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getCampaignLogins
     *
     * Логины, связанные с магазином.
     *
     * @covers ::getCampaignLogins
     */
    public function testGetCampaignLogins()
    {
        self::markTestIncomplete(
            'Test of "getCampaignLogins" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getCampaignOffers
     *
     * Информация о товарах, которые размещены в заданном магазине.
     *
     * @covers ::getCampaignOffers
     */
    public function testGetCampaignOffers()
    {
        self::markTestIncomplete(
            'Test of "getCampaignOffers" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getCampaignQuarantineOffers
     *
     * Список товаров, находящихся в карантине по цене в магазине.
     *
     * @covers ::getCampaignQuarantineOffers
     */
    public function testGetCampaignQuarantineOffers()
    {
        self::markTestIncomplete(
            'Test of "getCampaignQuarantineOffers" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getCampaignRegion
     *
     * Регион магазина.
     *
     * @covers ::getCampaignRegion
     */
    public function testGetCampaignRegion()
    {
        self::markTestIncomplete(
            'Test of "getCampaignRegion" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getCampaignSettings
     *
     * Настройки магазина.
     *
     * @covers ::getCampaignSettings
     */
    public function testGetCampaignSettings()
    {
        self::markTestIncomplete(
            'Test of "getCampaignSettings" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getCampaigns
     *
     * Список магазинов пользователя.
     *
     * @covers ::getCampaigns
     */
    public function testGetCampaigns()
    {
        self::markTestIncomplete(
            'Test of "getCampaigns" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getCampaignsByLogin
     *
     * Магазины, доступные логину.
     *
     * @covers ::getCampaignsByLogin
     */
    public function testGetCampaignsByLogin()
    {
        self::markTestIncomplete(
            'Test of "getCampaignsByLogin" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getCategoriesMaxSaleQuantum
     *
     * Лимит на установку кванта продажи и минимального количества товаров в заказе.
     *
     * @covers ::getCategoriesMaxSaleQuantum
     */
    public function testGetCategoriesMaxSaleQuantum()
    {
        self::markTestIncomplete(
            'Test of "getCategoriesMaxSaleQuantum" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getCategoriesTree
     *
     * Дерево категорий.
     *
     * @covers ::getCategoriesTree
     */
    public function testGetCategoriesTree()
    {
        self::markTestIncomplete(
            'Test of "getCategoriesTree" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getCategoryContentParameters
     *
     * Списки характеристик товаров по категориям.
     *
     * @covers ::getCategoryContentParameters
     */
    public function testGetCategoryContentParameters()
    {
        self::markTestIncomplete(
            'Test of "getCategoryContentParameters" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getChatHistory
     *
     * Получение истории сообщений в чате.
     *
     * @covers ::getChatHistory
     */
    public function testGetChatHistory()
    {
        self::markTestIncomplete(
            'Test of "getChatHistory" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getChats
     *
     * Получение доступных чатов.
     *
     * @covers ::getChats
     */
    public function testGetChats()
    {
        self::markTestIncomplete(
            'Test of "getChats" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getDeliveryServices
     *
     * Справочник служб доставки.
     *
     * @covers ::getDeliveryServices
     */
    public function testGetDeliveryServices()
    {
        self::markTestIncomplete(
            'Test of "getDeliveryServices" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getFeed
     *
     * Информация о прайс-листе.
     *
     * @covers ::getFeed
     */
    public function testGetFeed()
    {
        self::markTestIncomplete(
            'Test of "getFeed" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getFeedIndexLogs
     *
     * Отчет по индексации прайс-листа.
     *
     * @covers ::getFeedIndexLogs
     */
    public function testGetFeedIndexLogs()
    {
        self::markTestIncomplete(
            'Test of "getFeedIndexLogs" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getFeedbackAndCommentUpdates
     *
     * Новые и обновленные отзывы о магазине.
     *
     * @covers ::getFeedbackAndCommentUpdates
     */
    public function testGetFeedbackAndCommentUpdates()
    {
        self::markTestIncomplete(
            'Test of "getFeedbackAndCommentUpdates" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getFeeds
     *
     * Список прайс-листов магазина.
     *
     * @covers ::getFeeds
     */
    public function testGetFeeds()
    {
        self::markTestIncomplete(
            'Test of "getFeeds" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getGoodsFeedbackComments
     *
     * Получение комментариев к отзыву.
     *
     * @covers ::getGoodsFeedbackComments
     */
    public function testGetGoodsFeedbackComments()
    {
        self::markTestIncomplete(
            'Test of "getGoodsFeedbackComments" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getGoodsFeedbacks
     *
     * Получение отзывов о товарах продавца.
     *
     * @covers ::getGoodsFeedbacks
     */
    public function testGetGoodsFeedbacks()
    {
        self::markTestIncomplete(
            'Test of "getGoodsFeedbacks" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getGoodsStats
     *
     * Отчет по товарам.
     *
     * @covers ::getGoodsStats
     */
    public function testGetGoodsStats()
    {
        self::markTestIncomplete(
            'Test of "getGoodsStats" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getHiddenOffers
     *
     * Информация о скрытых вами товарах.
     *
     * @covers ::getHiddenOffers
     */
    public function testGetHiddenOffers()
    {
        self::markTestIncomplete(
            'Test of "getHiddenOffers" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getOfferCardsContentStatus
     *
     * Получение информации о заполненности карточек магазина.
     *
     * @covers ::getOfferCardsContentStatus
     */
    public function testGetOfferCardsContentStatus()
    {
        self::markTestIncomplete(
            'Test of "getOfferCardsContentStatus" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getOfferMappingEntries
     *
     * Список товаров в каталоге.
     *
     * @covers ::getOfferMappingEntries
     */
    public function testGetOfferMappingEntries()
    {
        self::markTestIncomplete(
            'Test of "getOfferMappingEntries" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getOfferMappings
     *
     * Информация о товарах в каталоге.
     *
     * @covers ::getOfferMappings
     */
    public function testGetOfferMappings()
    {
        self::markTestIncomplete(
            'Test of "getOfferMappings" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getOfferRecommendations
     *
     * Рекомендации Маркета, касающиеся цен.
     *
     * @covers ::getOfferRecommendations
     */
    public function testGetOfferRecommendations()
    {
        self::markTestIncomplete(
            'Test of "getOfferRecommendations" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getOffers
     *
     * Предложения магазина.
     *
     * @covers ::getOffers
     */
    public function testGetOffers()
    {
        self::markTestIncomplete(
            'Test of "getOffers" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getOrder
     *
     * Информация об одном заказе.
     *
     * @covers ::getOrder
     */
    public function testGetOrder()
    {
        self::markTestIncomplete(
            'Test of "getOrder" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getOrderBusinessBuyerInfo
     *
     * Информация о покупателе — юридическом лице.
     *
     * @covers ::getOrderBusinessBuyerInfo
     */
    public function testGetOrderBusinessBuyerInfo()
    {
        self::markTestIncomplete(
            'Test of "getOrderBusinessBuyerInfo" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getOrderBusinessDocumentsInfo
     *
     * Информация о документах.
     *
     * @covers ::getOrderBusinessDocumentsInfo
     */
    public function testGetOrderBusinessDocumentsInfo()
    {
        self::markTestIncomplete(
            'Test of "getOrderBusinessDocumentsInfo" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getOrderLabelsData
     *
     * Данные для самостоятельного изготовления ярлыков.
     *
     * @covers ::getOrderLabelsData
     */
    public function testGetOrderLabelsData()
    {
        self::markTestIncomplete(
            'Test of "getOrderLabelsData" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getOrders
     *
     * Информация о нескольких заказах.
     *
     * @covers ::getOrders
     */
    public function testGetOrders()
    {
        self::markTestIncomplete(
            'Test of "getOrders" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getOrdersStats
     *
     * Детальная информация по заказам.
     *
     * @covers ::getOrdersStats
     */
    public function testGetOrdersStats()
    {
        self::markTestIncomplete(
            'Test of "getOrdersStats" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getPrices
     *
     * Список цен.
     *
     * @covers ::getPrices
     */
    public function testGetPrices()
    {
        self::markTestIncomplete(
            'Test of "getPrices" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getPricesByOfferIds
     *
     * Просмотр цен на указанные товары в магазине.
     *
     * @covers ::getPricesByOfferIds
     */
    public function testGetPricesByOfferIds()
    {
        self::markTestIncomplete(
            'Test of "getPricesByOfferIds" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getPromoOffers
     *
     * Получение списка товаров, которые участвуют или могут участвовать в акции.
     *
     * @covers ::getPromoOffers
     */
    public function testGetPromoOffers()
    {
        self::markTestIncomplete(
            'Test of "getPromoOffers" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getPromos
     *
     * Получение списка акций.
     *
     * @covers ::getPromos
     */
    public function testGetPromos()
    {
        self::markTestIncomplete(
            'Test of "getPromos" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getQualityRatingDetails
     *
     * Заказы, которые повлияли на индекс качества.
     *
     * @covers ::getQualityRatingDetails
     */
    public function testGetQualityRatingDetails()
    {
        self::markTestIncomplete(
            'Test of "getQualityRatingDetails" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getQualityRatings
     *
     * Индекс качества магазинов.
     *
     * @covers ::getQualityRatings
     */
    public function testGetQualityRatings()
    {
        self::markTestIncomplete(
            'Test of "getQualityRatings" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getReportInfo
     *
     * Получение заданного отчета.
     *
     * @covers ::getReportInfo
     */
    public function testGetReportInfo()
    {
        self::markTestIncomplete(
            'Test of "getReportInfo" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getReturn
     *
     * Информация о невыкупе или возврате.
     *
     * @covers ::getReturn
     */
    public function testGetReturn()
    {
        self::markTestIncomplete(
            'Test of "getReturn" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getReturnApplication
     *
     * Получение заявления на возврат.
     *
     * @covers ::getReturnApplication
     */
    public function testGetReturnApplication()
    {
        self::markTestIncomplete(
            'Test of "getReturnApplication" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getReturnPhoto
     *
     * Получение фотографии возврата.
     *
     * @covers ::getReturnPhoto
     */
    public function testGetReturnPhoto()
    {
        self::markTestIncomplete(
            'Test of "getReturnPhoto" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getReturns
     *
     * Список невыкупов и возвратов.
     *
     * @covers ::getReturns
     */
    public function testGetReturns()
    {
        self::markTestIncomplete(
            'Test of "getReturns" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getShipment
     *
     * Получение информации об одной отгрузке.
     *
     * @covers ::getShipment
     */
    public function testGetShipment()
    {
        self::markTestIncomplete(
            'Test of "getShipment" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getShipmentOrdersInfo
     *
     * Получение информации о возможности печати ярлыков (FBS).
     *
     * @covers ::getShipmentOrdersInfo
     */
    public function testGetShipmentOrdersInfo()
    {
        self::markTestIncomplete(
            'Test of "getShipmentOrdersInfo" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getStocks
     *
     * Информация об остатках и оборачиваемости.
     *
     * @covers ::getStocks
     */
    public function testGetStocks()
    {
        self::markTestIncomplete(
            'Test of "getStocks" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getSuggestedOfferMappingEntries
     *
     * Рекомендованные карточки для товаров.
     *
     * @covers ::getSuggestedOfferMappingEntries
     */
    public function testGetSuggestedOfferMappingEntries()
    {
        self::markTestIncomplete(
            'Test of "getSuggestedOfferMappingEntries" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getSuggestedOfferMappings
     *
     * Просмотр карточек на Маркете, которые подходят вашим товарам.
     *
     * @covers ::getSuggestedOfferMappings
     */
    public function testGetSuggestedOfferMappings()
    {
        self::markTestIncomplete(
            'Test of "getSuggestedOfferMappings" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getSuggestedPrices
     *
     * Цены для продвижения товаров.
     *
     * @covers ::getSuggestedPrices
     */
    public function testGetSuggestedPrices()
    {
        self::markTestIncomplete(
            'Test of "getSuggestedPrices" method has not been implemented yet.'
        );
    }

    /**
     * Test case for getWarehouses
     *
     * Список складов и групп складов.
     *
     * @covers ::getWarehouses
     */
    public function testGetWarehouses()
    {
        self::markTestIncomplete(
            'Test of "getWarehouses" method has not been implemented yet.'
        );
    }

    /**
     * Test case for provideOrderItemIdentifiers
     *
     * Передача кодов маркировки единиц товара.
     *
     * @covers ::provideOrderItemIdentifiers
     */
    public function testProvideOrderItemIdentifiers()
    {
        self::markTestIncomplete(
            'Test of "provideOrderItemIdentifiers" method has not been implemented yet.'
        );
    }

    /**
     * Test case for putBidsForBusiness
     *
     * Включение буста продаж и установка ставок.
     *
     * @covers ::putBidsForBusiness
     */
    public function testPutBidsForBusiness()
    {
        self::markTestIncomplete(
            'Test of "putBidsForBusiness" method has not been implemented yet.'
        );
    }

    /**
     * Test case for putBidsForCampaign
     *
     * Включение буста продаж и установка ставок для магазина.
     *
     * @covers ::putBidsForCampaign
     */
    public function testPutBidsForCampaign()
    {
        self::markTestIncomplete(
            'Test of "putBidsForCampaign" method has not been implemented yet.'
        );
    }

    /**
     * Test case for refreshFeed
     *
     * Сообщить, что прайс-лист обновился.
     *
     * @covers ::refreshFeed
     */
    public function testRefreshFeed()
    {
        self::markTestIncomplete(
            'Test of "refreshFeed" method has not been implemented yet.'
        );
    }

    /**
     * Test case for searchRegionChildren
     *
     * Информация о дочерних регионах.
     *
     * @covers ::searchRegionChildren
     */
    public function testSearchRegionChildren()
    {
        self::markTestIncomplete(
            'Test of "searchRegionChildren" method has not been implemented yet.'
        );
    }

    /**
     * Test case for searchRegionsById
     *
     * Информация о регионе.
     *
     * @covers ::searchRegionsById
     */
    public function testSearchRegionsById()
    {
        self::markTestIncomplete(
            'Test of "searchRegionsById" method has not been implemented yet.'
        );
    }

    /**
     * Test case for searchRegionsByName
     *
     * Поиск регионов по их имени.
     *
     * @covers ::searchRegionsByName
     */
    public function testSearchRegionsByName()
    {
        self::markTestIncomplete(
            'Test of "searchRegionsByName" method has not been implemented yet.'
        );
    }

    /**
     * Test case for searchShipments
     *
     * Получение информации о нескольких отгрузках.
     *
     * @covers ::searchShipments
     */
    public function testSearchShipments()
    {
        self::markTestIncomplete(
            'Test of "searchShipments" method has not been implemented yet.'
        );
    }

    /**
     * Test case for sendFileToChat
     *
     * Отправка файла в чат.
     *
     * @covers ::sendFileToChat
     */
    public function testSendFileToChat()
    {
        self::markTestIncomplete(
            'Test of "sendFileToChat" method has not been implemented yet.'
        );
    }

    /**
     * Test case for sendMessageToChat
     *
     * Отправка сообщения в чат.
     *
     * @covers ::sendMessageToChat
     */
    public function testSendMessageToChat()
    {
        self::markTestIncomplete(
            'Test of "sendMessageToChat" method has not been implemented yet.'
        );
    }

    /**
     * Test case for setFeedParams
     *
     * Изменение параметров прайс-листа.
     *
     * @covers ::setFeedParams
     */
    public function testSetFeedParams()
    {
        self::markTestIncomplete(
            'Test of "setFeedParams" method has not been implemented yet.'
        );
    }

    /**
     * Test case for setOrderBoxLayout
     *
     * Подготовка заказа.
     *
     * @covers ::setOrderBoxLayout
     */
    public function testSetOrderBoxLayout()
    {
        self::markTestIncomplete(
            'Test of "setOrderBoxLayout" method has not been implemented yet.'
        );
    }

    /**
     * Test case for setOrderShipmentBoxes
     *
     * Передача количества грузовых мест в заказе.
     *
     * @covers ::setOrderShipmentBoxes
     */
    public function testSetOrderShipmentBoxes()
    {
        self::markTestIncomplete(
            'Test of "setOrderShipmentBoxes" method has not been implemented yet.'
        );
    }

    /**
     * Test case for setShipmentPalletsCount
     *
     * Передача количества упаковок в отгрузке.
     *
     * @covers ::setShipmentPalletsCount
     */
    public function testSetShipmentPalletsCount()
    {
        self::markTestIncomplete(
            'Test of "setShipmentPalletsCount" method has not been implemented yet.'
        );
    }

    /**
     * Test case for skipGoodsFeedbacksReaction
     *
     * Отказ от ответа на отзывы.
     *
     * @covers ::skipGoodsFeedbacksReaction
     */
    public function testSkipGoodsFeedbacksReaction()
    {
        self::markTestIncomplete(
            'Test of "skipGoodsFeedbacksReaction" method has not been implemented yet.'
        );
    }

    /**
     * Test case for transferOrdersFromShipment
     *
     * Перенос заказов в следующую отгрузку.
     *
     * @covers ::transferOrdersFromShipment
     */
    public function testTransferOrdersFromShipment()
    {
        self::markTestIncomplete(
            'Test of "transferOrdersFromShipment" method has not been implemented yet.'
        );
    }

    /**
     * Test case for updateBusinessPrices
     *
     * Установка цен на товары во всех магазинах.
     *
     * @covers ::updateBusinessPrices
     */
    public function testUpdateBusinessPrices()
    {
        self::markTestIncomplete(
            'Test of "updateBusinessPrices" method has not been implemented yet.'
        );
    }

    /**
     * Test case for updateCampaignOffers
     *
     * Изменение условий продажи товаров в магазине.
     *
     * @covers ::updateCampaignOffers
     */
    public function testUpdateCampaignOffers()
    {
        self::markTestIncomplete(
            'Test of "updateCampaignOffers" method has not been implemented yet.'
        );
    }

    /**
     * Test case for updateGoodsFeedbackComment
     *
     * Добавление нового или изменение созданного комментария.
     *
     * @covers ::updateGoodsFeedbackComment
     */
    public function testUpdateGoodsFeedbackComment()
    {
        self::markTestIncomplete(
            'Test of "updateGoodsFeedbackComment" method has not been implemented yet.'
        );
    }

    /**
     * Test case for updateOfferContent
     *
     * Редактирование категорийных характеристик товара.
     *
     * @covers ::updateOfferContent
     */
    public function testUpdateOfferContent()
    {
        self::markTestIncomplete(
            'Test of "updateOfferContent" method has not been implemented yet.'
        );
    }

    /**
     * Test case for updateOfferMappingEntries
     *
     * Добавление и редактирование товаров в каталоге.
     *
     * @covers ::updateOfferMappingEntries
     */
    public function testUpdateOfferMappingEntries()
    {
        self::markTestIncomplete(
            'Test of "updateOfferMappingEntries" method has not been implemented yet.'
        );
    }

    /**
     * Test case for updateOfferMappings
     *
     * Добавление товаров в каталог и изменение информации о них.
     *
     * @covers ::updateOfferMappings
     */
    public function testUpdateOfferMappings()
    {
        self::markTestIncomplete(
            'Test of "updateOfferMappings" method has not been implemented yet.'
        );
    }

    /**
     * Test case for updateOrderItems
     *
     * Удаление товара из заказа или уменьшение числа единиц.
     *
     * @covers ::updateOrderItems
     */
    public function testUpdateOrderItems()
    {
        self::markTestIncomplete(
            'Test of "updateOrderItems" method has not been implemented yet.'
        );
    }

    /**
     * Test case for updateOrderStatus
     *
     * Изменение статуса одного заказа.
     *
     * @covers ::updateOrderStatus
     */
    public function testUpdateOrderStatus()
    {
        self::markTestIncomplete(
            'Test of "updateOrderStatus" method has not been implemented yet.'
        );
    }

    /**
     * Test case for updateOrderStatuses
     *
     * Изменение статусов нескольких заказов.
     *
     * @covers ::updateOrderStatuses
     */
    public function testUpdateOrderStatuses()
    {
        self::markTestIncomplete(
            'Test of "updateOrderStatuses" method has not been implemented yet.'
        );
    }

    /**
     * Test case for updatePrices
     *
     * Установка цен на товары в конкретном магазине.
     *
     * @covers ::updatePrices
     */
    public function testUpdatePrices()
    {
        self::markTestIncomplete(
            'Test of "updatePrices" method has not been implemented yet.'
        );
    }

    /**
     * Test case for updatePromoOffers
     *
     * Добавление товаров в акцию или изменение их цен.
     *
     * @covers ::updatePromoOffers
     */
    public function testUpdatePromoOffers()
    {
        self::markTestIncomplete(
            'Test of "updatePromoOffers" method has not been implemented yet.'
        );
    }

    /**
     * Test case for updateStocks
     *
     * Передача информации об остатках.
     *
     * @covers ::updateStocks
     */
    public function testUpdateStocks()
    {
        self::markTestIncomplete(
            'Test of "updateStocks" method has not been implemented yet.'
        );
    }
}
