/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { autoinject } from 'aurelia-framework';
import { HttpClient } from 'aurelia-http-client';
import { Api } from './Api';
import { AuthStorage } from './AuthStorage';
import {
  PageFormatType,
  GetOrderLabelsDataResponse,
} from './models';

/**
 * generateOrderLabel - parameters interface
 */
export interface IGenerateOrderLabelParams {
  campaignId: number;
  orderId: number;
  shipmentId: number;
  boxId: number;
  format?: PageFormatType;
}

/**
 * generateOrderLabels - parameters interface
 */
export interface IGenerateOrderLabelsParams {
  campaignId: number;
  orderId: number;
  format?: PageFormatType;
}

/**
 * getOrderLabelsData - parameters interface
 */
export interface IGetOrderLabelsDataParams {
  campaignId: number;
  orderId: number;
}

/**
 * OrderLabelsApi - API class
 */
@autoinject()
export class OrderLabelsApi extends Api {

  /**
   * Creates a new OrderLabelsApi class.
   *
   * @param httpClient The Aurelia HTTP client to be injected.
   * @param authStorage A storage for authentication data.
   */
  constructor(httpClient: HttpClient, authStorage: AuthStorage) {
    super(httpClient, authStorage);
  }

  /**
   * Готовый ярлык‑наклейка для коробки в заказе
   * Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
   * @param params.campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
   * @param params.orderId Идентификатор заказа.
   * @param params.shipmentId Идентификатор грузоместа.
   * @param params.boxId Идентификатор коробки.
   * @param params.format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.
   */
  async generateOrderLabel(params: IGenerateOrderLabelParams): Promise<File> {
    // Verify required parameters are set
    this.ensureParamIsSet('generateOrderLabel', params, 'campaignId');
    this.ensureParamIsSet('generateOrderLabel', params, 'orderId');
    this.ensureParamIsSet('generateOrderLabel', params, 'shipmentId');
    this.ensureParamIsSet('generateOrderLabel', params, 'boxId');

    // Create URL to call
    const url = `${this.basePath}/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label`
      .replace(`{${'campaignId'}}`, encodeURIComponent(`${params['campaignId']}`))
      .replace(`{${'orderId'}}`, encodeURIComponent(`${params['orderId']}`))
      .replace(`{${'shipmentId'}}`, encodeURIComponent(`${params['shipmentId']}`))
      .replace(`{${'boxId'}}`, encodeURIComponent(`${params['boxId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'format': params['format'],
      })

      // Authentication 'OAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Готовые ярлыки‑наклейки на все коробки в одном заказе
   * Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
   * @param params.campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
   * @param params.orderId Идентификатор заказа.
   * @param params.format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.
   */
  async generateOrderLabels(params: IGenerateOrderLabelsParams): Promise<File> {
    // Verify required parameters are set
    this.ensureParamIsSet('generateOrderLabels', params, 'campaignId');
    this.ensureParamIsSet('generateOrderLabels', params, 'orderId');

    // Create URL to call
    const url = `${this.basePath}/campaigns/{campaignId}/orders/{orderId}/delivery/labels`
      .replace(`{${'campaignId'}}`, encodeURIComponent(`${params['campaignId']}`))
      .replace(`{${'orderId'}}`, encodeURIComponent(`${params['orderId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'format': params['format'],
      })

      // Authentication 'OAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Данные для самостоятельного изготовления ярлыков
   * Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
   * @param params.campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
   * @param params.orderId Идентификатор заказа.
   */
  async getOrderLabelsData(params: IGetOrderLabelsDataParams): Promise<GetOrderLabelsDataResponse> {
    // Verify required parameters are set
    this.ensureParamIsSet('getOrderLabelsData', params, 'campaignId');
    this.ensureParamIsSet('getOrderLabelsData', params, 'orderId');

    // Create URL to call
    const url = `${this.basePath}/campaigns/{campaignId}/orders/{orderId}/delivery/labels/data`
      .replace(`{${'campaignId'}}`, encodeURIComponent(`${params['campaignId']}`))
      .replace(`{${'orderId'}}`, encodeURIComponent(`${params['orderId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()

      // Authentication 'OAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

}

