/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ympa_go_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetCampaignLoginsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCampaignLoginsResponse{}

// GetCampaignLoginsResponse Ответ на запрос списка логинов, связанных с магазином.
type GetCampaignLoginsResponse struct {
	// Список логинов.
	Logins []string `json:"logins"`
}

type _GetCampaignLoginsResponse GetCampaignLoginsResponse

// NewGetCampaignLoginsResponse instantiates a new GetCampaignLoginsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCampaignLoginsResponse(logins []string) *GetCampaignLoginsResponse {
	this := GetCampaignLoginsResponse{}
	this.Logins = logins
	return &this
}

// NewGetCampaignLoginsResponseWithDefaults instantiates a new GetCampaignLoginsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCampaignLoginsResponseWithDefaults() *GetCampaignLoginsResponse {
	this := GetCampaignLoginsResponse{}
	return &this
}

// GetLogins returns the Logins field value
func (o *GetCampaignLoginsResponse) GetLogins() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Logins
}

// GetLoginsOk returns a tuple with the Logins field value
// and a boolean to check if the value has been set.
func (o *GetCampaignLoginsResponse) GetLoginsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Logins, true
}

// SetLogins sets field value
func (o *GetCampaignLoginsResponse) SetLogins(v []string) {
	o.Logins = v
}

func (o GetCampaignLoginsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCampaignLoginsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["logins"] = o.Logins
	return toSerialize, nil
}

func (o *GetCampaignLoginsResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"logins",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetCampaignLoginsResponse := _GetCampaignLoginsResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetCampaignLoginsResponse)

	if err != nil {
		return err
	}

	*o = GetCampaignLoginsResponse(varGetCampaignLoginsResponse)

	return err
}

type NullableGetCampaignLoginsResponse struct {
	value *GetCampaignLoginsResponse
	isSet bool
}

func (v NullableGetCampaignLoginsResponse) Get() *GetCampaignLoginsResponse {
	return v.value
}

func (v *NullableGetCampaignLoginsResponse) Set(val *GetCampaignLoginsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCampaignLoginsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCampaignLoginsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCampaignLoginsResponse(val *GetCampaignLoginsResponse) *NullableGetCampaignLoginsResponse {
	return &NullableGetCampaignLoginsResponse{value: val, isSet: true}
}

func (v NullableGetCampaignLoginsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCampaignLoginsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


