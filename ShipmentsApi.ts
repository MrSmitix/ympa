/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { autoinject } from 'aurelia-framework';
import { HttpClient } from 'aurelia-http-client';
import { Api } from './Api';
import { AuthStorage } from './AuthStorage';
import {
  GetShipmentResponse,
  ShipmentPalletLabelPageFormatType,
  GetShipmentOrdersInfoResponse,
  SearchShipmentsRequest,
  TransferOrdersFromShipmentRequest,
  SetShipmentPalletsCountRequest,
  SearchShipmentsResponse,
  ConfirmShipmentRequest,
  EmptyApiResponse,
} from './models';

/**
 * confirmShipment - parameters interface
 */
export interface IConfirmShipmentParams {
  campaignId: number;
  shipmentId: number;
  confirmShipmentRequest?: ConfirmShipmentRequest;
}

/**
 * downloadShipmentAct - parameters interface
 */
export interface IDownloadShipmentActParams {
  campaignId: number;
  shipmentId: number;
}

/**
 * downloadShipmentDiscrepancyAct - parameters interface
 */
export interface IDownloadShipmentDiscrepancyActParams {
  campaignId: number;
  shipmentId: number;
}

/**
 * downloadShipmentInboundAct - parameters interface
 */
export interface IDownloadShipmentInboundActParams {
  campaignId: number;
  shipmentId: number;
}

/**
 * downloadShipmentPalletLabels - parameters interface
 */
export interface IDownloadShipmentPalletLabelsParams {
  campaignId: number;
  shipmentId: number;
  format?: ShipmentPalletLabelPageFormatType;
}

/**
 * downloadShipmentReceptionTransferAct - parameters interface
 */
export interface IDownloadShipmentReceptionTransferActParams {
  campaignId: number;
  warehouseId?: number;
}

/**
 * downloadShipmentTransportationWaybill - parameters interface
 */
export interface IDownloadShipmentTransportationWaybillParams {
  campaignId: number;
  shipmentId: number;
}

/**
 * getShipment - parameters interface
 */
export interface IGetShipmentParams {
  campaignId: number;
  shipmentId: number;
  cancelledOrders?: boolean;
}

/**
 * getShipmentOrdersInfo - parameters interface
 */
export interface IGetShipmentOrdersInfoParams {
  campaignId: number;
  shipmentId: number;
}

/**
 * searchShipments - parameters interface
 */
export interface ISearchShipmentsParams {
  campaignId: number;
  searchShipmentsRequest: SearchShipmentsRequest;
  pageToken?: string;
  limit?: number;
}

/**
 * setShipmentPalletsCount - parameters interface
 */
export interface ISetShipmentPalletsCountParams {
  campaignId: number;
  shipmentId: number;
  setShipmentPalletsCountRequest: SetShipmentPalletsCountRequest;
}

/**
 * transferOrdersFromShipment - parameters interface
 */
export interface ITransferOrdersFromShipmentParams {
  campaignId: number;
  shipmentId: number;
  transferOrdersFromShipmentRequest: TransferOrdersFromShipmentRequest;
}

/**
 * ShipmentsApi - API class
 */
@autoinject()
export class ShipmentsApi extends Api {

  /**
   * Creates a new ShipmentsApi class.
   *
   * @param httpClient The Aurelia HTTP client to be injected.
   * @param authStorage A storage for authentication data.
   */
  constructor(httpClient: HttpClient, authStorage: AuthStorage) {
    super(httpClient, authStorage);
  }

  /**
   * Подтверждение отгрузки
   * Подтверждает отгрузку товаров в сортировочный центр или пункт приема заказов. |**⚙️ Лимит:** 100 запросов в час| |-| 
   * @param params.campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
   * @param params.shipmentId Идентификатор отгрузки.
   * @param params.confirmShipmentRequest 
   */
  async confirmShipment(params: IConfirmShipmentParams): Promise<EmptyApiResponse> {
    // Verify required parameters are set
    this.ensureParamIsSet('confirmShipment', params, 'campaignId');
    this.ensureParamIsSet('confirmShipment', params, 'shipmentId');

    // Create URL to call
    const url = `${this.basePath}/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/confirm`
      .replace(`{${'campaignId'}}`, encodeURIComponent(`${params['campaignId']}`))
      .replace(`{${'shipmentId'}}`, encodeURIComponent(`${params['shipmentId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPost()
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['confirmShipmentRequest'] || {}))

      // Authentication 'OAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Получение акта приема-передачи
   * {% note warning \&quot;Экспресс‑доставка\&quot; %}  Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам Яндекс Go, подготавливать акт приема‑передачи не нужно.  {% endnote %}  Запрос формирует акт приема-передачи заказов, входящих в отгрузку, и возвращает акт в формате PDF. В акте содержатся собранные и готовые к отправке заказы.  При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:  {% cut \&quot;Данные, из которых Маркет формирует акт\&quot; %}  | **Данные в акте**                                         | **Описание**                                                                                                                                                                                                                                                         | | --------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Дата                                                      | Дата запроса.                                                                                                                                                                                                                                                        | | Отправитель                                               | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         | | Исполнитель                                               | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                | | № отправления в системе заказчика                         | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              | | № отправления в системе исполнителя (субподрядчика)       | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             | | Объявленная ценность                                      | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       | | Вес                                                       | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). | | Количество мест                                           | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |  {% endcut %}  Остальные поля нужно заполнить самостоятельно в распечатанном акте. |**⚙️ Лимит:** 100 запросов в час| |-| 
   * @param params.campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
   * @param params.shipmentId Идентификатор отгрузки.
   */
  async downloadShipmentAct(params: IDownloadShipmentActParams): Promise<File> {
    // Verify required parameters are set
    this.ensureParamIsSet('downloadShipmentAct', params, 'campaignId');
    this.ensureParamIsSet('downloadShipmentAct', params, 'shipmentId');

    // Create URL to call
    const url = `${this.basePath}/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/act`
      .replace(`{${'campaignId'}}`, encodeURIComponent(`${params['campaignId']}`))
      .replace(`{${'shipmentId'}}`, encodeURIComponent(`${params['shipmentId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()

      // Authentication 'OAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Получение акта расхождений
   * Возвращает акт расхождений для заданной отгрузки. |**⚙️ Лимит:** 200 запросов в час| |-| 
   * @param params.campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
   * @param params.shipmentId Идентификатор отгрузки.
   */
  async downloadShipmentDiscrepancyAct(params: IDownloadShipmentDiscrepancyActParams): Promise<File> {
    // Verify required parameters are set
    this.ensureParamIsSet('downloadShipmentDiscrepancyAct', params, 'campaignId');
    this.ensureParamIsSet('downloadShipmentDiscrepancyAct', params, 'shipmentId');

    // Create URL to call
    const url = `${this.basePath}/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/discrepancy-act`
      .replace(`{${'campaignId'}}`, encodeURIComponent(`${params['campaignId']}`))
      .replace(`{${'shipmentId'}}`, encodeURIComponent(`${params['shipmentId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()

      // Authentication 'OAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Получение фактического акта приема-передачи
   * Возвращает фактический акт приема-передачи для заданной отгрузки.  Такой акт становится доступен спустя несколько часов после завершения отгрузки. Он может понадобиться, если после отгрузки обнаружатся расхождения.  |**⚙️ Лимит:** 200 запросов в час| |-| 
   * @param params.campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
   * @param params.shipmentId Идентификатор отгрузки.
   */
  async downloadShipmentInboundAct(params: IDownloadShipmentInboundActParams): Promise<File> {
    // Verify required parameters are set
    this.ensureParamIsSet('downloadShipmentInboundAct', params, 'campaignId');
    this.ensureParamIsSet('downloadShipmentInboundAct', params, 'shipmentId');

    // Create URL to call
    const url = `${this.basePath}/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/inbound-act`
      .replace(`{${'campaignId'}}`, encodeURIComponent(`${params['campaignId']}`))
      .replace(`{${'shipmentId'}}`, encodeURIComponent(`${params['shipmentId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()

      // Authentication 'OAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Ярлыки для доверительной приемки (FBS)
   * PDF-файл с ярлыками на каждый короб или палету в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).  Распечатайте по несколько копий каждого ярлыка: на одну тару нужно наклеить минимум 2 ярлыка с разных сторон.  Количество упаковок в отгрузке задается в запросе [PUT campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets](../../reference/shipments/setShipmentPalletsCount.md). |**⚙️ Лимит:** 200 запросов в час| |-| 
   * @param params.campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
   * @param params.shipmentId Идентификатор отгрузки.
   * @param params.format Формат страниц PDF-файла с ярлыками:  * &#x60;A4&#x60; — по 16 ярлыков на странице. * &#x60;A8&#x60; — по одному ярлыку на странице. 
   */
  async downloadShipmentPalletLabels(params: IDownloadShipmentPalletLabelsParams): Promise<File> {
    // Verify required parameters are set
    this.ensureParamIsSet('downloadShipmentPalletLabels', params, 'campaignId');
    this.ensureParamIsSet('downloadShipmentPalletLabels', params, 'shipmentId');

    // Create URL to call
    const url = `${this.basePath}/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels`
      .replace(`{${'campaignId'}}`, encodeURIComponent(`${params['campaignId']}`))
      .replace(`{${'shipmentId'}}`, encodeURIComponent(`${params['shipmentId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'format': params['format'],
      })

      // Authentication 'OAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Подтверждение ближайшей отгрузки и получение акта приема-передачи для нее
   * Запрос подтверждает ближайшую отгрузку и возвращает акт приема-передачи в формате PDF.  {% note warning \&quot;Экспресс‑доставка\&quot; %}  Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам [Яндекс Go](https://go.yandex/), подготавливать акт приема‑передачи не нужно.  {% endnote %}  В акт входят собранные и готовые к отправке заказы, которые отгружаются в сортировочный центр или пункт приема или курьерам Маркета.  При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:  {% cut \&quot;Данные, из которых Маркет формирует акт\&quot; %}  | **Данные в акте**                                   | **Описание**                                                                                                                                                                                                                                                         | | --------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Отправитель                                         | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         | | Исполнитель                                         | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                | | № отправления в системе заказчика                   | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              | | № отправления в системе исполнителя (субподрядчика) | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             | | Объявленная ценность                                | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       | | Стоимость всех товаров в заказе                     | Стоимость всех заказанных товаров.                                                                                                                                                                                                                                   | | Вес                                                 | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). | | Количество мест                                     | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |  {% endcut %}  Остальные поля нужно заполнить самостоятельно в распечатанном акте. |**⚙️ Лимит:** 100 запросов в час| |-| 
   * @param params.campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
   * @param params.warehouseId Идентификатор склада.
   */
  async downloadShipmentReceptionTransferAct(params: IDownloadShipmentReceptionTransferActParams): Promise<File> {
    // Verify required parameters are set
    this.ensureParamIsSet('downloadShipmentReceptionTransferAct', params, 'campaignId');

    // Create URL to call
    const url = `${this.basePath}/campaigns/{campaignId}/shipments/reception-transfer-act`
      .replace(`{${'campaignId'}}`, encodeURIComponent(`${params['campaignId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'warehouse_id': params['warehouseId'],
      })

      // Authentication 'OAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Получение транспортной накладной
   * Возвращает транспортную накладную для заданной отгрузки.  Транспортная накладная понадобится, если вы отгружаете товары непосредственно со своего склада. [Подробно об этом способе отгрузки](https://yandex.ru/support/marketplace/orders/fbs/settings/shipment.html#at-your-warehouse)  |**⚙️ Лимит:** 200 запросов в час| |-| 
   * @param params.campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
   * @param params.shipmentId Идентификатор отгрузки.
   */
  async downloadShipmentTransportationWaybill(params: IDownloadShipmentTransportationWaybillParams): Promise<File> {
    // Verify required parameters are set
    this.ensureParamIsSet('downloadShipmentTransportationWaybill', params, 'campaignId');
    this.ensureParamIsSet('downloadShipmentTransportationWaybill', params, 'shipmentId');

    // Create URL to call
    const url = `${this.basePath}/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/transportation-waybill`
      .replace(`{${'campaignId'}}`, encodeURIComponent(`${params['campaignId']}`))
      .replace(`{${'shipmentId'}}`, encodeURIComponent(`${params['shipmentId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()

      // Authentication 'OAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Получение информации об одной отгрузке
   * Возвращает информацию об отгрузке по ее идентификатору. |**⚙️ Лимит:** 100 запросов в час| |-| 
   * @param params.campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
   * @param params.shipmentId Идентификатор отгрузки.
   * @param params.cancelledOrders Возвращать ли отмененные заказы.  Значение по умолчанию — &#x60;true&#x60;. Если возвращать отмененные заказы не нужно, передайте значение &#x60;false&#x60;. 
   */
  async getShipment(params: IGetShipmentParams): Promise<GetShipmentResponse> {
    // Verify required parameters are set
    this.ensureParamIsSet('getShipment', params, 'campaignId');
    this.ensureParamIsSet('getShipment', params, 'shipmentId');

    // Create URL to call
    const url = `${this.basePath}/campaigns/{campaignId}/first-mile/shipments/{shipmentId}`
      .replace(`{${'campaignId'}}`, encodeURIComponent(`${params['campaignId']}`))
      .replace(`{${'shipmentId'}}`, encodeURIComponent(`${params['shipmentId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'cancelledOrders': params['cancelledOrders'],
      })

      // Authentication 'OAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Получение информации о возможности печати ярлыков (FBS)
   * Возвращает информацию о возможности печати ярлыков-наклеек для заказов в отгрузке. |**⚙️ Лимит:** 100 запросов в час| |-| 
   * @param params.campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
   * @param params.shipmentId Идентификатор отгрузки.
   */
  async getShipmentOrdersInfo(params: IGetShipmentOrdersInfoParams): Promise<GetShipmentOrdersInfoResponse> {
    // Verify required parameters are set
    this.ensureParamIsSet('getShipmentOrdersInfo', params, 'campaignId');
    this.ensureParamIsSet('getShipmentOrdersInfo', params, 'shipmentId');

    // Create URL to call
    const url = `${this.basePath}/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/info`
      .replace(`{${'campaignId'}}`, encodeURIComponent(`${params['campaignId']}`))
      .replace(`{${'shipmentId'}}`, encodeURIComponent(`${params['shipmentId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()

      // Authentication 'OAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Получение информации о нескольких отгрузках
   * Возвращает информацию об отгрузках по заданным параметрам:  * дате; * статусу; * идентификаторам заказов.  Результаты возвращаются постранично. |**⚙️ Лимит:** 100 запросов в час| |-| 
   * @param params.campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
   * @param params.searchShipmentsRequest 
   * @param params.pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. 
   * @param params.limit Количество значений на одной странице. 
   */
  async searchShipments(params: ISearchShipmentsParams): Promise<SearchShipmentsResponse> {
    // Verify required parameters are set
    this.ensureParamIsSet('searchShipments', params, 'campaignId');
    this.ensureParamIsSet('searchShipments', params, 'searchShipmentsRequest');

    // Create URL to call
    const url = `${this.basePath}/campaigns/{campaignId}/first-mile/shipments`
      .replace(`{${'campaignId'}}`, encodeURIComponent(`${params['campaignId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPut()
      // Set query parameters
      .withParams({ 
        'page_token': params['pageToken'],
        'limit': params['limit'],
      })
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['searchShipmentsRequest'] || {}))

      // Authentication 'OAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Передача количества упаковок в отгрузке
   * Передает Маркету количество коробов или палет в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).  Получить PDF-файл с ярлыками для упаковок можно с помощью запроса [GET campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels](../../reference/shipments/downloadShipmentPalletLabels.md). |**⚙️ Лимит:** 200 запросов в час| |-| 
   * @param params.campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
   * @param params.shipmentId Идентификатор отгрузки.
   * @param params.setShipmentPalletsCountRequest 
   */
  async setShipmentPalletsCount(params: ISetShipmentPalletsCountParams): Promise<EmptyApiResponse> {
    // Verify required parameters are set
    this.ensureParamIsSet('setShipmentPalletsCount', params, 'campaignId');
    this.ensureParamIsSet('setShipmentPalletsCount', params, 'shipmentId');
    this.ensureParamIsSet('setShipmentPalletsCount', params, 'setShipmentPalletsCountRequest');

    // Create URL to call
    const url = `${this.basePath}/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets`
      .replace(`{${'campaignId'}}`, encodeURIComponent(`${params['campaignId']}`))
      .replace(`{${'shipmentId'}}`, encodeURIComponent(`${params['shipmentId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPut()
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['setShipmentPalletsCountRequest'] || {}))

      // Authentication 'OAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Перенос заказов в следующую отгрузку
   * Переносит указанные заказы из указанной отгрузки в следующую отгрузку. [Что такое отгрузка?](https://yandex.ru/support/marketplace/orders/fbs/process.html#ship)  Используйте этот запрос, если не успеваете собрать и упаковать заказы вовремя.  {% note warning \&quot;Такие переносы снижают индекс качества магазина\&quot; %}  Этот запрос предназначен для исключительных случаев. Если вы будете переносить заказы слишком часто, магазин столкнется с ограничениями. [Что за ограничения?](https://yandex.ru/support/marketplace/quality/score/fbs.html)  {% endnote %}  Переносить заказы можно, если до формирования отгрузки осталось больше получаса.  Перенос происходит не мгновенно, а занимает несколько минут.  |**⚙️ Лимит:** 200 запросов в час| |-| 
   * @param params.campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
   * @param params.shipmentId Идентификатор отгрузки.
   * @param params.transferOrdersFromShipmentRequest 
   */
  async transferOrdersFromShipment(params: ITransferOrdersFromShipmentParams): Promise<EmptyApiResponse> {
    // Verify required parameters are set
    this.ensureParamIsSet('transferOrdersFromShipment', params, 'campaignId');
    this.ensureParamIsSet('transferOrdersFromShipment', params, 'shipmentId');
    this.ensureParamIsSet('transferOrdersFromShipment', params, 'transferOrdersFromShipmentRequest');

    // Create URL to call
    const url = `${this.basePath}/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/transfer`
      .replace(`{${'campaignId'}}`, encodeURIComponent(`${params['campaignId']}`))
      .replace(`{${'shipmentId'}}`, encodeURIComponent(`${params['shipmentId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPost()
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['transferOrdersFromShipmentRequest'] || {}))

      // Authentication 'OAuth' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

}

