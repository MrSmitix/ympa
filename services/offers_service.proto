/*
  Партнерский API Маркета

  API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

  The version of the OpenAPI document: LATEST

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ympa_protobuf_schema.services.offersservice;

import "google/protobuf/empty.proto";
import public "models/api_client_data_error_response.proto";
import public "models/api_forbidden_error_response.proto";
import public "models/api_limit_error_response.proto";
import public "models/api_locked_error_response.proto";
import public "models/api_not_found_error_response.proto";
import public "models/api_server_error_response.proto";
import public "models/api_unauthorized_error_response.proto";
import public "models/currency_type.proto";
import public "models/delete_campaign_offers_request.proto";
import public "models/delete_campaign_offers_response.proto";
import public "models/empty_api_response.proto";
import public "models/get_all_offers_response.proto";
import public "models/get_campaign_offers_request.proto";
import public "models/get_campaign_offers_response.proto";
import public "models/get_offer_recommendations_request.proto";
import public "models/get_offer_recommendations_response.proto";
import public "models/get_offers_response.proto";
import public "models/update_campaign_offers_request.proto";

service OffersService {
  rpc DeleteCampaignOffers (DeleteCampaignOffersRequest) returns (DeleteCampaignOffersResponse);

  rpc GetAllOffers (GetAllOffersRequest) returns (GetAllOffersResponse);

  rpc GetCampaignOffers (GetCampaignOffersRequest) returns (GetCampaignOffersResponse);

  rpc GetOfferRecommendations (GetOfferRecommendationsRequest) returns (GetOfferRecommendationsResponse);

  rpc GetOffers (GetOffersRequest) returns (GetOffersResponse);

  rpc UpdateCampaignOffers (UpdateCampaignOffersRequest) returns (EmptyApiResponse);

}

message DeleteCampaignOffersRequest {
  // Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  int64 campaignId = 1;
  DeleteCampaignOffersRequest deleteCampaignOffersRequest = 2;

}

message GetAllOffersRequest {
  // Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  int64 campaignId = 1;
  // Идентификатор прайс-листа.
  int64 feedId = 2;
  // Номер сегмента с результатами.  Значение по умолчанию: `0`.  {% note info %}  Номера сегментов запрашиваются последовательно, пока не будет получен сегмент с пустым ответом. Пустой ответ означает, что все предложения магазина получены.  {% endnote %}  {% note alert %}  Нумерация начинается с 0. Чтобы запросить первую страницу, необходимо указать `chunk=0` и т. д.  {% endnote %} 
  int32 chunk = 3;

}

message GetCampaignOffersRequest {
  // Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  int64 campaignId = 1;
  GetCampaignOffersRequest getCampaignOffersRequest = 2;
  // Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
  string pageToken = 3;
  // Количество значений на одной странице. 
  int32 limit = 4;

}

message GetOfferRecommendationsRequest {
  // Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  int64 businessId = 1;
  GetOfferRecommendationsRequest getOfferRecommendationsRequest = 2;
  // Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
  string pageToken = 3;
  // Количество значений на одной странице. 
  int32 limit = 4;

}

message GetOffersRequest {
  // Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  int64 campaignId = 1;
  // Поисковый запрос.  Поддерживается язык запросов.  Значение по умолчанию: все предложения магазина, размещенные на Маркете. 
  string query = 2;
  // Идентификатор прайс-листа.
  int64 feedId = 3;
  // Идентификатор категории предложения, указанный магазином в прайс-листе.  Параметр выводится только для предложений, у которых указана категория в прайс-листе.  Параметр доступен начиная с версии 2.0 партнерского API. 
  string shopCategoryId = 4;
  // Валюта, в которой указана цена предложения.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна. 
  CurrencyType currency = 5;
  // Фильтр по признаку соотнесения предложения и карточки модели.  Возможные значения:  * `0 / FALSE / NO` — поиск выполняется среди предложений, не соотнесенных ни с какой карточкой модели.  * `1 / TRUE / YES` — поиск выполняется среди предложений, соотнесенных с карточками моделей). 
  bool matched = 6;
  // Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
  int32 page = 7;
  // Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
  int32 pageSize = 8;

}

message UpdateCampaignOffersRequest {
  // Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  int64 campaignId = 1;
  UpdateCampaignOffersRequest updateCampaignOffersRequest = 2;

}

