/*
  Партнерский API Маркета

  API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

  The version of the OpenAPI document: LATEST

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ympa_protobuf_schema.services.shipmentsservice;

import "google/protobuf/empty.proto";
import public "models/api_client_data_error_response.proto";
import public "models/api_forbidden_error_response.proto";
import public "models/api_limit_error_response.proto";
import public "models/api_not_found_error_response.proto";
import public "models/api_server_error_response.proto";
import public "models/api_unauthorized_error_response.proto";
import public "models/confirm_shipment_request.proto";
import public "models/empty_api_response.proto";
import public "models/get_shipment_orders_info_response.proto";
import public "models/get_shipment_response.proto";
import public "models/search_shipments_request.proto";
import public "models/search_shipments_response.proto";
import public "models/set_shipment_pallets_count_request.proto";
import public "models/shipment_pallet_label_page_format_type.proto";
import public "models/transfer_orders_from_shipment_request.proto";

service ShipmentsService {
  rpc ConfirmShipment (ConfirmShipmentRequest) returns (EmptyApiResponse);

  rpc DownloadShipmentAct (DownloadShipmentActRequest) returns (DownloadShipmentActResponse);

  rpc DownloadShipmentDiscrepancyAct (DownloadShipmentDiscrepancyActRequest) returns (DownloadShipmentDiscrepancyActResponse);

  rpc DownloadShipmentInboundAct (DownloadShipmentInboundActRequest) returns (DownloadShipmentInboundActResponse);

  rpc DownloadShipmentPalletLabels (DownloadShipmentPalletLabelsRequest) returns (DownloadShipmentPalletLabelsResponse);

  rpc DownloadShipmentReceptionTransferAct (DownloadShipmentReceptionTransferActRequest) returns (DownloadShipmentReceptionTransferActResponse);

  rpc DownloadShipmentTransportationWaybill (DownloadShipmentTransportationWaybillRequest) returns (DownloadShipmentTransportationWaybillResponse);

  rpc GetShipment (GetShipmentRequest) returns (GetShipmentResponse);

  rpc GetShipmentOrdersInfo (GetShipmentOrdersInfoRequest) returns (GetShipmentOrdersInfoResponse);

  rpc SearchShipments (SearchShipmentsRequest) returns (SearchShipmentsResponse);

  rpc SetShipmentPalletsCount (SetShipmentPalletsCountRequest) returns (EmptyApiResponse);

  rpc TransferOrdersFromShipment (TransferOrdersFromShipmentRequest) returns (EmptyApiResponse);

}

message ConfirmShipmentRequest {
  // Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  int64 campaignId = 1;
  // Идентификатор отгрузки.
  int64 shipmentId = 2;
  ConfirmShipmentRequest confirmShipmentRequest = 3;

}

message DownloadShipmentActRequest {
  // Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  int64 campaignId = 1;
  // Идентификатор отгрузки.
  int64 shipmentId = 2;

}

message DownloadShipmentActResponse {
  string data = 1;
}

message DownloadShipmentDiscrepancyActRequest {
  // Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  int64 campaignId = 1;
  // Идентификатор отгрузки.
  int64 shipmentId = 2;

}

message DownloadShipmentDiscrepancyActResponse {
  string data = 1;
}

message DownloadShipmentInboundActRequest {
  // Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  int64 campaignId = 1;
  // Идентификатор отгрузки.
  int64 shipmentId = 2;

}

message DownloadShipmentInboundActResponse {
  string data = 1;
}

message DownloadShipmentPalletLabelsRequest {
  // Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  int64 campaignId = 1;
  // Идентификатор отгрузки.
  int64 shipmentId = 2;
  // Формат страниц PDF-файла с ярлыками:  * `A4` — по 16 ярлыков на странице. * `A8` — по одному ярлыку на странице. 
  ShipmentPalletLabelPageFormatType format = 3;

}

message DownloadShipmentPalletLabelsResponse {
  string data = 1;
}

message DownloadShipmentReceptionTransferActRequest {
  // Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  int64 campaignId = 1;
  // Идентификатор склада.
  int32 warehouseId = 2;

}

message DownloadShipmentReceptionTransferActResponse {
  string data = 1;
}

message DownloadShipmentTransportationWaybillRequest {
  // Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  int64 campaignId = 1;
  // Идентификатор отгрузки.
  int64 shipmentId = 2;

}

message DownloadShipmentTransportationWaybillResponse {
  string data = 1;
}

message GetShipmentRequest {
  // Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  int64 campaignId = 1;
  // Идентификатор отгрузки.
  int64 shipmentId = 2;
  // Возвращать ли отмененные заказы.  Значение по умолчанию — `true`. Если возвращать отмененные заказы не нужно, передайте значение `false`. 
  bool cancelledOrders = 3;

}

message GetShipmentOrdersInfoRequest {
  // Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  int64 campaignId = 1;
  // Идентификатор отгрузки.
  int64 shipmentId = 2;

}

message SearchShipmentsRequest {
  // Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  int64 campaignId = 1;
  SearchShipmentsRequest searchShipmentsRequest = 2;
  // Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
  string pageToken = 3;
  // Количество значений на одной странице. 
  int32 limit = 4;

}

message SetShipmentPalletsCountRequest {
  // Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  int64 campaignId = 1;
  // Идентификатор отгрузки.
  int64 shipmentId = 2;
  SetShipmentPalletsCountRequest setShipmentPalletsCountRequest = 3;

}

message TransferOrdersFromShipmentRequest {
  // Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
  int64 campaignId = 1;
  // Идентификатор отгрузки.
  int64 shipmentId = 2;
  TransferOrdersFromShipmentRequest transferOrdersFromShipmentRequest = 3;

}

