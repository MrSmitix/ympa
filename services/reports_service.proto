/*
  Партнерский API Маркета

  API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

  The version of the OpenAPI document: LATEST

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package ympa_protobuf_schema.services.reportsservice;

import "google/protobuf/empty.proto";
import public "models/api_client_data_error_response.proto";
import public "models/api_forbidden_error_response.proto";
import public "models/api_limit_error_response.proto";
import public "models/api_not_found_error_response.proto";
import public "models/api_server_error_response.proto";
import public "models/api_unauthorized_error_response.proto";
import public "models/generate_boost_consolidated_request.proto";
import public "models/generate_competitors_position_report_request.proto";
import public "models/generate_goods_feedback_request.proto";
import public "models/generate_goods_movement_report_request.proto";
import public "models/generate_goods_realization_report_request.proto";
import public "models/generate_goods_turnover_request.proto";
import public "models/generate_mass_order_labels_request.proto";
import public "models/generate_prices_report_request.proto";
import public "models/generate_report_response.proto";
import public "models/generate_shelfs_statistics_request.proto";
import public "models/generate_shipment_list_document_report_request.proto";
import public "models/generate_shows_sales_report_request.proto";
import public "models/generate_stocks_on_warehouses_report_request.proto";
import public "models/generate_united_marketplace_services_report_request.proto";
import public "models/generate_united_netting_report_request.proto";
import public "models/generate_united_orders_request.proto";
import public "models/get_report_info_response.proto";
import public "models/page_format_type.proto";
import public "models/report_format_type.proto";

service ReportsService {
  rpc GenerateBoostConsolidatedReport (GenerateBoostConsolidatedReportRequest) returns (GenerateReportResponse);

  rpc GenerateCompetitorsPositionReport (GenerateCompetitorsPositionReportRequest) returns (GenerateReportResponse);

  rpc GenerateGoodsFeedbackReport (GenerateGoodsFeedbackReportRequest) returns (GenerateReportResponse);

  rpc GenerateGoodsMovementReport (GenerateGoodsMovementReportRequest) returns (GenerateReportResponse);

  rpc GenerateGoodsRealizationReport (GenerateGoodsRealizationReportRequest) returns (GenerateReportResponse);

  rpc GenerateGoodsTurnoverReport (GenerateGoodsTurnoverReportRequest) returns (GenerateReportResponse);

  rpc GenerateMassOrderLabelsReport (GenerateMassOrderLabelsReportRequest) returns (GenerateReportResponse);

  rpc GeneratePricesReport (GeneratePricesReportRequest) returns (GenerateReportResponse);

  rpc GenerateShelfsStatisticsReport (GenerateShelfsStatisticsReportRequest) returns (GenerateReportResponse);

  rpc GenerateShipmentListDocumentReport (GenerateShipmentListDocumentReportRequest) returns (GenerateReportResponse);

  rpc GenerateShowsSalesReport (GenerateShowsSalesReportRequest) returns (GenerateReportResponse);

  rpc GenerateStocksOnWarehousesReport (GenerateStocksOnWarehousesReportRequest) returns (GenerateReportResponse);

  rpc GenerateUnitedMarketplaceServicesReport (GenerateUnitedMarketplaceServicesReportRequest) returns (GenerateReportResponse);

  rpc GenerateUnitedNettingReport (GenerateUnitedNettingReportRequest) returns (GenerateReportResponse);

  rpc GenerateUnitedOrdersReport (GenerateUnitedOrdersReportRequest) returns (GenerateReportResponse);

  rpc GetReportInfo (GetReportInfoRequest) returns (GetReportInfoResponse);

}

message GenerateBoostConsolidatedReportRequest {
  GenerateBoostConsolidatedRequest generateBoostConsolidatedRequest = 1;
  // Формат отчета.
  ReportFormatType format = 2;

}

message GenerateCompetitorsPositionReportRequest {
  GenerateCompetitorsPositionReportRequest generateCompetitorsPositionReportRequest = 1;
  // Формат отчета.
  ReportFormatType format = 2;

}

message GenerateGoodsFeedbackReportRequest {
  GenerateGoodsFeedbackRequest generateGoodsFeedbackRequest = 1;
  // Формат отчета.
  ReportFormatType format = 2;

}

message GenerateGoodsMovementReportRequest {
  GenerateGoodsMovementReportRequest generateGoodsMovementReportRequest = 1;
  // Формат отчета.
  ReportFormatType format = 2;

}

message GenerateGoodsRealizationReportRequest {
  GenerateGoodsRealizationReportRequest generateGoodsRealizationReportRequest = 1;
  // Формат отчета.
  ReportFormatType format = 2;

}

message GenerateGoodsTurnoverReportRequest {
  GenerateGoodsTurnoverRequest generateGoodsTurnoverRequest = 1;
  // Формат отчета.
  ReportFormatType format = 2;

}

message GenerateMassOrderLabelsReportRequest {
  GenerateMassOrderLabelsRequest generateMassOrderLabelsRequest = 1;
  // Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7.
  PageFormatType format = 2;

}

message GeneratePricesReportRequest {
  GeneratePricesReportRequest generatePricesReportRequest = 1;
  // Формат отчета.
  ReportFormatType format = 2;

}

message GenerateShelfsStatisticsReportRequest {
  GenerateShelfsStatisticsRequest generateShelfsStatisticsRequest = 1;
  // Формат отчета.
  ReportFormatType format = 2;

}

message GenerateShipmentListDocumentReportRequest {
  GenerateShipmentListDocumentReportRequest generateShipmentListDocumentReportRequest = 1;

}

message GenerateShowsSalesReportRequest {
  GenerateShowsSalesReportRequest generateShowsSalesReportRequest = 1;
  // Формат отчета.
  ReportFormatType format = 2;

}

message GenerateStocksOnWarehousesReportRequest {
  GenerateStocksOnWarehousesReportRequest generateStocksOnWarehousesReportRequest = 1;
  // Формат отчета.
  ReportFormatType format = 2;

}

message GenerateUnitedMarketplaceServicesReportRequest {
  GenerateUnitedMarketplaceServicesReportRequest generateUnitedMarketplaceServicesReportRequest = 1;
  // Формат отчета.
  ReportFormatType format = 2;

}

message GenerateUnitedNettingReportRequest {
  GenerateUnitedNettingReportRequest generateUnitedNettingReportRequest = 1;
  // Формат отчета.
  ReportFormatType format = 2;

}

message GenerateUnitedOrdersReportRequest {
  GenerateUnitedOrdersRequest generateUnitedOrdersRequest = 1;
  // Формат отчета.
  ReportFormatType format = 2;

}

message GetReportInfoRequest {
  // Идентификатор отчета, который вы получили после запуска генерации. 
  string reportId = 1;

}

