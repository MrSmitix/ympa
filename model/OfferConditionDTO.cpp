/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OfferConditionDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

OfferConditionDTO::OfferConditionDTO()
{
    m_TypeIsSet = false;
    m_QualityIsSet = false;
    m_Reason = "";
    m_ReasonIsSet = false;
    
}

void OfferConditionDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool OfferConditionDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool OfferConditionDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "OfferConditionDTO" : pathPrefix;

                
    return success;
}

bool OfferConditionDTO::operator==(const OfferConditionDTO& rhs) const
{
    return
    
    
    
    ((!typeIsSet() && !rhs.typeIsSet()) || (typeIsSet() && rhs.typeIsSet() && getType() == rhs.getType())) &&
    
    
    ((!qualityIsSet() && !rhs.qualityIsSet()) || (qualityIsSet() && rhs.qualityIsSet() && getQuality() == rhs.getQuality())) &&
    
    
    ((!reasonIsSet() && !rhs.reasonIsSet()) || (reasonIsSet() && rhs.reasonIsSet() && getReason() == rhs.getReason()))
    
    ;
}

bool OfferConditionDTO::operator!=(const OfferConditionDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const OfferConditionDTO& o)
{
    j = nlohmann::json::object();
    if(o.typeIsSet())
        j["type"] = o.m_Type;
    if(o.qualityIsSet())
        j["quality"] = o.m_Quality;
    if(o.reasonIsSet())
        j["reason"] = o.m_Reason;
    
}

void from_json(const nlohmann::json& j, OfferConditionDTO& o)
{
    if(j.find("type") != j.end())
    {
        j.at("type").get_to(o.m_Type);
        o.m_TypeIsSet = true;
    } 
    if(j.find("quality") != j.end())
    {
        j.at("quality").get_to(o.m_Quality);
        o.m_QualityIsSet = true;
    } 
    if(j.find("reason") != j.end())
    {
        j.at("reason").get_to(o.m_Reason);
        o.m_ReasonIsSet = true;
    } 
    
}

org::openapitools::server::model::OfferConditionType OfferConditionDTO::getType() const
{
    return m_Type;
}
void OfferConditionDTO::setType(org::openapitools::server::model::OfferConditionType const& value)
{
    m_Type = value;
    m_TypeIsSet = true;
}
bool OfferConditionDTO::typeIsSet() const
{
    return m_TypeIsSet;
}
void OfferConditionDTO::unsetType()
{
    m_TypeIsSet = false;
}
org::openapitools::server::model::OfferConditionQualityType OfferConditionDTO::getQuality() const
{
    return m_Quality;
}
void OfferConditionDTO::setQuality(org::openapitools::server::model::OfferConditionQualityType const& value)
{
    m_Quality = value;
    m_QualityIsSet = true;
}
bool OfferConditionDTO::qualityIsSet() const
{
    return m_QualityIsSet;
}
void OfferConditionDTO::unsetQuality()
{
    m_QualityIsSet = false;
}
std::string OfferConditionDTO::getReason() const
{
    return m_Reason;
}
void OfferConditionDTO::setReason(std::string const& value)
{
    m_Reason = value;
    m_ReasonIsSet = true;
}
bool OfferConditionDTO::reasonIsSet() const
{
    return m_ReasonIsSet;
}
void OfferConditionDTO::unsetReason()
{
    m_ReasonIsSet = false;
}


} // namespace org::openapitools::server::model

