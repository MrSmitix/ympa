/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "FeedPublicationDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

FeedPublicationDTO::FeedPublicationDTO()
{
    m_StatusIsSet = false;
    m_FullIsSet = false;
    m_PriceAndStockUpdateIsSet = false;
    
}

void FeedPublicationDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool FeedPublicationDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool FeedPublicationDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "FeedPublicationDTO" : pathPrefix;

                
    return success;
}

bool FeedPublicationDTO::operator==(const FeedPublicationDTO& rhs) const
{
    return
    
    
    
    ((!statusIsSet() && !rhs.statusIsSet()) || (statusIsSet() && rhs.statusIsSet() && getStatus() == rhs.getStatus())) &&
    
    
    ((!fullIsSet() && !rhs.fullIsSet()) || (fullIsSet() && rhs.fullIsSet() && getFull() == rhs.getFull())) &&
    
    
    ((!priceAndStockUpdateIsSet() && !rhs.priceAndStockUpdateIsSet()) || (priceAndStockUpdateIsSet() && rhs.priceAndStockUpdateIsSet() && getPriceAndStockUpdate() == rhs.getPriceAndStockUpdate()))
    
    ;
}

bool FeedPublicationDTO::operator!=(const FeedPublicationDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const FeedPublicationDTO& o)
{
    j = nlohmann::json::object();
    if(o.statusIsSet())
        j["status"] = o.m_Status;
    if(o.fullIsSet())
        j["full"] = o.m_Full;
    if(o.priceAndStockUpdateIsSet())
        j["priceAndStockUpdate"] = o.m_PriceAndStockUpdate;
    
}

void from_json(const nlohmann::json& j, FeedPublicationDTO& o)
{
    if(j.find("status") != j.end())
    {
        j.at("status").get_to(o.m_Status);
        o.m_StatusIsSet = true;
    } 
    if(j.find("full") != j.end())
    {
        j.at("full").get_to(o.m_Full);
        o.m_FullIsSet = true;
    } 
    if(j.find("priceAndStockUpdate") != j.end())
    {
        j.at("priceAndStockUpdate").get_to(o.m_PriceAndStockUpdate);
        o.m_PriceAndStockUpdateIsSet = true;
    } 
    
}

org::openapitools::server::model::FeedStatusType FeedPublicationDTO::getStatus() const
{
    return m_Status;
}
void FeedPublicationDTO::setStatus(org::openapitools::server::model::FeedStatusType const& value)
{
    m_Status = value;
    m_StatusIsSet = true;
}
bool FeedPublicationDTO::statusIsSet() const
{
    return m_StatusIsSet;
}
void FeedPublicationDTO::unsetStatus()
{
    m_StatusIsSet = false;
}
org::openapitools::server::model::FeedPublicationFullDTO FeedPublicationDTO::getFull() const
{
    return m_Full;
}
void FeedPublicationDTO::setFull(org::openapitools::server::model::FeedPublicationFullDTO const& value)
{
    m_Full = value;
    m_FullIsSet = true;
}
bool FeedPublicationDTO::fullIsSet() const
{
    return m_FullIsSet;
}
void FeedPublicationDTO::unsetFull()
{
    m_FullIsSet = false;
}
org::openapitools::server::model::FeedPublicationPriceAndStockUpdateDTO FeedPublicationDTO::getPriceAndStockUpdate() const
{
    return m_PriceAndStockUpdate;
}
void FeedPublicationDTO::setPriceAndStockUpdate(org::openapitools::server::model::FeedPublicationPriceAndStockUpdateDTO const& value)
{
    m_PriceAndStockUpdate = value;
    m_PriceAndStockUpdateIsSet = true;
}
bool FeedPublicationDTO::priceAndStockUpdateIsSet() const
{
    return m_PriceAndStockUpdateIsSet;
}
void FeedPublicationDTO::unsetPriceAndStockUpdate()
{
    m_PriceAndStockUpdateIsSet = false;
}


} // namespace org::openapitools::server::model

