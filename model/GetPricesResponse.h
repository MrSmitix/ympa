/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GetPricesResponse.h
 *
 * Ответ на запрос списка цен.
 */

#ifndef GetPricesResponse_H_
#define GetPricesResponse_H_



#include "ApiResponseStatusType.h"
#include "OfferPriceListResponseDTO.h"
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "ApiResponse.h"
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Ответ на запрос списка цен.
/// </summary>
class  GetPricesResponse : public ApiResponse
{
public:
    GetPricesResponse() = default;
    explicit GetPricesResponse(boost::property_tree::ptree const& pt);
    virtual ~GetPricesResponse() = default;

    GetPricesResponse(const GetPricesResponse& other) = default; // copy constructor
    GetPricesResponse(GetPricesResponse&& other) noexcept = default; // move constructor

    GetPricesResponse& operator=(const GetPricesResponse& other) = default; // copy assignment
    GetPricesResponse& operator=(GetPricesResponse&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// GetPricesResponse members

    /// <summary>
    /// 
    /// </summary>
    ApiResponseStatusType getStatus() const;
    void setStatus(ApiResponseStatusType value);

    /// <summary>
    /// 
    /// </summary>
    OfferPriceListResponseDTO getResult() const;
    void setResult(OfferPriceListResponseDTO value);

protected:
    ApiResponseStatusType m_Status = ApiResponseStatusType{};
    OfferPriceListResponseDTO m_Result;
};

std::vector<GetPricesResponse> createGetPricesResponseVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<GetPricesResponse>(const GetPricesResponse& val) {
    return val.toPropertyTree();
}

template<>
inline GetPricesResponse fromPt<GetPricesResponse>(const boost::property_tree::ptree& pt) {
    GetPricesResponse ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* GetPricesResponse_H_ */
