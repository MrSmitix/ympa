/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * GenerateMassOrderLabelsRequest.h
 *
 * Данные, необходимые для генерации файла. 
 */

#ifndef GenerateMassOrderLabelsRequest_H_
#define GenerateMassOrderLabelsRequest_H_


#include <set>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Данные, необходимые для генерации файла. 
/// </summary>
class  GenerateMassOrderLabelsRequest
{
public:
    GenerateMassOrderLabelsRequest();
    virtual ~GenerateMassOrderLabelsRequest() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const GenerateMassOrderLabelsRequest& rhs) const;
    bool operator!=(const GenerateMassOrderLabelsRequest& rhs) const;

    /////////////////////////////////////////////
    /// GenerateMassOrderLabelsRequest members

    /// <summary>
    /// Идентификатор кабинета.
    /// </summary>
    int64_t getBusinessId() const;
    void setBusinessId(int64_t const value);
    /// <summary>
    /// Список идентификаторов заказов.
    /// </summary>
    std::set<int64_t> getOrderIds() const;
    void setOrderIds(std::set<int64_t> const value);

    friend  void to_json(nlohmann::json& j, const GenerateMassOrderLabelsRequest& o);
    friend  void from_json(const nlohmann::json& j, GenerateMassOrderLabelsRequest& o);
protected:
    int64_t m_BusinessId;

    std::set<int64_t> m_OrderIds;

    
};

} // namespace org::openapitools::server::model

#endif /* GenerateMassOrderLabelsRequest_H_ */
