/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "PriceSuggestDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

PriceSuggestDTO::PriceSuggestDTO()
{
    m_TypeIsSet = false;
    m_Price = 0.0;
    m_PriceIsSet = false;
    
}

void PriceSuggestDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool PriceSuggestDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool PriceSuggestDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "PriceSuggestDTO" : pathPrefix;

            
    return success;
}

bool PriceSuggestDTO::operator==(const PriceSuggestDTO& rhs) const
{
    return
    
    
    
    ((!typeIsSet() && !rhs.typeIsSet()) || (typeIsSet() && rhs.typeIsSet() && getType() == rhs.getType())) &&
    
    
    ((!priceIsSet() && !rhs.priceIsSet()) || (priceIsSet() && rhs.priceIsSet() && getPrice() == rhs.getPrice()))
    
    ;
}

bool PriceSuggestDTO::operator!=(const PriceSuggestDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const PriceSuggestDTO& o)
{
    j = nlohmann::json::object();
    if(o.typeIsSet())
        j["type"] = o.m_Type;
    if(o.priceIsSet())
        j["price"] = o.m_Price;
    
}

void from_json(const nlohmann::json& j, PriceSuggestDTO& o)
{
    if(j.find("type") != j.end())
    {
        j.at("type").get_to(o.m_Type);
        o.m_TypeIsSet = true;
    } 
    if(j.find("price") != j.end())
    {
        j.at("price").get_to(o.m_Price);
        o.m_PriceIsSet = true;
    } 
    
}

org::openapitools::server::model::PriceSuggestType PriceSuggestDTO::getType() const
{
    return m_Type;
}
void PriceSuggestDTO::setType(org::openapitools::server::model::PriceSuggestType const& value)
{
    m_Type = value;
    m_TypeIsSet = true;
}
bool PriceSuggestDTO::typeIsSet() const
{
    return m_TypeIsSet;
}
void PriceSuggestDTO::unsetType()
{
    m_TypeIsSet = false;
}
double PriceSuggestDTO::getPrice() const
{
    return m_Price;
}
void PriceSuggestDTO::setPrice(double const value)
{
    m_Price = value;
    m_PriceIsSet = true;
}
bool PriceSuggestDTO::priceIsSet() const
{
    return m_PriceIsSet;
}
void PriceSuggestDTO::unsetPrice()
{
    m_PriceIsSet = false;
}


} // namespace org::openapitools::server::model

