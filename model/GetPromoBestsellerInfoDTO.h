/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GetPromoBestsellerInfoDTO.h
 *
 * Информация об акции «Бестселлеры Маркета».
 */

#ifndef GetPromoBestsellerInfoDTO_H_
#define GetPromoBestsellerInfoDTO_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Информация об акции «Бестселлеры Маркета».
/// </summary>
class  GetPromoBestsellerInfoDTO 
{
public:
    GetPromoBestsellerInfoDTO() = default;
    explicit GetPromoBestsellerInfoDTO(boost::property_tree::ptree const& pt);
    virtual ~GetPromoBestsellerInfoDTO() = default;

    GetPromoBestsellerInfoDTO(const GetPromoBestsellerInfoDTO& other) = default; // copy constructor
    GetPromoBestsellerInfoDTO(GetPromoBestsellerInfoDTO&& other) noexcept = default; // move constructor

    GetPromoBestsellerInfoDTO& operator=(const GetPromoBestsellerInfoDTO& other) = default; // copy assignment
    GetPromoBestsellerInfoDTO& operator=(GetPromoBestsellerInfoDTO&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// GetPromoBestsellerInfoDTO members

    /// <summary>
    /// Является ли акция «Бестселлером Маркета». Подробнее об этой акции читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/bestsellers).
    /// </summary>
    bool isBestseller() const;
    void setBestseller(bool value);

    /// <summary>
    /// До какой даты можно добавить товар в акцию «Бестселлеры Маркета».  Параметр возвращается только для текущих и будущих акций «Бестселлеры Маркета». 
    /// </summary>
    std::string getEntryDeadline() const;
    void setEntryDeadline(std::string value);

protected:
    bool m_Bestseller = false;
    std::string m_EntryDeadline = "";
};

std::vector<GetPromoBestsellerInfoDTO> createGetPromoBestsellerInfoDTOVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<GetPromoBestsellerInfoDTO>(const GetPromoBestsellerInfoDTO& val) {
    return val.toPropertyTree();
}

template<>
inline GetPromoBestsellerInfoDTO fromPt<GetPromoBestsellerInfoDTO>(const boost::property_tree::ptree& pt) {
    GetPromoBestsellerInfoDTO ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* GetPromoBestsellerInfoDTO_H_ */
