/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * WarehouseAddressDTO.h
 *
 * Адрес склада.
 */

#ifndef WarehouseAddressDTO_H_
#define WarehouseAddressDTO_H_


#include "GpsDTO.h"
#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Адрес склада.
/// </summary>
class  WarehouseAddressDTO
{
public:
    WarehouseAddressDTO();
    virtual ~WarehouseAddressDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const WarehouseAddressDTO& rhs) const;
    bool operator!=(const WarehouseAddressDTO& rhs) const;

    /////////////////////////////////////////////
    /// WarehouseAddressDTO members

    /// <summary>
    /// Город.
    /// </summary>
    std::string getCity() const;
    void setCity(std::string const& value);
    /// <summary>
    /// Улица.
    /// </summary>
    std::string getStreet() const;
    void setStreet(std::string const& value);
    bool streetIsSet() const;
    void unsetStreet();
    /// <summary>
    /// Номер дома.
    /// </summary>
    std::string getNumber() const;
    void setNumber(std::string const& value);
    bool numberIsSet() const;
    void unsetnumber();
    /// <summary>
    /// Номер строения.
    /// </summary>
    std::string getBuilding() const;
    void setBuilding(std::string const& value);
    bool buildingIsSet() const;
    void unsetBuilding();
    /// <summary>
    /// Номер корпуса.
    /// </summary>
    std::string getBlock() const;
    void setBlock(std::string const& value);
    bool blockIsSet() const;
    void unsetBlock();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::GpsDTO getGps() const;
    void setGps(org::openapitools::server::model::GpsDTO const& value);

    friend  void to_json(nlohmann::json& j, const WarehouseAddressDTO& o);
    friend  void from_json(const nlohmann::json& j, WarehouseAddressDTO& o);
protected:
    std::string m_City;

    std::string m_Street;
    bool m_StreetIsSet;
    std::string m_number;
    bool m_numberIsSet;
    std::string m_Building;
    bool m_BuildingIsSet;
    std::string m_Block;
    bool m_BlockIsSet;
    org::openapitools::server::model::GpsDTO m_Gps;

    
};

} // namespace org::openapitools::server::model

#endif /* WarehouseAddressDTO_H_ */
