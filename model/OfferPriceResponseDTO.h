/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OfferPriceResponseDTO.h
 *
 * Информация об установленной цене на товар.
 */

#ifndef OfferPriceResponseDTO_H_
#define OfferPriceResponseDTO_H_


#include <string>
#include "PriceDTO.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Информация об установленной цене на товар.
/// </summary>
class  OfferPriceResponseDTO
{
public:
    OfferPriceResponseDTO();
    virtual ~OfferPriceResponseDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const OfferPriceResponseDTO& rhs) const;
    bool operator!=(const OfferPriceResponseDTO& rhs) const;

    /////////////////////////////////////////////
    /// OfferPriceResponseDTO members

    /// <summary>
    /// Идентификатор предложения из прайс-листа.
    /// </summary>
    std::string getId() const;
    void setId(std::string const& value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::PriceDTO getPrice() const;
    void setPrice(org::openapitools::server::model::PriceDTO const& value);
    bool priceIsSet() const;
    void unsetPrice();
    /// <summary>
    /// SKU на Маркете.
    /// </summary>
    int64_t getMarketSku() const;
    void setMarketSku(int64_t const value);
    bool marketSkuIsSet() const;
    void unsetMarketSku();
    /// <summary>
    /// Дата и время последнего обновления цены на товар.
    /// </summary>
    std::string getUpdatedAt() const;
    void setUpdatedAt(std::string const& value);
    bool updatedAtIsSet() const;
    void unsetUpdatedAt();

    friend  void to_json(nlohmann::json& j, const OfferPriceResponseDTO& o);
    friend  void from_json(const nlohmann::json& j, OfferPriceResponseDTO& o);
protected:
    std::string m_Id;
    bool m_IdIsSet;
    org::openapitools::server::model::PriceDTO m_Price;
    bool m_PriceIsSet;
    int64_t m_MarketSku;
    bool m_MarketSkuIsSet;
    std::string m_UpdatedAt;
    bool m_UpdatedAtIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* OfferPriceResponseDTO_H_ */
