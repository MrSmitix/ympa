/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OfferCardStatusType.h"
#include "Helpers.h"
#include <stdexcept>
#include <sstream>

namespace org::openapitools::server::model
{

OfferCardStatusType::OfferCardStatusType()
{
    
}

void OfferCardStatusType::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool OfferCardStatusType::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool OfferCardStatusType::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "OfferCardStatusType" : pathPrefix;

    
    if (m_value == OfferCardStatusType::eOfferCardStatusType::INVALID_VALUE_OPENAPI_GENERATED)
    {
        success = false;
        msg << _pathPrefix << ": has no value;";
    }

    return success;
}

bool OfferCardStatusType::operator==(const OfferCardStatusType& rhs) const
{
    return
    getValue() == rhs.getValue()
    
    ;
}

bool OfferCardStatusType::operator!=(const OfferCardStatusType& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const OfferCardStatusType& o)
{
    j = nlohmann::json::object();
    
    switch (o.getValue())
    {
        case OfferCardStatusType::eOfferCardStatusType::INVALID_VALUE_OPENAPI_GENERATED:
            j = "INVALID_VALUE_OPENAPI_GENERATED";
            break;
        case OfferCardStatusType::eOfferCardStatusType::HAS_CARD_CAN_NOT_UPDATE:
            j = "HAS_CARD_CAN_NOT_UPDATE";
            break;
        case OfferCardStatusType::eOfferCardStatusType::HAS_CARD_CAN_UPDATE:
            j = "HAS_CARD_CAN_UPDATE";
            break;
        case OfferCardStatusType::eOfferCardStatusType::HAS_CARD_CAN_UPDATE_ERRORS:
            j = "HAS_CARD_CAN_UPDATE_ERRORS";
            break;
        case OfferCardStatusType::eOfferCardStatusType::HAS_CARD_CAN_UPDATE_PROCESSING:
            j = "HAS_CARD_CAN_UPDATE_PROCESSING";
            break;
        case OfferCardStatusType::eOfferCardStatusType::NO_CARD_NEED_CONTENT:
            j = "NO_CARD_NEED_CONTENT";
            break;
        case OfferCardStatusType::eOfferCardStatusType::NO_CARD_MARKET_WILL_CREATE:
            j = "NO_CARD_MARKET_WILL_CREATE";
            break;
        case OfferCardStatusType::eOfferCardStatusType::NO_CARD_ERRORS:
            j = "NO_CARD_ERRORS";
            break;
        case OfferCardStatusType::eOfferCardStatusType::NO_CARD_PROCESSING:
            j = "NO_CARD_PROCESSING";
            break;
        case OfferCardStatusType::eOfferCardStatusType::NO_CARD_ADD_TO_CAMPAIGN:
            j = "NO_CARD_ADD_TO_CAMPAIGN";
            break;
    }
}

void from_json(const nlohmann::json& j, OfferCardStatusType& o)
{
    
    auto s = j.get<std::string>();
    if (s == "HAS_CARD_CAN_NOT_UPDATE") {
     o.setValue(OfferCardStatusType::eOfferCardStatusType::HAS_CARD_CAN_NOT_UPDATE);
    } 
    else if (s == "HAS_CARD_CAN_UPDATE") {
     o.setValue(OfferCardStatusType::eOfferCardStatusType::HAS_CARD_CAN_UPDATE);
    } 
    else if (s == "HAS_CARD_CAN_UPDATE_ERRORS") {
     o.setValue(OfferCardStatusType::eOfferCardStatusType::HAS_CARD_CAN_UPDATE_ERRORS);
    } 
    else if (s == "HAS_CARD_CAN_UPDATE_PROCESSING") {
     o.setValue(OfferCardStatusType::eOfferCardStatusType::HAS_CARD_CAN_UPDATE_PROCESSING);
    } 
    else if (s == "NO_CARD_NEED_CONTENT") {
     o.setValue(OfferCardStatusType::eOfferCardStatusType::NO_CARD_NEED_CONTENT);
    } 
    else if (s == "NO_CARD_MARKET_WILL_CREATE") {
     o.setValue(OfferCardStatusType::eOfferCardStatusType::NO_CARD_MARKET_WILL_CREATE);
    } 
    else if (s == "NO_CARD_ERRORS") {
     o.setValue(OfferCardStatusType::eOfferCardStatusType::NO_CARD_ERRORS);
    } 
    else if (s == "NO_CARD_PROCESSING") {
     o.setValue(OfferCardStatusType::eOfferCardStatusType::NO_CARD_PROCESSING);
    } 
    else if (s == "NO_CARD_ADD_TO_CAMPAIGN") {
     o.setValue(OfferCardStatusType::eOfferCardStatusType::NO_CARD_ADD_TO_CAMPAIGN);
    }  else {
     std::stringstream ss;
     ss << "Unexpected value " << s << " in json"
        << " cannot be converted to enum of type"
        << " OfferCardStatusType::eOfferCardStatusType";
     throw std::invalid_argument(ss.str());
    } 

}

OfferCardStatusType::eOfferCardStatusType OfferCardStatusType::getValue() const
{
    return m_value;
}
void OfferCardStatusType::setValue(OfferCardStatusType::eOfferCardStatusType value)
{
    m_value = value;
}

} // namespace org::openapitools::server::model

