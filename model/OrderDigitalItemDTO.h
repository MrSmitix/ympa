/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrderDigitalItemDTO.h
 *
 * Ключ цифрового товара.
 */

#ifndef OrderDigitalItemDTO_H_
#define OrderDigitalItemDTO_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Ключ цифрового товара.
/// </summary>
class  OrderDigitalItemDTO 
{
public:
    OrderDigitalItemDTO() = default;
    explicit OrderDigitalItemDTO(boost::property_tree::ptree const& pt);
    virtual ~OrderDigitalItemDTO() = default;

    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// OrderDigitalItemDTO members

    /// <summary>
    /// Идентификатор товара в заказе.  Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр &#x60;id&#x60; в &#x60;items&#x60;. 
    /// </summary>
    int64_t getId() const;
    void setId(int64_t value);

    /// <summary>
    /// Сам ключ.
    /// </summary>
    std::string getCode() const;
    void setCode(std::string value);

    /// <summary>
    /// Инструкция по активации.
    /// </summary>
    std::string getSlip() const;
    void setSlip(std::string value);

    /// <summary>
    /// Дата, до которой нужно активировать ключ. Если ключ действует бессрочно, укажите любую дату в отдаленном будущем.  Формат даты: &#x60;ГГГГ-ММ-ДД&#x60;. 
    /// </summary>
    std::string getActivateTill() const;
    void setActivateTill(std::string value);

protected:
    //////////////////////////////////////
    // Override these for customization //
    //////////////////////////////////////

    virtual std::string toJsonString_internal(bool prettyJson = false);
    virtual void fromJsonString_internal(std::string const& jsonString);
    virtual boost::property_tree::ptree toPropertyTree_internal();
    virtual void fromPropertyTree_internal(boost::property_tree::ptree const& pt);


protected:
    int64_t m_Id = 0L;
    std::string m_Code = "";
    std::string m_Slip = "";
    std::string m_Activate_till = "";
};

std::vector<OrderDigitalItemDTO> createOrderDigitalItemDTOVectorFromJsonString(const std::string& json);

}
}
}
}

#endif /* OrderDigitalItemDTO_H_ */
