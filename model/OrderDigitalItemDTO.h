/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrderDigitalItemDTO.h
 *
 * Ключ цифрового товара.
 */

#ifndef OrderDigitalItemDTO_H_
#define OrderDigitalItemDTO_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Ключ цифрового товара.
/// </summary>
class  OrderDigitalItemDTO
{
public:
    OrderDigitalItemDTO();
    virtual ~OrderDigitalItemDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const OrderDigitalItemDTO& rhs) const;
    bool operator!=(const OrderDigitalItemDTO& rhs) const;

    /////////////////////////////////////////////
    /// OrderDigitalItemDTO members

    /// <summary>
    /// Идентификатор товара в заказе.  Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр &#x60;id&#x60; в &#x60;items&#x60;. 
    /// </summary>
    int64_t getId() const;
    void setId(int64_t const value);
    /// <summary>
    /// Сам ключ.
    /// </summary>
    std::string getCode() const;
    void setCode(std::string const& value);
    /// <summary>
    /// Инструкция по активации.
    /// </summary>
    std::string getSlip() const;
    void setSlip(std::string const& value);
    /// <summary>
    /// Дата, до которой нужно активировать ключ. Если ключ действует бессрочно, укажите любую дату в отдаленном будущем.  Формат даты: &#x60;ГГГГ-ММ-ДД&#x60;. 
    /// </summary>
    std::string getActivateTill() const;
    void setActivateTill(std::string const& value);

    friend  void to_json(nlohmann::json& j, const OrderDigitalItemDTO& o);
    friend  void from_json(const nlohmann::json& j, OrderDigitalItemDTO& o);
protected:
    int64_t m_Id;

    std::string m_Code;

    std::string m_Slip;

    std::string m_Activate_till;

    
};

} // namespace org::openapitools::server::model

#endif /* OrderDigitalItemDTO_H_ */
