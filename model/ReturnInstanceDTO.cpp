/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ReturnInstanceDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

ReturnInstanceDTO::ReturnInstanceDTO()
{
    m_StockTypeIsSet = false;
    m_StatusIsSet = false;
    m_Cis = "";
    m_CisIsSet = false;
    m_Imei = "";
    m_ImeiIsSet = false;
    
}

void ReturnInstanceDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool ReturnInstanceDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool ReturnInstanceDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "ReturnInstanceDTO" : pathPrefix;

                    
    return success;
}

bool ReturnInstanceDTO::operator==(const ReturnInstanceDTO& rhs) const
{
    return
    
    
    
    ((!stockTypeIsSet() && !rhs.stockTypeIsSet()) || (stockTypeIsSet() && rhs.stockTypeIsSet() && getStockType() == rhs.getStockType())) &&
    
    
    ((!statusIsSet() && !rhs.statusIsSet()) || (statusIsSet() && rhs.statusIsSet() && getStatus() == rhs.getStatus())) &&
    
    
    ((!cisIsSet() && !rhs.cisIsSet()) || (cisIsSet() && rhs.cisIsSet() && getCis() == rhs.getCis())) &&
    
    
    ((!imeiIsSet() && !rhs.imeiIsSet()) || (imeiIsSet() && rhs.imeiIsSet() && getImei() == rhs.getImei()))
    
    ;
}

bool ReturnInstanceDTO::operator!=(const ReturnInstanceDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ReturnInstanceDTO& o)
{
    j = nlohmann::json::object();
    if(o.stockTypeIsSet())
        j["stockType"] = o.m_StockType;
    if(o.statusIsSet())
        j["status"] = o.m_Status;
    if(o.cisIsSet())
        j["cis"] = o.m_Cis;
    if(o.imeiIsSet())
        j["imei"] = o.m_Imei;
    
}

void from_json(const nlohmann::json& j, ReturnInstanceDTO& o)
{
    if(j.find("stockType") != j.end())
    {
        j.at("stockType").get_to(o.m_StockType);
        o.m_StockTypeIsSet = true;
    } 
    if(j.find("status") != j.end())
    {
        j.at("status").get_to(o.m_Status);
        o.m_StatusIsSet = true;
    } 
    if(j.find("cis") != j.end())
    {
        j.at("cis").get_to(o.m_Cis);
        o.m_CisIsSet = true;
    } 
    if(j.find("imei") != j.end())
    {
        j.at("imei").get_to(o.m_Imei);
        o.m_ImeiIsSet = true;
    } 
    
}

org::openapitools::server::model::ReturnInstanceStockType ReturnInstanceDTO::getStockType() const
{
    return m_StockType;
}
void ReturnInstanceDTO::setStockType(org::openapitools::server::model::ReturnInstanceStockType const& value)
{
    m_StockType = value;
    m_StockTypeIsSet = true;
}
bool ReturnInstanceDTO::stockTypeIsSet() const
{
    return m_StockTypeIsSet;
}
void ReturnInstanceDTO::unsetStockType()
{
    m_StockTypeIsSet = false;
}
org::openapitools::server::model::ReturnInstanceStatusType ReturnInstanceDTO::getStatus() const
{
    return m_Status;
}
void ReturnInstanceDTO::setStatus(org::openapitools::server::model::ReturnInstanceStatusType const& value)
{
    m_Status = value;
    m_StatusIsSet = true;
}
bool ReturnInstanceDTO::statusIsSet() const
{
    return m_StatusIsSet;
}
void ReturnInstanceDTO::unsetStatus()
{
    m_StatusIsSet = false;
}
std::string ReturnInstanceDTO::getCis() const
{
    return m_Cis;
}
void ReturnInstanceDTO::setCis(std::string const& value)
{
    m_Cis = value;
    m_CisIsSet = true;
}
bool ReturnInstanceDTO::cisIsSet() const
{
    return m_CisIsSet;
}
void ReturnInstanceDTO::unsetCis()
{
    m_CisIsSet = false;
}
std::string ReturnInstanceDTO::getImei() const
{
    return m_Imei;
}
void ReturnInstanceDTO::setImei(std::string const& value)
{
    m_Imei = value;
    m_ImeiIsSet = true;
}
bool ReturnInstanceDTO::imeiIsSet() const
{
    return m_ImeiIsSet;
}
void ReturnInstanceDTO::unsetImei()
{
    m_ImeiIsSet = false;
}


} // namespace org::openapitools::server::model

