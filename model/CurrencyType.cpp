/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CurrencyType.h"
#include "Helpers.h"
#include <stdexcept>
#include <sstream>

namespace org::openapitools::server::model
{

CurrencyType::CurrencyType()
{
    
}

void CurrencyType::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool CurrencyType::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool CurrencyType::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "CurrencyType" : pathPrefix;

    
    if (m_value == CurrencyType::eCurrencyType::INVALID_VALUE_OPENAPI_GENERATED)
    {
        success = false;
        msg << _pathPrefix << ": has no value;";
    }

    return success;
}

bool CurrencyType::operator==(const CurrencyType& rhs) const
{
    return
    getValue() == rhs.getValue()
    
    ;
}

bool CurrencyType::operator!=(const CurrencyType& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const CurrencyType& o)
{
    j = nlohmann::json::object();
    
    switch (o.getValue())
    {
        case CurrencyType::eCurrencyType::INVALID_VALUE_OPENAPI_GENERATED:
            j = "INVALID_VALUE_OPENAPI_GENERATED";
            break;
        case CurrencyType::eCurrencyType::RUR:
            j = "RUR";
            break;
        case CurrencyType::eCurrencyType::USD:
            j = "USD";
            break;
        case CurrencyType::eCurrencyType::EUR:
            j = "EUR";
            break;
        case CurrencyType::eCurrencyType::UAH:
            j = "UAH";
            break;
        case CurrencyType::eCurrencyType::AUD:
            j = "AUD";
            break;
        case CurrencyType::eCurrencyType::GBP:
            j = "GBP";
            break;
        case CurrencyType::eCurrencyType::BYR:
            j = "BYR";
            break;
        case CurrencyType::eCurrencyType::BYN:
            j = "BYN";
            break;
        case CurrencyType::eCurrencyType::DKK:
            j = "DKK";
            break;
        case CurrencyType::eCurrencyType::ISK:
            j = "ISK";
            break;
        case CurrencyType::eCurrencyType::KZT:
            j = "KZT";
            break;
        case CurrencyType::eCurrencyType::CAD:
            j = "CAD";
            break;
        case CurrencyType::eCurrencyType::CNY:
            j = "CNY";
            break;
        case CurrencyType::eCurrencyType::NOK:
            j = "NOK";
            break;
        case CurrencyType::eCurrencyType::XDR:
            j = "XDR";
            break;
        case CurrencyType::eCurrencyType::SGD:
            j = "SGD";
            break;
        case CurrencyType::eCurrencyType::TRY:
            j = "TRY";
            break;
        case CurrencyType::eCurrencyType::SEK:
            j = "SEK";
            break;
        case CurrencyType::eCurrencyType::CHF:
            j = "CHF";
            break;
        case CurrencyType::eCurrencyType::JPY:
            j = "JPY";
            break;
        case CurrencyType::eCurrencyType::AZN:
            j = "AZN";
            break;
        case CurrencyType::eCurrencyType::ALL:
            j = "ALL";
            break;
        case CurrencyType::eCurrencyType::DZD:
            j = "DZD";
            break;
        case CurrencyType::eCurrencyType::AOA:
            j = "AOA";
            break;
        case CurrencyType::eCurrencyType::ARS:
            j = "ARS";
            break;
        case CurrencyType::eCurrencyType::AMD:
            j = "AMD";
            break;
        case CurrencyType::eCurrencyType::AFN:
            j = "AFN";
            break;
        case CurrencyType::eCurrencyType::BHD:
            j = "BHD";
            break;
        case CurrencyType::eCurrencyType::BGN:
            j = "BGN";
            break;
        case CurrencyType::eCurrencyType::BOB:
            j = "BOB";
            break;
        case CurrencyType::eCurrencyType::BWP:
            j = "BWP";
            break;
        case CurrencyType::eCurrencyType::BND:
            j = "BND";
            break;
        case CurrencyType::eCurrencyType::BRL:
            j = "BRL";
            break;
        case CurrencyType::eCurrencyType::BIF:
            j = "BIF";
            break;
        case CurrencyType::eCurrencyType::HUF:
            j = "HUF";
            break;
        case CurrencyType::eCurrencyType::VEF:
            j = "VEF";
            break;
        case CurrencyType::eCurrencyType::KPW:
            j = "KPW";
            break;
        case CurrencyType::eCurrencyType::VND:
            j = "VND";
            break;
        case CurrencyType::eCurrencyType::GMD:
            j = "GMD";
            break;
        case CurrencyType::eCurrencyType::GHS:
            j = "GHS";
            break;
        case CurrencyType::eCurrencyType::GNF:
            j = "GNF";
            break;
        case CurrencyType::eCurrencyType::HKD:
            j = "HKD";
            break;
        case CurrencyType::eCurrencyType::GEL:
            j = "GEL";
            break;
        case CurrencyType::eCurrencyType::AED:
            j = "AED";
            break;
        case CurrencyType::eCurrencyType::EGP:
            j = "EGP";
            break;
        case CurrencyType::eCurrencyType::ZMK:
            j = "ZMK";
            break;
        case CurrencyType::eCurrencyType::ILS:
            j = "ILS";
            break;
        case CurrencyType::eCurrencyType::INR:
            j = "INR";
            break;
        case CurrencyType::eCurrencyType::IDR:
            j = "IDR";
            break;
        case CurrencyType::eCurrencyType::JOD:
            j = "JOD";
            break;
        case CurrencyType::eCurrencyType::IQD:
            j = "IQD";
            break;
        case CurrencyType::eCurrencyType::IRR:
            j = "IRR";
            break;
        case CurrencyType::eCurrencyType::YER:
            j = "YER";
            break;
        case CurrencyType::eCurrencyType::QAR:
            j = "QAR";
            break;
        case CurrencyType::eCurrencyType::KES:
            j = "KES";
            break;
        case CurrencyType::eCurrencyType::KGS:
            j = "KGS";
            break;
        case CurrencyType::eCurrencyType::COP:
            j = "COP";
            break;
        case CurrencyType::eCurrencyType::CDF:
            j = "CDF";
            break;
        case CurrencyType::eCurrencyType::CRC:
            j = "CRC";
            break;
        case CurrencyType::eCurrencyType::KWD:
            j = "KWD";
            break;
        case CurrencyType::eCurrencyType::CUP:
            j = "CUP";
            break;
        case CurrencyType::eCurrencyType::LAK:
            j = "LAK";
            break;
        case CurrencyType::eCurrencyType::LVL:
            j = "LVL";
            break;
        case CurrencyType::eCurrencyType::SLL:
            j = "SLL";
            break;
        case CurrencyType::eCurrencyType::LBP:
            j = "LBP";
            break;
        case CurrencyType::eCurrencyType::LYD:
            j = "LYD";
            break;
        case CurrencyType::eCurrencyType::SZL:
            j = "SZL";
            break;
        case CurrencyType::eCurrencyType::LTL:
            j = "LTL";
            break;
        case CurrencyType::eCurrencyType::MUR:
            j = "MUR";
            break;
        case CurrencyType::eCurrencyType::MRO:
            j = "MRO";
            break;
        case CurrencyType::eCurrencyType::MKD:
            j = "MKD";
            break;
        case CurrencyType::eCurrencyType::MWK:
            j = "MWK";
            break;
        case CurrencyType::eCurrencyType::MGA:
            j = "MGA";
            break;
        case CurrencyType::eCurrencyType::MYR:
            j = "MYR";
            break;
        case CurrencyType::eCurrencyType::MAD:
            j = "MAD";
            break;
        case CurrencyType::eCurrencyType::MXN:
            j = "MXN";
            break;
        case CurrencyType::eCurrencyType::MZN:
            j = "MZN";
            break;
        case CurrencyType::eCurrencyType::MDL:
            j = "MDL";
            break;
        case CurrencyType::eCurrencyType::MNT:
            j = "MNT";
            break;
        case CurrencyType::eCurrencyType::NPR:
            j = "NPR";
            break;
        case CurrencyType::eCurrencyType::NGN:
            j = "NGN";
            break;
        case CurrencyType::eCurrencyType::NIO:
            j = "NIO";
            break;
        case CurrencyType::eCurrencyType::NZD:
            j = "NZD";
            break;
        case CurrencyType::eCurrencyType::OMR:
            j = "OMR";
            break;
        case CurrencyType::eCurrencyType::PKR:
            j = "PKR";
            break;
        case CurrencyType::eCurrencyType::PYG:
            j = "PYG";
            break;
        case CurrencyType::eCurrencyType::PEN:
            j = "PEN";
            break;
        case CurrencyType::eCurrencyType::PLN:
            j = "PLN";
            break;
        case CurrencyType::eCurrencyType::KHR:
            j = "KHR";
            break;
        case CurrencyType::eCurrencyType::SAR:
            j = "SAR";
            break;
        case CurrencyType::eCurrencyType::RON:
            j = "RON";
            break;
        case CurrencyType::eCurrencyType::SCR:
            j = "SCR";
            break;
        case CurrencyType::eCurrencyType::SYP:
            j = "SYP";
            break;
        case CurrencyType::eCurrencyType::SKK:
            j = "SKK";
            break;
        case CurrencyType::eCurrencyType::SOS:
            j = "SOS";
            break;
        case CurrencyType::eCurrencyType::SDG:
            j = "SDG";
            break;
        case CurrencyType::eCurrencyType::SRD:
            j = "SRD";
            break;
        case CurrencyType::eCurrencyType::TJS:
            j = "TJS";
            break;
        case CurrencyType::eCurrencyType::THB:
            j = "THB";
            break;
        case CurrencyType::eCurrencyType::TWD:
            j = "TWD";
            break;
        case CurrencyType::eCurrencyType::BDT:
            j = "BDT";
            break;
        case CurrencyType::eCurrencyType::TZS:
            j = "TZS";
            break;
        case CurrencyType::eCurrencyType::TND:
            j = "TND";
            break;
        case CurrencyType::eCurrencyType::TMM:
            j = "TMM";
            break;
        case CurrencyType::eCurrencyType::UGX:
            j = "UGX";
            break;
        case CurrencyType::eCurrencyType::UZS:
            j = "UZS";
            break;
        case CurrencyType::eCurrencyType::UYU:
            j = "UYU";
            break;
        case CurrencyType::eCurrencyType::PHP:
            j = "PHP";
            break;
        case CurrencyType::eCurrencyType::DJF:
            j = "DJF";
            break;
        case CurrencyType::eCurrencyType::XAF:
            j = "XAF";
            break;
        case CurrencyType::eCurrencyType::XOF:
            j = "XOF";
            break;
        case CurrencyType::eCurrencyType::HRK:
            j = "HRK";
            break;
        case CurrencyType::eCurrencyType::CZK:
            j = "CZK";
            break;
        case CurrencyType::eCurrencyType::CLP:
            j = "CLP";
            break;
        case CurrencyType::eCurrencyType::LKR:
            j = "LKR";
            break;
        case CurrencyType::eCurrencyType::EEK:
            j = "EEK";
            break;
        case CurrencyType::eCurrencyType::ETB:
            j = "ETB";
            break;
        case CurrencyType::eCurrencyType::RSD:
            j = "RSD";
            break;
        case CurrencyType::eCurrencyType::ZAR:
            j = "ZAR";
            break;
        case CurrencyType::eCurrencyType::KRW:
            j = "KRW";
            break;
        case CurrencyType::eCurrencyType::NAD:
            j = "NAD";
            break;
        case CurrencyType::eCurrencyType::TL:
            j = "TL";
            break;
        case CurrencyType::eCurrencyType::UE:
            j = "UE";
            break;
    }
}

void from_json(const nlohmann::json& j, CurrencyType& o)
{
    
    auto s = j.get<std::string>();
    if (s == "RUR") {
     o.setValue(CurrencyType::eCurrencyType::RUR);
    } 
    else if (s == "USD") {
     o.setValue(CurrencyType::eCurrencyType::USD);
    } 
    else if (s == "EUR") {
     o.setValue(CurrencyType::eCurrencyType::EUR);
    } 
    else if (s == "UAH") {
     o.setValue(CurrencyType::eCurrencyType::UAH);
    } 
    else if (s == "AUD") {
     o.setValue(CurrencyType::eCurrencyType::AUD);
    } 
    else if (s == "GBP") {
     o.setValue(CurrencyType::eCurrencyType::GBP);
    } 
    else if (s == "BYR") {
     o.setValue(CurrencyType::eCurrencyType::BYR);
    } 
    else if (s == "BYN") {
     o.setValue(CurrencyType::eCurrencyType::BYN);
    } 
    else if (s == "DKK") {
     o.setValue(CurrencyType::eCurrencyType::DKK);
    } 
    else if (s == "ISK") {
     o.setValue(CurrencyType::eCurrencyType::ISK);
    } 
    else if (s == "KZT") {
     o.setValue(CurrencyType::eCurrencyType::KZT);
    } 
    else if (s == "CAD") {
     o.setValue(CurrencyType::eCurrencyType::CAD);
    } 
    else if (s == "CNY") {
     o.setValue(CurrencyType::eCurrencyType::CNY);
    } 
    else if (s == "NOK") {
     o.setValue(CurrencyType::eCurrencyType::NOK);
    } 
    else if (s == "XDR") {
     o.setValue(CurrencyType::eCurrencyType::XDR);
    } 
    else if (s == "SGD") {
     o.setValue(CurrencyType::eCurrencyType::SGD);
    } 
    else if (s == "TRY") {
     o.setValue(CurrencyType::eCurrencyType::TRY);
    } 
    else if (s == "SEK") {
     o.setValue(CurrencyType::eCurrencyType::SEK);
    } 
    else if (s == "CHF") {
     o.setValue(CurrencyType::eCurrencyType::CHF);
    } 
    else if (s == "JPY") {
     o.setValue(CurrencyType::eCurrencyType::JPY);
    } 
    else if (s == "AZN") {
     o.setValue(CurrencyType::eCurrencyType::AZN);
    } 
    else if (s == "ALL") {
     o.setValue(CurrencyType::eCurrencyType::ALL);
    } 
    else if (s == "DZD") {
     o.setValue(CurrencyType::eCurrencyType::DZD);
    } 
    else if (s == "AOA") {
     o.setValue(CurrencyType::eCurrencyType::AOA);
    } 
    else if (s == "ARS") {
     o.setValue(CurrencyType::eCurrencyType::ARS);
    } 
    else if (s == "AMD") {
     o.setValue(CurrencyType::eCurrencyType::AMD);
    } 
    else if (s == "AFN") {
     o.setValue(CurrencyType::eCurrencyType::AFN);
    } 
    else if (s == "BHD") {
     o.setValue(CurrencyType::eCurrencyType::BHD);
    } 
    else if (s == "BGN") {
     o.setValue(CurrencyType::eCurrencyType::BGN);
    } 
    else if (s == "BOB") {
     o.setValue(CurrencyType::eCurrencyType::BOB);
    } 
    else if (s == "BWP") {
     o.setValue(CurrencyType::eCurrencyType::BWP);
    } 
    else if (s == "BND") {
     o.setValue(CurrencyType::eCurrencyType::BND);
    } 
    else if (s == "BRL") {
     o.setValue(CurrencyType::eCurrencyType::BRL);
    } 
    else if (s == "BIF") {
     o.setValue(CurrencyType::eCurrencyType::BIF);
    } 
    else if (s == "HUF") {
     o.setValue(CurrencyType::eCurrencyType::HUF);
    } 
    else if (s == "VEF") {
     o.setValue(CurrencyType::eCurrencyType::VEF);
    } 
    else if (s == "KPW") {
     o.setValue(CurrencyType::eCurrencyType::KPW);
    } 
    else if (s == "VND") {
     o.setValue(CurrencyType::eCurrencyType::VND);
    } 
    else if (s == "GMD") {
     o.setValue(CurrencyType::eCurrencyType::GMD);
    } 
    else if (s == "GHS") {
     o.setValue(CurrencyType::eCurrencyType::GHS);
    } 
    else if (s == "GNF") {
     o.setValue(CurrencyType::eCurrencyType::GNF);
    } 
    else if (s == "HKD") {
     o.setValue(CurrencyType::eCurrencyType::HKD);
    } 
    else if (s == "GEL") {
     o.setValue(CurrencyType::eCurrencyType::GEL);
    } 
    else if (s == "AED") {
     o.setValue(CurrencyType::eCurrencyType::AED);
    } 
    else if (s == "EGP") {
     o.setValue(CurrencyType::eCurrencyType::EGP);
    } 
    else if (s == "ZMK") {
     o.setValue(CurrencyType::eCurrencyType::ZMK);
    } 
    else if (s == "ILS") {
     o.setValue(CurrencyType::eCurrencyType::ILS);
    } 
    else if (s == "INR") {
     o.setValue(CurrencyType::eCurrencyType::INR);
    } 
    else if (s == "IDR") {
     o.setValue(CurrencyType::eCurrencyType::IDR);
    } 
    else if (s == "JOD") {
     o.setValue(CurrencyType::eCurrencyType::JOD);
    } 
    else if (s == "IQD") {
     o.setValue(CurrencyType::eCurrencyType::IQD);
    } 
    else if (s == "IRR") {
     o.setValue(CurrencyType::eCurrencyType::IRR);
    } 
    else if (s == "YER") {
     o.setValue(CurrencyType::eCurrencyType::YER);
    } 
    else if (s == "QAR") {
     o.setValue(CurrencyType::eCurrencyType::QAR);
    } 
    else if (s == "KES") {
     o.setValue(CurrencyType::eCurrencyType::KES);
    } 
    else if (s == "KGS") {
     o.setValue(CurrencyType::eCurrencyType::KGS);
    } 
    else if (s == "COP") {
     o.setValue(CurrencyType::eCurrencyType::COP);
    } 
    else if (s == "CDF") {
     o.setValue(CurrencyType::eCurrencyType::CDF);
    } 
    else if (s == "CRC") {
     o.setValue(CurrencyType::eCurrencyType::CRC);
    } 
    else if (s == "KWD") {
     o.setValue(CurrencyType::eCurrencyType::KWD);
    } 
    else if (s == "CUP") {
     o.setValue(CurrencyType::eCurrencyType::CUP);
    } 
    else if (s == "LAK") {
     o.setValue(CurrencyType::eCurrencyType::LAK);
    } 
    else if (s == "LVL") {
     o.setValue(CurrencyType::eCurrencyType::LVL);
    } 
    else if (s == "SLL") {
     o.setValue(CurrencyType::eCurrencyType::SLL);
    } 
    else if (s == "LBP") {
     o.setValue(CurrencyType::eCurrencyType::LBP);
    } 
    else if (s == "LYD") {
     o.setValue(CurrencyType::eCurrencyType::LYD);
    } 
    else if (s == "SZL") {
     o.setValue(CurrencyType::eCurrencyType::SZL);
    } 
    else if (s == "LTL") {
     o.setValue(CurrencyType::eCurrencyType::LTL);
    } 
    else if (s == "MUR") {
     o.setValue(CurrencyType::eCurrencyType::MUR);
    } 
    else if (s == "MRO") {
     o.setValue(CurrencyType::eCurrencyType::MRO);
    } 
    else if (s == "MKD") {
     o.setValue(CurrencyType::eCurrencyType::MKD);
    } 
    else if (s == "MWK") {
     o.setValue(CurrencyType::eCurrencyType::MWK);
    } 
    else if (s == "MGA") {
     o.setValue(CurrencyType::eCurrencyType::MGA);
    } 
    else if (s == "MYR") {
     o.setValue(CurrencyType::eCurrencyType::MYR);
    } 
    else if (s == "MAD") {
     o.setValue(CurrencyType::eCurrencyType::MAD);
    } 
    else if (s == "MXN") {
     o.setValue(CurrencyType::eCurrencyType::MXN);
    } 
    else if (s == "MZN") {
     o.setValue(CurrencyType::eCurrencyType::MZN);
    } 
    else if (s == "MDL") {
     o.setValue(CurrencyType::eCurrencyType::MDL);
    } 
    else if (s == "MNT") {
     o.setValue(CurrencyType::eCurrencyType::MNT);
    } 
    else if (s == "NPR") {
     o.setValue(CurrencyType::eCurrencyType::NPR);
    } 
    else if (s == "NGN") {
     o.setValue(CurrencyType::eCurrencyType::NGN);
    } 
    else if (s == "NIO") {
     o.setValue(CurrencyType::eCurrencyType::NIO);
    } 
    else if (s == "NZD") {
     o.setValue(CurrencyType::eCurrencyType::NZD);
    } 
    else if (s == "OMR") {
     o.setValue(CurrencyType::eCurrencyType::OMR);
    } 
    else if (s == "PKR") {
     o.setValue(CurrencyType::eCurrencyType::PKR);
    } 
    else if (s == "PYG") {
     o.setValue(CurrencyType::eCurrencyType::PYG);
    } 
    else if (s == "PEN") {
     o.setValue(CurrencyType::eCurrencyType::PEN);
    } 
    else if (s == "PLN") {
     o.setValue(CurrencyType::eCurrencyType::PLN);
    } 
    else if (s == "KHR") {
     o.setValue(CurrencyType::eCurrencyType::KHR);
    } 
    else if (s == "SAR") {
     o.setValue(CurrencyType::eCurrencyType::SAR);
    } 
    else if (s == "RON") {
     o.setValue(CurrencyType::eCurrencyType::RON);
    } 
    else if (s == "SCR") {
     o.setValue(CurrencyType::eCurrencyType::SCR);
    } 
    else if (s == "SYP") {
     o.setValue(CurrencyType::eCurrencyType::SYP);
    } 
    else if (s == "SKK") {
     o.setValue(CurrencyType::eCurrencyType::SKK);
    } 
    else if (s == "SOS") {
     o.setValue(CurrencyType::eCurrencyType::SOS);
    } 
    else if (s == "SDG") {
     o.setValue(CurrencyType::eCurrencyType::SDG);
    } 
    else if (s == "SRD") {
     o.setValue(CurrencyType::eCurrencyType::SRD);
    } 
    else if (s == "TJS") {
     o.setValue(CurrencyType::eCurrencyType::TJS);
    } 
    else if (s == "THB") {
     o.setValue(CurrencyType::eCurrencyType::THB);
    } 
    else if (s == "TWD") {
     o.setValue(CurrencyType::eCurrencyType::TWD);
    } 
    else if (s == "BDT") {
     o.setValue(CurrencyType::eCurrencyType::BDT);
    } 
    else if (s == "TZS") {
     o.setValue(CurrencyType::eCurrencyType::TZS);
    } 
    else if (s == "TND") {
     o.setValue(CurrencyType::eCurrencyType::TND);
    } 
    else if (s == "TMM") {
     o.setValue(CurrencyType::eCurrencyType::TMM);
    } 
    else if (s == "UGX") {
     o.setValue(CurrencyType::eCurrencyType::UGX);
    } 
    else if (s == "UZS") {
     o.setValue(CurrencyType::eCurrencyType::UZS);
    } 
    else if (s == "UYU") {
     o.setValue(CurrencyType::eCurrencyType::UYU);
    } 
    else if (s == "PHP") {
     o.setValue(CurrencyType::eCurrencyType::PHP);
    } 
    else if (s == "DJF") {
     o.setValue(CurrencyType::eCurrencyType::DJF);
    } 
    else if (s == "XAF") {
     o.setValue(CurrencyType::eCurrencyType::XAF);
    } 
    else if (s == "XOF") {
     o.setValue(CurrencyType::eCurrencyType::XOF);
    } 
    else if (s == "HRK") {
     o.setValue(CurrencyType::eCurrencyType::HRK);
    } 
    else if (s == "CZK") {
     o.setValue(CurrencyType::eCurrencyType::CZK);
    } 
    else if (s == "CLP") {
     o.setValue(CurrencyType::eCurrencyType::CLP);
    } 
    else if (s == "LKR") {
     o.setValue(CurrencyType::eCurrencyType::LKR);
    } 
    else if (s == "EEK") {
     o.setValue(CurrencyType::eCurrencyType::EEK);
    } 
    else if (s == "ETB") {
     o.setValue(CurrencyType::eCurrencyType::ETB);
    } 
    else if (s == "RSD") {
     o.setValue(CurrencyType::eCurrencyType::RSD);
    } 
    else if (s == "ZAR") {
     o.setValue(CurrencyType::eCurrencyType::ZAR);
    } 
    else if (s == "KRW") {
     o.setValue(CurrencyType::eCurrencyType::KRW);
    } 
    else if (s == "NAD") {
     o.setValue(CurrencyType::eCurrencyType::NAD);
    } 
    else if (s == "TL") {
     o.setValue(CurrencyType::eCurrencyType::TL);
    } 
    else if (s == "UE") {
     o.setValue(CurrencyType::eCurrencyType::UE);
    }  else {
     std::stringstream ss;
     ss << "Unexpected value " << s << " in json"
        << " cannot be converted to enum of type"
        << " CurrencyType::eCurrencyType";
     throw std::invalid_argument(ss.str());
    } 

}

CurrencyType::eCurrencyType CurrencyType::getValue() const
{
    return m_value;
}
void CurrencyType::setValue(CurrencyType::eCurrencyType value)
{
    m_value = value;
}

} // namespace org::openapitools::server::model

