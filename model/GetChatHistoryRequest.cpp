/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "GetChatHistoryRequest.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

GetChatHistoryRequest::GetChatHistoryRequest()
{
    m_MessageIdFrom = 0L;
    m_MessageIdFromIsSet = false;
    
}

void GetChatHistoryRequest::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool GetChatHistoryRequest::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool GetChatHistoryRequest::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "GetChatHistoryRequest" : pathPrefix;

        
    return success;
}

bool GetChatHistoryRequest::operator==(const GetChatHistoryRequest& rhs) const
{
    return
    
    
    
    ((!messageIdFromIsSet() && !rhs.messageIdFromIsSet()) || (messageIdFromIsSet() && rhs.messageIdFromIsSet() && getMessageIdFrom() == rhs.getMessageIdFrom()))
    
    ;
}

bool GetChatHistoryRequest::operator!=(const GetChatHistoryRequest& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const GetChatHistoryRequest& o)
{
    j = nlohmann::json::object();
    if(o.messageIdFromIsSet())
        j["messageIdFrom"] = o.m_MessageIdFrom;
    
}

void from_json(const nlohmann::json& j, GetChatHistoryRequest& o)
{
    if(j.find("messageIdFrom") != j.end())
    {
        j.at("messageIdFrom").get_to(o.m_MessageIdFrom);
        o.m_MessageIdFromIsSet = true;
    } 
    
}

int64_t GetChatHistoryRequest::getMessageIdFrom() const
{
    return m_MessageIdFrom;
}
void GetChatHistoryRequest::setMessageIdFrom(int64_t const value)
{
    m_MessageIdFrom = value;
    m_MessageIdFromIsSet = true;
}
bool GetChatHistoryRequest::messageIdFromIsSet() const
{
    return m_MessageIdFromIsSet;
}
void GetChatHistoryRequest::unsetMessageIdFrom()
{
    m_MessageIdFromIsSet = false;
}


} // namespace org::openapitools::server::model

