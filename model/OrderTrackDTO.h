/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrderTrackDTO.h
 *
 * Информация о трек-номере посылки (DBS).
 */

#ifndef OrderTrackDTO_H_
#define OrderTrackDTO_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Информация о трек-номере посылки (DBS).
/// </summary>
class  OrderTrackDTO 
{
public:
    OrderTrackDTO() = default;
    explicit OrderTrackDTO(boost::property_tree::ptree const& pt);
    virtual ~OrderTrackDTO() = default;

    OrderTrackDTO(const OrderTrackDTO& other) = default; // copy constructor
    OrderTrackDTO(OrderTrackDTO&& other) noexcept = default; // move constructor

    OrderTrackDTO& operator=(const OrderTrackDTO& other) = default; // copy assignment
    OrderTrackDTO& operator=(OrderTrackDTO&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// OrderTrackDTO members

    /// <summary>
    /// Трек‑номер посылки.
    /// </summary>
    std::string getTrackCode() const;
    void setTrackCode(std::string value);

    /// <summary>
    /// Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).
    /// </summary>
    int64_t getDeliveryServiceId() const;
    void setDeliveryServiceId(int64_t value);

protected:
    std::string m_TrackCode = "";
    int64_t m_DeliveryServiceId = 0L;
};

std::vector<OrderTrackDTO> createOrderTrackDTOVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<OrderTrackDTO>(const OrderTrackDTO& val) {
    return val.toPropertyTree();
}

template<>
inline OrderTrackDTO fromPt<OrderTrackDTO>(const boost::property_tree::ptree& pt) {
    OrderTrackDTO ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* OrderTrackDTO_H_ */
