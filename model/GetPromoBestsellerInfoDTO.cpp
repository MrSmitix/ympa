/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "GetPromoBestsellerInfoDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

GetPromoBestsellerInfoDTO::GetPromoBestsellerInfoDTO()
{
    m_Bestseller = false;
    m_EntryDeadline = "";
    m_EntryDeadlineIsSet = false;
    
}

void GetPromoBestsellerInfoDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool GetPromoBestsellerInfoDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool GetPromoBestsellerInfoDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "GetPromoBestsellerInfoDTO" : pathPrefix;

            
    return success;
}

bool GetPromoBestsellerInfoDTO::operator==(const GetPromoBestsellerInfoDTO& rhs) const
{
    return
    
    
    (isBestseller() == rhs.isBestseller())
     &&
    
    
    ((!entryDeadlineIsSet() && !rhs.entryDeadlineIsSet()) || (entryDeadlineIsSet() && rhs.entryDeadlineIsSet() && getEntryDeadline() == rhs.getEntryDeadline()))
    
    ;
}

bool GetPromoBestsellerInfoDTO::operator!=(const GetPromoBestsellerInfoDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const GetPromoBestsellerInfoDTO& o)
{
    j = nlohmann::json::object();
    j["bestseller"] = o.m_Bestseller;
    if(o.entryDeadlineIsSet())
        j["entryDeadline"] = o.m_EntryDeadline;
    
}

void from_json(const nlohmann::json& j, GetPromoBestsellerInfoDTO& o)
{
    j.at("bestseller").get_to(o.m_Bestseller);
    if(j.find("entryDeadline") != j.end())
    {
        j.at("entryDeadline").get_to(o.m_EntryDeadline);
        o.m_EntryDeadlineIsSet = true;
    } 
    
}

bool GetPromoBestsellerInfoDTO::isBestseller() const
{
    return m_Bestseller;
}
void GetPromoBestsellerInfoDTO::setBestseller(bool const value)
{
    m_Bestseller = value;
}
std::string GetPromoBestsellerInfoDTO::getEntryDeadline() const
{
    return m_EntryDeadline;
}
void GetPromoBestsellerInfoDTO::setEntryDeadline(std::string const& value)
{
    m_EntryDeadline = value;
    m_EntryDeadlineIsSet = true;
}
bool GetPromoBestsellerInfoDTO::entryDeadlineIsSet() const
{
    return m_EntryDeadlineIsSet;
}
void GetPromoBestsellerInfoDTO::unsetEntryDeadline()
{
    m_EntryDeadlineIsSet = false;
}


} // namespace org::openapitools::server::model

