/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ParcelBoxLabelDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

ParcelBoxLabelDTO::ParcelBoxLabelDTO()
{
    m_Url = "";
    m_SupplierName = "";
    m_DeliveryServiceName = "";
    m_OrderId = 0L;
    m_OrderNum = "";
    m_RecipientName = "";
    m_BoxId = 0L;
    m_FulfilmentId = "";
    m_Place = "";
    m_Weight = "";
    m_DeliveryServiceId = "";
    m_DeliveryAddress = "";
    m_DeliveryAddressIsSet = false;
    m_ShipmentDate = "";
    m_ShipmentDateIsSet = false;
    
}

void ParcelBoxLabelDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool ParcelBoxLabelDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool ParcelBoxLabelDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "ParcelBoxLabelDTO" : pathPrefix;

                                                        
    return success;
}

bool ParcelBoxLabelDTO::operator==(const ParcelBoxLabelDTO& rhs) const
{
    return
    
    
    (getUrl() == rhs.getUrl())
     &&
    
    (getSupplierName() == rhs.getSupplierName())
     &&
    
    (getDeliveryServiceName() == rhs.getDeliveryServiceName())
     &&
    
    (getOrderId() == rhs.getOrderId())
     &&
    
    (getOrderNum() == rhs.getOrderNum())
     &&
    
    (getRecipientName() == rhs.getRecipientName())
     &&
    
    (getBoxId() == rhs.getBoxId())
     &&
    
    (getFulfilmentId() == rhs.getFulfilmentId())
     &&
    
    (getPlace() == rhs.getPlace())
     &&
    
    (getWeight() == rhs.getWeight())
     &&
    
    (getDeliveryServiceId() == rhs.getDeliveryServiceId())
     &&
    
    
    ((!deliveryAddressIsSet() && !rhs.deliveryAddressIsSet()) || (deliveryAddressIsSet() && rhs.deliveryAddressIsSet() && getDeliveryAddress() == rhs.getDeliveryAddress())) &&
    
    
    ((!shipmentDateIsSet() && !rhs.shipmentDateIsSet()) || (shipmentDateIsSet() && rhs.shipmentDateIsSet() && getShipmentDate() == rhs.getShipmentDate()))
    
    ;
}

bool ParcelBoxLabelDTO::operator!=(const ParcelBoxLabelDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ParcelBoxLabelDTO& o)
{
    j = nlohmann::json::object();
    j["url"] = o.m_Url;
    j["supplierName"] = o.m_SupplierName;
    j["deliveryServiceName"] = o.m_DeliveryServiceName;
    j["orderId"] = o.m_OrderId;
    j["orderNum"] = o.m_OrderNum;
    j["recipientName"] = o.m_RecipientName;
    j["boxId"] = o.m_BoxId;
    j["fulfilmentId"] = o.m_FulfilmentId;
    j["place"] = o.m_Place;
    j["weight"] = o.m_Weight;
    j["deliveryServiceId"] = o.m_DeliveryServiceId;
    if(o.deliveryAddressIsSet())
        j["deliveryAddress"] = o.m_DeliveryAddress;
    if(o.shipmentDateIsSet())
        j["shipmentDate"] = o.m_ShipmentDate;
    
}

void from_json(const nlohmann::json& j, ParcelBoxLabelDTO& o)
{
    j.at("url").get_to(o.m_Url);
    j.at("supplierName").get_to(o.m_SupplierName);
    j.at("deliveryServiceName").get_to(o.m_DeliveryServiceName);
    j.at("orderId").get_to(o.m_OrderId);
    j.at("orderNum").get_to(o.m_OrderNum);
    j.at("recipientName").get_to(o.m_RecipientName);
    j.at("boxId").get_to(o.m_BoxId);
    j.at("fulfilmentId").get_to(o.m_FulfilmentId);
    j.at("place").get_to(o.m_Place);
    j.at("weight").get_to(o.m_Weight);
    j.at("deliveryServiceId").get_to(o.m_DeliveryServiceId);
    if(j.find("deliveryAddress") != j.end())
    {
        j.at("deliveryAddress").get_to(o.m_DeliveryAddress);
        o.m_DeliveryAddressIsSet = true;
    } 
    if(j.find("shipmentDate") != j.end())
    {
        j.at("shipmentDate").get_to(o.m_ShipmentDate);
        o.m_ShipmentDateIsSet = true;
    } 
    
}

std::string ParcelBoxLabelDTO::getUrl() const
{
    return m_Url;
}
void ParcelBoxLabelDTO::setUrl(std::string const& value)
{
    m_Url = value;
}
std::string ParcelBoxLabelDTO::getSupplierName() const
{
    return m_SupplierName;
}
void ParcelBoxLabelDTO::setSupplierName(std::string const& value)
{
    m_SupplierName = value;
}
std::string ParcelBoxLabelDTO::getDeliveryServiceName() const
{
    return m_DeliveryServiceName;
}
void ParcelBoxLabelDTO::setDeliveryServiceName(std::string const& value)
{
    m_DeliveryServiceName = value;
}
int64_t ParcelBoxLabelDTO::getOrderId() const
{
    return m_OrderId;
}
void ParcelBoxLabelDTO::setOrderId(int64_t const value)
{
    m_OrderId = value;
}
std::string ParcelBoxLabelDTO::getOrderNum() const
{
    return m_OrderNum;
}
void ParcelBoxLabelDTO::setOrderNum(std::string const& value)
{
    m_OrderNum = value;
}
std::string ParcelBoxLabelDTO::getRecipientName() const
{
    return m_RecipientName;
}
void ParcelBoxLabelDTO::setRecipientName(std::string const& value)
{
    m_RecipientName = value;
}
int64_t ParcelBoxLabelDTO::getBoxId() const
{
    return m_BoxId;
}
void ParcelBoxLabelDTO::setBoxId(int64_t const value)
{
    m_BoxId = value;
}
std::string ParcelBoxLabelDTO::getFulfilmentId() const
{
    return m_FulfilmentId;
}
void ParcelBoxLabelDTO::setFulfilmentId(std::string const& value)
{
    m_FulfilmentId = value;
}
std::string ParcelBoxLabelDTO::getPlace() const
{
    return m_Place;
}
void ParcelBoxLabelDTO::setPlace(std::string const& value)
{
    m_Place = value;
}
std::string ParcelBoxLabelDTO::getWeight() const
{
    return m_Weight;
}
void ParcelBoxLabelDTO::setWeight(std::string const& value)
{
    m_Weight = value;
}
std::string ParcelBoxLabelDTO::getDeliveryServiceId() const
{
    return m_DeliveryServiceId;
}
void ParcelBoxLabelDTO::setDeliveryServiceId(std::string const& value)
{
    m_DeliveryServiceId = value;
}
std::string ParcelBoxLabelDTO::getDeliveryAddress() const
{
    return m_DeliveryAddress;
}
void ParcelBoxLabelDTO::setDeliveryAddress(std::string const& value)
{
    m_DeliveryAddress = value;
    m_DeliveryAddressIsSet = true;
}
bool ParcelBoxLabelDTO::deliveryAddressIsSet() const
{
    return m_DeliveryAddressIsSet;
}
void ParcelBoxLabelDTO::unsetDeliveryAddress()
{
    m_DeliveryAddressIsSet = false;
}
std::string ParcelBoxLabelDTO::getShipmentDate() const
{
    return m_ShipmentDate;
}
void ParcelBoxLabelDTO::setShipmentDate(std::string const& value)
{
    m_ShipmentDate = value;
    m_ShipmentDateIsSet = true;
}
bool ParcelBoxLabelDTO::shipmentDateIsSet() const
{
    return m_ShipmentDateIsSet;
}
void ParcelBoxLabelDTO::unsetShipmentDate()
{
    m_ShipmentDateIsSet = false;
}


} // namespace org::openapitools::server::model

