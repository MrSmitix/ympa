/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrderCourierDTO.h
 *
 * Информация о курьере.
 */

#ifndef OrderCourierDTO_H_
#define OrderCourierDTO_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Информация о курьере.
/// </summary>
class  OrderCourierDTO
{
public:
    OrderCourierDTO();
    virtual ~OrderCourierDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const OrderCourierDTO& rhs) const;
    bool operator!=(const OrderCourierDTO& rhs) const;

    /////////////////////////////////////////////
    /// OrderCourierDTO members

    /// <summary>
    /// Полное имя курьера.
    /// </summary>
    std::string getFullName() const;
    void setFullName(std::string const& value);
    bool fullNameIsSet() const;
    void unsetFullName();
    /// <summary>
    /// Номер телефона курьера.
    /// </summary>
    std::string getPhone() const;
    void setPhone(std::string const& value);
    bool phoneIsSet() const;
    void unsetPhone();
    /// <summary>
    /// Добавочный номер телефона.
    /// </summary>
    std::string getPhoneExtension() const;
    void setPhoneExtension(std::string const& value);
    bool phoneExtensionIsSet() const;
    void unsetPhoneExtension();
    /// <summary>
    /// Номер транспортного средства.
    /// </summary>
    std::string getVehicleNumber() const;
    void setVehicleNumber(std::string const& value);
    bool vehicleNumberIsSet() const;
    void unsetVehicleNumber();
    /// <summary>
    /// Описание машины. Например, модель и цвет.
    /// </summary>
    std::string getVehicleDescription() const;
    void setVehicleDescription(std::string const& value);
    bool vehicleDescriptionIsSet() const;
    void unsetVehicleDescription();

    friend  void to_json(nlohmann::json& j, const OrderCourierDTO& o);
    friend  void from_json(const nlohmann::json& j, OrderCourierDTO& o);
protected:
    std::string m_FullName;
    bool m_FullNameIsSet;
    std::string m_Phone;
    bool m_PhoneIsSet;
    std::string m_PhoneExtension;
    bool m_PhoneExtensionIsSet;
    std::string m_VehicleNumber;
    bool m_VehicleNumberIsSet;
    std::string m_VehicleDescription;
    bool m_VehicleDescriptionIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* OrderCourierDTO_H_ */
