/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrderCourierDTO.h
 *
 * Информация о курьере.
 */

#ifndef OrderCourierDTO_H_
#define OrderCourierDTO_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Информация о курьере.
/// </summary>
class  OrderCourierDTO 
{
public:
    OrderCourierDTO() = default;
    explicit OrderCourierDTO(boost::property_tree::ptree const& pt);
    virtual ~OrderCourierDTO() = default;

    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// OrderCourierDTO members

    /// <summary>
    /// Полное имя курьера.
    /// </summary>
    std::string getFullName() const;
    void setFullName(std::string value);

    /// <summary>
    /// Номер телефона курьера.
    /// </summary>
    std::string getPhone() const;
    void setPhone(std::string value);

    /// <summary>
    /// Добавочный номер телефона.
    /// </summary>
    std::string getPhoneExtension() const;
    void setPhoneExtension(std::string value);

    /// <summary>
    /// Номер транспортного средства.
    /// </summary>
    std::string getVehicleNumber() const;
    void setVehicleNumber(std::string value);

    /// <summary>
    /// Описание машины. Например, модель и цвет.
    /// </summary>
    std::string getVehicleDescription() const;
    void setVehicleDescription(std::string value);

protected:
    //////////////////////////////////////
    // Override these for customization //
    //////////////////////////////////////

    virtual std::string toJsonString_internal(bool prettyJson = false);
    virtual void fromJsonString_internal(std::string const& jsonString);
    virtual boost::property_tree::ptree toPropertyTree_internal();
    virtual void fromPropertyTree_internal(boost::property_tree::ptree const& pt);


protected:
    std::string m_FullName = "";
    std::string m_Phone = "";
    std::string m_PhoneExtension = "";
    std::string m_VehicleNumber = "";
    std::string m_VehicleDescription = "";
};

std::vector<OrderCourierDTO> createOrderCourierDTOVectorFromJsonString(const std::string& json);

}
}
}
}

#endif /* OrderCourierDTO_H_ */
