/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "FeedIndexLogsOffersDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

FeedIndexLogsOffersDTO::FeedIndexLogsOffersDTO()
{
    m_RejectedCount = 0L;
    m_RejectedCountIsSet = false;
    m_TotalCount = 0L;
    m_TotalCountIsSet = false;
    
}

void FeedIndexLogsOffersDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool FeedIndexLogsOffersDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool FeedIndexLogsOffersDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "FeedIndexLogsOffersDTO" : pathPrefix;

            
    return success;
}

bool FeedIndexLogsOffersDTO::operator==(const FeedIndexLogsOffersDTO& rhs) const
{
    return
    
    
    
    ((!rejectedCountIsSet() && !rhs.rejectedCountIsSet()) || (rejectedCountIsSet() && rhs.rejectedCountIsSet() && getRejectedCount() == rhs.getRejectedCount())) &&
    
    
    ((!totalCountIsSet() && !rhs.totalCountIsSet()) || (totalCountIsSet() && rhs.totalCountIsSet() && getTotalCount() == rhs.getTotalCount()))
    
    ;
}

bool FeedIndexLogsOffersDTO::operator!=(const FeedIndexLogsOffersDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const FeedIndexLogsOffersDTO& o)
{
    j = nlohmann::json::object();
    if(o.rejectedCountIsSet())
        j["rejectedCount"] = o.m_RejectedCount;
    if(o.totalCountIsSet())
        j["totalCount"] = o.m_TotalCount;
    
}

void from_json(const nlohmann::json& j, FeedIndexLogsOffersDTO& o)
{
    if(j.find("rejectedCount") != j.end())
    {
        j.at("rejectedCount").get_to(o.m_RejectedCount);
        o.m_RejectedCountIsSet = true;
    } 
    if(j.find("totalCount") != j.end())
    {
        j.at("totalCount").get_to(o.m_TotalCount);
        o.m_TotalCountIsSet = true;
    } 
    
}

int64_t FeedIndexLogsOffersDTO::getRejectedCount() const
{
    return m_RejectedCount;
}
void FeedIndexLogsOffersDTO::setRejectedCount(int64_t const value)
{
    m_RejectedCount = value;
    m_RejectedCountIsSet = true;
}
bool FeedIndexLogsOffersDTO::rejectedCountIsSet() const
{
    return m_RejectedCountIsSet;
}
void FeedIndexLogsOffersDTO::unsetRejectedCount()
{
    m_RejectedCountIsSet = false;
}
int64_t FeedIndexLogsOffersDTO::getTotalCount() const
{
    return m_TotalCount;
}
void FeedIndexLogsOffersDTO::setTotalCount(int64_t const value)
{
    m_TotalCount = value;
    m_TotalCountIsSet = true;
}
bool FeedIndexLogsOffersDTO::totalCountIsSet() const
{
    return m_TotalCountIsSet;
}
void FeedIndexLogsOffersDTO::unsetTotalCount()
{
    m_TotalCountIsSet = false;
}


} // namespace org::openapitools::server::model

