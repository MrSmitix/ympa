/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OfferWeightDimensionsDTO.h
 *
 * Габариты упаковки и вес товара.  Если товар занимает несколько коробок, перед измерением размеров сложите их компактно.  ![Схема измерения многоместных грузов](../../_images/reference/boxes-measure.png) 
 */

#ifndef OfferWeightDimensionsDTO_H_
#define OfferWeightDimensionsDTO_H_



#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Габариты упаковки и вес товара.  Если товар занимает несколько коробок, перед измерением размеров сложите их компактно.  ![Схема измерения многоместных грузов](../../_images/reference/boxes-measure.png) 
/// </summary>
class  OfferWeightDimensionsDTO 
{
public:
    OfferWeightDimensionsDTO() = default;
    explicit OfferWeightDimensionsDTO(boost::property_tree::ptree const& pt);
    virtual ~OfferWeightDimensionsDTO() = default;

    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// OfferWeightDimensionsDTO members

    /// <summary>
    /// Длина упаковки в см. 
    /// </summary>
    double getLength() const;
    void setLength(double value);

    /// <summary>
    /// Ширина упаковки в см. 
    /// </summary>
    double getWidth() const;
    void setWidth(double value);

    /// <summary>
    /// Высота упаковки в см. 
    /// </summary>
    double getHeight() const;
    void setHeight(double value);

    /// <summary>
    /// Вес товара в кг с учетом упаковки (брутто). 
    /// </summary>
    double getWeight() const;
    void setWeight(double value);

protected:
    //////////////////////////////////////
    // Override these for customization //
    //////////////////////////////////////

    virtual std::string toJsonString_internal(bool prettyJson = false);
    virtual void fromJsonString_internal(std::string const& jsonString);
    virtual boost::property_tree::ptree toPropertyTree_internal();
    virtual void fromPropertyTree_internal(boost::property_tree::ptree const& pt);


protected:
    double m_Length = 0.0;
    double m_Width = 0.0;
    double m_Height = 0.0;
    double m_Weight = 0.0;
};

std::vector<OfferWeightDimensionsDTO> createOfferWeightDimensionsDTOVectorFromJsonString(const std::string& json);

}
}
}
}

#endif /* OfferWeightDimensionsDTO_H_ */
