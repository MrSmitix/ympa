/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GetModelsOffersResponse.h
 *
 * Ответ на запрос списка предложений для моделей.
 */

#ifndef GetModelsOffersResponse_H_
#define GetModelsOffersResponse_H_



#include "CurrencyType.h"
#include "EnrichedModelDTO.h"
#include <vector>
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "EnrichedModelsDTO.h"
#include "RegionalModelInfoDTO.h"
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Ответ на запрос списка предложений для моделей.
/// </summary>
class  GetModelsOffersResponse : public EnrichedModelsDTO, public RegionalModelInfoDTO
{
public:
    GetModelsOffersResponse() = default;
    explicit GetModelsOffersResponse(boost::property_tree::ptree const& pt);
    virtual ~GetModelsOffersResponse() = default;

    GetModelsOffersResponse(const GetModelsOffersResponse& other) = default; // copy constructor
    GetModelsOffersResponse(GetModelsOffersResponse&& other) noexcept = default; // move constructor

    GetModelsOffersResponse& operator=(const GetModelsOffersResponse& other) = default; // copy assignment
    GetModelsOffersResponse& operator=(GetModelsOffersResponse&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// GetModelsOffersResponse members

    /// <summary>
    /// Список моделей товаров.
    /// </summary>
    std::vector<EnrichedModelDTO> getModels() const;
    void setModels(std::vector<EnrichedModelDTO> value);

    /// <summary>
    /// 
    /// </summary>
    CurrencyType getCurrency() const;
    void setCurrency(CurrencyType value);

    /// <summary>
    /// Идентификатор региона, для которого выводится информация о предложениях модели (доставляемых в этот регион).  Информацию о регионе по идентификатору можно получить с помощью запроса [GET regions/{regionId}](../../reference/regions/searchRegionsById.md). 
    /// </summary>
    int64_t getRegionId() const;
    void setRegionId(int64_t value);

protected:
    std::vector<EnrichedModelDTO> m_Models;
    CurrencyType m_Currency = CurrencyType{};
    int64_t m_RegionId = 0L;
};

std::vector<GetModelsOffersResponse> createGetModelsOffersResponseVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<GetModelsOffersResponse>(const GetModelsOffersResponse& val) {
    return val.toPropertyTree();
}

template<>
inline GetModelsOffersResponse fromPt<GetModelsOffersResponse>(const boost::property_tree::ptree& pt) {
    GetModelsOffersResponse ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* GetModelsOffersResponse_H_ */
