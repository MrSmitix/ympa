/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OfferCardRecommendationDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

OfferCardRecommendationDTO::OfferCardRecommendationDTO()
{
    m_Percent = 0;
    m_PercentIsSet = false;
    
}

void OfferCardRecommendationDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool OfferCardRecommendationDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool OfferCardRecommendationDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "OfferCardRecommendationDTO" : pathPrefix;

             
    if (percentIsSet())
    {
        const int32_t& value = m_Percent;
        const std::string currentValuePath = _pathPrefix + ".percent";
                
        
        if (value < 0)
        {
            success = false;
            msg << currentValuePath << ": must be greater than or equal to 0;";
        }
        if (value >= 100)
        {
            success = false;
            msg << currentValuePath << ": must be less than 100;";
        }

    }
    
    return success;
}

bool OfferCardRecommendationDTO::operator==(const OfferCardRecommendationDTO& rhs) const
{
    return
    
    
    (getType() == rhs.getType())
     &&
    
    
    ((!percentIsSet() && !rhs.percentIsSet()) || (percentIsSet() && rhs.percentIsSet() && getPercent() == rhs.getPercent()))
    
    ;
}

bool OfferCardRecommendationDTO::operator!=(const OfferCardRecommendationDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const OfferCardRecommendationDTO& o)
{
    j = nlohmann::json::object();
    j["type"] = o.m_Type;
    if(o.percentIsSet())
        j["percent"] = o.m_Percent;
    
}

void from_json(const nlohmann::json& j, OfferCardRecommendationDTO& o)
{
    j.at("type").get_to(o.m_Type);
    if(j.find("percent") != j.end())
    {
        j.at("percent").get_to(o.m_Percent);
        o.m_PercentIsSet = true;
    } 
    
}

org::openapitools::server::model::OfferCardRecommendationType OfferCardRecommendationDTO::getType() const
{
    return m_Type;
}
void OfferCardRecommendationDTO::setType(org::openapitools::server::model::OfferCardRecommendationType const& value)
{
    m_Type = value;
}
int32_t OfferCardRecommendationDTO::getPercent() const
{
    return m_Percent;
}
void OfferCardRecommendationDTO::setPercent(int32_t const value)
{
    m_Percent = value;
    m_PercentIsSet = true;
}
bool OfferCardRecommendationDTO::percentIsSet() const
{
    return m_PercentIsSet;
}
void OfferCardRecommendationDTO::unsetPercent()
{
    m_PercentIsSet = false;
}


} // namespace org::openapitools::server::model

