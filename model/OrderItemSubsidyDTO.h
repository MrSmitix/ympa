/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrderItemSubsidyDTO.h
 *
 * Общее вознаграждение партнеру за все скидки на товар:  * по промокодам, купонам и акциям; * по баллам Плюса.  Передается в валюте заказа. 
 */

#ifndef OrderItemSubsidyDTO_H_
#define OrderItemSubsidyDTO_H_



#include "OrderItemSubsidyType.h"
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Общее вознаграждение партнеру за все скидки на товар:  * по промокодам, купонам и акциям; * по баллам Плюса.  Передается в валюте заказа. 
/// </summary>
class  OrderItemSubsidyDTO 
{
public:
    OrderItemSubsidyDTO() = default;
    explicit OrderItemSubsidyDTO(boost::property_tree::ptree const& pt);
    virtual ~OrderItemSubsidyDTO() = default;

    OrderItemSubsidyDTO(const OrderItemSubsidyDTO& other) = default; // copy constructor
    OrderItemSubsidyDTO(OrderItemSubsidyDTO&& other) noexcept = default; // move constructor

    OrderItemSubsidyDTO& operator=(const OrderItemSubsidyDTO& other) = default; // copy assignment
    OrderItemSubsidyDTO& operator=(OrderItemSubsidyDTO&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// OrderItemSubsidyDTO members

    /// <summary>
    /// 
    /// </summary>
    OrderItemSubsidyType getType() const;
    void setType(OrderItemSubsidyType value);

    /// <summary>
    /// Сумма субсидии.
    /// </summary>
    double getAmount() const;
    void setAmount(double value);

protected:
    OrderItemSubsidyType m_Type = OrderItemSubsidyType{};
    double m_Amount = 0.0;
};

std::vector<OrderItemSubsidyDTO> createOrderItemSubsidyDTOVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<OrderItemSubsidyDTO>(const OrderItemSubsidyDTO& val) {
    return val.toPropertyTree();
}

template<>
inline OrderItemSubsidyDTO fromPt<OrderItemSubsidyDTO>(const boost::property_tree::ptree& pt) {
    OrderItemSubsidyDTO ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* OrderItemSubsidyDTO_H_ */
