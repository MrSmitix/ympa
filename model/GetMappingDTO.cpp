/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "GetMappingDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

GetMappingDTO::GetMappingDTO()
{
    m_MarketSku = 0L;
    m_MarketSkuIsSet = false;
    m_MarketSkuName = "";
    m_MarketSkuNameIsSet = false;
    m_MarketModelId = 0L;
    m_MarketModelIdIsSet = false;
    m_MarketModelName = "";
    m_MarketModelNameIsSet = false;
    m_MarketCategoryId = 0L;
    m_MarketCategoryIdIsSet = false;
    m_MarketCategoryName = "";
    m_MarketCategoryNameIsSet = false;
    
}

void GetMappingDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool GetMappingDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool GetMappingDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "GetMappingDTO" : pathPrefix;

                            
    return success;
}

bool GetMappingDTO::operator==(const GetMappingDTO& rhs) const
{
    return
    
    
    
    ((!marketSkuIsSet() && !rhs.marketSkuIsSet()) || (marketSkuIsSet() && rhs.marketSkuIsSet() && getMarketSku() == rhs.getMarketSku())) &&
    
    
    ((!marketSkuNameIsSet() && !rhs.marketSkuNameIsSet()) || (marketSkuNameIsSet() && rhs.marketSkuNameIsSet() && getMarketSkuName() == rhs.getMarketSkuName())) &&
    
    
    ((!marketModelIdIsSet() && !rhs.marketModelIdIsSet()) || (marketModelIdIsSet() && rhs.marketModelIdIsSet() && getMarketModelId() == rhs.getMarketModelId())) &&
    
    
    ((!marketModelNameIsSet() && !rhs.marketModelNameIsSet()) || (marketModelNameIsSet() && rhs.marketModelNameIsSet() && getMarketModelName() == rhs.getMarketModelName())) &&
    
    
    ((!marketCategoryIdIsSet() && !rhs.marketCategoryIdIsSet()) || (marketCategoryIdIsSet() && rhs.marketCategoryIdIsSet() && getMarketCategoryId() == rhs.getMarketCategoryId())) &&
    
    
    ((!marketCategoryNameIsSet() && !rhs.marketCategoryNameIsSet()) || (marketCategoryNameIsSet() && rhs.marketCategoryNameIsSet() && getMarketCategoryName() == rhs.getMarketCategoryName()))
    
    ;
}

bool GetMappingDTO::operator!=(const GetMappingDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const GetMappingDTO& o)
{
    j = nlohmann::json::object();
    if(o.marketSkuIsSet())
        j["marketSku"] = o.m_MarketSku;
    if(o.marketSkuNameIsSet())
        j["marketSkuName"] = o.m_MarketSkuName;
    if(o.marketModelIdIsSet())
        j["marketModelId"] = o.m_MarketModelId;
    if(o.marketModelNameIsSet())
        j["marketModelName"] = o.m_MarketModelName;
    if(o.marketCategoryIdIsSet())
        j["marketCategoryId"] = o.m_MarketCategoryId;
    if(o.marketCategoryNameIsSet())
        j["marketCategoryName"] = o.m_MarketCategoryName;
    
}

void from_json(const nlohmann::json& j, GetMappingDTO& o)
{
    if(j.find("marketSku") != j.end())
    {
        j.at("marketSku").get_to(o.m_MarketSku);
        o.m_MarketSkuIsSet = true;
    } 
    if(j.find("marketSkuName") != j.end())
    {
        j.at("marketSkuName").get_to(o.m_MarketSkuName);
        o.m_MarketSkuNameIsSet = true;
    } 
    if(j.find("marketModelId") != j.end())
    {
        j.at("marketModelId").get_to(o.m_MarketModelId);
        o.m_MarketModelIdIsSet = true;
    } 
    if(j.find("marketModelName") != j.end())
    {
        j.at("marketModelName").get_to(o.m_MarketModelName);
        o.m_MarketModelNameIsSet = true;
    } 
    if(j.find("marketCategoryId") != j.end())
    {
        j.at("marketCategoryId").get_to(o.m_MarketCategoryId);
        o.m_MarketCategoryIdIsSet = true;
    } 
    if(j.find("marketCategoryName") != j.end())
    {
        j.at("marketCategoryName").get_to(o.m_MarketCategoryName);
        o.m_MarketCategoryNameIsSet = true;
    } 
    
}

int64_t GetMappingDTO::getMarketSku() const
{
    return m_MarketSku;
}
void GetMappingDTO::setMarketSku(int64_t const value)
{
    m_MarketSku = value;
    m_MarketSkuIsSet = true;
}
bool GetMappingDTO::marketSkuIsSet() const
{
    return m_MarketSkuIsSet;
}
void GetMappingDTO::unsetMarketSku()
{
    m_MarketSkuIsSet = false;
}
std::string GetMappingDTO::getMarketSkuName() const
{
    return m_MarketSkuName;
}
void GetMappingDTO::setMarketSkuName(std::string const& value)
{
    m_MarketSkuName = value;
    m_MarketSkuNameIsSet = true;
}
bool GetMappingDTO::marketSkuNameIsSet() const
{
    return m_MarketSkuNameIsSet;
}
void GetMappingDTO::unsetMarketSkuName()
{
    m_MarketSkuNameIsSet = false;
}
int64_t GetMappingDTO::getMarketModelId() const
{
    return m_MarketModelId;
}
void GetMappingDTO::setMarketModelId(int64_t const value)
{
    m_MarketModelId = value;
    m_MarketModelIdIsSet = true;
}
bool GetMappingDTO::marketModelIdIsSet() const
{
    return m_MarketModelIdIsSet;
}
void GetMappingDTO::unsetMarketModelId()
{
    m_MarketModelIdIsSet = false;
}
std::string GetMappingDTO::getMarketModelName() const
{
    return m_MarketModelName;
}
void GetMappingDTO::setMarketModelName(std::string const& value)
{
    m_MarketModelName = value;
    m_MarketModelNameIsSet = true;
}
bool GetMappingDTO::marketModelNameIsSet() const
{
    return m_MarketModelNameIsSet;
}
void GetMappingDTO::unsetMarketModelName()
{
    m_MarketModelNameIsSet = false;
}
int64_t GetMappingDTO::getMarketCategoryId() const
{
    return m_MarketCategoryId;
}
void GetMappingDTO::setMarketCategoryId(int64_t const value)
{
    m_MarketCategoryId = value;
    m_MarketCategoryIdIsSet = true;
}
bool GetMappingDTO::marketCategoryIdIsSet() const
{
    return m_MarketCategoryIdIsSet;
}
void GetMappingDTO::unsetMarketCategoryId()
{
    m_MarketCategoryIdIsSet = false;
}
std::string GetMappingDTO::getMarketCategoryName() const
{
    return m_MarketCategoryName;
}
void GetMappingDTO::setMarketCategoryName(std::string const& value)
{
    m_MarketCategoryName = value;
    m_MarketCategoryNameIsSet = true;
}
bool GetMappingDTO::marketCategoryNameIsSet() const
{
    return m_MarketCategoryNameIsSet;
}
void GetMappingDTO::unsetMarketCategoryName()
{
    m_MarketCategoryNameIsSet = false;
}


} // namespace org::openapitools::server::model

