/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GetPromoAssortmentInfoDTO.h
 *
 * Информация о товарах в акции.
 */

#ifndef GetPromoAssortmentInfoDTO_H_
#define GetPromoAssortmentInfoDTO_H_



#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Информация о товарах в акции.
/// </summary>
class  GetPromoAssortmentInfoDTO 
{
public:
    GetPromoAssortmentInfoDTO() = default;
    explicit GetPromoAssortmentInfoDTO(boost::property_tree::ptree const& pt);
    virtual ~GetPromoAssortmentInfoDTO() = default;

    GetPromoAssortmentInfoDTO(const GetPromoAssortmentInfoDTO& other) = default; // copy constructor
    GetPromoAssortmentInfoDTO(GetPromoAssortmentInfoDTO&& other) noexcept = default; // move constructor

    GetPromoAssortmentInfoDTO& operator=(const GetPromoAssortmentInfoDTO& other) = default; // copy assignment
    GetPromoAssortmentInfoDTO& operator=(GetPromoAssortmentInfoDTO&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// GetPromoAssortmentInfoDTO members

    /// <summary>
    /// Количество товаров, которые участвуют или участвовали в акции.  Учитываются только товары, которые были добавлены вручную.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index). 
    /// </summary>
    int32_t getActiveOffers() const;
    void setActiveOffers(int32_t value);

    /// <summary>
    /// Количество доступных товаров в акции.  Параметр возвращается только для текущих и будущих акций. 
    /// </summary>
    int32_t getPotentialOffers() const;
    void setPotentialOffers(int32_t value);

    /// <summary>
    /// Есть ли изменения в ассортименте, которые еще не применились. Сохранение изменений занимает некоторое время.  Параметр возвращается только для текущих и будущих акций. 
    /// </summary>
    bool isProcessing() const;
    void setProcessing(bool value);

protected:
    int32_t m_ActiveOffers = 0;
    int32_t m_PotentialOffers = 0;
    bool m_Processing = false;
};

std::vector<GetPromoAssortmentInfoDTO> createGetPromoAssortmentInfoDTOVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<GetPromoAssortmentInfoDTO>(const GetPromoAssortmentInfoDTO& val) {
    return val.toPropertyTree();
}

template<>
inline GetPromoAssortmentInfoDTO fromPt<GetPromoAssortmentInfoDTO>(const boost::property_tree::ptree& pt) {
    GetPromoAssortmentInfoDTO ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* GetPromoAssortmentInfoDTO_H_ */
