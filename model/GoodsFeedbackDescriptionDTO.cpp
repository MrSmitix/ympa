/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "GoodsFeedbackDescriptionDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

GoodsFeedbackDescriptionDTO::GoodsFeedbackDescriptionDTO()
{
    m_Advantages = "";
    m_AdvantagesIsSet = false;
    m_Disadvantages = "";
    m_DisadvantagesIsSet = false;
    m_Comment = "";
    m_CommentIsSet = false;
    
}

void GoodsFeedbackDescriptionDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool GoodsFeedbackDescriptionDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool GoodsFeedbackDescriptionDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "GoodsFeedbackDescriptionDTO" : pathPrefix;

                
    return success;
}

bool GoodsFeedbackDescriptionDTO::operator==(const GoodsFeedbackDescriptionDTO& rhs) const
{
    return
    
    
    
    ((!advantagesIsSet() && !rhs.advantagesIsSet()) || (advantagesIsSet() && rhs.advantagesIsSet() && getAdvantages() == rhs.getAdvantages())) &&
    
    
    ((!disadvantagesIsSet() && !rhs.disadvantagesIsSet()) || (disadvantagesIsSet() && rhs.disadvantagesIsSet() && getDisadvantages() == rhs.getDisadvantages())) &&
    
    
    ((!commentIsSet() && !rhs.commentIsSet()) || (commentIsSet() && rhs.commentIsSet() && getComment() == rhs.getComment()))
    
    ;
}

bool GoodsFeedbackDescriptionDTO::operator!=(const GoodsFeedbackDescriptionDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const GoodsFeedbackDescriptionDTO& o)
{
    j = nlohmann::json::object();
    if(o.advantagesIsSet())
        j["advantages"] = o.m_Advantages;
    if(o.disadvantagesIsSet())
        j["disadvantages"] = o.m_Disadvantages;
    if(o.commentIsSet())
        j["comment"] = o.m_Comment;
    
}

void from_json(const nlohmann::json& j, GoodsFeedbackDescriptionDTO& o)
{
    if(j.find("advantages") != j.end())
    {
        j.at("advantages").get_to(o.m_Advantages);
        o.m_AdvantagesIsSet = true;
    } 
    if(j.find("disadvantages") != j.end())
    {
        j.at("disadvantages").get_to(o.m_Disadvantages);
        o.m_DisadvantagesIsSet = true;
    } 
    if(j.find("comment") != j.end())
    {
        j.at("comment").get_to(o.m_Comment);
        o.m_CommentIsSet = true;
    } 
    
}

std::string GoodsFeedbackDescriptionDTO::getAdvantages() const
{
    return m_Advantages;
}
void GoodsFeedbackDescriptionDTO::setAdvantages(std::string const& value)
{
    m_Advantages = value;
    m_AdvantagesIsSet = true;
}
bool GoodsFeedbackDescriptionDTO::advantagesIsSet() const
{
    return m_AdvantagesIsSet;
}
void GoodsFeedbackDescriptionDTO::unsetAdvantages()
{
    m_AdvantagesIsSet = false;
}
std::string GoodsFeedbackDescriptionDTO::getDisadvantages() const
{
    return m_Disadvantages;
}
void GoodsFeedbackDescriptionDTO::setDisadvantages(std::string const& value)
{
    m_Disadvantages = value;
    m_DisadvantagesIsSet = true;
}
bool GoodsFeedbackDescriptionDTO::disadvantagesIsSet() const
{
    return m_DisadvantagesIsSet;
}
void GoodsFeedbackDescriptionDTO::unsetDisadvantages()
{
    m_DisadvantagesIsSet = false;
}
std::string GoodsFeedbackDescriptionDTO::getComment() const
{
    return m_Comment;
}
void GoodsFeedbackDescriptionDTO::setComment(std::string const& value)
{
    m_Comment = value;
    m_CommentIsSet = true;
}
bool GoodsFeedbackDescriptionDTO::commentIsSet() const
{
    return m_CommentIsSet;
}
void GoodsFeedbackDescriptionDTO::unsetComment()
{
    m_CommentIsSet = false;
}


} // namespace org::openapitools::server::model

