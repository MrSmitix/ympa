/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "FeedbackAuthorDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

FeedbackAuthorDTO::FeedbackAuthorDTO()
{
    m_Name = "";
    m_NameIsSet = false;
    m_RegionIsSet = false;
    
}

void FeedbackAuthorDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool FeedbackAuthorDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool FeedbackAuthorDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "FeedbackAuthorDTO" : pathPrefix;

            
    return success;
}

bool FeedbackAuthorDTO::operator==(const FeedbackAuthorDTO& rhs) const
{
    return
    
    
    
    ((!nameIsSet() && !rhs.nameIsSet()) || (nameIsSet() && rhs.nameIsSet() && getName() == rhs.getName())) &&
    
    
    ((!regionIsSet() && !rhs.regionIsSet()) || (regionIsSet() && rhs.regionIsSet() && getRegion() == rhs.getRegion()))
    
    ;
}

bool FeedbackAuthorDTO::operator!=(const FeedbackAuthorDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const FeedbackAuthorDTO& o)
{
    j = nlohmann::json::object();
    if(o.nameIsSet())
        j["name"] = o.m_Name;
    if(o.regionIsSet())
        j["region"] = o.m_Region;
    
}

void from_json(const nlohmann::json& j, FeedbackAuthorDTO& o)
{
    if(j.find("name") != j.end())
    {
        j.at("name").get_to(o.m_Name);
        o.m_NameIsSet = true;
    } 
    if(j.find("region") != j.end())
    {
        j.at("region").get_to(o.m_Region);
        o.m_RegionIsSet = true;
    } 
    
}

std::string FeedbackAuthorDTO::getName() const
{
    return m_Name;
}
void FeedbackAuthorDTO::setName(std::string const& value)
{
    m_Name = value;
    m_NameIsSet = true;
}
bool FeedbackAuthorDTO::nameIsSet() const
{
    return m_NameIsSet;
}
void FeedbackAuthorDTO::unsetName()
{
    m_NameIsSet = false;
}
org::openapitools::server::model::RegionDTO FeedbackAuthorDTO::getRegion() const
{
    return m_Region;
}
void FeedbackAuthorDTO::setRegion(org::openapitools::server::model::RegionDTO const& value)
{
    m_Region = value;
    m_RegionIsSet = true;
}
bool FeedbackAuthorDTO::regionIsSet() const
{
    return m_RegionIsSet;
}
void FeedbackAuthorDTO::unsetRegion()
{
    m_RegionIsSet = false;
}


} // namespace org::openapitools::server::model

