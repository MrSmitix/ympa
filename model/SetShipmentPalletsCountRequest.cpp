/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "SetShipmentPalletsCountRequest.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

SetShipmentPalletsCountRequest::SetShipmentPalletsCountRequest()
{
    m_PlacesCount = 0;
    
}

void SetShipmentPalletsCountRequest::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool SetShipmentPalletsCountRequest::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool SetShipmentPalletsCountRequest::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "SetShipmentPalletsCountRequest" : pathPrefix;

         
    
    /* PlacesCount */ {
        const int32_t& value = m_PlacesCount;
        const std::string currentValuePath = _pathPrefix + ".placesCount";
                
        
        if (value < 0)
        {
            success = false;
            msg << currentValuePath << ": must be greater than or equal to 0;";
        }

    }
    
    return success;
}

bool SetShipmentPalletsCountRequest::operator==(const SetShipmentPalletsCountRequest& rhs) const
{
    return
    
    
    (getPlacesCount() == rhs.getPlacesCount())
    
    
    ;
}

bool SetShipmentPalletsCountRequest::operator!=(const SetShipmentPalletsCountRequest& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const SetShipmentPalletsCountRequest& o)
{
    j = nlohmann::json::object();
    j["placesCount"] = o.m_PlacesCount;
    
}

void from_json(const nlohmann::json& j, SetShipmentPalletsCountRequest& o)
{
    j.at("placesCount").get_to(o.m_PlacesCount);
    
}

int32_t SetShipmentPalletsCountRequest::getPlacesCount() const
{
    return m_PlacesCount;
}
void SetShipmentPalletsCountRequest::setPlacesCount(int32_t const value)
{
    m_PlacesCount = value;
}


} // namespace org::openapitools::server::model

