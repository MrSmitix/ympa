/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BaseCampaignOfferDTO.h
 *
 * Информация о новой цене на товар.
 */

#ifndef BaseCampaignOfferDTO_H_
#define BaseCampaignOfferDTO_H_



#include <string>
#include "QuantumDTO.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Информация о новой цене на товар.
/// </summary>
class  BaseCampaignOfferDTO 
{
public:
    BaseCampaignOfferDTO() = default;
    explicit BaseCampaignOfferDTO(boost::property_tree::ptree const& pt);
    virtual ~BaseCampaignOfferDTO() = default;

    BaseCampaignOfferDTO(const BaseCampaignOfferDTO& other) = default; // copy constructor
    BaseCampaignOfferDTO(BaseCampaignOfferDTO&& other) noexcept = default; // move constructor

    BaseCampaignOfferDTO& operator=(const BaseCampaignOfferDTO& other) = default; // copy assignment
    BaseCampaignOfferDTO& operator=(BaseCampaignOfferDTO&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// BaseCampaignOfferDTO members

    /// <summary>
    /// Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
    /// </summary>
    std::string getOfferId() const;
    void setOfferId(std::string value);

    /// <summary>
    /// 
    /// </summary>
    QuantumDTO getQuantum() const;
    void setQuantum(QuantumDTO value);

    /// <summary>
    /// Есть ли товар в продаже. 
    /// </summary>
    bool isAvailable() const;
    void setAvailable(bool value);

protected:
    std::string m_OfferId = "";
    QuantumDTO m_Quantum;
    bool m_Available = false;
};

std::vector<BaseCampaignOfferDTO> createBaseCampaignOfferDTOVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<BaseCampaignOfferDTO>(const BaseCampaignOfferDTO& val) {
    return val.toPropertyTree();
}

template<>
inline BaseCampaignOfferDTO fromPt<BaseCampaignOfferDTO>(const boost::property_tree::ptree& pt) {
    BaseCampaignOfferDTO ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* BaseCampaignOfferDTO_H_ */
