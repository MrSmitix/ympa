/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrdersStatsPriceDTO.h
 *
 * Цена или скидки на товар.
 */

#ifndef OrdersStatsPriceDTO_H_
#define OrdersStatsPriceDTO_H_


#include "OrdersStatsPriceType.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Цена или скидки на товар.
/// </summary>
class  OrdersStatsPriceDTO
{
public:
    OrdersStatsPriceDTO();
    virtual ~OrdersStatsPriceDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const OrdersStatsPriceDTO& rhs) const;
    bool operator!=(const OrdersStatsPriceDTO& rhs) const;

    /////////////////////////////////////////////
    /// OrdersStatsPriceDTO members

    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::OrdersStatsPriceType getType() const;
    void setType(org::openapitools::server::model::OrdersStatsPriceType const& value);
    bool typeIsSet() const;
    void unsetType();
    /// <summary>
    /// Цена или скидка на единицу товара в заказе. Указана в рублях. Точность — два знака после запятой. 
    /// </summary>
    double getCostPerItem() const;
    void setCostPerItem(double const value);
    bool costPerItemIsSet() const;
    void unsetCostPerItem();
    /// <summary>
    /// Суммарная цена или скидка на все единицы товара в заказе. Указана в рублях. Точность — два знака после запятой. 
    /// </summary>
    double getTotal() const;
    void setTotal(double const value);
    bool totalIsSet() const;
    void unsetTotal();

    friend  void to_json(nlohmann::json& j, const OrdersStatsPriceDTO& o);
    friend  void from_json(const nlohmann::json& j, OrdersStatsPriceDTO& o);
protected:
    org::openapitools::server::model::OrdersStatsPriceType m_Type;
    bool m_TypeIsSet;
    double m_CostPerItem;
    bool m_CostPerItemIsSet;
    double m_Total;
    bool m_TotalIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* OrdersStatsPriceDTO_H_ */
