/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrderDeliveryDatesDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

OrderDeliveryDatesDTO::OrderDeliveryDatesDTO()
{
    m_FromDate = "";
    m_FromDateIsSet = false;
    m_ToDate = "";
    m_ToDateIsSet = false;
    m_FromTime = "";
    m_FromTimeIsSet = false;
    m_ToTime = "";
    m_ToTimeIsSet = false;
    m_RealDeliveryDate = "";
    m_RealDeliveryDateIsSet = false;
    
}

void OrderDeliveryDatesDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool OrderDeliveryDatesDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool OrderDeliveryDatesDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "OrderDeliveryDatesDTO" : pathPrefix;

                        
    return success;
}

bool OrderDeliveryDatesDTO::operator==(const OrderDeliveryDatesDTO& rhs) const
{
    return
    
    
    
    ((!fromDateIsSet() && !rhs.fromDateIsSet()) || (fromDateIsSet() && rhs.fromDateIsSet() && getFromDate() == rhs.getFromDate())) &&
    
    
    ((!toDateIsSet() && !rhs.toDateIsSet()) || (toDateIsSet() && rhs.toDateIsSet() && getToDate() == rhs.getToDate())) &&
    
    
    ((!fromTimeIsSet() && !rhs.fromTimeIsSet()) || (fromTimeIsSet() && rhs.fromTimeIsSet() && getFromTime() == rhs.getFromTime())) &&
    
    
    ((!toTimeIsSet() && !rhs.toTimeIsSet()) || (toTimeIsSet() && rhs.toTimeIsSet() && getToTime() == rhs.getToTime())) &&
    
    
    ((!realDeliveryDateIsSet() && !rhs.realDeliveryDateIsSet()) || (realDeliveryDateIsSet() && rhs.realDeliveryDateIsSet() && getRealDeliveryDate() == rhs.getRealDeliveryDate()))
    
    ;
}

bool OrderDeliveryDatesDTO::operator!=(const OrderDeliveryDatesDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const OrderDeliveryDatesDTO& o)
{
    j = nlohmann::json::object();
    if(o.fromDateIsSet())
        j["fromDate"] = o.m_FromDate;
    if(o.toDateIsSet())
        j["toDate"] = o.m_ToDate;
    if(o.fromTimeIsSet())
        j["fromTime"] = o.m_FromTime;
    if(o.toTimeIsSet())
        j["toTime"] = o.m_ToTime;
    if(o.realDeliveryDateIsSet())
        j["realDeliveryDate"] = o.m_RealDeliveryDate;
    
}

void from_json(const nlohmann::json& j, OrderDeliveryDatesDTO& o)
{
    if(j.find("fromDate") != j.end())
    {
        j.at("fromDate").get_to(o.m_FromDate);
        o.m_FromDateIsSet = true;
    } 
    if(j.find("toDate") != j.end())
    {
        j.at("toDate").get_to(o.m_ToDate);
        o.m_ToDateIsSet = true;
    } 
    if(j.find("fromTime") != j.end())
    {
        j.at("fromTime").get_to(o.m_FromTime);
        o.m_FromTimeIsSet = true;
    } 
    if(j.find("toTime") != j.end())
    {
        j.at("toTime").get_to(o.m_ToTime);
        o.m_ToTimeIsSet = true;
    } 
    if(j.find("realDeliveryDate") != j.end())
    {
        j.at("realDeliveryDate").get_to(o.m_RealDeliveryDate);
        o.m_RealDeliveryDateIsSet = true;
    } 
    
}

std::string OrderDeliveryDatesDTO::getFromDate() const
{
    return m_FromDate;
}
void OrderDeliveryDatesDTO::setFromDate(std::string const& value)
{
    m_FromDate = value;
    m_FromDateIsSet = true;
}
bool OrderDeliveryDatesDTO::fromDateIsSet() const
{
    return m_FromDateIsSet;
}
void OrderDeliveryDatesDTO::unsetFromDate()
{
    m_FromDateIsSet = false;
}
std::string OrderDeliveryDatesDTO::getToDate() const
{
    return m_ToDate;
}
void OrderDeliveryDatesDTO::setToDate(std::string const& value)
{
    m_ToDate = value;
    m_ToDateIsSet = true;
}
bool OrderDeliveryDatesDTO::toDateIsSet() const
{
    return m_ToDateIsSet;
}
void OrderDeliveryDatesDTO::unsetToDate()
{
    m_ToDateIsSet = false;
}
std::string OrderDeliveryDatesDTO::getFromTime() const
{
    return m_FromTime;
}
void OrderDeliveryDatesDTO::setFromTime(std::string const& value)
{
    m_FromTime = value;
    m_FromTimeIsSet = true;
}
bool OrderDeliveryDatesDTO::fromTimeIsSet() const
{
    return m_FromTimeIsSet;
}
void OrderDeliveryDatesDTO::unsetFromTime()
{
    m_FromTimeIsSet = false;
}
std::string OrderDeliveryDatesDTO::getToTime() const
{
    return m_ToTime;
}
void OrderDeliveryDatesDTO::setToTime(std::string const& value)
{
    m_ToTime = value;
    m_ToTimeIsSet = true;
}
bool OrderDeliveryDatesDTO::toTimeIsSet() const
{
    return m_ToTimeIsSet;
}
void OrderDeliveryDatesDTO::unsetToTime()
{
    m_ToTimeIsSet = false;
}
std::string OrderDeliveryDatesDTO::getRealDeliveryDate() const
{
    return m_RealDeliveryDate;
}
void OrderDeliveryDatesDTO::setRealDeliveryDate(std::string const& value)
{
    m_RealDeliveryDate = value;
    m_RealDeliveryDateIsSet = true;
}
bool OrderDeliveryDatesDTO::realDeliveryDateIsSet() const
{
    return m_RealDeliveryDateIsSet;
}
void OrderDeliveryDatesDTO::unsetRealDeliveryDate()
{
    m_RealDeliveryDateIsSet = false;
}


} // namespace org::openapitools::server::model

