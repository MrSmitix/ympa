/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrderItemsModificationResultDTO.h
 *
 * Краткие сведения о промаркированных товарах. Параметр возвращается, если ответ &#x60;OK&#x60;. 
 */

#ifndef OrderItemsModificationResultDTO_H_
#define OrderItemsModificationResultDTO_H_



#include <vector>
#include "BriefOrderItemDTO.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Краткие сведения о промаркированных товарах. Параметр возвращается, если ответ &#x60;OK&#x60;. 
/// </summary>
class  OrderItemsModificationResultDTO 
{
public:
    OrderItemsModificationResultDTO() = default;
    explicit OrderItemsModificationResultDTO(boost::property_tree::ptree const& pt);
    virtual ~OrderItemsModificationResultDTO() = default;

    OrderItemsModificationResultDTO(const OrderItemsModificationResultDTO& other) = default; // copy constructor
    OrderItemsModificationResultDTO(OrderItemsModificationResultDTO&& other) noexcept = default; // move constructor

    OrderItemsModificationResultDTO& operator=(const OrderItemsModificationResultDTO& other) = default; // copy assignment
    OrderItemsModificationResultDTO& operator=(OrderItemsModificationResultDTO&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// OrderItemsModificationResultDTO members

    /// <summary>
    /// Список позиций в заказе, подлежащих маркировке.
    /// </summary>
    std::vector<BriefOrderItemDTO> getItems() const;
    void setItems(std::vector<BriefOrderItemDTO> value);

protected:
    std::vector<BriefOrderItemDTO> m_Items;
};

std::vector<OrderItemsModificationResultDTO> createOrderItemsModificationResultDTOVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<OrderItemsModificationResultDTO>(const OrderItemsModificationResultDTO& val) {
    return val.toPropertyTree();
}

template<>
inline OrderItemsModificationResultDTO fromPt<OrderItemsModificationResultDTO>(const boost::property_tree::ptree& pt) {
    OrderItemsModificationResultDTO ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* OrderItemsModificationResultDTO_H_ */
