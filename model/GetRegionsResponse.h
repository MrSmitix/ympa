/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GetRegionsResponse.h
 *
 * 
 */

#ifndef GetRegionsResponse_H_
#define GetRegionsResponse_H_



#include "ForwardScrollingPagerDTO.h"
#include "RegionDTO.h"
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  GetRegionsResponse 
{
public:
    GetRegionsResponse() = default;
    explicit GetRegionsResponse(boost::property_tree::ptree const& pt);
    virtual ~GetRegionsResponse() = default;

    GetRegionsResponse(const GetRegionsResponse& other) = default; // copy constructor
    GetRegionsResponse(GetRegionsResponse&& other) noexcept = default; // move constructor

    GetRegionsResponse& operator=(const GetRegionsResponse& other) = default; // copy assignment
    GetRegionsResponse& operator=(GetRegionsResponse&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// GetRegionsResponse members

    /// <summary>
    /// Регион доставки.
    /// </summary>
    std::vector<RegionDTO> getRegions() const;
    void setRegions(std::vector<RegionDTO> value);

    /// <summary>
    /// 
    /// </summary>
    ForwardScrollingPagerDTO getPaging() const;
    void setPaging(ForwardScrollingPagerDTO value);

protected:
    std::vector<RegionDTO> m_Regions;
    ForwardScrollingPagerDTO m_Paging;
};

std::vector<GetRegionsResponse> createGetRegionsResponseVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<GetRegionsResponse>(const GetRegionsResponse& val) {
    return val.toPropertyTree();
}

template<>
inline GetRegionsResponse fromPt<GetRegionsResponse>(const boost::property_tree::ptree& pt) {
    GetRegionsResponse ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* GetRegionsResponse_H_ */
