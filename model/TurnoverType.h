/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * TurnoverType.h
 *
 * Оценка оборачиваемости.  |enum|Диапазон оборачиваемости|Комментарий| |-|-|-| |&#x60;LOW&#x60;|&#x60;turnoverDays&#x60; ≥ 120|| |&#x60;ALMOST_LOW&#x60;|100 ≤ &#x60;turnoverDays&#x60; &lt; 120|| |&#x60;HIGH&#x60;|45 ≤ &#x60;turnoverDays&#x60; &lt; 100|| |&#x60;VERY_HIGH&#x60;|0 ≤ &#x60;turnoverDays&#x60; &lt; 45|| |&#x60;NO_SALES&#x60;|—|Продаж нет.| |&#x60;FREE_STORE&#x60;|Любое значение.|Товары этой категории сейчас хранятся бесплатно.| 
 */

#ifndef TurnoverType_H_
#define TurnoverType_H_



#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Оценка оборачиваемости.  |enum|Диапазон оборачиваемости|Комментарий| |-|-|-| |&#x60;LOW&#x60;|&#x60;turnoverDays&#x60; ≥ 120|| |&#x60;ALMOST_LOW&#x60;|100 ≤ &#x60;turnoverDays&#x60; &lt; 120|| |&#x60;HIGH&#x60;|45 ≤ &#x60;turnoverDays&#x60; &lt; 100|| |&#x60;VERY_HIGH&#x60;|0 ≤ &#x60;turnoverDays&#x60; &lt; 45|| |&#x60;NO_SALES&#x60;|—|Продаж нет.| |&#x60;FREE_STORE&#x60;|Любое значение.|Товары этой категории сейчас хранятся бесплатно.| 
/// </summary>
class  TurnoverType 
{
public:
    TurnoverType() = default;
    explicit TurnoverType(boost::property_tree::ptree const& pt);
    virtual ~TurnoverType() = default;

    TurnoverType(const TurnoverType& other) = default; // copy constructor
    TurnoverType(TurnoverType&& other) noexcept = default; // move constructor

    TurnoverType& operator=(const TurnoverType& other) = default; // copy assignment
    TurnoverType& operator=(TurnoverType&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    std::string toString() const;
    void fromString(const std::string& str);

    /////////////////////////////////////////////
    /// TurnoverType members
    std::string getEnumValue() const;
    void setEnumValue(const std::string& val);

protected:
    std::string m_TurnoverTypeEnumValue;
};

std::vector<TurnoverType> createTurnoverTypeVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<TurnoverType>(const TurnoverType& val) {
    return val.toPropertyTree();
}

template<>
inline TurnoverType fromPt<TurnoverType>(const boost::property_tree::ptree& pt) {
    TurnoverType ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* TurnoverType_H_ */
