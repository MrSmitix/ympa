/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * UpdatePromoOffersResultDTO.h
 *
 * Ошибки и предупреждения, которые появились при добавлении товаров в акцию.
 */

#ifndef UpdatePromoOffersResultDTO_H_
#define UpdatePromoOffersResultDTO_H_


#include "RejectedPromoOfferUpdateDTO.h"
#include "WarningPromoOfferUpdateDTO.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Ошибки и предупреждения, которые появились при добавлении товаров в акцию.
/// </summary>
class  UpdatePromoOffersResultDTO
{
public:
    UpdatePromoOffersResultDTO();
    virtual ~UpdatePromoOffersResultDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const UpdatePromoOffersResultDTO& rhs) const;
    bool operator!=(const UpdatePromoOffersResultDTO& rhs) const;

    /////////////////////////////////////////////
    /// UpdatePromoOffersResultDTO members

    /// <summary>
    /// Изменения, которые были отклонены.  Возвращается, только если есть отклоненные изменения. 
    /// </summary>
    std::vector<org::openapitools::server::model::RejectedPromoOfferUpdateDTO> getRejectedOffers() const;
    void setRejectedOffers(std::vector<org::openapitools::server::model::RejectedPromoOfferUpdateDTO> const& value);
    bool rejectedOffersIsSet() const;
    void unsetRejectedOffers();
    /// <summary>
    /// Изменения, по которым есть предупреждения. Они информируют о возможных проблемах. Информация о товарах обновится.  Возвращается, только если есть предупреждения. 
    /// </summary>
    std::vector<org::openapitools::server::model::WarningPromoOfferUpdateDTO> getWarningOffers() const;
    void setWarningOffers(std::vector<org::openapitools::server::model::WarningPromoOfferUpdateDTO> const& value);
    bool warningOffersIsSet() const;
    void unsetWarningOffers();

    friend  void to_json(nlohmann::json& j, const UpdatePromoOffersResultDTO& o);
    friend  void from_json(const nlohmann::json& j, UpdatePromoOffersResultDTO& o);
protected:
    std::vector<org::openapitools::server::model::RejectedPromoOfferUpdateDTO> m_RejectedOffers;
    bool m_RejectedOffersIsSet;
    std::vector<org::openapitools::server::model::WarningPromoOfferUpdateDTO> m_WarningOffers;
    bool m_WarningOffersIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* UpdatePromoOffersResultDTO_H_ */
