/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * DeletePromoOffersResultDTO.h
 *
 * Результат удаления товаров из акции.  Возвращается, только если в запросе был передан параметр &#x60;offerIds&#x60;. 
 */

#ifndef DeletePromoOffersResultDTO_H_
#define DeletePromoOffersResultDTO_H_


#include "RejectedPromoOfferDeleteDTO.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Результат удаления товаров из акции.  Возвращается, только если в запросе был передан параметр &#x60;offerIds&#x60;. 
/// </summary>
class  DeletePromoOffersResultDTO
{
public:
    DeletePromoOffersResultDTO();
    virtual ~DeletePromoOffersResultDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const DeletePromoOffersResultDTO& rhs) const;
    bool operator!=(const DeletePromoOffersResultDTO& rhs) const;

    /////////////////////////////////////////////
    /// DeletePromoOffersResultDTO members

    /// <summary>
    /// Товары, при удалении которых появились ошибки.  Возвращается, только если есть такие товары. 
    /// </summary>
    std::vector<org::openapitools::server::model::RejectedPromoOfferDeleteDTO> getRejectedOffers() const;
    void setRejectedOffers(std::vector<org::openapitools::server::model::RejectedPromoOfferDeleteDTO> const& value);
    bool rejectedOffersIsSet() const;
    void unsetRejectedOffers();

    friend  void to_json(nlohmann::json& j, const DeletePromoOffersResultDTO& o);
    friend  void from_json(const nlohmann::json& j, DeletePromoOffersResultDTO& o);
protected:
    std::vector<org::openapitools::server::model::RejectedPromoOfferDeleteDTO> m_RejectedOffers;
    bool m_RejectedOffersIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* DeletePromoOffersResultDTO_H_ */
