/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * DocumentDTO.h
 *
 * Информация о документе.
 */

#ifndef DocumentDTO_H_
#define DocumentDTO_H_



#include <string>
#include "OrderDocumentStatusType.h"
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Информация о документе.
/// </summary>
class  DocumentDTO 
{
public:
    DocumentDTO() = default;
    explicit DocumentDTO(boost::property_tree::ptree const& pt);
    virtual ~DocumentDTO() = default;

    DocumentDTO(const DocumentDTO& other) = default; // copy constructor
    DocumentDTO(DocumentDTO&& other) noexcept = default; // move constructor

    DocumentDTO& operator=(const DocumentDTO& other) = default; // copy assignment
    DocumentDTO& operator=(DocumentDTO&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// DocumentDTO members

    /// <summary>
    /// 
    /// </summary>
    OrderDocumentStatusType getStatus() const;
    void setStatus(OrderDocumentStatusType value);

    /// <summary>
    /// Номер документа.
    /// </summary>
    std::string getNumber() const;
    void setNumber(std::string value);

    /// <summary>
    /// Дата создания документа.
    /// </summary>
    std::string getDate() const;
    void setDate(std::string value);

protected:
    OrderDocumentStatusType m_Status = OrderDocumentStatusType{};
    std::string m_number = "";
    std::string m_date = "";
};

std::vector<DocumentDTO> createDocumentDTOVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<DocumentDTO>(const DocumentDTO& val) {
    return val.toPropertyTree();
}

template<>
inline DocumentDTO fromPt<DocumentDTO>(const boost::property_tree::ptree& pt) {
    DocumentDTO ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* DocumentDTO_H_ */
