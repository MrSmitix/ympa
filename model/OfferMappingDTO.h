/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OfferMappingDTO.h
 *
 * Информация о текущей карточке товара на Маркете.
 */

#ifndef OfferMappingDTO_H_
#define OfferMappingDTO_H_


#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Информация о текущей карточке товара на Маркете.
/// </summary>
class  OfferMappingDTO
{
public:
    OfferMappingDTO();
    virtual ~OfferMappingDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const OfferMappingDTO& rhs) const;
    bool operator!=(const OfferMappingDTO& rhs) const;

    /////////////////////////////////////////////
    /// OfferMappingDTO members

    /// <summary>
    /// SKU на Маркете.
    /// </summary>
    int64_t getMarketSku() const;
    void setMarketSku(int64_t const value);
    bool marketSkuIsSet() const;
    void unsetMarketSku();
    /// <summary>
    /// Идентификатор модели для текущей карточки товара на Маркете.  Например, две лопатки разных цветов имеют разные SKU на Маркете (параметр &#x60;marketSku&#x60;), но одинаковый идентификатор модели товара. 
    /// </summary>
    int64_t getModelId() const;
    void setModelId(int64_t const value);
    bool modelIdIsSet() const;
    void unsetModelId();
    /// <summary>
    /// Идентификатор категории для текущей карточки товара на Маркете.
    /// </summary>
    int64_t getCategoryId() const;
    void setCategoryId(int64_t const value);
    bool categoryIdIsSet() const;
    void unsetCategoryId();

    friend  void to_json(nlohmann::json& j, const OfferMappingDTO& o);
    friend  void from_json(const nlohmann::json& j, OfferMappingDTO& o);
protected:
    int64_t m_MarketSku;
    bool m_MarketSkuIsSet;
    int64_t m_ModelId;
    bool m_ModelIdIsSet;
    int64_t m_CategoryId;
    bool m_CategoryIdIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* OfferMappingDTO_H_ */
