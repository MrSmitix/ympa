/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ExtensionShipmentDTO.h
 *
 * Информация об отгрузке.
 */

#ifndef ExtensionShipmentDTO_H_
#define ExtensionShipmentDTO_H_


#include "ShipmentStatusChangeDTO.h"
#include "ShipmentActionType.h"
#include <set>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Информация об отгрузке.
/// </summary>
class  ExtensionShipmentDTO
{
public:
    ExtensionShipmentDTO();
    virtual ~ExtensionShipmentDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const ExtensionShipmentDTO& rhs) const;
    bool operator!=(const ExtensionShipmentDTO& rhs) const;

    /////////////////////////////////////////////
    /// ExtensionShipmentDTO members

    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::ShipmentStatusChangeDTO getCurrentStatus() const;
    void setCurrentStatus(org::openapitools::server::model::ShipmentStatusChangeDTO const& value);
    bool currentStatusIsSet() const;
    void unsetCurrentStatus();
    /// <summary>
    /// Доступные действия над отгрузкой.
    /// </summary>
    std::set<org::openapitools::server::model::ShipmentActionType> getAvailableActions() const;
    void setAvailableActions(std::set<org::openapitools::server::model::ShipmentActionType> const& value);

    friend  void to_json(nlohmann::json& j, const ExtensionShipmentDTO& o);
    friend  void from_json(const nlohmann::json& j, ExtensionShipmentDTO& o);
protected:
    org::openapitools::server::model::ShipmentStatusChangeDTO m_CurrentStatus;
    bool m_CurrentStatusIsSet;
    std::set<org::openapitools::server::model::ShipmentActionType> m_AvailableActions;

    
};

} // namespace org::openapitools::server::model

#endif /* ExtensionShipmentDTO_H_ */
