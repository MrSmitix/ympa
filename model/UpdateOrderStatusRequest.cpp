/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "UpdateOrderStatusRequest.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

UpdateOrderStatusRequest::UpdateOrderStatusRequest()
{
    
}

void UpdateOrderStatusRequest::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool UpdateOrderStatusRequest::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool UpdateOrderStatusRequest::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "UpdateOrderStatusRequest" : pathPrefix;

        
    if (!m_Order.validate(msg, _pathPrefix + ".order")) {
        msg << _pathPrefix << ": Order is invalid;";
        success = false;
    }
    return success;
}

bool UpdateOrderStatusRequest::operator==(const UpdateOrderStatusRequest& rhs) const
{
    return
    
    
    (getOrder() == rhs.getOrder())
    
    
    ;
}

bool UpdateOrderStatusRequest::operator!=(const UpdateOrderStatusRequest& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const UpdateOrderStatusRequest& o)
{
    j = nlohmann::json::object();
    j["order"] = o.m_Order;
    
}

void from_json(const nlohmann::json& j, UpdateOrderStatusRequest& o)
{
    j.at("order").get_to(o.m_Order);
    
}

org::openapitools::server::model::OrderStatusChangeDTO UpdateOrderStatusRequest::getOrder() const
{
    return m_Order;
}
void UpdateOrderStatusRequest::setOrder(org::openapitools::server::model::OrderStatusChangeDTO const& value)
{
    m_Order = value;
}


} // namespace org::openapitools::server::model

