/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrderLabelDTO.h
 *
 * Данные для печати ярлыка.
 */

#ifndef OrderLabelDTO_H_
#define OrderLabelDTO_H_


#include <string>
#include <vector>
#include "ParcelBoxLabelDTO.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Данные для печати ярлыка.
/// </summary>
class  OrderLabelDTO
{
public:
    OrderLabelDTO();
    virtual ~OrderLabelDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const OrderLabelDTO& rhs) const;
    bool operator!=(const OrderLabelDTO& rhs) const;

    /////////////////////////////////////////////
    /// OrderLabelDTO members

    /// <summary>
    /// Идентификатор заказа.
    /// </summary>
    int64_t getOrderId() const;
    void setOrderId(int64_t const value);
    /// <summary>
    /// Количество коробок в заказе.
    /// </summary>
    int32_t getPlacesNumber() const;
    void setPlacesNumber(int32_t const value);
    /// <summary>
    /// URL файла с ярлыками‑наклейками на все коробки в заказе.  Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/labels](../../reference/orders/generateOrderLabels.md). 
    /// </summary>
    std::string getUrl() const;
    void setUrl(std::string const& value);
    /// <summary>
    /// Информация на ярлыке.
    /// </summary>
    std::vector<org::openapitools::server::model::ParcelBoxLabelDTO> getParcelBoxLabels() const;
    void setParcelBoxLabels(std::vector<org::openapitools::server::model::ParcelBoxLabelDTO> const& value);

    friend  void to_json(nlohmann::json& j, const OrderLabelDTO& o);
    friend  void from_json(const nlohmann::json& j, OrderLabelDTO& o);
protected:
    int64_t m_OrderId;

    int32_t m_PlacesNumber;

    std::string m_Url;

    std::vector<org::openapitools::server::model::ParcelBoxLabelDTO> m_ParcelBoxLabels;

    
};

} // namespace org::openapitools::server::model

#endif /* OrderLabelDTO_H_ */
