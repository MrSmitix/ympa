/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrderItemInstanceDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

OrderItemInstanceDTO::OrderItemInstanceDTO()
{
    m_Cis = "";
    m_CisIsSet = false;
    m_CisFull = "";
    m_CisFullIsSet = false;
    m_Uin = "";
    m_UinIsSet = false;
    m_Rnpt = "";
    m_RnptIsSet = false;
    m_Gtd = "";
    m_GtdIsSet = false;
    
}

void OrderItemInstanceDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool OrderItemInstanceDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool OrderItemInstanceDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "OrderItemInstanceDTO" : pathPrefix;

                        
    return success;
}

bool OrderItemInstanceDTO::operator==(const OrderItemInstanceDTO& rhs) const
{
    return
    
    
    
    ((!cisIsSet() && !rhs.cisIsSet()) || (cisIsSet() && rhs.cisIsSet() && getCis() == rhs.getCis())) &&
    
    
    ((!cisFullIsSet() && !rhs.cisFullIsSet()) || (cisFullIsSet() && rhs.cisFullIsSet() && getCisFull() == rhs.getCisFull())) &&
    
    
    ((!uinIsSet() && !rhs.uinIsSet()) || (uinIsSet() && rhs.uinIsSet() && getUin() == rhs.getUin())) &&
    
    
    ((!rnptIsSet() && !rhs.rnptIsSet()) || (rnptIsSet() && rhs.rnptIsSet() && getRnpt() == rhs.getRnpt())) &&
    
    
    ((!gtdIsSet() && !rhs.gtdIsSet()) || (gtdIsSet() && rhs.gtdIsSet() && getGtd() == rhs.getGtd()))
    
    ;
}

bool OrderItemInstanceDTO::operator!=(const OrderItemInstanceDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const OrderItemInstanceDTO& o)
{
    j = nlohmann::json::object();
    if(o.cisIsSet())
        j["cis"] = o.m_Cis;
    if(o.cisFullIsSet())
        j["cisFull"] = o.m_CisFull;
    if(o.uinIsSet())
        j["uin"] = o.m_Uin;
    if(o.rnptIsSet())
        j["rnpt"] = o.m_Rnpt;
    if(o.gtdIsSet())
        j["gtd"] = o.m_Gtd;
    
}

void from_json(const nlohmann::json& j, OrderItemInstanceDTO& o)
{
    if(j.find("cis") != j.end())
    {
        j.at("cis").get_to(o.m_Cis);
        o.m_CisIsSet = true;
    } 
    if(j.find("cisFull") != j.end())
    {
        j.at("cisFull").get_to(o.m_CisFull);
        o.m_CisFullIsSet = true;
    } 
    if(j.find("uin") != j.end())
    {
        j.at("uin").get_to(o.m_Uin);
        o.m_UinIsSet = true;
    } 
    if(j.find("rnpt") != j.end())
    {
        j.at("rnpt").get_to(o.m_Rnpt);
        o.m_RnptIsSet = true;
    } 
    if(j.find("gtd") != j.end())
    {
        j.at("gtd").get_to(o.m_Gtd);
        o.m_GtdIsSet = true;
    } 
    
}

std::string OrderItemInstanceDTO::getCis() const
{
    return m_Cis;
}
void OrderItemInstanceDTO::setCis(std::string const& value)
{
    m_Cis = value;
    m_CisIsSet = true;
}
bool OrderItemInstanceDTO::cisIsSet() const
{
    return m_CisIsSet;
}
void OrderItemInstanceDTO::unsetCis()
{
    m_CisIsSet = false;
}
std::string OrderItemInstanceDTO::getCisFull() const
{
    return m_CisFull;
}
void OrderItemInstanceDTO::setCisFull(std::string const& value)
{
    m_CisFull = value;
    m_CisFullIsSet = true;
}
bool OrderItemInstanceDTO::cisFullIsSet() const
{
    return m_CisFullIsSet;
}
void OrderItemInstanceDTO::unsetCisFull()
{
    m_CisFullIsSet = false;
}
std::string OrderItemInstanceDTO::getUin() const
{
    return m_Uin;
}
void OrderItemInstanceDTO::setUin(std::string const& value)
{
    m_Uin = value;
    m_UinIsSet = true;
}
bool OrderItemInstanceDTO::uinIsSet() const
{
    return m_UinIsSet;
}
void OrderItemInstanceDTO::unsetUin()
{
    m_UinIsSet = false;
}
std::string OrderItemInstanceDTO::getRnpt() const
{
    return m_Rnpt;
}
void OrderItemInstanceDTO::setRnpt(std::string const& value)
{
    m_Rnpt = value;
    m_RnptIsSet = true;
}
bool OrderItemInstanceDTO::rnptIsSet() const
{
    return m_RnptIsSet;
}
void OrderItemInstanceDTO::unsetRnpt()
{
    m_RnptIsSet = false;
}
std::string OrderItemInstanceDTO::getGtd() const
{
    return m_Gtd;
}
void OrderItemInstanceDTO::setGtd(std::string const& value)
{
    m_Gtd = value;
    m_GtdIsSet = true;
}
bool OrderItemInstanceDTO::gtdIsSet() const
{
    return m_GtdIsSet;
}
void OrderItemInstanceDTO::unsetGtd()
{
    m_GtdIsSet = false;
}


} // namespace org::openapitools::server::model

