/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "DocumentDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

DocumentDTO::DocumentDTO()
{
    m_StatusIsSet = false;
    m_number = "";
    m_numberIsSet = false;
    m_dateIsSet = false;
    
}

void DocumentDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool DocumentDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool DocumentDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "DocumentDTO" : pathPrefix;

                
    return success;
}

bool DocumentDTO::operator==(const DocumentDTO& rhs) const
{
    return
    
    
    
    ((!statusIsSet() && !rhs.statusIsSet()) || (statusIsSet() && rhs.statusIsSet() && getStatus() == rhs.getStatus())) &&
    
    
    ((!numberIsSet() && !rhs.numberIsSet()) || (numberIsSet() && rhs.numberIsSet() && getNumber() == rhs.getNumber())) &&
    
    
    ((!dateIsSet() && !rhs.dateIsSet()) || (dateIsSet() && rhs.dateIsSet() && getDate() == rhs.getDate()))
    
    ;
}

bool DocumentDTO::operator!=(const DocumentDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const DocumentDTO& o)
{
    j = nlohmann::json::object();
    if(o.statusIsSet())
        j["status"] = o.m_Status;
    if(o.numberIsSet())
        j["number"] = o.m_number;
    if(o.dateIsSet())
        j["date"] = o.m_date;
    
}

void from_json(const nlohmann::json& j, DocumentDTO& o)
{
    if(j.find("status") != j.end())
    {
        j.at("status").get_to(o.m_Status);
        o.m_StatusIsSet = true;
    } 
    if(j.find("number") != j.end())
    {
        j.at("number").get_to(o.m_number);
        o.m_numberIsSet = true;
    } 
    if(j.find("date") != j.end())
    {
        j.at("date").get_to(o.m_date);
        o.m_dateIsSet = true;
    } 
    
}

org::openapitools::server::model::OrderDocumentStatusType DocumentDTO::getStatus() const
{
    return m_Status;
}
void DocumentDTO::setStatus(org::openapitools::server::model::OrderDocumentStatusType const& value)
{
    m_Status = value;
    m_StatusIsSet = true;
}
bool DocumentDTO::statusIsSet() const
{
    return m_StatusIsSet;
}
void DocumentDTO::unsetStatus()
{
    m_StatusIsSet = false;
}
std::string DocumentDTO::getNumber() const
{
    return m_number;
}
void DocumentDTO::setNumber(std::string const& value)
{
    m_number = value;
    m_numberIsSet = true;
}
bool DocumentDTO::numberIsSet() const
{
    return m_numberIsSet;
}
void DocumentDTO::unsetnumber()
{
    m_numberIsSet = false;
}
std::string DocumentDTO::getDate() const
{
    return m_date;
}
void DocumentDTO::setDate(std::string const& value)
{
    m_date = value;
    m_dateIsSet = true;
}
bool DocumentDTO::dateIsSet() const
{
    return m_dateIsSet;
}
void DocumentDTO::unsetdate()
{
    m_dateIsSet = false;
}


} // namespace org::openapitools::server::model

