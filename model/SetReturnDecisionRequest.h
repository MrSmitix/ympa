/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * SetReturnDecisionRequest.h
 *
 * Решения по позиции в возврате.
 */

#ifndef SetReturnDecisionRequest_H_
#define SetReturnDecisionRequest_H_


#include "ReturnRequestDecisionType.h"
#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Решения по позиции в возврате.
/// </summary>
class  SetReturnDecisionRequest
{
public:
    SetReturnDecisionRequest();
    virtual ~SetReturnDecisionRequest() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const SetReturnDecisionRequest& rhs) const;
    bool operator!=(const SetReturnDecisionRequest& rhs) const;

    /////////////////////////////////////////////
    /// SetReturnDecisionRequest members

    /// <summary>
    /// Идентификатор товара в возврате.
    /// </summary>
    int64_t getReturnItemId() const;
    void setReturnItemId(int64_t const value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::ReturnRequestDecisionType getDecisionType() const;
    void setDecisionType(org::openapitools::server::model::ReturnRequestDecisionType const& value);
    /// <summary>
    /// Комментарий к решению. Укажите:  * для &#x60;REFUND_MONEY_INCLUDING_SHIPMENT&#x60;— стоимость обратной пересылки;  * для &#x60;REPAIR&#x60; — когда вы устраните недостатки товара;  * для &#x60;DECLINE_REFUND&#x60; — причину отказа;  * для &#x60;OTHER_DECISION&#x60; — какое решение вы предлагаете. 
    /// </summary>
    std::string getComment() const;
    void setComment(std::string const& value);
    bool commentIsSet() const;
    void unsetComment();

    friend  void to_json(nlohmann::json& j, const SetReturnDecisionRequest& o);
    friend  void from_json(const nlohmann::json& j, SetReturnDecisionRequest& o);
protected:
    int64_t m_ReturnItemId;

    org::openapitools::server::model::ReturnRequestDecisionType m_DecisionType;

    std::string m_Comment;
    bool m_CommentIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* SetReturnDecisionRequest_H_ */
