/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OfferSellingProgramDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

OfferSellingProgramDTO::OfferSellingProgramDTO()
{
    
}

void OfferSellingProgramDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool OfferSellingProgramDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool OfferSellingProgramDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "OfferSellingProgramDTO" : pathPrefix;

            
    return success;
}

bool OfferSellingProgramDTO::operator==(const OfferSellingProgramDTO& rhs) const
{
    return
    
    
    (getSellingProgram() == rhs.getSellingProgram())
     &&
    
    (getStatus() == rhs.getStatus())
    
    
    ;
}

bool OfferSellingProgramDTO::operator!=(const OfferSellingProgramDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const OfferSellingProgramDTO& o)
{
    j = nlohmann::json::object();
    j["sellingProgram"] = o.m_SellingProgram;
    j["status"] = o.m_Status;
    
}

void from_json(const nlohmann::json& j, OfferSellingProgramDTO& o)
{
    j.at("sellingProgram").get_to(o.m_SellingProgram);
    j.at("status").get_to(o.m_Status);
    
}

org::openapitools::server::model::SellingProgramType OfferSellingProgramDTO::getSellingProgram() const
{
    return m_SellingProgram;
}
void OfferSellingProgramDTO::setSellingProgram(org::openapitools::server::model::SellingProgramType const& value)
{
    m_SellingProgram = value;
}
org::openapitools::server::model::OfferSellingProgramStatusType OfferSellingProgramDTO::getStatus() const
{
    return m_Status;
}
void OfferSellingProgramDTO::setStatus(org::openapitools::server::model::OfferSellingProgramStatusType const& value)
{
    m_Status = value;
}


} // namespace org::openapitools::server::model

