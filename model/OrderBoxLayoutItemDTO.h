/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrderBoxLayoutItemDTO.h
 *
 * Информация о товаре в коробке.
 */

#ifndef OrderBoxLayoutItemDTO_H_
#define OrderBoxLayoutItemDTO_H_


#include "BriefOrderItemInstanceDTO.h"
#include <vector>
#include "OrderBoxLayoutPartialCountDTO.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Информация о товаре в коробке.
/// </summary>
class  OrderBoxLayoutItemDTO
{
public:
    OrderBoxLayoutItemDTO();
    virtual ~OrderBoxLayoutItemDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const OrderBoxLayoutItemDTO& rhs) const;
    bool operator!=(const OrderBoxLayoutItemDTO& rhs) const;

    /////////////////////////////////////////////
    /// OrderBoxLayoutItemDTO members

    /// <summary>
    /// Идентификатор товара в заказе.  {% cut \&quot;Где его взять\&quot; %}  Идентификатор приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр &#x60;id&#x60; в &#x60;items&#x60;.  {% endcut %}   
    /// </summary>
    int64_t getId() const;
    void setId(int64_t const value);
    /// <summary>
    /// Количество единиц товара в коробке.  Используйте это поле, если в коробке поедут целые товары, не разделенные на части. Не используйте это поле одновременно с &#x60;partialCount&#x60;. 
    /// </summary>
    int32_t getFullCount() const;
    void setFullCount(int32_t const value);
    bool fullCountIsSet() const;
    void unsetFullCount();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::OrderBoxLayoutPartialCountDTO getPartialCount() const;
    void setPartialCount(org::openapitools::server::model::OrderBoxLayoutPartialCountDTO const& value);
    bool partialCountIsSet() const;
    void unsetPartialCount();
    /// <summary>
    /// Переданные вами коды маркировки.
    /// </summary>
    std::vector<org::openapitools::server::model::BriefOrderItemInstanceDTO> getInstances() const;
    void setInstances(std::vector<org::openapitools::server::model::BriefOrderItemInstanceDTO> const& value);
    bool instancesIsSet() const;
    void unsetInstances();

    friend  void to_json(nlohmann::json& j, const OrderBoxLayoutItemDTO& o);
    friend  void from_json(const nlohmann::json& j, OrderBoxLayoutItemDTO& o);
protected:
    int64_t m_Id;

    int32_t m_FullCount;
    bool m_FullCountIsSet;
    org::openapitools::server::model::OrderBoxLayoutPartialCountDTO m_PartialCount;
    bool m_PartialCountIsSet;
    std::vector<org::openapitools::server::model::BriefOrderItemInstanceDTO> m_Instances;
    bool m_InstancesIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* OrderBoxLayoutItemDTO_H_ */
