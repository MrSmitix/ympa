/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * GetPriceWithVatDTO.h
 *
 * Цена с указанием ставки НДС и времени последнего обновления.
 */

#ifndef GetPriceWithVatDTO_H_
#define GetPriceWithVatDTO_H_


#include "CurrencyType.h"
#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Цена с указанием ставки НДС и времени последнего обновления.
/// </summary>
class  GetPriceWithVatDTO
{
public:
    GetPriceWithVatDTO();
    virtual ~GetPriceWithVatDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const GetPriceWithVatDTO& rhs) const;
    bool operator!=(const GetPriceWithVatDTO& rhs) const;

    /////////////////////////////////////////////
    /// GetPriceWithVatDTO members

    /// <summary>
    /// Цена на товар.
    /// </summary>
    double getValue() const;
    void setValue(double const value);
    bool valueIsSet() const;
    void unsetValue();
    /// <summary>
    /// Цена на товар без скидки.  Число должно быть целым. Вы можете указать цену со скидкой от 5 до 99%.  Передавайте этот параметр при каждом обновлении цены, если предоставляете скидку на товар. 
    /// </summary>
    double getDiscountBase() const;
    void setDiscountBase(double const value);
    bool discountBaseIsSet() const;
    void unsetDiscountBase();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CurrencyType getCurrencyId() const;
    void setCurrencyId(org::openapitools::server::model::CurrencyType const& value);
    bool currencyIdIsSet() const;
    void unsetCurrencyId();
    /// <summary>
    /// Идентификатор ставки НДС, применяемой для товара:  * &#x60;2&#x60; — 10%. * &#x60;5&#x60; — 0%. * &#x60;6&#x60; — не облагается НДС. * &#x60;7&#x60; — 20%.  Если параметр не указан, используется ставка НДС, установленная в кабинете. 
    /// </summary>
    int32_t getVat() const;
    void setVat(int32_t const value);
    bool vatIsSet() const;
    void unsetVat();
    /// <summary>
    /// Время последнего обновления.
    /// </summary>
    std::string getUpdatedAt() const;
    void setUpdatedAt(std::string const& value);

    friend  void to_json(nlohmann::json& j, const GetPriceWithVatDTO& o);
    friend  void from_json(const nlohmann::json& j, GetPriceWithVatDTO& o);
protected:
    double m_Value;
    bool m_ValueIsSet;
    double m_DiscountBase;
    bool m_DiscountBaseIsSet;
    org::openapitools::server::model::CurrencyType m_CurrencyId;
    bool m_CurrencyIdIsSet;
    int32_t m_Vat;
    bool m_VatIsSet;
    std::string m_UpdatedAt;

    
};

} // namespace org::openapitools::server::model

#endif /* GetPriceWithVatDTO_H_ */
