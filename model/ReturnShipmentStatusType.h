/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ReturnShipmentStatusType.h
 *
 * Статус передачи возврата:  * &#x60;CREATED&#x60; — возврат создан.  * &#x60;RECEIVED&#x60; — принят у покупателя.  * &#x60;IN_TRANSIT&#x60; — возврат в пути.  * &#x60;READY_FOR_PICKUP&#x60; — возврат готов к выдаче магазину.  * &#x60;PICKED&#x60; — возврат выдан магазину.  * &#x60;LOST&#x60; — возврат утерян при транспортировке.  * &#x60;CANCELLED&#x60; — возврат отменен.  * &#x60;FULFILMENT_RECEIVED&#x60; — возврат принят на складе Маркета.  * &#x60;PREPARED_FOR_UTILIZATION&#x60; — возврат передан в утилизацию.  * &#x60;UTILIZED&#x60; — возврат утилизирован. 
 */

#ifndef ReturnShipmentStatusType_H_
#define ReturnShipmentStatusType_H_


#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Статус передачи возврата:  * &#x60;CREATED&#x60; — возврат создан.  * &#x60;RECEIVED&#x60; — принят у покупателя.  * &#x60;IN_TRANSIT&#x60; — возврат в пути.  * &#x60;READY_FOR_PICKUP&#x60; — возврат готов к выдаче магазину.  * &#x60;PICKED&#x60; — возврат выдан магазину.  * &#x60;LOST&#x60; — возврат утерян при транспортировке.  * &#x60;CANCELLED&#x60; — возврат отменен.  * &#x60;FULFILMENT_RECEIVED&#x60; — возврат принят на складе Маркета.  * &#x60;PREPARED_FOR_UTILIZATION&#x60; — возврат передан в утилизацию.  * &#x60;UTILIZED&#x60; — возврат утилизирован. 
/// </summary>
class  ReturnShipmentStatusType
{
public:
    ReturnShipmentStatusType();
    virtual ~ReturnShipmentStatusType() = default;

    enum class eReturnShipmentStatusType {
    // To have a valid default value.
    // Avoiding name clashes with user defined
    // enum values
    INVALID_VALUE_OPENAPI_GENERATED = 0,
    CREATED, 
    RECEIVED, 
    IN_TRANSIT, 
    READY_FOR_PICKUP, 
    PICKED, 
    LOST, 
    EXPIRED, 
    CANCELLED, 
    FULFILMENT_RECEIVED, 
    PREPARED_FOR_UTILIZATION, 
    NOT_IN_DEMAND, 
    UTILIZED, 
    READY_FOR_EXPROPRIATION, 
    RECEIVED_FOR_EXPROPRIATION
    };

    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const ReturnShipmentStatusType& rhs) const;
    bool operator!=(const ReturnShipmentStatusType& rhs) const;

    /////////////////////////////////////////////
    /// ReturnShipmentStatusType members

    ReturnShipmentStatusType::eReturnShipmentStatusType getValue() const;
    void setValue(ReturnShipmentStatusType::eReturnShipmentStatusType value);
    
    friend  void to_json(nlohmann::json& j, const ReturnShipmentStatusType& o);
    friend  void from_json(const nlohmann::json& j, ReturnShipmentStatusType& o);
protected:
    ReturnShipmentStatusType::eReturnShipmentStatusType m_value = ReturnShipmentStatusType::eReturnShipmentStatusType::INVALID_VALUE_OPENAPI_GENERATED;
};

} // namespace org::openapitools::server::model

#endif /* ReturnShipmentStatusType_H_ */
