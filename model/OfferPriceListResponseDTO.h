/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OfferPriceListResponseDTO.h
 *
 * Список цен на товары.
 */

#ifndef OfferPriceListResponseDTO_H_
#define OfferPriceListResponseDTO_H_



#include "ScrollingPagerDTO.h"
#include "OfferPriceResponseDTO.h"
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Список цен на товары.
/// </summary>
class  OfferPriceListResponseDTO 
{
public:
    OfferPriceListResponseDTO() = default;
    explicit OfferPriceListResponseDTO(boost::property_tree::ptree const& pt);
    virtual ~OfferPriceListResponseDTO() = default;

    OfferPriceListResponseDTO(const OfferPriceListResponseDTO& other) = default; // copy constructor
    OfferPriceListResponseDTO(OfferPriceListResponseDTO&& other) noexcept = default; // move constructor

    OfferPriceListResponseDTO& operator=(const OfferPriceListResponseDTO& other) = default; // copy assignment
    OfferPriceListResponseDTO& operator=(OfferPriceListResponseDTO&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// OfferPriceListResponseDTO members

    /// <summary>
    /// Страница списка.
    /// </summary>
    std::vector<OfferPriceResponseDTO> getOffers() const;
    void setOffers(std::vector<OfferPriceResponseDTO> value);

    /// <summary>
    /// 
    /// </summary>
    ScrollingPagerDTO getPaging() const;
    void setPaging(ScrollingPagerDTO value);

    /// <summary>
    /// Количество всех цен магазина, измененных через API.
    /// </summary>
    int32_t getTotal() const;
    void setTotal(int32_t value);

protected:
    std::vector<OfferPriceResponseDTO> m_Offers;
    ScrollingPagerDTO m_Paging;
    int32_t m_Total = 0;
};

std::vector<OfferPriceListResponseDTO> createOfferPriceListResponseDTOVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<OfferPriceListResponseDTO>(const OfferPriceListResponseDTO& val) {
    return val.toPropertyTree();
}

template<>
inline OfferPriceListResponseDTO fromPt<OfferPriceListResponseDTO>(const boost::property_tree::ptree& pt) {
    OfferPriceListResponseDTO ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* OfferPriceListResponseDTO_H_ */
