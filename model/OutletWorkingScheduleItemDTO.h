/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OutletWorkingScheduleItemDTO.h
 *
 * Расписание работы точки продаж.
 */

#ifndef OutletWorkingScheduleItemDTO_H_
#define OutletWorkingScheduleItemDTO_H_



#include "DayOfWeekType.h"
#include <string>
#include <vector>
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Расписание работы точки продаж.
/// </summary>
class  OutletWorkingScheduleItemDTO 
{
public:
    OutletWorkingScheduleItemDTO() = default;
    explicit OutletWorkingScheduleItemDTO(boost::property_tree::ptree const& pt);
    virtual ~OutletWorkingScheduleItemDTO() = default;

    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// OutletWorkingScheduleItemDTO members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<DayOfWeekType> getStartDay() const;
    void setStartDay(std::shared_ptr<DayOfWeekType> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<DayOfWeekType> getEndDay() const;
    void setEndDay(std::shared_ptr<DayOfWeekType> value);

    /// <summary>
    /// Точка продаж работает c указанного часа.  Формат: &#x60;ЧЧ:ММ&#x60;. 
    /// </summary>
    std::string getStartTime() const;
    void setStartTime(std::string value);

    /// <summary>
    /// Точка продаж работает до указанного часа.  Формат: &#x60;ЧЧ:ММ&#x60;. 
    /// </summary>
    std::string getEndTime() const;
    void setEndTime(std::string value);

protected:
    //////////////////////////////////////
    // Override these for customization //
    //////////////////////////////////////

    virtual std::string toJsonString_internal(bool prettyJson = false);
    virtual void fromJsonString_internal(std::string const& jsonString);
    virtual boost::property_tree::ptree toPropertyTree_internal();
    virtual void fromPropertyTree_internal(boost::property_tree::ptree const& pt);


protected:
    std::shared_ptr<DayOfWeekType> m_StartDay = std::make_shared<DayOfWeekType>();
    std::shared_ptr<DayOfWeekType> m_EndDay = std::make_shared<DayOfWeekType>();
    std::string m_StartTime = "";
    std::string m_EndTime = "";
};

std::vector<OutletWorkingScheduleItemDTO> createOutletWorkingScheduleItemDTOVectorFromJsonString(const std::string& json);

}
}
}
}

#endif /* OutletWorkingScheduleItemDTO_H_ */
