/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ModelOfferDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

ModelOfferDTO::ModelOfferDTO()
{
    m_Discount = 0;
    m_DiscountIsSet = false;
    m_Name = "";
    m_NameIsSet = false;
    m_Pos = 0;
    m_PosIsSet = false;
    m_PreDiscountPrice = 0.0;
    m_PreDiscountPriceIsSet = false;
    m_Price = 0.0;
    m_PriceIsSet = false;
    m_RegionId = 0L;
    m_RegionIdIsSet = false;
    m_ShippingCost = 0.0;
    m_ShippingCostIsSet = false;
    m_ShopName = "";
    m_ShopNameIsSet = false;
    m_ShopRating = 0;
    m_ShopRatingIsSet = false;
    m_InStock = 0;
    m_InStockIsSet = false;
    
}

void ModelOfferDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool ModelOfferDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool ModelOfferDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "ModelOfferDTO" : pathPrefix;

                                            
    return success;
}

bool ModelOfferDTO::operator==(const ModelOfferDTO& rhs) const
{
    return
    
    
    
    ((!discountIsSet() && !rhs.discountIsSet()) || (discountIsSet() && rhs.discountIsSet() && getDiscount() == rhs.getDiscount())) &&
    
    
    ((!nameIsSet() && !rhs.nameIsSet()) || (nameIsSet() && rhs.nameIsSet() && getName() == rhs.getName())) &&
    
    
    ((!posIsSet() && !rhs.posIsSet()) || (posIsSet() && rhs.posIsSet() && getPos() == rhs.getPos())) &&
    
    
    ((!preDiscountPriceIsSet() && !rhs.preDiscountPriceIsSet()) || (preDiscountPriceIsSet() && rhs.preDiscountPriceIsSet() && getPreDiscountPrice() == rhs.getPreDiscountPrice())) &&
    
    
    ((!priceIsSet() && !rhs.priceIsSet()) || (priceIsSet() && rhs.priceIsSet() && getPrice() == rhs.getPrice())) &&
    
    
    ((!regionIdIsSet() && !rhs.regionIdIsSet()) || (regionIdIsSet() && rhs.regionIdIsSet() && getRegionId() == rhs.getRegionId())) &&
    
    
    ((!shippingCostIsSet() && !rhs.shippingCostIsSet()) || (shippingCostIsSet() && rhs.shippingCostIsSet() && getShippingCost() == rhs.getShippingCost())) &&
    
    
    ((!shopNameIsSet() && !rhs.shopNameIsSet()) || (shopNameIsSet() && rhs.shopNameIsSet() && getShopName() == rhs.getShopName())) &&
    
    
    ((!shopRatingIsSet() && !rhs.shopRatingIsSet()) || (shopRatingIsSet() && rhs.shopRatingIsSet() && getShopRating() == rhs.getShopRating())) &&
    
    
    ((!inStockIsSet() && !rhs.inStockIsSet()) || (inStockIsSet() && rhs.inStockIsSet() && getInStock() == rhs.getInStock()))
    
    ;
}

bool ModelOfferDTO::operator!=(const ModelOfferDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ModelOfferDTO& o)
{
    j = nlohmann::json::object();
    if(o.discountIsSet())
        j["discount"] = o.m_Discount;
    if(o.nameIsSet())
        j["name"] = o.m_Name;
    if(o.posIsSet())
        j["pos"] = o.m_Pos;
    if(o.preDiscountPriceIsSet())
        j["preDiscountPrice"] = o.m_PreDiscountPrice;
    if(o.priceIsSet())
        j["price"] = o.m_Price;
    if(o.regionIdIsSet())
        j["regionId"] = o.m_RegionId;
    if(o.shippingCostIsSet())
        j["shippingCost"] = o.m_ShippingCost;
    if(o.shopNameIsSet())
        j["shopName"] = o.m_ShopName;
    if(o.shopRatingIsSet())
        j["shopRating"] = o.m_ShopRating;
    if(o.inStockIsSet())
        j["inStock"] = o.m_InStock;
    
}

void from_json(const nlohmann::json& j, ModelOfferDTO& o)
{
    if(j.find("discount") != j.end())
    {
        j.at("discount").get_to(o.m_Discount);
        o.m_DiscountIsSet = true;
    } 
    if(j.find("name") != j.end())
    {
        j.at("name").get_to(o.m_Name);
        o.m_NameIsSet = true;
    } 
    if(j.find("pos") != j.end())
    {
        j.at("pos").get_to(o.m_Pos);
        o.m_PosIsSet = true;
    } 
    if(j.find("preDiscountPrice") != j.end())
    {
        j.at("preDiscountPrice").get_to(o.m_PreDiscountPrice);
        o.m_PreDiscountPriceIsSet = true;
    } 
    if(j.find("price") != j.end())
    {
        j.at("price").get_to(o.m_Price);
        o.m_PriceIsSet = true;
    } 
    if(j.find("regionId") != j.end())
    {
        j.at("regionId").get_to(o.m_RegionId);
        o.m_RegionIdIsSet = true;
    } 
    if(j.find("shippingCost") != j.end())
    {
        j.at("shippingCost").get_to(o.m_ShippingCost);
        o.m_ShippingCostIsSet = true;
    } 
    if(j.find("shopName") != j.end())
    {
        j.at("shopName").get_to(o.m_ShopName);
        o.m_ShopNameIsSet = true;
    } 
    if(j.find("shopRating") != j.end())
    {
        j.at("shopRating").get_to(o.m_ShopRating);
        o.m_ShopRatingIsSet = true;
    } 
    if(j.find("inStock") != j.end())
    {
        j.at("inStock").get_to(o.m_InStock);
        o.m_InStockIsSet = true;
    } 
    
}

int32_t ModelOfferDTO::getDiscount() const
{
    return m_Discount;
}
void ModelOfferDTO::setDiscount(int32_t const value)
{
    m_Discount = value;
    m_DiscountIsSet = true;
}
bool ModelOfferDTO::discountIsSet() const
{
    return m_DiscountIsSet;
}
void ModelOfferDTO::unsetDiscount()
{
    m_DiscountIsSet = false;
}
std::string ModelOfferDTO::getName() const
{
    return m_Name;
}
void ModelOfferDTO::setName(std::string const& value)
{
    m_Name = value;
    m_NameIsSet = true;
}
bool ModelOfferDTO::nameIsSet() const
{
    return m_NameIsSet;
}
void ModelOfferDTO::unsetName()
{
    m_NameIsSet = false;
}
int32_t ModelOfferDTO::getPos() const
{
    return m_Pos;
}
void ModelOfferDTO::setPos(int32_t const value)
{
    m_Pos = value;
    m_PosIsSet = true;
}
bool ModelOfferDTO::posIsSet() const
{
    return m_PosIsSet;
}
void ModelOfferDTO::unsetPos()
{
    m_PosIsSet = false;
}
double ModelOfferDTO::getPreDiscountPrice() const
{
    return m_PreDiscountPrice;
}
void ModelOfferDTO::setPreDiscountPrice(double const value)
{
    m_PreDiscountPrice = value;
    m_PreDiscountPriceIsSet = true;
}
bool ModelOfferDTO::preDiscountPriceIsSet() const
{
    return m_PreDiscountPriceIsSet;
}
void ModelOfferDTO::unsetPreDiscountPrice()
{
    m_PreDiscountPriceIsSet = false;
}
double ModelOfferDTO::getPrice() const
{
    return m_Price;
}
void ModelOfferDTO::setPrice(double const value)
{
    m_Price = value;
    m_PriceIsSet = true;
}
bool ModelOfferDTO::priceIsSet() const
{
    return m_PriceIsSet;
}
void ModelOfferDTO::unsetPrice()
{
    m_PriceIsSet = false;
}
int64_t ModelOfferDTO::getRegionId() const
{
    return m_RegionId;
}
void ModelOfferDTO::setRegionId(int64_t const value)
{
    m_RegionId = value;
    m_RegionIdIsSet = true;
}
bool ModelOfferDTO::regionIdIsSet() const
{
    return m_RegionIdIsSet;
}
void ModelOfferDTO::unsetRegionId()
{
    m_RegionIdIsSet = false;
}
double ModelOfferDTO::getShippingCost() const
{
    return m_ShippingCost;
}
void ModelOfferDTO::setShippingCost(double const value)
{
    m_ShippingCost = value;
    m_ShippingCostIsSet = true;
}
bool ModelOfferDTO::shippingCostIsSet() const
{
    return m_ShippingCostIsSet;
}
void ModelOfferDTO::unsetShippingCost()
{
    m_ShippingCostIsSet = false;
}
std::string ModelOfferDTO::getShopName() const
{
    return m_ShopName;
}
void ModelOfferDTO::setShopName(std::string const& value)
{
    m_ShopName = value;
    m_ShopNameIsSet = true;
}
bool ModelOfferDTO::shopNameIsSet() const
{
    return m_ShopNameIsSet;
}
void ModelOfferDTO::unsetShopName()
{
    m_ShopNameIsSet = false;
}
int32_t ModelOfferDTO::getShopRating() const
{
    return m_ShopRating;
}
void ModelOfferDTO::setShopRating(int32_t const value)
{
    m_ShopRating = value;
    m_ShopRatingIsSet = true;
}
bool ModelOfferDTO::shopRatingIsSet() const
{
    return m_ShopRatingIsSet;
}
void ModelOfferDTO::unsetShopRating()
{
    m_ShopRatingIsSet = false;
}
int32_t ModelOfferDTO::getInStock() const
{
    return m_InStock;
}
void ModelOfferDTO::setInStock(int32_t const value)
{
    m_InStock = value;
    m_InStockIsSet = true;
}
bool ModelOfferDTO::inStockIsSet() const
{
    return m_InStockIsSet;
}
void ModelOfferDTO::unsetInStock()
{
    m_InStockIsSet = false;
}


} // namespace org::openapitools::server::model

