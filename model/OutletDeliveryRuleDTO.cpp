/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OutletDeliveryRuleDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

OutletDeliveryRuleDTO::OutletDeliveryRuleDTO()
{
    m_MinDeliveryDays = 0;
    m_MinDeliveryDaysIsSet = false;
    m_MaxDeliveryDays = 0;
    m_MaxDeliveryDaysIsSet = false;
    m_DeliveryServiceId = 0L;
    m_DeliveryServiceIdIsSet = false;
    m_OrderBefore = 0;
    m_OrderBeforeIsSet = false;
    m_PriceFreePickup = 0.0;
    m_PriceFreePickupIsSet = false;
    m_UnspecifiedDeliveryInterval = false;
    m_UnspecifiedDeliveryIntervalIsSet = false;
    
}

void OutletDeliveryRuleDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool OutletDeliveryRuleDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool OutletDeliveryRuleDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "OutletDeliveryRuleDTO" : pathPrefix;

                     
    if (orderBeforeIsSet())
    {
        const int32_t& value = m_OrderBefore;
        const std::string currentValuePath = _pathPrefix + ".orderBefore";
                
        
        if (value < 0)
        {
            success = false;
            msg << currentValuePath << ": must be greater than or equal to 0;";
        }
        if (value > 24)
        {
            success = false;
            msg << currentValuePath << ": must be less than or equal to 24;";
        }

    }
            
    return success;
}

bool OutletDeliveryRuleDTO::operator==(const OutletDeliveryRuleDTO& rhs) const
{
    return
    
    
    
    ((!minDeliveryDaysIsSet() && !rhs.minDeliveryDaysIsSet()) || (minDeliveryDaysIsSet() && rhs.minDeliveryDaysIsSet() && getMinDeliveryDays() == rhs.getMinDeliveryDays())) &&
    
    
    ((!maxDeliveryDaysIsSet() && !rhs.maxDeliveryDaysIsSet()) || (maxDeliveryDaysIsSet() && rhs.maxDeliveryDaysIsSet() && getMaxDeliveryDays() == rhs.getMaxDeliveryDays())) &&
    
    
    ((!deliveryServiceIdIsSet() && !rhs.deliveryServiceIdIsSet()) || (deliveryServiceIdIsSet() && rhs.deliveryServiceIdIsSet() && getDeliveryServiceId() == rhs.getDeliveryServiceId())) &&
    
    
    ((!orderBeforeIsSet() && !rhs.orderBeforeIsSet()) || (orderBeforeIsSet() && rhs.orderBeforeIsSet() && getOrderBefore() == rhs.getOrderBefore())) &&
    
    
    ((!priceFreePickupIsSet() && !rhs.priceFreePickupIsSet()) || (priceFreePickupIsSet() && rhs.priceFreePickupIsSet() && getPriceFreePickup() == rhs.getPriceFreePickup())) &&
    
    
    ((!unspecifiedDeliveryIntervalIsSet() && !rhs.unspecifiedDeliveryIntervalIsSet()) || (unspecifiedDeliveryIntervalIsSet() && rhs.unspecifiedDeliveryIntervalIsSet() && isUnspecifiedDeliveryInterval() == rhs.isUnspecifiedDeliveryInterval()))
    
    ;
}

bool OutletDeliveryRuleDTO::operator!=(const OutletDeliveryRuleDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const OutletDeliveryRuleDTO& o)
{
    j = nlohmann::json::object();
    if(o.minDeliveryDaysIsSet())
        j["minDeliveryDays"] = o.m_MinDeliveryDays;
    if(o.maxDeliveryDaysIsSet())
        j["maxDeliveryDays"] = o.m_MaxDeliveryDays;
    if(o.deliveryServiceIdIsSet())
        j["deliveryServiceId"] = o.m_DeliveryServiceId;
    if(o.orderBeforeIsSet())
        j["orderBefore"] = o.m_OrderBefore;
    if(o.priceFreePickupIsSet())
        j["priceFreePickup"] = o.m_PriceFreePickup;
    if(o.unspecifiedDeliveryIntervalIsSet())
        j["unspecifiedDeliveryInterval"] = o.m_UnspecifiedDeliveryInterval;
    
}

void from_json(const nlohmann::json& j, OutletDeliveryRuleDTO& o)
{
    if(j.find("minDeliveryDays") != j.end())
    {
        j.at("minDeliveryDays").get_to(o.m_MinDeliveryDays);
        o.m_MinDeliveryDaysIsSet = true;
    } 
    if(j.find("maxDeliveryDays") != j.end())
    {
        j.at("maxDeliveryDays").get_to(o.m_MaxDeliveryDays);
        o.m_MaxDeliveryDaysIsSet = true;
    } 
    if(j.find("deliveryServiceId") != j.end())
    {
        j.at("deliveryServiceId").get_to(o.m_DeliveryServiceId);
        o.m_DeliveryServiceIdIsSet = true;
    } 
    if(j.find("orderBefore") != j.end())
    {
        j.at("orderBefore").get_to(o.m_OrderBefore);
        o.m_OrderBeforeIsSet = true;
    } 
    if(j.find("priceFreePickup") != j.end())
    {
        j.at("priceFreePickup").get_to(o.m_PriceFreePickup);
        o.m_PriceFreePickupIsSet = true;
    } 
    if(j.find("unspecifiedDeliveryInterval") != j.end())
    {
        j.at("unspecifiedDeliveryInterval").get_to(o.m_UnspecifiedDeliveryInterval);
        o.m_UnspecifiedDeliveryIntervalIsSet = true;
    } 
    
}

int32_t OutletDeliveryRuleDTO::getMinDeliveryDays() const
{
    return m_MinDeliveryDays;
}
void OutletDeliveryRuleDTO::setMinDeliveryDays(int32_t const value)
{
    m_MinDeliveryDays = value;
    m_MinDeliveryDaysIsSet = true;
}
bool OutletDeliveryRuleDTO::minDeliveryDaysIsSet() const
{
    return m_MinDeliveryDaysIsSet;
}
void OutletDeliveryRuleDTO::unsetMinDeliveryDays()
{
    m_MinDeliveryDaysIsSet = false;
}
int32_t OutletDeliveryRuleDTO::getMaxDeliveryDays() const
{
    return m_MaxDeliveryDays;
}
void OutletDeliveryRuleDTO::setMaxDeliveryDays(int32_t const value)
{
    m_MaxDeliveryDays = value;
    m_MaxDeliveryDaysIsSet = true;
}
bool OutletDeliveryRuleDTO::maxDeliveryDaysIsSet() const
{
    return m_MaxDeliveryDaysIsSet;
}
void OutletDeliveryRuleDTO::unsetMaxDeliveryDays()
{
    m_MaxDeliveryDaysIsSet = false;
}
int64_t OutletDeliveryRuleDTO::getDeliveryServiceId() const
{
    return m_DeliveryServiceId;
}
void OutletDeliveryRuleDTO::setDeliveryServiceId(int64_t const value)
{
    m_DeliveryServiceId = value;
    m_DeliveryServiceIdIsSet = true;
}
bool OutletDeliveryRuleDTO::deliveryServiceIdIsSet() const
{
    return m_DeliveryServiceIdIsSet;
}
void OutletDeliveryRuleDTO::unsetDeliveryServiceId()
{
    m_DeliveryServiceIdIsSet = false;
}
int32_t OutletDeliveryRuleDTO::getOrderBefore() const
{
    return m_OrderBefore;
}
void OutletDeliveryRuleDTO::setOrderBefore(int32_t const value)
{
    m_OrderBefore = value;
    m_OrderBeforeIsSet = true;
}
bool OutletDeliveryRuleDTO::orderBeforeIsSet() const
{
    return m_OrderBeforeIsSet;
}
void OutletDeliveryRuleDTO::unsetOrderBefore()
{
    m_OrderBeforeIsSet = false;
}
double OutletDeliveryRuleDTO::getPriceFreePickup() const
{
    return m_PriceFreePickup;
}
void OutletDeliveryRuleDTO::setPriceFreePickup(double const value)
{
    m_PriceFreePickup = value;
    m_PriceFreePickupIsSet = true;
}
bool OutletDeliveryRuleDTO::priceFreePickupIsSet() const
{
    return m_PriceFreePickupIsSet;
}
void OutletDeliveryRuleDTO::unsetPriceFreePickup()
{
    m_PriceFreePickupIsSet = false;
}
bool OutletDeliveryRuleDTO::isUnspecifiedDeliveryInterval() const
{
    return m_UnspecifiedDeliveryInterval;
}
void OutletDeliveryRuleDTO::setUnspecifiedDeliveryInterval(bool const value)
{
    m_UnspecifiedDeliveryInterval = value;
    m_UnspecifiedDeliveryIntervalIsSet = true;
}
bool OutletDeliveryRuleDTO::unspecifiedDeliveryIntervalIsSet() const
{
    return m_UnspecifiedDeliveryIntervalIsSet;
}
void OutletDeliveryRuleDTO::unsetUnspecifiedDeliveryInterval()
{
    m_UnspecifiedDeliveryIntervalIsSet = false;
}


} // namespace org::openapitools::server::model

