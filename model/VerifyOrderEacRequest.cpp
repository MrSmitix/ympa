/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "VerifyOrderEacRequest.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

VerifyOrderEacRequest::VerifyOrderEacRequest()
{
    m_Code = "";
    m_CodeIsSet = false;
    
}

void VerifyOrderEacRequest::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool VerifyOrderEacRequest::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool VerifyOrderEacRequest::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "VerifyOrderEacRequest" : pathPrefix;

        
    return success;
}

bool VerifyOrderEacRequest::operator==(const VerifyOrderEacRequest& rhs) const
{
    return
    
    
    
    ((!codeIsSet() && !rhs.codeIsSet()) || (codeIsSet() && rhs.codeIsSet() && getCode() == rhs.getCode()))
    
    ;
}

bool VerifyOrderEacRequest::operator!=(const VerifyOrderEacRequest& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const VerifyOrderEacRequest& o)
{
    j = nlohmann::json::object();
    if(o.codeIsSet())
        j["code"] = o.m_Code;
    
}

void from_json(const nlohmann::json& j, VerifyOrderEacRequest& o)
{
    if(j.find("code") != j.end())
    {
        j.at("code").get_to(o.m_Code);
        o.m_CodeIsSet = true;
    } 
    
}

std::string VerifyOrderEacRequest::getCode() const
{
    return m_Code;
}
void VerifyOrderEacRequest::setCode(std::string const& value)
{
    m_Code = value;
    m_CodeIsSet = true;
}
bool VerifyOrderEacRequest::codeIsSet() const
{
    return m_CodeIsSet;
}
void VerifyOrderEacRequest::unsetCode()
{
    m_CodeIsSet = false;
}


} // namespace org::openapitools::server::model

