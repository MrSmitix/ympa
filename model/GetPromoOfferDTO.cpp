/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "GetPromoOfferDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

GetPromoOfferDTO::GetPromoOfferDTO()
{
    m_OfferId = "";
    m_AutoParticipatingDetailsIsSet = false;
    
}

void GetPromoOfferDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool GetPromoOfferDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool GetPromoOfferDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "GetPromoOfferDTO" : pathPrefix;

         
    
    /* OfferId */ {
        const std::string& value = m_OfferId;
        const std::string currentValuePath = _pathPrefix + ".offerId";
                
        
        if (value.length() < 1)
        {
            success = false;
            msg << currentValuePath << ": must be at least 1 characters long;";
        }
        if (value.length() > 255)
        {
            success = false;
            msg << currentValuePath << ": must be at most 255 characters long;";
        }

    }
            
    if (!m_Params.validate(msg, _pathPrefix + ".params")) {
        msg << _pathPrefix << ": Params is invalid;";
        success = false;
    }    
    return success;
}

bool GetPromoOfferDTO::operator==(const GetPromoOfferDTO& rhs) const
{
    return
    
    
    (getOfferId() == rhs.getOfferId())
     &&
    
    (getStatus() == rhs.getStatus())
     &&
    
    (getParams() == rhs.getParams())
     &&
    
    
    ((!autoParticipatingDetailsIsSet() && !rhs.autoParticipatingDetailsIsSet()) || (autoParticipatingDetailsIsSet() && rhs.autoParticipatingDetailsIsSet() && getAutoParticipatingDetails() == rhs.getAutoParticipatingDetails()))
    
    ;
}

bool GetPromoOfferDTO::operator!=(const GetPromoOfferDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const GetPromoOfferDTO& o)
{
    j = nlohmann::json::object();
    j["offerId"] = o.m_OfferId;
    j["status"] = o.m_Status;
    j["params"] = o.m_Params;
    if(o.autoParticipatingDetailsIsSet())
        j["autoParticipatingDetails"] = o.m_AutoParticipatingDetails;
    
}

void from_json(const nlohmann::json& j, GetPromoOfferDTO& o)
{
    j.at("offerId").get_to(o.m_OfferId);
    j.at("status").get_to(o.m_Status);
    j.at("params").get_to(o.m_Params);
    if(j.find("autoParticipatingDetails") != j.end())
    {
        j.at("autoParticipatingDetails").get_to(o.m_AutoParticipatingDetails);
        o.m_AutoParticipatingDetailsIsSet = true;
    } 
    
}

std::string GetPromoOfferDTO::getOfferId() const
{
    return m_OfferId;
}
void GetPromoOfferDTO::setOfferId(std::string const& value)
{
    m_OfferId = value;
}
org::openapitools::server::model::PromoOfferParticipationStatusType GetPromoOfferDTO::getStatus() const
{
    return m_Status;
}
void GetPromoOfferDTO::setStatus(org::openapitools::server::model::PromoOfferParticipationStatusType const& value)
{
    m_Status = value;
}
org::openapitools::server::model::PromoOfferParamsDTO GetPromoOfferDTO::getParams() const
{
    return m_Params;
}
void GetPromoOfferDTO::setParams(org::openapitools::server::model::PromoOfferParamsDTO const& value)
{
    m_Params = value;
}
org::openapitools::server::model::PromoOfferAutoParticipatingDetailsDTO GetPromoOfferDTO::getAutoParticipatingDetails() const
{
    return m_AutoParticipatingDetails;
}
void GetPromoOfferDTO::setAutoParticipatingDetails(org::openapitools::server::model::PromoOfferAutoParticipatingDetailsDTO const& value)
{
    m_AutoParticipatingDetails = value;
    m_AutoParticipatingDetailsIsSet = true;
}
bool GetPromoOfferDTO::autoParticipatingDetailsIsSet() const
{
    return m_AutoParticipatingDetailsIsSet;
}
void GetPromoOfferDTO::unsetAutoParticipatingDetails()
{
    m_AutoParticipatingDetailsIsSet = false;
}


} // namespace org::openapitools::server::model

