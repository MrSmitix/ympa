/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrderBusinessBuyerDTO.h
 *
 * Информация о покупателе. 
 */

#ifndef OrderBusinessBuyerDTO_H_
#define OrderBusinessBuyerDTO_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Информация о покупателе. 
/// </summary>
class  OrderBusinessBuyerDTO 
{
public:
    OrderBusinessBuyerDTO() = default;
    explicit OrderBusinessBuyerDTO(boost::property_tree::ptree const& pt);
    virtual ~OrderBusinessBuyerDTO() = default;

    OrderBusinessBuyerDTO(const OrderBusinessBuyerDTO& other) = default; // copy constructor
    OrderBusinessBuyerDTO(OrderBusinessBuyerDTO&& other) noexcept = default; // move constructor

    OrderBusinessBuyerDTO& operator=(const OrderBusinessBuyerDTO& other) = default; // copy assignment
    OrderBusinessBuyerDTO& operator=(OrderBusinessBuyerDTO&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// OrderBusinessBuyerDTO members

    /// <summary>
    /// ИНН.
    /// </summary>
    std::string getInn() const;
    void setInn(std::string value);

    /// <summary>
    /// КПП.
    /// </summary>
    std::string getKpp() const;
    void setKpp(std::string value);

    /// <summary>
    /// Наименование юридического лица.
    /// </summary>
    std::string getOrganizationName() const;
    void setOrganizationName(std::string value);

    /// <summary>
    /// Юридический адрес.
    /// </summary>
    std::string getOrganizationJurAddress() const;
    void setOrganizationJurAddress(std::string value);

protected:
    std::string m_Inn = "";
    std::string m_Kpp = "";
    std::string m_OrganizationName = "";
    std::string m_OrganizationJurAddress = "";
};

std::vector<OrderBusinessBuyerDTO> createOrderBusinessBuyerDTOVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<OrderBusinessBuyerDTO>(const OrderBusinessBuyerDTO& val) {
    return val.toPropertyTree();
}

template<>
inline OrderBusinessBuyerDTO fromPt<OrderBusinessBuyerDTO>(const boost::property_tree::ptree& pt) {
    OrderBusinessBuyerDTO ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* OrderBusinessBuyerDTO_H_ */
