/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ReturnInstanceDTO.h
 *
 * Логистическая информация по возврату.
 */

#ifndef ReturnInstanceDTO_H_
#define ReturnInstanceDTO_H_



#include "ReturnInstanceStockType.h"
#include <string>
#include "ReturnInstanceStatusType.h"
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Логистическая информация по возврату.
/// </summary>
class  ReturnInstanceDTO 
{
public:
    ReturnInstanceDTO() = default;
    explicit ReturnInstanceDTO(boost::property_tree::ptree const& pt);
    virtual ~ReturnInstanceDTO() = default;

    ReturnInstanceDTO(const ReturnInstanceDTO& other) = default; // copy constructor
    ReturnInstanceDTO(ReturnInstanceDTO&& other) noexcept = default; // move constructor

    ReturnInstanceDTO& operator=(const ReturnInstanceDTO& other) = default; // copy assignment
    ReturnInstanceDTO& operator=(ReturnInstanceDTO&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// ReturnInstanceDTO members

    /// <summary>
    /// 
    /// </summary>
    ReturnInstanceStockType getStockType() const;
    void setStockType(ReturnInstanceStockType value);

    /// <summary>
    /// 
    /// </summary>
    ReturnInstanceStatusType getStatus() const;
    void setStatus(ReturnInstanceStatusType value);

    /// <summary>
    /// Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).
    /// </summary>
    std::string getCis() const;
    void setCis(std::string value);

    /// <summary>
    /// Международный идентификатор мобильного оборудования.
    /// </summary>
    std::string getImei() const;
    void setImei(std::string value);

protected:
    ReturnInstanceStockType m_StockType = ReturnInstanceStockType{};
    ReturnInstanceStatusType m_Status = ReturnInstanceStatusType{};
    std::string m_Cis = "";
    std::string m_Imei = "";
};

std::vector<ReturnInstanceDTO> createReturnInstanceDTOVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<ReturnInstanceDTO>(const ReturnInstanceDTO& val) {
    return val.toPropertyTree();
}

template<>
inline ReturnInstanceDTO fromPt<ReturnInstanceDTO>(const boost::property_tree::ptree& pt) {
    ReturnInstanceDTO ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* ReturnInstanceDTO_H_ */
