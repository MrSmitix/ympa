/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ReturnDecisionReasonType.h
 *
 * Причины возврата:  * &#x60;BAD_QUALITY&#x60; — бракованный товар (есть недостатки).  * &#x60;DO_NOT_FIT&#x60; — товар не подошел.  * &#x60;WRONG_ITEM&#x60; — привезли не тот товар.  * &#x60;DAMAGE_DELIVERY&#x60; — товар поврежден при доставке.  * &#x60;LOYALTY_FAIL&#x60; — невозможно установить виновного в браке/пересорте.  * &#x60;CONTENT_FAIL&#x60; — ошибочное описание товара по вине Маркета.  * &#x60;UNKNOWN&#x60; — причина не известна. 
 */

#ifndef ReturnDecisionReasonType_H_
#define ReturnDecisionReasonType_H_


#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Причины возврата:  * &#x60;BAD_QUALITY&#x60; — бракованный товар (есть недостатки).  * &#x60;DO_NOT_FIT&#x60; — товар не подошел.  * &#x60;WRONG_ITEM&#x60; — привезли не тот товар.  * &#x60;DAMAGE_DELIVERY&#x60; — товар поврежден при доставке.  * &#x60;LOYALTY_FAIL&#x60; — невозможно установить виновного в браке/пересорте.  * &#x60;CONTENT_FAIL&#x60; — ошибочное описание товара по вине Маркета.  * &#x60;UNKNOWN&#x60; — причина не известна. 
/// </summary>
class  ReturnDecisionReasonType
{
public:
    ReturnDecisionReasonType();
    virtual ~ReturnDecisionReasonType() = default;

    enum class eReturnDecisionReasonType {
    // To have a valid default value.
    // Avoiding name clashes with user defined
    // enum values
    INVALID_VALUE_OPENAPI_GENERATED = 0,
    BAD_QUALITY, 
    DOES_NOT_FIT, 
    WRONG_ITEM, 
    DAMAGE_DELIVERY, 
    LOYALTY_FAIL, 
    CONTENT_FAIL, 
    UNKNOWN
    };

    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const ReturnDecisionReasonType& rhs) const;
    bool operator!=(const ReturnDecisionReasonType& rhs) const;

    /////////////////////////////////////////////
    /// ReturnDecisionReasonType members

    ReturnDecisionReasonType::eReturnDecisionReasonType getValue() const;
    void setValue(ReturnDecisionReasonType::eReturnDecisionReasonType value);
    
    friend  void to_json(nlohmann::json& j, const ReturnDecisionReasonType& o);
    friend  void from_json(const nlohmann::json& j, ReturnDecisionReasonType& o);
protected:
    ReturnDecisionReasonType::eReturnDecisionReasonType m_value = ReturnDecisionReasonType::eReturnDecisionReasonType::INVALID_VALUE_OPENAPI_GENERATED;
};

} // namespace org::openapitools::server::model

#endif /* ReturnDecisionReasonType_H_ */
