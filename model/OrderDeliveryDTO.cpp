/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrderDeliveryDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

OrderDeliveryDTO::OrderDeliveryDTO()
{
    m_Id = "";
    m_IdIsSet = false;
    m_TypeIsSet = false;
    m_ServiceName = "";
    m_ServiceNameIsSet = false;
    m_Price = 0.0;
    m_PriceIsSet = false;
    m_DeliveryPartnerTypeIsSet = false;
    m_CourierIsSet = false;
    m_DatesIsSet = false;
    m_RegionIsSet = false;
    m_AddressIsSet = false;
    m_VatIsSet = false;
    m_DeliveryServiceId = 0L;
    m_DeliveryServiceIdIsSet = false;
    m_LiftTypeIsSet = false;
    m_LiftPrice = 0.0;
    m_LiftPriceIsSet = false;
    m_OutletCode = "";
    m_OutletCodeIsSet = false;
    m_OutletStorageLimitDate = "";
    m_OutletStorageLimitDateIsSet = false;
    m_DispatchTypeIsSet = false;
    m_TracksIsSet = false;
    m_ShipmentsIsSet = false;
    m_Estimated = false;
    m_EstimatedIsSet = false;
    m_EacTypeIsSet = false;
    m_EacCode = "";
    m_EacCodeIsSet = false;
    
}

void OrderDeliveryDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool OrderDeliveryDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool OrderDeliveryDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "OrderDeliveryDTO" : pathPrefix;

                                                                         
    if (tracksIsSet())
    {
        const std::vector<org::openapitools::server::model::OrderTrackDTO>& value = m_Tracks;
        const std::string currentValuePath = _pathPrefix + ".tracks";
                
        
        { // Recursive validation of array elements
            const std::string oldValuePath = currentValuePath;
            int i = 0;
            for (const org::openapitools::server::model::OrderTrackDTO& value : value)
            { 
                const std::string currentValuePath = oldValuePath + "[" + std::to_string(i) + "]";
                        
        success = value.validate(msg, currentValuePath + ".tracks") && success;
 
                i++;
            }
        }

    }
         
    if (shipmentsIsSet())
    {
        const std::vector<org::openapitools::server::model::OrderShipmentDTO>& value = m_Shipments;
        const std::string currentValuePath = _pathPrefix + ".shipments";
                
        
        { // Recursive validation of array elements
            const std::string oldValuePath = currentValuePath;
            int i = 0;
            for (const org::openapitools::server::model::OrderShipmentDTO& value : value)
            { 
                const std::string currentValuePath = oldValuePath + "[" + std::to_string(i) + "]";
                        
        success = value.validate(msg, currentValuePath + ".shipments") && success;
 
                i++;
            }
        }

    }
                
    return success;
}

bool OrderDeliveryDTO::operator==(const OrderDeliveryDTO& rhs) const
{
    return
    
    
    
    ((!idIsSet() && !rhs.idIsSet()) || (idIsSet() && rhs.idIsSet() && getId() == rhs.getId())) &&
    
    
    ((!typeIsSet() && !rhs.typeIsSet()) || (typeIsSet() && rhs.typeIsSet() && getType() == rhs.getType())) &&
    
    
    ((!serviceNameIsSet() && !rhs.serviceNameIsSet()) || (serviceNameIsSet() && rhs.serviceNameIsSet() && getServiceName() == rhs.getServiceName())) &&
    
    
    ((!priceIsSet() && !rhs.priceIsSet()) || (priceIsSet() && rhs.priceIsSet() && getPrice() == rhs.getPrice())) &&
    
    
    ((!deliveryPartnerTypeIsSet() && !rhs.deliveryPartnerTypeIsSet()) || (deliveryPartnerTypeIsSet() && rhs.deliveryPartnerTypeIsSet() && getDeliveryPartnerType() == rhs.getDeliveryPartnerType())) &&
    
    
    ((!courierIsSet() && !rhs.courierIsSet()) || (courierIsSet() && rhs.courierIsSet() && getCourier() == rhs.getCourier())) &&
    
    
    ((!datesIsSet() && !rhs.datesIsSet()) || (datesIsSet() && rhs.datesIsSet() && getDates() == rhs.getDates())) &&
    
    
    ((!regionIsSet() && !rhs.regionIsSet()) || (regionIsSet() && rhs.regionIsSet() && getRegion() == rhs.getRegion())) &&
    
    
    ((!addressIsSet() && !rhs.addressIsSet()) || (addressIsSet() && rhs.addressIsSet() && getAddress() == rhs.getAddress())) &&
    
    
    ((!vatIsSet() && !rhs.vatIsSet()) || (vatIsSet() && rhs.vatIsSet() && getVat() == rhs.getVat())) &&
    
    
    ((!deliveryServiceIdIsSet() && !rhs.deliveryServiceIdIsSet()) || (deliveryServiceIdIsSet() && rhs.deliveryServiceIdIsSet() && getDeliveryServiceId() == rhs.getDeliveryServiceId())) &&
    
    
    ((!liftTypeIsSet() && !rhs.liftTypeIsSet()) || (liftTypeIsSet() && rhs.liftTypeIsSet() && getLiftType() == rhs.getLiftType())) &&
    
    
    ((!liftPriceIsSet() && !rhs.liftPriceIsSet()) || (liftPriceIsSet() && rhs.liftPriceIsSet() && getLiftPrice() == rhs.getLiftPrice())) &&
    
    
    ((!outletCodeIsSet() && !rhs.outletCodeIsSet()) || (outletCodeIsSet() && rhs.outletCodeIsSet() && getOutletCode() == rhs.getOutletCode())) &&
    
    
    ((!outletStorageLimitDateIsSet() && !rhs.outletStorageLimitDateIsSet()) || (outletStorageLimitDateIsSet() && rhs.outletStorageLimitDateIsSet() && getOutletStorageLimitDate() == rhs.getOutletStorageLimitDate())) &&
    
    
    ((!dispatchTypeIsSet() && !rhs.dispatchTypeIsSet()) || (dispatchTypeIsSet() && rhs.dispatchTypeIsSet() && getDispatchType() == rhs.getDispatchType())) &&
    
    
    ((!tracksIsSet() && !rhs.tracksIsSet()) || (tracksIsSet() && rhs.tracksIsSet() && getTracks() == rhs.getTracks())) &&
    
    
    ((!shipmentsIsSet() && !rhs.shipmentsIsSet()) || (shipmentsIsSet() && rhs.shipmentsIsSet() && getShipments() == rhs.getShipments())) &&
    
    
    ((!estimatedIsSet() && !rhs.estimatedIsSet()) || (estimatedIsSet() && rhs.estimatedIsSet() && isEstimated() == rhs.isEstimated())) &&
    
    
    ((!eacTypeIsSet() && !rhs.eacTypeIsSet()) || (eacTypeIsSet() && rhs.eacTypeIsSet() && getEacType() == rhs.getEacType())) &&
    
    
    ((!eacCodeIsSet() && !rhs.eacCodeIsSet()) || (eacCodeIsSet() && rhs.eacCodeIsSet() && getEacCode() == rhs.getEacCode()))
    
    ;
}

bool OrderDeliveryDTO::operator!=(const OrderDeliveryDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const OrderDeliveryDTO& o)
{
    j = nlohmann::json::object();
    if(o.idIsSet())
        j["id"] = o.m_Id;
    if(o.typeIsSet())
        j["type"] = o.m_Type;
    if(o.serviceNameIsSet())
        j["serviceName"] = o.m_ServiceName;
    if(o.priceIsSet())
        j["price"] = o.m_Price;
    if(o.deliveryPartnerTypeIsSet())
        j["deliveryPartnerType"] = o.m_DeliveryPartnerType;
    if(o.courierIsSet())
        j["courier"] = o.m_Courier;
    if(o.datesIsSet())
        j["dates"] = o.m_Dates;
    if(o.regionIsSet())
        j["region"] = o.m_Region;
    if(o.addressIsSet())
        j["address"] = o.m_Address;
    if(o.vatIsSet())
        j["vat"] = o.m_Vat;
    if(o.deliveryServiceIdIsSet())
        j["deliveryServiceId"] = o.m_DeliveryServiceId;
    if(o.liftTypeIsSet())
        j["liftType"] = o.m_LiftType;
    if(o.liftPriceIsSet())
        j["liftPrice"] = o.m_LiftPrice;
    if(o.outletCodeIsSet())
        j["outletCode"] = o.m_OutletCode;
    if(o.outletStorageLimitDateIsSet())
        j["outletStorageLimitDate"] = o.m_OutletStorageLimitDate;
    if(o.dispatchTypeIsSet())
        j["dispatchType"] = o.m_DispatchType;
    if(o.tracksIsSet() || !o.m_Tracks.empty())
        j["tracks"] = o.m_Tracks;
    if(o.shipmentsIsSet() || !o.m_Shipments.empty())
        j["shipments"] = o.m_Shipments;
    if(o.estimatedIsSet())
        j["estimated"] = o.m_Estimated;
    if(o.eacTypeIsSet())
        j["eacType"] = o.m_EacType;
    if(o.eacCodeIsSet())
        j["eacCode"] = o.m_EacCode;
    
}

void from_json(const nlohmann::json& j, OrderDeliveryDTO& o)
{
    if(j.find("id") != j.end())
    {
        j.at("id").get_to(o.m_Id);
        o.m_IdIsSet = true;
    } 
    if(j.find("type") != j.end())
    {
        j.at("type").get_to(o.m_Type);
        o.m_TypeIsSet = true;
    } 
    if(j.find("serviceName") != j.end())
    {
        j.at("serviceName").get_to(o.m_ServiceName);
        o.m_ServiceNameIsSet = true;
    } 
    if(j.find("price") != j.end())
    {
        j.at("price").get_to(o.m_Price);
        o.m_PriceIsSet = true;
    } 
    if(j.find("deliveryPartnerType") != j.end())
    {
        j.at("deliveryPartnerType").get_to(o.m_DeliveryPartnerType);
        o.m_DeliveryPartnerTypeIsSet = true;
    } 
    if(j.find("courier") != j.end())
    {
        j.at("courier").get_to(o.m_Courier);
        o.m_CourierIsSet = true;
    } 
    if(j.find("dates") != j.end())
    {
        j.at("dates").get_to(o.m_Dates);
        o.m_DatesIsSet = true;
    } 
    if(j.find("region") != j.end())
    {
        j.at("region").get_to(o.m_Region);
        o.m_RegionIsSet = true;
    } 
    if(j.find("address") != j.end())
    {
        j.at("address").get_to(o.m_Address);
        o.m_AddressIsSet = true;
    } 
    if(j.find("vat") != j.end())
    {
        j.at("vat").get_to(o.m_Vat);
        o.m_VatIsSet = true;
    } 
    if(j.find("deliveryServiceId") != j.end())
    {
        j.at("deliveryServiceId").get_to(o.m_DeliveryServiceId);
        o.m_DeliveryServiceIdIsSet = true;
    } 
    if(j.find("liftType") != j.end())
    {
        j.at("liftType").get_to(o.m_LiftType);
        o.m_LiftTypeIsSet = true;
    } 
    if(j.find("liftPrice") != j.end())
    {
        j.at("liftPrice").get_to(o.m_LiftPrice);
        o.m_LiftPriceIsSet = true;
    } 
    if(j.find("outletCode") != j.end())
    {
        j.at("outletCode").get_to(o.m_OutletCode);
        o.m_OutletCodeIsSet = true;
    } 
    if(j.find("outletStorageLimitDate") != j.end())
    {
        j.at("outletStorageLimitDate").get_to(o.m_OutletStorageLimitDate);
        o.m_OutletStorageLimitDateIsSet = true;
    } 
    if(j.find("dispatchType") != j.end())
    {
        j.at("dispatchType").get_to(o.m_DispatchType);
        o.m_DispatchTypeIsSet = true;
    } 
    if(j.find("tracks") != j.end())
    {
        j.at("tracks").get_to(o.m_Tracks);
        o.m_TracksIsSet = true;
    } 
    if(j.find("shipments") != j.end())
    {
        j.at("shipments").get_to(o.m_Shipments);
        o.m_ShipmentsIsSet = true;
    } 
    if(j.find("estimated") != j.end())
    {
        j.at("estimated").get_to(o.m_Estimated);
        o.m_EstimatedIsSet = true;
    } 
    if(j.find("eacType") != j.end())
    {
        j.at("eacType").get_to(o.m_EacType);
        o.m_EacTypeIsSet = true;
    } 
    if(j.find("eacCode") != j.end())
    {
        j.at("eacCode").get_to(o.m_EacCode);
        o.m_EacCodeIsSet = true;
    } 
    
}

std::string OrderDeliveryDTO::getId() const
{
    return m_Id;
}
void OrderDeliveryDTO::setId(std::string const& value)
{
    m_Id = value;
    m_IdIsSet = true;
}
bool OrderDeliveryDTO::idIsSet() const
{
    return m_IdIsSet;
}
void OrderDeliveryDTO::unsetId()
{
    m_IdIsSet = false;
}
org::openapitools::server::model::OrderDeliveryType OrderDeliveryDTO::getType() const
{
    return m_Type;
}
void OrderDeliveryDTO::setType(org::openapitools::server::model::OrderDeliveryType const& value)
{
    m_Type = value;
    m_TypeIsSet = true;
}
bool OrderDeliveryDTO::typeIsSet() const
{
    return m_TypeIsSet;
}
void OrderDeliveryDTO::unsetType()
{
    m_TypeIsSet = false;
}
std::string OrderDeliveryDTO::getServiceName() const
{
    return m_ServiceName;
}
void OrderDeliveryDTO::setServiceName(std::string const& value)
{
    m_ServiceName = value;
    m_ServiceNameIsSet = true;
}
bool OrderDeliveryDTO::serviceNameIsSet() const
{
    return m_ServiceNameIsSet;
}
void OrderDeliveryDTO::unsetServiceName()
{
    m_ServiceNameIsSet = false;
}
double OrderDeliveryDTO::getPrice() const
{
    return m_Price;
}
void OrderDeliveryDTO::setPrice(double const value)
{
    m_Price = value;
    m_PriceIsSet = true;
}
bool OrderDeliveryDTO::priceIsSet() const
{
    return m_PriceIsSet;
}
void OrderDeliveryDTO::unsetPrice()
{
    m_PriceIsSet = false;
}
org::openapitools::server::model::OrderDeliveryPartnerType OrderDeliveryDTO::getDeliveryPartnerType() const
{
    return m_DeliveryPartnerType;
}
void OrderDeliveryDTO::setDeliveryPartnerType(org::openapitools::server::model::OrderDeliveryPartnerType const& value)
{
    m_DeliveryPartnerType = value;
    m_DeliveryPartnerTypeIsSet = true;
}
bool OrderDeliveryDTO::deliveryPartnerTypeIsSet() const
{
    return m_DeliveryPartnerTypeIsSet;
}
void OrderDeliveryDTO::unsetDeliveryPartnerType()
{
    m_DeliveryPartnerTypeIsSet = false;
}
org::openapitools::server::model::OrderCourierDTO OrderDeliveryDTO::getCourier() const
{
    return m_Courier;
}
void OrderDeliveryDTO::setCourier(org::openapitools::server::model::OrderCourierDTO const& value)
{
    m_Courier = value;
    m_CourierIsSet = true;
}
bool OrderDeliveryDTO::courierIsSet() const
{
    return m_CourierIsSet;
}
void OrderDeliveryDTO::unsetCourier()
{
    m_CourierIsSet = false;
}
org::openapitools::server::model::OrderDeliveryDatesDTO OrderDeliveryDTO::getDates() const
{
    return m_Dates;
}
void OrderDeliveryDTO::setDates(org::openapitools::server::model::OrderDeliveryDatesDTO const& value)
{
    m_Dates = value;
    m_DatesIsSet = true;
}
bool OrderDeliveryDTO::datesIsSet() const
{
    return m_DatesIsSet;
}
void OrderDeliveryDTO::unsetDates()
{
    m_DatesIsSet = false;
}
org::openapitools::server::model::RegionDTO OrderDeliveryDTO::getRegion() const
{
    return m_Region;
}
void OrderDeliveryDTO::setRegion(org::openapitools::server::model::RegionDTO const& value)
{
    m_Region = value;
    m_RegionIsSet = true;
}
bool OrderDeliveryDTO::regionIsSet() const
{
    return m_RegionIsSet;
}
void OrderDeliveryDTO::unsetRegion()
{
    m_RegionIsSet = false;
}
org::openapitools::server::model::OrderDeliveryAddressDTO OrderDeliveryDTO::getAddress() const
{
    return m_Address;
}
void OrderDeliveryDTO::setAddress(org::openapitools::server::model::OrderDeliveryAddressDTO const& value)
{
    m_Address = value;
    m_AddressIsSet = true;
}
bool OrderDeliveryDTO::addressIsSet() const
{
    return m_AddressIsSet;
}
void OrderDeliveryDTO::unsetAddress()
{
    m_AddressIsSet = false;
}
org::openapitools::server::model::OrderVatType OrderDeliveryDTO::getVat() const
{
    return m_Vat;
}
void OrderDeliveryDTO::setVat(org::openapitools::server::model::OrderVatType const& value)
{
    m_Vat = value;
    m_VatIsSet = true;
}
bool OrderDeliveryDTO::vatIsSet() const
{
    return m_VatIsSet;
}
void OrderDeliveryDTO::unsetVat()
{
    m_VatIsSet = false;
}
int64_t OrderDeliveryDTO::getDeliveryServiceId() const
{
    return m_DeliveryServiceId;
}
void OrderDeliveryDTO::setDeliveryServiceId(int64_t const value)
{
    m_DeliveryServiceId = value;
    m_DeliveryServiceIdIsSet = true;
}
bool OrderDeliveryDTO::deliveryServiceIdIsSet() const
{
    return m_DeliveryServiceIdIsSet;
}
void OrderDeliveryDTO::unsetDeliveryServiceId()
{
    m_DeliveryServiceIdIsSet = false;
}
org::openapitools::server::model::OrderLiftType OrderDeliveryDTO::getLiftType() const
{
    return m_LiftType;
}
void OrderDeliveryDTO::setLiftType(org::openapitools::server::model::OrderLiftType const& value)
{
    m_LiftType = value;
    m_LiftTypeIsSet = true;
}
bool OrderDeliveryDTO::liftTypeIsSet() const
{
    return m_LiftTypeIsSet;
}
void OrderDeliveryDTO::unsetLiftType()
{
    m_LiftTypeIsSet = false;
}
double OrderDeliveryDTO::getLiftPrice() const
{
    return m_LiftPrice;
}
void OrderDeliveryDTO::setLiftPrice(double const value)
{
    m_LiftPrice = value;
    m_LiftPriceIsSet = true;
}
bool OrderDeliveryDTO::liftPriceIsSet() const
{
    return m_LiftPriceIsSet;
}
void OrderDeliveryDTO::unsetLiftPrice()
{
    m_LiftPriceIsSet = false;
}
std::string OrderDeliveryDTO::getOutletCode() const
{
    return m_OutletCode;
}
void OrderDeliveryDTO::setOutletCode(std::string const& value)
{
    m_OutletCode = value;
    m_OutletCodeIsSet = true;
}
bool OrderDeliveryDTO::outletCodeIsSet() const
{
    return m_OutletCodeIsSet;
}
void OrderDeliveryDTO::unsetOutletCode()
{
    m_OutletCodeIsSet = false;
}
std::string OrderDeliveryDTO::getOutletStorageLimitDate() const
{
    return m_OutletStorageLimitDate;
}
void OrderDeliveryDTO::setOutletStorageLimitDate(std::string const& value)
{
    m_OutletStorageLimitDate = value;
    m_OutletStorageLimitDateIsSet = true;
}
bool OrderDeliveryDTO::outletStorageLimitDateIsSet() const
{
    return m_OutletStorageLimitDateIsSet;
}
void OrderDeliveryDTO::unsetOutletStorageLimitDate()
{
    m_OutletStorageLimitDateIsSet = false;
}
org::openapitools::server::model::OrderDeliveryDispatchType OrderDeliveryDTO::getDispatchType() const
{
    return m_DispatchType;
}
void OrderDeliveryDTO::setDispatchType(org::openapitools::server::model::OrderDeliveryDispatchType const& value)
{
    m_DispatchType = value;
    m_DispatchTypeIsSet = true;
}
bool OrderDeliveryDTO::dispatchTypeIsSet() const
{
    return m_DispatchTypeIsSet;
}
void OrderDeliveryDTO::unsetDispatchType()
{
    m_DispatchTypeIsSet = false;
}
std::vector<org::openapitools::server::model::OrderTrackDTO> OrderDeliveryDTO::getTracks() const
{
    return m_Tracks;
}
void OrderDeliveryDTO::setTracks(std::vector<org::openapitools::server::model::OrderTrackDTO> const& value)
{
    m_Tracks = value;
    m_TracksIsSet = true;
}
bool OrderDeliveryDTO::tracksIsSet() const
{
    return m_TracksIsSet;
}
void OrderDeliveryDTO::unsetTracks()
{
    m_TracksIsSet = false;
}
std::vector<org::openapitools::server::model::OrderShipmentDTO> OrderDeliveryDTO::getShipments() const
{
    return m_Shipments;
}
void OrderDeliveryDTO::setShipments(std::vector<org::openapitools::server::model::OrderShipmentDTO> const& value)
{
    m_Shipments = value;
    m_ShipmentsIsSet = true;
}
bool OrderDeliveryDTO::shipmentsIsSet() const
{
    return m_ShipmentsIsSet;
}
void OrderDeliveryDTO::unsetShipments()
{
    m_ShipmentsIsSet = false;
}
bool OrderDeliveryDTO::isEstimated() const
{
    return m_Estimated;
}
void OrderDeliveryDTO::setEstimated(bool const value)
{
    m_Estimated = value;
    m_EstimatedIsSet = true;
}
bool OrderDeliveryDTO::estimatedIsSet() const
{
    return m_EstimatedIsSet;
}
void OrderDeliveryDTO::unsetEstimated()
{
    m_EstimatedIsSet = false;
}
org::openapitools::server::model::OrderDeliveryEacType OrderDeliveryDTO::getEacType() const
{
    return m_EacType;
}
void OrderDeliveryDTO::setEacType(org::openapitools::server::model::OrderDeliveryEacType const& value)
{
    m_EacType = value;
    m_EacTypeIsSet = true;
}
bool OrderDeliveryDTO::eacTypeIsSet() const
{
    return m_EacTypeIsSet;
}
void OrderDeliveryDTO::unsetEacType()
{
    m_EacTypeIsSet = false;
}
std::string OrderDeliveryDTO::getEacCode() const
{
    return m_EacCode;
}
void OrderDeliveryDTO::setEacCode(std::string const& value)
{
    m_EacCode = value;
    m_EacCodeIsSet = true;
}
bool OrderDeliveryDTO::eacCodeIsSet() const
{
    return m_EacCodeIsSet;
}
void OrderDeliveryDTO::unsetEacCode()
{
    m_EacCodeIsSet = false;
}


} // namespace org::openapitools::server::model

