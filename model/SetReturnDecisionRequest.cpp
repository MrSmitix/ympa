/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "SetReturnDecisionRequest.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

SetReturnDecisionRequest::SetReturnDecisionRequest()
{
    m_ReturnItemId = 0L;
    m_Comment = "";
    m_CommentIsSet = false;
    
}

void SetReturnDecisionRequest::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool SetReturnDecisionRequest::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool SetReturnDecisionRequest::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "SetReturnDecisionRequest" : pathPrefix;

                
    return success;
}

bool SetReturnDecisionRequest::operator==(const SetReturnDecisionRequest& rhs) const
{
    return
    
    
    (getReturnItemId() == rhs.getReturnItemId())
     &&
    
    (getDecisionType() == rhs.getDecisionType())
     &&
    
    
    ((!commentIsSet() && !rhs.commentIsSet()) || (commentIsSet() && rhs.commentIsSet() && getComment() == rhs.getComment()))
    
    ;
}

bool SetReturnDecisionRequest::operator!=(const SetReturnDecisionRequest& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const SetReturnDecisionRequest& o)
{
    j = nlohmann::json::object();
    j["returnItemId"] = o.m_ReturnItemId;
    j["decisionType"] = o.m_DecisionType;
    if(o.commentIsSet())
        j["comment"] = o.m_Comment;
    
}

void from_json(const nlohmann::json& j, SetReturnDecisionRequest& o)
{
    j.at("returnItemId").get_to(o.m_ReturnItemId);
    j.at("decisionType").get_to(o.m_DecisionType);
    if(j.find("comment") != j.end())
    {
        j.at("comment").get_to(o.m_Comment);
        o.m_CommentIsSet = true;
    } 
    
}

int64_t SetReturnDecisionRequest::getReturnItemId() const
{
    return m_ReturnItemId;
}
void SetReturnDecisionRequest::setReturnItemId(int64_t const value)
{
    m_ReturnItemId = value;
}
org::openapitools::server::model::ReturnRequestDecisionType SetReturnDecisionRequest::getDecisionType() const
{
    return m_DecisionType;
}
void SetReturnDecisionRequest::setDecisionType(org::openapitools::server::model::ReturnRequestDecisionType const& value)
{
    m_DecisionType = value;
}
std::string SetReturnDecisionRequest::getComment() const
{
    return m_Comment;
}
void SetReturnDecisionRequest::setComment(std::string const& value)
{
    m_Comment = value;
    m_CommentIsSet = true;
}
bool SetReturnDecisionRequest::commentIsSet() const
{
    return m_CommentIsSet;
}
void SetReturnDecisionRequest::unsetComment()
{
    m_CommentIsSet = false;
}


} // namespace org::openapitools::server::model

