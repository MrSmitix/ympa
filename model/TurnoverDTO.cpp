/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "TurnoverDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

TurnoverDTO::TurnoverDTO()
{
    m_TurnoverDays = 0.0;
    m_TurnoverDaysIsSet = false;
    
}

void TurnoverDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool TurnoverDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool TurnoverDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "TurnoverDTO" : pathPrefix;

            
    return success;
}

bool TurnoverDTO::operator==(const TurnoverDTO& rhs) const
{
    return
    
    
    (getTurnover() == rhs.getTurnover())
     &&
    
    
    ((!turnoverDaysIsSet() && !rhs.turnoverDaysIsSet()) || (turnoverDaysIsSet() && rhs.turnoverDaysIsSet() && getTurnoverDays() == rhs.getTurnoverDays()))
    
    ;
}

bool TurnoverDTO::operator!=(const TurnoverDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const TurnoverDTO& o)
{
    j = nlohmann::json::object();
    j["turnover"] = o.m_Turnover;
    if(o.turnoverDaysIsSet())
        j["turnoverDays"] = o.m_TurnoverDays;
    
}

void from_json(const nlohmann::json& j, TurnoverDTO& o)
{
    j.at("turnover").get_to(o.m_Turnover);
    if(j.find("turnoverDays") != j.end())
    {
        j.at("turnoverDays").get_to(o.m_TurnoverDays);
        o.m_TurnoverDaysIsSet = true;
    } 
    
}

org::openapitools::server::model::TurnoverType TurnoverDTO::getTurnover() const
{
    return m_Turnover;
}
void TurnoverDTO::setTurnover(org::openapitools::server::model::TurnoverType const& value)
{
    m_Turnover = value;
}
double TurnoverDTO::getTurnoverDays() const
{
    return m_TurnoverDays;
}
void TurnoverDTO::setTurnoverDays(double const value)
{
    m_TurnoverDays = value;
    m_TurnoverDaysIsSet = true;
}
bool TurnoverDTO::turnoverDaysIsSet() const
{
    return m_TurnoverDaysIsSet;
}
void TurnoverDTO::unsetTurnoverDays()
{
    m_TurnoverDaysIsSet = false;
}


} // namespace org::openapitools::server::model

