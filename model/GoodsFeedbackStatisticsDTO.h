/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * GoodsFeedbackStatisticsDTO.h
 *
 * Статистическая информация по отзыву.
 */

#ifndef GoodsFeedbackStatisticsDTO_H_
#define GoodsFeedbackStatisticsDTO_H_


#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Статистическая информация по отзыву.
/// </summary>
class  GoodsFeedbackStatisticsDTO
{
public:
    GoodsFeedbackStatisticsDTO();
    virtual ~GoodsFeedbackStatisticsDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const GoodsFeedbackStatisticsDTO& rhs) const;
    bool operator!=(const GoodsFeedbackStatisticsDTO& rhs) const;

    /////////////////////////////////////////////
    /// GoodsFeedbackStatisticsDTO members

    /// <summary>
    /// Оценка товара.
    /// </summary>
    int32_t getRating() const;
    void setRating(int32_t const value);
    /// <summary>
    /// Количество комментариев к отзыву.  Учитываются только ответы на отзывы, а не дочерние комментарии. 
    /// </summary>
    int64_t getCommentsCount() const;
    void setCommentsCount(int64_t const value);
    /// <summary>
    /// Рекомендуют ли этот товар.
    /// </summary>
    bool isRecommended() const;
    void setRecommended(bool const value);
    bool recommendedIsSet() const;
    void unsetRecommended();
    /// <summary>
    /// Количество баллов Плюса, которое автор получил за отзыв.
    /// </summary>
    int64_t getPaidAmount() const;
    void setPaidAmount(int64_t const value);
    bool paidAmountIsSet() const;
    void unsetPaidAmount();

    friend  void to_json(nlohmann::json& j, const GoodsFeedbackStatisticsDTO& o);
    friend  void from_json(const nlohmann::json& j, GoodsFeedbackStatisticsDTO& o);
protected:
    int32_t m_Rating;

    int64_t m_CommentsCount;

    bool m_Recommended;
    bool m_RecommendedIsSet;
    int64_t m_PaidAmount;
    bool m_PaidAmountIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* GoodsFeedbackStatisticsDTO_H_ */
