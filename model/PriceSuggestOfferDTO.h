/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * PriceSuggestOfferDTO.h
 *
 * Товар с ценами для продвижения.
 */

#ifndef PriceSuggestOfferDTO_H_
#define PriceSuggestOfferDTO_H_



#include <string>
#include "PriceSuggestDTO.h"
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Товар с ценами для продвижения.
/// </summary>
class  PriceSuggestOfferDTO 
{
public:
    PriceSuggestOfferDTO() = default;
    explicit PriceSuggestOfferDTO(boost::property_tree::ptree const& pt);
    virtual ~PriceSuggestOfferDTO() = default;

    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// PriceSuggestOfferDTO members

    /// <summary>
    /// SKU на Маркете.
    /// </summary>
    int64_t getMarketSku() const;
    void setMarketSku(int64_t value);

    /// <summary>
    /// Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
    /// </summary>
    std::string getOfferId() const;
    void setOfferId(std::string value);

    /// <summary>
    /// Цены для продвижения. 
    /// </summary>
    std::vector<std::shared_ptr<PriceSuggestDTO>> getPriceSuggestion() const;
    void setPriceSuggestion(std::vector<std::shared_ptr<PriceSuggestDTO>> value);

protected:
    //////////////////////////////////////
    // Override these for customization //
    //////////////////////////////////////

    virtual std::string toJsonString_internal(bool prettyJson = false);
    virtual void fromJsonString_internal(std::string const& jsonString);
    virtual boost::property_tree::ptree toPropertyTree_internal();
    virtual void fromPropertyTree_internal(boost::property_tree::ptree const& pt);


protected:
    int64_t m_MarketSku = 0L;
    std::string m_OfferId = "";
    std::vector<std::shared_ptr<PriceSuggestDTO>> m_PriceSuggestion;
};

std::vector<PriceSuggestOfferDTO> createPriceSuggestOfferDTOVectorFromJsonString(const std::string& json);

}
}
}
}

#endif /* PriceSuggestOfferDTO_H_ */
