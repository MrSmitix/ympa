/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GetCategoriesMaxSaleQuantumResponse.h
 *
 * 
 */

#ifndef GetCategoriesMaxSaleQuantumResponse_H_
#define GetCategoriesMaxSaleQuantumResponse_H_



#include "CategoryErrorDTO.h"
#include "ApiResponseStatusType.h"
#include "MaxSaleQuantumDTO.h"
#include <vector>
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "ApiResponse.h"
#include "GetCategoriesMaxSaleQuantumDTO.h"
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  GetCategoriesMaxSaleQuantumResponse : public ApiResponse, public GetCategoriesMaxSaleQuantumDTO
{
public:
    GetCategoriesMaxSaleQuantumResponse() = default;
    explicit GetCategoriesMaxSaleQuantumResponse(boost::property_tree::ptree const& pt);
    virtual ~GetCategoriesMaxSaleQuantumResponse() = default;

    GetCategoriesMaxSaleQuantumResponse(const GetCategoriesMaxSaleQuantumResponse& other) = default; // copy constructor
    GetCategoriesMaxSaleQuantumResponse(GetCategoriesMaxSaleQuantumResponse&& other) noexcept = default; // move constructor

    GetCategoriesMaxSaleQuantumResponse& operator=(const GetCategoriesMaxSaleQuantumResponse& other) = default; // copy assignment
    GetCategoriesMaxSaleQuantumResponse& operator=(GetCategoriesMaxSaleQuantumResponse&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// GetCategoriesMaxSaleQuantumResponse members

    /// <summary>
    /// 
    /// </summary>
    ApiResponseStatusType getStatus() const;
    void setStatus(ApiResponseStatusType value);

    /// <summary>
    /// Категории и лимит на установку кванта и минимального количества товаров.
    /// </summary>
    std::vector<MaxSaleQuantumDTO> getResults() const;
    void setResults(std::vector<MaxSaleQuantumDTO> value);

    /// <summary>
    /// Ошибки, которые появились из-за переданных категорий.
    /// </summary>
    std::vector<CategoryErrorDTO> getErrors() const;
    void setErrors(std::vector<CategoryErrorDTO> value);

protected:
    ApiResponseStatusType m_Status = ApiResponseStatusType{};
    std::vector<MaxSaleQuantumDTO> m_Results;
    std::vector<CategoryErrorDTO> m_Errors;
};

std::vector<GetCategoriesMaxSaleQuantumResponse> createGetCategoriesMaxSaleQuantumResponseVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<GetCategoriesMaxSaleQuantumResponse>(const GetCategoriesMaxSaleQuantumResponse& val) {
    return val.toPropertyTree();
}

template<>
inline GetCategoriesMaxSaleQuantumResponse fromPt<GetCategoriesMaxSaleQuantumResponse>(const boost::property_tree::ptree& pt) {
    GetCategoriesMaxSaleQuantumResponse ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* GetCategoriesMaxSaleQuantumResponse_H_ */
