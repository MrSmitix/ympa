/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * GoodsFeedbackDTO.h
 *
 * Отзыв о товаре.
 */

#ifndef GoodsFeedbackDTO_H_
#define GoodsFeedbackDTO_H_


#include "GoodsFeedbackIdentifiersDTO.h"
#include "GoodsFeedbackStatisticsDTO.h"
#include "GoodsFeedbackDescriptionDTO.h"
#include <string>
#include "GoodsFeedbackMediaDTO.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Отзыв о товаре.
/// </summary>
class  GoodsFeedbackDTO
{
public:
    GoodsFeedbackDTO();
    virtual ~GoodsFeedbackDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const GoodsFeedbackDTO& rhs) const;
    bool operator!=(const GoodsFeedbackDTO& rhs) const;

    /////////////////////////////////////////////
    /// GoodsFeedbackDTO members

    /// <summary>
    /// Идентификатор отзыва. 
    /// </summary>
    int64_t getFeedbackId() const;
    void setFeedbackId(int64_t const value);
    /// <summary>
    /// Дата и время создания отзыва.
    /// </summary>
    std::string getCreatedAt() const;
    void setCreatedAt(std::string const& value);
    /// <summary>
    /// Нужен ли ответ на отзыв.
    /// </summary>
    bool isNeedReaction() const;
    void setNeedReaction(bool const value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::GoodsFeedbackIdentifiersDTO getIdentifiers() const;
    void setIdentifiers(org::openapitools::server::model::GoodsFeedbackIdentifiersDTO const& value);
    /// <summary>
    /// Имя автора отзыва.
    /// </summary>
    std::string getAuthor() const;
    void setAuthor(std::string const& value);
    bool authorIsSet() const;
    void unsetAuthor();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::GoodsFeedbackDescriptionDTO getDescription() const;
    void setDescription(org::openapitools::server::model::GoodsFeedbackDescriptionDTO const& value);
    bool descriptionIsSet() const;
    void unsetDescription();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::GoodsFeedbackMediaDTO getMedia() const;
    void setMedia(org::openapitools::server::model::GoodsFeedbackMediaDTO const& value);
    bool mediaIsSet() const;
    void unsetMedia();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::GoodsFeedbackStatisticsDTO getStatistics() const;
    void setStatistics(org::openapitools::server::model::GoodsFeedbackStatisticsDTO const& value);

    friend  void to_json(nlohmann::json& j, const GoodsFeedbackDTO& o);
    friend  void from_json(const nlohmann::json& j, GoodsFeedbackDTO& o);
protected:
    int64_t m_FeedbackId;

    std::string m_CreatedAt;

    bool m_NeedReaction;

    org::openapitools::server::model::GoodsFeedbackIdentifiersDTO m_Identifiers;

    std::string m_Author;
    bool m_AuthorIsSet;
    org::openapitools::server::model::GoodsFeedbackDescriptionDTO m_Description;
    bool m_DescriptionIsSet;
    org::openapitools::server::model::GoodsFeedbackMediaDTO m_Media;
    bool m_MediaIsSet;
    org::openapitools::server::model::GoodsFeedbackStatisticsDTO m_Statistics;

    
};

} // namespace org::openapitools::server::model

#endif /* GoodsFeedbackDTO_H_ */
