/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * PromoOfferUpdateWarningDTO.h
 *
 * Предупреждение, которое появилось при добавлении товара в акцию или изменении его цен.
 */

#ifndef PromoOfferUpdateWarningDTO_H_
#define PromoOfferUpdateWarningDTO_H_



#include "PromoOfferUpdateWarningCodeType.h"
#include <vector>
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Предупреждение, которое появилось при добавлении товара в акцию или изменении его цен.
/// </summary>
class  PromoOfferUpdateWarningDTO 
{
public:
    PromoOfferUpdateWarningDTO() = default;
    explicit PromoOfferUpdateWarningDTO(boost::property_tree::ptree const& pt);
    virtual ~PromoOfferUpdateWarningDTO() = default;

    PromoOfferUpdateWarningDTO(const PromoOfferUpdateWarningDTO& other) = default; // copy constructor
    PromoOfferUpdateWarningDTO(PromoOfferUpdateWarningDTO&& other) noexcept = default; // move constructor

    PromoOfferUpdateWarningDTO& operator=(const PromoOfferUpdateWarningDTO& other) = default; // copy assignment
    PromoOfferUpdateWarningDTO& operator=(PromoOfferUpdateWarningDTO&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// PromoOfferUpdateWarningDTO members

    /// <summary>
    /// 
    /// </summary>
    PromoOfferUpdateWarningCodeType getCode() const;
    void setCode(PromoOfferUpdateWarningCodeType value);

    /// <summary>
    /// Идентификаторы магазинов в кабинете, для которых получены предупреждения.  Не возвращается, если предупреждения действуют для всех магазинов в кабинете. 
    /// </summary>
    std::vector<int64_t> getCampaignIds() const;
    void setCampaignIds(std::vector<int64_t> value);

protected:
    PromoOfferUpdateWarningCodeType m_Code = PromoOfferUpdateWarningCodeType{};
    std::vector<int64_t> m_CampaignIds;
};

std::vector<PromoOfferUpdateWarningDTO> createPromoOfferUpdateWarningDTOVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<PromoOfferUpdateWarningDTO>(const PromoOfferUpdateWarningDTO& val) {
    return val.toPropertyTree();
}

template<>
inline PromoOfferUpdateWarningDTO fromPt<PromoOfferUpdateWarningDTO>(const boost::property_tree::ptree& pt) {
    PromoOfferUpdateWarningDTO ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* PromoOfferUpdateWarningDTO_H_ */
