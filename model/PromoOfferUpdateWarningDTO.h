/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * PromoOfferUpdateWarningDTO.h
 *
 * Предупреждение, которое появилось при добавлении товара в акцию или изменении его цен.
 */

#ifndef PromoOfferUpdateWarningDTO_H_
#define PromoOfferUpdateWarningDTO_H_


#include "PromoOfferUpdateWarningCodeType.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Предупреждение, которое появилось при добавлении товара в акцию или изменении его цен.
/// </summary>
class  PromoOfferUpdateWarningDTO
{
public:
    PromoOfferUpdateWarningDTO();
    virtual ~PromoOfferUpdateWarningDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const PromoOfferUpdateWarningDTO& rhs) const;
    bool operator!=(const PromoOfferUpdateWarningDTO& rhs) const;

    /////////////////////////////////////////////
    /// PromoOfferUpdateWarningDTO members

    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::PromoOfferUpdateWarningCodeType getCode() const;
    void setCode(org::openapitools::server::model::PromoOfferUpdateWarningCodeType const& value);
    /// <summary>
    /// Идентификаторы магазинов в кабинете, для которых получены предупреждения.  Не возвращается, если предупреждения действуют для всех магазинов в кабинете. 
    /// </summary>
    std::vector<int64_t> getCampaignIds() const;
    void setCampaignIds(std::vector<int64_t> const value);
    bool campaignIdsIsSet() const;
    void unsetCampaignIds();

    friend  void to_json(nlohmann::json& j, const PromoOfferUpdateWarningDTO& o);
    friend  void from_json(const nlohmann::json& j, PromoOfferUpdateWarningDTO& o);
protected:
    org::openapitools::server::model::PromoOfferUpdateWarningCodeType m_Code;

    std::vector<int64_t> m_CampaignIds;
    bool m_CampaignIdsIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* PromoOfferUpdateWarningDTO_H_ */
