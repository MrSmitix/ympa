/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * WarehouseOfferDTO.h
 *
 * Информация об остатках товара.
 */

#ifndef WarehouseOfferDTO_H_
#define WarehouseOfferDTO_H_


#include "WarehouseStockDTO.h"
#include <string>
#include "TurnoverDTO.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Информация об остатках товара.
/// </summary>
class  WarehouseOfferDTO
{
public:
    WarehouseOfferDTO();
    virtual ~WarehouseOfferDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const WarehouseOfferDTO& rhs) const;
    bool operator!=(const WarehouseOfferDTO& rhs) const;

    /////////////////////////////////////////////
    /// WarehouseOfferDTO members

    /// <summary>
    /// Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
    /// </summary>
    std::string getOfferId() const;
    void setOfferId(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::TurnoverDTO getTurnoverSummary() const;
    void setTurnoverSummary(org::openapitools::server::model::TurnoverDTO const& value);
    bool turnoverSummaryIsSet() const;
    void unsetTurnoverSummary();
    /// <summary>
    /// Информация об остатках.
    /// </summary>
    std::vector<org::openapitools::server::model::WarehouseStockDTO> getStocks() const;
    void setStocks(std::vector<org::openapitools::server::model::WarehouseStockDTO> const& value);
    /// <summary>
    /// Дата и время последнего обновления информации об остатках.  Формат даты и времени: ISO 8601 со смещением относительно UTC. Например, &#x60;2023-11-21T00:42:42+03:00&#x60;. 
    /// </summary>
    std::string getUpdatedAt() const;
    void setUpdatedAt(std::string const& value);
    bool updatedAtIsSet() const;
    void unsetUpdatedAt();

    friend  void to_json(nlohmann::json& j, const WarehouseOfferDTO& o);
    friend  void from_json(const nlohmann::json& j, WarehouseOfferDTO& o);
protected:
    std::string m_OfferId;

    org::openapitools::server::model::TurnoverDTO m_TurnoverSummary;
    bool m_TurnoverSummaryIsSet;
    std::vector<org::openapitools::server::model::WarehouseStockDTO> m_Stocks;

    std::string m_UpdatedAt;
    bool m_UpdatedAtIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* WarehouseOfferDTO_H_ */
