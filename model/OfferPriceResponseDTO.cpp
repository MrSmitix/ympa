/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OfferPriceResponseDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

OfferPriceResponseDTO::OfferPriceResponseDTO()
{
    m_Id = "";
    m_IdIsSet = false;
    m_PriceIsSet = false;
    m_MarketSku = 0L;
    m_MarketSkuIsSet = false;
    m_UpdatedAt = "";
    m_UpdatedAtIsSet = false;
    
}

void OfferPriceResponseDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool OfferPriceResponseDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool OfferPriceResponseDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "OfferPriceResponseDTO" : pathPrefix;

                    
    return success;
}

bool OfferPriceResponseDTO::operator==(const OfferPriceResponseDTO& rhs) const
{
    return
    
    
    
    ((!idIsSet() && !rhs.idIsSet()) || (idIsSet() && rhs.idIsSet() && getId() == rhs.getId())) &&
    
    
    ((!priceIsSet() && !rhs.priceIsSet()) || (priceIsSet() && rhs.priceIsSet() && getPrice() == rhs.getPrice())) &&
    
    
    ((!marketSkuIsSet() && !rhs.marketSkuIsSet()) || (marketSkuIsSet() && rhs.marketSkuIsSet() && getMarketSku() == rhs.getMarketSku())) &&
    
    
    ((!updatedAtIsSet() && !rhs.updatedAtIsSet()) || (updatedAtIsSet() && rhs.updatedAtIsSet() && getUpdatedAt() == rhs.getUpdatedAt()))
    
    ;
}

bool OfferPriceResponseDTO::operator!=(const OfferPriceResponseDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const OfferPriceResponseDTO& o)
{
    j = nlohmann::json::object();
    if(o.idIsSet())
        j["id"] = o.m_Id;
    if(o.priceIsSet())
        j["price"] = o.m_Price;
    if(o.marketSkuIsSet())
        j["marketSku"] = o.m_MarketSku;
    if(o.updatedAtIsSet())
        j["updatedAt"] = o.m_UpdatedAt;
    
}

void from_json(const nlohmann::json& j, OfferPriceResponseDTO& o)
{
    if(j.find("id") != j.end())
    {
        j.at("id").get_to(o.m_Id);
        o.m_IdIsSet = true;
    } 
    if(j.find("price") != j.end())
    {
        j.at("price").get_to(o.m_Price);
        o.m_PriceIsSet = true;
    } 
    if(j.find("marketSku") != j.end())
    {
        j.at("marketSku").get_to(o.m_MarketSku);
        o.m_MarketSkuIsSet = true;
    } 
    if(j.find("updatedAt") != j.end())
    {
        j.at("updatedAt").get_to(o.m_UpdatedAt);
        o.m_UpdatedAtIsSet = true;
    } 
    
}

std::string OfferPriceResponseDTO::getId() const
{
    return m_Id;
}
void OfferPriceResponseDTO::setId(std::string const& value)
{
    m_Id = value;
    m_IdIsSet = true;
}
bool OfferPriceResponseDTO::idIsSet() const
{
    return m_IdIsSet;
}
void OfferPriceResponseDTO::unsetId()
{
    m_IdIsSet = false;
}
org::openapitools::server::model::PriceDTO OfferPriceResponseDTO::getPrice() const
{
    return m_Price;
}
void OfferPriceResponseDTO::setPrice(org::openapitools::server::model::PriceDTO const& value)
{
    m_Price = value;
    m_PriceIsSet = true;
}
bool OfferPriceResponseDTO::priceIsSet() const
{
    return m_PriceIsSet;
}
void OfferPriceResponseDTO::unsetPrice()
{
    m_PriceIsSet = false;
}
int64_t OfferPriceResponseDTO::getMarketSku() const
{
    return m_MarketSku;
}
void OfferPriceResponseDTO::setMarketSku(int64_t const value)
{
    m_MarketSku = value;
    m_MarketSkuIsSet = true;
}
bool OfferPriceResponseDTO::marketSkuIsSet() const
{
    return m_MarketSkuIsSet;
}
void OfferPriceResponseDTO::unsetMarketSku()
{
    m_MarketSkuIsSet = false;
}
std::string OfferPriceResponseDTO::getUpdatedAt() const
{
    return m_UpdatedAt;
}
void OfferPriceResponseDTO::setUpdatedAt(std::string const& value)
{
    m_UpdatedAt = value;
    m_UpdatedAtIsSet = true;
}
bool OfferPriceResponseDTO::updatedAtIsSet() const
{
    return m_UpdatedAtIsSet;
}
void OfferPriceResponseDTO::unsetUpdatedAt()
{
    m_UpdatedAtIsSet = false;
}


} // namespace org::openapitools::server::model

