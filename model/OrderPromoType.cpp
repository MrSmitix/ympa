/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrderPromoType.h"
#include "Helpers.h"
#include <stdexcept>
#include <sstream>

namespace org::openapitools::server::model
{

OrderPromoType::OrderPromoType()
{
    
}

void OrderPromoType::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool OrderPromoType::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool OrderPromoType::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "OrderPromoType" : pathPrefix;

    
    if (m_value == OrderPromoType::eOrderPromoType::INVALID_VALUE_OPENAPI_GENERATED)
    {
        success = false;
        msg << _pathPrefix << ": has no value;";
    }

    return success;
}

bool OrderPromoType::operator==(const OrderPromoType& rhs) const
{
    return
    getValue() == rhs.getValue()
    
    ;
}

bool OrderPromoType::operator!=(const OrderPromoType& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const OrderPromoType& o)
{
    j = nlohmann::json::object();
    
    switch (o.getValue())
    {
        case OrderPromoType::eOrderPromoType::INVALID_VALUE_OPENAPI_GENERATED:
            j = "INVALID_VALUE_OPENAPI_GENERATED";
            break;
        case OrderPromoType::eOrderPromoType::DIRECT_DISCOUNT:
            j = "DIRECT_DISCOUNT";
            break;
        case OrderPromoType::eOrderPromoType::BLUE_SET:
            j = "BLUE_SET";
            break;
        case OrderPromoType::eOrderPromoType::BLUE_FLASH:
            j = "BLUE_FLASH";
            break;
        case OrderPromoType::eOrderPromoType::GENERIC_BUNDLE:
            j = "GENERIC_BUNDLE";
            break;
        case OrderPromoType::eOrderPromoType::MARKET_COUPON:
            j = "MARKET_COUPON";
            break;
        case OrderPromoType::eOrderPromoType::MARKET_PROMOCODE:
            j = "MARKET_PROMOCODE";
            break;
        case OrderPromoType::eOrderPromoType::MARKET_DEAL:
            j = "MARKET_DEAL";
            break;
        case OrderPromoType::eOrderPromoType::MARKET_BLUE:
            j = "MARKET_BLUE";
            break;
        case OrderPromoType::eOrderPromoType::MARKET_PRIME:
            j = "MARKET_PRIME";
            break;
        case OrderPromoType::eOrderPromoType::YANDEX_PLUS:
            j = "YANDEX_PLUS";
            break;
        case OrderPromoType::eOrderPromoType::BERU_PLUS:
            j = "BERU_PLUS";
            break;
        case OrderPromoType::eOrderPromoType::MARKET_COIN:
            j = "MARKET_COIN";
            break;
        case OrderPromoType::eOrderPromoType::YANDEX_EMPLOYEE:
            j = "YANDEX_EMPLOYEE";
            break;
        case OrderPromoType::eOrderPromoType::LIMITED_FREE_DELIVERY_PROMO:
            j = "LIMITED_FREE_DELIVERY_PROMO";
            break;
        case OrderPromoType::eOrderPromoType::FREE_DELIVERY_THRESHOLD:
            j = "FREE_DELIVERY_THRESHOLD";
            break;
        case OrderPromoType::eOrderPromoType::MULTICART_DISCOUNT:
            j = "MULTICART_DISCOUNT";
            break;
        case OrderPromoType::eOrderPromoType::PRICE_DROP_AS_YOU_SHOP:
            j = "PRICE_DROP_AS_YOU_SHOP";
            break;
        case OrderPromoType::eOrderPromoType::FREE_DELIVERY_FOR_LDI:
            j = "FREE_DELIVERY_FOR_LDI";
            break;
        case OrderPromoType::eOrderPromoType::FREE_DELIVERY_FOR_LSC:
            j = "FREE_DELIVERY_FOR_LSC";
            break;
        case OrderPromoType::eOrderPromoType::SECRET_SALE:
            j = "SECRET_SALE";
            break;
        case OrderPromoType::eOrderPromoType::FREE_PICKUP:
            j = "FREE_PICKUP";
            break;
        case OrderPromoType::eOrderPromoType::CHEAPEST_AS_GIFT:
            j = "CHEAPEST_AS_GIFT";
            break;
        case OrderPromoType::eOrderPromoType::CASHBACK:
            j = "CASHBACK";
            break;
        case OrderPromoType::eOrderPromoType::SUPPLIER_MULTICART_DISCOUNT:
            j = "SUPPLIER_MULTICART_DISCOUNT";
            break;
        case OrderPromoType::eOrderPromoType::SPREAD_DISCOUNT_COUNT:
            j = "SPREAD_DISCOUNT_COUNT";
            break;
        case OrderPromoType::eOrderPromoType::SPREAD_DISCOUNT_RECEIPT:
            j = "SPREAD_DISCOUNT_RECEIPT";
            break;
        case OrderPromoType::eOrderPromoType::ANNOUNCEMENT_PROMO:
            j = "ANNOUNCEMENT_PROMO";
            break;
        case OrderPromoType::eOrderPromoType::DISCOUNT_BY_PAYMENT_TYPE:
            j = "DISCOUNT_BY_PAYMENT_TYPE";
            break;
        case OrderPromoType::eOrderPromoType::PERCENT_DISCOUNT:
            j = "PERCENT_DISCOUNT";
            break;
        case OrderPromoType::eOrderPromoType::DCO_EXTRA_DISCOUNT:
            j = "DCO_EXTRA_DISCOUNT";
            break;
        case OrderPromoType::eOrderPromoType::EMPTY_PROMO:
            j = "EMPTY_PROMO";
            break;
        case OrderPromoType::eOrderPromoType::BLOCKING_PROMO:
            j = "BLOCKING_PROMO";
            break;
        case OrderPromoType::eOrderPromoType::UNKNOWN:
            j = "UNKNOWN";
            break;
    }
}

void from_json(const nlohmann::json& j, OrderPromoType& o)
{
    
    auto s = j.get<std::string>();
    if (s == "DIRECT_DISCOUNT") {
     o.setValue(OrderPromoType::eOrderPromoType::DIRECT_DISCOUNT);
    } 
    else if (s == "BLUE_SET") {
     o.setValue(OrderPromoType::eOrderPromoType::BLUE_SET);
    } 
    else if (s == "BLUE_FLASH") {
     o.setValue(OrderPromoType::eOrderPromoType::BLUE_FLASH);
    } 
    else if (s == "GENERIC_BUNDLE") {
     o.setValue(OrderPromoType::eOrderPromoType::GENERIC_BUNDLE);
    } 
    else if (s == "MARKET_COUPON") {
     o.setValue(OrderPromoType::eOrderPromoType::MARKET_COUPON);
    } 
    else if (s == "MARKET_PROMOCODE") {
     o.setValue(OrderPromoType::eOrderPromoType::MARKET_PROMOCODE);
    } 
    else if (s == "MARKET_DEAL") {
     o.setValue(OrderPromoType::eOrderPromoType::MARKET_DEAL);
    } 
    else if (s == "MARKET_BLUE") {
     o.setValue(OrderPromoType::eOrderPromoType::MARKET_BLUE);
    } 
    else if (s == "MARKET_PRIME") {
     o.setValue(OrderPromoType::eOrderPromoType::MARKET_PRIME);
    } 
    else if (s == "YANDEX_PLUS") {
     o.setValue(OrderPromoType::eOrderPromoType::YANDEX_PLUS);
    } 
    else if (s == "BERU_PLUS") {
     o.setValue(OrderPromoType::eOrderPromoType::BERU_PLUS);
    } 
    else if (s == "MARKET_COIN") {
     o.setValue(OrderPromoType::eOrderPromoType::MARKET_COIN);
    } 
    else if (s == "YANDEX_EMPLOYEE") {
     o.setValue(OrderPromoType::eOrderPromoType::YANDEX_EMPLOYEE);
    } 
    else if (s == "LIMITED_FREE_DELIVERY_PROMO") {
     o.setValue(OrderPromoType::eOrderPromoType::LIMITED_FREE_DELIVERY_PROMO);
    } 
    else if (s == "FREE_DELIVERY_THRESHOLD") {
     o.setValue(OrderPromoType::eOrderPromoType::FREE_DELIVERY_THRESHOLD);
    } 
    else if (s == "MULTICART_DISCOUNT") {
     o.setValue(OrderPromoType::eOrderPromoType::MULTICART_DISCOUNT);
    } 
    else if (s == "PRICE_DROP_AS_YOU_SHOP") {
     o.setValue(OrderPromoType::eOrderPromoType::PRICE_DROP_AS_YOU_SHOP);
    } 
    else if (s == "FREE_DELIVERY_FOR_LDI") {
     o.setValue(OrderPromoType::eOrderPromoType::FREE_DELIVERY_FOR_LDI);
    } 
    else if (s == "FREE_DELIVERY_FOR_LSC") {
     o.setValue(OrderPromoType::eOrderPromoType::FREE_DELIVERY_FOR_LSC);
    } 
    else if (s == "SECRET_SALE") {
     o.setValue(OrderPromoType::eOrderPromoType::SECRET_SALE);
    } 
    else if (s == "FREE_PICKUP") {
     o.setValue(OrderPromoType::eOrderPromoType::FREE_PICKUP);
    } 
    else if (s == "CHEAPEST_AS_GIFT") {
     o.setValue(OrderPromoType::eOrderPromoType::CHEAPEST_AS_GIFT);
    } 
    else if (s == "CASHBACK") {
     o.setValue(OrderPromoType::eOrderPromoType::CASHBACK);
    } 
    else if (s == "SUPPLIER_MULTICART_DISCOUNT") {
     o.setValue(OrderPromoType::eOrderPromoType::SUPPLIER_MULTICART_DISCOUNT);
    } 
    else if (s == "SPREAD_DISCOUNT_COUNT") {
     o.setValue(OrderPromoType::eOrderPromoType::SPREAD_DISCOUNT_COUNT);
    } 
    else if (s == "SPREAD_DISCOUNT_RECEIPT") {
     o.setValue(OrderPromoType::eOrderPromoType::SPREAD_DISCOUNT_RECEIPT);
    } 
    else if (s == "ANNOUNCEMENT_PROMO") {
     o.setValue(OrderPromoType::eOrderPromoType::ANNOUNCEMENT_PROMO);
    } 
    else if (s == "DISCOUNT_BY_PAYMENT_TYPE") {
     o.setValue(OrderPromoType::eOrderPromoType::DISCOUNT_BY_PAYMENT_TYPE);
    } 
    else if (s == "PERCENT_DISCOUNT") {
     o.setValue(OrderPromoType::eOrderPromoType::PERCENT_DISCOUNT);
    } 
    else if (s == "DCO_EXTRA_DISCOUNT") {
     o.setValue(OrderPromoType::eOrderPromoType::DCO_EXTRA_DISCOUNT);
    } 
    else if (s == "EMPTY_PROMO") {
     o.setValue(OrderPromoType::eOrderPromoType::EMPTY_PROMO);
    } 
    else if (s == "BLOCKING_PROMO") {
     o.setValue(OrderPromoType::eOrderPromoType::BLOCKING_PROMO);
    } 
    else if (s == "UNKNOWN") {
     o.setValue(OrderPromoType::eOrderPromoType::UNKNOWN);
    }  else {
     std::stringstream ss;
     ss << "Unexpected value " << s << " in json"
        << " cannot be converted to enum of type"
        << " OrderPromoType::eOrderPromoType";
     throw std::invalid_argument(ss.str());
    } 

}

OrderPromoType::eOrderPromoType OrderPromoType::getValue() const
{
    return m_value;
}
void OrderPromoType::setValue(OrderPromoType::eOrderPromoType value)
{
    m_value = value;
}

} // namespace org::openapitools::server::model

