/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "FeedbackFactorDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

FeedbackFactorDTO::FeedbackFactorDTO()
{
    m_Id = 0L;
    m_IdIsSet = false;
    m_Title = "";
    m_TitleIsSet = false;
    m_Description = "";
    m_DescriptionIsSet = false;
    m_Value = 0;
    m_ValueIsSet = false;
    
}

void FeedbackFactorDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool FeedbackFactorDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool FeedbackFactorDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "FeedbackFactorDTO" : pathPrefix;

                    
    return success;
}

bool FeedbackFactorDTO::operator==(const FeedbackFactorDTO& rhs) const
{
    return
    
    
    
    ((!idIsSet() && !rhs.idIsSet()) || (idIsSet() && rhs.idIsSet() && getId() == rhs.getId())) &&
    
    
    ((!titleIsSet() && !rhs.titleIsSet()) || (titleIsSet() && rhs.titleIsSet() && getTitle() == rhs.getTitle())) &&
    
    
    ((!descriptionIsSet() && !rhs.descriptionIsSet()) || (descriptionIsSet() && rhs.descriptionIsSet() && getDescription() == rhs.getDescription())) &&
    
    
    ((!valueIsSet() && !rhs.valueIsSet()) || (valueIsSet() && rhs.valueIsSet() && getValue() == rhs.getValue()))
    
    ;
}

bool FeedbackFactorDTO::operator!=(const FeedbackFactorDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const FeedbackFactorDTO& o)
{
    j = nlohmann::json::object();
    if(o.idIsSet())
        j["id"] = o.m_Id;
    if(o.titleIsSet())
        j["title"] = o.m_Title;
    if(o.descriptionIsSet())
        j["description"] = o.m_Description;
    if(o.valueIsSet())
        j["value"] = o.m_Value;
    
}

void from_json(const nlohmann::json& j, FeedbackFactorDTO& o)
{
    if(j.find("id") != j.end())
    {
        j.at("id").get_to(o.m_Id);
        o.m_IdIsSet = true;
    } 
    if(j.find("title") != j.end())
    {
        j.at("title").get_to(o.m_Title);
        o.m_TitleIsSet = true;
    } 
    if(j.find("description") != j.end())
    {
        j.at("description").get_to(o.m_Description);
        o.m_DescriptionIsSet = true;
    } 
    if(j.find("value") != j.end())
    {
        j.at("value").get_to(o.m_Value);
        o.m_ValueIsSet = true;
    } 
    
}

int64_t FeedbackFactorDTO::getId() const
{
    return m_Id;
}
void FeedbackFactorDTO::setId(int64_t const value)
{
    m_Id = value;
    m_IdIsSet = true;
}
bool FeedbackFactorDTO::idIsSet() const
{
    return m_IdIsSet;
}
void FeedbackFactorDTO::unsetId()
{
    m_IdIsSet = false;
}
std::string FeedbackFactorDTO::getTitle() const
{
    return m_Title;
}
void FeedbackFactorDTO::setTitle(std::string const& value)
{
    m_Title = value;
    m_TitleIsSet = true;
}
bool FeedbackFactorDTO::titleIsSet() const
{
    return m_TitleIsSet;
}
void FeedbackFactorDTO::unsetTitle()
{
    m_TitleIsSet = false;
}
std::string FeedbackFactorDTO::getDescription() const
{
    return m_Description;
}
void FeedbackFactorDTO::setDescription(std::string const& value)
{
    m_Description = value;
    m_DescriptionIsSet = true;
}
bool FeedbackFactorDTO::descriptionIsSet() const
{
    return m_DescriptionIsSet;
}
void FeedbackFactorDTO::unsetDescription()
{
    m_DescriptionIsSet = false;
}
int32_t FeedbackFactorDTO::getValue() const
{
    return m_Value;
}
void FeedbackFactorDTO::setValue(int32_t const value)
{
    m_Value = value;
    m_ValueIsSet = true;
}
bool FeedbackFactorDTO::valueIsSet() const
{
    return m_ValueIsSet;
}
void FeedbackFactorDTO::unsetValue()
{
    m_ValueIsSet = false;
}


} // namespace org::openapitools::server::model

