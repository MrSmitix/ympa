/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "GenerateGoodsTurnoverRequest.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

GenerateGoodsTurnoverRequest::GenerateGoodsTurnoverRequest()
{
    m_CampaignId = 0L;
    m_dateIsSet = false;
    
}

void GenerateGoodsTurnoverRequest::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool GenerateGoodsTurnoverRequest::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool GenerateGoodsTurnoverRequest::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "GenerateGoodsTurnoverRequest" : pathPrefix;

            
    return success;
}

bool GenerateGoodsTurnoverRequest::operator==(const GenerateGoodsTurnoverRequest& rhs) const
{
    return
    
    
    (getCampaignId() == rhs.getCampaignId())
     &&
    
    
    ((!dateIsSet() && !rhs.dateIsSet()) || (dateIsSet() && rhs.dateIsSet() && getDate() == rhs.getDate()))
    
    ;
}

bool GenerateGoodsTurnoverRequest::operator!=(const GenerateGoodsTurnoverRequest& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const GenerateGoodsTurnoverRequest& o)
{
    j = nlohmann::json::object();
    j["campaignId"] = o.m_CampaignId;
    if(o.dateIsSet())
        j["date"] = o.m_date;
    
}

void from_json(const nlohmann::json& j, GenerateGoodsTurnoverRequest& o)
{
    j.at("campaignId").get_to(o.m_CampaignId);
    if(j.find("date") != j.end())
    {
        j.at("date").get_to(o.m_date);
        o.m_dateIsSet = true;
    } 
    
}

int64_t GenerateGoodsTurnoverRequest::getCampaignId() const
{
    return m_CampaignId;
}
void GenerateGoodsTurnoverRequest::setCampaignId(int64_t const value)
{
    m_CampaignId = value;
}
std::string GenerateGoodsTurnoverRequest::getDate() const
{
    return m_date;
}
void GenerateGoodsTurnoverRequest::setDate(std::string const& value)
{
    m_date = value;
    m_dateIsSet = true;
}
bool GenerateGoodsTurnoverRequest::dateIsSet() const
{
    return m_dateIsSet;
}
void GenerateGoodsTurnoverRequest::unsetdate()
{
    m_dateIsSet = false;
}


} // namespace org::openapitools::server::model

