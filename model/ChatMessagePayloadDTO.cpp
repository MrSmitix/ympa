/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ChatMessagePayloadDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

ChatMessagePayloadDTO::ChatMessagePayloadDTO()
{
    m_Name = "";
    m_Url = "";
    m_Size = 0;
    
}

void ChatMessagePayloadDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool ChatMessagePayloadDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool ChatMessagePayloadDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "ChatMessagePayloadDTO" : pathPrefix;

                
    return success;
}

bool ChatMessagePayloadDTO::operator==(const ChatMessagePayloadDTO& rhs) const
{
    return
    
    
    (getName() == rhs.getName())
     &&
    
    (getUrl() == rhs.getUrl())
     &&
    
    (getSize() == rhs.getSize())
    
    
    ;
}

bool ChatMessagePayloadDTO::operator!=(const ChatMessagePayloadDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ChatMessagePayloadDTO& o)
{
    j = nlohmann::json::object();
    j["name"] = o.m_Name;
    j["url"] = o.m_Url;
    j["size"] = o.m_Size;
    
}

void from_json(const nlohmann::json& j, ChatMessagePayloadDTO& o)
{
    j.at("name").get_to(o.m_Name);
    j.at("url").get_to(o.m_Url);
    j.at("size").get_to(o.m_Size);
    
}

std::string ChatMessagePayloadDTO::getName() const
{
    return m_Name;
}
void ChatMessagePayloadDTO::setName(std::string const& value)
{
    m_Name = value;
}
std::string ChatMessagePayloadDTO::getUrl() const
{
    return m_Url;
}
void ChatMessagePayloadDTO::setUrl(std::string const& value)
{
    m_Url = value;
}
int32_t ChatMessagePayloadDTO::getSize() const
{
    return m_Size;
}
void ChatMessagePayloadDTO::setSize(int32_t const value)
{
    m_Size = value;
}


} // namespace org::openapitools::server::model

