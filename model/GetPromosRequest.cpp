/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "GetPromosRequest.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

GetPromosRequest::GetPromosRequest()
{
    m_ParticipationIsSet = false;
    m_MechanicsIsSet = false;
    
}

void GetPromosRequest::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool GetPromosRequest::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool GetPromosRequest::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "GetPromosRequest" : pathPrefix;

            
    return success;
}

bool GetPromosRequest::operator==(const GetPromosRequest& rhs) const
{
    return
    
    
    
    ((!participationIsSet() && !rhs.participationIsSet()) || (participationIsSet() && rhs.participationIsSet() && getParticipation() == rhs.getParticipation())) &&
    
    
    ((!mechanicsIsSet() && !rhs.mechanicsIsSet()) || (mechanicsIsSet() && rhs.mechanicsIsSet() && getMechanics() == rhs.getMechanics()))
    
    ;
}

bool GetPromosRequest::operator!=(const GetPromosRequest& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const GetPromosRequest& o)
{
    j = nlohmann::json::object();
    if(o.participationIsSet())
        j["participation"] = o.m_Participation;
    if(o.mechanicsIsSet())
        j["mechanics"] = o.m_Mechanics;
    
}

void from_json(const nlohmann::json& j, GetPromosRequest& o)
{
    if(j.find("participation") != j.end())
    {
        j.at("participation").get_to(o.m_Participation);
        o.m_ParticipationIsSet = true;
    } 
    if(j.find("mechanics") != j.end())
    {
        j.at("mechanics").get_to(o.m_Mechanics);
        o.m_MechanicsIsSet = true;
    } 
    
}

org::openapitools::server::model::PromoParticipationType GetPromosRequest::getParticipation() const
{
    return m_Participation;
}
void GetPromosRequest::setParticipation(org::openapitools::server::model::PromoParticipationType const& value)
{
    m_Participation = value;
    m_ParticipationIsSet = true;
}
bool GetPromosRequest::participationIsSet() const
{
    return m_ParticipationIsSet;
}
void GetPromosRequest::unsetParticipation()
{
    m_ParticipationIsSet = false;
}
org::openapitools::server::model::MechanicsType GetPromosRequest::getMechanics() const
{
    return m_Mechanics;
}
void GetPromosRequest::setMechanics(org::openapitools::server::model::MechanicsType const& value)
{
    m_Mechanics = value;
    m_MechanicsIsSet = true;
}
bool GetPromosRequest::mechanicsIsSet() const
{
    return m_MechanicsIsSet;
}
void GetPromosRequest::unsetMechanics()
{
    m_MechanicsIsSet = false;
}


} // namespace org::openapitools::server::model

