/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrderStatusChangeDTO.h
 *
 * Заказ.
 */

#ifndef OrderStatusChangeDTO_H_
#define OrderStatusChangeDTO_H_


#include "OrderStatusType.h"
#include "OrderStatusChangeDeliveryDTO.h"
#include "OrderSubstatusType.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Заказ.
/// </summary>
class  OrderStatusChangeDTO
{
public:
    OrderStatusChangeDTO();
    virtual ~OrderStatusChangeDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const OrderStatusChangeDTO& rhs) const;
    bool operator!=(const OrderStatusChangeDTO& rhs) const;

    /////////////////////////////////////////////
    /// OrderStatusChangeDTO members

    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::OrderStatusType getStatus() const;
    void setStatus(org::openapitools::server::model::OrderStatusType const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::OrderSubstatusType getSubstatus() const;
    void setSubstatus(org::openapitools::server::model::OrderSubstatusType const& value);
    bool substatusIsSet() const;
    void unsetSubstatus();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::OrderStatusChangeDeliveryDTO getDelivery() const;
    void setDelivery(org::openapitools::server::model::OrderStatusChangeDeliveryDTO const& value);
    bool deliveryIsSet() const;
    void unsetDelivery();

    friend  void to_json(nlohmann::json& j, const OrderStatusChangeDTO& o);
    friend  void from_json(const nlohmann::json& j, OrderStatusChangeDTO& o);
protected:
    org::openapitools::server::model::OrderStatusType m_Status;

    org::openapitools::server::model::OrderSubstatusType m_Substatus;
    bool m_SubstatusIsSet;
    org::openapitools::server::model::OrderStatusChangeDeliveryDTO m_Delivery;
    bool m_DeliveryIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* OrderStatusChangeDTO_H_ */
