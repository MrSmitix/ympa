/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "AgeDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

AgeDTO::AgeDTO()
{
    m_Value = 0.0;
    
}

void AgeDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool AgeDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool AgeDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "AgeDTO" : pathPrefix;

         
    
    /* Value */ {
        const double& value = m_Value;
        const std::string currentValuePath = _pathPrefix + ".value";
                
        
        if (value < 0)
        {
            success = false;
            msg << currentValuePath << ": must be greater than or equal to 0;";
        }

    }
        
    return success;
}

bool AgeDTO::operator==(const AgeDTO& rhs) const
{
    return
    
    
    (getValue() == rhs.getValue())
     &&
    
    (getAgeUnit() == rhs.getAgeUnit())
    
    
    ;
}

bool AgeDTO::operator!=(const AgeDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const AgeDTO& o)
{
    j = nlohmann::json::object();
    j["value"] = o.m_Value;
    j["ageUnit"] = o.m_AgeUnit;
    
}

void from_json(const nlohmann::json& j, AgeDTO& o)
{
    j.at("value").get_to(o.m_Value);
    j.at("ageUnit").get_to(o.m_AgeUnit);
    
}

double AgeDTO::getValue() const
{
    return m_Value;
}
void AgeDTO::setValue(double const value)
{
    m_Value = value;
}
org::openapitools::server::model::AgeUnitType AgeDTO::getAgeUnit() const
{
    return m_AgeUnit;
}
void AgeDTO::setAgeUnit(org::openapitools::server::model::AgeUnitType const& value)
{
    m_AgeUnit = value;
}


} // namespace org::openapitools::server::model

