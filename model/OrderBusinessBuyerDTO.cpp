/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrderBusinessBuyerDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

OrderBusinessBuyerDTO::OrderBusinessBuyerDTO()
{
    m_Inn = "";
    m_InnIsSet = false;
    m_Kpp = "";
    m_KppIsSet = false;
    m_OrganizationName = "";
    m_OrganizationNameIsSet = false;
    m_OrganizationJurAddress = "";
    m_OrganizationJurAddressIsSet = false;
    
}

void OrderBusinessBuyerDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool OrderBusinessBuyerDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool OrderBusinessBuyerDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "OrderBusinessBuyerDTO" : pathPrefix;

                    
    return success;
}

bool OrderBusinessBuyerDTO::operator==(const OrderBusinessBuyerDTO& rhs) const
{
    return
    
    
    
    ((!innIsSet() && !rhs.innIsSet()) || (innIsSet() && rhs.innIsSet() && getInn() == rhs.getInn())) &&
    
    
    ((!kppIsSet() && !rhs.kppIsSet()) || (kppIsSet() && rhs.kppIsSet() && getKpp() == rhs.getKpp())) &&
    
    
    ((!organizationNameIsSet() && !rhs.organizationNameIsSet()) || (organizationNameIsSet() && rhs.organizationNameIsSet() && getOrganizationName() == rhs.getOrganizationName())) &&
    
    
    ((!organizationJurAddressIsSet() && !rhs.organizationJurAddressIsSet()) || (organizationJurAddressIsSet() && rhs.organizationJurAddressIsSet() && getOrganizationJurAddress() == rhs.getOrganizationJurAddress()))
    
    ;
}

bool OrderBusinessBuyerDTO::operator!=(const OrderBusinessBuyerDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const OrderBusinessBuyerDTO& o)
{
    j = nlohmann::json::object();
    if(o.innIsSet())
        j["inn"] = o.m_Inn;
    if(o.kppIsSet())
        j["kpp"] = o.m_Kpp;
    if(o.organizationNameIsSet())
        j["organizationName"] = o.m_OrganizationName;
    if(o.organizationJurAddressIsSet())
        j["organizationJurAddress"] = o.m_OrganizationJurAddress;
    
}

void from_json(const nlohmann::json& j, OrderBusinessBuyerDTO& o)
{
    if(j.find("inn") != j.end())
    {
        j.at("inn").get_to(o.m_Inn);
        o.m_InnIsSet = true;
    } 
    if(j.find("kpp") != j.end())
    {
        j.at("kpp").get_to(o.m_Kpp);
        o.m_KppIsSet = true;
    } 
    if(j.find("organizationName") != j.end())
    {
        j.at("organizationName").get_to(o.m_OrganizationName);
        o.m_OrganizationNameIsSet = true;
    } 
    if(j.find("organizationJurAddress") != j.end())
    {
        j.at("organizationJurAddress").get_to(o.m_OrganizationJurAddress);
        o.m_OrganizationJurAddressIsSet = true;
    } 
    
}

std::string OrderBusinessBuyerDTO::getInn() const
{
    return m_Inn;
}
void OrderBusinessBuyerDTO::setInn(std::string const& value)
{
    m_Inn = value;
    m_InnIsSet = true;
}
bool OrderBusinessBuyerDTO::innIsSet() const
{
    return m_InnIsSet;
}
void OrderBusinessBuyerDTO::unsetInn()
{
    m_InnIsSet = false;
}
std::string OrderBusinessBuyerDTO::getKpp() const
{
    return m_Kpp;
}
void OrderBusinessBuyerDTO::setKpp(std::string const& value)
{
    m_Kpp = value;
    m_KppIsSet = true;
}
bool OrderBusinessBuyerDTO::kppIsSet() const
{
    return m_KppIsSet;
}
void OrderBusinessBuyerDTO::unsetKpp()
{
    m_KppIsSet = false;
}
std::string OrderBusinessBuyerDTO::getOrganizationName() const
{
    return m_OrganizationName;
}
void OrderBusinessBuyerDTO::setOrganizationName(std::string const& value)
{
    m_OrganizationName = value;
    m_OrganizationNameIsSet = true;
}
bool OrderBusinessBuyerDTO::organizationNameIsSet() const
{
    return m_OrganizationNameIsSet;
}
void OrderBusinessBuyerDTO::unsetOrganizationName()
{
    m_OrganizationNameIsSet = false;
}
std::string OrderBusinessBuyerDTO::getOrganizationJurAddress() const
{
    return m_OrganizationJurAddress;
}
void OrderBusinessBuyerDTO::setOrganizationJurAddress(std::string const& value)
{
    m_OrganizationJurAddress = value;
    m_OrganizationJurAddressIsSet = true;
}
bool OrderBusinessBuyerDTO::organizationJurAddressIsSet() const
{
    return m_OrganizationJurAddressIsSet;
}
void OrderBusinessBuyerDTO::unsetOrganizationJurAddress()
{
    m_OrganizationJurAddressIsSet = false;
}


} // namespace org::openapitools::server::model

