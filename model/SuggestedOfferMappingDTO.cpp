/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "SuggestedOfferMappingDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

SuggestedOfferMappingDTO::SuggestedOfferMappingDTO()
{
    m_OfferIsSet = false;
    m_MappingIsSet = false;
    
}

void SuggestedOfferMappingDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool SuggestedOfferMappingDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool SuggestedOfferMappingDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "SuggestedOfferMappingDTO" : pathPrefix;

            
    return success;
}

bool SuggestedOfferMappingDTO::operator==(const SuggestedOfferMappingDTO& rhs) const
{
    return
    
    
    
    ((!offerIsSet() && !rhs.offerIsSet()) || (offerIsSet() && rhs.offerIsSet() && getOffer() == rhs.getOffer())) &&
    
    
    ((!mappingIsSet() && !rhs.mappingIsSet()) || (mappingIsSet() && rhs.mappingIsSet() && getMapping() == rhs.getMapping()))
    
    ;
}

bool SuggestedOfferMappingDTO::operator!=(const SuggestedOfferMappingDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const SuggestedOfferMappingDTO& o)
{
    j = nlohmann::json::object();
    if(o.offerIsSet())
        j["offer"] = o.m_Offer;
    if(o.mappingIsSet())
        j["mapping"] = o.m_Mapping;
    
}

void from_json(const nlohmann::json& j, SuggestedOfferMappingDTO& o)
{
    if(j.find("offer") != j.end())
    {
        j.at("offer").get_to(o.m_Offer);
        o.m_OfferIsSet = true;
    } 
    if(j.find("mapping") != j.end())
    {
        j.at("mapping").get_to(o.m_Mapping);
        o.m_MappingIsSet = true;
    } 
    
}

org::openapitools::server::model::SuggestedOfferDTO SuggestedOfferMappingDTO::getOffer() const
{
    return m_Offer;
}
void SuggestedOfferMappingDTO::setOffer(org::openapitools::server::model::SuggestedOfferDTO const& value)
{
    m_Offer = value;
    m_OfferIsSet = true;
}
bool SuggestedOfferMappingDTO::offerIsSet() const
{
    return m_OfferIsSet;
}
void SuggestedOfferMappingDTO::unsetOffer()
{
    m_OfferIsSet = false;
}
org::openapitools::server::model::GetMappingDTO SuggestedOfferMappingDTO::getMapping() const
{
    return m_Mapping;
}
void SuggestedOfferMappingDTO::setMapping(org::openapitools::server::model::GetMappingDTO const& value)
{
    m_Mapping = value;
    m_MappingIsSet = true;
}
bool SuggestedOfferMappingDTO::mappingIsSet() const
{
    return m_MappingIsSet;
}
void SuggestedOfferMappingDTO::unsetMapping()
{
    m_MappingIsSet = false;
}


} // namespace org::openapitools::server::model

