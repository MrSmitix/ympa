/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrderUpdateStatusType.h
 *
 * Изменился ли статус заказа:  * &#x60;OK&#x60; — статус изменен.  * &#x60;ERROR&#x60; — статус не изменен. В этом случае появится сообщение об ошибке в параметре &#x60;errorDetails&#x60;. 
 */

#ifndef OrderUpdateStatusType_H_
#define OrderUpdateStatusType_H_


#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Изменился ли статус заказа:  * &#x60;OK&#x60; — статус изменен.  * &#x60;ERROR&#x60; — статус не изменен. В этом случае появится сообщение об ошибке в параметре &#x60;errorDetails&#x60;. 
/// </summary>
class  OrderUpdateStatusType
{
public:
    OrderUpdateStatusType();
    virtual ~OrderUpdateStatusType() = default;

    enum class eOrderUpdateStatusType {
    // To have a valid default value.
    // Avoiding name clashes with user defined
    // enum values
    INVALID_VALUE_OPENAPI_GENERATED = 0,
    OK, 
    ERROR
    };

    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const OrderUpdateStatusType& rhs) const;
    bool operator!=(const OrderUpdateStatusType& rhs) const;

    /////////////////////////////////////////////
    /// OrderUpdateStatusType members

    OrderUpdateStatusType::eOrderUpdateStatusType getValue() const;
    void setValue(OrderUpdateStatusType::eOrderUpdateStatusType value);
    
    friend  void to_json(nlohmann::json& j, const OrderUpdateStatusType& o);
    friend  void from_json(const nlohmann::json& j, OrderUpdateStatusType& o);
protected:
    OrderUpdateStatusType::eOrderUpdateStatusType m_value = OrderUpdateStatusType::eOrderUpdateStatusType::INVALID_VALUE_OPENAPI_GENERATED;
};

} // namespace org::openapitools::server::model

#endif /* OrderUpdateStatusType_H_ */
