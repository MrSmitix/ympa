/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ShipmentStatusChangeDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

ShipmentStatusChangeDTO::ShipmentStatusChangeDTO()
{
    m_StatusIsSet = false;
    m_Description = "";
    m_DescriptionIsSet = false;
    m_UpdateTime = "";
    m_UpdateTimeIsSet = false;
    
}

void ShipmentStatusChangeDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool ShipmentStatusChangeDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool ShipmentStatusChangeDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "ShipmentStatusChangeDTO" : pathPrefix;

                
    return success;
}

bool ShipmentStatusChangeDTO::operator==(const ShipmentStatusChangeDTO& rhs) const
{
    return
    
    
    
    ((!statusIsSet() && !rhs.statusIsSet()) || (statusIsSet() && rhs.statusIsSet() && getStatus() == rhs.getStatus())) &&
    
    
    ((!descriptionIsSet() && !rhs.descriptionIsSet()) || (descriptionIsSet() && rhs.descriptionIsSet() && getDescription() == rhs.getDescription())) &&
    
    
    ((!updateTimeIsSet() && !rhs.updateTimeIsSet()) || (updateTimeIsSet() && rhs.updateTimeIsSet() && getUpdateTime() == rhs.getUpdateTime()))
    
    ;
}

bool ShipmentStatusChangeDTO::operator!=(const ShipmentStatusChangeDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ShipmentStatusChangeDTO& o)
{
    j = nlohmann::json::object();
    if(o.statusIsSet())
        j["status"] = o.m_Status;
    if(o.descriptionIsSet())
        j["description"] = o.m_Description;
    if(o.updateTimeIsSet())
        j["updateTime"] = o.m_UpdateTime;
    
}

void from_json(const nlohmann::json& j, ShipmentStatusChangeDTO& o)
{
    if(j.find("status") != j.end())
    {
        j.at("status").get_to(o.m_Status);
        o.m_StatusIsSet = true;
    } 
    if(j.find("description") != j.end())
    {
        j.at("description").get_to(o.m_Description);
        o.m_DescriptionIsSet = true;
    } 
    if(j.find("updateTime") != j.end())
    {
        j.at("updateTime").get_to(o.m_UpdateTime);
        o.m_UpdateTimeIsSet = true;
    } 
    
}

org::openapitools::server::model::ShipmentStatusType ShipmentStatusChangeDTO::getStatus() const
{
    return m_Status;
}
void ShipmentStatusChangeDTO::setStatus(org::openapitools::server::model::ShipmentStatusType const& value)
{
    m_Status = value;
    m_StatusIsSet = true;
}
bool ShipmentStatusChangeDTO::statusIsSet() const
{
    return m_StatusIsSet;
}
void ShipmentStatusChangeDTO::unsetStatus()
{
    m_StatusIsSet = false;
}
std::string ShipmentStatusChangeDTO::getDescription() const
{
    return m_Description;
}
void ShipmentStatusChangeDTO::setDescription(std::string const& value)
{
    m_Description = value;
    m_DescriptionIsSet = true;
}
bool ShipmentStatusChangeDTO::descriptionIsSet() const
{
    return m_DescriptionIsSet;
}
void ShipmentStatusChangeDTO::unsetDescription()
{
    m_DescriptionIsSet = false;
}
std::string ShipmentStatusChangeDTO::getUpdateTime() const
{
    return m_UpdateTime;
}
void ShipmentStatusChangeDTO::setUpdateTime(std::string const& value)
{
    m_UpdateTime = value;
    m_UpdateTimeIsSet = true;
}
bool ShipmentStatusChangeDTO::updateTimeIsSet() const
{
    return m_UpdateTimeIsSet;
}
void ShipmentStatusChangeDTO::unsetUpdateTime()
{
    m_UpdateTimeIsSet = false;
}


} // namespace org::openapitools::server::model

