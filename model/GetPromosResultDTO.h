/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GetPromosResultDTO.h
 *
 * Информация об акциях Маркета.
 */

#ifndef GetPromosResultDTO_H_
#define GetPromosResultDTO_H_



#include "GetPromoDTO.h"
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Информация об акциях Маркета.
/// </summary>
class  GetPromosResultDTO 
{
public:
    GetPromosResultDTO() = default;
    explicit GetPromosResultDTO(boost::property_tree::ptree const& pt);
    virtual ~GetPromosResultDTO() = default;

    GetPromosResultDTO(const GetPromosResultDTO& other) = default; // copy constructor
    GetPromosResultDTO(GetPromosResultDTO&& other) noexcept = default; // move constructor

    GetPromosResultDTO& operator=(const GetPromosResultDTO& other) = default; // copy assignment
    GetPromosResultDTO& operator=(GetPromosResultDTO&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// GetPromosResultDTO members

    /// <summary>
    /// Акции Маркета.
    /// </summary>
    std::vector<GetPromoDTO> getPromos() const;
    void setPromos(std::vector<GetPromoDTO> value);

protected:
    std::vector<GetPromoDTO> m_Promos;
};

std::vector<GetPromosResultDTO> createGetPromosResultDTOVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<GetPromosResultDTO>(const GetPromosResultDTO& val) {
    return val.toPropertyTree();
}

template<>
inline GetPromosResultDTO fromPt<GetPromosResultDTO>(const boost::property_tree::ptree& pt) {
    GetPromosResultDTO ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* GetPromosResultDTO_H_ */
