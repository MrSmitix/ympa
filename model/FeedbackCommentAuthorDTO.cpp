/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "FeedbackCommentAuthorDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

FeedbackCommentAuthorDTO::FeedbackCommentAuthorDTO()
{
    m_TypeIsSet = false;
    m_Name = "";
    m_NameIsSet = false;
    
}

void FeedbackCommentAuthorDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool FeedbackCommentAuthorDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool FeedbackCommentAuthorDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "FeedbackCommentAuthorDTO" : pathPrefix;

            
    return success;
}

bool FeedbackCommentAuthorDTO::operator==(const FeedbackCommentAuthorDTO& rhs) const
{
    return
    
    
    
    ((!typeIsSet() && !rhs.typeIsSet()) || (typeIsSet() && rhs.typeIsSet() && getType() == rhs.getType())) &&
    
    
    ((!nameIsSet() && !rhs.nameIsSet()) || (nameIsSet() && rhs.nameIsSet() && getName() == rhs.getName()))
    
    ;
}

bool FeedbackCommentAuthorDTO::operator!=(const FeedbackCommentAuthorDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const FeedbackCommentAuthorDTO& o)
{
    j = nlohmann::json::object();
    if(o.typeIsSet())
        j["type"] = o.m_Type;
    if(o.nameIsSet())
        j["name"] = o.m_Name;
    
}

void from_json(const nlohmann::json& j, FeedbackCommentAuthorDTO& o)
{
    if(j.find("type") != j.end())
    {
        j.at("type").get_to(o.m_Type);
        o.m_TypeIsSet = true;
    } 
    if(j.find("name") != j.end())
    {
        j.at("name").get_to(o.m_Name);
        o.m_NameIsSet = true;
    } 
    
}

org::openapitools::server::model::FeedbackCommentAuthorType FeedbackCommentAuthorDTO::getType() const
{
    return m_Type;
}
void FeedbackCommentAuthorDTO::setType(org::openapitools::server::model::FeedbackCommentAuthorType const& value)
{
    m_Type = value;
    m_TypeIsSet = true;
}
bool FeedbackCommentAuthorDTO::typeIsSet() const
{
    return m_TypeIsSet;
}
void FeedbackCommentAuthorDTO::unsetType()
{
    m_TypeIsSet = false;
}
std::string FeedbackCommentAuthorDTO::getName() const
{
    return m_Name;
}
void FeedbackCommentAuthorDTO::setName(std::string const& value)
{
    m_Name = value;
    m_NameIsSet = true;
}
bool FeedbackCommentAuthorDTO::nameIsSet() const
{
    return m_NameIsSet;
}
void FeedbackCommentAuthorDTO::unsetName()
{
    m_NameIsSet = false;
}


} // namespace org::openapitools::server::model

