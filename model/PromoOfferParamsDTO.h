/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * PromoOfferParamsDTO.h
 *
 * Параметры товара в акции.  Возвращается параметр, который соответствует типу акции. 
 */

#ifndef PromoOfferParamsDTO_H_
#define PromoOfferParamsDTO_H_



#include "PromoOfferPromocodeParamsDTO.h"
#include "PromoOfferDiscountParamsDTO.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Параметры товара в акции.  Возвращается параметр, который соответствует типу акции. 
/// </summary>
class  PromoOfferParamsDTO 
{
public:
    PromoOfferParamsDTO() = default;
    explicit PromoOfferParamsDTO(boost::property_tree::ptree const& pt);
    virtual ~PromoOfferParamsDTO() = default;

    PromoOfferParamsDTO(const PromoOfferParamsDTO& other) = default; // copy constructor
    PromoOfferParamsDTO(PromoOfferParamsDTO&& other) noexcept = default; // move constructor

    PromoOfferParamsDTO& operator=(const PromoOfferParamsDTO& other) = default; // copy assignment
    PromoOfferParamsDTO& operator=(PromoOfferParamsDTO&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// PromoOfferParamsDTO members

    /// <summary>
    /// 
    /// </summary>
    PromoOfferDiscountParamsDTO getDiscountParams() const;
    void setDiscountParams(PromoOfferDiscountParamsDTO value);

    /// <summary>
    /// 
    /// </summary>
    PromoOfferPromocodeParamsDTO getPromocodeParams() const;
    void setPromocodeParams(PromoOfferPromocodeParamsDTO value);

protected:
    PromoOfferDiscountParamsDTO m_DiscountParams;
    PromoOfferPromocodeParamsDTO m_PromocodeParams;
};

std::vector<PromoOfferParamsDTO> createPromoOfferParamsDTOVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<PromoOfferParamsDTO>(const PromoOfferParamsDTO& val) {
    return val.toPropertyTree();
}

template<>
inline PromoOfferParamsDTO fromPt<PromoOfferParamsDTO>(const boost::property_tree::ptree& pt) {
    PromoOfferParamsDTO ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* PromoOfferParamsDTO_H_ */
