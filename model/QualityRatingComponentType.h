/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * QualityRatingComponentType.h
 *
 * Составляющие индекса качества.  **Для модели DBS:** * &#x60;DBS_CANCELLATION_RATE&#x60; — доля отмененных товаров. * &#x60;DBS_LATE_DELIVERY_RATE&#x60; — доля заказов, доставленных после плановой даты.  **Для моделей FBS и Экспресс:** * &#x60;FBS_CANCELLATION_RATE&#x60; — доля отмененных товаров. * &#x60;FBS_LATE_SHIP_RATE&#x60; — доля не вовремя отгруженных заказов.  **Для модели FBY:** * &#x60;FBY_LATE_DELIVERY_RATE&#x60; — доля товаров, которые приехали на склад с опозданием. * &#x60;FBY_CANCELLATION_RATE&#x60; — доля отмененных или недоставленных товаров. * &#x60;FBY_DELIVERY_DIFF_RATE&#x60; — доля товаров, которые не прибыли вместе с поставкой или которые не приняли. * &#x60;FBY_LATE_EDITING_RATE&#x60; — доля товаров, которые поздно убрали из заявки. 
 */

#ifndef QualityRatingComponentType_H_
#define QualityRatingComponentType_H_



#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Составляющие индекса качества.  **Для модели DBS:** * &#x60;DBS_CANCELLATION_RATE&#x60; — доля отмененных товаров. * &#x60;DBS_LATE_DELIVERY_RATE&#x60; — доля заказов, доставленных после плановой даты.  **Для моделей FBS и Экспресс:** * &#x60;FBS_CANCELLATION_RATE&#x60; — доля отмененных товаров. * &#x60;FBS_LATE_SHIP_RATE&#x60; — доля не вовремя отгруженных заказов.  **Для модели FBY:** * &#x60;FBY_LATE_DELIVERY_RATE&#x60; — доля товаров, которые приехали на склад с опозданием. * &#x60;FBY_CANCELLATION_RATE&#x60; — доля отмененных или недоставленных товаров. * &#x60;FBY_DELIVERY_DIFF_RATE&#x60; — доля товаров, которые не прибыли вместе с поставкой или которые не приняли. * &#x60;FBY_LATE_EDITING_RATE&#x60; — доля товаров, которые поздно убрали из заявки. 
/// </summary>
class  QualityRatingComponentType 
{
public:
    QualityRatingComponentType() = default;
    explicit QualityRatingComponentType(boost::property_tree::ptree const& pt);
    virtual ~QualityRatingComponentType() = default;

    QualityRatingComponentType(const QualityRatingComponentType& other) = default; // copy constructor
    QualityRatingComponentType(QualityRatingComponentType&& other) noexcept = default; // move constructor

    QualityRatingComponentType& operator=(const QualityRatingComponentType& other) = default; // copy assignment
    QualityRatingComponentType& operator=(QualityRatingComponentType&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    std::string toString() const;
    void fromString(const std::string& str);

    /////////////////////////////////////////////
    /// QualityRatingComponentType members
    std::string getEnumValue() const;
    void setEnumValue(const std::string& val);

protected:
    std::string m_QualityRatingComponentTypeEnumValue;
};

std::vector<QualityRatingComponentType> createQualityRatingComponentTypeVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<QualityRatingComponentType>(const QualityRatingComponentType& val) {
    return val.toPropertyTree();
}

template<>
inline QualityRatingComponentType fromPt<QualityRatingComponentType>(const boost::property_tree::ptree& pt) {
    QualityRatingComponentType ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* QualityRatingComponentType_H_ */
