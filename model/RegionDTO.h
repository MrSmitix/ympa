/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * RegionDTO.h
 *
 * Регион доставки.
 */

#ifndef RegionDTO_H_
#define RegionDTO_H_


#include "RegionType.h"
#include <string>
#include "RegionDTO.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Регион доставки.
/// </summary>
class  RegionDTO
{
public:
    RegionDTO();
    virtual ~RegionDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const RegionDTO& rhs) const;
    bool operator!=(const RegionDTO& rhs) const;

    /////////////////////////////////////////////
    /// RegionDTO members

    /// <summary>
    /// Идентификатор региона.
    /// </summary>
    int64_t getId() const;
    void setId(int64_t const value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// Название региона.
    /// </summary>
    std::string getName() const;
    void setName(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::RegionType getType() const;
    void setType(org::openapitools::server::model::RegionType const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::RegionDTO getParent() const;
    void setParent(org::openapitools::server::model::RegionDTO const& value);
    bool parentIsSet() const;
    void unsetParent();
    /// <summary>
    /// Дочерние регионы.
    /// </summary>
    std::vector<org::openapitools::server::model::RegionDTO> getChildren() const;
    void setChildren(std::vector<org::openapitools::server::model::RegionDTO> const& value);
    bool childrenIsSet() const;
    void unsetChildren();

    friend  void to_json(nlohmann::json& j, const RegionDTO& o);
    friend  void from_json(const nlohmann::json& j, RegionDTO& o);
protected:
    int64_t m_Id;
    bool m_IdIsSet;
    std::string m_Name;

    org::openapitools::server::model::RegionType m_Type;

    org::openapitools::server::model::RegionDTO m_Parent;
    bool m_ParentIsSet;
    std::vector<org::openapitools::server::model::RegionDTO> m_Children;
    bool m_ChildrenIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* RegionDTO_H_ */
