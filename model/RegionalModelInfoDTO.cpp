/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "RegionalModelInfoDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

RegionalModelInfoDTO::RegionalModelInfoDTO()
{
    m_CurrencyIsSet = false;
    m_RegionId = 0L;
    m_RegionIdIsSet = false;
    
}

void RegionalModelInfoDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool RegionalModelInfoDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool RegionalModelInfoDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "RegionalModelInfoDTO" : pathPrefix;

            
    return success;
}

bool RegionalModelInfoDTO::operator==(const RegionalModelInfoDTO& rhs) const
{
    return
    
    
    
    ((!currencyIsSet() && !rhs.currencyIsSet()) || (currencyIsSet() && rhs.currencyIsSet() && getCurrency() == rhs.getCurrency())) &&
    
    
    ((!regionIdIsSet() && !rhs.regionIdIsSet()) || (regionIdIsSet() && rhs.regionIdIsSet() && getRegionId() == rhs.getRegionId()))
    
    ;
}

bool RegionalModelInfoDTO::operator!=(const RegionalModelInfoDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const RegionalModelInfoDTO& o)
{
    j = nlohmann::json::object();
    if(o.currencyIsSet())
        j["currency"] = o.m_Currency;
    if(o.regionIdIsSet())
        j["regionId"] = o.m_RegionId;
    
}

void from_json(const nlohmann::json& j, RegionalModelInfoDTO& o)
{
    if(j.find("currency") != j.end())
    {
        j.at("currency").get_to(o.m_Currency);
        o.m_CurrencyIsSet = true;
    } 
    if(j.find("regionId") != j.end())
    {
        j.at("regionId").get_to(o.m_RegionId);
        o.m_RegionIdIsSet = true;
    } 
    
}

org::openapitools::server::model::CurrencyType RegionalModelInfoDTO::getCurrency() const
{
    return m_Currency;
}
void RegionalModelInfoDTO::setCurrency(org::openapitools::server::model::CurrencyType const& value)
{
    m_Currency = value;
    m_CurrencyIsSet = true;
}
bool RegionalModelInfoDTO::currencyIsSet() const
{
    return m_CurrencyIsSet;
}
void RegionalModelInfoDTO::unsetCurrency()
{
    m_CurrencyIsSet = false;
}
int64_t RegionalModelInfoDTO::getRegionId() const
{
    return m_RegionId;
}
void RegionalModelInfoDTO::setRegionId(int64_t const value)
{
    m_RegionId = value;
    m_RegionIdIsSet = true;
}
bool RegionalModelInfoDTO::regionIdIsSet() const
{
    return m_RegionIdIsSet;
}
void RegionalModelInfoDTO::unsetRegionId()
{
    m_RegionIdIsSet = false;
}


} // namespace org::openapitools::server::model

