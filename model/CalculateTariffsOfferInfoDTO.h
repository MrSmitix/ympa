/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CalculateTariffsOfferInfoDTO.h
 *
 * Стоимость услуг.
 */

#ifndef CalculateTariffsOfferInfoDTO_H_
#define CalculateTariffsOfferInfoDTO_H_


#include "CalculateTariffsOfferDTO.h"
#include "CalculatedTariffDTO.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Стоимость услуг.
/// </summary>
class  CalculateTariffsOfferInfoDTO
{
public:
    CalculateTariffsOfferInfoDTO();
    virtual ~CalculateTariffsOfferInfoDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const CalculateTariffsOfferInfoDTO& rhs) const;
    bool operator!=(const CalculateTariffsOfferInfoDTO& rhs) const;

    /////////////////////////////////////////////
    /// CalculateTariffsOfferInfoDTO members

    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CalculateTariffsOfferDTO getOffer() const;
    void setOffer(org::openapitools::server::model::CalculateTariffsOfferDTO const& value);
    /// <summary>
    /// Список услуг и их стоимость.  По некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели FBS стоимость услуги &#x60;SORTING&#x60; (обработка заказа) зависит от способа отгрузки и количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/). 
    /// </summary>
    std::vector<org::openapitools::server::model::CalculatedTariffDTO> getTariffs() const;
    void setTariffs(std::vector<org::openapitools::server::model::CalculatedTariffDTO> const& value);

    friend  void to_json(nlohmann::json& j, const CalculateTariffsOfferInfoDTO& o);
    friend  void from_json(const nlohmann::json& j, CalculateTariffsOfferInfoDTO& o);
protected:
    org::openapitools::server::model::CalculateTariffsOfferDTO m_Offer;

    std::vector<org::openapitools::server::model::CalculatedTariffDTO> m_Tariffs;

    
};

} // namespace org::openapitools::server::model

#endif /* CalculateTariffsOfferInfoDTO_H_ */
