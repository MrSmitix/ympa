/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * UpdateOrderItemRequest.h
 *
 * Запрос на обновление состава заказа.
 */

#ifndef UpdateOrderItemRequest_H_
#define UpdateOrderItemRequest_H_


#include "OrderItemModificationDTO.h"
#include "OrderItemsModificationRequestReasonType.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Запрос на обновление состава заказа.
/// </summary>
class  UpdateOrderItemRequest
{
public:
    UpdateOrderItemRequest();
    virtual ~UpdateOrderItemRequest() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const UpdateOrderItemRequest& rhs) const;
    bool operator!=(const UpdateOrderItemRequest& rhs) const;

    /////////////////////////////////////////////
    /// UpdateOrderItemRequest members

    /// <summary>
    /// Список товаров в заказе.  Если магазин не передал информацию о товаре во входных данных, он будет удален из заказа.  Обязательный параметр. 
    /// </summary>
    std::vector<org::openapitools::server::model::OrderItemModificationDTO> getItems() const;
    void setItems(std::vector<org::openapitools::server::model::OrderItemModificationDTO> const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::OrderItemsModificationRequestReasonType getReason() const;
    void setReason(org::openapitools::server::model::OrderItemsModificationRequestReasonType const& value);
    bool reasonIsSet() const;
    void unsetReason();

    friend  void to_json(nlohmann::json& j, const UpdateOrderItemRequest& o);
    friend  void from_json(const nlohmann::json& j, UpdateOrderItemRequest& o);
protected:
    std::vector<org::openapitools::server::model::OrderItemModificationDTO> m_Items;

    org::openapitools::server::model::OrderItemsModificationRequestReasonType m_Reason;
    bool m_ReasonIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* UpdateOrderItemRequest_H_ */
