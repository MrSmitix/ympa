/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * GetGoodsFeedbackRequest.h
 *
 * Фильтр запроса отзывов в кабинете. 
 */

#ifndef GetGoodsFeedbackRequest_H_
#define GetGoodsFeedbackRequest_H_


#include <string>
#include "FeedbackReactionStatusType.h"
#include <set>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Фильтр запроса отзывов в кабинете. 
/// </summary>
class  GetGoodsFeedbackRequest
{
public:
    GetGoodsFeedbackRequest();
    virtual ~GetGoodsFeedbackRequest() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const GetGoodsFeedbackRequest& rhs) const;
    bool operator!=(const GetGoodsFeedbackRequest& rhs) const;

    /////////////////////////////////////////////
    /// GetGoodsFeedbackRequest members

    /// <summary>
    /// Начало периода. Не включительно.  Если параметр не указан, возвращается информация за 6 месяцев до указанной в &#x60;dateTimeTo&#x60; даты. 
    /// </summary>
    std::string getDateTimeFrom() const;
    void setDateTimeFrom(std::string const& value);
    bool dateTimeFromIsSet() const;
    void unsetDateTimeFrom();
    /// <summary>
    /// Конец периода. Не включительно.  Если параметр не указан, используется текущая дата. 
    /// </summary>
    std::string getDateTimeTo() const;
    void setDateTimeTo(std::string const& value);
    bool dateTimeToIsSet() const;
    void unsetDateTimeTo();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::FeedbackReactionStatusType getReactionStatus() const;
    void setReactionStatus(org::openapitools::server::model::FeedbackReactionStatusType const& value);
    bool reactionStatusIsSet() const;
    void unsetReactionStatus();
    /// <summary>
    /// Оценка товара.
    /// </summary>
    std::set<int32_t> getRatingValues() const;
    void setRatingValues(std::set<int32_t> const value);
    bool ratingValuesIsSet() const;
    void unsetRatingValues();
    /// <summary>
    /// Фильтр по идентификатору модели товара.  Получить идентификатор модели можно с помощью одного из запросов:  * [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md);  * [POST businesses/{businessId}/offer-cards](../../reference/content/getOfferCardsContentStatus.md);  * [POST models](../../reference/models/getModels.md). 
    /// </summary>
    std::set<int64_t> getModelIds() const;
    void setModelIds(std::set<int64_t> const value);
    bool modelIdsIsSet() const;
    void unsetModelIds();
    /// <summary>
    /// Фильтр отзывов за баллы Плюса.
    /// </summary>
    bool isPaid() const;
    void setPaid(bool const value);
    bool paidIsSet() const;
    void unsetPaid();

    friend  void to_json(nlohmann::json& j, const GetGoodsFeedbackRequest& o);
    friend  void from_json(const nlohmann::json& j, GetGoodsFeedbackRequest& o);
protected:
    std::string m_DateTimeFrom;
    bool m_DateTimeFromIsSet;
    std::string m_DateTimeTo;
    bool m_DateTimeToIsSet;
    org::openapitools::server::model::FeedbackReactionStatusType m_ReactionStatus;
    bool m_ReactionStatusIsSet;
    std::set<int32_t> m_RatingValues;
    bool m_RatingValuesIsSet;
    std::set<int64_t> m_ModelIds;
    bool m_ModelIdsIsSet;
    bool m_Paid;
    bool m_PaidIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* GetGoodsFeedbackRequest_H_ */
