/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GetGoodsFeedbackRequest.h
 *
 * Фильтр запроса отзывов в кабинете. 
 */

#ifndef GetGoodsFeedbackRequest_H_
#define GetGoodsFeedbackRequest_H_



#include <string>
#include "FeedbackReactionStatusType.h"
#include <set>
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Фильтр запроса отзывов в кабинете. 
/// </summary>
class  GetGoodsFeedbackRequest 
{
public:
    GetGoodsFeedbackRequest() = default;
    explicit GetGoodsFeedbackRequest(boost::property_tree::ptree const& pt);
    virtual ~GetGoodsFeedbackRequest() = default;

    GetGoodsFeedbackRequest(const GetGoodsFeedbackRequest& other) = default; // copy constructor
    GetGoodsFeedbackRequest(GetGoodsFeedbackRequest&& other) noexcept = default; // move constructor

    GetGoodsFeedbackRequest& operator=(const GetGoodsFeedbackRequest& other) = default; // copy assignment
    GetGoodsFeedbackRequest& operator=(GetGoodsFeedbackRequest&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// GetGoodsFeedbackRequest members

    /// <summary>
    /// Начало периода. Не включительно.  Если параметр не указан, возвращается информация за 6 месяцев до указанной в &#x60;dateTimeTo&#x60; даты. 
    /// </summary>
    std::string getDateTimeFrom() const;
    void setDateTimeFrom(std::string value);

    /// <summary>
    /// Конец периода. Не включительно.  Если параметр не указан, используется текущая дата. 
    /// </summary>
    std::string getDateTimeTo() const;
    void setDateTimeTo(std::string value);

    /// <summary>
    /// 
    /// </summary>
    FeedbackReactionStatusType getReactionStatus() const;
    void setReactionStatus(FeedbackReactionStatusType value);

    /// <summary>
    /// Оценка товара.
    /// </summary>
    std::set<int32_t> getRatingValues() const;
    void setRatingValues(std::set<int32_t> value);

    /// <summary>
    /// Фильтр по идентификатору модели товара.  Получить идентификатор модели можно с помощью одного из запросов:  * [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md);  * [POST businesses/{businessId}/offer-cards](../../reference/content/getOfferCardsContentStatus.md);  * [POST models](../../reference/models/getModels.md). 
    /// </summary>
    std::set<int64_t> getModelIds() const;
    void setModelIds(std::set<int64_t> value);

    /// <summary>
    /// Фильтр отзывов за баллы Плюса.
    /// </summary>
    bool isPaid() const;
    void setPaid(bool value);

protected:
    std::string m_DateTimeFrom = "";
    std::string m_DateTimeTo = "";
    FeedbackReactionStatusType m_ReactionStatus = FeedbackReactionStatusType{};
    std::set<int32_t> m_RatingValues;
    std::set<int64_t> m_ModelIds;
    bool m_Paid = false;
};

std::vector<GetGoodsFeedbackRequest> createGetGoodsFeedbackRequestVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<GetGoodsFeedbackRequest>(const GetGoodsFeedbackRequest& val) {
    return val.toPropertyTree();
}

template<>
inline GetGoodsFeedbackRequest fromPt<GetGoodsFeedbackRequest>(const boost::property_tree::ptree& pt) {
    GetGoodsFeedbackRequest ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* GetGoodsFeedbackRequest_H_ */
