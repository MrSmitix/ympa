/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GetCampaignOffersRequest.h
 *
 * Фильтрации товаров  В запросе можно указать либо фильтр offerIds, либо любые другие фильтры товаров. Совместное использование фильтра offerIds с другими фильтрациями приведет к ошибке. 
 */

#ifndef GetCampaignOffersRequest_H_
#define GetCampaignOffersRequest_H_



#include <string>
#include "OfferCampaignStatusType.h"
#include <vector>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Фильтрации товаров  В запросе можно указать либо фильтр offerIds, либо любые другие фильтры товаров. Совместное использование фильтра offerIds с другими фильтрациями приведет к ошибке. 
/// </summary>
class  GetCampaignOffersRequest 
{
public:
    GetCampaignOffersRequest() = default;
    explicit GetCampaignOffersRequest(boost::property_tree::ptree const& pt);
    virtual ~GetCampaignOffersRequest() = default;

    GetCampaignOffersRequest(const GetCampaignOffersRequest& other) = default; // copy constructor
    GetCampaignOffersRequest(GetCampaignOffersRequest&& other) noexcept = default; // move constructor

    GetCampaignOffersRequest& operator=(const GetCampaignOffersRequest& other) = default; // copy assignment
    GetCampaignOffersRequest& operator=(GetCampaignOffersRequest&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// GetCampaignOffersRequest members

    /// <summary>
    /// Идентификаторы товаров, информация о которых нужна.  {% note warning \&quot;Такой список возвращается только целиком\&quot; %}  Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.  Если вы запрашиваете информацию по конкретным SKU, не заполняйте:  * &#x60;page_token&#x60; * &#x60;limit&#x60;  {% endnote %}    
    /// </summary>
    std::vector<std::string> getOfferIds() const;
    void setOfferIds(std::vector<std::string> value);

    /// <summary>
    /// Фильтр по статусам товаров. 
    /// </summary>
    std::vector<OfferCampaignStatusType> getStatuses() const;
    void setStatuses(std::vector<OfferCampaignStatusType> value);

    /// <summary>
    /// Фильтр по категориям на Маркете.
    /// </summary>
    std::vector<int32_t> getCategoryIds() const;
    void setCategoryIds(std::vector<int32_t> value);

    /// <summary>
    /// Фильтр по брендам.
    /// </summary>
    std::vector<std::string> getVendorNames() const;
    void setVendorNames(std::vector<std::string> value);

    /// <summary>
    /// Фильтр по тегам.
    /// </summary>
    std::vector<std::string> getTags() const;
    void setTags(std::vector<std::string> value);

protected:
    std::vector<std::string> m_OfferIds;
    std::vector<OfferCampaignStatusType> m_Statuses;
    std::vector<int32_t> m_CategoryIds;
    std::vector<std::string> m_VendorNames;
    std::vector<std::string> m_Tags;
};

std::vector<GetCampaignOffersRequest> createGetCampaignOffersRequestVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<GetCampaignOffersRequest>(const GetCampaignOffersRequest& val) {
    return val.toPropertyTree();
}

template<>
inline GetCampaignOffersRequest fromPt<GetCampaignOffersRequest>(const boost::property_tree::ptree& pt) {
    GetCampaignOffersRequest ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* GetCampaignOffersRequest_H_ */
