/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * WarehouseDTO.h
 *
 * Информация о складе.
 */

#ifndef WarehouseDTO_H_
#define WarehouseDTO_H_


#include <string>
#include "WarehouseAddressDTO.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Информация о складе.
/// </summary>
class  WarehouseDTO
{
public:
    WarehouseDTO();
    virtual ~WarehouseDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const WarehouseDTO& rhs) const;
    bool operator!=(const WarehouseDTO& rhs) const;

    /////////////////////////////////////////////
    /// WarehouseDTO members

    /// <summary>
    /// Идентификатор склада.
    /// </summary>
    int64_t getId() const;
    void setId(int64_t const value);
    /// <summary>
    /// Название склада.
    /// </summary>
    std::string getName() const;
    void setName(std::string const& value);
    /// <summary>
    /// Идентификатор кампании в API и идентификатор магазина.
    /// </summary>
    int64_t getCampaignId() const;
    void setCampaignId(int64_t const value);
    /// <summary>
    /// Возможна ли доставка по модели Экспресс.
    /// </summary>
    bool isExpress() const;
    void setExpress(bool const value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::WarehouseAddressDTO getAddress() const;
    void setAddress(org::openapitools::server::model::WarehouseAddressDTO const& value);
    bool addressIsSet() const;
    void unsetAddress();

    friend  void to_json(nlohmann::json& j, const WarehouseDTO& o);
    friend  void from_json(const nlohmann::json& j, WarehouseDTO& o);
protected:
    int64_t m_Id;

    std::string m_Name;

    int64_t m_CampaignId;

    bool m_Express;

    org::openapitools::server::model::WarehouseAddressDTO m_Address;
    bool m_AddressIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* WarehouseDTO_H_ */
