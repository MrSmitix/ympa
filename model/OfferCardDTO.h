/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OfferCardDTO.h
 *
 * Информация о состоянии карточки товара.  Если поле &#x60;mapping&#x60; отсутствует в ответе, Маркет еще не успел обработать информацию о товаре. Чтобы определить категорию такого товара, повторите запрос через несколько минут. 
 */

#ifndef OfferCardDTO_H_
#define OfferCardDTO_H_


#include "OfferCardRecommendationDTO.h"
#include "GetMappingDTO.h"
#include <string>
#include "ParameterValueDTO.h"
#include <vector>
#include "OfferCardStatusType.h"
#include "OfferErrorDTO.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Информация о состоянии карточки товара.  Если поле &#x60;mapping&#x60; отсутствует в ответе, Маркет еще не успел обработать информацию о товаре. Чтобы определить категорию такого товара, повторите запрос через несколько минут. 
/// </summary>
class  OfferCardDTO
{
public:
    OfferCardDTO();
    virtual ~OfferCardDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const OfferCardDTO& rhs) const;
    bool operator!=(const OfferCardDTO& rhs) const;

    /////////////////////////////////////////////
    /// OfferCardDTO members

    /// <summary>
    /// Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
    /// </summary>
    std::string getOfferId() const;
    void setOfferId(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::GetMappingDTO getMapping() const;
    void setMapping(org::openapitools::server::model::GetMappingDTO const& value);
    bool mappingIsSet() const;
    void unsetMapping();
    /// <summary>
    /// Список характеристик с их значениями. 
    /// </summary>
    std::vector<org::openapitools::server::model::ParameterValueDTO> getParameterValues() const;
    void setParameterValues(std::vector<org::openapitools::server::model::ParameterValueDTO> const& value);
    bool parameterValuesIsSet() const;
    void unsetParameterValues();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::OfferCardStatusType getCardStatus() const;
    void setCardStatus(org::openapitools::server::model::OfferCardStatusType const& value);
    bool cardStatusIsSet() const;
    void unsetCardStatus();
    /// <summary>
    /// Процент заполненности карточки.
    /// </summary>
    int32_t getContentRating() const;
    void setContentRating(int32_t const value);
    bool contentRatingIsSet() const;
    void unsetContentRating();
    /// <summary>
    /// Список рекомендаций к заполнению карточки.  Рекомендации Маркета помогают заполнять карточку так, чтобы покупателям было проще найти ваш товар и решиться на покупку. 
    /// </summary>
    std::vector<org::openapitools::server::model::OfferCardRecommendationDTO> getRecommendations() const;
    void setRecommendations(std::vector<org::openapitools::server::model::OfferCardRecommendationDTO> const& value);
    bool recommendationsIsSet() const;
    void unsetRecommendations();
    /// <summary>
    /// Ошибки в контенте, препятствующие размещению товара на витрине.
    /// </summary>
    std::vector<org::openapitools::server::model::OfferErrorDTO> getErrors() const;
    void setErrors(std::vector<org::openapitools::server::model::OfferErrorDTO> const& value);
    bool errorsIsSet() const;
    void unsetErrors();
    /// <summary>
    /// Связанные с контентом предупреждения, не препятствующие размещению товара на витрине.
    /// </summary>
    std::vector<org::openapitools::server::model::OfferErrorDTO> getWarnings() const;
    void setWarnings(std::vector<org::openapitools::server::model::OfferErrorDTO> const& value);
    bool warningsIsSet() const;
    void unsetWarnings();

    friend  void to_json(nlohmann::json& j, const OfferCardDTO& o);
    friend  void from_json(const nlohmann::json& j, OfferCardDTO& o);
protected:
    std::string m_OfferId;

    org::openapitools::server::model::GetMappingDTO m_Mapping;
    bool m_MappingIsSet;
    std::vector<org::openapitools::server::model::ParameterValueDTO> m_ParameterValues;
    bool m_ParameterValuesIsSet;
    org::openapitools::server::model::OfferCardStatusType m_CardStatus;
    bool m_CardStatusIsSet;
    int32_t m_ContentRating;
    bool m_ContentRatingIsSet;
    std::vector<org::openapitools::server::model::OfferCardRecommendationDTO> m_Recommendations;
    bool m_RecommendationsIsSet;
    std::vector<org::openapitools::server::model::OfferErrorDTO> m_Errors;
    bool m_ErrorsIsSet;
    std::vector<org::openapitools::server::model::OfferErrorDTO> m_Warnings;
    bool m_WarningsIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* OfferCardDTO_H_ */
