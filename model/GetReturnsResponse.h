/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GetReturnsResponse.h
 *
 * 
 */

#ifndef GetReturnsResponse_H_
#define GetReturnsResponse_H_



#include "ApiResponseStatusType.h"
#include "PagedReturnsDTO.h"
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>
#include "ApiResponse.h"
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  GetReturnsResponse : public ApiResponse
{
public:
    GetReturnsResponse() = default;
    explicit GetReturnsResponse(boost::property_tree::ptree const& pt);
    virtual ~GetReturnsResponse() = default;

    GetReturnsResponse(const GetReturnsResponse& other) = default; // copy constructor
    GetReturnsResponse(GetReturnsResponse&& other) noexcept = default; // move constructor

    GetReturnsResponse& operator=(const GetReturnsResponse& other) = default; // copy assignment
    GetReturnsResponse& operator=(GetReturnsResponse&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// GetReturnsResponse members

    /// <summary>
    /// 
    /// </summary>
    ApiResponseStatusType getStatus() const;
    void setStatus(ApiResponseStatusType value);

    /// <summary>
    /// 
    /// </summary>
    PagedReturnsDTO getResult() const;
    void setResult(PagedReturnsDTO value);

protected:
    ApiResponseStatusType m_Status = ApiResponseStatusType{};
    PagedReturnsDTO m_Result;
};

std::vector<GetReturnsResponse> createGetReturnsResponseVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<GetReturnsResponse>(const GetReturnsResponse& val) {
    return val.toPropertyTree();
}

template<>
inline GetReturnsResponse fromPt<GetReturnsResponse>(const boost::property_tree::ptree& pt) {
    GetReturnsResponse ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* GetReturnsResponse_H_ */
