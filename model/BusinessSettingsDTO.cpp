/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "BusinessSettingsDTO.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

BusinessSettingsDTO::BusinessSettingsDTO()
{
    m_OnlyDefaultPrice = false;
    m_OnlyDefaultPriceIsSet = false;
    m_CurrencyIsSet = false;
    
}

void BusinessSettingsDTO::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool BusinessSettingsDTO::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool BusinessSettingsDTO::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "BusinessSettingsDTO" : pathPrefix;

            
    return success;
}

bool BusinessSettingsDTO::operator==(const BusinessSettingsDTO& rhs) const
{
    return
    
    
    
    ((!onlyDefaultPriceIsSet() && !rhs.onlyDefaultPriceIsSet()) || (onlyDefaultPriceIsSet() && rhs.onlyDefaultPriceIsSet() && isOnlyDefaultPrice() == rhs.isOnlyDefaultPrice())) &&
    
    
    ((!currencyIsSet() && !rhs.currencyIsSet()) || (currencyIsSet() && rhs.currencyIsSet() && getCurrency() == rhs.getCurrency()))
    
    ;
}

bool BusinessSettingsDTO::operator!=(const BusinessSettingsDTO& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const BusinessSettingsDTO& o)
{
    j = nlohmann::json::object();
    if(o.onlyDefaultPriceIsSet())
        j["onlyDefaultPrice"] = o.m_OnlyDefaultPrice;
    if(o.currencyIsSet())
        j["currency"] = o.m_Currency;
    
}

void from_json(const nlohmann::json& j, BusinessSettingsDTO& o)
{
    if(j.find("onlyDefaultPrice") != j.end())
    {
        j.at("onlyDefaultPrice").get_to(o.m_OnlyDefaultPrice);
        o.m_OnlyDefaultPriceIsSet = true;
    } 
    if(j.find("currency") != j.end())
    {
        j.at("currency").get_to(o.m_Currency);
        o.m_CurrencyIsSet = true;
    } 
    
}

bool BusinessSettingsDTO::isOnlyDefaultPrice() const
{
    return m_OnlyDefaultPrice;
}
void BusinessSettingsDTO::setOnlyDefaultPrice(bool const value)
{
    m_OnlyDefaultPrice = value;
    m_OnlyDefaultPriceIsSet = true;
}
bool BusinessSettingsDTO::onlyDefaultPriceIsSet() const
{
    return m_OnlyDefaultPriceIsSet;
}
void BusinessSettingsDTO::unsetOnlyDefaultPrice()
{
    m_OnlyDefaultPriceIsSet = false;
}
org::openapitools::server::model::CurrencyType BusinessSettingsDTO::getCurrency() const
{
    return m_Currency;
}
void BusinessSettingsDTO::setCurrency(org::openapitools::server::model::CurrencyType const& value)
{
    m_Currency = value;
    m_CurrencyIsSet = true;
}
bool BusinessSettingsDTO::currencyIsSet() const
{
    return m_CurrencyIsSet;
}
void BusinessSettingsDTO::unsetCurrency()
{
    m_CurrencyIsSet = false;
}


} // namespace org::openapitools::server::model

