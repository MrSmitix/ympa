/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrdersStatsDetailsDTO.h
 *
 * Информация об удалении товара из заказа.
 */

#ifndef OrdersStatsDetailsDTO_H_
#define OrdersStatsDetailsDTO_H_



#include <string>
#include "OrdersStatsItemStatusType.h"
#include <vector>
#include "OrdersStatsStockType.h"
#include <memory>
#include <vector>
#include <array>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Информация об удалении товара из заказа.
/// </summary>
class  OrdersStatsDetailsDTO 
{
public:
    OrdersStatsDetailsDTO() = default;
    explicit OrdersStatsDetailsDTO(boost::property_tree::ptree const& pt);
    virtual ~OrdersStatsDetailsDTO() = default;

    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// OrdersStatsDetailsDTO members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<OrdersStatsItemStatusType> getItemStatus() const;
    void setItemStatus(std::shared_ptr<OrdersStatsItemStatusType> value);

    /// <summary>
    /// Количество товара со статусом, указанном в параметре &#x60;itemStatus&#x60;.
    /// </summary>
    int64_t getItemCount() const;
    void setItemCount(int64_t value);

    /// <summary>
    /// Дата, когда товар получил статус, указанный в параметре &#x60;itemStatus&#x60;.  Формат даты: &#x60;ГГГГ-ММ-ДД&#x60;. 
    /// </summary>
    std::string getUpdateDate() const;
    void setUpdateDate(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<OrdersStatsStockType> getStockType() const;
    void setStockType(std::shared_ptr<OrdersStatsStockType> value);

protected:
    //////////////////////////////////////
    // Override these for customization //
    //////////////////////////////////////

    virtual std::string toJsonString_internal(bool prettyJson = false);
    virtual void fromJsonString_internal(std::string const& jsonString);
    virtual boost::property_tree::ptree toPropertyTree_internal();
    virtual void fromPropertyTree_internal(boost::property_tree::ptree const& pt);


protected:
    std::shared_ptr<OrdersStatsItemStatusType> m_ItemStatus = std::make_shared<OrdersStatsItemStatusType>();
    int64_t m_ItemCount = 0L;
    std::string m_UpdateDate = "";
    std::shared_ptr<OrdersStatsStockType> m_StockType = std::make_shared<OrdersStatsStockType>();
};

std::vector<OrdersStatsDetailsDTO> createOrdersStatsDetailsDTOVectorFromJsonString(const std::string& json);

}
}
}
}

#endif /* OrdersStatsDetailsDTO_H_ */
