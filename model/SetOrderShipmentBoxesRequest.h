/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * SetOrderShipmentBoxesRequest.h
 *
 * 
 */

#ifndef SetOrderShipmentBoxesRequest_H_
#define SetOrderShipmentBoxesRequest_H_


#include "ParcelBoxDTO.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  SetOrderShipmentBoxesRequest
{
public:
    SetOrderShipmentBoxesRequest();
    virtual ~SetOrderShipmentBoxesRequest() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const SetOrderShipmentBoxesRequest& rhs) const;
    bool operator!=(const SetOrderShipmentBoxesRequest& rhs) const;

    /////////////////////////////////////////////
    /// SetOrderShipmentBoxesRequest members

    /// <summary>
    /// Список грузовых мест. Маркет определяет количество мест по длине этого списка.
    /// </summary>
    std::vector<org::openapitools::server::model::ParcelBoxDTO> getBoxes() const;
    void setBoxes(std::vector<org::openapitools::server::model::ParcelBoxDTO> const& value);

    friend  void to_json(nlohmann::json& j, const SetOrderShipmentBoxesRequest& o);
    friend  void from_json(const nlohmann::json& j, SetOrderShipmentBoxesRequest& o);
protected:
    std::vector<org::openapitools::server::model::ParcelBoxDTO> m_Boxes;

    
};

} // namespace org::openapitools::server::model

#endif /* SetOrderShipmentBoxesRequest_H_ */
