/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * BusinessSettingsDTO.h
 *
 * Настройки кабинета.
 */

#ifndef BusinessSettingsDTO_H_
#define BusinessSettingsDTO_H_


#include "CurrencyType.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Настройки кабинета.
/// </summary>
class  BusinessSettingsDTO
{
public:
    BusinessSettingsDTO();
    virtual ~BusinessSettingsDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const BusinessSettingsDTO& rhs) const;
    bool operator!=(const BusinessSettingsDTO& rhs) const;

    /////////////////////////////////////////////
    /// BusinessSettingsDTO members

    /// <summary>
    /// Можно ли установить только [базовую цену](*rule): * &#x60;false&#x60; — можно задать и базовую цену, и цены в конкретных магазинах. * &#x60;true&#x60; — можно задать только базовую цену. 
    /// </summary>
    bool isOnlyDefaultPrice() const;
    void setOnlyDefaultPrice(bool const value);
    bool onlyDefaultPriceIsSet() const;
    void unsetOnlyDefaultPrice();
    /// <summary>
    /// 
    /// </summary>
    org::openapitools::server::model::CurrencyType getCurrency() const;
    void setCurrency(org::openapitools::server::model::CurrencyType const& value);
    bool currencyIsSet() const;
    void unsetCurrency();

    friend  void to_json(nlohmann::json& j, const BusinessSettingsDTO& o);
    friend  void from_json(const nlohmann::json& j, BusinessSettingsDTO& o);
protected:
    bool m_OnlyDefaultPrice;
    bool m_OnlyDefaultPriceIsSet;
    org::openapitools::server::model::CurrencyType m_Currency;
    bool m_CurrencyIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* BusinessSettingsDTO_H_ */
