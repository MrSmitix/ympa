/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GetOfferCardsContentStatusRequest.h
 *
 * 
 */

#ifndef GetOfferCardsContentStatusRequest_H_
#define GetOfferCardsContentStatusRequest_H_



#include <string>
#include "OfferCardStatusType.h"
#include <set>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  GetOfferCardsContentStatusRequest 
{
public:
    GetOfferCardsContentStatusRequest() = default;
    explicit GetOfferCardsContentStatusRequest(boost::property_tree::ptree const& pt);
    virtual ~GetOfferCardsContentStatusRequest() = default;

    GetOfferCardsContentStatusRequest(const GetOfferCardsContentStatusRequest& other) = default; // copy constructor
    GetOfferCardsContentStatusRequest(GetOfferCardsContentStatusRequest&& other) noexcept = default; // move constructor

    GetOfferCardsContentStatusRequest& operator=(const GetOfferCardsContentStatusRequest& other) = default; // copy assignment
    GetOfferCardsContentStatusRequest& operator=(GetOfferCardsContentStatusRequest&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// GetOfferCardsContentStatusRequest members

    /// <summary>
    /// Идентификаторы товаров, информация о которых нужна. &lt;br&gt;&lt;br&gt; ⚠️ Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым. 
    /// </summary>
    std::set<std::string> getOfferIds() const;
    void setOfferIds(std::set<std::string> value);

    /// <summary>
    /// Фильтр по статусам карточек.  [Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html) 
    /// </summary>
    std::set<OfferCardStatusType> getCardStatuses() const;
    void setCardStatuses(std::set<OfferCardStatusType> value);

    /// <summary>
    /// Фильтр по категориям на Маркете.
    /// </summary>
    std::set<int32_t> getCategoryIds() const;
    void setCategoryIds(std::set<int32_t> value);

protected:
    std::set<std::string> m_OfferIds;
    std::set<OfferCardStatusType> m_CardStatuses;
    std::set<int32_t> m_CategoryIds;
};

std::vector<GetOfferCardsContentStatusRequest> createGetOfferCardsContentStatusRequestVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<GetOfferCardsContentStatusRequest>(const GetOfferCardsContentStatusRequest& val) {
    return val.toPropertyTree();
}

template<>
inline GetOfferCardsContentStatusRequest fromPt<GetOfferCardsContentStatusRequest>(const boost::property_tree::ptree& pt) {
    GetOfferCardsContentStatusRequest ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* GetOfferCardsContentStatusRequest_H_ */
