/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * GoodsStatsWeightDimensionsDTO.h
 *
 * Информация о весе и габаритах товара.  Если товар уже привязан к карточке (&#x60;marketSku&#x60;), в ответе вернутся габариты из карточки Маркета, а не размеры, которые вы передаете. 
 */

#ifndef GoodsStatsWeightDimensionsDTO_H_
#define GoodsStatsWeightDimensionsDTO_H_


#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Информация о весе и габаритах товара.  Если товар уже привязан к карточке (&#x60;marketSku&#x60;), в ответе вернутся габариты из карточки Маркета, а не размеры, которые вы передаете. 
/// </summary>
class  GoodsStatsWeightDimensionsDTO
{
public:
    GoodsStatsWeightDimensionsDTO();
    virtual ~GoodsStatsWeightDimensionsDTO() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const GoodsStatsWeightDimensionsDTO& rhs) const;
    bool operator!=(const GoodsStatsWeightDimensionsDTO& rhs) const;

    /////////////////////////////////////////////
    /// GoodsStatsWeightDimensionsDTO members

    /// <summary>
    /// Длина товара в сантиметрах.
    /// </summary>
    double getLength() const;
    void setLength(double const value);
    bool lengthIsSet() const;
    void unsetLength();
    /// <summary>
    /// Ширина товара в сантиметрах.
    /// </summary>
    double getWidth() const;
    void setWidth(double const value);
    bool widthIsSet() const;
    void unsetWidth();
    /// <summary>
    /// Высота товара в сантиметрах.
    /// </summary>
    double getHeight() const;
    void setHeight(double const value);
    bool heightIsSet() const;
    void unsetHeight();
    /// <summary>
    /// Вес товара в килограммах.
    /// </summary>
    double getWeight() const;
    void setWeight(double const value);
    bool weightIsSet() const;
    void unsetWeight();

    friend  void to_json(nlohmann::json& j, const GoodsStatsWeightDimensionsDTO& o);
    friend  void from_json(const nlohmann::json& j, GoodsStatsWeightDimensionsDTO& o);
protected:
    double m_Length;
    bool m_LengthIsSet;
    double m_Width;
    bool m_WidthIsSet;
    double m_Height;
    bool m_HeightIsSet;
    double m_Weight;
    bool m_WeightIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* GoodsStatsWeightDimensionsDTO_H_ */
