<?php
/**
 * GoodsStatsGoodsDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the GoodsStatsGoodsDTO model.
 *
 * Информация о товаре.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class GoodsStatsGoodsDTO 
{
        /**
     * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
     *
     * @var string|null
     * @SerializedName("shopSku")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Length(max: 255)]
    #[Assert\Length(min: 1)]
    #[Assert\Regex("/^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$/")]
    protected ?string $shopSku = null;

    /**
     * SKU на Маркете.
     *
     * @var int|null
     * @SerializedName("marketSku")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $marketSku = null;

    /**
     * Название товара.
     *
     * @var string|null
     * @SerializedName("name")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $name = null;

    /**
     * Цена на товар в валюте, которая установлена [в кабинете продавца на Маркете](https://partner.market.yandex.ru/).
     *
     * @var float|null
     * @SerializedName("price")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $price = null;

    /**
     * Идентификатор категории товара на Маркете.
     *
     * @var int|null
     * @SerializedName("categoryId")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $categoryId = null;

    /**
     * Название категории товара на Маркете.
     *
     * @var string|null
     * @SerializedName("categoryName")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $categoryName = null;

    /**
     * @var GoodsStatsWeightDimensionsDTO|null
     * @SerializedName("weightDimensions")
     * @Type("OpenAPI\Server\Model\GoodsStatsWeightDimensionsDTO")
    */
    #[Assert\Type("OpenAPI\Server\Model\GoodsStatsWeightDimensionsDTO")]
    protected ?GoodsStatsWeightDimensionsDTO $weightDimensions = null;

    /**
     * Информация о складах, на которых хранится товар.  Параметр не приходит, если товара нет ни на одном складе.
     *
     * @var GoodsStatsWarehouseDTO[]|null
     * @SerializedName("warehouses")
     * @Type("array<OpenAPI\Server\Model\GoodsStatsWarehouseDTO>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\GoodsStatsWarehouseDTO"),
    ])]
    protected ?array $warehouses = null;

    /**
     * Информация о тарифах, по которым нужно заплатить за услуги Маркета.  По некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели FBS стоимость услуги &#x60;SORTING&#x60; (обработка заказа) зависит от способа отгрузки и количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/).
     *
     * @var TariffDTO[]|null
     * @SerializedName("tariffs")
     * @Type("array<OpenAPI\Server\Model\TariffDTO>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\TariffDTO"),
    ])]
    protected ?array $tariffs = null;

    /**
     * Ссылки (URL) изображений товара в хорошем качестве.
     *
     * @var string[]|null
     * @SerializedName("pictures")
     * @Type("array<string>")
    */
    #[Assert\All([
        new Assert\Type("string"),
    ])]
    protected ?array $pictures = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->shopSku = array_key_exists('shopSku', $data) ? $data['shopSku'] : $this->shopSku;
            $this->marketSku = array_key_exists('marketSku', $data) ? $data['marketSku'] : $this->marketSku;
            $this->name = array_key_exists('name', $data) ? $data['name'] : $this->name;
            $this->price = array_key_exists('price', $data) ? $data['price'] : $this->price;
            $this->categoryId = array_key_exists('categoryId', $data) ? $data['categoryId'] : $this->categoryId;
            $this->categoryName = array_key_exists('categoryName', $data) ? $data['categoryName'] : $this->categoryName;
            $this->weightDimensions = array_key_exists('weightDimensions', $data) ? $data['weightDimensions'] : $this->weightDimensions;
            $this->warehouses = array_key_exists('warehouses', $data) ? $data['warehouses'] : $this->warehouses;
            $this->tariffs = array_key_exists('tariffs', $data) ? $data['tariffs'] : $this->tariffs;
            $this->pictures = array_key_exists('pictures', $data) ? $data['pictures'] : $this->pictures;
        }
    }

    /**
     * Gets shopSku.
     *
     * @return string|null
     */
    public function getShopSku(): ?string
    {
        return $this->shopSku;
    }

    /**
    * Sets shopSku.
    *
    * @param string|null $shopSku  Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
    *
    * @return $this
    */
    public function setShopSku(?string $shopSku = null): self
    {
        $this->shopSku = $shopSku;

        return $this;
    }




    /**
     * Gets marketSku.
     *
     * @return int|null
     */
    public function getMarketSku(): ?int
    {
        return $this->marketSku;
    }

    /**
    * Sets marketSku.
    *
    * @param int|null $marketSku  SKU на Маркете.
    *
    * @return $this
    */
    public function setMarketSku(?int $marketSku = null): self
    {
        $this->marketSku = $marketSku;

        return $this;
    }




    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
    * Sets name.
    *
    * @param string|null $name  Название товара.
    *
    * @return $this
    */
    public function setName(?string $name = null): self
    {
        $this->name = $name;

        return $this;
    }




    /**
     * Gets price.
     *
     * @return float|null
     */
    public function getPrice(): ?float
    {
        return $this->price;
    }

    /**
    * Sets price.
    *
    * @param float|null $price  Цена на товар в валюте, которая установлена [в кабинете продавца на Маркете](https://partner.market.yandex.ru/).
    *
    * @return $this
    */
    public function setPrice(?float $price = null): self
    {
        $this->price = $price;

        return $this;
    }




    /**
     * Gets categoryId.
     *
     * @return int|null
     */
    public function getCategoryId(): ?int
    {
        return $this->categoryId;
    }

    /**
    * Sets categoryId.
    *
    * @param int|null $categoryId  Идентификатор категории товара на Маркете.
    *
    * @return $this
    */
    public function setCategoryId(?int $categoryId = null): self
    {
        $this->categoryId = $categoryId;

        return $this;
    }




    /**
     * Gets categoryName.
     *
     * @return string|null
     */
    public function getCategoryName(): ?string
    {
        return $this->categoryName;
    }

    /**
    * Sets categoryName.
    *
    * @param string|null $categoryName  Название категории товара на Маркете.
    *
    * @return $this
    */
    public function setCategoryName(?string $categoryName = null): self
    {
        $this->categoryName = $categoryName;

        return $this;
    }




    /**
     * Gets weightDimensions.
     *
     * @return GoodsStatsWeightDimensionsDTO|null
     */
    public function getWeightDimensions(): ?GoodsStatsWeightDimensionsDTO
    {
        return $this->weightDimensions;
    }

    /**
    * Sets weightDimensions.
    *
    * @param GoodsStatsWeightDimensionsDTO|null $weightDimensions
    *
    * @return $this
    */
    public function setWeightDimensions(?GoodsStatsWeightDimensionsDTO $weightDimensions = null): self
    {
        $this->weightDimensions = $weightDimensions;

        return $this;
    }




    /**
     * Gets warehouses.
     *
     * @return GoodsStatsWarehouseDTO[]|null
     */
    public function getWarehouses(): ?array
    {
        return $this->warehouses;
    }

    /**
    * Sets warehouses.
    *
    * @param GoodsStatsWarehouseDTO[]|null $warehouses  Информация о складах, на которых хранится товар.  Параметр не приходит, если товара нет ни на одном складе.
    *
    * @return $this
    */
    public function setWarehouses(?array $warehouses = null): self
    {
        $this->warehouses = $warehouses;

        return $this;
    }




    /**
     * Gets tariffs.
     *
     * @return TariffDTO[]|null
     */
    public function getTariffs(): ?array
    {
        return $this->tariffs;
    }

    /**
    * Sets tariffs.
    *
    * @param TariffDTO[]|null $tariffs  Информация о тарифах, по которым нужно заплатить за услуги Маркета.  По некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели FBS стоимость услуги `SORTING` (обработка заказа) зависит от способа отгрузки и количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/).
    *
    * @return $this
    */
    public function setTariffs(?array $tariffs = null): self
    {
        $this->tariffs = $tariffs;

        return $this;
    }




    /**
     * Gets pictures.
     *
     * @return string[]|null
     */
    public function getPictures(): ?array
    {
        return $this->pictures;
    }

    /**
    * Sets pictures.
    *
    * @param string[]|null $pictures  Ссылки (URL) изображений товара в хорошем качестве.
    *
    * @return $this
    */
    public function setPictures(?array $pictures = null): self
    {
        $this->pictures = $pictures;

        return $this;
    }



}


