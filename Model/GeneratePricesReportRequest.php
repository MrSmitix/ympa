<?php
/**
 * GeneratePricesReportRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the GeneratePricesReportRequest model.
 *
 * Данные, необходимые для генерации отчета.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class GeneratePricesReportRequest 
{
        /**
     * Идентификатор бизнеса.  В большинстве случаев обязателен. Не указывается, если задан &#x60;campaignId&#x60;.
     *
     * @var int|null
     * @SerializedName("businessId")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $businessId = null;

    /**
     * Идентификатор кампании.  Как правило, не используется. Передавайте только если в кабинете есть магазины с уникальными ценами и вы хотите получить отчет для них. В этом случае передавать &#x60;businessId&#x60; не нужно.
     *
     * @var int|null
     * @SerializedName("campaignId")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $campaignId = null;

    /**
     * Фильтр по категориям на Маркете.
     *
     * @var int[]|null
     * @SerializedName("categoryIds")
     * @Type("array<int>")
    */
    #[Assert\All([
        new Assert\Type("int"),
    ])]
    protected ?array $categoryIds = null;

    /**
     * Фильтр по времени появления предложения — начало периода.  Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;.
     *
     * @var \DateTime|null
     * @SerializedName("creationDateFrom")
     * @Type("DateTime<'Y-m-d'>")
    */
    #[Assert\Type("\DateTime")]
    protected ?\DateTime $creationDateFrom = null;

    /**
     * Фильтр по времени появления предложения — окончание периода.  Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;.
     *
     * @var \DateTime|null
     * @SerializedName("creationDateTo")
     * @Type("DateTime<'Y-m-d'>")
    */
    #[Assert\Type("\DateTime")]
    protected ?\DateTime $creationDateTo = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->businessId = array_key_exists('businessId', $data) ? $data['businessId'] : $this->businessId;
            $this->campaignId = array_key_exists('campaignId', $data) ? $data['campaignId'] : $this->campaignId;
            $this->categoryIds = array_key_exists('categoryIds', $data) ? $data['categoryIds'] : $this->categoryIds;
            $this->creationDateFrom = array_key_exists('creationDateFrom', $data) ? $data['creationDateFrom'] : $this->creationDateFrom;
            $this->creationDateTo = array_key_exists('creationDateTo', $data) ? $data['creationDateTo'] : $this->creationDateTo;
        }
    }

    /**
     * Gets businessId.
     *
     * @return int|null
     */
    public function getBusinessId(): ?int
    {
        return $this->businessId;
    }

    /**
    * Sets businessId.
    *
    * @param int|null $businessId  Идентификатор бизнеса.  В большинстве случаев обязателен. Не указывается, если задан `campaignId`.
    *
    * @return $this
    */
    public function setBusinessId(?int $businessId = null): self
    {
        $this->businessId = $businessId;

        return $this;
    }




    /**
     * Gets campaignId.
     *
     * @return int|null
     */
    public function getCampaignId(): ?int
    {
        return $this->campaignId;
    }

    /**
    * Sets campaignId.
    *
    * @param int|null $campaignId  Идентификатор кампании.  Как правило, не используется. Передавайте только если в кабинете есть магазины с уникальными ценами и вы хотите получить отчет для них. В этом случае передавать `businessId` не нужно.
    *
    * @return $this
    */
    public function setCampaignId(?int $campaignId = null): self
    {
        $this->campaignId = $campaignId;

        return $this;
    }




    /**
     * Gets categoryIds.
     *
     * @return int[]|null
     */
    public function getCategoryIds(): ?array
    {
        return $this->categoryIds;
    }

    /**
    * Sets categoryIds.
    *
    * @param int[]|null $categoryIds  Фильтр по категориям на Маркете.
    *
    * @return $this
    */
    public function setCategoryIds(?array $categoryIds = null): self
    {
        $this->categoryIds = $categoryIds;

        return $this;
    }




    /**
     * Gets creationDateFrom.
     *
     * @return \DateTime|null
     */
    public function getCreationDateFrom(): ?\DateTime
    {
        return $this->creationDateFrom;
    }

    /**
    * Sets creationDateFrom.
    *
    * @param \DateTime|null $creationDateFrom  Фильтр по времени появления предложения — начало периода.  Формат даты: `ДД-ММ-ГГГГ`.
    *
    * @return $this
    */
    public function setCreationDateFrom(?\DateTime $creationDateFrom = null): self
    {
        $this->creationDateFrom = $creationDateFrom;

        return $this;
    }




    /**
     * Gets creationDateTo.
     *
     * @return \DateTime|null
     */
    public function getCreationDateTo(): ?\DateTime
    {
        return $this->creationDateTo;
    }

    /**
    * Sets creationDateTo.
    *
    * @param \DateTime|null $creationDateTo  Фильтр по времени появления предложения — окончание периода.  Формат даты: `ДД-ММ-ГГГГ`.
    *
    * @return $this
    */
    public function setCreationDateTo(?\DateTime $creationDateTo = null): self
    {
        $this->creationDateTo = $creationDateTo;

        return $this;
    }



}


