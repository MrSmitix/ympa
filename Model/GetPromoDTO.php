<?php
/**
 * GetPromoDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the GetPromoDTO model.
 *
 * Информация об акции.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class GetPromoDTO  implements \JsonSerializable
{
        /**
     * Идентификатор акции.
     *
     * @var string
     * @SerializedName("id")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    public string $id;

    /**
     * Название акции.
     *
     * @var string
     * @SerializedName("name")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    public string $name;

    /**
     * @var PromoPeriodDTO
     * @SerializedName("period")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("\OpenAPIServer\Model\PromoPeriodDTO")
     * @Type("\OpenAPIServer\Model\PromoPeriodDTO")
     */
    public PromoPeriodDTO $period;

    /**
     * Участвует или участвовал ли продавец в этой акции.  Для текущих и будущих акций возвращается со значением &#x60;true&#x60;, если в акции есть товары, которые были добавлены вручную. Если товары не участвуют в акции или добавлены в нее автоматически, параметр возвращается со значением &#x60;false&#x60;.  Для прошедших акций всегда возвращается со значением &#x60;true&#x60;.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).
     *
     * @var bool
     * @SerializedName("participating")
     * @Assert\NotNull()
     * @Assert\Type("bool")
     * @Type("bool")
     */
    public bool $participating;

    /**
     * @var GetPromoAssortmentInfoDTO
     * @SerializedName("assortmentInfo")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("\OpenAPIServer\Model\GetPromoAssortmentInfoDTO")
     * @Type("\OpenAPIServer\Model\GetPromoAssortmentInfoDTO")
     */
    public GetPromoAssortmentInfoDTO $assortmentInfo;

    /**
     * @var GetPromoMechanicsInfoDTO
     * @SerializedName("mechanicsInfo")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("\OpenAPIServer\Model\GetPromoMechanicsInfoDTO")
     * @Type("\OpenAPIServer\Model\GetPromoMechanicsInfoDTO")
     */
    public GetPromoMechanicsInfoDTO $mechanicsInfo;

    /**
     * @var GetPromoBestsellerInfoDTO
     * @SerializedName("bestsellerInfo")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("\OpenAPIServer\Model\GetPromoBestsellerInfoDTO")
     * @Type("\OpenAPIServer\Model\GetPromoBestsellerInfoDTO")
     */
    public GetPromoBestsellerInfoDTO $bestsellerInfo;

    /**
     * Список каналов продвижения товаров.
     *
     * @var ChannelType[]|null
     * @SerializedName("channels")
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\ChannelType")
     * })
     * @Accessor(getter="getSerializedChannels")
     * @Type("array<string>")
     */
    public ?array $channels;

    /**
     * @var GetPromoConstraintsDTO|null
     * @SerializedName("constraints")
     * @Assert\Type("\OpenAPIServer\Model\GetPromoConstraintsDTO")
     * @Type("\OpenAPIServer\Model\GetPromoConstraintsDTO")
     */
    public ?GetPromoConstraintsDTO $constraints;

    /**
     * Constructor
     *
     * @param string $id
     * @param string $name
     * @param PromoPeriodDTO $period
     * @param bool $participating
     * @param GetPromoAssortmentInfoDTO $assortmentInfo
     * @param GetPromoMechanicsInfoDTO $mechanicsInfo
     * @param GetPromoBestsellerInfoDTO $bestsellerInfo
     * @param ChannelType[]|null $channels
     * @param GetPromoConstraintsDTO|null $constraints
     */
    public function __construct(string $id, string $name, PromoPeriodDTO $period, bool $participating, GetPromoAssortmentInfoDTO $assortmentInfo, GetPromoMechanicsInfoDTO $mechanicsInfo, GetPromoBestsellerInfoDTO $bestsellerInfo, ?array $channels, ?GetPromoConstraintsDTO $constraints)
    {
        $this->id = $id;
        $this->name = $name;
        $this->period = $period;
        $this->participating = $participating;
        $this->assortmentInfo = $assortmentInfo;
        $this->mechanicsInfo = $mechanicsInfo;
        $this->bestsellerInfo = $bestsellerInfo;
        $this->channels = $channels;
        $this->constraints = $constraints;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['id'] ?? null, 
            $data['name'] ?? null, 
            isset($data['period']) ? PromoPeriodDTO::fromArray($data['period']) : null, 
            $data['participating'] ?? null, 
            isset($data['assortmentInfo']) ? GetPromoAssortmentInfoDTO::fromArray($data['assortmentInfo']) : null, 
            isset($data['mechanicsInfo']) ? GetPromoMechanicsInfoDTO::fromArray($data['mechanicsInfo']) : null, 
            isset($data['bestsellerInfo']) ? GetPromoBestsellerInfoDTO::fromArray($data['bestsellerInfo']) : null, 
            isset($data['channels']) ? array_map(fn($item) => ChannelType::tryFrom($item), $data['channels']) : null, 
            isset($data['channels']) ? array_map(fn($item) => ChannelType::fromArray($item), $data['channels']) : null, 
            isset($data['constraints']) ? GetPromoConstraintsDTO::fromArray($data['constraints']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'id' => $this->id, 
            'name' => $this->name, 
            'period' => $this->period, 
            'participating' => $this->participating, 
            'assortmentInfo' => $this->assortmentInfo, 
            'mechanicsInfo' => $this->mechanicsInfo, 
            'bestsellerInfo' => $this->bestsellerInfo, 
            'channels' => $this->channels, 
            'constraints' => $this->constraints, 
        ];
    }
}


