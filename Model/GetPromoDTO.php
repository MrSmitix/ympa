<?php
/**
 * GetPromoDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the GetPromoDTO model.
 *
 * Информация об акции.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class GetPromoDTO 
{
        /**
     * Идентификатор акции.
     *
     * @var string|null
     * @SerializedName("id")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $id = null;

    /**
     * Название акции.
     *
     * @var string|null
     * @SerializedName("name")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $name = null;

    /**
     * @var PromoPeriodDTO|null
     * @SerializedName("period")
     * @Type("OpenAPI\Server\Model\PromoPeriodDTO")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\Type("OpenAPI\Server\Model\PromoPeriodDTO")]
    protected ?PromoPeriodDTO $period = null;

    /**
     * Участвует или участвовал ли продавец в этой акции.  Для текущих и будущих акций возвращается со значением &#x60;true&#x60;, если в акции есть товары, которые были добавлены вручную. Если товары не участвуют в акции или добавлены в нее автоматически, параметр возвращается со значением &#x60;false&#x60;.  Для прошедших акций всегда возвращается со значением &#x60;true&#x60;.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).
     *
     * @var bool|null
     * @SerializedName("participating")
     * @Type("bool")
    */
    #[Assert\NotNull]
    #[Assert\Type("bool")]
    protected ?bool $participating = null;

    /**
     * @var GetPromoAssortmentInfoDTO|null
     * @SerializedName("assortmentInfo")
     * @Type("OpenAPI\Server\Model\GetPromoAssortmentInfoDTO")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\Type("OpenAPI\Server\Model\GetPromoAssortmentInfoDTO")]
    protected ?GetPromoAssortmentInfoDTO $assortmentInfo = null;

    /**
     * @var GetPromoMechanicsInfoDTO|null
     * @SerializedName("mechanicsInfo")
     * @Type("OpenAPI\Server\Model\GetPromoMechanicsInfoDTO")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\Type("OpenAPI\Server\Model\GetPromoMechanicsInfoDTO")]
    protected ?GetPromoMechanicsInfoDTO $mechanicsInfo = null;

    /**
     * @var GetPromoBestsellerInfoDTO|null
     * @SerializedName("bestsellerInfo")
     * @Type("OpenAPI\Server\Model\GetPromoBestsellerInfoDTO")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\Type("OpenAPI\Server\Model\GetPromoBestsellerInfoDTO")]
    protected ?GetPromoBestsellerInfoDTO $bestsellerInfo = null;

    /**
     * Список каналов продвижения товаров.
     *
     * @var ChannelType[]|null
     * @SerializedName("channels")
     * @Accessor(getter="getSerializedChannels", setter="setDeserializedChannels")
     * @Type("array<string>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\ChannelType"),
    ])]
    protected ?array $channels = null;

    /**
     * @var GetPromoConstraintsDTO|null
     * @SerializedName("constraints")
     * @Type("OpenAPI\Server\Model\GetPromoConstraintsDTO")
    */
    #[Assert\Type("OpenAPI\Server\Model\GetPromoConstraintsDTO")]
    protected ?GetPromoConstraintsDTO $constraints = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->name = array_key_exists('name', $data) ? $data['name'] : $this->name;
            $this->period = array_key_exists('period', $data) ? $data['period'] : $this->period;
            $this->participating = array_key_exists('participating', $data) ? $data['participating'] : $this->participating;
            $this->assortmentInfo = array_key_exists('assortmentInfo', $data) ? $data['assortmentInfo'] : $this->assortmentInfo;
            $this->mechanicsInfo = array_key_exists('mechanicsInfo', $data) ? $data['mechanicsInfo'] : $this->mechanicsInfo;
            $this->bestsellerInfo = array_key_exists('bestsellerInfo', $data) ? $data['bestsellerInfo'] : $this->bestsellerInfo;
            $this->channels = array_key_exists('channels', $data) ? $data['channels'] : $this->channels;
            $this->constraints = array_key_exists('constraints', $data) ? $data['constraints'] : $this->constraints;
        }
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param string|null $id  Идентификатор акции.
    *
    * @return $this
    */
    public function setId(?string $id): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
    * Sets name.
    *
    * @param string|null $name  Название акции.
    *
    * @return $this
    */
    public function setName(?string $name): self
    {
        $this->name = $name;

        return $this;
    }




    /**
     * Gets period.
     *
     * @return PromoPeriodDTO|null
     */
    public function getPeriod(): ?PromoPeriodDTO
    {
        return $this->period;
    }

    /**
    * Sets period.
    *
    * @param PromoPeriodDTO|null $period
    *
    * @return $this
    */
    public function setPeriod(?PromoPeriodDTO $period): self
    {
        $this->period = $period;

        return $this;
    }




    /**
     * Gets participating.
     *
     * @return bool|null
     */
    public function isParticipating(): ?bool
    {
        return $this->participating;
    }

    /**
    * Sets participating.
    *
    * @param bool|null $participating  Участвует или участвовал ли продавец в этой акции.  Для текущих и будущих акций возвращается со значением `true`, если в акции есть товары, которые были добавлены вручную. Если товары не участвуют в акции или добавлены в нее автоматически, параметр возвращается со значением `false`.  Для прошедших акций всегда возвращается со значением `true`.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).
    *
    * @return $this
    */
    public function setParticipating(?bool $participating): self
    {
        $this->participating = $participating;

        return $this;
    }




    /**
     * Gets assortmentInfo.
     *
     * @return GetPromoAssortmentInfoDTO|null
     */
    public function getAssortmentInfo(): ?GetPromoAssortmentInfoDTO
    {
        return $this->assortmentInfo;
    }

    /**
    * Sets assortmentInfo.
    *
    * @param GetPromoAssortmentInfoDTO|null $assortmentInfo
    *
    * @return $this
    */
    public function setAssortmentInfo(?GetPromoAssortmentInfoDTO $assortmentInfo): self
    {
        $this->assortmentInfo = $assortmentInfo;

        return $this;
    }




    /**
     * Gets mechanicsInfo.
     *
     * @return GetPromoMechanicsInfoDTO|null
     */
    public function getMechanicsInfo(): ?GetPromoMechanicsInfoDTO
    {
        return $this->mechanicsInfo;
    }

    /**
    * Sets mechanicsInfo.
    *
    * @param GetPromoMechanicsInfoDTO|null $mechanicsInfo
    *
    * @return $this
    */
    public function setMechanicsInfo(?GetPromoMechanicsInfoDTO $mechanicsInfo): self
    {
        $this->mechanicsInfo = $mechanicsInfo;

        return $this;
    }




    /**
     * Gets bestsellerInfo.
     *
     * @return GetPromoBestsellerInfoDTO|null
     */
    public function getBestsellerInfo(): ?GetPromoBestsellerInfoDTO
    {
        return $this->bestsellerInfo;
    }

    /**
    * Sets bestsellerInfo.
    *
    * @param GetPromoBestsellerInfoDTO|null $bestsellerInfo
    *
    * @return $this
    */
    public function setBestsellerInfo(?GetPromoBestsellerInfoDTO $bestsellerInfo): self
    {
        $this->bestsellerInfo = $bestsellerInfo;

        return $this;
    }




    /**
     * Gets channels.
     *
     * @return ChannelType[]|null
     */
    public function getChannels(): ?array
    {
        return $this->channels;
    }

    /**
    * Sets channels.
    *
    * @param ChannelType[]|null $channels  Список каналов продвижения товаров.
    *
    * @return $this
    */
    public function setChannels(?array $channels = null): self
    {
        $this->channels = $channels;

        return $this;
    }


    /**
    * Gets channels for serialization.
    *
    * @return array
    */
    public function getSerializedChannels(): array
    {
        return array_map(
            static fn ($value) => $value?->value ? (string) $value->value : null,
            $this->channels ?? []
        );
    }

    /**
    * Sets channels.
    *
    * @param ?array $channels
    *
    * @return $this
    */
    public function setDeserializedChannels(?array $channels = []): self
    {
        $this->channels = array_map(
            static function ($value) {
                if (is_string($value)) {
                    $value = ChannelType::tryFrom($value);
                }

                return $value;
            },
            $channels ?? []
        );

        return $this;
    }


    /**
     * Gets constraints.
     *
     * @return GetPromoConstraintsDTO|null
     */
    public function getConstraints(): ?GetPromoConstraintsDTO
    {
        return $this->constraints;
    }

    /**
    * Sets constraints.
    *
    * @param GetPromoConstraintsDTO|null $constraints
    *
    * @return $this
    */
    public function setConstraints(?GetPromoConstraintsDTO $constraints = null): self
    {
        $this->constraints = $constraints;

        return $this;
    }



}


