<?php
/**
 * CampaignDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the CampaignDTO model.
 *
 * Информация о магазине.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class CampaignDTO 
{
        /**
     * URL магазина.
     *
     * @var string|null
     * @SerializedName("domain")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $domain = null;

    /**
     * Идентификатор кампании.
     *
     * @var int|null
     * @SerializedName("id")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $id = null;

    /**
     * Идентификатор плательщика в Яндекс Балансе.
     *
     * @var int|null
     * @SerializedName("clientId")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $clientId = null;

    /**
     * @var BusinessDTO|null
     * @SerializedName("business")
     * @Type("OpenAPI\Server\Model\BusinessDTO")
    */
    #[Assert\Type("OpenAPI\Server\Model\BusinessDTO")]
    protected ?BusinessDTO $business = null;

    /**
     * @var PlacementType|null
     * @SerializedName("placementType")
    * @Accessor(getter="getSerializedPlacementType", setter="setDeserializedPlacementType")
    * @Type("string")
    */
    protected ?PlacementType $placementType = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->domain = array_key_exists('domain', $data) ? $data['domain'] : $this->domain;
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->clientId = array_key_exists('clientId', $data) ? $data['clientId'] : $this->clientId;
            $this->business = array_key_exists('business', $data) ? $data['business'] : $this->business;
            $this->placementType = array_key_exists('placementType', $data) ? $data['placementType'] : $this->placementType;
        }
    }

    /**
     * Gets domain.
     *
     * @return string|null
     */
    public function getDomain(): ?string
    {
        return $this->domain;
    }

    /**
    * Sets domain.
    *
    * @param string|null $domain  URL магазина.
    *
    * @return $this
    */
    public function setDomain(?string $domain = null): self
    {
        $this->domain = $domain;

        return $this;
    }




    /**
     * Gets id.
     *
     * @return int|null
     */
    public function getId(): ?int
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param int|null $id  Идентификатор кампании.
    *
    * @return $this
    */
    public function setId(?int $id = null): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets clientId.
     *
     * @return int|null
     */
    public function getClientId(): ?int
    {
        return $this->clientId;
    }

    /**
    * Sets clientId.
    *
    * @param int|null $clientId  Идентификатор плательщика в Яндекс Балансе.
    *
    * @return $this
    */
    public function setClientId(?int $clientId = null): self
    {
        $this->clientId = $clientId;

        return $this;
    }




    /**
     * Gets business.
     *
     * @return BusinessDTO|null
     */
    public function getBusiness(): ?BusinessDTO
    {
        return $this->business;
    }

    /**
    * Sets business.
    *
    * @param BusinessDTO|null $business
    *
    * @return $this
    */
    public function setBusiness(?BusinessDTO $business = null): self
    {
        $this->business = $business;

        return $this;
    }




    /**
     * Gets placementType.
     *
     * @return PlacementType|null
     */
    public function getPlacementType(): ?PlacementType
    {
        return $this->placementType;
    }

    /**
    * Sets placementType.
    *
    * @param PlacementType|null $placementType
    *
    * @return $this
    */
    public function setPlacementType(?PlacementType $placementType = null): self
    {
        $this->placementType = $placementType;

        return $this;
    }

    /**
    * Gets placementType for serialization.
    *
    * @return string|null
    */
    public function getSerializedPlacementType(): string|null
    {
        return $this->placementType?->value ? (string) $this->placementType->value : null;
    }

    /**
    * Sets placementType.
    *
    * @param string|PlacementType|null $placementType
    *
    * @return $this
    */
    public function setDeserializedPlacementType(string|PlacementType|null $placementType = null): self
    {
        if (is_string($placementType)) {
            $placementType = PlacementType::tryFrom($placementType);
        }

        $this->placementType = $placementType;

        return $this;
    }


}


