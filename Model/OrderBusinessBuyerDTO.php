<?php
/**
 * OrderBusinessBuyerDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the OrderBusinessBuyerDTO model.
 *
 * Информация о покупателе.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class OrderBusinessBuyerDTO  implements \JsonSerializable
{
        /**
     * ИНН.
     *
     * @var string|null
     * @SerializedName("inn")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $inn;

    /**
     * КПП.
     *
     * @var string|null
     * @SerializedName("kpp")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $kpp;

    /**
     * Наименование юридического лица.
     *
     * @var string|null
     * @SerializedName("organizationName")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $organizationName;

    /**
     * Юридический адрес.
     *
     * @var string|null
     * @SerializedName("organizationJurAddress")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $organizationJurAddress;

    /**
     * Constructor
     *
     * @param string|null $inn
     * @param string|null $kpp
     * @param string|null $organizationName
     * @param string|null $organizationJurAddress
     */
    public function __construct(?string $inn, ?string $kpp, ?string $organizationName, ?string $organizationJurAddress)
    {
        $this->inn = $inn;
        $this->kpp = $kpp;
        $this->organizationName = $organizationName;
        $this->organizationJurAddress = $organizationJurAddress;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['inn'] ?? null, 
            $data['kpp'] ?? null, 
            $data['organizationName'] ?? null, 
            $data['organizationJurAddress'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'inn' => $this->inn, 
            'kpp' => $this->kpp, 
            'organizationName' => $this->organizationName, 
            'organizationJurAddress' => $this->organizationJurAddress, 
        ];
    }
}


