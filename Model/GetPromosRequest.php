<?php
/**
 * GetPromosRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the GetPromosRequest model.
 *
 * Фильтры для получения списка акций.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class GetPromosRequest 
{
        /**
     * @var PromoParticipationType|null
     * @SerializedName("participation")
    * @Accessor(getter="getSerializedParticipation", setter="setDeserializedParticipation")
    * @Type("string")
    */
    protected ?PromoParticipationType $participation = null;

    /**
     * @var MechanicsType|null
     * @SerializedName("mechanics")
    * @Accessor(getter="getSerializedMechanics", setter="setDeserializedMechanics")
    * @Type("string")
    */
    protected ?MechanicsType $mechanics = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->participation = array_key_exists('participation', $data) ? $data['participation'] : $this->participation;
            $this->mechanics = array_key_exists('mechanics', $data) ? $data['mechanics'] : $this->mechanics;
        }
    }

    /**
     * Gets participation.
     *
     * @return PromoParticipationType|null
     */
    public function getParticipation(): ?PromoParticipationType
    {
        return $this->participation;
    }

    /**
    * Sets participation.
    *
    * @param PromoParticipationType|null $participation
    *
    * @return $this
    */
    public function setParticipation(?PromoParticipationType $participation = null): self
    {
        $this->participation = $participation;

        return $this;
    }

    /**
    * Gets participation for serialization.
    *
    * @return string|null
    */
    public function getSerializedParticipation(): string|null
    {
        return $this->participation?->value ? (string) $this->participation->value : null;
    }

    /**
    * Sets participation.
    *
    * @param string|PromoParticipationType|null $participation
    *
    * @return $this
    */
    public function setDeserializedParticipation(string|PromoParticipationType|null $participation = null): self
    {
        if (is_string($participation)) {
            $participation = PromoParticipationType::tryFrom($participation);
        }

        $this->participation = $participation;

        return $this;
    }



    /**
     * Gets mechanics.
     *
     * @return MechanicsType|null
     */
    public function getMechanics(): ?MechanicsType
    {
        return $this->mechanics;
    }

    /**
    * Sets mechanics.
    *
    * @param MechanicsType|null $mechanics
    *
    * @return $this
    */
    public function setMechanics(?MechanicsType $mechanics = null): self
    {
        $this->mechanics = $mechanics;

        return $this;
    }

    /**
    * Gets mechanics for serialization.
    *
    * @return string|null
    */
    public function getSerializedMechanics(): string|null
    {
        return $this->mechanics?->value ? (string) $this->mechanics->value : null;
    }

    /**
    * Sets mechanics.
    *
    * @param string|MechanicsType|null $mechanics
    *
    * @return $this
    */
    public function setDeserializedMechanics(string|MechanicsType|null $mechanics = null): self
    {
        if (is_string($mechanics)) {
            $mechanics = MechanicsType::tryFrom($mechanics);
        }

        $this->mechanics = $mechanics;

        return $this;
    }


}


