<?php
/**
 * GoodsStatsWeightDimensionsDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the GoodsStatsWeightDimensionsDTO model.
 *
 * Информация о весе и габаритах товара.  Если товар уже привязан к карточке (&#x60;marketSku&#x60;), в ответе вернутся габариты из карточки Маркета, а не размеры, которые вы передаете.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class GoodsStatsWeightDimensionsDTO  implements \JsonSerializable
{
        /**
     * Длина товара в сантиметрах.
     *
     * @var float|null
     * @SerializedName("length")
     * @Assert\Type("float")
     * @Type("float")
     */
    public ?float $length;

    /**
     * Ширина товара в сантиметрах.
     *
     * @var float|null
     * @SerializedName("width")
     * @Assert\Type("float")
     * @Type("float")
     */
    public ?float $width;

    /**
     * Высота товара в сантиметрах.
     *
     * @var float|null
     * @SerializedName("height")
     * @Assert\Type("float")
     * @Type("float")
     */
    public ?float $height;

    /**
     * Вес товара в килограммах.
     *
     * @var float|null
     * @SerializedName("weight")
     * @Assert\Type("float")
     * @Type("float")
     */
    public ?float $weight;

    /**
     * Constructor
     *
     * @param float|null $length
     * @param float|null $width
     * @param float|null $height
     * @param float|null $weight
     */
    public function __construct(?float $length, ?float $width, ?float $height, ?float $weight)
    {
        $this->length = $length;
        $this->width = $width;
        $this->height = $height;
        $this->weight = $weight;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['length'] ?? null, 
            $data['width'] ?? null, 
            $data['height'] ?? null, 
            $data['weight'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'length' => $this->length, 
            'width' => $this->width, 
            'height' => $this->height, 
            'weight' => $this->weight, 
        ];
    }
}


