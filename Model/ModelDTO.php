<?php
/**
 * ModelDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the ModelDTO model.
 *
 * Модель товара.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class ModelDTO  implements \JsonSerializable
{
        /**
     * Идентификатор модели товара.
     *
     * @var int|null
     * @SerializedName("id")
     * @Assert\Type("int")
     * @Type("int")
     */
    public ?int $id;

    /**
     * Название модели товара.
     *
     * @var string|null
     * @SerializedName("name")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $name;

    /**
     * @var ModelPriceDTO|null
     * @SerializedName("prices")
     * @Assert\Type("\OpenAPIServer\Model\ModelPriceDTO")
     * @Type("\OpenAPIServer\Model\ModelPriceDTO")
     */
    public ?ModelPriceDTO $prices;

    /**
     * Constructor
     *
     * @param int|null $id
     * @param string|null $name
     * @param ModelPriceDTO|null $prices
     */
    public function __construct(?int $id, ?string $name, ?ModelPriceDTO $prices)
    {
        $this->id = $id;
        $this->name = $name;
        $this->prices = $prices;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['id'] ?? null, 
            $data['name'] ?? null, 
            isset($data['prices']) ? ModelPriceDTO::fromArray($data['prices']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'id' => $this->id, 
            'name' => $this->name, 
            'prices' => $this->prices, 
        ];
    }
}


