<?php
/**
 * DeletePromoOffersRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the DeletePromoOffersRequest model.
 *
 * Удаление товаров из акции.  Чтобы убрать:  * все товары из акции и больше не участвовать в ней, передайте значение &#x60;true&#x60; в параметре &#x60;deleteAllOffers&#x60;;  * часть товаров, передайте их идентификаторы в параметре &#x60;offersIds&#x60;.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class DeletePromoOffersRequest 
{
        /**
     * Идентификатор акции.
     *
     * @var string|null
     * @SerializedName("promoId")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $promoId = null;

    /**
     * Чтобы убрать все товары из акции и больше не участвовать в ней, передайте значение &#x60;true&#x60; и не передавайте параметр &#x60;offerIds&#x60;.
     *
     * @var bool|null
     * @SerializedName("deleteAllOffers")
     * @Type("bool")
    */
    #[Assert\Type("bool")]
    protected ?bool $deleteAllOffers = null;

    /**
     * Товары, которые нужно убрать из акции.
     *
     * @var string[]|null
     * @SerializedName("offerIds")
     * @Type("array<string>")
    */
    #[Assert\All([
        new Assert\Type("string"),
    ])]
    #[Assert\Count(max: 500)]
    #[Assert\Count(min: 1)]
    protected ?array $offerIds = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->promoId = array_key_exists('promoId', $data) ? $data['promoId'] : $this->promoId;
            $this->deleteAllOffers = array_key_exists('deleteAllOffers', $data) ? $data['deleteAllOffers'] : $this->deleteAllOffers;
            $this->offerIds = array_key_exists('offerIds', $data) ? $data['offerIds'] : $this->offerIds;
        }
    }

    /**
     * Gets promoId.
     *
     * @return string|null
     */
    public function getPromoId(): ?string
    {
        return $this->promoId;
    }

    /**
    * Sets promoId.
    *
    * @param string|null $promoId  Идентификатор акции.
    *
    * @return $this
    */
    public function setPromoId(?string $promoId): self
    {
        $this->promoId = $promoId;

        return $this;
    }




    /**
     * Gets deleteAllOffers.
     *
     * @return bool|null
     */
    public function isDeleteAllOffers(): ?bool
    {
        return $this->deleteAllOffers;
    }

    /**
    * Sets deleteAllOffers.
    *
    * @param bool|null $deleteAllOffers  Чтобы убрать все товары из акции и больше не участвовать в ней, передайте значение `true` и не передавайте параметр `offerIds`.
    *
    * @return $this
    */
    public function setDeleteAllOffers(?bool $deleteAllOffers = null): self
    {
        $this->deleteAllOffers = $deleteAllOffers;

        return $this;
    }




    /**
     * Gets offerIds.
     *
     * @return string[]|null
     */
    public function getOfferIds(): ?array
    {
        return $this->offerIds;
    }

    /**
    * Sets offerIds.
    *
    * @param string[]|null $offerIds  Товары, которые нужно убрать из акции.
    *
    * @return $this
    */
    public function setOfferIds(?array $offerIds = null): self
    {
        $this->offerIds = $offerIds;

        return $this;
    }



}


