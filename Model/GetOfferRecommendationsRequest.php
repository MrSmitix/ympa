<?php
/**
 * GetOfferRecommendationsRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the GetOfferRecommendationsRequest model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class GetOfferRecommendationsRequest 
{
        /**
     * Идентификаторы товаров, информация о которых нужна. ⚠️ Не используйте это поле одновременно с остальными фильтрами. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.
     *
     * @var string[]|null
     * @SerializedName("offerIds")
     * @Type("array<string>")
    */
    #[Assert\All([
        new Assert\Type("string"),
    ])]
    protected ?array $offerIds = null;

    /**
     * @var FieldStateType|null
     * @SerializedName("cofinancePriceFilter")
    * @Accessor(getter="getSerializedCofinancePriceFilter", setter="setDeserializedCofinancePriceFilter")
    * @Type("string")
    */
    protected ?FieldStateType $cofinancePriceFilter = null;

    /**
     * @var FieldStateType|null
     * @SerializedName("recommendedCofinancePriceFilter")
    * @Accessor(getter="getSerializedRecommendedCofinancePriceFilter", setter="setDeserializedRecommendedCofinancePriceFilter")
    * @Type("string")
    */
    protected ?FieldStateType $recommendedCofinancePriceFilter = null;

    /**
     * @var PriceCompetitivenessType|null
     * @SerializedName("competitivenessFilter")
    * @Accessor(getter="getSerializedCompetitivenessFilter", setter="setDeserializedCompetitivenessFilter")
    * @Type("string")
    */
    protected ?PriceCompetitivenessType $competitivenessFilter = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->offerIds = array_key_exists('offerIds', $data) ? $data['offerIds'] : $this->offerIds;
            $this->cofinancePriceFilter = array_key_exists('cofinancePriceFilter', $data) ? $data['cofinancePriceFilter'] : $this->cofinancePriceFilter;
            $this->recommendedCofinancePriceFilter = array_key_exists('recommendedCofinancePriceFilter', $data) ? $data['recommendedCofinancePriceFilter'] : $this->recommendedCofinancePriceFilter;
            $this->competitivenessFilter = array_key_exists('competitivenessFilter', $data) ? $data['competitivenessFilter'] : $this->competitivenessFilter;
        }
    }

    /**
     * Gets offerIds.
     *
     * @return string[]|null
     */
    public function getOfferIds(): ?array
    {
        return $this->offerIds;
    }

    /**
    * Sets offerIds.
    *
    * @param string[]|null $offerIds  Идентификаторы товаров, информация о которых нужна. ⚠️ Не используйте это поле одновременно с остальными фильтрами. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.
    *
    * @return $this
    */
    public function setOfferIds(?array $offerIds = null): self
    {
        $this->offerIds = $offerIds;

        return $this;
    }




    /**
     * Gets cofinancePriceFilter.
     *
     * @return FieldStateType|null
     */
    public function getCofinancePriceFilter(): ?FieldStateType
    {
        return $this->cofinancePriceFilter;
    }

    /**
    * Sets cofinancePriceFilter.
    *
    * @param FieldStateType|null $cofinancePriceFilter
    *
    * @return $this
    */
    public function setCofinancePriceFilter(?FieldStateType $cofinancePriceFilter = null): self
    {
        $this->cofinancePriceFilter = $cofinancePriceFilter;

        return $this;
    }

    /**
    * Gets cofinancePriceFilter for serialization.
    *
    * @return string|null
    */
    public function getSerializedCofinancePriceFilter(): string|null
    {
        return $this->cofinancePriceFilter?->value ? (string) $this->cofinancePriceFilter->value : null;
    }

    /**
    * Sets cofinancePriceFilter.
    *
    * @param string|FieldStateType|null $cofinancePriceFilter
    *
    * @return $this
    */
    public function setDeserializedCofinancePriceFilter(string|FieldStateType|null $cofinancePriceFilter = null): self
    {
        if (is_string($cofinancePriceFilter)) {
            $cofinancePriceFilter = FieldStateType::tryFrom($cofinancePriceFilter);
        }

        $this->cofinancePriceFilter = $cofinancePriceFilter;

        return $this;
    }



    /**
     * Gets recommendedCofinancePriceFilter.
     *
     * @return FieldStateType|null
     */
    public function getRecommendedCofinancePriceFilter(): ?FieldStateType
    {
        return $this->recommendedCofinancePriceFilter;
    }

    /**
    * Sets recommendedCofinancePriceFilter.
    *
    * @param FieldStateType|null $recommendedCofinancePriceFilter
    *
    * @return $this
    */
    public function setRecommendedCofinancePriceFilter(?FieldStateType $recommendedCofinancePriceFilter = null): self
    {
        $this->recommendedCofinancePriceFilter = $recommendedCofinancePriceFilter;

        return $this;
    }

    /**
    * Gets recommendedCofinancePriceFilter for serialization.
    *
    * @return string|null
    */
    public function getSerializedRecommendedCofinancePriceFilter(): string|null
    {
        return $this->recommendedCofinancePriceFilter?->value ? (string) $this->recommendedCofinancePriceFilter->value : null;
    }

    /**
    * Sets recommendedCofinancePriceFilter.
    *
    * @param string|FieldStateType|null $recommendedCofinancePriceFilter
    *
    * @return $this
    */
    public function setDeserializedRecommendedCofinancePriceFilter(string|FieldStateType|null $recommendedCofinancePriceFilter = null): self
    {
        if (is_string($recommendedCofinancePriceFilter)) {
            $recommendedCofinancePriceFilter = FieldStateType::tryFrom($recommendedCofinancePriceFilter);
        }

        $this->recommendedCofinancePriceFilter = $recommendedCofinancePriceFilter;

        return $this;
    }



    /**
     * Gets competitivenessFilter.
     *
     * @return PriceCompetitivenessType|null
     */
    public function getCompetitivenessFilter(): ?PriceCompetitivenessType
    {
        return $this->competitivenessFilter;
    }

    /**
    * Sets competitivenessFilter.
    *
    * @param PriceCompetitivenessType|null $competitivenessFilter
    *
    * @return $this
    */
    public function setCompetitivenessFilter(?PriceCompetitivenessType $competitivenessFilter = null): self
    {
        $this->competitivenessFilter = $competitivenessFilter;

        return $this;
    }

    /**
    * Gets competitivenessFilter for serialization.
    *
    * @return string|null
    */
    public function getSerializedCompetitivenessFilter(): string|null
    {
        return $this->competitivenessFilter?->value ? (string) $this->competitivenessFilter->value : null;
    }

    /**
    * Sets competitivenessFilter.
    *
    * @param string|PriceCompetitivenessType|null $competitivenessFilter
    *
    * @return $this
    */
    public function setDeserializedCompetitivenessFilter(string|PriceCompetitivenessType|null $competitivenessFilter = null): self
    {
        if (is_string($competitivenessFilter)) {
            $competitivenessFilter = PriceCompetitivenessType::tryFrom($competitivenessFilter);
        }

        $this->competitivenessFilter = $competitivenessFilter;

        return $this;
    }


}


