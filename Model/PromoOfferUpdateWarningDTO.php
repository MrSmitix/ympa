<?php
/**
 * PromoOfferUpdateWarningDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the PromoOfferUpdateWarningDTO model.
 *
 * Предупреждение, которое появилось при добавлении товара в акцию или изменении его цен.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class PromoOfferUpdateWarningDTO 
{
        /**
     * @var PromoOfferUpdateWarningCodeType|null
     * @SerializedName("code")
    * @Accessor(getter="getSerializedCode", setter="setDeserializedCode")
    * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    protected ?PromoOfferUpdateWarningCodeType $code = null;

    /**
     * Идентификаторы магазинов в кабинете, для которых получены предупреждения.  Не возвращается, если предупреждения действуют для всех магазинов в кабинете.
     *
     * @var int[]|null
     * @SerializedName("campaignIds")
     * @Type("array<int>")
    */
    #[Assert\All([
        new Assert\Type("int"),
    ])]
    protected ?array $campaignIds = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->code = array_key_exists('code', $data) ? $data['code'] : $this->code;
            $this->campaignIds = array_key_exists('campaignIds', $data) ? $data['campaignIds'] : $this->campaignIds;
        }
    }

    /**
     * Gets code.
     *
     * @return PromoOfferUpdateWarningCodeType|null
     */
    public function getCode(): ?PromoOfferUpdateWarningCodeType
    {
        return $this->code;
    }

    /**
    * Sets code.
    *
    * @param PromoOfferUpdateWarningCodeType|null $code
    *
    * @return $this
    */
    public function setCode(?PromoOfferUpdateWarningCodeType $code): self
    {
        $this->code = $code;

        return $this;
    }

    /**
    * Gets code for serialization.
    *
    * @return string|null
    */
    public function getSerializedCode(): string|null
    {
        return $this->code?->value ? (string) $this->code->value : null;
    }

    /**
    * Sets code.
    *
    * @param string|PromoOfferUpdateWarningCodeType|null $code
    *
    * @return $this
    */
    public function setDeserializedCode(string|PromoOfferUpdateWarningCodeType|null $code): self
    {
        if (is_string($code)) {
            $code = PromoOfferUpdateWarningCodeType::tryFrom($code);
        }

        $this->code = $code;

        return $this;
    }



    /**
     * Gets campaignIds.
     *
     * @return int[]|null
     */
    public function getCampaignIds(): ?array
    {
        return $this->campaignIds;
    }

    /**
    * Sets campaignIds.
    *
    * @param int[]|null $campaignIds  Идентификаторы магазинов в кабинете, для которых получены предупреждения.  Не возвращается, если предупреждения действуют для всех магазинов в кабинете.
    *
    * @return $this
    */
    public function setCampaignIds(?array $campaignIds = null): self
    {
        $this->campaignIds = $campaignIds;

        return $this;
    }



}


