<?php
/**
 * PickupAddressDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the PickupAddressDTO model.
 *
 * Адрес доставки.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class PickupAddressDTO  implements \JsonSerializable
{
        /**
     * Страна.
     *
     * @var string|null
     * @SerializedName("country")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $country;

    /**
     * Город.
     *
     * @var string|null
     * @SerializedName("city")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $city;

    /**
     * Улица.
     *
     * @var string|null
     * @SerializedName("street")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $street;

    /**
     * Номер дома.
     *
     * @var string|null
     * @SerializedName("house")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $house;

    /**
     * Почтовый индекс.
     *
     * @var string|null
     * @SerializedName("postcode")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $postcode;

    /**
     * Constructor
     *
     * @param string|null $country
     * @param string|null $city
     * @param string|null $street
     * @param string|null $house
     * @param string|null $postcode
     */
    public function __construct(?string $country, ?string $city, ?string $street, ?string $house, ?string $postcode)
    {
        $this->country = $country;
        $this->city = $city;
        $this->street = $street;
        $this->house = $house;
        $this->postcode = $postcode;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['country'] ?? null, 
            $data['city'] ?? null, 
            $data['street'] ?? null, 
            $data['house'] ?? null, 
            $data['postcode'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'country' => $this->country, 
            'city' => $this->city, 
            'street' => $this->street, 
            'house' => $this->house, 
            'postcode' => $this->postcode, 
        ];
    }
}


