<?php
/**
 * PickupAddressDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the PickupAddressDTO model.
 *
 * Адрес доставки.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class PickupAddressDTO 
{
        /**
     * Страна.
     *
     * @var string|null
     * @SerializedName("country")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $country = null;

    /**
     * Город.
     *
     * @var string|null
     * @SerializedName("city")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $city = null;

    /**
     * Улица.
     *
     * @var string|null
     * @SerializedName("street")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $street = null;

    /**
     * Номер дома.
     *
     * @var string|null
     * @SerializedName("house")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $house = null;

    /**
     * Почтовый индекс.
     *
     * @var string|null
     * @SerializedName("postcode")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $postcode = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->country = array_key_exists('country', $data) ? $data['country'] : $this->country;
            $this->city = array_key_exists('city', $data) ? $data['city'] : $this->city;
            $this->street = array_key_exists('street', $data) ? $data['street'] : $this->street;
            $this->house = array_key_exists('house', $data) ? $data['house'] : $this->house;
            $this->postcode = array_key_exists('postcode', $data) ? $data['postcode'] : $this->postcode;
        }
    }

    /**
     * Gets country.
     *
     * @return string|null
     */
    public function getCountry(): ?string
    {
        return $this->country;
    }

    /**
    * Sets country.
    *
    * @param string|null $country  Страна.
    *
    * @return $this
    */
    public function setCountry(?string $country = null): self
    {
        $this->country = $country;

        return $this;
    }




    /**
     * Gets city.
     *
     * @return string|null
     */
    public function getCity(): ?string
    {
        return $this->city;
    }

    /**
    * Sets city.
    *
    * @param string|null $city  Город.
    *
    * @return $this
    */
    public function setCity(?string $city = null): self
    {
        $this->city = $city;

        return $this;
    }




    /**
     * Gets street.
     *
     * @return string|null
     */
    public function getStreet(): ?string
    {
        return $this->street;
    }

    /**
    * Sets street.
    *
    * @param string|null $street  Улица.
    *
    * @return $this
    */
    public function setStreet(?string $street = null): self
    {
        $this->street = $street;

        return $this;
    }




    /**
     * Gets house.
     *
     * @return string|null
     */
    public function getHouse(): ?string
    {
        return $this->house;
    }

    /**
    * Sets house.
    *
    * @param string|null $house  Номер дома.
    *
    * @return $this
    */
    public function setHouse(?string $house = null): self
    {
        $this->house = $house;

        return $this;
    }




    /**
     * Gets postcode.
     *
     * @return string|null
     */
    public function getPostcode(): ?string
    {
        return $this->postcode;
    }

    /**
    * Sets postcode.
    *
    * @param string|null $postcode  Почтовый индекс.
    *
    * @return $this
    */
    public function setPostcode(?string $postcode = null): self
    {
        $this->postcode = $postcode;

        return $this;
    }



}


