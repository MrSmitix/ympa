<?php
/**
 * RegionalModelInfoDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the RegionalModelInfoDTO model.
 *
 * Региональная информация.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class RegionalModelInfoDTO 
{
        /**
     * @var CurrencyType|null
     * @SerializedName("currency")
    * @Accessor(getter="getSerializedCurrency", setter="setDeserializedCurrency")
    * @Type("string")
    */
    protected ?CurrencyType $currency = null;

    /**
     * Идентификатор региона, для которого выводится информация о предложениях модели (доставляемых в этот регион).  Информацию о регионе по идентификатору можно получить с помощью запроса [GET regions/{regionId}](../../reference/regions/searchRegionsById.md).
     *
     * @var int|null
     * @SerializedName("regionId")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $regionId = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->currency = array_key_exists('currency', $data) ? $data['currency'] : $this->currency;
            $this->regionId = array_key_exists('regionId', $data) ? $data['regionId'] : $this->regionId;
        }
    }

    /**
     * Gets currency.
     *
     * @return CurrencyType|null
     */
    public function getCurrency(): ?CurrencyType
    {
        return $this->currency;
    }

    /**
    * Sets currency.
    *
    * @param CurrencyType|null $currency
    *
    * @return $this
    */
    public function setCurrency(?CurrencyType $currency = null): self
    {
        $this->currency = $currency;

        return $this;
    }

    /**
    * Gets currency for serialization.
    *
    * @return string|null
    */
    public function getSerializedCurrency(): string|null
    {
        return $this->currency?->value ? (string) $this->currency->value : null;
    }

    /**
    * Sets currency.
    *
    * @param string|CurrencyType|null $currency
    *
    * @return $this
    */
    public function setDeserializedCurrency(string|CurrencyType|null $currency = null): self
    {
        if (is_string($currency)) {
            $currency = CurrencyType::tryFrom($currency);
        }

        $this->currency = $currency;

        return $this;
    }



    /**
     * Gets regionId.
     *
     * @return int|null
     */
    public function getRegionId(): ?int
    {
        return $this->regionId;
    }

    /**
    * Sets regionId.
    *
    * @param int|null $regionId  Идентификатор региона, для которого выводится информация о предложениях модели (доставляемых в этот регион).  Информацию о регионе по идентификатору можно получить с помощью запроса [GET regions/{regionId}](../../reference/regions/searchRegionsById.md).
    *
    * @return $this
    */
    public function setRegionId(?int $regionId = null): self
    {
        $this->regionId = $regionId;

        return $this;
    }



}


