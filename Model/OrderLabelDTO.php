<?php
/**
 * OrderLabelDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the OrderLabelDTO model.
 *
 * Данные для печати ярлыка.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class OrderLabelDTO  implements \JsonSerializable
{
        /**
     * Идентификатор заказа.
     *
     * @var int
     * @SerializedName("orderId")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    public int $orderId;

    /**
     * Количество коробок в заказе.
     *
     * @var int
     * @SerializedName("placesNumber")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    public int $placesNumber;

    /**
     * URL файла с ярлыками‑наклейками на все коробки в заказе.  Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/labels](../../reference/orders/generateOrderLabels.md).
     *
     * @var string
     * @SerializedName("url")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    public string $url;

    /**
     * Информация на ярлыке.
     *
     * @var ParcelBoxLabelDTO[]
     * @SerializedName("parcelBoxLabels")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\ParcelBoxLabelDTO")
     * })
     * @Type("array<\OpenAPIServer\Model\ParcelBoxLabelDTO>")
     */
    public array $parcelBoxLabels;

    /**
     * Constructor
     *
     * @param int $orderId
     * @param int $placesNumber
     * @param string $url
     * @param ParcelBoxLabelDTO[] $parcelBoxLabels
     */
    public function __construct(int $orderId, int $placesNumber, string $url, array $parcelBoxLabels)
    {
        $this->orderId = $orderId;
        $this->placesNumber = $placesNumber;
        $this->url = $url;
        $this->parcelBoxLabels = $parcelBoxLabels;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['orderId'] ?? null, 
            $data['placesNumber'] ?? null, 
            $data['url'] ?? null, 
            isset($data['parcelBoxLabels']) ? array_map(fn($item) => ParcelBoxLabelDTO::fromArray($item), $data['parcelBoxLabels']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'orderId' => $this->orderId, 
            'placesNumber' => $this->placesNumber, 
            'url' => $this->url, 
            'parcelBoxLabels' => $this->parcelBoxLabels, 
        ];
    }
}


