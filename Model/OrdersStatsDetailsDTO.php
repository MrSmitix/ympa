<?php
/**
 * OrdersStatsDetailsDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the OrdersStatsDetailsDTO model.
 *
 * Информация об удалении товара из заказа.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class OrdersStatsDetailsDTO  implements \JsonSerializable
{
        /**
     * @var OrdersStatsItemStatusType|null
     * @SerializedName("itemStatus")
        * @Accessor(getter="getSerializedItemStatus")
        * @Type("string")
     */
    public ?OrdersStatsItemStatusType $itemStatus;

    /**
     * Количество товара со статусом, указанном в параметре &#x60;itemStatus&#x60;.
     *
     * @var int|null
     * @SerializedName("itemCount")
     * @Assert\Type("int")
     * @Type("int")
     */
    public ?int $itemCount;

    /**
     * Дата, когда товар получил статус, указанный в параметре &#x60;itemStatus&#x60;.  Формат даты: &#x60;ГГГГ-ММ-ДД&#x60;.
     *
     * @var \DateTime|null
     * @SerializedName("updateDate")
     * @Assert\Type("\Date")
     * @Type("DateTime<'Y-m-d'>")
     */
    public ?\DateTime $updateDate;

    /**
     * @var OrdersStatsStockType|null
     * @SerializedName("stockType")
        * @Accessor(getter="getSerializedStockType")
        * @Type("string")
     */
    public ?OrdersStatsStockType $stockType;

    /**
     * Constructor
     *
     * @param OrdersStatsItemStatusType|null $itemStatus
     * @param int|null $itemCount
     * @param \DateTime|null $updateDate
     * @param OrdersStatsStockType|null $stockType
     */
    public function __construct(?OrdersStatsItemStatusType $itemStatus, ?int $itemCount, ?\DateTime $updateDate, ?OrdersStatsStockType $stockType)
    {
        $this->itemStatus = $itemStatus;
        $this->itemCount = $itemCount;
        $this->updateDate = $updateDate;
        $this->stockType = $stockType;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            isset($data['itemStatus']) ? OrdersStatsItemStatusType::tryFrom($data['itemStatus']) : null, 
            $data['itemCount'] ?? null, 
            $data['updateDate'] ?? null, 
            isset($data['stockType']) ? OrdersStatsStockType::tryFrom($data['stockType']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'itemStatus' => $this->itemStatus, 
            'itemCount' => $this->itemCount, 
            'updateDate' => $this->updateDate, 
            'stockType' => $this->stockType, 
        ];
    }
}


