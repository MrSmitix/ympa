<?php
/**
 * OrdersStatsDetailsDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OrdersStatsDetailsDTO model.
 *
 * Информация об удалении товара из заказа.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class OrdersStatsDetailsDTO 
{
        /**
     * @var OrdersStatsItemStatusType|null
     * @SerializedName("itemStatus")
    * @Accessor(getter="getSerializedItemStatus", setter="setDeserializedItemStatus")
    * @Type("string")
    */
    protected ?OrdersStatsItemStatusType $itemStatus = null;

    /**
     * Количество товара со статусом, указанном в параметре &#x60;itemStatus&#x60;.
     *
     * @var int|null
     * @SerializedName("itemCount")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $itemCount = null;

    /**
     * Дата, когда товар получил статус, указанный в параметре &#x60;itemStatus&#x60;.  Формат даты: &#x60;ГГГГ-ММ-ДД&#x60;.
     *
     * @var \DateTime|null
     * @SerializedName("updateDate")
     * @Type("DateTime<'Y-m-d'>")
    */
    #[Assert\Type("\DateTime")]
    protected ?\DateTime $updateDate = null;

    /**
     * @var OrdersStatsStockType|null
     * @SerializedName("stockType")
    * @Accessor(getter="getSerializedStockType", setter="setDeserializedStockType")
    * @Type("string")
    */
    protected ?OrdersStatsStockType $stockType = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->itemStatus = array_key_exists('itemStatus', $data) ? $data['itemStatus'] : $this->itemStatus;
            $this->itemCount = array_key_exists('itemCount', $data) ? $data['itemCount'] : $this->itemCount;
            $this->updateDate = array_key_exists('updateDate', $data) ? $data['updateDate'] : $this->updateDate;
            $this->stockType = array_key_exists('stockType', $data) ? $data['stockType'] : $this->stockType;
        }
    }

    /**
     * Gets itemStatus.
     *
     * @return OrdersStatsItemStatusType|null
     */
    public function getItemStatus(): ?OrdersStatsItemStatusType
    {
        return $this->itemStatus;
    }

    /**
    * Sets itemStatus.
    *
    * @param OrdersStatsItemStatusType|null $itemStatus
    *
    * @return $this
    */
    public function setItemStatus(?OrdersStatsItemStatusType $itemStatus = null): self
    {
        $this->itemStatus = $itemStatus;

        return $this;
    }

    /**
    * Gets itemStatus for serialization.
    *
    * @return string|null
    */
    public function getSerializedItemStatus(): string|null
    {
        return $this->itemStatus?->value ? (string) $this->itemStatus->value : null;
    }

    /**
    * Sets itemStatus.
    *
    * @param string|OrdersStatsItemStatusType|null $itemStatus
    *
    * @return $this
    */
    public function setDeserializedItemStatus(string|OrdersStatsItemStatusType|null $itemStatus = null): self
    {
        if (is_string($itemStatus)) {
            $itemStatus = OrdersStatsItemStatusType::tryFrom($itemStatus);
        }

        $this->itemStatus = $itemStatus;

        return $this;
    }



    /**
     * Gets itemCount.
     *
     * @return int|null
     */
    public function getItemCount(): ?int
    {
        return $this->itemCount;
    }

    /**
    * Sets itemCount.
    *
    * @param int|null $itemCount  Количество товара со статусом, указанном в параметре `itemStatus`.
    *
    * @return $this
    */
    public function setItemCount(?int $itemCount = null): self
    {
        $this->itemCount = $itemCount;

        return $this;
    }




    /**
     * Gets updateDate.
     *
     * @return \DateTime|null
     */
    public function getUpdateDate(): ?\DateTime
    {
        return $this->updateDate;
    }

    /**
    * Sets updateDate.
    *
    * @param \DateTime|null $updateDate  Дата, когда товар получил статус, указанный в параметре `itemStatus`.  Формат даты: `ГГГГ-ММ-ДД`.
    *
    * @return $this
    */
    public function setUpdateDate(?\DateTime $updateDate = null): self
    {
        $this->updateDate = $updateDate;

        return $this;
    }




    /**
     * Gets stockType.
     *
     * @return OrdersStatsStockType|null
     */
    public function getStockType(): ?OrdersStatsStockType
    {
        return $this->stockType;
    }

    /**
    * Sets stockType.
    *
    * @param OrdersStatsStockType|null $stockType
    *
    * @return $this
    */
    public function setStockType(?OrdersStatsStockType $stockType = null): self
    {
        $this->stockType = $stockType;

        return $this;
    }

    /**
    * Gets stockType for serialization.
    *
    * @return string|null
    */
    public function getSerializedStockType(): string|null
    {
        return $this->stockType?->value ? (string) $this->stockType->value : null;
    }

    /**
    * Sets stockType.
    *
    * @param string|OrdersStatsStockType|null $stockType
    *
    * @return $this
    */
    public function setDeserializedStockType(string|OrdersStatsStockType|null $stockType = null): self
    {
        if (is_string($stockType)) {
            $stockType = OrdersStatsStockType::tryFrom($stockType);
        }

        $this->stockType = $stockType;

        return $this;
    }


}


