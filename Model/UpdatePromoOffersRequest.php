<?php
/**
 * UpdatePromoOffersRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the UpdatePromoOffersRequest model.
 *
 * Добавление товаров в акцию или обновление их параметров.  Чтобы добавить товары в акцию или обновить параметры каких-то товаров, передайте их в параметре &#x60;offers&#x60;.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class UpdatePromoOffersRequest  implements \JsonSerializable
{
        /**
     * Идентификатор акции.
     *
     * @var string
     * @SerializedName("promoId")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    public string $promoId;

    /**
     * Товары, которые необходимо добавить в акцию или цены которых нужно изменить.
     *
     * @var UpdatePromoOfferDTO[]
     * @SerializedName("offers")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\UpdatePromoOfferDTO")
     * })
     * @Type("array<\OpenAPIServer\Model\UpdatePromoOfferDTO>")
     * @Assert\Count(
     *   max = 500
     * )
     * @Assert\Count(
     *   min = 1
     * )
     */
    public array $offers;

    /**
     * Constructor
     *
     * @param string $promoId
     * @param UpdatePromoOfferDTO[] $offers
     */
    public function __construct(string $promoId, array $offers)
    {
        $this->promoId = $promoId;
        $this->offers = $offers;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['promoId'] ?? null, 
            isset($data['offers']) ? array_map(fn($item) => UpdatePromoOfferDTO::fromArray($item), $data['offers']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'promoId' => $this->promoId, 
            'offers' => $this->offers, 
        ];
    }
}


