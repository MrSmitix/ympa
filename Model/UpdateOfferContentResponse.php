<?php
/**
 * UpdateOfferContentResponse
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the UpdateOfferContentResponse model.
 *
 * Описывает проблемы, которые появились при сохранении товара.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class UpdateOfferContentResponse  implements \JsonSerializable
{
        /**
     * @var ApiResponseStatusType|null
     * @SerializedName("status")
        * @Accessor(getter="getSerializedStatus")
        * @Type("string")
     */
    public ?ApiResponseStatusType $status;

    /**
     * Ошибки и предупреждения, которые появились при обработке переданных значений. Каждый элемент списка соответствует одному товару.  Если ошибок и предупреждений нет, поле не передается.
     *
     * @var UpdateOfferContentResultDTO[]|null
     * @SerializedName("results")
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\UpdateOfferContentResultDTO")
     * })
     * @Type("array<\OpenAPIServer\Model\UpdateOfferContentResultDTO>")
     */
    public ?array $results;

    /**
     * Constructor
     *
     * @param ApiResponseStatusType|null $status
     * @param UpdateOfferContentResultDTO[]|null $results
     */
    public function __construct(?ApiResponseStatusType $status, ?array $results)
    {
        $this->status = $status;
        $this->results = $results;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            isset($data['status']) ? ApiResponseStatusType::tryFrom($data['status']) : null, 
            isset($data['results']) ? array_map(fn($item) => UpdateOfferContentResultDTO::fromArray($item), $data['results']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'status' => $this->status, 
            'results' => $this->results, 
        ];
    }
}


