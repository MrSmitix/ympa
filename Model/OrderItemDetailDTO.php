<?php
/**
 * OrderItemDetailDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OrderItemDetailDTO model.
 *
 * Детали по товару в заказе.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class OrderItemDetailDTO 
{
        /**
     * Количество единиц товара.
     *
     * @var int|null
     * @SerializedName("itemCount")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $itemCount = null;

    /**
     * @var OrderItemStatusType|null
     * @SerializedName("itemStatus")
    * @Accessor(getter="getSerializedItemStatus", setter="setDeserializedItemStatus")
    * @Type("string")
    */
    protected ?OrderItemStatusType $itemStatus = null;

    /**
     * Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;.
     *
     * @var string|null
     * @SerializedName("updateDate")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $updateDate = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->itemCount = array_key_exists('itemCount', $data) ? $data['itemCount'] : $this->itemCount;
            $this->itemStatus = array_key_exists('itemStatus', $data) ? $data['itemStatus'] : $this->itemStatus;
            $this->updateDate = array_key_exists('updateDate', $data) ? $data['updateDate'] : $this->updateDate;
        }
    }

    /**
     * Gets itemCount.
     *
     * @return int|null
     */
    public function getItemCount(): ?int
    {
        return $this->itemCount;
    }

    /**
    * Sets itemCount.
    *
    * @param int|null $itemCount  Количество единиц товара.
    *
    * @return $this
    */
    public function setItemCount(?int $itemCount = null): self
    {
        $this->itemCount = $itemCount;

        return $this;
    }




    /**
     * Gets itemStatus.
     *
     * @return OrderItemStatusType|null
     */
    public function getItemStatus(): ?OrderItemStatusType
    {
        return $this->itemStatus;
    }

    /**
    * Sets itemStatus.
    *
    * @param OrderItemStatusType|null $itemStatus
    *
    * @return $this
    */
    public function setItemStatus(?OrderItemStatusType $itemStatus = null): self
    {
        $this->itemStatus = $itemStatus;

        return $this;
    }

    /**
    * Gets itemStatus for serialization.
    *
    * @return string|null
    */
    public function getSerializedItemStatus(): string|null
    {
        return $this->itemStatus?->value ? (string) $this->itemStatus->value : null;
    }

    /**
    * Sets itemStatus.
    *
    * @param string|OrderItemStatusType|null $itemStatus
    *
    * @return $this
    */
    public function setDeserializedItemStatus(string|OrderItemStatusType|null $itemStatus = null): self
    {
        if (is_string($itemStatus)) {
            $itemStatus = OrderItemStatusType::tryFrom($itemStatus);
        }

        $this->itemStatus = $itemStatus;

        return $this;
    }



    /**
     * Gets updateDate.
     *
     * @return string|null
     */
    public function getUpdateDate(): ?string
    {
        return $this->updateDate;
    }

    /**
    * Sets updateDate.
    *
    * @param string|null $updateDate  Формат даты: `ДД-ММ-ГГГГ`.
    *
    * @return $this
    */
    public function setUpdateDate(?string $updateDate = null): self
    {
        $this->updateDate = $updateDate;

        return $this;
    }



}


