<?php
/**
 * CampaignSettingsDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the CampaignSettingsDTO model.
 *
 * Настройки магазина.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class CampaignSettingsDTO  implements \JsonSerializable
{
        /**
     * Идентификатор региона, в котором находится магазин.
     *
     * @var int|null
     * @SerializedName("countryRegion")
     * @Assert\Type("int")
     * @Type("int")
     */
    public ?int $countryRegion;

    /**
     * Наименование магазина на Яндекс Маркете. Если наименование отсутствует, значение параметра выводится — &#x60;null&#x60;.
     *
     * @var string|null
     * @SerializedName("shopName")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $shopName;

    /**
     * Признак размещения магазина на сайтах партнеров Яндекс Дистрибуции. Возможные значения: * &#x60;false&#x60; — магазин не размещен на сайтах партнеров Яндекс Дистрибуции. * &#x60;true&#x60; — магазин размещен на сайтах партнеров Яндекс Дистрибуции.
     *
     * @var bool|null
     * @SerializedName("showInContext")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    public ?bool $showInContext;

    /**
     * Признак показа предложений магазина в рекламном блоке над результатами поиска (cпецразмещение). Возможные значения: * &#x60;false&#x60; — предложения не показываются в блоке cпецразмещения. * &#x60;true&#x60; — предложения показываются в блоке cпецразмещения.
     *
     * @var bool|null
     * @SerializedName("showInPremium")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    public ?bool $showInPremium;

    /**
     * Признак использования внешней интернет-статистики. Возможные значения: * &#x60;false&#x60; — внешняя интернет-статистика не используется. * &#x60;true&#x60; — внешняя интернет-статистика используется.
     *
     * @var bool|null
     * @SerializedName("useOpenStat")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    public ?bool $useOpenStat;

    /**
     * @var CampaignSettingsLocalRegionDTO|null
     * @SerializedName("localRegion")
     * @Assert\Type("\OpenAPIServer\Model\CampaignSettingsLocalRegionDTO")
     * @Type("\OpenAPIServer\Model\CampaignSettingsLocalRegionDTO")
     */
    public ?CampaignSettingsLocalRegionDTO $localRegion;

    /**
     * Constructor
     *
     * @param int|null $countryRegion
     * @param string|null $shopName
     * @param bool|null $showInContext
     * @param bool|null $showInPremium
     * @param bool|null $useOpenStat
     * @param CampaignSettingsLocalRegionDTO|null $localRegion
     */
    public function __construct(?int $countryRegion, ?string $shopName, ?bool $showInContext, ?bool $showInPremium, ?bool $useOpenStat, ?CampaignSettingsLocalRegionDTO $localRegion)
    {
        $this->countryRegion = $countryRegion;
        $this->shopName = $shopName;
        $this->showInContext = $showInContext;
        $this->showInPremium = $showInPremium;
        $this->useOpenStat = $useOpenStat;
        $this->localRegion = $localRegion;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['countryRegion'] ?? null, 
            $data['shopName'] ?? null, 
            $data['showInContext'] ?? null, 
            $data['showInPremium'] ?? null, 
            $data['useOpenStat'] ?? null, 
            isset($data['localRegion']) ? CampaignSettingsLocalRegionDTO::fromArray($data['localRegion']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'countryRegion' => $this->countryRegion, 
            'shopName' => $this->shopName, 
            'showInContext' => $this->showInContext, 
            'showInPremium' => $this->showInPremium, 
            'useOpenStat' => $this->useOpenStat, 
            'localRegion' => $this->localRegion, 
        ];
    }
}


