<?php
/**
 * ParameterValueDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the ParameterValueDTO model.
 *
 * Значение характеристики.  Вы можете указывать несколько значений одной характеристики при условии, что:  * Тип характеристики — &#x60;ENUM&#x60;. * В ответе на запрос [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md) у данной характеристики поле &#x60;multivalue&#x60; имеет значение &#x60;true&#x60;.  Для этого в &#x60;parameterValues&#x60; передавайте каждое значение отдельно — несколько объектов с параметрами &#x60;parameterId&#x60;, &#x60;valueId&#x60; и &#x60;value&#x60;. Параметр &#x60;parameterId&#x60; должен быть одинаковым.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class ParameterValueDTO  implements \JsonSerializable
{
        /**
     * Идентификатор характеристики.
     *
     * @var int
     * @SerializedName("parameterId")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    public int $parameterId;

    /**
     * Идентификатор единицы измерения. Если вы не передали параметр &#x60;unitId&#x60;, используется единица измерения по умолчанию.
     *
     * @var int|null
     * @SerializedName("unitId")
     * @Assert\Type("int")
     * @Type("int")
     */
    public ?int $unitId;

    /**
     * Идентификатор значения.  Обязательно указывайте идентификатор, если передаете значение из перечня допустимых значений, полученного от Маркета.  Только для характеристик типа &#x60;ENUM&#x60;.
     *
     * @var int|null
     * @SerializedName("valueId")
     * @Assert\Type("int")
     * @Type("int")
     */
    public ?int $valueId;

    /**
     * Значение.
     *
     * @var string|null
     * @SerializedName("value")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $value;

    /**
     * Constructor
     *
     * @param int $parameterId
     * @param int|null $unitId
     * @param int|null $valueId
     * @param string|null $value
     */
    public function __construct(int $parameterId, ?int $unitId, ?int $valueId, ?string $value)
    {
        $this->parameterId = $parameterId;
        $this->unitId = $unitId;
        $this->valueId = $valueId;
        $this->value = $value;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['parameterId'] ?? null, 
            $data['unitId'] ?? null, 
            $data['valueId'] ?? null, 
            $data['value'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'parameterId' => $this->parameterId, 
            'unitId' => $this->unitId, 
            'valueId' => $this->valueId, 
            'value' => $this->value, 
        ];
    }
}


