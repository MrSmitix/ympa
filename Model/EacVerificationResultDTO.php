<?php
/**
 * EacVerificationResultDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the EacVerificationResultDTO model.
 *
 * Результат выполнения запроса.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class EacVerificationResultDTO  implements \JsonSerializable
{
        /**
     * @var EacVerificationStatusType|null
     * @SerializedName("verificationResult")
        * @Accessor(getter="getSerializedVerificationResult")
        * @Type("string")
     */
    public ?EacVerificationStatusType $verificationResult;

    /**
     * Количество оставшихся попыток проверки кода.  Возвращается, если магазин отправил некорректный код.  Когда все попытки будут исчерпаны, код обновится.
     *
     * @var int|null
     * @SerializedName("attemptsLeft")
     * @Assert\Type("int")
     * @Type("int")
     */
    public ?int $attemptsLeft;

    /**
     * Constructor
     *
     * @param EacVerificationStatusType|null $verificationResult
     * @param int|null $attemptsLeft
     */
    public function __construct(?EacVerificationStatusType $verificationResult, ?int $attemptsLeft)
    {
        $this->verificationResult = $verificationResult;
        $this->attemptsLeft = $attemptsLeft;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            isset($data['verificationResult']) ? EacVerificationStatusType::tryFrom($data['verificationResult']) : null, 
            $data['attemptsLeft'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'verificationResult' => $this->verificationResult, 
            'attemptsLeft' => $this->attemptsLeft, 
        ];
    }
}


