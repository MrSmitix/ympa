<?php
/**
 * OutletWorkingScheduleDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the OutletWorkingScheduleDTO model.
 *
 * Список режимов работы точки продаж.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class OutletWorkingScheduleDTO  implements \JsonSerializable
{
        /**
     * Признак, работает ли точка продаж в дни государственных праздников.  Возможные значения:  * &#x60;false&#x60; — точка продаж не работает в дни государственных праздников. * &#x60;true&#x60; — точка продаж работает в дни государственных праздников.
     *
     * @var bool|null
     * @SerializedName("workInHoliday")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    public ?bool $workInHoliday;

    /**
     * Список расписаний работы точки продаж.
     *
     * @var OutletWorkingScheduleItemDTO[]
     * @SerializedName("scheduleItems")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\OutletWorkingScheduleItemDTO")
     * })
     * @Type("array<\OpenAPIServer\Model\OutletWorkingScheduleItemDTO>")
     * @Assert\Count(
     *   min = 1
     * )
     */
    public array $scheduleItems;

    /**
     * Constructor
     *
     * @param bool|null $workInHoliday
     * @param OutletWorkingScheduleItemDTO[] $scheduleItems
     */
    public function __construct(?bool $workInHoliday, array $scheduleItems)
    {
        $this->workInHoliday = $workInHoliday;
        $this->scheduleItems = $scheduleItems;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['workInHoliday'] ?? null, 
            isset($data['scheduleItems']) ? array_map(fn($item) => OutletWorkingScheduleItemDTO::fromArray($item), $data['scheduleItems']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'workInHoliday' => $this->workInHoliday, 
            'scheduleItems' => $this->scheduleItems, 
        ];
    }
}


