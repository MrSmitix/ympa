<?php
/**
 * PriceQuarantineVerdictDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the PriceQuarantineVerdictDTO model.
 *
 * Причина попадания товара в карантин.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class PriceQuarantineVerdictDTO  implements \JsonSerializable
{
        /**
     * @var PriceQuarantineVerdictType|null
     * @SerializedName("type")
        * @Accessor(getter="getSerializedType")
        * @Type("string")
     */
    public ?PriceQuarantineVerdictType $type;

    /**
     * Цена, из-за которой товар попал в карантин, и значения для сравнения. Конкретный набор параметров зависит от типа карантина.
     *
     * @var PriceQuarantineVerdictParameterDTO[]
     * @SerializedName("params")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\PriceQuarantineVerdictParameterDTO")
     * })
     * @Type("array<\OpenAPIServer\Model\PriceQuarantineVerdictParameterDTO>")
     */
    public array $params;

    /**
     * Constructor
     *
     * @param PriceQuarantineVerdictType|null $type
     * @param PriceQuarantineVerdictParameterDTO[] $params
     */
    public function __construct(?PriceQuarantineVerdictType $type, array $params)
    {
        $this->type = $type;
        $this->params = $params;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            isset($data['type']) ? PriceQuarantineVerdictType::tryFrom($data['type']) : null, 
            isset($data['params']) ? array_map(fn($item) => PriceQuarantineVerdictParameterDTO::fromArray($item), $data['params']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'type' => $this->type, 
            'params' => $this->params, 
        ];
    }
}


