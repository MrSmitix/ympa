<?php
/**
 * GenerateReportDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the GenerateReportDTO model.
 *
 * Идентификатор, который понадобится для отслеживания статуса генерации и получения готового отчета.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class GenerateReportDTO 
{
        /**
     * Идентификатор, который понадобится для отслеживания статуса генерации и получения готового отчета.
     *
     * @var string|null
     * @SerializedName("reportId")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $reportId = null;

    /**
     * Ожидаемая продолжительность генерации в миллисекундах.
     *
     * @var int|null
     * @SerializedName("estimatedGenerationTime")
     * @Type("int")
    */
    #[Assert\NotNull]
    #[Assert\Type("int")]
    protected ?int $estimatedGenerationTime = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->reportId = array_key_exists('reportId', $data) ? $data['reportId'] : $this->reportId;
            $this->estimatedGenerationTime = array_key_exists('estimatedGenerationTime', $data) ? $data['estimatedGenerationTime'] : $this->estimatedGenerationTime;
        }
    }

    /**
     * Gets reportId.
     *
     * @return string|null
     */
    public function getReportId(): ?string
    {
        return $this->reportId;
    }

    /**
    * Sets reportId.
    *
    * @param string|null $reportId  Идентификатор, который понадобится для отслеживания статуса генерации и получения готового отчета.
    *
    * @return $this
    */
    public function setReportId(?string $reportId): self
    {
        $this->reportId = $reportId;

        return $this;
    }




    /**
     * Gets estimatedGenerationTime.
     *
     * @return int|null
     */
    public function getEstimatedGenerationTime(): ?int
    {
        return $this->estimatedGenerationTime;
    }

    /**
    * Sets estimatedGenerationTime.
    *
    * @param int|null $estimatedGenerationTime  Ожидаемая продолжительность генерации в миллисекундах.
    *
    * @return $this
    */
    public function setEstimatedGenerationTime(?int $estimatedGenerationTime): self
    {
        $this->estimatedGenerationTime = $estimatedGenerationTime;

        return $this;
    }



}


