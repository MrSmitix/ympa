<?php
/**
 * OfferRecommendationDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OfferRecommendationDTO model.
 *
 * Информация о состоянии цен и рекомендации.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class OfferRecommendationDTO 
{
        /**
     * @var OfferForRecommendationDTO|null
     * @SerializedName("offer")
     * @Type("OpenAPI\Server\Model\OfferForRecommendationDTO")
    */
    #[Assert\Type("OpenAPI\Server\Model\OfferForRecommendationDTO")]
    protected ?OfferForRecommendationDTO $offer = null;

    /**
     * @var OfferRecommendationInfoDTO|null
     * @SerializedName("recommendation")
     * @Type("OpenAPI\Server\Model\OfferRecommendationInfoDTO")
    */
    #[Assert\Type("OpenAPI\Server\Model\OfferRecommendationInfoDTO")]
    protected ?OfferRecommendationInfoDTO $recommendation = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->offer = array_key_exists('offer', $data) ? $data['offer'] : $this->offer;
            $this->recommendation = array_key_exists('recommendation', $data) ? $data['recommendation'] : $this->recommendation;
        }
    }

    /**
     * Gets offer.
     *
     * @return OfferForRecommendationDTO|null
     */
    public function getOffer(): ?OfferForRecommendationDTO
    {
        return $this->offer;
    }

    /**
    * Sets offer.
    *
    * @param OfferForRecommendationDTO|null $offer
    *
    * @return $this
    */
    public function setOffer(?OfferForRecommendationDTO $offer = null): self
    {
        $this->offer = $offer;

        return $this;
    }




    /**
     * Gets recommendation.
     *
     * @return OfferRecommendationInfoDTO|null
     */
    public function getRecommendation(): ?OfferRecommendationInfoDTO
    {
        return $this->recommendation;
    }

    /**
    * Sets recommendation.
    *
    * @param OfferRecommendationInfoDTO|null $recommendation
    *
    * @return $this
    */
    public function setRecommendation(?OfferRecommendationInfoDTO $recommendation = null): self
    {
        $this->recommendation = $recommendation;

        return $this;
    }



}


