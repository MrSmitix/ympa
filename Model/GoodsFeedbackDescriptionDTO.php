<?php
/**
 * GoodsFeedbackDescriptionDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the GoodsFeedbackDescriptionDTO model.
 *
 * Текстовая часть отзыва.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class GoodsFeedbackDescriptionDTO  implements \JsonSerializable
{
        /**
     * Описание плюсов товара в отзыве.
     *
     * @var string|null
     * @SerializedName("advantages")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $advantages;

    /**
     * Описание минусов товара в отзыве.
     *
     * @var string|null
     * @SerializedName("disadvantages")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $disadvantages;

    /**
     * Комментарий в отзыве.
     *
     * @var string|null
     * @SerializedName("comment")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $comment;

    /**
     * Constructor
     *
     * @param string|null $advantages
     * @param string|null $disadvantages
     * @param string|null $comment
     */
    public function __construct(?string $advantages, ?string $disadvantages, ?string $comment)
    {
        $this->advantages = $advantages;
        $this->disadvantages = $disadvantages;
        $this->comment = $comment;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['advantages'] ?? null, 
            $data['disadvantages'] ?? null, 
            $data['comment'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'advantages' => $this->advantages, 
            'disadvantages' => $this->disadvantages, 
            'comment' => $this->comment, 
        ];
    }
}


