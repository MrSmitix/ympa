<?php
/**
 * GenerateMassOrderLabelsRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the GenerateMassOrderLabelsRequest model.
 *
 * Данные, необходимые для генерации файла.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class GenerateMassOrderLabelsRequest 
{
        /**
     * Идентификатор кабинета.
     *
     * @var int|null
     * @SerializedName("businessId")
     * @Type("int")
    */
    #[Assert\NotNull]
    #[Assert\Type("int")]
    protected ?int $businessId = null;

    /**
     * Список идентификаторов заказов.
     *
     * @var int[]|null
     * @SerializedName("orderIds")
     * @Type("array<int>")
    */
    #[Assert\NotNull]
    #[Assert\All([
        new Assert\Type("int"),
    ])]
    #[Assert\Count(max: 1000)]
    #[Assert\Count(min: 1)]
    protected ?array $orderIds = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->businessId = array_key_exists('businessId', $data) ? $data['businessId'] : $this->businessId;
            $this->orderIds = array_key_exists('orderIds', $data) ? $data['orderIds'] : $this->orderIds;
        }
    }

    /**
     * Gets businessId.
     *
     * @return int|null
     */
    public function getBusinessId(): ?int
    {
        return $this->businessId;
    }

    /**
    * Sets businessId.
    *
    * @param int|null $businessId  Идентификатор кабинета.
    *
    * @return $this
    */
    public function setBusinessId(?int $businessId): self
    {
        $this->businessId = $businessId;

        return $this;
    }




    /**
     * Gets orderIds.
     *
     * @return int[]|null
     */
    public function getOrderIds(): ?array
    {
        return $this->orderIds;
    }

    /**
    * Sets orderIds.
    *
    * @param int[]|null $orderIds  Список идентификаторов заказов.
    *
    * @return $this
    */
    public function setOrderIds(?array $orderIds): self
    {
        $this->orderIds = $orderIds;

        return $this;
    }



}


