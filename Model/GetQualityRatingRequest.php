<?php
/**
 * GetQualityRatingRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the GetQualityRatingRequest model.
 *
 * Запрос информации по индексу качества.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class GetQualityRatingRequest  implements \JsonSerializable
{
        /**
     * Начало периода.  Формат даты: &#x60;ГГГГ‑ММ‑ДД&#x60;.  Не может быть раньше 30 дней от текущей даты.
     *
     * @var \DateTime|null
     * @SerializedName("dateFrom")
     * @Assert\Type("\Date")
     * @Type("DateTime<'Y-m-d'>")
     */
    public ?\DateTime $dateFrom;

    /**
     * Конец периода.  Формат даты: &#x60;ГГГГ‑ММ‑ДД&#x60;.  Не может быть позже текущей даты.
     *
     * @var \DateTime|null
     * @SerializedName("dateTo")
     * @Assert\Type("\Date")
     * @Type("DateTime<'Y-m-d'>")
     */
    public ?\DateTime $dateTo;

    /**
     * Список идентификаторов магазинов.
     *
     * @var int[]
     * @SerializedName("campaignIds")
     * @Assert\NotNull()
     * @Assert\All({
     *   @Assert\Type("int")
     * })
     * @Type("array<int>")
     * @Assert\Count(
     *   max = 50
     * )
     * @Assert\Count(
     *   min = 1
     * )
     */
    public array $campaignIds;

    /**
     * Constructor
     *
     * @param \DateTime|null $dateFrom
     * @param \DateTime|null $dateTo
     * @param int[] $campaignIds
     */
    public function __construct(?\DateTime $dateFrom, ?\DateTime $dateTo, array $campaignIds)
    {
        $this->dateFrom = $dateFrom;
        $this->dateTo = $dateTo;
        $this->campaignIds = $campaignIds;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['dateFrom'] ?? null, 
            $data['dateTo'] ?? null, 
            $data['campaignIds'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'dateFrom' => $this->dateFrom, 
            'dateTo' => $this->dateTo, 
            'campaignIds' => $this->campaignIds, 
        ];
    }
}


