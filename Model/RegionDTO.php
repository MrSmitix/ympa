<?php
/**
 * RegionDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the RegionDTO model.
 *
 * Регион доставки.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class RegionDTO  implements \JsonSerializable
{
        /**
     * Идентификатор региона.
     *
     * @var int|null
     * @SerializedName("id")
     * @Assert\Type("int")
     * @Type("int")
     */
    public ?int $id;

    /**
     * Название региона.
     *
     * @var string
     * @SerializedName("name")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    public string $name;

    /**
     * @var RegionType
     * @SerializedName("type")
     * @Assert\NotNull()
     * @Assert\Valid()
        * @Accessor(getter="getSerializedType")
        * @Type("string")
     */
    public RegionType $type;

    /**
     * @var RegionDTO|null
     * @SerializedName("parent")
     * @Assert\Type("\OpenAPIServer\Model\RegionDTO")
     * @Type("\OpenAPIServer\Model\RegionDTO")
     */
    public ?RegionDTO $parent;

    /**
     * Дочерние регионы.
     *
     * @var RegionDTO[]|null
     * @SerializedName("children")
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\RegionDTO")
     * })
     * @Type("array<\OpenAPIServer\Model\RegionDTO>")
     */
    public ?array $children;

    /**
     * Constructor
     *
     * @param int|null $id
     * @param string $name
     * @param RegionType $type
     * @param RegionDTO|null $parent
     * @param RegionDTO[]|null $children
     */
    public function __construct(?int $id, string $name, RegionType $type, ?RegionDTO $parent, ?array $children)
    {
        $this->id = $id;
        $this->name = $name;
        $this->type = $type;
        $this->parent = $parent;
        $this->children = $children;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['id'] ?? null, 
            $data['name'] ?? null, 
            isset($data['type']) ? RegionType::tryFrom($data['type']) : null, 
            isset($data['parent']) ? RegionDTO::fromArray($data['parent']) : null, 
            isset($data['children']) ? array_map(fn($item) => RegionDTO::fromArray($item), $data['children']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'id' => $this->id, 
            'name' => $this->name, 
            'type' => $this->type, 
            'parent' => $this->parent, 
            'children' => $this->children, 
        ];
    }
}


