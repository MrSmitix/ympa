<?php
/**
 * BriefOrderItemInstanceDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the BriefOrderItemInstanceDTO model.
 *
 * Идентификатор единицы товара.  Заполните только одно поле в зависимости от того, в какой системе маркирован товар.  Подробно о работе с маркируемыми товарами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/cz.html).
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class BriefOrderItemInstanceDTO  implements \JsonSerializable
{
        /**
     * Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).  {% note warning %}  Не экранируйте косую черту в коде символа-разделителя &#x60;\\u001d&#x60;!  ✅ &#x60;01030410947874432155Qbag!\\u001d93Zjqw&#x60;  ❌ &#x60;01030410947874432155Qbag!\\\\u001d93Zjqw&#x60;  Косые черты и кавычки в других местах экранируйте по правилам JSON: &#x60;\\\\&#x60; и &#x60;\\\&quot;&#x60;  {% endnote %}
     *
     * @var string|null
     * @SerializedName("cis")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $cis;

    /**
     * Уникальный идентификационный номер ювелирного изделия.  Представляет собой число из 16 цифр.
     *
     * @var string|null
     * @SerializedName("uin")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $uin;

    /**
     * Регистрационный номер партии товара.  Представляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации.
     *
     * @var string|null
     * @SerializedName("rnpt")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $rnpt;

    /**
     * Грузовая таможенная декларация.  Представляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации.
     *
     * @var string|null
     * @SerializedName("gtd")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $gtd;

    /**
     * Constructor
     *
     * @param string|null $cis
     * @param string|null $uin
     * @param string|null $rnpt
     * @param string|null $gtd
     */
    public function __construct(?string $cis, ?string $uin, ?string $rnpt, ?string $gtd)
    {
        $this->cis = $cis;
        $this->uin = $uin;
        $this->rnpt = $rnpt;
        $this->gtd = $gtd;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['cis'] ?? null, 
            $data['uin'] ?? null, 
            $data['rnpt'] ?? null, 
            $data['gtd'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'cis' => $this->cis, 
            'uin' => $this->uin, 
            'rnpt' => $this->rnpt, 
            'gtd' => $this->gtd, 
        ];
    }
}


