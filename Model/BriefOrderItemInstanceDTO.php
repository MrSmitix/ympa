<?php
/**
 * BriefOrderItemInstanceDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the BriefOrderItemInstanceDTO model.
 *
 * Идентификатор единицы товара.  Заполните только одно поле в зависимости от того, в какой системе маркирован товар.  Подробно о работе с маркируемыми товарами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/cz.html).
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class BriefOrderItemInstanceDTO 
{
        /**
     * Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).  {% note warning %}  Не экранируйте косую черту в коде символа-разделителя &#x60;\\u001d&#x60;!  ✅ &#x60;01030410947874432155Qbag!\\u001d93Zjqw&#x60;  ❌ &#x60;01030410947874432155Qbag!\\\\u001d93Zjqw&#x60;  Косые черты и кавычки в других местах экранируйте по правилам JSON: &#x60;\\\\&#x60; и &#x60;\\\&quot;&#x60;  {% endnote %}
     *
     * @var string|null
     * @SerializedName("cis")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $cis = null;

    /**
     * Уникальный идентификационный номер ювелирного изделия.  Представляет собой число из 16 цифр.
     *
     * @var string|null
     * @SerializedName("uin")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $uin = null;

    /**
     * Регистрационный номер партии товара.  Представляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации.
     *
     * @var string|null
     * @SerializedName("rnpt")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $rnpt = null;

    /**
     * Грузовая таможенная декларация.  Представляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации.
     *
     * @var string|null
     * @SerializedName("gtd")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $gtd = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->cis = array_key_exists('cis', $data) ? $data['cis'] : $this->cis;
            $this->uin = array_key_exists('uin', $data) ? $data['uin'] : $this->uin;
            $this->rnpt = array_key_exists('rnpt', $data) ? $data['rnpt'] : $this->rnpt;
            $this->gtd = array_key_exists('gtd', $data) ? $data['gtd'] : $this->gtd;
        }
    }

    /**
     * Gets cis.
     *
     * @return string|null
     */
    public function getCis(): ?string
    {
        return $this->cis;
    }

    /**
    * Sets cis.
    *
    * @param string|null $cis  Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).  {% note warning %}  Не экранируйте косую черту в коде символа-разделителя `\\u001d`!  ✅ `01030410947874432155Qbag!\\u001d93Zjqw`  ❌ `01030410947874432155Qbag!\\\\u001d93Zjqw`  Косые черты и кавычки в других местах экранируйте по правилам JSON: `\\\\` и `\\\"`  {% endnote %}
    *
    * @return $this
    */
    public function setCis(?string $cis = null): self
    {
        $this->cis = $cis;

        return $this;
    }




    /**
     * Gets uin.
     *
     * @return string|null
     */
    public function getUin(): ?string
    {
        return $this->uin;
    }

    /**
    * Sets uin.
    *
    * @param string|null $uin  Уникальный идентификационный номер ювелирного изделия.  Представляет собой число из 16 цифр.
    *
    * @return $this
    */
    public function setUin(?string $uin = null): self
    {
        $this->uin = $uin;

        return $this;
    }




    /**
     * Gets rnpt.
     *
     * @return string|null
     */
    public function getRnpt(): ?string
    {
        return $this->rnpt;
    }

    /**
    * Sets rnpt.
    *
    * @param string|null $rnpt  Регистрационный номер партии товара.  Представляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации.
    *
    * @return $this
    */
    public function setRnpt(?string $rnpt = null): self
    {
        $this->rnpt = $rnpt;

        return $this;
    }




    /**
     * Gets gtd.
     *
     * @return string|null
     */
    public function getGtd(): ?string
    {
        return $this->gtd;
    }

    /**
    * Sets gtd.
    *
    * @param string|null $gtd  Грузовая таможенная декларация.  Представляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации.
    *
    * @return $this
    */
    public function setGtd(?string $gtd = null): self
    {
        $this->gtd = $gtd;

        return $this;
    }



}


