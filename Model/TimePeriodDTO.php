<?php
/**
 * TimePeriodDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the TimePeriodDTO model.
 *
 * Временной отрезок с комментарием. Требования к содержанию комментария зависят от контекста использования параметра и указаны в описании поля, которое его содержит.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class TimePeriodDTO 
{
        /**
     * Продолжительность в указанных единицах.
     *
     * @var int|null
     * @SerializedName("timePeriod")
     * @Type("int")
    */
    #[Assert\NotNull]
    #[Assert\Type("int")]
    protected ?int $timePeriod = null;

    /**
     * @var TimeUnitType|null
     * @SerializedName("timeUnit")
    * @Accessor(getter="getSerializedTimeUnit", setter="setDeserializedTimeUnit")
    * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    protected ?TimeUnitType $timeUnit = null;

    /**
     * Комментарий.
     *
     * @var string|null
     * @SerializedName("comment")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $comment = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->timePeriod = array_key_exists('timePeriod', $data) ? $data['timePeriod'] : $this->timePeriod;
            $this->timeUnit = array_key_exists('timeUnit', $data) ? $data['timeUnit'] : $this->timeUnit;
            $this->comment = array_key_exists('comment', $data) ? $data['comment'] : $this->comment;
        }
    }

    /**
     * Gets timePeriod.
     *
     * @return int|null
     */
    public function getTimePeriod(): ?int
    {
        return $this->timePeriod;
    }

    /**
    * Sets timePeriod.
    *
    * @param int|null $timePeriod  Продолжительность в указанных единицах.
    *
    * @return $this
    */
    public function setTimePeriod(?int $timePeriod): self
    {
        $this->timePeriod = $timePeriod;

        return $this;
    }




    /**
     * Gets timeUnit.
     *
     * @return TimeUnitType|null
     */
    public function getTimeUnit(): ?TimeUnitType
    {
        return $this->timeUnit;
    }

    /**
    * Sets timeUnit.
    *
    * @param TimeUnitType|null $timeUnit
    *
    * @return $this
    */
    public function setTimeUnit(?TimeUnitType $timeUnit): self
    {
        $this->timeUnit = $timeUnit;

        return $this;
    }

    /**
    * Gets timeUnit for serialization.
    *
    * @return string|null
    */
    public function getSerializedTimeUnit(): string|null
    {
        return $this->timeUnit?->value ? (string) $this->timeUnit->value : null;
    }

    /**
    * Sets timeUnit.
    *
    * @param string|TimeUnitType|null $timeUnit
    *
    * @return $this
    */
    public function setDeserializedTimeUnit(string|TimeUnitType|null $timeUnit): self
    {
        if (is_string($timeUnit)) {
            $timeUnit = TimeUnitType::tryFrom($timeUnit);
        }

        $this->timeUnit = $timeUnit;

        return $this;
    }



    /**
     * Gets comment.
     *
     * @return string|null
     */
    public function getComment(): ?string
    {
        return $this->comment;
    }

    /**
    * Sets comment.
    *
    * @param string|null $comment  Комментарий.
    *
    * @return $this
    */
    public function setComment(?string $comment = null): self
    {
        $this->comment = $comment;

        return $this;
    }



}


