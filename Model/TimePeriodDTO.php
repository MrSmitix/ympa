<?php
/**
 * TimePeriodDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the TimePeriodDTO model.
 *
 * Временной отрезок с комментарием. Требования к содержанию комментария зависят от контекста использования параметра и указаны в описании поля, которое его содержит.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class TimePeriodDTO  implements \JsonSerializable
{
        /**
     * Продолжительность в указанных единицах.
     *
     * @var int
     * @SerializedName("timePeriod")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    public int $timePeriod;

    /**
     * @var TimeUnitType
     * @SerializedName("timeUnit")
     * @Assert\NotNull()
     * @Assert\Valid()
        * @Accessor(getter="getSerializedTimeUnit")
        * @Type("string")
     */
    public TimeUnitType $timeUnit;

    /**
     * Комментарий.
     *
     * @var string|null
     * @SerializedName("comment")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $comment;

    /**
     * Constructor
     *
     * @param int $timePeriod
     * @param TimeUnitType $timeUnit
     * @param string|null $comment
     */
    public function __construct(int $timePeriod, TimeUnitType $timeUnit, ?string $comment)
    {
        $this->timePeriod = $timePeriod;
        $this->timeUnit = $timeUnit;
        $this->comment = $comment;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['timePeriod'] ?? null, 
            isset($data['timeUnit']) ? TimeUnitType::tryFrom($data['timeUnit']) : null, 
            $data['comment'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'timePeriod' => $this->timePeriod, 
            'timeUnit' => $this->timeUnit, 
            'comment' => $this->comment, 
        ];
    }
}


