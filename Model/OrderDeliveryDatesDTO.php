<?php
/**
 * OrderDeliveryDatesDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OrderDeliveryDatesDTO model.
 *
 * Диапазон дат доставки.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class OrderDeliveryDatesDTO 
{
        /**
     * Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;.
     *
     * @var string|null
     * @SerializedName("fromDate")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $fromDate = null;

    /**
     * Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;.
     *
     * @var string|null
     * @SerializedName("toDate")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $toDate = null;

    /**
     * Начало интервала времени доставки.  Передается только совместно с параметром &#x60;type&#x3D;DELIVERY&#x60;.  Формат времени: 24-часовой, &#x60;ЧЧ:ММ&#x60;. В качестве минут всегда должно быть указано &#x60;00&#x60; (исключение — &#x60;23:59&#x60;).  Минимальное значение: &#x60;00:00&#x60;.
     *
     * @var string|null
     * @SerializedName("fromTime")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $fromTime = null;

    /**
     * Конец интервала времени доставки.  Передается только совместно с параметром &#x60;type&#x3D;DELIVERY&#x60;.  Формат времени: 24-часовой, &#x60;ЧЧ:ММ&#x60;. В качестве минут всегда должно быть указано &#x60;00&#x60; (исключение — &#x60;23:59&#x60;).  Максимальное значение: &#x60;23:59&#x60;.
     *
     * @var string|null
     * @SerializedName("toTime")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $toTime = null;

    /**
     * Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;.
     *
     * @var string|null
     * @SerializedName("realDeliveryDate")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $realDeliveryDate = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->fromDate = array_key_exists('fromDate', $data) ? $data['fromDate'] : $this->fromDate;
            $this->toDate = array_key_exists('toDate', $data) ? $data['toDate'] : $this->toDate;
            $this->fromTime = array_key_exists('fromTime', $data) ? $data['fromTime'] : $this->fromTime;
            $this->toTime = array_key_exists('toTime', $data) ? $data['toTime'] : $this->toTime;
            $this->realDeliveryDate = array_key_exists('realDeliveryDate', $data) ? $data['realDeliveryDate'] : $this->realDeliveryDate;
        }
    }

    /**
     * Gets fromDate.
     *
     * @return string|null
     */
    public function getFromDate(): ?string
    {
        return $this->fromDate;
    }

    /**
    * Sets fromDate.
    *
    * @param string|null $fromDate  Формат даты: `ДД-ММ-ГГГГ`.
    *
    * @return $this
    */
    public function setFromDate(?string $fromDate = null): self
    {
        $this->fromDate = $fromDate;

        return $this;
    }




    /**
     * Gets toDate.
     *
     * @return string|null
     */
    public function getToDate(): ?string
    {
        return $this->toDate;
    }

    /**
    * Sets toDate.
    *
    * @param string|null $toDate  Формат даты: `ДД-ММ-ГГГГ`.
    *
    * @return $this
    */
    public function setToDate(?string $toDate = null): self
    {
        $this->toDate = $toDate;

        return $this;
    }




    /**
     * Gets fromTime.
     *
     * @return string|null
     */
    public function getFromTime(): ?string
    {
        return $this->fromTime;
    }

    /**
    * Sets fromTime.
    *
    * @param string|null $fromTime  Начало интервала времени доставки.  Передается только совместно с параметром `type=DELIVERY`.  Формат времени: 24-часовой, `ЧЧ:ММ`. В качестве минут всегда должно быть указано `00` (исключение — `23:59`).  Минимальное значение: `00:00`.
    *
    * @return $this
    */
    public function setFromTime(?string $fromTime = null): self
    {
        $this->fromTime = $fromTime;

        return $this;
    }




    /**
     * Gets toTime.
     *
     * @return string|null
     */
    public function getToTime(): ?string
    {
        return $this->toTime;
    }

    /**
    * Sets toTime.
    *
    * @param string|null $toTime  Конец интервала времени доставки.  Передается только совместно с параметром `type=DELIVERY`.  Формат времени: 24-часовой, `ЧЧ:ММ`. В качестве минут всегда должно быть указано `00` (исключение — `23:59`).  Максимальное значение: `23:59`.
    *
    * @return $this
    */
    public function setToTime(?string $toTime = null): self
    {
        $this->toTime = $toTime;

        return $this;
    }




    /**
     * Gets realDeliveryDate.
     *
     * @return string|null
     */
    public function getRealDeliveryDate(): ?string
    {
        return $this->realDeliveryDate;
    }

    /**
    * Sets realDeliveryDate.
    *
    * @param string|null $realDeliveryDate  Формат даты: `ДД-ММ-ГГГГ`.
    *
    * @return $this
    */
    public function setRealDeliveryDate(?string $realDeliveryDate = null): self
    {
        $this->realDeliveryDate = $realDeliveryDate;

        return $this;
    }



}


