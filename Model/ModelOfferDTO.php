<?php
/**
 * ModelOfferDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ModelOfferDTO model.
 *
 * Информация о предложении.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class ModelOfferDTO 
{
        /**
     * Скидка на предложение в процентах.
     *
     * @var int|null
     * @SerializedName("discount")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $discount = null;

    /**
     * Наименование предложения.
     *
     * @var string|null
     * @SerializedName("name")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $name = null;

    /**
     * Позиция предложения в выдаче Маркета на карточке модели.
     *
     * @var int|null
     * @SerializedName("pos")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $pos = null;

    /**
     * Цена предложения без скидки магазина.
     *
     * @var float|null
     * @SerializedName("preDiscountPrice")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $preDiscountPrice = null;

    /**
     * Цена предложения без скидки, которую получает покупатель при оплате через Yandex Pay.
     *
     * @var float|null
     * @SerializedName("price")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $price = null;

    /**
     * Идентификатор региона предложения (регион, откуда доставляется товар).  Сначала показываются предложения, доставляемые из региона, указанного в запросе в параметре &#x60;regionId&#x60;. Предложения, доставляемые из других регионов, показываются после них.
     *
     * @var int|null
     * @SerializedName("regionId")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $regionId = null;

    /**
     * Стоимость доставки товара в регион:  * &#x60;0&#x60; — доставка осуществляется бесплатно. * &#x60;-1&#x60; — магазин не осуществляет доставку этого товара (самовывоз).  Если стоимость доставки неизвестна, параметр не выводится.
     *
     * @var float|null
     * @SerializedName("shippingCost")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $shippingCost = null;

    /**
     * Название магазина (в том виде, в котором отображается на Маркете).
     *
     * @var string|null
     * @SerializedName("shopName")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $shopName = null;

    /**
     * Рейтинг магазина.  Возможные значения: * &#x60;-1&#x60; — у магазинов, недавно появившихся на Маркете, рейтинг появляется не сразу. До момента появления рейтинга для таких магазинов возвращается значение &#x60;-1&#x60;. * &#x60;1&#x60;. * &#x60;2&#x60;. * &#x60;3&#x60;. * &#x60;4&#x60;. * &#x60;5&#x60;.
     *
     * @var int|null
     * @SerializedName("shopRating")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $shopRating = null;

    /**
     * {% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %}
     *
     * @var int|null
     * @SerializedName("inStock")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $inStock = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->discount = array_key_exists('discount', $data) ? $data['discount'] : $this->discount;
            $this->name = array_key_exists('name', $data) ? $data['name'] : $this->name;
            $this->pos = array_key_exists('pos', $data) ? $data['pos'] : $this->pos;
            $this->preDiscountPrice = array_key_exists('preDiscountPrice', $data) ? $data['preDiscountPrice'] : $this->preDiscountPrice;
            $this->price = array_key_exists('price', $data) ? $data['price'] : $this->price;
            $this->regionId = array_key_exists('regionId', $data) ? $data['regionId'] : $this->regionId;
            $this->shippingCost = array_key_exists('shippingCost', $data) ? $data['shippingCost'] : $this->shippingCost;
            $this->shopName = array_key_exists('shopName', $data) ? $data['shopName'] : $this->shopName;
            $this->shopRating = array_key_exists('shopRating', $data) ? $data['shopRating'] : $this->shopRating;
            $this->inStock = array_key_exists('inStock', $data) ? $data['inStock'] : $this->inStock;
        }
    }

    /**
     * Gets discount.
     *
     * @return int|null
     */
    public function getDiscount(): ?int
    {
        return $this->discount;
    }

    /**
    * Sets discount.
    *
    * @param int|null $discount  Скидка на предложение в процентах.
    *
    * @return $this
    */
    public function setDiscount(?int $discount = null): self
    {
        $this->discount = $discount;

        return $this;
    }




    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
    * Sets name.
    *
    * @param string|null $name  Наименование предложения.
    *
    * @return $this
    */
    public function setName(?string $name = null): self
    {
        $this->name = $name;

        return $this;
    }




    /**
     * Gets pos.
     *
     * @return int|null
     */
    public function getPos(): ?int
    {
        return $this->pos;
    }

    /**
    * Sets pos.
    *
    * @param int|null $pos  Позиция предложения в выдаче Маркета на карточке модели.
    *
    * @return $this
    */
    public function setPos(?int $pos = null): self
    {
        $this->pos = $pos;

        return $this;
    }




    /**
     * Gets preDiscountPrice.
     *
     * @return float|null
     */
    public function getPreDiscountPrice(): ?float
    {
        return $this->preDiscountPrice;
    }

    /**
    * Sets preDiscountPrice.
    *
    * @param float|null $preDiscountPrice  Цена предложения без скидки магазина.
    *
    * @return $this
    */
    public function setPreDiscountPrice(?float $preDiscountPrice = null): self
    {
        $this->preDiscountPrice = $preDiscountPrice;

        return $this;
    }




    /**
     * Gets price.
     *
     * @return float|null
     */
    public function getPrice(): ?float
    {
        return $this->price;
    }

    /**
    * Sets price.
    *
    * @param float|null $price  Цена предложения без скидки, которую получает покупатель при оплате через Yandex Pay.
    *
    * @return $this
    */
    public function setPrice(?float $price = null): self
    {
        $this->price = $price;

        return $this;
    }




    /**
     * Gets regionId.
     *
     * @return int|null
     */
    public function getRegionId(): ?int
    {
        return $this->regionId;
    }

    /**
    * Sets regionId.
    *
    * @param int|null $regionId  Идентификатор региона предложения (регион, откуда доставляется товар).  Сначала показываются предложения, доставляемые из региона, указанного в запросе в параметре `regionId`. Предложения, доставляемые из других регионов, показываются после них.
    *
    * @return $this
    */
    public function setRegionId(?int $regionId = null): self
    {
        $this->regionId = $regionId;

        return $this;
    }




    /**
     * Gets shippingCost.
     *
     * @return float|null
     */
    public function getShippingCost(): ?float
    {
        return $this->shippingCost;
    }

    /**
    * Sets shippingCost.
    *
    * @param float|null $shippingCost  Стоимость доставки товара в регион:  * `0` — доставка осуществляется бесплатно. * `-1` — магазин не осуществляет доставку этого товара (самовывоз).  Если стоимость доставки неизвестна, параметр не выводится.
    *
    * @return $this
    */
    public function setShippingCost(?float $shippingCost = null): self
    {
        $this->shippingCost = $shippingCost;

        return $this;
    }




    /**
     * Gets shopName.
     *
     * @return string|null
     */
    public function getShopName(): ?string
    {
        return $this->shopName;
    }

    /**
    * Sets shopName.
    *
    * @param string|null $shopName  Название магазина (в том виде, в котором отображается на Маркете).
    *
    * @return $this
    */
    public function setShopName(?string $shopName = null): self
    {
        $this->shopName = $shopName;

        return $this;
    }




    /**
     * Gets shopRating.
     *
     * @return int|null
     */
    public function getShopRating(): ?int
    {
        return $this->shopRating;
    }

    /**
    * Sets shopRating.
    *
    * @param int|null $shopRating  Рейтинг магазина.  Возможные значения: * `-1` — у магазинов, недавно появившихся на Маркете, рейтинг появляется не сразу. До момента появления рейтинга для таких магазинов возвращается значение `-1`. * `1`. * `2`. * `3`. * `4`. * `5`.
    *
    * @return $this
    */
    public function setShopRating(?int $shopRating = null): self
    {
        $this->shopRating = $shopRating;

        return $this;
    }




    /**
     * Gets inStock.
     *
     * @return int|null
     */
    public function getInStock(): ?int
    {
        return $this->inStock;
    }

    /**
    * Sets inStock.
    *
    * @param int|null $inStock  {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}
    *
    * @return $this
    */
    public function setInStock(?int $inStock = null): self
    {
        $this->inStock = $inStock;

        return $this;
    }



}


