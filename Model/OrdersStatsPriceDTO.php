<?php
/**
 * OrdersStatsPriceDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OrdersStatsPriceDTO model.
 *
 * Цена или скидки на товар.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class OrdersStatsPriceDTO 
{
        /**
     * @var OrdersStatsPriceType|null
     * @SerializedName("type")
    * @Accessor(getter="getSerializedType", setter="setDeserializedType")
    * @Type("string")
    */
    protected ?OrdersStatsPriceType $type = null;

    /**
     * Цена или скидка на единицу товара в заказе. Указана в рублях. Точность — два знака после запятой.
     *
     * @var float|null
     * @SerializedName("costPerItem")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $costPerItem = null;

    /**
     * Суммарная цена или скидка на все единицы товара в заказе. Указана в рублях. Точность — два знака после запятой.
     *
     * @var float|null
     * @SerializedName("total")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $total = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->type = array_key_exists('type', $data) ? $data['type'] : $this->type;
            $this->costPerItem = array_key_exists('costPerItem', $data) ? $data['costPerItem'] : $this->costPerItem;
            $this->total = array_key_exists('total', $data) ? $data['total'] : $this->total;
        }
    }

    /**
     * Gets type.
     *
     * @return OrdersStatsPriceType|null
     */
    public function getType(): ?OrdersStatsPriceType
    {
        return $this->type;
    }

    /**
    * Sets type.
    *
    * @param OrdersStatsPriceType|null $type
    *
    * @return $this
    */
    public function setType(?OrdersStatsPriceType $type = null): self
    {
        $this->type = $type;

        return $this;
    }

    /**
    * Gets type for serialization.
    *
    * @return string|null
    */
    public function getSerializedType(): string|null
    {
        return $this->type?->value ? (string) $this->type->value : null;
    }

    /**
    * Sets type.
    *
    * @param string|OrdersStatsPriceType|null $type
    *
    * @return $this
    */
    public function setDeserializedType(string|OrdersStatsPriceType|null $type = null): self
    {
        if (is_string($type)) {
            $type = OrdersStatsPriceType::tryFrom($type);
        }

        $this->type = $type;

        return $this;
    }



    /**
     * Gets costPerItem.
     *
     * @return float|null
     */
    public function getCostPerItem(): ?float
    {
        return $this->costPerItem;
    }

    /**
    * Sets costPerItem.
    *
    * @param float|null $costPerItem  Цена или скидка на единицу товара в заказе. Указана в рублях. Точность — два знака после запятой.
    *
    * @return $this
    */
    public function setCostPerItem(?float $costPerItem = null): self
    {
        $this->costPerItem = $costPerItem;

        return $this;
    }




    /**
     * Gets total.
     *
     * @return float|null
     */
    public function getTotal(): ?float
    {
        return $this->total;
    }

    /**
    * Sets total.
    *
    * @param float|null $total  Суммарная цена или скидка на все единицы товара в заказе. Указана в рублях. Точность — два знака после запятой.
    *
    * @return $this
    */
    public function setTotal(?float $total = null): self
    {
        $this->total = $total;

        return $this;
    }



}


