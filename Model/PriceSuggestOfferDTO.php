<?php
/**
 * PriceSuggestOfferDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the PriceSuggestOfferDTO model.
 *
 * Товар с ценами для продвижения.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class PriceSuggestOfferDTO 
{
        /**
     * SKU на Маркете.
     *
     * @var int|null
     * @SerializedName("marketSku")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $marketSku = null;

    /**
     * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
     *
     * @var string|null
     * @SerializedName("offerId")
     * @Type("string")
    */
    #[Assert\Type("string")]
    #[Assert\Length(max: 255)]
    #[Assert\Length(min: 1)]
    #[Assert\Regex("/^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$/")]
    protected ?string $offerId = null;

    /**
     * Цены для продвижения.
     *
     * @var PriceSuggestDTO[]|null
     * @SerializedName("priceSuggestion")
     * @Type("array<OpenAPI\Server\Model\PriceSuggestDTO>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\PriceSuggestDTO"),
    ])]
    protected ?array $priceSuggestion = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->marketSku = array_key_exists('marketSku', $data) ? $data['marketSku'] : $this->marketSku;
            $this->offerId = array_key_exists('offerId', $data) ? $data['offerId'] : $this->offerId;
            $this->priceSuggestion = array_key_exists('priceSuggestion', $data) ? $data['priceSuggestion'] : $this->priceSuggestion;
        }
    }

    /**
     * Gets marketSku.
     *
     * @return int|null
     */
    public function getMarketSku(): ?int
    {
        return $this->marketSku;
    }

    /**
    * Sets marketSku.
    *
    * @param int|null $marketSku  SKU на Маркете.
    *
    * @return $this
    */
    public function setMarketSku(?int $marketSku = null): self
    {
        $this->marketSku = $marketSku;

        return $this;
    }




    /**
     * Gets offerId.
     *
     * @return string|null
     */
    public function getOfferId(): ?string
    {
        return $this->offerId;
    }

    /**
    * Sets offerId.
    *
    * @param string|null $offerId  Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
    *
    * @return $this
    */
    public function setOfferId(?string $offerId = null): self
    {
        $this->offerId = $offerId;

        return $this;
    }




    /**
     * Gets priceSuggestion.
     *
     * @return PriceSuggestDTO[]|null
     */
    public function getPriceSuggestion(): ?array
    {
        return $this->priceSuggestion;
    }

    /**
    * Sets priceSuggestion.
    *
    * @param PriceSuggestDTO[]|null $priceSuggestion  Цены для продвижения.
    *
    * @return $this
    */
    public function setPriceSuggestion(?array $priceSuggestion = null): self
    {
        $this->priceSuggestion = $priceSuggestion;

        return $this;
    }



}


