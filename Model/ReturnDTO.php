<?php
/**
 * ReturnDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ReturnDTO model.
 *
 * Возврат заказа.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class ReturnDTO 
{
        /**
     * Идентификатор возврата.
     *
     * @var int|null
     * @SerializedName("id")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $id = null;

    /**
     * Номер заказа.
     *
     * @var int|null
     * @SerializedName("orderId")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $orderId = null;

    /**
     * Дата создания возврата клиентом.
     *
     * @var \DateTime|null
     * @SerializedName("creationDate")
     * @Type("DateTime")
    */
    #[Assert\Type("\DateTime")]
    protected ?\DateTime $creationDate = null;

    /**
     * Дата обновления возврата.
     *
     * @var \DateTime|null
     * @SerializedName("updateDate")
     * @Type("DateTime")
    */
    #[Assert\Type("\DateTime")]
    protected ?\DateTime $updateDate = null;

    /**
     * @var RefundStatusType|null
     * @SerializedName("refundStatus")
    * @Accessor(getter="getSerializedRefundStatus", setter="setDeserializedRefundStatus")
    * @Type("string")
    */
    protected ?RefundStatusType $refundStatus = null;

    /**
     * @var LogisticPickupPointDTO|null
     * @SerializedName("logisticPickupPoint")
     * @Type("OpenAPI\Server\Model\LogisticPickupPointDTO")
    */
    #[Assert\Type("OpenAPI\Server\Model\LogisticPickupPointDTO")]
    protected ?LogisticPickupPointDTO $logisticPickupPoint = null;

    /**
     * @var RecipientType|null
     * @SerializedName("shipmentRecipientType")
    * @Accessor(getter="getSerializedShipmentRecipientType", setter="setDeserializedShipmentRecipientType")
    * @Type("string")
    */
    protected ?RecipientType $shipmentRecipientType = null;

    /**
     * @var ReturnShipmentStatusType|null
     * @SerializedName("shipmentStatus")
    * @Accessor(getter="getSerializedShipmentStatus", setter="setDeserializedShipmentStatus")
    * @Type("string")
    */
    protected ?ReturnShipmentStatusType $shipmentStatus = null;

    /**
     * Сумма возврата.
     *
     * @var int|null
     * @SerializedName("refundAmount")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $refundAmount = null;

    /**
     * Список товаров в возврате.
     *
     * @var ReturnItemDTO[]|null
     * @SerializedName("items")
     * @Type("array<OpenAPI\Server\Model\ReturnItemDTO>")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\ReturnItemDTO"),
    ])]
    protected ?array $items = null;

    /**
     * @var ReturnType|null
     * @SerializedName("returnType")
    * @Accessor(getter="getSerializedReturnType", setter="setDeserializedReturnType")
    * @Type("string")
    */
    protected ?ReturnType $returnType = null;

    /**
     * Используется ли опция **Быстрый возврат денег за дешевый брак**.
     *
     * @var bool|null
     * @SerializedName("fastReturn")
     * @Type("bool")
    */
    #[Assert\Type("bool")]
    protected ?bool $fastReturn = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->orderId = array_key_exists('orderId', $data) ? $data['orderId'] : $this->orderId;
            $this->creationDate = array_key_exists('creationDate', $data) ? $data['creationDate'] : $this->creationDate;
            $this->updateDate = array_key_exists('updateDate', $data) ? $data['updateDate'] : $this->updateDate;
            $this->refundStatus = array_key_exists('refundStatus', $data) ? $data['refundStatus'] : $this->refundStatus;
            $this->logisticPickupPoint = array_key_exists('logisticPickupPoint', $data) ? $data['logisticPickupPoint'] : $this->logisticPickupPoint;
            $this->shipmentRecipientType = array_key_exists('shipmentRecipientType', $data) ? $data['shipmentRecipientType'] : $this->shipmentRecipientType;
            $this->shipmentStatus = array_key_exists('shipmentStatus', $data) ? $data['shipmentStatus'] : $this->shipmentStatus;
            $this->refundAmount = array_key_exists('refundAmount', $data) ? $data['refundAmount'] : $this->refundAmount;
            $this->items = array_key_exists('items', $data) ? $data['items'] : $this->items;
            $this->returnType = array_key_exists('returnType', $data) ? $data['returnType'] : $this->returnType;
            $this->fastReturn = array_key_exists('fastReturn', $data) ? $data['fastReturn'] : $this->fastReturn;
        }
    }

    /**
     * Gets id.
     *
     * @return int|null
     */
    public function getId(): ?int
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param int|null $id  Идентификатор возврата.
    *
    * @return $this
    */
    public function setId(?int $id = null): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets orderId.
     *
     * @return int|null
     */
    public function getOrderId(): ?int
    {
        return $this->orderId;
    }

    /**
    * Sets orderId.
    *
    * @param int|null $orderId  Номер заказа.
    *
    * @return $this
    */
    public function setOrderId(?int $orderId = null): self
    {
        $this->orderId = $orderId;

        return $this;
    }




    /**
     * Gets creationDate.
     *
     * @return \DateTime|null
     */
    public function getCreationDate(): ?\DateTime
    {
        return $this->creationDate;
    }

    /**
    * Sets creationDate.
    *
    * @param \DateTime|null $creationDate  Дата создания возврата клиентом.
    *
    * @return $this
    */
    public function setCreationDate(?\DateTime $creationDate = null): self
    {
        $this->creationDate = $creationDate;

        return $this;
    }




    /**
     * Gets updateDate.
     *
     * @return \DateTime|null
     */
    public function getUpdateDate(): ?\DateTime
    {
        return $this->updateDate;
    }

    /**
    * Sets updateDate.
    *
    * @param \DateTime|null $updateDate  Дата обновления возврата.
    *
    * @return $this
    */
    public function setUpdateDate(?\DateTime $updateDate = null): self
    {
        $this->updateDate = $updateDate;

        return $this;
    }




    /**
     * Gets refundStatus.
     *
     * @return RefundStatusType|null
     */
    public function getRefundStatus(): ?RefundStatusType
    {
        return $this->refundStatus;
    }

    /**
    * Sets refundStatus.
    *
    * @param RefundStatusType|null $refundStatus
    *
    * @return $this
    */
    public function setRefundStatus(?RefundStatusType $refundStatus = null): self
    {
        $this->refundStatus = $refundStatus;

        return $this;
    }

    /**
    * Gets refundStatus for serialization.
    *
    * @return string|null
    */
    public function getSerializedRefundStatus(): string|null
    {
        return $this->refundStatus?->value ? (string) $this->refundStatus->value : null;
    }

    /**
    * Sets refundStatus.
    *
    * @param string|RefundStatusType|null $refundStatus
    *
    * @return $this
    */
    public function setDeserializedRefundStatus(string|RefundStatusType|null $refundStatus = null): self
    {
        if (is_string($refundStatus)) {
            $refundStatus = RefundStatusType::tryFrom($refundStatus);
        }

        $this->refundStatus = $refundStatus;

        return $this;
    }



    /**
     * Gets logisticPickupPoint.
     *
     * @return LogisticPickupPointDTO|null
     */
    public function getLogisticPickupPoint(): ?LogisticPickupPointDTO
    {
        return $this->logisticPickupPoint;
    }

    /**
    * Sets logisticPickupPoint.
    *
    * @param LogisticPickupPointDTO|null $logisticPickupPoint
    *
    * @return $this
    */
    public function setLogisticPickupPoint(?LogisticPickupPointDTO $logisticPickupPoint = null): self
    {
        $this->logisticPickupPoint = $logisticPickupPoint;

        return $this;
    }




    /**
     * Gets shipmentRecipientType.
     *
     * @return RecipientType|null
     */
    public function getShipmentRecipientType(): ?RecipientType
    {
        return $this->shipmentRecipientType;
    }

    /**
    * Sets shipmentRecipientType.
    *
    * @param RecipientType|null $shipmentRecipientType
    *
    * @return $this
    */
    public function setShipmentRecipientType(?RecipientType $shipmentRecipientType = null): self
    {
        $this->shipmentRecipientType = $shipmentRecipientType;

        return $this;
    }

    /**
    * Gets shipmentRecipientType for serialization.
    *
    * @return string|null
    */
    public function getSerializedShipmentRecipientType(): string|null
    {
        return $this->shipmentRecipientType?->value ? (string) $this->shipmentRecipientType->value : null;
    }

    /**
    * Sets shipmentRecipientType.
    *
    * @param string|RecipientType|null $shipmentRecipientType
    *
    * @return $this
    */
    public function setDeserializedShipmentRecipientType(string|RecipientType|null $shipmentRecipientType = null): self
    {
        if (is_string($shipmentRecipientType)) {
            $shipmentRecipientType = RecipientType::tryFrom($shipmentRecipientType);
        }

        $this->shipmentRecipientType = $shipmentRecipientType;

        return $this;
    }



    /**
     * Gets shipmentStatus.
     *
     * @return ReturnShipmentStatusType|null
     */
    public function getShipmentStatus(): ?ReturnShipmentStatusType
    {
        return $this->shipmentStatus;
    }

    /**
    * Sets shipmentStatus.
    *
    * @param ReturnShipmentStatusType|null $shipmentStatus
    *
    * @return $this
    */
    public function setShipmentStatus(?ReturnShipmentStatusType $shipmentStatus = null): self
    {
        $this->shipmentStatus = $shipmentStatus;

        return $this;
    }

    /**
    * Gets shipmentStatus for serialization.
    *
    * @return string|null
    */
    public function getSerializedShipmentStatus(): string|null
    {
        return $this->shipmentStatus?->value ? (string) $this->shipmentStatus->value : null;
    }

    /**
    * Sets shipmentStatus.
    *
    * @param string|ReturnShipmentStatusType|null $shipmentStatus
    *
    * @return $this
    */
    public function setDeserializedShipmentStatus(string|ReturnShipmentStatusType|null $shipmentStatus = null): self
    {
        if (is_string($shipmentStatus)) {
            $shipmentStatus = ReturnShipmentStatusType::tryFrom($shipmentStatus);
        }

        $this->shipmentStatus = $shipmentStatus;

        return $this;
    }



    /**
     * Gets refundAmount.
     *
     * @return int|null
     */
    public function getRefundAmount(): ?int
    {
        return $this->refundAmount;
    }

    /**
    * Sets refundAmount.
    *
    * @param int|null $refundAmount  Сумма возврата.
    *
    * @return $this
    */
    public function setRefundAmount(?int $refundAmount = null): self
    {
        $this->refundAmount = $refundAmount;

        return $this;
    }




    /**
     * Gets items.
     *
     * @return ReturnItemDTO[]|null
     */
    public function getItems(): ?array
    {
        return $this->items;
    }

    /**
    * Sets items.
    *
    * @param ReturnItemDTO[]|null $items  Список товаров в возврате.
    *
    * @return $this
    */
    public function setItems(?array $items): self
    {
        $this->items = $items;

        return $this;
    }




    /**
     * Gets returnType.
     *
     * @return ReturnType|null
     */
    public function getReturnType(): ?ReturnType
    {
        return $this->returnType;
    }

    /**
    * Sets returnType.
    *
    * @param ReturnType|null $returnType
    *
    * @return $this
    */
    public function setReturnType(?ReturnType $returnType = null): self
    {
        $this->returnType = $returnType;

        return $this;
    }

    /**
    * Gets returnType for serialization.
    *
    * @return string|null
    */
    public function getSerializedReturnType(): string|null
    {
        return $this->returnType?->value ? (string) $this->returnType->value : null;
    }

    /**
    * Sets returnType.
    *
    * @param string|ReturnType|null $returnType
    *
    * @return $this
    */
    public function setDeserializedReturnType(string|ReturnType|null $returnType = null): self
    {
        if (is_string($returnType)) {
            $returnType = ReturnType::tryFrom($returnType);
        }

        $this->returnType = $returnType;

        return $this;
    }



    /**
     * Gets fastReturn.
     *
     * @return bool|null
     */
    public function isFastReturn(): ?bool
    {
        return $this->fastReturn;
    }

    /**
    * Sets fastReturn.
    *
    * @param bool|null $fastReturn  Используется ли опция **Быстрый возврат денег за дешевый брак**.
    *
    * @return $this
    */
    public function setFastReturn(?bool $fastReturn = null): self
    {
        $this->fastReturn = $fastReturn;

        return $this;
    }



}


