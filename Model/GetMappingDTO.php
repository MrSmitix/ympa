<?php
/**
 * GetMappingDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the GetMappingDTO model.
 *
 * Информация о товарах в каталоге.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class GetMappingDTO 
{
        /**
     * SKU на Маркете.
     *
     * @var int|null
     * @SerializedName("marketSku")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $marketSku = null;

    /**
     * Название карточки товара.  Может отсутствовать в ответе, если товар еще не привязан к карточке.
     *
     * @var string|null
     * @SerializedName("marketSkuName")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $marketSkuName = null;

    /**
     * Идентификатор модели на Маркете.  Может отсутствовать в ответе, если товар еще не привязан к карточке.
     *
     * @var int|null
     * @SerializedName("marketModelId")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $marketModelId = null;

    /**
     * Название модели на Маркете.  Может отсутствовать в ответе, если товар еще не привязан к карточке.
     *
     * @var string|null
     * @SerializedName("marketModelName")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $marketModelName = null;

    /**
     * Идентификатор категории на Маркете, в которую попал товар.  Может отсутствовать в ответе, если Маркет еще не определил категорию товара.
     *
     * @var int|null
     * @SerializedName("marketCategoryId")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $marketCategoryId = null;

    /**
     * Название категории карточки на Маркете.  Может отсутствовать в ответе, если Маркет еще не определил категорию товара.
     *
     * @var string|null
     * @SerializedName("marketCategoryName")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $marketCategoryName = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->marketSku = array_key_exists('marketSku', $data) ? $data['marketSku'] : $this->marketSku;
            $this->marketSkuName = array_key_exists('marketSkuName', $data) ? $data['marketSkuName'] : $this->marketSkuName;
            $this->marketModelId = array_key_exists('marketModelId', $data) ? $data['marketModelId'] : $this->marketModelId;
            $this->marketModelName = array_key_exists('marketModelName', $data) ? $data['marketModelName'] : $this->marketModelName;
            $this->marketCategoryId = array_key_exists('marketCategoryId', $data) ? $data['marketCategoryId'] : $this->marketCategoryId;
            $this->marketCategoryName = array_key_exists('marketCategoryName', $data) ? $data['marketCategoryName'] : $this->marketCategoryName;
        }
    }

    /**
     * Gets marketSku.
     *
     * @return int|null
     */
    public function getMarketSku(): ?int
    {
        return $this->marketSku;
    }

    /**
    * Sets marketSku.
    *
    * @param int|null $marketSku  SKU на Маркете.
    *
    * @return $this
    */
    public function setMarketSku(?int $marketSku = null): self
    {
        $this->marketSku = $marketSku;

        return $this;
    }




    /**
     * Gets marketSkuName.
     *
     * @return string|null
     */
    public function getMarketSkuName(): ?string
    {
        return $this->marketSkuName;
    }

    /**
    * Sets marketSkuName.
    *
    * @param string|null $marketSkuName  Название карточки товара.  Может отсутствовать в ответе, если товар еще не привязан к карточке.
    *
    * @return $this
    */
    public function setMarketSkuName(?string $marketSkuName = null): self
    {
        $this->marketSkuName = $marketSkuName;

        return $this;
    }




    /**
     * Gets marketModelId.
     *
     * @return int|null
     */
    public function getMarketModelId(): ?int
    {
        return $this->marketModelId;
    }

    /**
    * Sets marketModelId.
    *
    * @param int|null $marketModelId  Идентификатор модели на Маркете.  Может отсутствовать в ответе, если товар еще не привязан к карточке.
    *
    * @return $this
    */
    public function setMarketModelId(?int $marketModelId = null): self
    {
        $this->marketModelId = $marketModelId;

        return $this;
    }




    /**
     * Gets marketModelName.
     *
     * @return string|null
     */
    public function getMarketModelName(): ?string
    {
        return $this->marketModelName;
    }

    /**
    * Sets marketModelName.
    *
    * @param string|null $marketModelName  Название модели на Маркете.  Может отсутствовать в ответе, если товар еще не привязан к карточке.
    *
    * @return $this
    */
    public function setMarketModelName(?string $marketModelName = null): self
    {
        $this->marketModelName = $marketModelName;

        return $this;
    }




    /**
     * Gets marketCategoryId.
     *
     * @return int|null
     */
    public function getMarketCategoryId(): ?int
    {
        return $this->marketCategoryId;
    }

    /**
    * Sets marketCategoryId.
    *
    * @param int|null $marketCategoryId  Идентификатор категории на Маркете, в которую попал товар.  Может отсутствовать в ответе, если Маркет еще не определил категорию товара.
    *
    * @return $this
    */
    public function setMarketCategoryId(?int $marketCategoryId = null): self
    {
        $this->marketCategoryId = $marketCategoryId;

        return $this;
    }




    /**
     * Gets marketCategoryName.
     *
     * @return string|null
     */
    public function getMarketCategoryName(): ?string
    {
        return $this->marketCategoryName;
    }

    /**
    * Sets marketCategoryName.
    *
    * @param string|null $marketCategoryName  Название категории карточки на Маркете.  Может отсутствовать в ответе, если Маркет еще не определил категорию товара.
    *
    * @return $this
    */
    public function setMarketCategoryName(?string $marketCategoryName = null): self
    {
        $this->marketCategoryName = $marketCategoryName;

        return $this;
    }



}


