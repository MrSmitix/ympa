<?php
/**
 * GetMappingDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the GetMappingDTO model.
 *
 * Информация о товарах в каталоге.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class GetMappingDTO  implements \JsonSerializable
{
        /**
     * SKU на Маркете.
     *
     * @var int|null
     * @SerializedName("marketSku")
     * @Assert\Type("int")
     * @Type("int")
     */
    public ?int $marketSku;

    /**
     * Название карточки товара.  Может отсутствовать в ответе, если товар еще не привязан к карточке.
     *
     * @var string|null
     * @SerializedName("marketSkuName")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $marketSkuName;

    /**
     * Идентификатор модели на Маркете.  Может отсутствовать в ответе, если товар еще не привязан к карточке.
     *
     * @var int|null
     * @SerializedName("marketModelId")
     * @Assert\Type("int")
     * @Type("int")
     */
    public ?int $marketModelId;

    /**
     * Название модели на Маркете.  Может отсутствовать в ответе, если товар еще не привязан к карточке.
     *
     * @var string|null
     * @SerializedName("marketModelName")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $marketModelName;

    /**
     * Идентификатор категории на Маркете, в которую попал товар.  Может отсутствовать в ответе, если Маркет еще не определил категорию товара.
     *
     * @var int|null
     * @SerializedName("marketCategoryId")
     * @Assert\Type("int")
     * @Type("int")
     */
    public ?int $marketCategoryId;

    /**
     * Название категории карточки на Маркете.  Может отсутствовать в ответе, если Маркет еще не определил категорию товара.
     *
     * @var string|null
     * @SerializedName("marketCategoryName")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $marketCategoryName;

    /**
     * Constructor
     *
     * @param int|null $marketSku
     * @param string|null $marketSkuName
     * @param int|null $marketModelId
     * @param string|null $marketModelName
     * @param int|null $marketCategoryId
     * @param string|null $marketCategoryName
     */
    public function __construct(?int $marketSku, ?string $marketSkuName, ?int $marketModelId, ?string $marketModelName, ?int $marketCategoryId, ?string $marketCategoryName)
    {
        $this->marketSku = $marketSku;
        $this->marketSkuName = $marketSkuName;
        $this->marketModelId = $marketModelId;
        $this->marketModelName = $marketModelName;
        $this->marketCategoryId = $marketCategoryId;
        $this->marketCategoryName = $marketCategoryName;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['marketSku'] ?? null, 
            $data['marketSkuName'] ?? null, 
            $data['marketModelId'] ?? null, 
            $data['marketModelName'] ?? null, 
            $data['marketCategoryId'] ?? null, 
            $data['marketCategoryName'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'marketSku' => $this->marketSku, 
            'marketSkuName' => $this->marketSkuName, 
            'marketModelId' => $this->marketModelId, 
            'marketModelName' => $this->marketModelName, 
            'marketCategoryId' => $this->marketCategoryId, 
            'marketCategoryName' => $this->marketCategoryName, 
        ];
    }
}


