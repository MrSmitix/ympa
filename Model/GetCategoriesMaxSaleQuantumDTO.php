<?php
/**
 * GetCategoriesMaxSaleQuantumDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the GetCategoriesMaxSaleQuantumDTO model.
 *
 * Категории и лимит на установку кванта и минимального количества товаров.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class GetCategoriesMaxSaleQuantumDTO  implements \JsonSerializable
{
        /**
     * Категории и лимит на установку кванта и минимального количества товаров.
     *
     * @var MaxSaleQuantumDTO[]
     * @SerializedName("results")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\MaxSaleQuantumDTO")
     * })
     * @Type("array<\OpenAPIServer\Model\MaxSaleQuantumDTO>")
     */
    public array $results;

    /**
     * Ошибки, которые появились из-за переданных категорий.
     *
     * @var CategoryErrorDTO[]|null
     * @SerializedName("errors")
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\CategoryErrorDTO")
     * })
     * @Type("array<\OpenAPIServer\Model\CategoryErrorDTO>")
     */
    public ?array $errors;

    /**
     * Constructor
     *
     * @param MaxSaleQuantumDTO[] $results
     * @param CategoryErrorDTO[]|null $errors
     */
    public function __construct(array $results, ?array $errors)
    {
        $this->results = $results;
        $this->errors = $errors;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            isset($data['results']) ? array_map(fn($item) => MaxSaleQuantumDTO::fromArray($item), $data['results']) : null, 
            isset($data['errors']) ? array_map(fn($item) => CategoryErrorDTO::fromArray($item), $data['errors']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'results' => $this->results, 
            'errors' => $this->errors, 
        ];
    }
}


