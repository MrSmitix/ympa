<?php
/**
 * OrderStatusChangeDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the OrderStatusChangeDTO model.
 *
 * Заказ.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class OrderStatusChangeDTO  implements \JsonSerializable
{
        /**
     * @var OrderStatusType
     * @SerializedName("status")
     * @Assert\NotNull()
     * @Assert\Valid()
        * @Accessor(getter="getSerializedStatus")
        * @Type("string")
     */
    public OrderStatusType $status;

    /**
     * @var OrderSubstatusType|null
     * @SerializedName("substatus")
        * @Accessor(getter="getSerializedSubstatus")
        * @Type("string")
     */
    public ?OrderSubstatusType $substatus;

    /**
     * @var OrderStatusChangeDeliveryDTO|null
     * @SerializedName("delivery")
     * @Assert\Type("\OpenAPIServer\Model\OrderStatusChangeDeliveryDTO")
     * @Type("\OpenAPIServer\Model\OrderStatusChangeDeliveryDTO")
     */
    public ?OrderStatusChangeDeliveryDTO $delivery;

    /**
     * Constructor
     *
     * @param OrderStatusType $status
     * @param OrderSubstatusType|null $substatus
     * @param OrderStatusChangeDeliveryDTO|null $delivery
     */
    public function __construct(OrderStatusType $status, ?OrderSubstatusType $substatus, ?OrderStatusChangeDeliveryDTO $delivery)
    {
        $this->status = $status;
        $this->substatus = $substatus;
        $this->delivery = $delivery;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            isset($data['status']) ? OrderStatusType::tryFrom($data['status']) : null, 
            isset($data['substatus']) ? OrderSubstatusType::tryFrom($data['substatus']) : null, 
            isset($data['delivery']) ? OrderStatusChangeDeliveryDTO::fromArray($data['delivery']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'status' => $this->status, 
            'substatus' => $this->substatus, 
            'delivery' => $this->delivery, 
        ];
    }
}


