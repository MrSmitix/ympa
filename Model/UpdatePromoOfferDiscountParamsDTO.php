<?php
/**
 * UpdatePromoOfferDiscountParamsDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the UpdatePromoOfferDiscountParamsDTO model.
 *
 * Параметры товара в акции с типом &#x60;DIRECT_DISCOUNT&#x60; или &#x60;BLUE_FLASH&#x60;.  Обязательный параметр для акций с этими типами.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class UpdatePromoOfferDiscountParamsDTO 
{
        /**
     * Зачеркнутая цена — та, по которой товар продавался до акции.  Указывается в рублях.  Число должно быть целым.
     *
     * @var int|null
     * @SerializedName("price")
     * @Type("int")
    */
    #[Assert\Type("int")]
    #[Assert\GreaterThanOrEqual(1)]
    protected ?int $price = null;

    /**
     * Цена по акции — та, по которой вы хотите продавать товар.  Указывается в рублях.  Число должно быть целым.
     *
     * @var int|null
     * @SerializedName("promoPrice")
     * @Type("int")
    */
    #[Assert\Type("int")]
    #[Assert\GreaterThanOrEqual(1)]
    protected ?int $promoPrice = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->price = array_key_exists('price', $data) ? $data['price'] : $this->price;
            $this->promoPrice = array_key_exists('promoPrice', $data) ? $data['promoPrice'] : $this->promoPrice;
        }
    }

    /**
     * Gets price.
     *
     * @return int|null
     */
    public function getPrice(): ?int
    {
        return $this->price;
    }

    /**
    * Sets price.
    *
    * @param int|null $price  Зачеркнутая цена — та, по которой товар продавался до акции.  Указывается в рублях.  Число должно быть целым.
    *
    * @return $this
    */
    public function setPrice(?int $price = null): self
    {
        $this->price = $price;

        return $this;
    }




    /**
     * Gets promoPrice.
     *
     * @return int|null
     */
    public function getPromoPrice(): ?int
    {
        return $this->promoPrice;
    }

    /**
    * Sets promoPrice.
    *
    * @param int|null $promoPrice  Цена по акции — та, по которой вы хотите продавать товар.  Указывается в рублях.  Число должно быть целым.
    *
    * @return $this
    */
    public function setPromoPrice(?int $promoPrice = null): self
    {
        $this->promoPrice = $promoPrice;

        return $this;
    }



}


