<?php
/**
 * OfferConditionDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OfferConditionDTO model.
 *
 * Состояние уцененного товара.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class OfferConditionDTO 
{
        /**
     * @var OfferConditionType|null
     * @SerializedName("type")
    * @Accessor(getter="getSerializedType", setter="setDeserializedType")
    * @Type("string")
    */
    protected ?OfferConditionType $type = null;

    /**
     * @var OfferConditionQualityType|null
     * @SerializedName("quality")
    * @Accessor(getter="getSerializedQuality", setter="setDeserializedQuality")
    * @Type("string")
    */
    protected ?OfferConditionQualityType $quality = null;

    /**
     * Описание товара. Подробно опишите дефекты, насколько они заметны и где их искать.
     *
     * @var string|null
     * @SerializedName("reason")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $reason = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->type = array_key_exists('type', $data) ? $data['type'] : $this->type;
            $this->quality = array_key_exists('quality', $data) ? $data['quality'] : $this->quality;
            $this->reason = array_key_exists('reason', $data) ? $data['reason'] : $this->reason;
        }
    }

    /**
     * Gets type.
     *
     * @return OfferConditionType|null
     */
    public function getType(): ?OfferConditionType
    {
        return $this->type;
    }

    /**
    * Sets type.
    *
    * @param OfferConditionType|null $type
    *
    * @return $this
    */
    public function setType(?OfferConditionType $type = null): self
    {
        $this->type = $type;

        return $this;
    }

    /**
    * Gets type for serialization.
    *
    * @return string|null
    */
    public function getSerializedType(): string|null
    {
        return $this->type?->value ? (string) $this->type->value : null;
    }

    /**
    * Sets type.
    *
    * @param string|OfferConditionType|null $type
    *
    * @return $this
    */
    public function setDeserializedType(string|OfferConditionType|null $type = null): self
    {
        if (is_string($type)) {
            $type = OfferConditionType::tryFrom($type);
        }

        $this->type = $type;

        return $this;
    }



    /**
     * Gets quality.
     *
     * @return OfferConditionQualityType|null
     */
    public function getQuality(): ?OfferConditionQualityType
    {
        return $this->quality;
    }

    /**
    * Sets quality.
    *
    * @param OfferConditionQualityType|null $quality
    *
    * @return $this
    */
    public function setQuality(?OfferConditionQualityType $quality = null): self
    {
        $this->quality = $quality;

        return $this;
    }

    /**
    * Gets quality for serialization.
    *
    * @return string|null
    */
    public function getSerializedQuality(): string|null
    {
        return $this->quality?->value ? (string) $this->quality->value : null;
    }

    /**
    * Sets quality.
    *
    * @param string|OfferConditionQualityType|null $quality
    *
    * @return $this
    */
    public function setDeserializedQuality(string|OfferConditionQualityType|null $quality = null): self
    {
        if (is_string($quality)) {
            $quality = OfferConditionQualityType::tryFrom($quality);
        }

        $this->quality = $quality;

        return $this;
    }



    /**
     * Gets reason.
     *
     * @return string|null
     */
    public function getReason(): ?string
    {
        return $this->reason;
    }

    /**
    * Sets reason.
    *
    * @param string|null $reason  Описание товара. Подробно опишите дефекты, насколько они заметны и где их искать.
    *
    * @return $this
    */
    public function setReason(?string $reason = null): self
    {
        $this->reason = $reason;

        return $this;
    }



}


