<?php
/**
 * BusinessSettingsDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the BusinessSettingsDTO model.
 *
 * Настройки кабинета.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class BusinessSettingsDTO  implements \JsonSerializable
{
        /**
     * Можно ли установить только [базовую цену](*rule): * &#x60;false&#x60; — можно задать и базовую цену, и цены в конкретных магазинах. * &#x60;true&#x60; — можно задать только базовую цену.
     *
     * @var bool|null
     * @SerializedName("onlyDefaultPrice")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    public ?bool $onlyDefaultPrice;

    /**
     * @var CurrencyType|null
     * @SerializedName("currency")
        * @Accessor(getter="getSerializedCurrency")
        * @Type("string")
     */
    public ?CurrencyType $currency;

    /**
     * Constructor
     *
     * @param bool|null $onlyDefaultPrice
     * @param CurrencyType|null $currency
     */
    public function __construct(?bool $onlyDefaultPrice, ?CurrencyType $currency)
    {
        $this->onlyDefaultPrice = $onlyDefaultPrice;
        $this->currency = $currency;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['onlyDefaultPrice'] ?? null, 
            isset($data['currency']) ? CurrencyType::tryFrom($data['currency']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'onlyDefaultPrice' => $this->onlyDefaultPrice, 
            'currency' => $this->currency, 
        ];
    }
}


