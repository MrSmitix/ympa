<?php
/**
 * OrderCourierDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the OrderCourierDTO model.
 *
 * Информация о курьере.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class OrderCourierDTO  implements \JsonSerializable
{
        /**
     * Полное имя курьера.
     *
     * @var string|null
     * @SerializedName("fullName")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $fullName;

    /**
     * Номер телефона курьера.
     *
     * @var string|null
     * @SerializedName("phone")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $phone;

    /**
     * Добавочный номер телефона.
     *
     * @var string|null
     * @SerializedName("phoneExtension")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $phoneExtension;

    /**
     * Номер транспортного средства.
     *
     * @var string|null
     * @SerializedName("vehicleNumber")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $vehicleNumber;

    /**
     * Описание машины. Например, модель и цвет.
     *
     * @var string|null
     * @SerializedName("vehicleDescription")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $vehicleDescription;

    /**
     * Constructor
     *
     * @param string|null $fullName
     * @param string|null $phone
     * @param string|null $phoneExtension
     * @param string|null $vehicleNumber
     * @param string|null $vehicleDescription
     */
    public function __construct(?string $fullName, ?string $phone, ?string $phoneExtension, ?string $vehicleNumber, ?string $vehicleDescription)
    {
        $this->fullName = $fullName;
        $this->phone = $phone;
        $this->phoneExtension = $phoneExtension;
        $this->vehicleNumber = $vehicleNumber;
        $this->vehicleDescription = $vehicleDescription;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['fullName'] ?? null, 
            $data['phone'] ?? null, 
            $data['phoneExtension'] ?? null, 
            $data['vehicleNumber'] ?? null, 
            $data['vehicleDescription'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'fullName' => $this->fullName, 
            'phone' => $this->phone, 
            'phoneExtension' => $this->phoneExtension, 
            'vehicleNumber' => $this->vehicleNumber, 
            'vehicleDescription' => $this->vehicleDescription, 
        ];
    }
}


