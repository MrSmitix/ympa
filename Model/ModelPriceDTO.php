<?php
/**
 * ModelPriceDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the ModelPriceDTO model.
 *
 * Информация о ценах на модель товара.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class ModelPriceDTO  implements \JsonSerializable
{
        /**
     * Средняя цена предложения для модели в регионе.
     *
     * @var float|null
     * @SerializedName("avg")
     * @Assert\Type("float")
     * @Type("float")
     */
    public ?float $avg;

    /**
     * Максимальная цена предложения для модели в регионе.
     *
     * @var float|null
     * @SerializedName("max")
     * @Assert\Type("float")
     * @Type("float")
     */
    public ?float $max;

    /**
     * Минимальная цена предложения для модели в регионе.
     *
     * @var float|null
     * @SerializedName("min")
     * @Assert\Type("float")
     * @Type("float")
     */
    public ?float $min;

    /**
     * Constructor
     *
     * @param float|null $avg
     * @param float|null $max
     * @param float|null $min
     */
    public function __construct(?float $avg, ?float $max, ?float $min)
    {
        $this->avg = $avg;
        $this->max = $max;
        $this->min = $min;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['avg'] ?? null, 
            $data['max'] ?? null, 
            $data['min'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'avg' => $this->avg, 
            'max' => $this->max, 
            'min' => $this->min, 
        ];
    }
}


