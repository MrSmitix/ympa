<?php
/**
 * WarehousesDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the WarehousesDTO model.
 *
 * Информация о складах и группах складов.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class WarehousesDTO 
{
        /**
     * Список складов, не входящих в группы.
     *
     * @var WarehouseDTO[]|null
     * @SerializedName("warehouses")
     * @Type("array<OpenAPI\Server\Model\WarehouseDTO>")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\WarehouseDTO"),
    ])]
    protected ?array $warehouses = null;

    /**
     * Список групп складов.
     *
     * @var WarehouseGroupDTO[]|null
     * @SerializedName("warehouseGroups")
     * @Type("array<OpenAPI\Server\Model\WarehouseGroupDTO>")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\WarehouseGroupDTO"),
    ])]
    protected ?array $warehouseGroups = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->warehouses = array_key_exists('warehouses', $data) ? $data['warehouses'] : $this->warehouses;
            $this->warehouseGroups = array_key_exists('warehouseGroups', $data) ? $data['warehouseGroups'] : $this->warehouseGroups;
        }
    }

    /**
     * Gets warehouses.
     *
     * @return WarehouseDTO[]|null
     */
    public function getWarehouses(): ?array
    {
        return $this->warehouses;
    }

    /**
    * Sets warehouses.
    *
    * @param WarehouseDTO[]|null $warehouses  Список складов, не входящих в группы.
    *
    * @return $this
    */
    public function setWarehouses(?array $warehouses): self
    {
        $this->warehouses = $warehouses;

        return $this;
    }




    /**
     * Gets warehouseGroups.
     *
     * @return WarehouseGroupDTO[]|null
     */
    public function getWarehouseGroups(): ?array
    {
        return $this->warehouseGroups;
    }

    /**
    * Sets warehouseGroups.
    *
    * @param WarehouseGroupDTO[]|null $warehouseGroups  Список групп складов.
    *
    * @return $this
    */
    public function setWarehouseGroups(?array $warehouseGroups): self
    {
        $this->warehouseGroups = $warehouseGroups;

        return $this;
    }



}


