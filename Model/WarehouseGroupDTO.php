<?php
/**
 * WarehouseGroupDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the WarehouseGroupDTO model.
 *
 * Информация о группе складов.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class WarehouseGroupDTO  implements \JsonSerializable
{
        /**
     * Название группы складов.
     *
     * @var string
     * @SerializedName("name")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    public string $name;

    /**
     * @var WarehouseDTO
     * @SerializedName("mainWarehouse")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\Type("\OpenAPIServer\Model\WarehouseDTO")
     * @Type("\OpenAPIServer\Model\WarehouseDTO")
     */
    public WarehouseDTO $mainWarehouse;

    /**
     * Список складов, входящих в группу.
     *
     * @var WarehouseDTO[]
     * @SerializedName("warehouses")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\WarehouseDTO")
     * })
     * @Type("array<\OpenAPIServer\Model\WarehouseDTO>")
     */
    public array $warehouses;

    /**
     * Constructor
     *
     * @param string $name
     * @param WarehouseDTO $mainWarehouse
     * @param WarehouseDTO[] $warehouses
     */
    public function __construct(string $name, WarehouseDTO $mainWarehouse, array $warehouses)
    {
        $this->name = $name;
        $this->mainWarehouse = $mainWarehouse;
        $this->warehouses = $warehouses;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['name'] ?? null, 
            isset($data['mainWarehouse']) ? WarehouseDTO::fromArray($data['mainWarehouse']) : null, 
            isset($data['warehouses']) ? array_map(fn($item) => WarehouseDTO::fromArray($item), $data['warehouses']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'name' => $this->name, 
            'mainWarehouse' => $this->mainWarehouse, 
            'warehouses' => $this->warehouses, 
        ];
    }
}


