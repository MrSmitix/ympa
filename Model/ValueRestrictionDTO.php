<?php
/**
 * ValueRestrictionDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the ValueRestrictionDTO model.
 *
 * Ограничение на возможные значения, накладываемое другой характеристикой.  Если ограничивающая характеристика принимает определенное значение, список возможных значений ограничиваемой характеристики сокращается.  **Пример**  Характеристика **размер** сама по себе может принимать девять разных значений: &#x60;S&#x60;, &#x60;M&#x60;, &#x60;L&#x60;, &#x60;44&#x60;, &#x60;46&#x60;, &#x60;48&#x60;, &#x60;42/164&#x60;, &#x60;46/176&#x60;, &#x60;44S&#x60;.  Если ограничивающая характеристика **размерная сетка** принимает значение &#x60;RU&#x60;, список возможных значений размера сокращается до &#x60;44&#x60;, &#x60;46&#x60;, &#x60;48&#x60;.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class ValueRestrictionDTO  implements \JsonSerializable
{
        /**
     * Идентификатор ограничивающей характеристики.
     *
     * @var int
     * @SerializedName("limitingParameterId")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    public int $limitingParameterId;

    /**
     * Значения ограничивающей характеристики и соответствующие допустимые значения текущей характеристики.
     *
     * @var OptionValuesLimitedDTO[]
     * @SerializedName("limitedValues")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\OptionValuesLimitedDTO")
     * })
     * @Type("array<\OpenAPIServer\Model\OptionValuesLimitedDTO>")
     */
    public array $limitedValues;

    /**
     * Constructor
     *
     * @param int $limitingParameterId
     * @param OptionValuesLimitedDTO[] $limitedValues
     */
    public function __construct(int $limitingParameterId, array $limitedValues)
    {
        $this->limitingParameterId = $limitingParameterId;
        $this->limitedValues = $limitedValues;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['limitingParameterId'] ?? null, 
            isset($data['limitedValues']) ? array_map(fn($item) => OptionValuesLimitedDTO::fromArray($item), $data['limitedValues']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'limitingParameterId' => $this->limitingParameterId, 
            'limitedValues' => $this->limitedValues, 
        ];
    }
}


