<?php
/**
 * GoodsFeedbackStatisticsDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the GoodsFeedbackStatisticsDTO model.
 *
 * Статистическая информация по отзыву.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class GoodsFeedbackStatisticsDTO 
{
        /**
     * Оценка товара.
     *
     * @var int|null
     * @SerializedName("rating")
     * @Type("int")
    */
    #[Assert\NotNull]
    #[Assert\Type("int")]
    #[Assert\GreaterThanOrEqual(1)]
    #[Assert\LessThanOrEqual(5)]
    protected ?int $rating = null;

    /**
     * Количество комментариев к отзыву.  Учитываются только ответы на отзывы, а не дочерние комментарии.
     *
     * @var int|null
     * @SerializedName("commentsCount")
     * @Type("int")
    */
    #[Assert\NotNull]
    #[Assert\Type("int")]
    protected ?int $commentsCount = null;

    /**
     * Рекомендуют ли этот товар.
     *
     * @var bool|null
     * @SerializedName("recommended")
     * @Type("bool")
    */
    #[Assert\Type("bool")]
    protected ?bool $recommended = null;

    /**
     * Количество баллов Плюса, которое автор получил за отзыв.
     *
     * @var int|null
     * @SerializedName("paidAmount")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $paidAmount = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->rating = array_key_exists('rating', $data) ? $data['rating'] : $this->rating;
            $this->commentsCount = array_key_exists('commentsCount', $data) ? $data['commentsCount'] : $this->commentsCount;
            $this->recommended = array_key_exists('recommended', $data) ? $data['recommended'] : $this->recommended;
            $this->paidAmount = array_key_exists('paidAmount', $data) ? $data['paidAmount'] : $this->paidAmount;
        }
    }

    /**
     * Gets rating.
     *
     * @return int|null
     */
    public function getRating(): ?int
    {
        return $this->rating;
    }

    /**
    * Sets rating.
    *
    * @param int|null $rating  Оценка товара.
    *
    * @return $this
    */
    public function setRating(?int $rating): self
    {
        $this->rating = $rating;

        return $this;
    }




    /**
     * Gets commentsCount.
     *
     * @return int|null
     */
    public function getCommentsCount(): ?int
    {
        return $this->commentsCount;
    }

    /**
    * Sets commentsCount.
    *
    * @param int|null $commentsCount  Количество комментариев к отзыву.  Учитываются только ответы на отзывы, а не дочерние комментарии.
    *
    * @return $this
    */
    public function setCommentsCount(?int $commentsCount): self
    {
        $this->commentsCount = $commentsCount;

        return $this;
    }




    /**
     * Gets recommended.
     *
     * @return bool|null
     */
    public function isRecommended(): ?bool
    {
        return $this->recommended;
    }

    /**
    * Sets recommended.
    *
    * @param bool|null $recommended  Рекомендуют ли этот товар.
    *
    * @return $this
    */
    public function setRecommended(?bool $recommended = null): self
    {
        $this->recommended = $recommended;

        return $this;
    }




    /**
     * Gets paidAmount.
     *
     * @return int|null
     */
    public function getPaidAmount(): ?int
    {
        return $this->paidAmount;
    }

    /**
    * Sets paidAmount.
    *
    * @param int|null $paidAmount  Количество баллов Плюса, которое автор получил за отзыв.
    *
    * @return $this
    */
    public function setPaidAmount(?int $paidAmount = null): self
    {
        $this->paidAmount = $paidAmount;

        return $this;
    }



}


