<?php
/**
 * GoodsFeedbackStatisticsDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the GoodsFeedbackStatisticsDTO model.
 *
 * Статистическая информация по отзыву.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class GoodsFeedbackStatisticsDTO  implements \JsonSerializable
{
        /**
     * Оценка товара.
     *
     * @var int
     * @SerializedName("rating")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     * @Assert\GreaterThanOrEqual(1)
     * @Assert\LessThanOrEqual(5)
     */
    public int $rating;

    /**
     * Количество комментариев к отзыву.  Учитываются только ответы на отзывы, а не дочерние комментарии.
     *
     * @var int
     * @SerializedName("commentsCount")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    public int $commentsCount;

    /**
     * Рекомендуют ли этот товар.
     *
     * @var bool|null
     * @SerializedName("recommended")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    public ?bool $recommended;

    /**
     * Количество баллов Плюса, которое автор получил за отзыв.
     *
     * @var int|null
     * @SerializedName("paidAmount")
     * @Assert\Type("int")
     * @Type("int")
     */
    public ?int $paidAmount;

    /**
     * Constructor
     *
     * @param int $rating
     * @param int $commentsCount
     * @param bool|null $recommended
     * @param int|null $paidAmount
     */
    public function __construct(int $rating, int $commentsCount, ?bool $recommended, ?int $paidAmount)
    {
        $this->rating = $rating;
        $this->commentsCount = $commentsCount;
        $this->recommended = $recommended;
        $this->paidAmount = $paidAmount;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['rating'] ?? null, 
            $data['commentsCount'] ?? null, 
            $data['recommended'] ?? null, 
            $data['paidAmount'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'rating' => $this->rating, 
            'commentsCount' => $this->commentsCount, 
            'recommended' => $this->recommended, 
            'paidAmount' => $this->paidAmount, 
        ];
    }
}


