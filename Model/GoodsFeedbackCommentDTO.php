<?php
/**
 * GoodsFeedbackCommentDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the GoodsFeedbackCommentDTO model.
 *
 * Комментарий к отзыву.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class GoodsFeedbackCommentDTO 
{
        /**
     * Идентификатор комментария к отзыву.
     *
     * @var int|null
     * @SerializedName("id")
     * @Type("int")
    */
    #[Assert\NotNull]
    #[Assert\Type("int")]
    protected ?int $id = null;

    /**
     * Текст комментария.
     *
     * @var string|null
     * @SerializedName("text")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    #[Assert\Length(max: 4096)]
    #[Assert\Length(min: 1)]
    protected ?string $text = null;

    /**
     * Может ли продавец изменять комментарий или удалять его.
     *
     * @var bool|null
     * @SerializedName("canModify")
     * @Type("bool")
    */
    #[Assert\Type("bool")]
    protected ?bool $canModify = null;

    /**
     * Идентификатор комментария к отзыву.
     *
     * @var int|null
     * @SerializedName("parentId")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $parentId = null;

    /**
     * @var GoodsFeedbackCommentAuthorDTO|null
     * @SerializedName("author")
     * @Type("OpenAPI\Server\Model\GoodsFeedbackCommentAuthorDTO")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\Type("OpenAPI\Server\Model\GoodsFeedbackCommentAuthorDTO")]
    protected ?GoodsFeedbackCommentAuthorDTO $author = null;

    /**
     * @var GoodsFeedbackCommentStatusType|null
     * @SerializedName("status")
    * @Accessor(getter="getSerializedStatus", setter="setDeserializedStatus")
    * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    protected ?GoodsFeedbackCommentStatusType $status = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->text = array_key_exists('text', $data) ? $data['text'] : $this->text;
            $this->canModify = array_key_exists('canModify', $data) ? $data['canModify'] : $this->canModify;
            $this->parentId = array_key_exists('parentId', $data) ? $data['parentId'] : $this->parentId;
            $this->author = array_key_exists('author', $data) ? $data['author'] : $this->author;
            $this->status = array_key_exists('status', $data) ? $data['status'] : $this->status;
        }
    }

    /**
     * Gets id.
     *
     * @return int|null
     */
    public function getId(): ?int
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param int|null $id  Идентификатор комментария к отзыву.
    *
    * @return $this
    */
    public function setId(?int $id): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets text.
     *
     * @return string|null
     */
    public function getText(): ?string
    {
        return $this->text;
    }

    /**
    * Sets text.
    *
    * @param string|null $text  Текст комментария.
    *
    * @return $this
    */
    public function setText(?string $text): self
    {
        $this->text = $text;

        return $this;
    }




    /**
     * Gets canModify.
     *
     * @return bool|null
     */
    public function isCanModify(): ?bool
    {
        return $this->canModify;
    }

    /**
    * Sets canModify.
    *
    * @param bool|null $canModify  Может ли продавец изменять комментарий или удалять его.
    *
    * @return $this
    */
    public function setCanModify(?bool $canModify = null): self
    {
        $this->canModify = $canModify;

        return $this;
    }




    /**
     * Gets parentId.
     *
     * @return int|null
     */
    public function getParentId(): ?int
    {
        return $this->parentId;
    }

    /**
    * Sets parentId.
    *
    * @param int|null $parentId  Идентификатор комментария к отзыву.
    *
    * @return $this
    */
    public function setParentId(?int $parentId = null): self
    {
        $this->parentId = $parentId;

        return $this;
    }




    /**
     * Gets author.
     *
     * @return GoodsFeedbackCommentAuthorDTO|null
     */
    public function getAuthor(): ?GoodsFeedbackCommentAuthorDTO
    {
        return $this->author;
    }

    /**
    * Sets author.
    *
    * @param GoodsFeedbackCommentAuthorDTO|null $author
    *
    * @return $this
    */
    public function setAuthor(?GoodsFeedbackCommentAuthorDTO $author): self
    {
        $this->author = $author;

        return $this;
    }




    /**
     * Gets status.
     *
     * @return GoodsFeedbackCommentStatusType|null
     */
    public function getStatus(): ?GoodsFeedbackCommentStatusType
    {
        return $this->status;
    }

    /**
    * Sets status.
    *
    * @param GoodsFeedbackCommentStatusType|null $status
    *
    * @return $this
    */
    public function setStatus(?GoodsFeedbackCommentStatusType $status): self
    {
        $this->status = $status;

        return $this;
    }

    /**
    * Gets status for serialization.
    *
    * @return string|null
    */
    public function getSerializedStatus(): string|null
    {
        return $this->status?->value ? (string) $this->status->value : null;
    }

    /**
    * Sets status.
    *
    * @param string|GoodsFeedbackCommentStatusType|null $status
    *
    * @return $this
    */
    public function setDeserializedStatus(string|GoodsFeedbackCommentStatusType|null $status): self
    {
        if (is_string($status)) {
            $status = GoodsFeedbackCommentStatusType::tryFrom($status);
        }

        $this->status = $status;

        return $this;
    }


}


