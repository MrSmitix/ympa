<?php
/**
 * PriceQuarantineVerdictParameterDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the PriceQuarantineVerdictParameterDTO model.
 *
 * Параметр карантина.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class PriceQuarantineVerdictParameterDTO  implements \JsonSerializable
{
        /**
     * @var PriceQuarantineVerdictParamNameType
     * @SerializedName("name")
     * @Assert\NotNull()
     * @Assert\Valid()
        * @Accessor(getter="getSerializedName")
        * @Type("string")
     */
    public PriceQuarantineVerdictParamNameType $name;

    /**
     * Значение параметра.
     *
     * @var string
     * @SerializedName("value")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    public string $value;

    /**
     * Constructor
     *
     * @param PriceQuarantineVerdictParamNameType $name
     * @param string $value
     */
    public function __construct(PriceQuarantineVerdictParamNameType $name, string $value)
    {
        $this->name = $name;
        $this->value = $value;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            isset($data['name']) ? PriceQuarantineVerdictParamNameType::tryFrom($data['name']) : null, 
            $data['value'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'name' => $this->name, 
            'value' => $this->value, 
        ];
    }
}


