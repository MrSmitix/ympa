<?php
/**
 * EnrichedOrderBoxLayoutDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the EnrichedOrderBoxLayoutDTO model.
 *
 * Информация о коробке.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class EnrichedOrderBoxLayoutDTO 
{
        /**
     * Список товаров в коробке.  Если в коробке едет часть большого товара, в списке может быть только один пункт.
     *
     * @var OrderBoxLayoutItemDTO[]|null
     * @SerializedName("items")
     * @Type("array<OpenAPI\Server\Model\OrderBoxLayoutItemDTO>")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\OrderBoxLayoutItemDTO"),
    ])]
    #[Assert\Count(min: 1)]
    protected ?array $items = null;

    /**
     * Идентификатор коробки.
     *
     * @var int|null
     * @SerializedName("boxId")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $boxId = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->items = array_key_exists('items', $data) ? $data['items'] : $this->items;
            $this->boxId = array_key_exists('boxId', $data) ? $data['boxId'] : $this->boxId;
        }
    }

    /**
     * Gets items.
     *
     * @return OrderBoxLayoutItemDTO[]|null
     */
    public function getItems(): ?array
    {
        return $this->items;
    }

    /**
    * Sets items.
    *
    * @param OrderBoxLayoutItemDTO[]|null $items  Список товаров в коробке.  Если в коробке едет часть большого товара, в списке может быть только один пункт.
    *
    * @return $this
    */
    public function setItems(?array $items): self
    {
        $this->items = $items;

        return $this;
    }




    /**
     * Gets boxId.
     *
     * @return int|null
     */
    public function getBoxId(): ?int
    {
        return $this->boxId;
    }

    /**
    * Sets boxId.
    *
    * @param int|null $boxId  Идентификатор коробки.
    *
    * @return $this
    */
    public function setBoxId(?int $boxId = null): self
    {
        $this->boxId = $boxId;

        return $this;
    }



}


