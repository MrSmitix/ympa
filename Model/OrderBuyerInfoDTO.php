<?php
/**
 * OrderBuyerInfoDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OrderBuyerInfoDTO model.
 *
 * Информация о покупателе и его номере телефона.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class OrderBuyerInfoDTO 
{
        /**
     * Идентификатор покупателя.
     *
     * @var string|null
     * @SerializedName("id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $id = null;

    /**
     * Фамилия покупателя.
     *
     * @var string|null
     * @SerializedName("lastName")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $lastName = null;

    /**
     * Имя покупателя.
     *
     * @var string|null
     * @SerializedName("firstName")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $firstName = null;

    /**
     * Отчество покупателя.
     *
     * @var string|null
     * @SerializedName("middleName")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $middleName = null;

    /**
     * @var OrderBuyerType|null
     * @SerializedName("type")
    * @Accessor(getter="getSerializedType", setter="setDeserializedType")
    * @Type("string")
    */
    protected ?OrderBuyerType $type = null;

    /**
     * Подменный номер телефона покупателя. Подробнее о таких номерах читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/orders/dbs/call#fake-number).  Формат номера: &#x60;+&lt;код_страны&gt;&lt;код_региона&gt;&lt;номер_телефона&gt;&#x60;.
     *
     * @var string|null
     * @SerializedName("phone")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $phone = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->lastName = array_key_exists('lastName', $data) ? $data['lastName'] : $this->lastName;
            $this->firstName = array_key_exists('firstName', $data) ? $data['firstName'] : $this->firstName;
            $this->middleName = array_key_exists('middleName', $data) ? $data['middleName'] : $this->middleName;
            $this->type = array_key_exists('type', $data) ? $data['type'] : $this->type;
            $this->phone = array_key_exists('phone', $data) ? $data['phone'] : $this->phone;
        }
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param string|null $id  Идентификатор покупателя.
    *
    * @return $this
    */
    public function setId(?string $id = null): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets lastName.
     *
     * @return string|null
     */
    public function getLastName(): ?string
    {
        return $this->lastName;
    }

    /**
    * Sets lastName.
    *
    * @param string|null $lastName  Фамилия покупателя.
    *
    * @return $this
    */
    public function setLastName(?string $lastName = null): self
    {
        $this->lastName = $lastName;

        return $this;
    }




    /**
     * Gets firstName.
     *
     * @return string|null
     */
    public function getFirstName(): ?string
    {
        return $this->firstName;
    }

    /**
    * Sets firstName.
    *
    * @param string|null $firstName  Имя покупателя.
    *
    * @return $this
    */
    public function setFirstName(?string $firstName = null): self
    {
        $this->firstName = $firstName;

        return $this;
    }




    /**
     * Gets middleName.
     *
     * @return string|null
     */
    public function getMiddleName(): ?string
    {
        return $this->middleName;
    }

    /**
    * Sets middleName.
    *
    * @param string|null $middleName  Отчество покупателя.
    *
    * @return $this
    */
    public function setMiddleName(?string $middleName = null): self
    {
        $this->middleName = $middleName;

        return $this;
    }




    /**
     * Gets type.
     *
     * @return OrderBuyerType|null
     */
    public function getType(): ?OrderBuyerType
    {
        return $this->type;
    }

    /**
    * Sets type.
    *
    * @param OrderBuyerType|null $type
    *
    * @return $this
    */
    public function setType(?OrderBuyerType $type = null): self
    {
        $this->type = $type;

        return $this;
    }

    /**
    * Gets type for serialization.
    *
    * @return string|null
    */
    public function getSerializedType(): string|null
    {
        return $this->type?->value ? (string) $this->type->value : null;
    }

    /**
    * Sets type.
    *
    * @param string|OrderBuyerType|null $type
    *
    * @return $this
    */
    public function setDeserializedType(string|OrderBuyerType|null $type = null): self
    {
        if (is_string($type)) {
            $type = OrderBuyerType::tryFrom($type);
        }

        $this->type = $type;

        return $this;
    }



    /**
     * Gets phone.
     *
     * @return string|null
     */
    public function getPhone(): ?string
    {
        return $this->phone;
    }

    /**
    * Sets phone.
    *
    * @param string|null $phone  Подменный номер телефона покупателя. Подробнее о таких номерах читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/orders/dbs/call#fake-number).  Формат номера: `+<код_страны><код_региона><номер_телефона>`.
    *
    * @return $this
    */
    public function setPhone(?string $phone = null): self
    {
        $this->phone = $phone;

        return $this;
    }



}


