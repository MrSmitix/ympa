<?php
/**
 * OfferManualDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OfferManualDTO model.
 *
 * Инструкция по использованию товара.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class OfferManualDTO 
{
        /**
     * Ссылка на инструкцию.
     *
     * @var string|null
     * @SerializedName("url")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    protected ?string $url = null;

    /**
     * Название инструкции, которое будет отображаться на карточке товара.
     *
     * @var string|null
     * @SerializedName("title")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $title = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->url = array_key_exists('url', $data) ? $data['url'] : $this->url;
            $this->title = array_key_exists('title', $data) ? $data['title'] : $this->title;
        }
    }

    /**
     * Gets url.
     *
     * @return string|null
     */
    public function getUrl(): ?string
    {
        return $this->url;
    }

    /**
    * Sets url.
    *
    * @param string|null $url  Ссылка на инструкцию.
    *
    * @return $this
    */
    public function setUrl(?string $url): self
    {
        $this->url = $url;

        return $this;
    }




    /**
     * Gets title.
     *
     * @return string|null
     */
    public function getTitle(): ?string
    {
        return $this->title;
    }

    /**
    * Sets title.
    *
    * @param string|null $title  Название инструкции, которое будет отображаться на карточке товара.
    *
    * @return $this
    */
    public function setTitle(?string $title = null): self
    {
        $this->title = $title;

        return $this;
    }



}


