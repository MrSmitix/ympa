<?php
/**
 * OrderBoxLayoutItemDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the OrderBoxLayoutItemDTO model.
 *
 * Информация о товаре в коробке.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class OrderBoxLayoutItemDTO  implements \JsonSerializable
{
        /**
     * Идентификатор товара в заказе.  {% cut \&quot;Где его взять\&quot; %}  Идентификатор приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр &#x60;id&#x60; в &#x60;items&#x60;.  {% endcut %}  
     *
     * @var int
     * @SerializedName("id")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    public int $id;

    /**
     * Количество единиц товара в коробке.  Используйте это поле, если в коробке поедут целые товары, не разделенные на части. Не используйте это поле одновременно с &#x60;partialCount&#x60;.
     *
     * @var int|null
     * @SerializedName("fullCount")
     * @Assert\Type("int")
     * @Type("int")
     * @Assert\GreaterThanOrEqual(1)
     */
    public ?int $fullCount;

    /**
     * @var OrderBoxLayoutPartialCountDTO|null
     * @SerializedName("partialCount")
     * @Assert\Type("\OpenAPIServer\Model\OrderBoxLayoutPartialCountDTO")
     * @Type("\OpenAPIServer\Model\OrderBoxLayoutPartialCountDTO")
     */
    public ?OrderBoxLayoutPartialCountDTO $partialCount;

    /**
     * Переданные вами коды маркировки.
     *
     * @var BriefOrderItemInstanceDTO[]|null
     * @SerializedName("instances")
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\BriefOrderItemInstanceDTO")
     * })
     * @Type("array<\OpenAPIServer\Model\BriefOrderItemInstanceDTO>")
     */
    public ?array $instances;

    /**
     * Constructor
     *
     * @param int $id
     * @param int|null $fullCount
     * @param OrderBoxLayoutPartialCountDTO|null $partialCount
     * @param BriefOrderItemInstanceDTO[]|null $instances
     */
    public function __construct(int $id, ?int $fullCount, ?OrderBoxLayoutPartialCountDTO $partialCount, ?array $instances)
    {
        $this->id = $id;
        $this->fullCount = $fullCount;
        $this->partialCount = $partialCount;
        $this->instances = $instances;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['id'] ?? null, 
            $data['fullCount'] ?? null, 
            isset($data['partialCount']) ? OrderBoxLayoutPartialCountDTO::fromArray($data['partialCount']) : null, 
            isset($data['instances']) ? array_map(fn($item) => BriefOrderItemInstanceDTO::fromArray($item), $data['instances']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'id' => $this->id, 
            'fullCount' => $this->fullCount, 
            'partialCount' => $this->partialCount, 
            'instances' => $this->instances, 
        ];
    }
}


