<?php
/**
 * CampaignSettingsScheduleDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the CampaignSettingsScheduleDTO model.
 *
 * Расписание работы службы доставки в своем регионе.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class CampaignSettingsScheduleDTO  implements \JsonSerializable
{
        /**
     * Признак работы службы доставки в государственные праздники. Возможные значения. * &#x60;false&#x60; — служба доставки не работает в праздничные дни. * &#x60;true&#x60; — служба доставки работает в праздничные дни.
     *
     * @var bool|null
     * @SerializedName("availableOnHolidays")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    public ?bool $availableOnHolidays;

    /**
     * Список дней, в которые служба доставки не работает. Дни магазин указал в кабинете продавца на Маркете.
     *
     * @var string[]
     * @SerializedName("customHolidays")
     * @Assert\NotNull()
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    public array $customHolidays;

    /**
     * Список выходных и праздничных дней, в которые служба доставки работает. Дни магазин указал в кабинете продавца на Маркете.
     *
     * @var string[]
     * @SerializedName("customWorkingDays")
     * @Assert\NotNull()
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    public array $customWorkingDays;

    /**
     * @var CampaignSettingsTimePeriodDTO|null
     * @SerializedName("period")
     * @Assert\Type("\OpenAPIServer\Model\CampaignSettingsTimePeriodDTO")
     * @Type("\OpenAPIServer\Model\CampaignSettingsTimePeriodDTO")
     */
    public ?CampaignSettingsTimePeriodDTO $period;

    /**
     * Итоговый список нерабочих дней службы доставки. Список рассчитывается с учетом выходных, нерабочих дней и государственных праздников. Информацию по ним магазин указывает в кабинете продавца на Маркете.
     *
     * @var string[]
     * @SerializedName("totalHolidays")
     * @Assert\NotNull()
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    public array $totalHolidays;

    /**
     * Список выходных дней недели и государственных праздников.
     *
     * @var int[]
     * @SerializedName("weeklyHolidays")
     * @Assert\NotNull()
     * @Assert\All({
     *   @Assert\Type("int")
     * })
     * @Type("array<int>")
     */
    public array $weeklyHolidays;

    /**
     * Constructor
     *
     * @param bool|null $availableOnHolidays
     * @param string[] $customHolidays
     * @param string[] $customWorkingDays
     * @param CampaignSettingsTimePeriodDTO|null $period
     * @param string[] $totalHolidays
     * @param int[] $weeklyHolidays
     */
    public function __construct(?bool $availableOnHolidays, array $customHolidays, array $customWorkingDays, ?CampaignSettingsTimePeriodDTO $period, array $totalHolidays, array $weeklyHolidays)
    {
        $this->availableOnHolidays = $availableOnHolidays;
        $this->customHolidays = $customHolidays;
        $this->customWorkingDays = $customWorkingDays;
        $this->period = $period;
        $this->totalHolidays = $totalHolidays;
        $this->weeklyHolidays = $weeklyHolidays;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['availableOnHolidays'] ?? null, 
            $data['customHolidays'] ?? null, 
            $data['customWorkingDays'] ?? null, 
            isset($data['period']) ? CampaignSettingsTimePeriodDTO::fromArray($data['period']) : null, 
            $data['totalHolidays'] ?? null, 
            $data['weeklyHolidays'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'availableOnHolidays' => $this->availableOnHolidays, 
            'customHolidays' => $this->customHolidays, 
            'customWorkingDays' => $this->customWorkingDays, 
            'period' => $this->period, 
            'totalHolidays' => $this->totalHolidays, 
            'weeklyHolidays' => $this->weeklyHolidays, 
        ];
    }
}


