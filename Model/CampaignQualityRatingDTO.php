<?php
/**
 * CampaignQualityRatingDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the CampaignQualityRatingDTO model.
 *
 * Информация об индексе качества магазина.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class CampaignQualityRatingDTO  implements \JsonSerializable
{
        /**
     * Идентификатор магазина.
     *
     * @var int
     * @SerializedName("campaignId")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    public int $campaignId;

    /**
     * Список значений индекса качества.
     *
     * @var QualityRatingDTO[]
     * @SerializedName("ratings")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\QualityRatingDTO")
     * })
     * @Type("array<\OpenAPIServer\Model\QualityRatingDTO>")
     */
    public array $ratings;

    /**
     * Constructor
     *
     * @param int $campaignId
     * @param QualityRatingDTO[] $ratings
     */
    public function __construct(int $campaignId, array $ratings)
    {
        $this->campaignId = $campaignId;
        $this->ratings = $ratings;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['campaignId'] ?? null, 
            isset($data['ratings']) ? array_map(fn($item) => QualityRatingDTO::fromArray($item), $data['ratings']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'campaignId' => $this->campaignId, 
            'ratings' => $this->ratings, 
        ];
    }
}


