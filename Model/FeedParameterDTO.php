<?php
/**
 * FeedParameterDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the FeedParameterDTO model.
 *
 * Параметр прайс-листа.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class FeedParameterDTO  implements \JsonSerializable
{
        /**
     * Удалить ли значение параметра.  Возможное значение: * &#x60;true&#x60; — удалить значение параметра.  Используется вместе с параметром &#x60;name&#x60;.
     *
     * @var bool|null
     * @SerializedName("deleted")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    public ?bool $deleted;

    /**
     * Название параметра.  Возможное значение: - &#x60;reparseIntervalMinutes&#x60; — период скачивания прайс-листа. Маркет будет скачивать прайс-лист через количество минут, указанное в параметре &#x60;value&#x60;. Например, при &#x60;value&#x3D;1440&#x60;, Маркет будет скачивать прайс-лист один раз в сутки.  {% note alert %}  Несмотря на установленное значение, Маркет скачает прайс-лист один раз в сутки.  {% endnote %}  Обязательный параметр.
     *
     * @var string
     * @SerializedName("name")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    public string $name;

    /**
     * Значения параметра.  Используется вместе с параметром &#x60;name&#x60;.
     *
     * @var int[]|null
     * @SerializedName("values")
     * @Assert\All({
     *   @Assert\Type("int")
     * })
     * @Type("array<int>")
     */
    public ?array $values;

    /**
     * Constructor
     *
     * @param bool|null $deleted
     * @param string $name
     * @param int[]|null $values
     */
    public function __construct(?bool $deleted, string $name, ?array $values)
    {
        $this->deleted = $deleted;
        $this->name = $name;
        $this->values = $values;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['deleted'] ?? null, 
            $data['name'] ?? null, 
            $data['values'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'deleted' => $this->deleted, 
            'name' => $this->name, 
            'values' => $this->values, 
        ];
    }
}


