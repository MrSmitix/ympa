<?php
/**
 * GenerateShowsSalesReportRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the GenerateShowsSalesReportRequest model.
 *
 * Данные, необходимые для генерации отчета.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class GenerateShowsSalesReportRequest 
{
        /**
     * Идентификатор бизнеса.  Указывается, если нужно составить отчет по всем магазинам бизнеса. В запросе обязательно должен быть либо &#x60;businessID&#x60;, либо &#x60;campaignId&#x60;, но не оба сразу.
     *
     * @var int|null
     * @SerializedName("businessId")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $businessId = null;

    /**
     * Идентификатор кампании.  Указывается, если нужно составить отчет по конкретному магазину. В запросе обязательно должен быть либо &#x60;businessID&#x60;, либо &#x60;campaignId&#x60;, но не оба сразу.
     *
     * @var int|null
     * @SerializedName("campaignId")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $campaignId = null;

    /**
     * Начало периода, включительно.
     *
     * @var \DateTime|null
     * @SerializedName("dateFrom")
     * @Type("DateTime<'Y-m-d'>")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\Type("\DateTime")]
    protected ?\DateTime $dateFrom = null;

    /**
     * Конец периода, включительно.
     *
     * @var \DateTime|null
     * @SerializedName("dateTo")
     * @Type("DateTime<'Y-m-d'>")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\Type("\DateTime")]
    protected ?\DateTime $dateTo = null;

    /**
     * @var ShowsSalesGroupingType|null
     * @SerializedName("grouping")
    * @Accessor(getter="getSerializedGrouping", setter="setDeserializedGrouping")
    * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    protected ?ShowsSalesGroupingType $grouping = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->businessId = array_key_exists('businessId', $data) ? $data['businessId'] : $this->businessId;
            $this->campaignId = array_key_exists('campaignId', $data) ? $data['campaignId'] : $this->campaignId;
            $this->dateFrom = array_key_exists('dateFrom', $data) ? $data['dateFrom'] : $this->dateFrom;
            $this->dateTo = array_key_exists('dateTo', $data) ? $data['dateTo'] : $this->dateTo;
            $this->grouping = array_key_exists('grouping', $data) ? $data['grouping'] : $this->grouping;
        }
    }

    /**
     * Gets businessId.
     *
     * @return int|null
     */
    public function getBusinessId(): ?int
    {
        return $this->businessId;
    }

    /**
    * Sets businessId.
    *
    * @param int|null $businessId  Идентификатор бизнеса.  Указывается, если нужно составить отчет по всем магазинам бизнеса. В запросе обязательно должен быть либо `businessID`, либо `campaignId`, но не оба сразу.
    *
    * @return $this
    */
    public function setBusinessId(?int $businessId = null): self
    {
        $this->businessId = $businessId;

        return $this;
    }




    /**
     * Gets campaignId.
     *
     * @return int|null
     */
    public function getCampaignId(): ?int
    {
        return $this->campaignId;
    }

    /**
    * Sets campaignId.
    *
    * @param int|null $campaignId  Идентификатор кампании.  Указывается, если нужно составить отчет по конкретному магазину. В запросе обязательно должен быть либо `businessID`, либо `campaignId`, но не оба сразу.
    *
    * @return $this
    */
    public function setCampaignId(?int $campaignId = null): self
    {
        $this->campaignId = $campaignId;

        return $this;
    }




    /**
     * Gets dateFrom.
     *
     * @return \DateTime|null
     */
    public function getDateFrom(): ?\DateTime
    {
        return $this->dateFrom;
    }

    /**
    * Sets dateFrom.
    *
    * @param \DateTime|null $dateFrom  Начало периода, включительно.
    *
    * @return $this
    */
    public function setDateFrom(?\DateTime $dateFrom): self
    {
        $this->dateFrom = $dateFrom;

        return $this;
    }




    /**
     * Gets dateTo.
     *
     * @return \DateTime|null
     */
    public function getDateTo(): ?\DateTime
    {
        return $this->dateTo;
    }

    /**
    * Sets dateTo.
    *
    * @param \DateTime|null $dateTo  Конец периода, включительно.
    *
    * @return $this
    */
    public function setDateTo(?\DateTime $dateTo): self
    {
        $this->dateTo = $dateTo;

        return $this;
    }




    /**
     * Gets grouping.
     *
     * @return ShowsSalesGroupingType|null
     */
    public function getGrouping(): ?ShowsSalesGroupingType
    {
        return $this->grouping;
    }

    /**
    * Sets grouping.
    *
    * @param ShowsSalesGroupingType|null $grouping
    *
    * @return $this
    */
    public function setGrouping(?ShowsSalesGroupingType $grouping): self
    {
        $this->grouping = $grouping;

        return $this;
    }

    /**
    * Gets grouping for serialization.
    *
    * @return string|null
    */
    public function getSerializedGrouping(): string|null
    {
        return $this->grouping?->value ? (string) $this->grouping->value : null;
    }

    /**
    * Sets grouping.
    *
    * @param string|ShowsSalesGroupingType|null $grouping
    *
    * @return $this
    */
    public function setDeserializedGrouping(string|ShowsSalesGroupingType|null $grouping): self
    {
        if (is_string($grouping)) {
            $grouping = ShowsSalesGroupingType::tryFrom($grouping);
        }

        $this->grouping = $grouping;

        return $this;
    }


}


