<?php
/**
 * OfferPriceResponseDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OfferPriceResponseDTO model.
 *
 * Информация об установленной цене на товар.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class OfferPriceResponseDTO 
{
        /**
     * Идентификатор предложения из прайс-листа.
     *
     * @var string|null
     * @SerializedName("id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $id = null;

    /**
     * @var PriceDTO|null
     * @SerializedName("price")
     * @Type("OpenAPI\Server\Model\PriceDTO")
    */
    #[Assert\Type("OpenAPI\Server\Model\PriceDTO")]
    protected ?PriceDTO $price = null;

    /**
     * SKU на Маркете.
     *
     * @var int|null
     * @SerializedName("marketSku")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $marketSku = null;

    /**
     * Дата и время последнего обновления цены на товар.
     *
     * @var \DateTime|null
     * @SerializedName("updatedAt")
     * @Type("DateTime")
    */
    #[Assert\Type("\DateTime")]
    protected ?\DateTime $updatedAt = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->price = array_key_exists('price', $data) ? $data['price'] : $this->price;
            $this->marketSku = array_key_exists('marketSku', $data) ? $data['marketSku'] : $this->marketSku;
            $this->updatedAt = array_key_exists('updatedAt', $data) ? $data['updatedAt'] : $this->updatedAt;
        }
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param string|null $id  Идентификатор предложения из прайс-листа.
    *
    * @return $this
    */
    public function setId(?string $id = null): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets price.
     *
     * @return PriceDTO|null
     */
    public function getPrice(): ?PriceDTO
    {
        return $this->price;
    }

    /**
    * Sets price.
    *
    * @param PriceDTO|null $price
    *
    * @return $this
    */
    public function setPrice(?PriceDTO $price = null): self
    {
        $this->price = $price;

        return $this;
    }




    /**
     * Gets marketSku.
     *
     * @return int|null
     */
    public function getMarketSku(): ?int
    {
        return $this->marketSku;
    }

    /**
    * Sets marketSku.
    *
    * @param int|null $marketSku  SKU на Маркете.
    *
    * @return $this
    */
    public function setMarketSku(?int $marketSku = null): self
    {
        $this->marketSku = $marketSku;

        return $this;
    }




    /**
     * Gets updatedAt.
     *
     * @return \DateTime|null
     */
    public function getUpdatedAt(): ?\DateTime
    {
        return $this->updatedAt;
    }

    /**
    * Sets updatedAt.
    *
    * @param \DateTime|null $updatedAt  Дата и время последнего обновления цены на товар.
    *
    * @return $this
    */
    public function setUpdatedAt(?\DateTime $updatedAt = null): self
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }



}


