<?php
/**
 * PromoOfferDiscountParamsDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the PromoOfferDiscountParamsDTO model.
 *
 * Параметры товара в акции с типом &#x60;DIRECT_DISCOUNT&#x60; или &#x60;BLUE_FLASH&#x60;.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class PromoOfferDiscountParamsDTO  implements \JsonSerializable
{
        /**
     * Зачеркнутая цена — та, по которой товар продавался до акции.  Указывается в рублях.  Возвращается, только если товар участвует в акции.
     *
     * @var int|null
     * @SerializedName("price")
     * @Assert\Type("int")
     * @Type("int")
     */
    public ?int $price;

    /**
     * Цена по акции — та, по которой вы хотите продавать товар.  Указывается в рублях.  Возвращается, только если товар участвует в акции.
     *
     * @var int|null
     * @SerializedName("promoPrice")
     * @Assert\Type("int")
     * @Type("int")
     */
    public ?int $promoPrice;

    /**
     * Максимально возможная цена для участия в акции.  Указывается в рублях.  Возвращается для всех товаров.
     *
     * @var int
     * @SerializedName("maxPromoPrice")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    public int $maxPromoPrice;

    /**
     * Constructor
     *
     * @param int|null $price
     * @param int|null $promoPrice
     * @param int $maxPromoPrice
     */
    public function __construct(?int $price, ?int $promoPrice, int $maxPromoPrice)
    {
        $this->price = $price;
        $this->promoPrice = $promoPrice;
        $this->maxPromoPrice = $maxPromoPrice;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['price'] ?? null, 
            $data['promoPrice'] ?? null, 
            $data['maxPromoPrice'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'price' => $this->price, 
            'promoPrice' => $this->promoPrice, 
            'maxPromoPrice' => $this->maxPromoPrice, 
        ];
    }
}


