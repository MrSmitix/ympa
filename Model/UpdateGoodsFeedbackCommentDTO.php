<?php
/**
 * UpdateGoodsFeedbackCommentDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the UpdateGoodsFeedbackCommentDTO model.
 *
 * Комментарий к отзыву или другому комментарию.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class UpdateGoodsFeedbackCommentDTO  implements \JsonSerializable
{
        /**
     * Идентификатор комментария к отзыву.
     *
     * @var int|null
     * @SerializedName("id")
     * @Assert\Type("int")
     * @Type("int")
     */
    public ?int $id;

    /**
     * Идентификатор комментария к отзыву.
     *
     * @var int|null
     * @SerializedName("parentId")
     * @Assert\Type("int")
     * @Type("int")
     */
    public ?int $parentId;

    /**
     * Текст комментария.
     *
     * @var string
     * @SerializedName("text")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   max = 4096
     * )
     * @Assert\Length(
     *   min = 1
     * )
     */
    public string $text;

    /**
     * Constructor
     *
     * @param int|null $id
     * @param int|null $parentId
     * @param string $text
     */
    public function __construct(?int $id, ?int $parentId, string $text)
    {
        $this->id = $id;
        $this->parentId = $parentId;
        $this->text = $text;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['id'] ?? null, 
            $data['parentId'] ?? null, 
            $data['text'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'id' => $this->id, 
            'parentId' => $this->parentId, 
            'text' => $this->text, 
        ];
    }
}


