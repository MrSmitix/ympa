<?php
/**
 * SearchShipmentsRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the SearchShipmentsRequest model.
 *
 * Запрос информации об отгрузках.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class SearchShipmentsRequest  implements \JsonSerializable
{
        /**
     * Начальная дата для фильтрации по дате отгрузки (включительно).  Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;.
     *
     * @var \DateTime
     * @SerializedName("dateFrom")
     * @Assert\NotNull()
     * @Assert\Type("\Date")
     * @Type("DateTime<'Y-m-d'>")
     */
    public \DateTime $dateFrom;

    /**
     * Конечная дата для фильтрации по дате отгрузки (включительно).  Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;.
     *
     * @var \DateTime
     * @SerializedName("dateTo")
     * @Assert\NotNull()
     * @Assert\Type("\Date")
     * @Type("DateTime<'Y-m-d'>")
     */
    public \DateTime $dateTo;

    /**
     * Список статусов отгрузок.
     *
     * @var ShipmentStatusType[]|null
     * @SerializedName("statuses")
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\ShipmentStatusType")
     * })
     * @Accessor(getter="getSerializedStatuses")
     * @Type("array<string>")
     * @Assert\Count(
     *   min = 1
     * )
     */
    public ?array $statuses;

    /**
     * Список идентификаторов заказов из отгрузок.
     *
     * @var int[]|null
     * @SerializedName("orderIds")
     * @Assert\All({
     *   @Assert\Type("int")
     * })
     * @Type("array<int>")
     * @Assert\Count(
     *   min = 1
     * )
     */
    public ?array $orderIds;

    /**
     * Возвращать ли отмененные заказы.  Значение по умолчанию — &#x60;true&#x60;. Если возвращать отмененные заказы не нужно, передайте значение &#x60;false&#x60;.
     *
     * @var bool|null
     * @SerializedName("cancelledOrders")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    public ?bool $cancelledOrders = true;

    /**
     * Constructor
     *
     * @param \DateTime $dateFrom
     * @param \DateTime $dateTo
     * @param ShipmentStatusType[]|null $statuses
     * @param int[]|null $orderIds
     * @param bool|null $cancelledOrders
     */
    public function __construct(\DateTime $dateFrom, \DateTime $dateTo, ?array $statuses, ?array $orderIds, ?bool $cancelledOrders)
    {
        $this->dateFrom = $dateFrom;
        $this->dateTo = $dateTo;
        $this->statuses = $statuses;
        $this->orderIds = $orderIds;
        $this->cancelledOrders = $cancelledOrders;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['dateFrom'] ?? null, 
            $data['dateTo'] ?? null, 
            isset($data['statuses']) ? array_map(fn($item) => ShipmentStatusType::tryFrom($item), $data['statuses']) : null, 
            $data['orderIds'] ?? null, 
            $data['cancelledOrders'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'dateFrom' => $this->dateFrom, 
            'dateTo' => $this->dateTo, 
            'statuses' => $this->statuses, 
            'orderIds' => $this->orderIds, 
            'cancelledOrders' => $this->cancelledOrders, 
        ];
    }
}


