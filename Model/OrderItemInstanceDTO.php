<?php
/**
 * OrderItemInstanceDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the OrderItemInstanceDTO model.
 *
 * Переданные вами для данной позиции коды маркировки или УИНы. Коды «Честного знака» возвращаются в двух вариантах — с криптохвостом и без.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class OrderItemInstanceDTO  implements \JsonSerializable
{
        /**
     * Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/) без криптохвоста.
     *
     * @var string|null
     * @SerializedName("cis")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $cis;

    /**
     * Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/) с криптохвостом.
     *
     * @var string|null
     * @SerializedName("cisFull")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $cisFull;

    /**
     * УИН ювелирного изделия (16-значный код) Производитель получает УИН, когда регистрирует изделие в системе контроля за оборотом драгоценных металлов и камней — ГИИС ДМДК.
     *
     * @var string|null
     * @SerializedName("uin")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $uin;

    /**
     * Регистрационный номер партии товара.  Представляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации.
     *
     * @var string|null
     * @SerializedName("rnpt")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $rnpt;

    /**
     * Грузовая таможенная декларация.  Представляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации.
     *
     * @var string|null
     * @SerializedName("gtd")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $gtd;

    /**
     * Constructor
     *
     * @param string|null $cis
     * @param string|null $cisFull
     * @param string|null $uin
     * @param string|null $rnpt
     * @param string|null $gtd
     */
    public function __construct(?string $cis, ?string $cisFull, ?string $uin, ?string $rnpt, ?string $gtd)
    {
        $this->cis = $cis;
        $this->cisFull = $cisFull;
        $this->uin = $uin;
        $this->rnpt = $rnpt;
        $this->gtd = $gtd;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['cis'] ?? null, 
            $data['cisFull'] ?? null, 
            $data['uin'] ?? null, 
            $data['rnpt'] ?? null, 
            $data['gtd'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'cis' => $this->cis, 
            'cisFull' => $this->cisFull, 
            'uin' => $this->uin, 
            'rnpt' => $this->rnpt, 
            'gtd' => $this->gtd, 
        ];
    }
}


