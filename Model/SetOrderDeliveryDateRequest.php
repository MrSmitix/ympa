<?php
/**
 * SetOrderDeliveryDateRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the SetOrderDeliveryDateRequest model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class SetOrderDeliveryDateRequest 
{
        /**
     * @var OrderDeliveryDateDTO|null
     * @SerializedName("dates")
     * @Type("OpenAPI\Server\Model\OrderDeliveryDateDTO")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\Type("OpenAPI\Server\Model\OrderDeliveryDateDTO")]
    protected ?OrderDeliveryDateDTO $dates = null;

    /**
     * @var OrderDeliveryDateReasonType|null
     * @SerializedName("reason")
    * @Accessor(getter="getSerializedReason", setter="setDeserializedReason")
    * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    protected ?OrderDeliveryDateReasonType $reason = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->dates = array_key_exists('dates', $data) ? $data['dates'] : $this->dates;
            $this->reason = array_key_exists('reason', $data) ? $data['reason'] : $this->reason;
        }
    }

    /**
     * Gets dates.
     *
     * @return OrderDeliveryDateDTO|null
     */
    public function getDates(): ?OrderDeliveryDateDTO
    {
        return $this->dates;
    }

    /**
    * Sets dates.
    *
    * @param OrderDeliveryDateDTO|null $dates
    *
    * @return $this
    */
    public function setDates(?OrderDeliveryDateDTO $dates): self
    {
        $this->dates = $dates;

        return $this;
    }




    /**
     * Gets reason.
     *
     * @return OrderDeliveryDateReasonType|null
     */
    public function getReason(): ?OrderDeliveryDateReasonType
    {
        return $this->reason;
    }

    /**
    * Sets reason.
    *
    * @param OrderDeliveryDateReasonType|null $reason
    *
    * @return $this
    */
    public function setReason(?OrderDeliveryDateReasonType $reason): self
    {
        $this->reason = $reason;

        return $this;
    }

    /**
    * Gets reason for serialization.
    *
    * @return string|null
    */
    public function getSerializedReason(): string|null
    {
        return $this->reason?->value ? (string) $this->reason->value : null;
    }

    /**
    * Sets reason.
    *
    * @param string|OrderDeliveryDateReasonType|null $reason
    *
    * @return $this
    */
    public function setDeserializedReason(string|OrderDeliveryDateReasonType|null $reason): self
    {
        if (is_string($reason)) {
            $reason = OrderDeliveryDateReasonType::tryFrom($reason);
        }

        $this->reason = $reason;

        return $this;
    }


}


