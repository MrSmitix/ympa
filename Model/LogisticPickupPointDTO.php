<?php
/**
 * LogisticPickupPointDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the LogisticPickupPointDTO model.
 *
 * Описание пункта вывоза для возврата.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class LogisticPickupPointDTO 
{
        /**
     * Идентификатор пункта вывоза.
     *
     * @var int|null
     * @SerializedName("id")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $id = null;

    /**
     * Название пункта вывоза.
     *
     * @var string|null
     * @SerializedName("name")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $name = null;

    /**
     * @var PickupAddressDTO|null
     * @SerializedName("address")
     * @Type("OpenAPI\Server\Model\PickupAddressDTO")
    */
    #[Assert\Type("OpenAPI\Server\Model\PickupAddressDTO")]
    protected ?PickupAddressDTO $address = null;

    /**
     * Дополнительные инструкции к вывозу.
     *
     * @var string|null
     * @SerializedName("instruction")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $instruction = null;

    /**
     * @var LogisticPointType|null
     * @SerializedName("type")
    * @Accessor(getter="getSerializedType", setter="setDeserializedType")
    * @Type("string")
    */
    protected ?LogisticPointType $type = null;

    /**
     * Идентификатор логистического партнера, к которому относится логистическая точка.
     *
     * @var int|null
     * @SerializedName("logisticPartnerId")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $logisticPartnerId = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->name = array_key_exists('name', $data) ? $data['name'] : $this->name;
            $this->address = array_key_exists('address', $data) ? $data['address'] : $this->address;
            $this->instruction = array_key_exists('instruction', $data) ? $data['instruction'] : $this->instruction;
            $this->type = array_key_exists('type', $data) ? $data['type'] : $this->type;
            $this->logisticPartnerId = array_key_exists('logisticPartnerId', $data) ? $data['logisticPartnerId'] : $this->logisticPartnerId;
        }
    }

    /**
     * Gets id.
     *
     * @return int|null
     */
    public function getId(): ?int
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param int|null $id  Идентификатор пункта вывоза.
    *
    * @return $this
    */
    public function setId(?int $id = null): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
    * Sets name.
    *
    * @param string|null $name  Название пункта вывоза.
    *
    * @return $this
    */
    public function setName(?string $name = null): self
    {
        $this->name = $name;

        return $this;
    }




    /**
     * Gets address.
     *
     * @return PickupAddressDTO|null
     */
    public function getAddress(): ?PickupAddressDTO
    {
        return $this->address;
    }

    /**
    * Sets address.
    *
    * @param PickupAddressDTO|null $address
    *
    * @return $this
    */
    public function setAddress(?PickupAddressDTO $address = null): self
    {
        $this->address = $address;

        return $this;
    }




    /**
     * Gets instruction.
     *
     * @return string|null
     */
    public function getInstruction(): ?string
    {
        return $this->instruction;
    }

    /**
    * Sets instruction.
    *
    * @param string|null $instruction  Дополнительные инструкции к вывозу.
    *
    * @return $this
    */
    public function setInstruction(?string $instruction = null): self
    {
        $this->instruction = $instruction;

        return $this;
    }




    /**
     * Gets type.
     *
     * @return LogisticPointType|null
     */
    public function getType(): ?LogisticPointType
    {
        return $this->type;
    }

    /**
    * Sets type.
    *
    * @param LogisticPointType|null $type
    *
    * @return $this
    */
    public function setType(?LogisticPointType $type = null): self
    {
        $this->type = $type;

        return $this;
    }

    /**
    * Gets type for serialization.
    *
    * @return string|null
    */
    public function getSerializedType(): string|null
    {
        return $this->type?->value ? (string) $this->type->value : null;
    }

    /**
    * Sets type.
    *
    * @param string|LogisticPointType|null $type
    *
    * @return $this
    */
    public function setDeserializedType(string|LogisticPointType|null $type = null): self
    {
        if (is_string($type)) {
            $type = LogisticPointType::tryFrom($type);
        }

        $this->type = $type;

        return $this;
    }



    /**
     * Gets logisticPartnerId.
     *
     * @return int|null
     */
    public function getLogisticPartnerId(): ?int
    {
        return $this->logisticPartnerId;
    }

    /**
    * Sets logisticPartnerId.
    *
    * @param int|null $logisticPartnerId  Идентификатор логистического партнера, к которому относится логистическая точка.
    *
    * @return $this
    */
    public function setLogisticPartnerId(?int $logisticPartnerId = null): self
    {
        $this->logisticPartnerId = $logisticPartnerId;

        return $this;
    }



}


