<?php
/**
 * GetOutletsResponse
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the GetOutletsResponse model.
 *
 * Ответ на запрос информации о точках продаж.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class GetOutletsResponse  implements \JsonSerializable
{
        /**
     * Информация о точках продаж.
     *
     * @var FullOutletDTO[]
     * @SerializedName("outlets")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\FullOutletDTO")
     * })
     * @Type("array<\OpenAPIServer\Model\FullOutletDTO>")
     */
    public array $outlets;

    /**
     * @var ScrollingPagerDTO|null
     * @SerializedName("paging")
     * @Assert\Type("\OpenAPIServer\Model\ScrollingPagerDTO")
     * @Type("\OpenAPIServer\Model\ScrollingPagerDTO")
     */
    public ?ScrollingPagerDTO $paging;

    /**
     * @var FlippingPagerDTO|null
     * @SerializedName("pager")
     * @Assert\Type("\OpenAPIServer\Model\FlippingPagerDTO")
     * @Type("\OpenAPIServer\Model\FlippingPagerDTO")
     */
    public ?FlippingPagerDTO $pager;

    /**
     * Constructor
     *
     * @param FullOutletDTO[] $outlets
     * @param ScrollingPagerDTO|null $paging
     * @param FlippingPagerDTO|null $pager
     */
    public function __construct(array $outlets, ?ScrollingPagerDTO $paging, ?FlippingPagerDTO $pager)
    {
        $this->outlets = $outlets;
        $this->paging = $paging;
        $this->pager = $pager;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            isset($data['outlets']) ? array_map(fn($item) => FullOutletDTO::fromArray($item), $data['outlets']) : null, 
            isset($data['paging']) ? ScrollingPagerDTO::fromArray($data['paging']) : null, 
            isset($data['pager']) ? FlippingPagerDTO::fromArray($data['pager']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'outlets' => $this->outlets, 
            'paging' => $this->paging, 
            'pager' => $this->pager, 
        ];
    }
}


