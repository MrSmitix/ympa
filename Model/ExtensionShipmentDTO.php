<?php
/**
 * ExtensionShipmentDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ExtensionShipmentDTO model.
 *
 * Информация об отгрузке.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class ExtensionShipmentDTO 
{
        /**
     * @var ShipmentStatusChangeDTO|null
     * @SerializedName("currentStatus")
     * @Type("OpenAPI\Server\Model\ShipmentStatusChangeDTO")
    */
    #[Assert\Type("OpenAPI\Server\Model\ShipmentStatusChangeDTO")]
    protected ?ShipmentStatusChangeDTO $currentStatus = null;

    /**
     * Доступные действия над отгрузкой.
     *
     * @var ShipmentActionType[]|null
     * @SerializedName("availableActions")
     * @Accessor(getter="getSerializedAvailableActions", setter="setDeserializedAvailableActions")
     * @Type("array<string>")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\ShipmentActionType"),
    ])]
    protected ?array $availableActions = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->currentStatus = array_key_exists('currentStatus', $data) ? $data['currentStatus'] : $this->currentStatus;
            $this->availableActions = array_key_exists('availableActions', $data) ? $data['availableActions'] : $this->availableActions;
        }
    }

    /**
     * Gets currentStatus.
     *
     * @return ShipmentStatusChangeDTO|null
     */
    public function getCurrentStatus(): ?ShipmentStatusChangeDTO
    {
        return $this->currentStatus;
    }

    /**
    * Sets currentStatus.
    *
    * @param ShipmentStatusChangeDTO|null $currentStatus
    *
    * @return $this
    */
    public function setCurrentStatus(?ShipmentStatusChangeDTO $currentStatus = null): self
    {
        $this->currentStatus = $currentStatus;

        return $this;
    }




    /**
     * Gets availableActions.
     *
     * @return ShipmentActionType[]|null
     */
    public function getAvailableActions(): ?array
    {
        return $this->availableActions;
    }

    /**
    * Sets availableActions.
    *
    * @param ShipmentActionType[]|null $availableActions  Доступные действия над отгрузкой.
    *
    * @return $this
    */
    public function setAvailableActions(?array $availableActions): self
    {
        $this->availableActions = $availableActions;

        return $this;
    }


    /**
    * Gets availableActions for serialization.
    *
    * @return array
    */
    public function getSerializedAvailableActions(): array
    {
        return array_map(
            static fn ($value) => $value?->value ? (string) $value->value : null,
            $this->availableActions ?? []
        );
    }

    /**
    * Sets availableActions.
    *
    * @param ?array $availableActions
    *
    * @return $this
    */
    public function setDeserializedAvailableActions(?array $availableActions = []): self
    {
        $this->availableActions = array_map(
            static function ($value) {
                if (is_string($value)) {
                    $value = ShipmentActionType::tryFrom($value);
                }

                return $value;
            },
            $availableActions ?? []
        );

        return $this;
    }

}


