<?php
/**
 * OutletWorkingScheduleItemDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the OutletWorkingScheduleItemDTO model.
 *
 * Расписание работы точки продаж.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class OutletWorkingScheduleItemDTO  implements \JsonSerializable
{
        /**
     * @var DayOfWeekType
     * @SerializedName("startDay")
     * @Assert\NotNull()
     * @Assert\Valid()
        * @Accessor(getter="getSerializedStartDay")
        * @Type("string")
     */
    public DayOfWeekType $startDay;

    /**
     * @var DayOfWeekType
     * @SerializedName("endDay")
     * @Assert\NotNull()
     * @Assert\Valid()
        * @Accessor(getter="getSerializedEndDay")
        * @Type("string")
     */
    public DayOfWeekType $endDay;

    /**
     * Точка продаж работает c указанного часа.  Формат: &#x60;ЧЧ:ММ&#x60;.
     *
     * @var string
     * @SerializedName("startTime")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   min = 1
     * )
     */
    public string $startTime;

    /**
     * Точка продаж работает до указанного часа.  Формат: &#x60;ЧЧ:ММ&#x60;.
     *
     * @var string
     * @SerializedName("endTime")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     * @Assert\Length(
     *   min = 1
     * )
     */
    public string $endTime;

    /**
     * Constructor
     *
     * @param DayOfWeekType $startDay
     * @param DayOfWeekType $endDay
     * @param string $startTime
     * @param string $endTime
     */
    public function __construct(DayOfWeekType $startDay, DayOfWeekType $endDay, string $startTime, string $endTime)
    {
        $this->startDay = $startDay;
        $this->endDay = $endDay;
        $this->startTime = $startTime;
        $this->endTime = $endTime;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            isset($data['startDay']) ? DayOfWeekType::tryFrom($data['startDay']) : null, 
            isset($data['endDay']) ? DayOfWeekType::tryFrom($data['endDay']) : null, 
            $data['startTime'] ?? null, 
            $data['endTime'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'startDay' => $this->startDay, 
            'endDay' => $this->endDay, 
            'startTime' => $this->startTime, 
            'endTime' => $this->endTime, 
        ];
    }
}


