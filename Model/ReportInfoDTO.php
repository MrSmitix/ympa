<?php
/**
 * ReportInfoDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ReportInfoDTO model.
 *
 * Статус генерации и ссылка на готовый отчет.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class ReportInfoDTO 
{
        /**
     * @var ReportStatusType|null
     * @SerializedName("status")
    * @Accessor(getter="getSerializedStatus", setter="setDeserializedStatus")
    * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    protected ?ReportStatusType $status = null;

    /**
     * @var ReportSubStatusType|null
     * @SerializedName("subStatus")
    * @Accessor(getter="getSerializedSubStatus", setter="setDeserializedSubStatus")
    * @Type("string")
    */
    protected ?ReportSubStatusType $subStatus = null;

    /**
     * Дата и время запроса на генерацию.
     *
     * @var \DateTime|null
     * @SerializedName("generationRequestedAt")
     * @Type("DateTime")
    */
    #[Assert\NotNull]
    #[Assert\Type("\DateTime")]
    protected ?\DateTime $generationRequestedAt = null;

    /**
     * Дата и время завершения генерации.
     *
     * @var \DateTime|null
     * @SerializedName("generationFinishedAt")
     * @Type("DateTime")
    */
    #[Assert\Type("\DateTime")]
    protected ?\DateTime $generationFinishedAt = null;

    /**
     * Ссылка на готовый отчет.
     *
     * @var string|null
     * @SerializedName("file")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $file = null;

    /**
     * Ожидаемая продолжительность генерации в миллисекундах.
     *
     * @var int|null
     * @SerializedName("estimatedGenerationTime")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $estimatedGenerationTime = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->status = array_key_exists('status', $data) ? $data['status'] : $this->status;
            $this->subStatus = array_key_exists('subStatus', $data) ? $data['subStatus'] : $this->subStatus;
            $this->generationRequestedAt = array_key_exists('generationRequestedAt', $data) ? $data['generationRequestedAt'] : $this->generationRequestedAt;
            $this->generationFinishedAt = array_key_exists('generationFinishedAt', $data) ? $data['generationFinishedAt'] : $this->generationFinishedAt;
            $this->file = array_key_exists('file', $data) ? $data['file'] : $this->file;
            $this->estimatedGenerationTime = array_key_exists('estimatedGenerationTime', $data) ? $data['estimatedGenerationTime'] : $this->estimatedGenerationTime;
        }
    }

    /**
     * Gets status.
     *
     * @return ReportStatusType|null
     */
    public function getStatus(): ?ReportStatusType
    {
        return $this->status;
    }

    /**
    * Sets status.
    *
    * @param ReportStatusType|null $status
    *
    * @return $this
    */
    public function setStatus(?ReportStatusType $status): self
    {
        $this->status = $status;

        return $this;
    }

    /**
    * Gets status for serialization.
    *
    * @return string|null
    */
    public function getSerializedStatus(): string|null
    {
        return $this->status?->value ? (string) $this->status->value : null;
    }

    /**
    * Sets status.
    *
    * @param string|ReportStatusType|null $status
    *
    * @return $this
    */
    public function setDeserializedStatus(string|ReportStatusType|null $status): self
    {
        if (is_string($status)) {
            $status = ReportStatusType::tryFrom($status);
        }

        $this->status = $status;

        return $this;
    }



    /**
     * Gets subStatus.
     *
     * @return ReportSubStatusType|null
     */
    public function getSubStatus(): ?ReportSubStatusType
    {
        return $this->subStatus;
    }

    /**
    * Sets subStatus.
    *
    * @param ReportSubStatusType|null $subStatus
    *
    * @return $this
    */
    public function setSubStatus(?ReportSubStatusType $subStatus = null): self
    {
        $this->subStatus = $subStatus;

        return $this;
    }

    /**
    * Gets subStatus for serialization.
    *
    * @return string|null
    */
    public function getSerializedSubStatus(): string|null
    {
        return $this->subStatus?->value ? (string) $this->subStatus->value : null;
    }

    /**
    * Sets subStatus.
    *
    * @param string|ReportSubStatusType|null $subStatus
    *
    * @return $this
    */
    public function setDeserializedSubStatus(string|ReportSubStatusType|null $subStatus = null): self
    {
        if (is_string($subStatus)) {
            $subStatus = ReportSubStatusType::tryFrom($subStatus);
        }

        $this->subStatus = $subStatus;

        return $this;
    }



    /**
     * Gets generationRequestedAt.
     *
     * @return \DateTime|null
     */
    public function getGenerationRequestedAt(): ?\DateTime
    {
        return $this->generationRequestedAt;
    }

    /**
    * Sets generationRequestedAt.
    *
    * @param \DateTime|null $generationRequestedAt  Дата и время запроса на генерацию.
    *
    * @return $this
    */
    public function setGenerationRequestedAt(?\DateTime $generationRequestedAt): self
    {
        $this->generationRequestedAt = $generationRequestedAt;

        return $this;
    }




    /**
     * Gets generationFinishedAt.
     *
     * @return \DateTime|null
     */
    public function getGenerationFinishedAt(): ?\DateTime
    {
        return $this->generationFinishedAt;
    }

    /**
    * Sets generationFinishedAt.
    *
    * @param \DateTime|null $generationFinishedAt  Дата и время завершения генерации.
    *
    * @return $this
    */
    public function setGenerationFinishedAt(?\DateTime $generationFinishedAt = null): self
    {
        $this->generationFinishedAt = $generationFinishedAt;

        return $this;
    }




    /**
     * Gets file.
     *
     * @return string|null
     */
    public function getFile(): ?string
    {
        return $this->file;
    }

    /**
    * Sets file.
    *
    * @param string|null $file  Ссылка на готовый отчет.
    *
    * @return $this
    */
    public function setFile(?string $file = null): self
    {
        $this->file = $file;

        return $this;
    }




    /**
     * Gets estimatedGenerationTime.
     *
     * @return int|null
     */
    public function getEstimatedGenerationTime(): ?int
    {
        return $this->estimatedGenerationTime;
    }

    /**
    * Sets estimatedGenerationTime.
    *
    * @param int|null $estimatedGenerationTime  Ожидаемая продолжительность генерации в миллисекундах.
    *
    * @return $this
    */
    public function setEstimatedGenerationTime(?int $estimatedGenerationTime = null): self
    {
        $this->estimatedGenerationTime = $estimatedGenerationTime;

        return $this;
    }



}


