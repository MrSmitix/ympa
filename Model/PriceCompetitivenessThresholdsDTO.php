<?php
/**
 * PriceCompetitivenessThresholdsDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the PriceCompetitivenessThresholdsDTO model.
 *
 * Максимальные значения цены, при которых она является привлекательной или умеренной.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class PriceCompetitivenessThresholdsDTO  implements \JsonSerializable
{
        /**
     * @var BasePriceDTO|null
     * @SerializedName("optimalPrice")
     * @Assert\Type("\OpenAPIServer\Model\BasePriceDTO")
     * @Type("\OpenAPIServer\Model\BasePriceDTO")
     */
    public ?BasePriceDTO $optimalPrice;

    /**
     * @var BasePriceDTO|null
     * @SerializedName("averagePrice")
     * @Assert\Type("\OpenAPIServer\Model\BasePriceDTO")
     * @Type("\OpenAPIServer\Model\BasePriceDTO")
     */
    public ?BasePriceDTO $averagePrice;

    /**
     * Constructor
     *
     * @param BasePriceDTO|null $optimalPrice
     * @param BasePriceDTO|null $averagePrice
     */
    public function __construct(?BasePriceDTO $optimalPrice, ?BasePriceDTO $averagePrice)
    {
        $this->optimalPrice = $optimalPrice;
        $this->averagePrice = $averagePrice;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            isset($data['optimalPrice']) ? BasePriceDTO::fromArray($data['optimalPrice']) : null, 
            isset($data['averagePrice']) ? BasePriceDTO::fromArray($data['averagePrice']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'optimalPrice' => $this->optimalPrice, 
            'averagePrice' => $this->averagePrice, 
        ];
    }
}


