<?php
/**
 * FeedIndexLogsResultDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the FeedIndexLogsResultDTO model.
 *
 * Результат выполнения запроса отчета по индексации прайс-листа.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class FeedIndexLogsResultDTO 
{
        /**
     * @var FeedIndexLogsFeedDTO|null
     * @SerializedName("feed")
     * @Type("OpenAPI\Server\Model\FeedIndexLogsFeedDTO")
    */
    #[Assert\Type("OpenAPI\Server\Model\FeedIndexLogsFeedDTO")]
    protected ?FeedIndexLogsFeedDTO $feed = null;

    /**
     * Список отчетов по индексации прайс-листа.
     *
     * @var FeedIndexLogsRecordDTO[]|null
     * @SerializedName("indexLogRecords")
     * @Type("array<OpenAPI\Server\Model\FeedIndexLogsRecordDTO>")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\FeedIndexLogsRecordDTO"),
    ])]
    protected ?array $indexLogRecords = null;

    /**
     * Количество отчетов на всех страницах выходных данных.
     *
     * @var int|null
     * @SerializedName("total")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $total = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->feed = array_key_exists('feed', $data) ? $data['feed'] : $this->feed;
            $this->indexLogRecords = array_key_exists('indexLogRecords', $data) ? $data['indexLogRecords'] : $this->indexLogRecords;
            $this->total = array_key_exists('total', $data) ? $data['total'] : $this->total;
        }
    }

    /**
     * Gets feed.
     *
     * @return FeedIndexLogsFeedDTO|null
     */
    public function getFeed(): ?FeedIndexLogsFeedDTO
    {
        return $this->feed;
    }

    /**
    * Sets feed.
    *
    * @param FeedIndexLogsFeedDTO|null $feed
    *
    * @return $this
    */
    public function setFeed(?FeedIndexLogsFeedDTO $feed = null): self
    {
        $this->feed = $feed;

        return $this;
    }




    /**
     * Gets indexLogRecords.
     *
     * @return FeedIndexLogsRecordDTO[]|null
     */
    public function getIndexLogRecords(): ?array
    {
        return $this->indexLogRecords;
    }

    /**
    * Sets indexLogRecords.
    *
    * @param FeedIndexLogsRecordDTO[]|null $indexLogRecords  Список отчетов по индексации прайс-листа.
    *
    * @return $this
    */
    public function setIndexLogRecords(?array $indexLogRecords): self
    {
        $this->indexLogRecords = $indexLogRecords;

        return $this;
    }




    /**
     * Gets total.
     *
     * @return int|null
     */
    public function getTotal(): ?int
    {
        return $this->total;
    }

    /**
    * Sets total.
    *
    * @param int|null $total  Количество отчетов на всех страницах выходных данных.
    *
    * @return $this
    */
    public function setTotal(?int $total = null): self
    {
        $this->total = $total;

        return $this;
    }



}


