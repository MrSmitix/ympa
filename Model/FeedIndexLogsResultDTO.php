<?php
/**
 * FeedIndexLogsResultDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the FeedIndexLogsResultDTO model.
 *
 * Результат выполнения запроса отчета по индексации прайс-листа.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class FeedIndexLogsResultDTO  implements \JsonSerializable
{
        /**
     * @var FeedIndexLogsFeedDTO|null
     * @SerializedName("feed")
     * @Assert\Type("\OpenAPIServer\Model\FeedIndexLogsFeedDTO")
     * @Type("\OpenAPIServer\Model\FeedIndexLogsFeedDTO")
     */
    public ?FeedIndexLogsFeedDTO $feed;

    /**
     * Список отчетов по индексации прайс-листа.
     *
     * @var FeedIndexLogsRecordDTO[]
     * @SerializedName("indexLogRecords")
     * @Assert\NotNull()
     * @Assert\Valid()
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\FeedIndexLogsRecordDTO")
     * })
     * @Type("array<\OpenAPIServer\Model\FeedIndexLogsRecordDTO>")
     */
    public array $indexLogRecords;

    /**
     * Количество отчетов на всех страницах выходных данных.
     *
     * @var int|null
     * @SerializedName("total")
     * @Assert\Type("int")
     * @Type("int")
     */
    public ?int $total;

    /**
     * Constructor
     *
     * @param FeedIndexLogsFeedDTO|null $feed
     * @param FeedIndexLogsRecordDTO[] $indexLogRecords
     * @param int|null $total
     */
    public function __construct(?FeedIndexLogsFeedDTO $feed, array $indexLogRecords, ?int $total)
    {
        $this->feed = $feed;
        $this->indexLogRecords = $indexLogRecords;
        $this->total = $total;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            isset($data['feed']) ? FeedIndexLogsFeedDTO::fromArray($data['feed']) : null, 
            isset($data['indexLogRecords']) ? array_map(fn($item) => FeedIndexLogsRecordDTO::fromArray($item), $data['indexLogRecords']) : null, 
            $data['total'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'feed' => $this->feed, 
            'indexLogRecords' => $this->indexLogRecords, 
            'total' => $this->total, 
        ];
    }
}


