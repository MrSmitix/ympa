<?php
/**
 * OrderDeliveryDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OrderDeliveryDTO model.
 *
 * Информация о доставке.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class OrderDeliveryDTO 
{
        /**
     * Идентификатор доставки, присвоенный магазином.  Указывается, только если магазин передал данный идентификатор в ответе на запрос методом [POST cart](../../pushapi/reference/cart.md).
     *
     * @var string|null
     * @SerializedName("id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $id = null;

    /**
     * @var OrderDeliveryType|null
     * @SerializedName("type")
    * @Accessor(getter="getSerializedType", setter="setDeserializedType")
    * @Type("string")
    */
    protected ?OrderDeliveryType $type = null;

    /**
     * Наименование службы доставки.
     *
     * @var string|null
     * @SerializedName("serviceName")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $serviceName = null;

    /**
     * {% note warning \&quot;\&quot; %}  Этот параметр устарел. Стоимость доставки смотрите в параметре &#x60;deliveryTotal&#x60;.  {% endnote %}  Стоимость доставки в валюте заказа.
     *
     * @var float|null
     * @SerializedName("price")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $price = null;

    /**
     * @var OrderDeliveryPartnerType|null
     * @SerializedName("deliveryPartnerType")
    * @Accessor(getter="getSerializedDeliveryPartnerType", setter="setDeserializedDeliveryPartnerType")
    * @Type("string")
    */
    protected ?OrderDeliveryPartnerType $deliveryPartnerType = null;

    /**
     * @var OrderCourierDTO|null
     * @SerializedName("courier")
     * @Type("OpenAPI\Server\Model\OrderCourierDTO")
    */
    #[Assert\Type("OpenAPI\Server\Model\OrderCourierDTO")]
    protected ?OrderCourierDTO $courier = null;

    /**
     * @var OrderDeliveryDatesDTO|null
     * @SerializedName("dates")
     * @Type("OpenAPI\Server\Model\OrderDeliveryDatesDTO")
    */
    #[Assert\Type("OpenAPI\Server\Model\OrderDeliveryDatesDTO")]
    protected ?OrderDeliveryDatesDTO $dates = null;

    /**
     * @var RegionDTO|null
     * @SerializedName("region")
     * @Type("OpenAPI\Server\Model\RegionDTO")
    */
    #[Assert\Type("OpenAPI\Server\Model\RegionDTO")]
    protected ?RegionDTO $region = null;

    /**
     * @var OrderDeliveryAddressDTO|null
     * @SerializedName("address")
     * @Type("OpenAPI\Server\Model\OrderDeliveryAddressDTO")
    */
    #[Assert\Type("OpenAPI\Server\Model\OrderDeliveryAddressDTO")]
    protected ?OrderDeliveryAddressDTO $address = null;

    /**
     * @var OrderVatType|null
     * @SerializedName("vat")
    * @Accessor(getter="getSerializedVat", setter="setDeserializedVat")
    * @Type("string")
    */
    protected ?OrderVatType $vat = null;

    /**
     * Идентификатор службы доставки.
     *
     * @var int|null
     * @SerializedName("deliveryServiceId")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $deliveryServiceId = null;

    /**
     * @var OrderLiftType|null
     * @SerializedName("liftType")
    * @Accessor(getter="getSerializedLiftType", setter="setDeserializedLiftType")
    * @Type("string")
    */
    protected ?OrderLiftType $liftType = null;

    /**
     * Стоимость подъема на этаж.
     *
     * @var float|null
     * @SerializedName("liftPrice")
     * @Type("float")
    */
    #[Assert\Type("float")]
    protected ?float $liftPrice = null;

    /**
     * Идентификатор пункта самовывоза, присвоенный магазином.
     *
     * @var string|null
     * @SerializedName("outletCode")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $outletCode = null;

    /**
     * Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;.
     *
     * @var string|null
     * @SerializedName("outletStorageLimitDate")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $outletStorageLimitDate = null;

    /**
     * @var OrderDeliveryDispatchType|null
     * @SerializedName("dispatchType")
    * @Accessor(getter="getSerializedDispatchType", setter="setDeserializedDispatchType")
    * @Type("string")
    */
    protected ?OrderDeliveryDispatchType $dispatchType = null;

    /**
     * Информация для отслеживания перемещений посылки.
     *
     * @var OrderTrackDTO[]|null
     * @SerializedName("tracks")
     * @Type("array<OpenAPI\Server\Model\OrderTrackDTO>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\OrderTrackDTO"),
    ])]
    protected ?array $tracks = null;

    /**
     * Информация о посылках.
     *
     * @var OrderShipmentDTO[]|null
     * @SerializedName("shipments")
     * @Type("array<OpenAPI\Server\Model\OrderShipmentDTO>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\OrderShipmentDTO"),
    ])]
    protected ?array $shipments = null;

    /**
     * Приблизительная ли дата доставки.
     *
     * @var bool|null
     * @SerializedName("estimated")
     * @Type("bool")
    */
    #[Assert\Type("bool")]
    protected ?bool $estimated = null;

    /**
     * @var OrderDeliveryEacType|null
     * @SerializedName("eacType")
    * @Accessor(getter="getSerializedEacType", setter="setDeserializedEacType")
    * @Type("string")
    */
    protected ?OrderDeliveryEacType $eacType = null;

    /**
     * Код подтверждения ЭАПП (для типа &#x60;MERCHANT_TO_COURIER&#x60;).
     *
     * @var string|null
     * @SerializedName("eacCode")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $eacCode = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->type = array_key_exists('type', $data) ? $data['type'] : $this->type;
            $this->serviceName = array_key_exists('serviceName', $data) ? $data['serviceName'] : $this->serviceName;
            $this->price = array_key_exists('price', $data) ? $data['price'] : $this->price;
            $this->deliveryPartnerType = array_key_exists('deliveryPartnerType', $data) ? $data['deliveryPartnerType'] : $this->deliveryPartnerType;
            $this->courier = array_key_exists('courier', $data) ? $data['courier'] : $this->courier;
            $this->dates = array_key_exists('dates', $data) ? $data['dates'] : $this->dates;
            $this->region = array_key_exists('region', $data) ? $data['region'] : $this->region;
            $this->address = array_key_exists('address', $data) ? $data['address'] : $this->address;
            $this->vat = array_key_exists('vat', $data) ? $data['vat'] : $this->vat;
            $this->deliveryServiceId = array_key_exists('deliveryServiceId', $data) ? $data['deliveryServiceId'] : $this->deliveryServiceId;
            $this->liftType = array_key_exists('liftType', $data) ? $data['liftType'] : $this->liftType;
            $this->liftPrice = array_key_exists('liftPrice', $data) ? $data['liftPrice'] : $this->liftPrice;
            $this->outletCode = array_key_exists('outletCode', $data) ? $data['outletCode'] : $this->outletCode;
            $this->outletStorageLimitDate = array_key_exists('outletStorageLimitDate', $data) ? $data['outletStorageLimitDate'] : $this->outletStorageLimitDate;
            $this->dispatchType = array_key_exists('dispatchType', $data) ? $data['dispatchType'] : $this->dispatchType;
            $this->tracks = array_key_exists('tracks', $data) ? $data['tracks'] : $this->tracks;
            $this->shipments = array_key_exists('shipments', $data) ? $data['shipments'] : $this->shipments;
            $this->estimated = array_key_exists('estimated', $data) ? $data['estimated'] : $this->estimated;
            $this->eacType = array_key_exists('eacType', $data) ? $data['eacType'] : $this->eacType;
            $this->eacCode = array_key_exists('eacCode', $data) ? $data['eacCode'] : $this->eacCode;
        }
    }

    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param string|null $id  Идентификатор доставки, присвоенный магазином.  Указывается, только если магазин передал данный идентификатор в ответе на запрос методом [POST cart](../../pushapi/reference/cart.md).
    *
    * @return $this
    */
    public function setId(?string $id = null): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets type.
     *
     * @return OrderDeliveryType|null
     */
    public function getType(): ?OrderDeliveryType
    {
        return $this->type;
    }

    /**
    * Sets type.
    *
    * @param OrderDeliveryType|null $type
    *
    * @return $this
    */
    public function setType(?OrderDeliveryType $type = null): self
    {
        $this->type = $type;

        return $this;
    }

    /**
    * Gets type for serialization.
    *
    * @return string|null
    */
    public function getSerializedType(): string|null
    {
        return $this->type?->value ? (string) $this->type->value : null;
    }

    /**
    * Sets type.
    *
    * @param string|OrderDeliveryType|null $type
    *
    * @return $this
    */
    public function setDeserializedType(string|OrderDeliveryType|null $type = null): self
    {
        if (is_string($type)) {
            $type = OrderDeliveryType::tryFrom($type);
        }

        $this->type = $type;

        return $this;
    }



    /**
     * Gets serviceName.
     *
     * @return string|null
     */
    public function getServiceName(): ?string
    {
        return $this->serviceName;
    }

    /**
    * Sets serviceName.
    *
    * @param string|null $serviceName  Наименование службы доставки.
    *
    * @return $this
    */
    public function setServiceName(?string $serviceName = null): self
    {
        $this->serviceName = $serviceName;

        return $this;
    }




    /**
     * Gets price.
     *
     * @return float|null
     */
    public function getPrice(): ?float
    {
        return $this->price;
    }

    /**
    * Sets price.
    *
    * @param float|null $price  {% note warning \"\" %}  Этот параметр устарел. Стоимость доставки смотрите в параметре `deliveryTotal`.  {% endnote %}  Стоимость доставки в валюте заказа.
    *
    * @return $this
    */
    public function setPrice(?float $price = null): self
    {
        $this->price = $price;

        return $this;
    }




    /**
     * Gets deliveryPartnerType.
     *
     * @return OrderDeliveryPartnerType|null
     */
    public function getDeliveryPartnerType(): ?OrderDeliveryPartnerType
    {
        return $this->deliveryPartnerType;
    }

    /**
    * Sets deliveryPartnerType.
    *
    * @param OrderDeliveryPartnerType|null $deliveryPartnerType
    *
    * @return $this
    */
    public function setDeliveryPartnerType(?OrderDeliveryPartnerType $deliveryPartnerType = null): self
    {
        $this->deliveryPartnerType = $deliveryPartnerType;

        return $this;
    }

    /**
    * Gets deliveryPartnerType for serialization.
    *
    * @return string|null
    */
    public function getSerializedDeliveryPartnerType(): string|null
    {
        return $this->deliveryPartnerType?->value ? (string) $this->deliveryPartnerType->value : null;
    }

    /**
    * Sets deliveryPartnerType.
    *
    * @param string|OrderDeliveryPartnerType|null $deliveryPartnerType
    *
    * @return $this
    */
    public function setDeserializedDeliveryPartnerType(string|OrderDeliveryPartnerType|null $deliveryPartnerType = null): self
    {
        if (is_string($deliveryPartnerType)) {
            $deliveryPartnerType = OrderDeliveryPartnerType::tryFrom($deliveryPartnerType);
        }

        $this->deliveryPartnerType = $deliveryPartnerType;

        return $this;
    }



    /**
     * Gets courier.
     *
     * @return OrderCourierDTO|null
     */
    public function getCourier(): ?OrderCourierDTO
    {
        return $this->courier;
    }

    /**
    * Sets courier.
    *
    * @param OrderCourierDTO|null $courier
    *
    * @return $this
    */
    public function setCourier(?OrderCourierDTO $courier = null): self
    {
        $this->courier = $courier;

        return $this;
    }




    /**
     * Gets dates.
     *
     * @return OrderDeliveryDatesDTO|null
     */
    public function getDates(): ?OrderDeliveryDatesDTO
    {
        return $this->dates;
    }

    /**
    * Sets dates.
    *
    * @param OrderDeliveryDatesDTO|null $dates
    *
    * @return $this
    */
    public function setDates(?OrderDeliveryDatesDTO $dates = null): self
    {
        $this->dates = $dates;

        return $this;
    }




    /**
     * Gets region.
     *
     * @return RegionDTO|null
     */
    public function getRegion(): ?RegionDTO
    {
        return $this->region;
    }

    /**
    * Sets region.
    *
    * @param RegionDTO|null $region
    *
    * @return $this
    */
    public function setRegion(?RegionDTO $region = null): self
    {
        $this->region = $region;

        return $this;
    }




    /**
     * Gets address.
     *
     * @return OrderDeliveryAddressDTO|null
     */
    public function getAddress(): ?OrderDeliveryAddressDTO
    {
        return $this->address;
    }

    /**
    * Sets address.
    *
    * @param OrderDeliveryAddressDTO|null $address
    *
    * @return $this
    */
    public function setAddress(?OrderDeliveryAddressDTO $address = null): self
    {
        $this->address = $address;

        return $this;
    }




    /**
     * Gets vat.
     *
     * @return OrderVatType|null
     */
    public function getVat(): ?OrderVatType
    {
        return $this->vat;
    }

    /**
    * Sets vat.
    *
    * @param OrderVatType|null $vat
    *
    * @return $this
    */
    public function setVat(?OrderVatType $vat = null): self
    {
        $this->vat = $vat;

        return $this;
    }

    /**
    * Gets vat for serialization.
    *
    * @return string|null
    */
    public function getSerializedVat(): string|null
    {
        return $this->vat?->value ? (string) $this->vat->value : null;
    }

    /**
    * Sets vat.
    *
    * @param string|OrderVatType|null $vat
    *
    * @return $this
    */
    public function setDeserializedVat(string|OrderVatType|null $vat = null): self
    {
        if (is_string($vat)) {
            $vat = OrderVatType::tryFrom($vat);
        }

        $this->vat = $vat;

        return $this;
    }



    /**
     * Gets deliveryServiceId.
     *
     * @return int|null
     */
    public function getDeliveryServiceId(): ?int
    {
        return $this->deliveryServiceId;
    }

    /**
    * Sets deliveryServiceId.
    *
    * @param int|null $deliveryServiceId  Идентификатор службы доставки.
    *
    * @return $this
    */
    public function setDeliveryServiceId(?int $deliveryServiceId = null): self
    {
        $this->deliveryServiceId = $deliveryServiceId;

        return $this;
    }




    /**
     * Gets liftType.
     *
     * @return OrderLiftType|null
     */
    public function getLiftType(): ?OrderLiftType
    {
        return $this->liftType;
    }

    /**
    * Sets liftType.
    *
    * @param OrderLiftType|null $liftType
    *
    * @return $this
    */
    public function setLiftType(?OrderLiftType $liftType = null): self
    {
        $this->liftType = $liftType;

        return $this;
    }

    /**
    * Gets liftType for serialization.
    *
    * @return string|null
    */
    public function getSerializedLiftType(): string|null
    {
        return $this->liftType?->value ? (string) $this->liftType->value : null;
    }

    /**
    * Sets liftType.
    *
    * @param string|OrderLiftType|null $liftType
    *
    * @return $this
    */
    public function setDeserializedLiftType(string|OrderLiftType|null $liftType = null): self
    {
        if (is_string($liftType)) {
            $liftType = OrderLiftType::tryFrom($liftType);
        }

        $this->liftType = $liftType;

        return $this;
    }



    /**
     * Gets liftPrice.
     *
     * @return float|null
     */
    public function getLiftPrice(): ?float
    {
        return $this->liftPrice;
    }

    /**
    * Sets liftPrice.
    *
    * @param float|null $liftPrice  Стоимость подъема на этаж.
    *
    * @return $this
    */
    public function setLiftPrice(?float $liftPrice = null): self
    {
        $this->liftPrice = $liftPrice;

        return $this;
    }




    /**
     * Gets outletCode.
     *
     * @return string|null
     */
    public function getOutletCode(): ?string
    {
        return $this->outletCode;
    }

    /**
    * Sets outletCode.
    *
    * @param string|null $outletCode  Идентификатор пункта самовывоза, присвоенный магазином.
    *
    * @return $this
    */
    public function setOutletCode(?string $outletCode = null): self
    {
        $this->outletCode = $outletCode;

        return $this;
    }




    /**
     * Gets outletStorageLimitDate.
     *
     * @return string|null
     */
    public function getOutletStorageLimitDate(): ?string
    {
        return $this->outletStorageLimitDate;
    }

    /**
    * Sets outletStorageLimitDate.
    *
    * @param string|null $outletStorageLimitDate  Формат даты: `ДД-ММ-ГГГГ`.
    *
    * @return $this
    */
    public function setOutletStorageLimitDate(?string $outletStorageLimitDate = null): self
    {
        $this->outletStorageLimitDate = $outletStorageLimitDate;

        return $this;
    }




    /**
     * Gets dispatchType.
     *
     * @return OrderDeliveryDispatchType|null
     */
    public function getDispatchType(): ?OrderDeliveryDispatchType
    {
        return $this->dispatchType;
    }

    /**
    * Sets dispatchType.
    *
    * @param OrderDeliveryDispatchType|null $dispatchType
    *
    * @return $this
    */
    public function setDispatchType(?OrderDeliveryDispatchType $dispatchType = null): self
    {
        $this->dispatchType = $dispatchType;

        return $this;
    }

    /**
    * Gets dispatchType for serialization.
    *
    * @return string|null
    */
    public function getSerializedDispatchType(): string|null
    {
        return $this->dispatchType?->value ? (string) $this->dispatchType->value : null;
    }

    /**
    * Sets dispatchType.
    *
    * @param string|OrderDeliveryDispatchType|null $dispatchType
    *
    * @return $this
    */
    public function setDeserializedDispatchType(string|OrderDeliveryDispatchType|null $dispatchType = null): self
    {
        if (is_string($dispatchType)) {
            $dispatchType = OrderDeliveryDispatchType::tryFrom($dispatchType);
        }

        $this->dispatchType = $dispatchType;

        return $this;
    }



    /**
     * Gets tracks.
     *
     * @return OrderTrackDTO[]|null
     */
    public function getTracks(): ?array
    {
        return $this->tracks;
    }

    /**
    * Sets tracks.
    *
    * @param OrderTrackDTO[]|null $tracks  Информация для отслеживания перемещений посылки.
    *
    * @return $this
    */
    public function setTracks(?array $tracks = null): self
    {
        $this->tracks = $tracks;

        return $this;
    }




    /**
     * Gets shipments.
     *
     * @return OrderShipmentDTO[]|null
     */
    public function getShipments(): ?array
    {
        return $this->shipments;
    }

    /**
    * Sets shipments.
    *
    * @param OrderShipmentDTO[]|null $shipments  Информация о посылках.
    *
    * @return $this
    */
    public function setShipments(?array $shipments = null): self
    {
        $this->shipments = $shipments;

        return $this;
    }




    /**
     * Gets estimated.
     *
     * @return bool|null
     */
    public function isEstimated(): ?bool
    {
        return $this->estimated;
    }

    /**
    * Sets estimated.
    *
    * @param bool|null $estimated  Приблизительная ли дата доставки.
    *
    * @return $this
    */
    public function setEstimated(?bool $estimated = null): self
    {
        $this->estimated = $estimated;

        return $this;
    }




    /**
     * Gets eacType.
     *
     * @return OrderDeliveryEacType|null
     */
    public function getEacType(): ?OrderDeliveryEacType
    {
        return $this->eacType;
    }

    /**
    * Sets eacType.
    *
    * @param OrderDeliveryEacType|null $eacType
    *
    * @return $this
    */
    public function setEacType(?OrderDeliveryEacType $eacType = null): self
    {
        $this->eacType = $eacType;

        return $this;
    }

    /**
    * Gets eacType for serialization.
    *
    * @return string|null
    */
    public function getSerializedEacType(): string|null
    {
        return $this->eacType?->value ? (string) $this->eacType->value : null;
    }

    /**
    * Sets eacType.
    *
    * @param string|OrderDeliveryEacType|null $eacType
    *
    * @return $this
    */
    public function setDeserializedEacType(string|OrderDeliveryEacType|null $eacType = null): self
    {
        if (is_string($eacType)) {
            $eacType = OrderDeliveryEacType::tryFrom($eacType);
        }

        $this->eacType = $eacType;

        return $this;
    }



    /**
     * Gets eacCode.
     *
     * @return string|null
     */
    public function getEacCode(): ?string
    {
        return $this->eacCode;
    }

    /**
    * Sets eacCode.
    *
    * @param string|null $eacCode  Код подтверждения ЭАПП (для типа `MERCHANT_TO_COURIER`).
    *
    * @return $this
    */
    public function setEacCode(?string $eacCode = null): self
    {
        $this->eacCode = $eacCode;

        return $this;
    }



}


