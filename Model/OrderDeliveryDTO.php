<?php
/**
 * OrderDeliveryDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the OrderDeliveryDTO model.
 *
 * Информация о доставке.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class OrderDeliveryDTO  implements \JsonSerializable
{
        /**
     * Идентификатор доставки, присвоенный магазином.  Указывается, только если магазин передал данный идентификатор в ответе на запрос методом [POST cart](../../pushapi/reference/cart.md).
     *
     * @var string|null
     * @SerializedName("id")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $id;

    /**
     * @var OrderDeliveryType|null
     * @SerializedName("type")
        * @Accessor(getter="getSerializedType")
        * @Type("string")
     */
    public ?OrderDeliveryType $type;

    /**
     * Наименование службы доставки.
     *
     * @var string|null
     * @SerializedName("serviceName")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $serviceName;

    /**
     * {% note warning \&quot;\&quot; %}  Этот параметр устарел. Стоимость доставки смотрите в параметре &#x60;deliveryTotal&#x60;.  {% endnote %}  Стоимость доставки в валюте заказа.
     *
     * @var float|null
     * @SerializedName("price")
     * @Assert\Type("float")
     * @Type("float")
     */
    public ?float $price;

    /**
     * @var OrderDeliveryPartnerType|null
     * @SerializedName("deliveryPartnerType")
        * @Accessor(getter="getSerializedDeliveryPartnerType")
        * @Type("string")
     */
    public ?OrderDeliveryPartnerType $deliveryPartnerType;

    /**
     * @var OrderCourierDTO|null
     * @SerializedName("courier")
     * @Assert\Type("\OpenAPIServer\Model\OrderCourierDTO")
     * @Type("\OpenAPIServer\Model\OrderCourierDTO")
     */
    public ?OrderCourierDTO $courier;

    /**
     * @var OrderDeliveryDatesDTO|null
     * @SerializedName("dates")
     * @Assert\Type("\OpenAPIServer\Model\OrderDeliveryDatesDTO")
     * @Type("\OpenAPIServer\Model\OrderDeliveryDatesDTO")
     */
    public ?OrderDeliveryDatesDTO $dates;

    /**
     * @var RegionDTO|null
     * @SerializedName("region")
     * @Assert\Type("\OpenAPIServer\Model\RegionDTO")
     * @Type("\OpenAPIServer\Model\RegionDTO")
     */
    public ?RegionDTO $region;

    /**
     * @var OrderDeliveryAddressDTO|null
     * @SerializedName("address")
     * @Assert\Type("\OpenAPIServer\Model\OrderDeliveryAddressDTO")
     * @Type("\OpenAPIServer\Model\OrderDeliveryAddressDTO")
     */
    public ?OrderDeliveryAddressDTO $address;

    /**
     * @var OrderVatType|null
     * @SerializedName("vat")
        * @Accessor(getter="getSerializedVat")
        * @Type("string")
     */
    public ?OrderVatType $vat;

    /**
     * Идентификатор службы доставки.
     *
     * @var int|null
     * @SerializedName("deliveryServiceId")
     * @Assert\Type("int")
     * @Type("int")
     */
    public ?int $deliveryServiceId;

    /**
     * @var OrderLiftType|null
     * @SerializedName("liftType")
        * @Accessor(getter="getSerializedLiftType")
        * @Type("string")
     */
    public ?OrderLiftType $liftType;

    /**
     * Стоимость подъема на этаж.
     *
     * @var float|null
     * @SerializedName("liftPrice")
     * @Assert\Type("float")
     * @Type("float")
     */
    public ?float $liftPrice;

    /**
     * Идентификатор пункта самовывоза, присвоенный магазином.
     *
     * @var string|null
     * @SerializedName("outletCode")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $outletCode;

    /**
     * Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;.
     *
     * @var string|null
     * @SerializedName("outletStorageLimitDate")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $outletStorageLimitDate;

    /**
     * @var OrderDeliveryDispatchType|null
     * @SerializedName("dispatchType")
        * @Accessor(getter="getSerializedDispatchType")
        * @Type("string")
     */
    public ?OrderDeliveryDispatchType $dispatchType;

    /**
     * Информация для отслеживания перемещений посылки.
     *
     * @var OrderTrackDTO[]|null
     * @SerializedName("tracks")
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\OrderTrackDTO")
     * })
     * @Type("array<\OpenAPIServer\Model\OrderTrackDTO>")
     */
    public ?array $tracks;

    /**
     * Информация о посылках.
     *
     * @var OrderShipmentDTO[]|null
     * @SerializedName("shipments")
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\OrderShipmentDTO")
     * })
     * @Type("array<\OpenAPIServer\Model\OrderShipmentDTO>")
     */
    public ?array $shipments;

    /**
     * Приблизительная ли дата доставки.
     *
     * @var bool|null
     * @SerializedName("estimated")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    public ?bool $estimated;

    /**
     * @var OrderDeliveryEacType|null
     * @SerializedName("eacType")
        * @Accessor(getter="getSerializedEacType")
        * @Type("string")
     */
    public ?OrderDeliveryEacType $eacType;

    /**
     * Код подтверждения ЭАПП (для типа &#x60;MERCHANT_TO_COURIER&#x60;).
     *
     * @var string|null
     * @SerializedName("eacCode")
     * @Assert\Type("string")
     * @Type("string")
     */
    public ?string $eacCode;

    /**
     * Constructor
     *
     * @param string|null $id
     * @param OrderDeliveryType|null $type
     * @param string|null $serviceName
     * @param float|null $price
     * @param OrderDeliveryPartnerType|null $deliveryPartnerType
     * @param OrderCourierDTO|null $courier
     * @param OrderDeliveryDatesDTO|null $dates
     * @param RegionDTO|null $region
     * @param OrderDeliveryAddressDTO|null $address
     * @param OrderVatType|null $vat
     * @param int|null $deliveryServiceId
     * @param OrderLiftType|null $liftType
     * @param float|null $liftPrice
     * @param string|null $outletCode
     * @param string|null $outletStorageLimitDate
     * @param OrderDeliveryDispatchType|null $dispatchType
     * @param OrderTrackDTO[]|null $tracks
     * @param OrderShipmentDTO[]|null $shipments
     * @param bool|null $estimated
     * @param OrderDeliveryEacType|null $eacType
     * @param string|null $eacCode
     */
    public function __construct(?string $id, ?OrderDeliveryType $type, ?string $serviceName, ?float $price, ?OrderDeliveryPartnerType $deliveryPartnerType, ?OrderCourierDTO $courier, ?OrderDeliveryDatesDTO $dates, ?RegionDTO $region, ?OrderDeliveryAddressDTO $address, ?OrderVatType $vat, ?int $deliveryServiceId, ?OrderLiftType $liftType, ?float $liftPrice, ?string $outletCode, ?string $outletStorageLimitDate, ?OrderDeliveryDispatchType $dispatchType, ?array $tracks, ?array $shipments, ?bool $estimated, ?OrderDeliveryEacType $eacType, ?string $eacCode)
    {
        $this->id = $id;
        $this->type = $type;
        $this->serviceName = $serviceName;
        $this->price = $price;
        $this->deliveryPartnerType = $deliveryPartnerType;
        $this->courier = $courier;
        $this->dates = $dates;
        $this->region = $region;
        $this->address = $address;
        $this->vat = $vat;
        $this->deliveryServiceId = $deliveryServiceId;
        $this->liftType = $liftType;
        $this->liftPrice = $liftPrice;
        $this->outletCode = $outletCode;
        $this->outletStorageLimitDate = $outletStorageLimitDate;
        $this->dispatchType = $dispatchType;
        $this->tracks = $tracks;
        $this->shipments = $shipments;
        $this->estimated = $estimated;
        $this->eacType = $eacType;
        $this->eacCode = $eacCode;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            $data['id'] ?? null, 
            isset($data['type']) ? OrderDeliveryType::tryFrom($data['type']) : null, 
            $data['serviceName'] ?? null, 
            $data['price'] ?? null, 
            isset($data['deliveryPartnerType']) ? OrderDeliveryPartnerType::tryFrom($data['deliveryPartnerType']) : null, 
            isset($data['courier']) ? OrderCourierDTO::fromArray($data['courier']) : null, 
            isset($data['dates']) ? OrderDeliveryDatesDTO::fromArray($data['dates']) : null, 
            isset($data['region']) ? RegionDTO::fromArray($data['region']) : null, 
            isset($data['address']) ? OrderDeliveryAddressDTO::fromArray($data['address']) : null, 
            isset($data['vat']) ? OrderVatType::tryFrom($data['vat']) : null, 
            $data['deliveryServiceId'] ?? null, 
            isset($data['liftType']) ? OrderLiftType::tryFrom($data['liftType']) : null, 
            $data['liftPrice'] ?? null, 
            $data['outletCode'] ?? null, 
            $data['outletStorageLimitDate'] ?? null, 
            isset($data['dispatchType']) ? OrderDeliveryDispatchType::tryFrom($data['dispatchType']) : null, 
            isset($data['tracks']) ? array_map(fn($item) => OrderTrackDTO::fromArray($item), $data['tracks']) : null, 
            isset($data['shipments']) ? array_map(fn($item) => OrderShipmentDTO::fromArray($item), $data['shipments']) : null, 
            $data['estimated'] ?? null, 
            isset($data['eacType']) ? OrderDeliveryEacType::tryFrom($data['eacType']) : null, 
            $data['eacCode'] ?? null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'id' => $this->id, 
            'type' => $this->type, 
            'serviceName' => $this->serviceName, 
            'price' => $this->price, 
            'deliveryPartnerType' => $this->deliveryPartnerType, 
            'courier' => $this->courier, 
            'dates' => $this->dates, 
            'region' => $this->region, 
            'address' => $this->address, 
            'vat' => $this->vat, 
            'deliveryServiceId' => $this->deliveryServiceId, 
            'liftType' => $this->liftType, 
            'liftPrice' => $this->liftPrice, 
            'outletCode' => $this->outletCode, 
            'outletStorageLimitDate' => $this->outletStorageLimitDate, 
            'dispatchType' => $this->dispatchType, 
            'tracks' => $this->tracks, 
            'shipments' => $this->shipments, 
            'estimated' => $this->estimated, 
            'eacType' => $this->eacType, 
            'eacCode' => $this->eacCode, 
        ];
    }
}


