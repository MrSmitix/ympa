<?php
/**
 * FeedIndexLogsOffersDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the FeedIndexLogsOffersDTO model.
 *
 * Информация о предложениях прайс-листа.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class FeedIndexLogsOffersDTO 
{
        /**
     * Количество предложений, который не опубликованы на Маркете из-за найденных ошибок.
     *
     * @var int|null
     * @SerializedName("rejectedCount")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $rejectedCount = null;

    /**
     * Количество предложений в прайс-листе.
     *
     * @var int|null
     * @SerializedName("totalCount")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $totalCount = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->rejectedCount = array_key_exists('rejectedCount', $data) ? $data['rejectedCount'] : $this->rejectedCount;
            $this->totalCount = array_key_exists('totalCount', $data) ? $data['totalCount'] : $this->totalCount;
        }
    }

    /**
     * Gets rejectedCount.
     *
     * @return int|null
     */
    public function getRejectedCount(): ?int
    {
        return $this->rejectedCount;
    }

    /**
    * Sets rejectedCount.
    *
    * @param int|null $rejectedCount  Количество предложений, который не опубликованы на Маркете из-за найденных ошибок.
    *
    * @return $this
    */
    public function setRejectedCount(?int $rejectedCount = null): self
    {
        $this->rejectedCount = $rejectedCount;

        return $this;
    }




    /**
     * Gets totalCount.
     *
     * @return int|null
     */
    public function getTotalCount(): ?int
    {
        return $this->totalCount;
    }

    /**
    * Sets totalCount.
    *
    * @param int|null $totalCount  Количество предложений в прайс-листе.
    *
    * @return $this
    */
    public function setTotalCount(?int $totalCount = null): self
    {
        $this->totalCount = $totalCount;

        return $this;
    }



}


