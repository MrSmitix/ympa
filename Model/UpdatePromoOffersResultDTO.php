<?php
/**
 * UpdatePromoOffersResultDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the UpdatePromoOffersResultDTO model.
 *
 * Ошибки и предупреждения, которые появились при добавлении товаров в акцию.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class UpdatePromoOffersResultDTO  implements \JsonSerializable
{
        /**
     * Изменения, которые были отклонены.  Возвращается, только если есть отклоненные изменения.
     *
     * @var RejectedPromoOfferUpdateDTO[]|null
     * @SerializedName("rejectedOffers")
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\RejectedPromoOfferUpdateDTO")
     * })
     * @Type("array<\OpenAPIServer\Model\RejectedPromoOfferUpdateDTO>")
     */
    public ?array $rejectedOffers;

    /**
     * Изменения, по которым есть предупреждения. Они информируют о возможных проблемах. Информация о товарах обновится.  Возвращается, только если есть предупреждения.
     *
     * @var WarningPromoOfferUpdateDTO[]|null
     * @SerializedName("warningOffers")
     * @Assert\All({
     *   @Assert\Type("\OpenAPIServer\Model\WarningPromoOfferUpdateDTO")
     * })
     * @Type("array<\OpenAPIServer\Model\WarningPromoOfferUpdateDTO>")
     */
    public ?array $warningOffers;

    /**
     * Constructor
     *
     * @param RejectedPromoOfferUpdateDTO[]|null $rejectedOffers
     * @param WarningPromoOfferUpdateDTO[]|null $warningOffers
     */
    public function __construct(?array $rejectedOffers, ?array $warningOffers)
    {
        $this->rejectedOffers = $rejectedOffers;
        $this->warningOffers = $warningOffers;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            isset($data['rejectedOffers']) ? array_map(fn($item) => RejectedPromoOfferUpdateDTO::fromArray($item), $data['rejectedOffers']) : null, 
            isset($data['warningOffers']) ? array_map(fn($item) => WarningPromoOfferUpdateDTO::fromArray($item), $data['warningOffers']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'rejectedOffers' => $this->rejectedOffers, 
            'warningOffers' => $this->warningOffers, 
        ];
    }
}


