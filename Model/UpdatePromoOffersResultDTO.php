<?php
/**
 * UpdatePromoOffersResultDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the UpdatePromoOffersResultDTO model.
 *
 * Ошибки и предупреждения, которые появились при добавлении товаров в акцию.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class UpdatePromoOffersResultDTO 
{
        /**
     * Изменения, которые были отклонены.  Возвращается, только если есть отклоненные изменения.
     *
     * @var RejectedPromoOfferUpdateDTO[]|null
     * @SerializedName("rejectedOffers")
     * @Type("array<OpenAPI\Server\Model\RejectedPromoOfferUpdateDTO>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\RejectedPromoOfferUpdateDTO"),
    ])]
    protected ?array $rejectedOffers = null;

    /**
     * Изменения, по которым есть предупреждения. Они информируют о возможных проблемах. Информация о товарах обновится.  Возвращается, только если есть предупреждения.
     *
     * @var WarningPromoOfferUpdateDTO[]|null
     * @SerializedName("warningOffers")
     * @Type("array<OpenAPI\Server\Model\WarningPromoOfferUpdateDTO>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\WarningPromoOfferUpdateDTO"),
    ])]
    protected ?array $warningOffers = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->rejectedOffers = array_key_exists('rejectedOffers', $data) ? $data['rejectedOffers'] : $this->rejectedOffers;
            $this->warningOffers = array_key_exists('warningOffers', $data) ? $data['warningOffers'] : $this->warningOffers;
        }
    }

    /**
     * Gets rejectedOffers.
     *
     * @return RejectedPromoOfferUpdateDTO[]|null
     */
    public function getRejectedOffers(): ?array
    {
        return $this->rejectedOffers;
    }

    /**
    * Sets rejectedOffers.
    *
    * @param RejectedPromoOfferUpdateDTO[]|null $rejectedOffers  Изменения, которые были отклонены.  Возвращается, только если есть отклоненные изменения.
    *
    * @return $this
    */
    public function setRejectedOffers(?array $rejectedOffers = null): self
    {
        $this->rejectedOffers = $rejectedOffers;

        return $this;
    }




    /**
     * Gets warningOffers.
     *
     * @return WarningPromoOfferUpdateDTO[]|null
     */
    public function getWarningOffers(): ?array
    {
        return $this->warningOffers;
    }

    /**
    * Sets warningOffers.
    *
    * @param WarningPromoOfferUpdateDTO[]|null $warningOffers  Изменения, по которым есть предупреждения. Они информируют о возможных проблемах. Информация о товарах обновится.  Возвращается, только если есть предупреждения.
    *
    * @return $this
    */
    public function setWarningOffers(?array $warningOffers = null): self
    {
        $this->warningOffers = $warningOffers;

        return $this;
    }



}


