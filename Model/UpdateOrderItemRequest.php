<?php
/**
 * UpdateOrderItemRequest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the UpdateOrderItemRequest model.
 *
 * Запрос на обновление состава заказа.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class UpdateOrderItemRequest 
{
        /**
     * Список товаров в заказе.  Если магазин не передал информацию о товаре во входных данных, он будет удален из заказа.  Обязательный параметр.
     *
     * @var OrderItemModificationDTO[]|null
     * @SerializedName("items")
     * @Type("array<OpenAPI\Server\Model\OrderItemModificationDTO>")
    */
    #[Assert\NotNull]
    #[Assert\Valid]
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\OrderItemModificationDTO"),
    ])]
    #[Assert\Count(min: 1)]
    protected ?array $items = null;

    /**
     * @var OrderItemsModificationRequestReasonType|null
     * @SerializedName("reason")
    * @Accessor(getter="getSerializedReason", setter="setDeserializedReason")
    * @Type("string")
    */
    protected ?OrderItemsModificationRequestReasonType $reason = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->items = array_key_exists('items', $data) ? $data['items'] : $this->items;
            $this->reason = array_key_exists('reason', $data) ? $data['reason'] : $this->reason;
        }
    }

    /**
     * Gets items.
     *
     * @return OrderItemModificationDTO[]|null
     */
    public function getItems(): ?array
    {
        return $this->items;
    }

    /**
    * Sets items.
    *
    * @param OrderItemModificationDTO[]|null $items  Список товаров в заказе.  Если магазин не передал информацию о товаре во входных данных, он будет удален из заказа.  Обязательный параметр.
    *
    * @return $this
    */
    public function setItems(?array $items): self
    {
        $this->items = $items;

        return $this;
    }




    /**
     * Gets reason.
     *
     * @return OrderItemsModificationRequestReasonType|null
     */
    public function getReason(): ?OrderItemsModificationRequestReasonType
    {
        return $this->reason;
    }

    /**
    * Sets reason.
    *
    * @param OrderItemsModificationRequestReasonType|null $reason
    *
    * @return $this
    */
    public function setReason(?OrderItemsModificationRequestReasonType $reason = null): self
    {
        $this->reason = $reason;

        return $this;
    }

    /**
    * Gets reason for serialization.
    *
    * @return string|null
    */
    public function getSerializedReason(): string|null
    {
        return $this->reason?->value ? (string) $this->reason->value : null;
    }

    /**
    * Sets reason.
    *
    * @param string|OrderItemsModificationRequestReasonType|null $reason
    *
    * @return $this
    */
    public function setDeserializedReason(string|OrderItemsModificationRequestReasonType|null $reason = null): self
    {
        if (is_string($reason)) {
            $reason = OrderItemsModificationRequestReasonType::tryFrom($reason);
        }

        $this->reason = $reason;

        return $this;
    }


}


