<?php
/**
 * GpsDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the GpsDTO model.
 *
 * GPS-координаты широты и долготы.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class GpsDTO 
{
        /**
     * Широта.
     *
     * @var float|null
     * @SerializedName("latitude")
     * @Type("float")
    */
    #[Assert\NotNull]
    #[Assert\Type("float")]
    protected ?float $latitude = null;

    /**
     * Долгота.
     *
     * @var float|null
     * @SerializedName("longitude")
     * @Type("float")
    */
    #[Assert\NotNull]
    #[Assert\Type("float")]
    protected ?float $longitude = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->latitude = array_key_exists('latitude', $data) ? $data['latitude'] : $this->latitude;
            $this->longitude = array_key_exists('longitude', $data) ? $data['longitude'] : $this->longitude;
        }
    }

    /**
     * Gets latitude.
     *
     * @return float|null
     */
    public function getLatitude(): ?float
    {
        return $this->latitude;
    }

    /**
    * Sets latitude.
    *
    * @param float|null $latitude  Широта.
    *
    * @return $this
    */
    public function setLatitude(?float $latitude): self
    {
        $this->latitude = $latitude;

        return $this;
    }




    /**
     * Gets longitude.
     *
     * @return float|null
     */
    public function getLongitude(): ?float
    {
        return $this->longitude;
    }

    /**
    * Sets longitude.
    *
    * @param float|null $longitude  Долгота.
    *
    * @return $this
    */
    public function setLongitude(?float $longitude): self
    {
        $this->longitude = $longitude;

        return $this;
    }



}


