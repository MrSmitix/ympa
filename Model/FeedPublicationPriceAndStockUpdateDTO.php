<?php
/**
 * FeedPublicationPriceAndStockUpdateDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPIServer\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */


namespace OpenAPIServer\Model;

/**
 * Class representing the FeedPublicationPriceAndStockUpdateDTO model.
 *
 * Последнее обновление цен и наличия товаров на Маркете. Если последнее по времени обновление было полным, в параметре выводятся те же данные, что и в параметре &#x60;full&#x60;. Выводится, если параметр &#x60;publication status&#x3D;OK&#x60;.
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 */

class FeedPublicationPriceAndStockUpdateDTO  implements \JsonSerializable
{
        /**
     * Дата и время, которые магазин указал в прайс-листе.  Формат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-21T00:42:42+03:00&#x60;.
     *
     * @var \DateTime|null
     * @SerializedName("fileTime")
     * @Assert\Type("\DateTime"))
     * @Type("DateTime")
     */
    public ?\DateTime $fileTime;

    /**
     * Дата и время публикации предложений из прайс-листа на Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-21T00:42:42+03:00&#x60;.
     *
     * @var \DateTime|null
     * @SerializedName("publishedTime")
     * @Assert\Type("\DateTime"))
     * @Type("DateTime")
     */
    public ?\DateTime $publishedTime;

    /**
     * Constructor
     *
     * @param \DateTime|null $fileTime
     * @param \DateTime|null $publishedTime
     */
    public function __construct(?\DateTime $fileTime, ?\DateTime $publishedTime)
    {
        $this->fileTime = $fileTime;
        $this->publishedTime = $publishedTime;
    }

    public static function fromArray(array $data): self
    {
        return new self(
            isset($data['fileTime']) ? new \DateTime($data['fileTime']) : null, 
            isset($data['publishedTime']) ? new \DateTime($data['publishedTime']) : null, 
        );
    }

    public function jsonSerialize(): mixed {
        return [
            'fileTime' => $this->fileTime?->format('c'), 
            'publishedTime' => $this->publishedTime?->format('c'), 
        ];
    }
}


