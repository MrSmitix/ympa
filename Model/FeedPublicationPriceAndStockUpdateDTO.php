<?php
/**
 * FeedPublicationPriceAndStockUpdateDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the FeedPublicationPriceAndStockUpdateDTO model.
 *
 * Последнее обновление цен и наличия товаров на Маркете. Если последнее по времени обновление было полным, в параметре выводятся те же данные, что и в параметре &#x60;full&#x60;. Выводится, если параметр &#x60;publication status&#x3D;OK&#x60;.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class FeedPublicationPriceAndStockUpdateDTO 
{
        /**
     * Дата и время, которые магазин указал в прайс-листе.  Формат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-21T00:42:42+03:00&#x60;.
     *
     * @var \DateTime|null
     * @SerializedName("fileTime")
     * @Type("DateTime")
    */
    #[Assert\Type("\DateTime")]
    protected ?\DateTime $fileTime = null;

    /**
     * Дата и время публикации предложений из прайс-листа на Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-21T00:42:42+03:00&#x60;.
     *
     * @var \DateTime|null
     * @SerializedName("publishedTime")
     * @Type("DateTime")
    */
    #[Assert\Type("\DateTime")]
    protected ?\DateTime $publishedTime = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->fileTime = array_key_exists('fileTime', $data) ? $data['fileTime'] : $this->fileTime;
            $this->publishedTime = array_key_exists('publishedTime', $data) ? $data['publishedTime'] : $this->publishedTime;
        }
    }

    /**
     * Gets fileTime.
     *
     * @return \DateTime|null
     */
    public function getFileTime(): ?\DateTime
    {
        return $this->fileTime;
    }

    /**
    * Sets fileTime.
    *
    * @param \DateTime|null $fileTime  Дата и время, которые магазин указал в прайс-листе.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.
    *
    * @return $this
    */
    public function setFileTime(?\DateTime $fileTime = null): self
    {
        $this->fileTime = $fileTime;

        return $this;
    }




    /**
     * Gets publishedTime.
     *
     * @return \DateTime|null
     */
    public function getPublishedTime(): ?\DateTime
    {
        return $this->publishedTime;
    }

    /**
    * Sets publishedTime.
    *
    * @param \DateTime|null $publishedTime  Дата и время публикации предложений из прайс-листа на Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.
    *
    * @return $this
    */
    public function setPublishedTime(?\DateTime $publishedTime = null): self
    {
        $this->publishedTime = $publishedTime;

        return $this;
    }



}


