<?php
/**
 * UpdateOfferMappingResultDTO
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the UpdateOfferMappingResultDTO model.
 *
 * Ошибки и предупреждения, которые появились из-за переданных характеристик.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class UpdateOfferMappingResultDTO 
{
        /**
     * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
     *
     * @var string|null
     * @SerializedName("offerId")
     * @Type("string")
    */
    #[Assert\NotNull]
    #[Assert\Type("string")]
    #[Assert\Length(max: 255)]
    #[Assert\Length(min: 1)]
    #[Assert\Regex("/^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$/")]
    protected ?string $offerId = null;

    /**
     * Ошибки — информация в каталоге не обновится.
     *
     * @var OfferMappingErrorDTO[]|null
     * @SerializedName("errors")
     * @Type("array<OpenAPI\Server\Model\OfferMappingErrorDTO>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\OfferMappingErrorDTO"),
    ])]
    protected ?array $errors = null;

    /**
     * Предупреждения — информация в каталоге обновится.
     *
     * @var OfferMappingErrorDTO[]|null
     * @SerializedName("warnings")
     * @Type("array<OpenAPI\Server\Model\OfferMappingErrorDTO>")
    */
    #[Assert\All([
        new Assert\Type("OpenAPI\Server\Model\OfferMappingErrorDTO"),
    ])]
    protected ?array $warnings = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->offerId = array_key_exists('offerId', $data) ? $data['offerId'] : $this->offerId;
            $this->errors = array_key_exists('errors', $data) ? $data['errors'] : $this->errors;
            $this->warnings = array_key_exists('warnings', $data) ? $data['warnings'] : $this->warnings;
        }
    }

    /**
     * Gets offerId.
     *
     * @return string|null
     */
    public function getOfferId(): ?string
    {
        return $this->offerId;
    }

    /**
    * Sets offerId.
    *
    * @param string|null $offerId  Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
    *
    * @return $this
    */
    public function setOfferId(?string $offerId): self
    {
        $this->offerId = $offerId;

        return $this;
    }




    /**
     * Gets errors.
     *
     * @return OfferMappingErrorDTO[]|null
     */
    public function getErrors(): ?array
    {
        return $this->errors;
    }

    /**
    * Sets errors.
    *
    * @param OfferMappingErrorDTO[]|null $errors  Ошибки — информация в каталоге не обновится.
    *
    * @return $this
    */
    public function setErrors(?array $errors = null): self
    {
        $this->errors = $errors;

        return $this;
    }




    /**
     * Gets warnings.
     *
     * @return OfferMappingErrorDTO[]|null
     */
    public function getWarnings(): ?array
    {
        return $this->warnings;
    }

    /**
    * Sets warnings.
    *
    * @param OfferMappingErrorDTO[]|null $warnings  Предупреждения — информация в каталоге обновится.
    *
    * @return $this
    */
    public function setWarnings(?array $warnings = null): self
    {
        $this->warnings = $warnings;

        return $this;
    }



}


