/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"
#include "OpenAPIBaseModel.h"

namespace OpenAPI
{

class OPENAPI_API OpenAPICategoriesApi
{
public:
	OpenAPICategoriesApi();
	~OpenAPICategoriesApi();

	/* Sets the URL Endpoint.
	* Note: several fallback endpoints can be configured in request retry policies, see Request::SetShouldRetry */
	void SetURL(const FString& Url);

	/* Adds global header params to all requests */
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();

	/* Sets the retry manager to the user-defined retry manager. User must manage the lifetime of the retry manager.
	* If no retry manager is specified and a request needs retries, a default retry manager will be used.
	* See also: Request::SetShouldRetry */
	void SetHttpRetryManager(FHttpRetrySystem::FManager& RetryManager);
	FHttpRetrySystem::FManager& GetHttpRetryManager();

	class GetCategoriesMaxSaleQuantumRequest;
	class GetCategoriesMaxSaleQuantumResponse;
	class GetCategoriesTreeRequest;
	class GetCategoriesTreeResponse;
	
    DECLARE_DELEGATE_OneParam(FGetCategoriesMaxSaleQuantumDelegate, const GetCategoriesMaxSaleQuantumResponse&);
    DECLARE_DELEGATE_OneParam(FGetCategoriesTreeDelegate, const GetCategoriesTreeResponse&);
    
    FHttpRequestPtr GetCategoriesMaxSaleQuantum(const GetCategoriesMaxSaleQuantumRequest& Request, const FGetCategoriesMaxSaleQuantumDelegate& Delegate = FGetCategoriesMaxSaleQuantumDelegate()) const;
    FHttpRequestPtr GetCategoriesTree(const GetCategoriesTreeRequest& Request, const FGetCategoriesTreeDelegate& Delegate = FGetCategoriesTreeDelegate()) const;
    
private:
    void OnGetCategoriesMaxSaleQuantumResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetCategoriesMaxSaleQuantumDelegate Delegate) const;
    void OnGetCategoriesTreeResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetCategoriesTreeDelegate Delegate) const;
    
	FHttpRequestRef CreateHttpRequest(const Request& Request) const;
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
	mutable FHttpRetrySystem::FManager* RetryManager = nullptr;
	mutable TUniquePtr<HttpRetryManager> DefaultRetryManager;
};

}
