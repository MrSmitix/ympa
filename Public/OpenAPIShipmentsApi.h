/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"
#include "OpenAPIBaseModel.h"

namespace OpenAPI
{

class OPENAPI_API OpenAPIShipmentsApi
{
public:
	OpenAPIShipmentsApi();
	~OpenAPIShipmentsApi();

	/* Sets the URL Endpoint.
	* Note: several fallback endpoints can be configured in request retry policies, see Request::SetShouldRetry */
	void SetURL(const FString& Url);

	/* Adds global header params to all requests */
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();

	/* Sets the retry manager to the user-defined retry manager. User must manage the lifetime of the retry manager.
	* If no retry manager is specified and a request needs retries, a default retry manager will be used.
	* See also: Request::SetShouldRetry */
	void SetHttpRetryManager(FHttpRetrySystem::FManager& RetryManager);
	FHttpRetrySystem::FManager& GetHttpRetryManager();

	class ConfirmShipmentRequest;
	class ConfirmShipmentResponse;
	class DownloadShipmentActRequest;
	class DownloadShipmentActResponse;
	class DownloadShipmentDiscrepancyActRequest;
	class DownloadShipmentDiscrepancyActResponse;
	class DownloadShipmentInboundActRequest;
	class DownloadShipmentInboundActResponse;
	class DownloadShipmentPalletLabelsRequest;
	class DownloadShipmentPalletLabelsResponse;
	class DownloadShipmentReceptionTransferActRequest;
	class DownloadShipmentReceptionTransferActResponse;
	class DownloadShipmentTransportationWaybillRequest;
	class DownloadShipmentTransportationWaybillResponse;
	class GetShipmentRequest;
	class GetShipmentResponse;
	class GetShipmentOrdersInfoRequest;
	class GetShipmentOrdersInfoResponse;
	class SearchShipmentsRequest;
	class SearchShipmentsResponse;
	class SetShipmentPalletsCountRequest;
	class SetShipmentPalletsCountResponse;
	class TransferOrdersFromShipmentRequest;
	class TransferOrdersFromShipmentResponse;
	
    DECLARE_DELEGATE_OneParam(FConfirmShipmentDelegate, const ConfirmShipmentResponse&);
    DECLARE_DELEGATE_OneParam(FDownloadShipmentActDelegate, const DownloadShipmentActResponse&);
    DECLARE_DELEGATE_OneParam(FDownloadShipmentDiscrepancyActDelegate, const DownloadShipmentDiscrepancyActResponse&);
    DECLARE_DELEGATE_OneParam(FDownloadShipmentInboundActDelegate, const DownloadShipmentInboundActResponse&);
    DECLARE_DELEGATE_OneParam(FDownloadShipmentPalletLabelsDelegate, const DownloadShipmentPalletLabelsResponse&);
    DECLARE_DELEGATE_OneParam(FDownloadShipmentReceptionTransferActDelegate, const DownloadShipmentReceptionTransferActResponse&);
    DECLARE_DELEGATE_OneParam(FDownloadShipmentTransportationWaybillDelegate, const DownloadShipmentTransportationWaybillResponse&);
    DECLARE_DELEGATE_OneParam(FGetShipmentDelegate, const GetShipmentResponse&);
    DECLARE_DELEGATE_OneParam(FGetShipmentOrdersInfoDelegate, const GetShipmentOrdersInfoResponse&);
    DECLARE_DELEGATE_OneParam(FSearchShipmentsDelegate, const SearchShipmentsResponse&);
    DECLARE_DELEGATE_OneParam(FSetShipmentPalletsCountDelegate, const SetShipmentPalletsCountResponse&);
    DECLARE_DELEGATE_OneParam(FTransferOrdersFromShipmentDelegate, const TransferOrdersFromShipmentResponse&);
    
    FHttpRequestPtr ConfirmShipment(const ConfirmShipmentRequest& Request, const FConfirmShipmentDelegate& Delegate = FConfirmShipmentDelegate()) const;
    FHttpRequestPtr DownloadShipmentAct(const DownloadShipmentActRequest& Request, const FDownloadShipmentActDelegate& Delegate = FDownloadShipmentActDelegate()) const;
    FHttpRequestPtr DownloadShipmentDiscrepancyAct(const DownloadShipmentDiscrepancyActRequest& Request, const FDownloadShipmentDiscrepancyActDelegate& Delegate = FDownloadShipmentDiscrepancyActDelegate()) const;
    FHttpRequestPtr DownloadShipmentInboundAct(const DownloadShipmentInboundActRequest& Request, const FDownloadShipmentInboundActDelegate& Delegate = FDownloadShipmentInboundActDelegate()) const;
    FHttpRequestPtr DownloadShipmentPalletLabels(const DownloadShipmentPalletLabelsRequest& Request, const FDownloadShipmentPalletLabelsDelegate& Delegate = FDownloadShipmentPalletLabelsDelegate()) const;
    FHttpRequestPtr DownloadShipmentReceptionTransferAct(const DownloadShipmentReceptionTransferActRequest& Request, const FDownloadShipmentReceptionTransferActDelegate& Delegate = FDownloadShipmentReceptionTransferActDelegate()) const;
    FHttpRequestPtr DownloadShipmentTransportationWaybill(const DownloadShipmentTransportationWaybillRequest& Request, const FDownloadShipmentTransportationWaybillDelegate& Delegate = FDownloadShipmentTransportationWaybillDelegate()) const;
    FHttpRequestPtr GetShipment(const GetShipmentRequest& Request, const FGetShipmentDelegate& Delegate = FGetShipmentDelegate()) const;
    FHttpRequestPtr GetShipmentOrdersInfo(const GetShipmentOrdersInfoRequest& Request, const FGetShipmentOrdersInfoDelegate& Delegate = FGetShipmentOrdersInfoDelegate()) const;
    FHttpRequestPtr SearchShipments(const SearchShipmentsRequest& Request, const FSearchShipmentsDelegate& Delegate = FSearchShipmentsDelegate()) const;
    FHttpRequestPtr SetShipmentPalletsCount(const SetShipmentPalletsCountRequest& Request, const FSetShipmentPalletsCountDelegate& Delegate = FSetShipmentPalletsCountDelegate()) const;
    FHttpRequestPtr TransferOrdersFromShipment(const TransferOrdersFromShipmentRequest& Request, const FTransferOrdersFromShipmentDelegate& Delegate = FTransferOrdersFromShipmentDelegate()) const;
    
private:
    void OnConfirmShipmentResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FConfirmShipmentDelegate Delegate) const;
    void OnDownloadShipmentActResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDownloadShipmentActDelegate Delegate) const;
    void OnDownloadShipmentDiscrepancyActResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDownloadShipmentDiscrepancyActDelegate Delegate) const;
    void OnDownloadShipmentInboundActResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDownloadShipmentInboundActDelegate Delegate) const;
    void OnDownloadShipmentPalletLabelsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDownloadShipmentPalletLabelsDelegate Delegate) const;
    void OnDownloadShipmentReceptionTransferActResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDownloadShipmentReceptionTransferActDelegate Delegate) const;
    void OnDownloadShipmentTransportationWaybillResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDownloadShipmentTransportationWaybillDelegate Delegate) const;
    void OnGetShipmentResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetShipmentDelegate Delegate) const;
    void OnGetShipmentOrdersInfoResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetShipmentOrdersInfoDelegate Delegate) const;
    void OnSearchShipmentsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSearchShipmentsDelegate Delegate) const;
    void OnSetShipmentPalletsCountResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSetShipmentPalletsCountDelegate Delegate) const;
    void OnTransferOrdersFromShipmentResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FTransferOrdersFromShipmentDelegate Delegate) const;
    
	FHttpRequestRef CreateHttpRequest(const Request& Request) const;
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
	mutable FHttpRetrySystem::FManager* RetryManager = nullptr;
	mutable TUniquePtr<HttpRetryManager> DefaultRetryManager;
};

}
