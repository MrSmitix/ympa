/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPICategoriesApi.h"

#include "OpenAPIApiClientDataErrorResponse.h"
#include "OpenAPIApiForbiddenErrorResponse.h"
#include "OpenAPIApiLimitErrorResponse.h"
#include "OpenAPIApiNotFoundErrorResponse.h"
#include "OpenAPIApiServerErrorResponse.h"
#include "OpenAPIApiUnauthorizedErrorResponse.h"
#include "OpenAPIGetCategoriesMaxSaleQuantumRequest.h"
#include "OpenAPIGetCategoriesMaxSaleQuantumResponse.h"
#include "OpenAPIGetCategoriesRequest.h"
#include "OpenAPIGetCategoriesResponse.h"

namespace OpenAPI
{

/* Лимит на установку кванта продажи и минимального количества товаров в заказе
 *
 * Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
*/
class OPENAPI_API OpenAPICategoriesApi::GetCategoriesMaxSaleQuantumRequest : public Request
{
public:
    virtual ~GetCategoriesMaxSaleQuantumRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	OpenAPIGetCategoriesMaxSaleQuantumRequest OpenAPIGetCategoriesMaxSaleQuantumRequest;
};

class OPENAPI_API OpenAPICategoriesApi::GetCategoriesMaxSaleQuantumResponse : public Response
{
public:
    virtual ~GetCategoriesMaxSaleQuantumResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIGetCategoriesMaxSaleQuantumResponse Content;
};

/* Дерево категорий
 *
 * Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
*/
class OPENAPI_API OpenAPICategoriesApi::GetCategoriesTreeRequest : public Request
{
public:
    virtual ~GetCategoriesTreeRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	TOptional<OpenAPIGetCategoriesRequest> OpenAPIGetCategoriesRequest;
};

class OPENAPI_API OpenAPICategoriesApi::GetCategoriesTreeResponse : public Response
{
public:
    virtual ~GetCategoriesTreeResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIGetCategoriesResponse Content;
};

}
