/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI spec version: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIBusinessOfferMappingsApi.h"

#include "OpenAPIAddOffersToArchiveRequest.h"
#include "OpenAPIAddOffersToArchiveResponse.h"
#include "OpenAPIApiClientDataErrorResponse.h"
#include "OpenAPIApiForbiddenErrorResponse.h"
#include "OpenAPIApiLimitErrorResponse.h"
#include "OpenAPIApiLockedErrorResponse.h"
#include "OpenAPIApiNotFoundErrorResponse.h"
#include "OpenAPIApiServerErrorResponse.h"
#include "OpenAPIApiUnauthorizedErrorResponse.h"
#include "OpenAPIDeleteOffersFromArchiveRequest.h"
#include "OpenAPIDeleteOffersFromArchiveResponse.h"
#include "OpenAPIDeleteOffersRequest.h"
#include "OpenAPIDeleteOffersResponse.h"
#include "OpenAPIGetOfferMappingsRequest.h"
#include "OpenAPIGetOfferMappingsResponse.h"
#include "OpenAPIGetSuggestedOfferMappingsRequest.h"
#include "OpenAPIGetSuggestedOfferMappingsResponse.h"
#include "OpenAPIUpdateOfferMappingsRequest.h"
#include "OpenAPIUpdateOfferMappingsResponse.h"

namespace OpenAPI
{

/* Добавление товаров в архив
 *
 * Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.  {% note warning \&quot;В архив нельзя отправить товар, который хранится на складе Маркета\&quot; %}  Вначале такой товар нужно распродать или вывезти.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| 
*/
class OPENAPI_API OpenAPIBusinessOfferMappingsApi::AddOffersToArchiveRequest : public Request
{
public:
    virtual ~AddOffersToArchiveRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  */
	int64 BusinessId = 0;
	OpenAPIAddOffersToArchiveRequest OpenAPIAddOffersToArchiveRequest;
};

class OPENAPI_API OpenAPIBusinessOfferMappingsApi::AddOffersToArchiveResponse : public Response
{
public:
    virtual ~AddOffersToArchiveResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIAddOffersToArchiveResponse Content;
};

/* Удаление товаров из каталога
 *
 * Удаляет товары из каталога.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| 
*/
class OPENAPI_API OpenAPIBusinessOfferMappingsApi::DeleteOffersRequest : public Request
{
public:
    virtual ~DeleteOffersRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  */
	int64 BusinessId = 0;
	OpenAPIDeleteOffersRequest OpenAPIDeleteOffersRequest;
};

class OPENAPI_API OpenAPIBusinessOfferMappingsApi::DeleteOffersResponse : public Response
{
public:
    virtual ~DeleteOffersResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIDeleteOffersResponse Content;
};

/* Удаление товаров из архива
 *
 * Восстанавливает товары из архива.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| 
*/
class OPENAPI_API OpenAPIBusinessOfferMappingsApi::DeleteOffersFromArchiveRequest : public Request
{
public:
    virtual ~DeleteOffersFromArchiveRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  */
	int64 BusinessId = 0;
	OpenAPIDeleteOffersFromArchiveRequest OpenAPIDeleteOffersFromArchiveRequest;
};

class OPENAPI_API OpenAPIBusinessOfferMappingsApi::DeleteOffersFromArchiveResponse : public Response
{
public:
    virtual ~DeleteOffersFromArchiveResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIDeleteOffersFromArchiveResponse Content;
};

/* Информация о товарах в каталоге
 *
 * Возвращает список товаров в каталоге, их категории на Маркете и характеристики каждого товара.  Можно использовать тремя способами: * задать список интересующих SKU; * задать фильтр — в этом случае результаты возвращаются постранично; * не передавать тело запроса, чтобы получить список всех товаров в каталоге.  |**⚙️ Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе| |-| 
*/
class OPENAPI_API OpenAPIBusinessOfferMappingsApi::GetOfferMappingsRequest : public Request
{
public:
    virtual ~GetOfferMappingsRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  */
	int64 BusinessId = 0;
	/* Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются.  */
	TOptional<FString> PageToken;
	/* Количество значений на одной странице.  */
	TOptional<int32> Limit;
	TOptional<OpenAPIGetOfferMappingsRequest> OpenAPIGetOfferMappingsRequest;
};

class OPENAPI_API OpenAPIBusinessOfferMappingsApi::GetOfferMappingsResponse : public Response
{
public:
    virtual ~GetOfferMappingsResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIGetOfferMappingsResponse Content;
};

/* Просмотр карточек на Маркете, которые подходят вашим товарам
 *
 * Возвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.  Пользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточки по предоставленным вами данным.  **Как пользоваться запросом**  1. Передайте Маркету список товаров, которые нужно проверить. 2. В ответ вы получите список SKU на Маркете с расшифровкой: названием, идентификатором модели, категорией. 3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида &#x60;https://market.yandex.ru/product/&lt;marketModelId&gt;?sku&#x3D;&lt;marketSku&gt;&#x60;. 4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать &#x60;marketSKU&#x60;, который ему подходит по вашему мнению.  {% note info \&quot;𝓠 Как определить &#x60;marketSku&#x60; товара, найденного на Маркете?\&quot; %}  𝓐 Он есть в адресе страницы товара — расположен после &#x60;sku&#x3D;&#x60;.  Например, &#x60;https://market.yandex.ru/product--yandex-kniga/484830016?sku&#x3D;484830016&#x60;  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в час| |-| 
*/
class OPENAPI_API OpenAPIBusinessOfferMappingsApi::GetSuggestedOfferMappingsRequest : public Request
{
public:
    virtual ~GetSuggestedOfferMappingsRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  */
	int64 BusinessId = 0;
	TOptional<OpenAPIGetSuggestedOfferMappingsRequest> OpenAPIGetSuggestedOfferMappingsRequest;
};

class OPENAPI_API OpenAPIBusinessOfferMappingsApi::GetSuggestedOfferMappingsResponse : public Response
{
public:
    virtual ~GetSuggestedOfferMappingsResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIGetSuggestedOfferMappingsResponse Content;
};

/* Добавление товаров в каталог и изменение информации о них
 *
 * Добавляет товары в каталог, передает их категории на Маркете и характеристики, необходимые для этих категории. Также редактирует информацию об уже имеющихся товарах.  Список категорий Маркета можно получить с помощью запроса [POST categories/tree](../../reference/categories/getCategoriesTree.md), а характеристики товаров по категориям с помощью [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).  Чтобы **добавить новый товар**, передайте его с новым идентификатором, который раньше никогда не использовался в каталоге. Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой. Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**SKU на Маркете**) в поле &#x60;marketSKU&#x60;.  Для **новых товаров** обязательно укажите параметры: &#x60;offerId&#x60;, &#x60;name&#x60;, &#x60;marketCategoryId&#x60; или &#x60;category&#x60;, &#x60;pictures&#x60;, &#x60;vendor&#x60;, &#x60;description&#x60;.  Чтобы **отредактировать информацию о товаре**, передайте новые данные, указав в &#x60;offerId&#x60; соответствующий **ваш SKU**. Поля, в которых ничего не меняется, можно не передавать.  Чтобы **удалить характеристики**, которые заданы в параметрах с типом &#x60;string&#x60;, передайте пустое значение.  Параметр &#x60;offerId&#x60; должен быть **уникальным** для всех товаров, которые вы передаете.  {% note warning \&quot;Правила использования SKU\&quot; %}  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  {% endnote %}  {% note info \&quot;Данные в каталоге обновляются не мгновенно\&quot; %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| 
*/
class OPENAPI_API OpenAPIBusinessOfferMappingsApi::UpdateOfferMappingsRequest : public Request
{
public:
    virtual ~UpdateOfferMappingsRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	/* Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  */
	int64 BusinessId = 0;
	OpenAPIUpdateOfferMappingsRequest OpenAPIUpdateOfferMappingsRequest;
};

class OPENAPI_API OpenAPIBusinessOfferMappingsApi::UpdateOfferMappingsResponse : public Response
{
public:
    virtual ~UpdateOfferMappingsResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIUpdateOfferMappingsResponse Content;
};

}
