/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Api);
  }
}(this, function(expect, Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Api.OrderDeliveryDTO();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrderDeliveryDTO', function() {
    it('should create an instance of OrderDeliveryDTO', function() {
      // uncomment below and update the code to test OrderDeliveryDTO
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be.a(Api.OrderDeliveryDTO);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property serviceName (base name: "serviceName")', function() {
      // uncomment below and update the code to test the property serviceName
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property deliveryPartnerType (base name: "deliveryPartnerType")', function() {
      // uncomment below and update the code to test the property deliveryPartnerType
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property courier (base name: "courier")', function() {
      // uncomment below and update the code to test the property courier
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property dates (base name: "dates")', function() {
      // uncomment below and update the code to test the property dates
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property region (base name: "region")', function() {
      // uncomment below and update the code to test the property region
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property vat (base name: "vat")', function() {
      // uncomment below and update the code to test the property vat
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property deliveryServiceId (base name: "deliveryServiceId")', function() {
      // uncomment below and update the code to test the property deliveryServiceId
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property liftType (base name: "liftType")', function() {
      // uncomment below and update the code to test the property liftType
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property liftPrice (base name: "liftPrice")', function() {
      // uncomment below and update the code to test the property liftPrice
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property outletCode (base name: "outletCode")', function() {
      // uncomment below and update the code to test the property outletCode
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property outletStorageLimitDate (base name: "outletStorageLimitDate")', function() {
      // uncomment below and update the code to test the property outletStorageLimitDate
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property dispatchType (base name: "dispatchType")', function() {
      // uncomment below and update the code to test the property dispatchType
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property tracks (base name: "tracks")', function() {
      // uncomment below and update the code to test the property tracks
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property shipments (base name: "shipments")', function() {
      // uncomment below and update the code to test the property shipments
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property estimated (base name: "estimated")', function() {
      // uncomment below and update the code to test the property estimated
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property eacType (base name: "eacType")', function() {
      // uncomment below and update the code to test the property eacType
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

    it('should have the property eacCode (base name: "eacCode")', function() {
      // uncomment below and update the code to test the property eacCode
      //var instance = new Api.OrderDeliveryDTO();
      //expect(instance).to.be();
    });

  });

}));
