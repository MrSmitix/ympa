/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Api);
  }
}(this, function(expect, Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Api.OrderItemDTO();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrderItemDTO', function() {
    it('should create an instance of OrderItemDTO', function() {
      // uncomment below and update the code to test OrderItemDTO
      //var instance = new Api.OrderItemDTO();
      //expect(instance).to.be.a(Api.OrderItemDTO);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new Api.OrderItemDTO();
      //expect(instance).to.be();
    });

    it('should have the property offerId (base name: "offerId")', function() {
      // uncomment below and update the code to test the property offerId
      //var instance = new Api.OrderItemDTO();
      //expect(instance).to.be();
    });

    it('should have the property offerName (base name: "offerName")', function() {
      // uncomment below and update the code to test the property offerName
      //var instance = new Api.OrderItemDTO();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new Api.OrderItemDTO();
      //expect(instance).to.be();
    });

    it('should have the property buyerPrice (base name: "buyerPrice")', function() {
      // uncomment below and update the code to test the property buyerPrice
      //var instance = new Api.OrderItemDTO();
      //expect(instance).to.be();
    });

    it('should have the property buyerPriceBeforeDiscount (base name: "buyerPriceBeforeDiscount")', function() {
      // uncomment below and update the code to test the property buyerPriceBeforeDiscount
      //var instance = new Api.OrderItemDTO();
      //expect(instance).to.be();
    });

    it('should have the property priceBeforeDiscount (base name: "priceBeforeDiscount")', function() {
      // uncomment below and update the code to test the property priceBeforeDiscount
      //var instance = new Api.OrderItemDTO();
      //expect(instance).to.be();
    });

    it('should have the property count (base name: "count")', function() {
      // uncomment below and update the code to test the property count
      //var instance = new Api.OrderItemDTO();
      //expect(instance).to.be();
    });

    it('should have the property vat (base name: "vat")', function() {
      // uncomment below and update the code to test the property vat
      //var instance = new Api.OrderItemDTO();
      //expect(instance).to.be();
    });

    it('should have the property shopSku (base name: "shopSku")', function() {
      // uncomment below and update the code to test the property shopSku
      //var instance = new Api.OrderItemDTO();
      //expect(instance).to.be();
    });

    it('should have the property subsidy (base name: "subsidy")', function() {
      // uncomment below and update the code to test the property subsidy
      //var instance = new Api.OrderItemDTO();
      //expect(instance).to.be();
    });

    it('should have the property partnerWarehouseId (base name: "partnerWarehouseId")', function() {
      // uncomment below and update the code to test the property partnerWarehouseId
      //var instance = new Api.OrderItemDTO();
      //expect(instance).to.be();
    });

    it('should have the property promos (base name: "promos")', function() {
      // uncomment below and update the code to test the property promos
      //var instance = new Api.OrderItemDTO();
      //expect(instance).to.be();
    });

    it('should have the property instances (base name: "instances")', function() {
      // uncomment below and update the code to test the property instances
      //var instance = new Api.OrderItemDTO();
      //expect(instance).to.be();
    });

    it('should have the property details (base name: "details")', function() {
      // uncomment below and update the code to test the property details
      //var instance = new Api.OrderItemDTO();
      //expect(instance).to.be();
    });

    it('should have the property subsidies (base name: "subsidies")', function() {
      // uncomment below and update the code to test the property subsidies
      //var instance = new Api.OrderItemDTO();
      //expect(instance).to.be();
    });

    it('should have the property requiredInstanceTypes (base name: "requiredInstanceTypes")', function() {
      // uncomment below and update the code to test the property requiredInstanceTypes
      //var instance = new Api.OrderItemDTO();
      //expect(instance).to.be();
    });

  });

}));
