/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Api);
  }
}(this, function(expect, Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Api.OutletAddressDTO();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OutletAddressDTO', function() {
    it('should create an instance of OutletAddressDTO', function() {
      // uncomment below and update the code to test OutletAddressDTO
      //var instance = new Api.OutletAddressDTO();
      //expect(instance).to.be.a(Api.OutletAddressDTO);
    });

    it('should have the property regionId (base name: "regionId")', function() {
      // uncomment below and update the code to test the property regionId
      //var instance = new Api.OutletAddressDTO();
      //expect(instance).to.be();
    });

    it('should have the property street (base name: "street")', function() {
      // uncomment below and update the code to test the property street
      //var instance = new Api.OutletAddressDTO();
      //expect(instance).to.be();
    });

    it('should have the property number (base name: "number")', function() {
      // uncomment below and update the code to test the property number
      //var instance = new Api.OutletAddressDTO();
      //expect(instance).to.be();
    });

    it('should have the property building (base name: "building")', function() {
      // uncomment below and update the code to test the property building
      //var instance = new Api.OutletAddressDTO();
      //expect(instance).to.be();
    });

    it('should have the property estate (base name: "estate")', function() {
      // uncomment below and update the code to test the property estate
      //var instance = new Api.OutletAddressDTO();
      //expect(instance).to.be();
    });

    it('should have the property block (base name: "block")', function() {
      // uncomment below and update the code to test the property block
      //var instance = new Api.OutletAddressDTO();
      //expect(instance).to.be();
    });

    it('should have the property additional (base name: "additional")', function() {
      // uncomment below and update the code to test the property additional
      //var instance = new Api.OutletAddressDTO();
      //expect(instance).to.be();
    });

    it('should have the property km (base name: "km")', function() {
      // uncomment below and update the code to test the property km
      //var instance = new Api.OutletAddressDTO();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new Api.OutletAddressDTO();
      //expect(instance).to.be();
    });

  });

}));
