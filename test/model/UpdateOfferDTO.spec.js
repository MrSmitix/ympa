/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Api);
  }
}(this, function(expect, Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Api.UpdateOfferDTO();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UpdateOfferDTO', function() {
    it('should create an instance of UpdateOfferDTO', function() {
      // uncomment below and update the code to test UpdateOfferDTO
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be.a(Api.UpdateOfferDTO);
    });

    it('should have the property offerId (base name: "offerId")', function() {
      // uncomment below and update the code to test the property offerId
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property marketCategoryId (base name: "marketCategoryId")', function() {
      // uncomment below and update the code to test the property marketCategoryId
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property pictures (base name: "pictures")', function() {
      // uncomment below and update the code to test the property pictures
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property videos (base name: "videos")', function() {
      // uncomment below and update the code to test the property videos
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property manuals (base name: "manuals")', function() {
      // uncomment below and update the code to test the property manuals
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property vendor (base name: "vendor")', function() {
      // uncomment below and update the code to test the property vendor
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property barcodes (base name: "barcodes")', function() {
      // uncomment below and update the code to test the property barcodes
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property manufacturerCountries (base name: "manufacturerCountries")', function() {
      // uncomment below and update the code to test the property manufacturerCountries
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property weightDimensions (base name: "weightDimensions")', function() {
      // uncomment below and update the code to test the property weightDimensions
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property vendorCode (base name: "vendorCode")', function() {
      // uncomment below and update the code to test the property vendorCode
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property shelfLife (base name: "shelfLife")', function() {
      // uncomment below and update the code to test the property shelfLife
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property lifeTime (base name: "lifeTime")', function() {
      // uncomment below and update the code to test the property lifeTime
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property guaranteePeriod (base name: "guaranteePeriod")', function() {
      // uncomment below and update the code to test the property guaranteePeriod
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property customsCommodityCode (base name: "customsCommodityCode")', function() {
      // uncomment below and update the code to test the property customsCommodityCode
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property certificates (base name: "certificates")', function() {
      // uncomment below and update the code to test the property certificates
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property boxCount (base name: "boxCount")', function() {
      // uncomment below and update the code to test the property boxCount
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property condition (base name: "condition")', function() {
      // uncomment below and update the code to test the property condition
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property downloadable (base name: "downloadable")', function() {
      // uncomment below and update the code to test the property downloadable
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property adult (base name: "adult")', function() {
      // uncomment below and update the code to test the property adult
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property age (base name: "age")', function() {
      // uncomment below and update the code to test the property age
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property params (base name: "params")', function() {
      // uncomment below and update the code to test the property params
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property parameterValues (base name: "parameterValues")', function() {
      // uncomment below and update the code to test the property parameterValues
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property basicPrice (base name: "basicPrice")', function() {
      // uncomment below and update the code to test the property basicPrice
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property purchasePrice (base name: "purchasePrice")', function() {
      // uncomment below and update the code to test the property purchasePrice
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property additionalExpenses (base name: "additionalExpenses")', function() {
      // uncomment below and update the code to test the property additionalExpenses
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

    it('should have the property cofinancePrice (base name: "cofinancePrice")', function() {
      // uncomment below and update the code to test the property cofinancePrice
      //var instance = new Api.UpdateOfferDTO();
      //expect(instance).to.be();
    });

  });

}));
