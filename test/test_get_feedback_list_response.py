# coding: utf-8

"""
    Партнерский API Маркета

    API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

    The version of the OpenAPI document: LATEST
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from ympa_python_pydantic_v1_client.models.get_feedback_list_response import GetFeedbackListResponse  # noqa: E501

class TestGetFeedbackListResponse(unittest.TestCase):
    """GetFeedbackListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetFeedbackListResponse:
        """Test GetFeedbackListResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetFeedbackListResponse`
        """
        model = GetFeedbackListResponse()  # noqa: E501
        if include_optional:
            return GetFeedbackListResponse(
                status = 'OK',
                result = ympa_python_pydantic_v1_client.models.feedback_list_dto.FeedbackListDTO(
                    paging = ympa_python_pydantic_v1_client.models.scrolling_pager_dto.ScrollingPagerDTO(), 
                    feedback_list = [
                        ympa_python_pydantic_v1_client.models.feedback_dto.FeedbackDTO(
                            id = 56, 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            text = '', 
                            state = 'LAST', 
                            author = ympa_python_pydantic_v1_client.models.feedback_author_dto.FeedbackAuthorDTO(
                                name = '', 
                                region = ympa_python_pydantic_v1_client.models.region_dto.RegionDTO(
                                    id = 56, 
                                    name = '', 
                                    type = 'OTHER', 
                                    parent = ympa_python_pydantic_v1_client.models.region_dto.RegionDTO(
                                        id = 56, 
                                        name = '', 
                                        type = 'OTHER', 
                                        children = [
                                            
                                            ], ), 
                                    children = [
                                        
                                        ], ), ), 
                            pro = '', 
                            contra = '', 
                            comments = [
                                ympa_python_pydantic_v1_client.models.feedback_comment_dto.FeedbackCommentDTO(
                                    id = 56, 
                                    parent_id = 56, 
                                    body = '', 
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            shop = ympa_python_pydantic_v1_client.models.feedback_shop_dto.FeedbackShopDTO(
                                name = '', ), 
                            resolved = True, 
                            verified = True, 
                            recommend = True, 
                            grades = ympa_python_pydantic_v1_client.models.feedback_grades_dto.FeedbackGradesDTO(
                                average = 1.337, 
                                agree_count = 56, 
                                reject_count = 56, 
                                factors = [
                                    ympa_python_pydantic_v1_client.models.feedback_factor_dto.FeedbackFactorDTO(
                                        id = 56, 
                                        title = '', 
                                        description = '', 
                                        value = 56, )
                                    ], ), 
                            order = ympa_python_pydantic_v1_client.models.feedback_order_dto.FeedbackOrderDTO(
                                shop_order_id = '', 
                                delivery = 'DELIVERY', ), )
                        ], )
            )
        else:
            return GetFeedbackListResponse(
        )
        """

    def testGetFeedbackListResponse(self):
        """Test GetFeedbackListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
