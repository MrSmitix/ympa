# coding: utf-8

"""
    Партнерский API Маркета

    API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

    The version of the OpenAPI document: LATEST
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from ympa_python_pydantic_v1_client.models.warehouses_dto import WarehousesDTO  # noqa: E501

class TestWarehousesDTO(unittest.TestCase):
    """WarehousesDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WarehousesDTO:
        """Test WarehousesDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WarehousesDTO`
        """
        model = WarehousesDTO()  # noqa: E501
        if include_optional:
            return WarehousesDTO(
                warehouses = [
                    ympa_python_pydantic_v1_client.models.warehouse_dto.WarehouseDTO(
                        id = 56, 
                        name = '', 
                        campaign_id = 56, 
                        express = True, 
                        address = ympa_python_pydantic_v1_client.models.warehouse_address_dto.WarehouseAddressDTO(
                            city = '', 
                            street = '', 
                            number = '', 
                            building = '', 
                            block = '', 
                            gps = ympa_python_pydantic_v1_client.models.gps_dto.GpsDTO(
                                latitude = 1.337, 
                                longitude = 1.337, ), ), )
                    ],
                warehouse_groups = [
                    ympa_python_pydantic_v1_client.models.warehouse_group_dto.WarehouseGroupDTO(
                        name = '', 
                        main_warehouse = ympa_python_pydantic_v1_client.models.warehouse_dto.WarehouseDTO(
                            id = 56, 
                            name = '', 
                            campaign_id = 56, 
                            express = True, 
                            address = ympa_python_pydantic_v1_client.models.warehouse_address_dto.WarehouseAddressDTO(
                                city = '', 
                                street = '', 
                                number = '', 
                                building = '', 
                                block = '', 
                                gps = ympa_python_pydantic_v1_client.models.gps_dto.GpsDTO(
                                    latitude = 1.337, 
                                    longitude = 1.337, ), ), ), 
                        warehouses = [
                            ympa_python_pydantic_v1_client.models.warehouse_dto.WarehouseDTO(
                                id = 56, 
                                name = '', 
                                campaign_id = 56, 
                                express = True, )
                            ], )
                    ]
            )
        else:
            return WarehousesDTO(
                warehouses = [
                    ympa_python_pydantic_v1_client.models.warehouse_dto.WarehouseDTO(
                        id = 56, 
                        name = '', 
                        campaign_id = 56, 
                        express = True, 
                        address = ympa_python_pydantic_v1_client.models.warehouse_address_dto.WarehouseAddressDTO(
                            city = '', 
                            street = '', 
                            number = '', 
                            building = '', 
                            block = '', 
                            gps = ympa_python_pydantic_v1_client.models.gps_dto.GpsDTO(
                                latitude = 1.337, 
                                longitude = 1.337, ), ), )
                    ],
                warehouse_groups = [
                    ympa_python_pydantic_v1_client.models.warehouse_group_dto.WarehouseGroupDTO(
                        name = '', 
                        main_warehouse = ympa_python_pydantic_v1_client.models.warehouse_dto.WarehouseDTO(
                            id = 56, 
                            name = '', 
                            campaign_id = 56, 
                            express = True, 
                            address = ympa_python_pydantic_v1_client.models.warehouse_address_dto.WarehouseAddressDTO(
                                city = '', 
                                street = '', 
                                number = '', 
                                building = '', 
                                block = '', 
                                gps = ympa_python_pydantic_v1_client.models.gps_dto.GpsDTO(
                                    latitude = 1.337, 
                                    longitude = 1.337, ), ), ), 
                        warehouses = [
                            ympa_python_pydantic_v1_client.models.warehouse_dto.WarehouseDTO(
                                id = 56, 
                                name = '', 
                                campaign_id = 56, 
                                express = True, )
                            ], )
                    ],
        )
        """

    def testWarehousesDTO(self):
        """Test WarehousesDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
