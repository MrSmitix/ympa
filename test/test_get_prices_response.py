# coding: utf-8

"""
    Партнерский API Маркета

    API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

    The version of the OpenAPI document: LATEST
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ympa_python_client.models.get_prices_response import GetPricesResponse

class TestGetPricesResponse(unittest.TestCase):
    """GetPricesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetPricesResponse:
        """Test GetPricesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetPricesResponse`
        """
        model = GetPricesResponse()
        if include_optional:
            return GetPricesResponse(
                status = 'OK',
                result = ympa_python_client.models.offer_price_list_response_dto.OfferPriceListResponseDTO(
                    offers = [
                        ympa_python_client.models.offer_price_response_dto.OfferPriceResponseDTO(
                            id = '', 
                            price = ympa_python_client.models.price_dto.PriceDTO(
                                value = 1.337, 
                                discount_base = 1.337, 
                                currency_id = 'RUR', 
                                vat = 56, ), 
                            market_sku = 56, 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    paging = ympa_python_client.models.scrolling_pager_dto.ScrollingPagerDTO(), 
                    total = 56, )
            )
        else:
            return GetPricesResponse(
        )
        """

    def testGetPricesResponse(self):
        """Test GetPricesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
