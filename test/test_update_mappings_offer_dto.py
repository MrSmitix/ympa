# coding: utf-8

"""
    Партнерский API Маркета

    API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

    The version of the OpenAPI document: LATEST
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from ympa_python_pydantic_v1_client.models.update_mappings_offer_dto import UpdateMappingsOfferDTO  # noqa: E501

class TestUpdateMappingsOfferDTO(unittest.TestCase):
    """UpdateMappingsOfferDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateMappingsOfferDTO:
        """Test UpdateMappingsOfferDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateMappingsOfferDTO`
        """
        model = UpdateMappingsOfferDTO()  # noqa: E501
        if include_optional:
            return UpdateMappingsOfferDTO(
                name = 'Ударная дрель Makita HP1630, 710 Вт',
                shop_sku = 'jUR,rZ#UM/?R,Fp^l6$ARjbhJk C>i H'qT\\{<?'es#)#iK.YM{Rag2/!KB!k@5oXh.:Ts\";mGL,i&z5[P@M\"lzfB+Y,Twzfu~N^z\"mfqecVU{SmA{QA<Y8XX0<}J;Krm9W'g~?)DvDDLE7-'(u+-7Tfp&\\`F+7-?{%@=iEPLVY*a@A[b_6cfy~~0GcD_@b4Y=U?otJ(e#=I@b(lK%|5-Ido0',
                category = '',
                vendor = 'LEVENHUK',
                vendor_code = 'VNDR-0005A',
                description = '',
                id = 'jUR,rZ#UM/?R,Fp^l6$ARjbhJk C>i H'qT\\{<?'es#)#iK.YM{Rag2/!KB!k@5oXh.:Ts\";mGL,i&z5[P@M\"lzfB+Y,Twzfu~N^z\"mfqecVU{SmA{QA<Y8XX0<}J;Krm9W'g~?)DvDDLE7-'(u+-7Tfp&\\`F+7-?{%@=iEPLVY*a@A[b_6cfy~~0GcD_@b4Y=U?otJ(e#=I@b(lK%|5-Ido0',
                feed_id = 56,
                barcodes = [
                    '46012300000000'
                    ],
                urls = [
                    ''
                    ],
                pictures = [
                    ''
                    ],
                manufacturer = '',
                manufacturer_countries = [
                    ''
                    ],
                min_shipment = 56,
                transport_unit_size = 56,
                quantum_of_supply = 56,
                delivery_duration_days = 56,
                box_count = 56,
                customs_commodity_codes = [
                    ''
                    ],
                weight_dimensions = ympa_python_pydantic_v1_client.models.offer_weight_dimensions_dto.OfferWeightDimensionsDTO(
                    length = 65.55, 
                    width = 50.7, 
                    height = 20, 
                    weight = 1.001, ),
                supply_schedule_days = [
                    'MONDAY'
                    ],
                shelf_life_days = 56,
                life_time_days = 56,
                guarantee_period_days = 56,
                processing_state = ympa_python_pydantic_v1_client.models.offer_processing_state_dto.OfferProcessingStateDTO(
                    status = 'UNKNOWN', 
                    notes = [
                        ympa_python_pydantic_v1_client.models.offer_processing_note_dto.OfferProcessingNoteDTO(
                            type = 'ASSORTMENT', 
                            payload = '', )
                        ], ),
                availability = 'ACTIVE',
                shelf_life = ympa_python_pydantic_v1_client.models.time_period_dto.TimePeriodDTO(
                    time_period = 56, 
                    time_unit = 'HOUR', 
                    comment = '', ),
                life_time = ympa_python_pydantic_v1_client.models.time_period_dto.TimePeriodDTO(
                    time_period = 56, 
                    time_unit = 'HOUR', 
                    comment = '', ),
                guarantee_period = ympa_python_pydantic_v1_client.models.time_period_dto.TimePeriodDTO(
                    time_period = 56, 
                    time_unit = 'HOUR', 
                    comment = '', ),
                certificate = ''
            )
        else:
            return UpdateMappingsOfferDTO(
        )
        """

    def testUpdateMappingsOfferDTO(self):
        """Test UpdateMappingsOfferDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
