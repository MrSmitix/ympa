# coding: utf-8

"""
    Партнерский API Маркета

    API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

    The version of the OpenAPI document: LATEST
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from ympa_python_pydantic_v1_client.models.goods_feedback_list_dto import GoodsFeedbackListDTO  # noqa: E501

class TestGoodsFeedbackListDTO(unittest.TestCase):
    """GoodsFeedbackListDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoodsFeedbackListDTO:
        """Test GoodsFeedbackListDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoodsFeedbackListDTO`
        """
        model = GoodsFeedbackListDTO()  # noqa: E501
        if include_optional:
            return GoodsFeedbackListDTO(
                feedbacks = [
                    ympa_python_pydantic_v1_client.models.goods_feedback_dto.GoodsFeedbackDTO(
                        feedback_id = 56, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        need_reaction = True, 
                        identifiers = ympa_python_pydantic_v1_client.models.goods_feedback_identifiers_dto.GoodsFeedbackIdentifiersDTO(
                            order_id = 56, 
                            model_id = 56, ), 
                        author = '', 
                        description = ympa_python_pydantic_v1_client.models.goods_feedback_description_dto.GoodsFeedbackDescriptionDTO(
                            advantages = '', 
                            disadvantages = '', 
                            comment = '', ), 
                        media = ympa_python_pydantic_v1_client.models.goods_feedback_media_dto.GoodsFeedbackMediaDTO(
                            photos = [
                                ''
                                ], 
                            videos = [
                                ''
                                ], ), 
                        statistics = ympa_python_pydantic_v1_client.models.goods_feedback_statistics_dto.GoodsFeedbackStatisticsDTO(
                            rating = 1, 
                            comments_count = 56, 
                            recommended = True, 
                            paid_amount = 56, ), )
                    ],
                paging = ympa_python_pydantic_v1_client.models.forward_scrolling_pager_dto.ForwardScrollingPagerDTO(
                    next_page_token = '', )
            )
        else:
            return GoodsFeedbackListDTO(
                feedbacks = [
                    ympa_python_pydantic_v1_client.models.goods_feedback_dto.GoodsFeedbackDTO(
                        feedback_id = 56, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        need_reaction = True, 
                        identifiers = ympa_python_pydantic_v1_client.models.goods_feedback_identifiers_dto.GoodsFeedbackIdentifiersDTO(
                            order_id = 56, 
                            model_id = 56, ), 
                        author = '', 
                        description = ympa_python_pydantic_v1_client.models.goods_feedback_description_dto.GoodsFeedbackDescriptionDTO(
                            advantages = '', 
                            disadvantages = '', 
                            comment = '', ), 
                        media = ympa_python_pydantic_v1_client.models.goods_feedback_media_dto.GoodsFeedbackMediaDTO(
                            photos = [
                                ''
                                ], 
                            videos = [
                                ''
                                ], ), 
                        statistics = ympa_python_pydantic_v1_client.models.goods_feedback_statistics_dto.GoodsFeedbackStatisticsDTO(
                            rating = 1, 
                            comments_count = 56, 
                            recommended = True, 
                            paid_amount = 56, ), )
                    ],
        )
        """

    def testGoodsFeedbackListDTO(self):
        """Test GoodsFeedbackListDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
