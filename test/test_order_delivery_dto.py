# coding: utf-8

"""
    Партнерский API Маркета

    API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

    The version of the OpenAPI document: LATEST
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from ympa_python_pydantic_v1_client.models.order_delivery_dto import OrderDeliveryDTO  # noqa: E501

class TestOrderDeliveryDTO(unittest.TestCase):
    """OrderDeliveryDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderDeliveryDTO:
        """Test OrderDeliveryDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderDeliveryDTO`
        """
        model = OrderDeliveryDTO()  # noqa: E501
        if include_optional:
            return OrderDeliveryDTO(
                id = '',
                type = 'DELIVERY',
                service_name = '',
                price = 1.337,
                delivery_partner_type = 'SHOP',
                courier = ympa_python_pydantic_v1_client.models.order_courier_dto.OrderCourierDTO(
                    full_name = '', 
                    phone = '', 
                    phone_extension = '', 
                    vehicle_number = '', 
                    vehicle_description = '', ),
                dates = ympa_python_pydantic_v1_client.models.order_delivery_dates_dto.OrderDeliveryDatesDTO(
                    from_date = '23-09-2022', 
                    to_date = '23-09-2022', 
                    from_time = '', 
                    to_time = '', 
                    real_delivery_date = '23-09-2022', ),
                region = ympa_python_pydantic_v1_client.models.region_dto.RegionDTO(
                    id = 56, 
                    name = '', 
                    type = 'OTHER', 
                    parent = ympa_python_pydantic_v1_client.models.region_dto.RegionDTO(
                        id = 56, 
                        name = '', 
                        type = 'OTHER', 
                        children = [
                            
                            ], ), 
                    children = [
                        
                        ], ),
                address = ympa_python_pydantic_v1_client.models.order_delivery_address_dto.OrderDeliveryAddressDTO(
                    country = '', 
                    postcode = '', 
                    city = '', 
                    district = '', 
                    subway = '', 
                    street = '', 
                    house = '', 
                    block = '', 
                    entrance = '', 
                    entryphone = '', 
                    floor = '', 
                    apartment = '', 
                    phone = '', 
                    recipient = '', 
                    gps = ympa_python_pydantic_v1_client.models.gps_dto.GpsDTO(
                        latitude = 1.337, 
                        longitude = 1.337, ), ),
                vat = 'NO_VAT',
                delivery_service_id = 56,
                lift_type = 'NOT_NEEDED',
                lift_price = 1.337,
                outlet_code = '',
                outlet_storage_limit_date = '23-09-2022',
                dispatch_type = 'UNKNOWN',
                tracks = [
                    ympa_python_pydantic_v1_client.models.order_track_dto.OrderTrackDTO(
                        track_code = '', 
                        delivery_service_id = 56, )
                    ],
                shipments = [
                    ympa_python_pydantic_v1_client.models.order_shipment_dto.OrderShipmentDTO(
                        id = 56, 
                        shipment_date = '23-09-2022', 
                        shipment_time = '', 
                        tracks = [
                            ympa_python_pydantic_v1_client.models.order_track_dto.OrderTrackDTO(
                                track_code = '', 
                                delivery_service_id = 56, )
                            ], 
                        boxes = [
                            ympa_python_pydantic_v1_client.models.order_parcel_box_dto.OrderParcelBoxDTO(
                                id = 56, 
                                fulfilment_id = '', )
                            ], )
                    ],
                estimated = True,
                eac_type = 'MERCHANT_TO_COURIER',
                eac_code = ''
            )
        else:
            return OrderDeliveryDTO(
        )
        """

    def testOrderDeliveryDTO(self):
        """Test OrderDeliveryDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
