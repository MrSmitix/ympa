/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  }
}(this, function(expect, Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Api.ShipmentsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ShipmentsApi', function() {
    describe('confirmShipment', function() {
      it('should call confirmShipment successfully', function(done) {
        //uncomment below and update the code to test confirmShipment
        //instance.confirmShipment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downloadShipmentAct', function() {
      it('should call downloadShipmentAct successfully', function(done) {
        //uncomment below and update the code to test downloadShipmentAct
        //instance.downloadShipmentAct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downloadShipmentDiscrepancyAct', function() {
      it('should call downloadShipmentDiscrepancyAct successfully', function(done) {
        //uncomment below and update the code to test downloadShipmentDiscrepancyAct
        //instance.downloadShipmentDiscrepancyAct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downloadShipmentInboundAct', function() {
      it('should call downloadShipmentInboundAct successfully', function(done) {
        //uncomment below and update the code to test downloadShipmentInboundAct
        //instance.downloadShipmentInboundAct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downloadShipmentPalletLabels', function() {
      it('should call downloadShipmentPalletLabels successfully', function(done) {
        //uncomment below and update the code to test downloadShipmentPalletLabels
        //instance.downloadShipmentPalletLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downloadShipmentReceptionTransferAct', function() {
      it('should call downloadShipmentReceptionTransferAct successfully', function(done) {
        //uncomment below and update the code to test downloadShipmentReceptionTransferAct
        //instance.downloadShipmentReceptionTransferAct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downloadShipmentTransportationWaybill', function() {
      it('should call downloadShipmentTransportationWaybill successfully', function(done) {
        //uncomment below and update the code to test downloadShipmentTransportationWaybill
        //instance.downloadShipmentTransportationWaybill(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getShipment', function() {
      it('should call getShipment successfully', function(done) {
        //uncomment below and update the code to test getShipment
        //instance.getShipment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getShipmentOrdersInfo', function() {
      it('should call getShipmentOrdersInfo successfully', function(done) {
        //uncomment below and update the code to test getShipmentOrdersInfo
        //instance.getShipmentOrdersInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchShipments', function() {
      it('should call searchShipments successfully', function(done) {
        //uncomment below and update the code to test searchShipments
        //instance.searchShipments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setShipmentPalletsCount', function() {
      it('should call setShipmentPalletsCount successfully', function(done) {
        //uncomment below and update the code to test setShipmentPalletsCount
        //instance.setShipmentPalletsCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('transferOrdersFromShipment', function() {
      it('should call transferOrdersFromShipment successfully', function(done) {
        //uncomment below and update the code to test transferOrdersFromShipment
        //instance.transferOrdersFromShipment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
