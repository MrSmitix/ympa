# coding: utf-8

"""
    Партнерский API Маркета

    API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

    The version of the OpenAPI document: LATEST
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from ympa_python_pydantic_v1_client.models.orders_stats_dto import OrdersStatsDTO  # noqa: E501

class TestOrdersStatsDTO(unittest.TestCase):
    """OrdersStatsDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrdersStatsDTO:
        """Test OrdersStatsDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrdersStatsDTO`
        """
        model = OrdersStatsDTO()  # noqa: E501
        if include_optional:
            return OrdersStatsDTO(
                orders = [
                    ympa_python_pydantic_v1_client.models.orders_stats_order_dto.OrdersStatsOrderDTO(
                        id = 56, 
                        creation_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        status_update_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        status = 'CANCELLED_BEFORE_PROCESSING', 
                        partner_order_id = '', 
                        payment_type = 'CREDIT', 
                        fake = True, 
                        delivery_region = ympa_python_pydantic_v1_client.models.orders_stats_delivery_region_dto.OrdersStatsDeliveryRegionDTO(
                            id = 56, 
                            name = '', ), 
                        items = [
                            ympa_python_pydantic_v1_client.models.orders_stats_item_dto.OrdersStatsItemDTO(
                                offer_name = '', 
                                market_sku = 56, 
                                shop_sku = 'jUR,rZ#UM/?R,Fp^l6$ARjbhJk C>i H'qT\\{<?'es#)#iK.YM{Rag2/!KB!k@5oXh.:Ts\";mGL,i&z5[P@M\"lzfB+Y,Twzfu~N^z\"mfqecVU{SmA{QA<Y8XX0<}J;Krm9W'g~?)DvDDLE7-'(u+-7Tfp&\\`F+7-?{%@=iEPLVY*a@A[b_6cfy~~0GcD_@b4Y=U?otJ(e#=I@b(lK%|5-Ido0', 
                                count = 56, 
                                prices = [
                                    ympa_python_pydantic_v1_client.models.orders_stats_price_dto.OrdersStatsPriceDTO(
                                        type = 'BUYER', 
                                        cost_per_item = 1.337, 
                                        total = 1.337, )
                                    ], 
                                warehouse = ympa_python_pydantic_v1_client.models.orders_stats_warehouse_dto.OrdersStatsWarehouseDTO(
                                    id = 56, 
                                    name = '', ), 
                                details = [
                                    ympa_python_pydantic_v1_client.models.orders_stats_details_dto.OrdersStatsDetailsDTO(
                                        item_status = 'REJECTED', 
                                        item_count = 56, 
                                        update_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                        stock_type = 'FIT', )
                                    ], 
                                cis_list = [
                                    ''
                                    ], 
                                initial_count = 56, 
                                bid_fee = 570, 
                                cofinance_threshold = 1.337, 
                                cofinance_value = 1.337, )
                            ], 
                        initial_items = [
                            ympa_python_pydantic_v1_client.models.orders_stats_item_dto.OrdersStatsItemDTO(
                                offer_name = '', 
                                count = 56, 
                                initial_count = 56, 
                                bid_fee = 570, 
                                cofinance_threshold = 1.337, 
                                cofinance_value = 1.337, )
                            ], 
                        payments = [
                            ympa_python_pydantic_v1_client.models.orders_stats_payment_dto.OrdersStatsPaymentDTO(
                                id = '', 
                                date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                source = 'BUYER', 
                                total = 1.337, 
                                payment_order = ympa_python_pydantic_v1_client.models.orders_stats_payment_order_dto.OrdersStatsPaymentOrderDTO(
                                    id = '', 
                                    date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ), )
                            ], 
                        commissions = [
                            ympa_python_pydantic_v1_client.models.orders_stats_commission_dto.OrdersStatsCommissionDTO(
                                actual = 1.337, )
                            ], )
                    ],
                paging = ympa_python_pydantic_v1_client.models.forward_scrolling_pager_dto.ForwardScrollingPagerDTO(
                    next_page_token = '', )
            )
        else:
            return OrdersStatsDTO(
                orders = [
                    ympa_python_pydantic_v1_client.models.orders_stats_order_dto.OrdersStatsOrderDTO(
                        id = 56, 
                        creation_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        status_update_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        status = 'CANCELLED_BEFORE_PROCESSING', 
                        partner_order_id = '', 
                        payment_type = 'CREDIT', 
                        fake = True, 
                        delivery_region = ympa_python_pydantic_v1_client.models.orders_stats_delivery_region_dto.OrdersStatsDeliveryRegionDTO(
                            id = 56, 
                            name = '', ), 
                        items = [
                            ympa_python_pydantic_v1_client.models.orders_stats_item_dto.OrdersStatsItemDTO(
                                offer_name = '', 
                                market_sku = 56, 
                                shop_sku = 'jUR,rZ#UM/?R,Fp^l6$ARjbhJk C>i H'qT\\{<?'es#)#iK.YM{Rag2/!KB!k@5oXh.:Ts\";mGL,i&z5[P@M\"lzfB+Y,Twzfu~N^z\"mfqecVU{SmA{QA<Y8XX0<}J;Krm9W'g~?)DvDDLE7-'(u+-7Tfp&\\`F+7-?{%@=iEPLVY*a@A[b_6cfy~~0GcD_@b4Y=U?otJ(e#=I@b(lK%|5-Ido0', 
                                count = 56, 
                                prices = [
                                    ympa_python_pydantic_v1_client.models.orders_stats_price_dto.OrdersStatsPriceDTO(
                                        type = 'BUYER', 
                                        cost_per_item = 1.337, 
                                        total = 1.337, )
                                    ], 
                                warehouse = ympa_python_pydantic_v1_client.models.orders_stats_warehouse_dto.OrdersStatsWarehouseDTO(
                                    id = 56, 
                                    name = '', ), 
                                details = [
                                    ympa_python_pydantic_v1_client.models.orders_stats_details_dto.OrdersStatsDetailsDTO(
                                        item_status = 'REJECTED', 
                                        item_count = 56, 
                                        update_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                        stock_type = 'FIT', )
                                    ], 
                                cis_list = [
                                    ''
                                    ], 
                                initial_count = 56, 
                                bid_fee = 570, 
                                cofinance_threshold = 1.337, 
                                cofinance_value = 1.337, )
                            ], 
                        initial_items = [
                            ympa_python_pydantic_v1_client.models.orders_stats_item_dto.OrdersStatsItemDTO(
                                offer_name = '', 
                                count = 56, 
                                initial_count = 56, 
                                bid_fee = 570, 
                                cofinance_threshold = 1.337, 
                                cofinance_value = 1.337, )
                            ], 
                        payments = [
                            ympa_python_pydantic_v1_client.models.orders_stats_payment_dto.OrdersStatsPaymentDTO(
                                id = '', 
                                date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                source = 'BUYER', 
                                total = 1.337, 
                                payment_order = ympa_python_pydantic_v1_client.models.orders_stats_payment_order_dto.OrdersStatsPaymentOrderDTO(
                                    id = '', 
                                    date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ), )
                            ], 
                        commissions = [
                            ympa_python_pydantic_v1_client.models.orders_stats_commission_dto.OrdersStatsCommissionDTO(
                                actual = 1.337, )
                            ], )
                    ],
        )
        """

    def testOrdersStatsDTO(self):
        """Test OrdersStatsDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
