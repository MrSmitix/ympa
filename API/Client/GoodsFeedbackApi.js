/**
 * @fileoverview AUTOMATICALLY GENERATED service for API.Client.GoodsFeedbackApi.
 * Do not edit this file by hand or your changes will be lost next time it is
 * generated.
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 * Version: LATEST
* Generator version: 7.8.0
 * Generated by: org.openapitools.codegen.languages.JavascriptClosureAngularClientCodegen
 */
/**
 * @license BSD 3-Clause
 * https://opensource.org/license/bsd-3-clause/
 */

goog.provide('API.Client.GoodsFeedbackApi');

goog.require('API.Client.ApiClientDataErrorResponse');
goog.require('API.Client.ApiForbiddenErrorResponse');
goog.require('API.Client.ApiLimitErrorResponse');
goog.require('API.Client.ApiNotFoundErrorResponse');
goog.require('API.Client.ApiServerErrorResponse');
goog.require('API.Client.ApiUnauthorizedErrorResponse');
goog.require('API.Client.DeleteGoodsFeedbackCommentRequest');
goog.require('API.Client.EmptyApiResponse');
goog.require('API.Client.GetGoodsFeedbackCommentsRequest');
goog.require('API.Client.GetGoodsFeedbackCommentsResponse');
goog.require('API.Client.GetGoodsFeedbackRequest');
goog.require('API.Client.GetGoodsFeedbackResponse');
goog.require('API.Client.SkipGoodsFeedbackReactionRequest');
goog.require('API.Client.UpdateGoodsFeedbackCommentRequest');
goog.require('API.Client.UpdateGoodsFeedbackCommentResponse');

/**
 * @constructor
 * @param {!angular.$http} $http
 * @param {!Object} $httpParamSerializer
 * @param {!angular.$injector} $injector
 * @struct
 */
API.Client.GoodsFeedbackApi = function($http, $httpParamSerializer, $injector) {
  /** @private {!string} */
  this.basePath_ = $injector.has('GoodsFeedbackApiBasePath') ?
                   /** @type {!string} */ ($injector.get('GoodsFeedbackApiBasePath')) :
                   'https://api.partner.market.yandex.ru';

  /** @private {!Object<string, string>} */
  this.defaultHeaders_ = $injector.has('GoodsFeedbackApiDefaultHeaders') ?
                   /** @type {!Object<string, string>} */ (
                       $injector.get('GoodsFeedbackApiDefaultHeaders')) :
                   {};

  /** @private {!angular.$http} */
  this.http_ = $http;

  /** @package {!Object} */
  this.httpParamSerializer = $injector.get('$httpParamSerializer');
}
API.Client.GoodsFeedbackApi.$inject = ['$http', '$httpParamSerializer', '$injector'];

/**
 * Удаление комментария к отзыву
 * Удаляет комментарий магазина.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
 * @param {!number} businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
 * @param {!DeleteGoodsFeedbackCommentRequest} deleteGoodsFeedbackCommentRequest 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.EmptyApiResponse>}
 */
API.Client.GoodsFeedbackApi.prototype.deleteGoodsFeedbackComment = function(businessId, deleteGoodsFeedbackCommentRequest, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/businesses/{businessId}/goods-feedback/comments/delete'
      .replace('{' + 'businessId' + '}', String(businessId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'businessId' is set
  if (!businessId) {
    throw new Error('Missing required parameter businessId when calling deleteGoodsFeedbackComment');
  }
  // verify required parameter 'deleteGoodsFeedbackCommentRequest' is set
  if (!deleteGoodsFeedbackCommentRequest) {
    throw new Error('Missing required parameter deleteGoodsFeedbackCommentRequest when calling deleteGoodsFeedbackComment');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: deleteGoodsFeedbackCommentRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Получение комментариев к отзыву
 * Возвращает комментарии к отзыву.  Результаты возвращаются постранично, одна страница содержит не более 20 комментариев.  Комментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в &#x60;page_token&#x60;, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
 * @param {!number} businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
 * @param {!GetGoodsFeedbackCommentsRequest} getGoodsFeedbackCommentsRequest 
 * @param {!string=} opt_pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. 
 * @param {!number=} opt_limit Количество значений на одной странице. 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GetGoodsFeedbackCommentsResponse>}
 */
API.Client.GoodsFeedbackApi.prototype.getGoodsFeedbackComments = function(businessId, getGoodsFeedbackCommentsRequest, opt_pageToken, opt_limit, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/businesses/{businessId}/goods-feedback/comments'
      .replace('{' + 'businessId' + '}', String(businessId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'businessId' is set
  if (!businessId) {
    throw new Error('Missing required parameter businessId when calling getGoodsFeedbackComments');
  }
  // verify required parameter 'getGoodsFeedbackCommentsRequest' is set
  if (!getGoodsFeedbackCommentsRequest) {
    throw new Error('Missing required parameter getGoodsFeedbackCommentsRequest when calling getGoodsFeedbackComments');
  }
  if (opt_pageToken !== undefined) {
    queryParameters['page_token'] = opt_pageToken;
  }

  if (opt_limit !== undefined) {
    queryParameters['limit'] = opt_limit;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: getGoodsFeedbackCommentsRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Получение отзывов о товарах продавца
 * Возвращает все отзывы о товарах продавца по указанным фильтрам.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов.  Отзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в &#x60;page_token&#x60;, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
 * @param {!number} businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
 * @param {!string=} opt_pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. 
 * @param {!number=} opt_limit Количество значений на одной странице. 
 * @param {!GetGoodsFeedbackRequest=} opt_getGoodsFeedbackRequest 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GetGoodsFeedbackResponse>}
 */
API.Client.GoodsFeedbackApi.prototype.getGoodsFeedbacks = function(businessId, opt_pageToken, opt_limit, opt_getGoodsFeedbackRequest, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/businesses/{businessId}/goods-feedback'
      .replace('{' + 'businessId' + '}', String(businessId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'businessId' is set
  if (!businessId) {
    throw new Error('Missing required parameter businessId when calling getGoodsFeedbacks');
  }
  if (opt_pageToken !== undefined) {
    queryParameters['page_token'] = opt_pageToken;
  }

  if (opt_limit !== undefined) {
    queryParameters['limit'] = opt_limit;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: opt_getGoodsFeedbackRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Отказ от ответа на отзывы
 * Пропускает отзывы — они больше не будут возвращаться в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
 * @param {!number} businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
 * @param {!SkipGoodsFeedbackReactionRequest} skipGoodsFeedbackReactionRequest 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.EmptyApiResponse>}
 */
API.Client.GoodsFeedbackApi.prototype.skipGoodsFeedbacksReaction = function(businessId, skipGoodsFeedbackReactionRequest, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/businesses/{businessId}/goods-feedback/skip-reaction'
      .replace('{' + 'businessId' + '}', String(businessId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'businessId' is set
  if (!businessId) {
    throw new Error('Missing required parameter businessId when calling skipGoodsFeedbacksReaction');
  }
  // verify required parameter 'skipGoodsFeedbackReactionRequest' is set
  if (!skipGoodsFeedbackReactionRequest) {
    throw new Error('Missing required parameter skipGoodsFeedbackReactionRequest when calling skipGoodsFeedbacksReaction');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: skipGoodsFeedbackReactionRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Добавление нового или изменение созданного комментария
 * Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.  Для создания комментария к отзыву передайте только идентификатор отзыва &#x60;feedbackId&#x60;.  Чтобы добавить комментарий к другому комментарию, передайте:  * &#x60;feedbackId&#x60; — идентификатор отзыва; * &#x60;comment.parentId&#x60; — идентификатор родительского комментария.  Чтобы изменить комментарий, передайте:  * &#x60;feedbackId&#x60;— идентификатор отзыва; * &#x60;comment.id&#x60; — идентификатор комментария, который нужно изменить.  Если передать одновременно &#x60;comment.parentId&#x60; и &#x60;comment.id&#x60;, будет изменен существующий комментарий.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
 * @param {!number} businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
 * @param {!UpdateGoodsFeedbackCommentRequest} updateGoodsFeedbackCommentRequest 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.UpdateGoodsFeedbackCommentResponse>}
 */
API.Client.GoodsFeedbackApi.prototype.updateGoodsFeedbackComment = function(businessId, updateGoodsFeedbackCommentRequest, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/businesses/{businessId}/goods-feedback/comments/update'
      .replace('{' + 'businessId' + '}', String(businessId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'businessId' is set
  if (!businessId) {
    throw new Error('Missing required parameter businessId when calling updateGoodsFeedbackComment');
  }
  // verify required parameter 'updateGoodsFeedbackCommentRequest' is set
  if (!updateGoodsFeedbackCommentRequest) {
    throw new Error('Missing required parameter updateGoodsFeedbackCommentRequest when calling updateGoodsFeedbackComment');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: updateGoodsFeedbackCommentRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}
