/**
 * @fileoverview AUTOMATICALLY GENERATED service for API.Client.ReportsApi.
 * Do not edit this file by hand or your changes will be lost next time it is
 * generated.
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 * Version: LATEST
* Generator version: 7.8.0
 * Generated by: org.openapitools.codegen.languages.JavascriptClosureAngularClientCodegen
 */
/**
 * @license BSD 3-Clause
 * https://opensource.org/license/bsd-3-clause/
 */

goog.provide('API.Client.ReportsApi');

goog.require('API.Client.ApiClientDataErrorResponse');
goog.require('API.Client.ApiForbiddenErrorResponse');
goog.require('API.Client.ApiLimitErrorResponse');
goog.require('API.Client.ApiNotFoundErrorResponse');
goog.require('API.Client.ApiServerErrorResponse');
goog.require('API.Client.ApiUnauthorizedErrorResponse');
goog.require('API.Client.GenerateBoostConsolidatedRequest');
goog.require('API.Client.GenerateCompetitorsPositionReportRequest');
goog.require('API.Client.GenerateGoodsFeedbackRequest');
goog.require('API.Client.GenerateGoodsMovementReportRequest');
goog.require('API.Client.GenerateGoodsRealizationReportRequest');
goog.require('API.Client.GenerateGoodsTurnoverRequest');
goog.require('API.Client.GenerateMassOrderLabelsRequest');
goog.require('API.Client.GeneratePricesReportRequest');
goog.require('API.Client.GenerateReportResponse');
goog.require('API.Client.GenerateShelfsStatisticsRequest');
goog.require('API.Client.GenerateShipmentListDocumentReportRequest');
goog.require('API.Client.GenerateShowsSalesReportRequest');
goog.require('API.Client.GenerateStocksOnWarehousesReportRequest');
goog.require('API.Client.GenerateUnitedMarketplaceServicesReportRequest');
goog.require('API.Client.GenerateUnitedNettingReportRequest');
goog.require('API.Client.GenerateUnitedOrdersRequest');
goog.require('API.Client.GetReportInfoResponse');
goog.require('API.Client.PageFormatType');
goog.require('API.Client.ReportFormatType');

/**
 * @constructor
 * @param {!angular.$http} $http
 * @param {!Object} $httpParamSerializer
 * @param {!angular.$injector} $injector
 * @struct
 */
API.Client.ReportsApi = function($http, $httpParamSerializer, $injector) {
  /** @private {!string} */
  this.basePath_ = $injector.has('ReportsApiBasePath') ?
                   /** @type {!string} */ ($injector.get('ReportsApiBasePath')) :
                   'https://api.partner.market.yandex.ru';

  /** @private {!Object<string, string>} */
  this.defaultHeaders_ = $injector.has('ReportsApiDefaultHeaders') ?
                   /** @type {!Object<string, string>} */ (
                       $injector.get('ReportsApiDefaultHeaders')) :
                   {};

  /** @private {!angular.$http} */
  this.http_ = $http;

  /** @package {!Object} */
  this.httpParamSerializer = $injector.get('$httpParamSerializer');
}
API.Client.ReportsApi.$inject = ['$http', '$httpParamSerializer', '$injector'];

/**
 * Отчет по бусту продаж
 * Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
 * @param {!GenerateBoostConsolidatedRequest} generateBoostConsolidatedRequest 
 * @param {!ReportFormatType=} opt_format Формат отчета.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GenerateReportResponse>}
 */
API.Client.ReportsApi.prototype.generateBoostConsolidatedReport = function(generateBoostConsolidatedRequest, opt_format, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/reports/boost-consolidated/generate';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'generateBoostConsolidatedRequest' is set
  if (!generateBoostConsolidatedRequest) {
    throw new Error('Missing required parameter generateBoostConsolidatedRequest when calling generateBoostConsolidatedReport');
  }
  if (opt_format !== undefined) {
    queryParameters['format'] = opt_format;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: generateBoostConsolidatedRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Отчет «Конкурентная позиция»
 * Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \&quot;Значение -1 в отчете\&quot; %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| 
 * @param {!GenerateCompetitorsPositionReportRequest} generateCompetitorsPositionReportRequest 
 * @param {!ReportFormatType=} opt_format Формат отчета.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GenerateReportResponse>}
 */
API.Client.ReportsApi.prototype.generateCompetitorsPositionReport = function(generateCompetitorsPositionReportRequest, opt_format, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/reports/competitors-position/generate';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'generateCompetitorsPositionReportRequest' is set
  if (!generateCompetitorsPositionReportRequest) {
    throw new Error('Missing required parameter generateCompetitorsPositionReportRequest when calling generateCompetitorsPositionReport');
  }
  if (opt_format !== undefined) {
    queryParameters['format'] = opt_format;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: generateCompetitorsPositionReportRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Отчет по отзывам о товарах
 * Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
 * @param {!GenerateGoodsFeedbackRequest} generateGoodsFeedbackRequest 
 * @param {!ReportFormatType=} opt_format Формат отчета.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GenerateReportResponse>}
 */
API.Client.ReportsApi.prototype.generateGoodsFeedbackReport = function(generateGoodsFeedbackRequest, opt_format, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/reports/goods-feedback/generate';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'generateGoodsFeedbackRequest' is set
  if (!generateGoodsFeedbackRequest) {
    throw new Error('Missing required parameter generateGoodsFeedbackRequest when calling generateGoodsFeedbackReport');
  }
  if (opt_format !== undefined) {
    queryParameters['format'] = opt_format;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: generateGoodsFeedbackRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Отчет по движению товаров
 * Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
 * @param {!GenerateGoodsMovementReportRequest} generateGoodsMovementReportRequest 
 * @param {!ReportFormatType=} opt_format Формат отчета.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GenerateReportResponse>}
 */
API.Client.ReportsApi.prototype.generateGoodsMovementReport = function(generateGoodsMovementReportRequest, opt_format, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/reports/goods-movement/generate';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'generateGoodsMovementReportRequest' is set
  if (!generateGoodsMovementReportRequest) {
    throw new Error('Missing required parameter generateGoodsMovementReportRequest when calling generateGoodsMovementReport');
  }
  if (opt_format !== undefined) {
    queryParameters['format'] = opt_format;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: generateGoodsMovementReportRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Отчет по реализации
 * Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
 * @param {!GenerateGoodsRealizationReportRequest} generateGoodsRealizationReportRequest 
 * @param {!ReportFormatType=} opt_format Формат отчета.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GenerateReportResponse>}
 */
API.Client.ReportsApi.prototype.generateGoodsRealizationReport = function(generateGoodsRealizationReportRequest, opt_format, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/reports/goods-realization/generate';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'generateGoodsRealizationReportRequest' is set
  if (!generateGoodsRealizationReportRequest) {
    throw new Error('Missing required parameter generateGoodsRealizationReportRequest when calling generateGoodsRealizationReport');
  }
  if (opt_format !== undefined) {
    queryParameters['format'] = opt_format;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: generateGoodsRealizationReportRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Отчет по оборачиваемости
 * Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
 * @param {!GenerateGoodsTurnoverRequest} generateGoodsTurnoverRequest 
 * @param {!ReportFormatType=} opt_format Формат отчета.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GenerateReportResponse>}
 */
API.Client.ReportsApi.prototype.generateGoodsTurnoverReport = function(generateGoodsTurnoverRequest, opt_format, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/reports/goods-turnover/generate';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'generateGoodsTurnoverRequest' is set
  if (!generateGoodsTurnoverRequest) {
    throw new Error('Missing required parameter generateGoodsTurnoverRequest when calling generateGoodsTurnoverReport');
  }
  if (opt_format !== undefined) {
    queryParameters['format'] = opt_format;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: generateGoodsTurnoverRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Готовые ярлыки‑наклейки на все коробки в нескольких заказах
 * Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| 
 * @param {!GenerateMassOrderLabelsRequest} generateMassOrderLabelsRequest 
 * @param {!PageFormatType=} opt_format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GenerateReportResponse>}
 */
API.Client.ReportsApi.prototype.generateMassOrderLabelsReport = function(generateMassOrderLabelsRequest, opt_format, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/reports/documents/labels/generate';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'generateMassOrderLabelsRequest' is set
  if (!generateMassOrderLabelsRequest) {
    throw new Error('Missing required parameter generateMassOrderLabelsRequest when calling generateMassOrderLabelsReport');
  }
  if (opt_format !== undefined) {
    queryParameters['format'] = opt_format;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: generateMassOrderLabelsRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Отчет «Цены на рынке»
 * Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
 * @param {!GeneratePricesReportRequest} generatePricesReportRequest 
 * @param {!ReportFormatType=} opt_format Формат отчета.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GenerateReportResponse>}
 */
API.Client.ReportsApi.prototype.generatePricesReport = function(generatePricesReportRequest, opt_format, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/reports/prices/generate';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'generatePricesReportRequest' is set
  if (!generatePricesReportRequest) {
    throw new Error('Missing required parameter generatePricesReportRequest when calling generatePricesReport');
  }
  if (opt_format !== undefined) {
    queryParameters['format'] = opt_format;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: generatePricesReportRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Отчет по полкам
 * Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
 * @param {!GenerateShelfsStatisticsRequest} generateShelfsStatisticsRequest 
 * @param {!ReportFormatType=} opt_format Формат отчета.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GenerateReportResponse>}
 */
API.Client.ReportsApi.prototype.generateShelfsStatisticsReport = function(generateShelfsStatisticsRequest, opt_format, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/reports/shelf-statistics/generate';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'generateShelfsStatisticsRequest' is set
  if (!generateShelfsStatisticsRequest) {
    throw new Error('Missing required parameter generateShelfsStatisticsRequest when calling generateShelfsStatisticsReport');
  }
  if (opt_format !== undefined) {
    queryParameters['format'] = opt_format;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: generateShelfsStatisticsRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Получение листа сборки
 * Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
 * @param {!GenerateShipmentListDocumentReportRequest} generateShipmentListDocumentReportRequest 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GenerateReportResponse>}
 */
API.Client.ReportsApi.prototype.generateShipmentListDocumentReport = function(generateShipmentListDocumentReportRequest, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/reports/documents/shipment-list/generate';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'generateShipmentListDocumentReportRequest' is set
  if (!generateShipmentListDocumentReportRequest) {
    throw new Error('Missing required parameter generateShipmentListDocumentReportRequest when calling generateShipmentListDocumentReport');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: generateShipmentListDocumentReportRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Отчет «Аналитика продаж»
 * Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| 
 * @param {!GenerateShowsSalesReportRequest} generateShowsSalesReportRequest 
 * @param {!ReportFormatType=} opt_format Формат отчета.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GenerateReportResponse>}
 */
API.Client.ReportsApi.prototype.generateShowsSalesReport = function(generateShowsSalesReportRequest, opt_format, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/reports/shows-sales/generate';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'generateShowsSalesReportRequest' is set
  if (!generateShowsSalesReportRequest) {
    throw new Error('Missing required parameter generateShowsSalesReportRequest when calling generateShowsSalesReport');
  }
  if (opt_format !== undefined) {
    queryParameters['format'] = opt_format;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: generateShowsSalesReportRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Отчет по остаткам на складах
 * Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
 * @param {!GenerateStocksOnWarehousesReportRequest} generateStocksOnWarehousesReportRequest 
 * @param {!ReportFormatType=} opt_format Формат отчета.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GenerateReportResponse>}
 */
API.Client.ReportsApi.prototype.generateStocksOnWarehousesReport = function(generateStocksOnWarehousesReportRequest, opt_format, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/reports/stocks-on-warehouses/generate';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'generateStocksOnWarehousesReportRequest' is set
  if (!generateStocksOnWarehousesReportRequest) {
    throw new Error('Missing required parameter generateStocksOnWarehousesReportRequest when calling generateStocksOnWarehousesReport');
  }
  if (opt_format !== undefined) {
    queryParameters['format'] = opt_format;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: generateStocksOnWarehousesReportRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Отчет по стоимости услуг
 * Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |-----------------------------|---------------------------------| |По дате начисления услуги    |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;            | |По дате формирования акта    |&#x60;year&#x60; и &#x60;month&#x60;                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
 * @param {!GenerateUnitedMarketplaceServicesReportRequest} generateUnitedMarketplaceServicesReportRequest 
 * @param {!ReportFormatType=} opt_format Формат отчета.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GenerateReportResponse>}
 */
API.Client.ReportsApi.prototype.generateUnitedMarketplaceServicesReport = function(generateUnitedMarketplaceServicesReportRequest, opt_format, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/reports/united-marketplace-services/generate';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'generateUnitedMarketplaceServicesReportRequest' is set
  if (!generateUnitedMarketplaceServicesReportRequest) {
    throw new Error('Missing required parameter generateUnitedMarketplaceServicesReportRequest when calling generateUnitedMarketplaceServicesReport');
  }
  if (opt_format !== undefined) {
    queryParameters['format'] = opt_format;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: generateUnitedMarketplaceServicesReportRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Отчет по платежам
 * Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |-------------------------|---------------------------------------| |О платежах за период     |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;                  | |О платежном поручении    |&#x60;bankOrderId&#x60; и &#x60;bankOrderDateTime&#x60;    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| 
 * @param {!GenerateUnitedNettingReportRequest} generateUnitedNettingReportRequest 
 * @param {!ReportFormatType=} opt_format Формат отчета.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GenerateReportResponse>}
 */
API.Client.ReportsApi.prototype.generateUnitedNettingReport = function(generateUnitedNettingReportRequest, opt_format, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/reports/united-netting/generate';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'generateUnitedNettingReportRequest' is set
  if (!generateUnitedNettingReportRequest) {
    throw new Error('Missing required parameter generateUnitedNettingReportRequest when calling generateUnitedNettingReport');
  }
  if (opt_format !== undefined) {
    queryParameters['format'] = opt_format;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: generateUnitedNettingReportRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Отчет по заказам
 * Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \&quot;\&quot; %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
 * @param {!GenerateUnitedOrdersRequest} generateUnitedOrdersRequest 
 * @param {!ReportFormatType=} opt_format Формат отчета.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GenerateReportResponse>}
 */
API.Client.ReportsApi.prototype.generateUnitedOrdersReport = function(generateUnitedOrdersRequest, opt_format, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/reports/united-orders/generate';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'generateUnitedOrdersRequest' is set
  if (!generateUnitedOrdersRequest) {
    throw new Error('Missing required parameter generateUnitedOrdersRequest when calling generateUnitedOrdersReport');
  }
  if (opt_format !== undefined) {
    queryParameters['format'] = opt_format;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: generateUnitedOrdersRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Получение заданного отчета
 * Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
 * @param {!string} reportId Идентификатор отчета, который вы получили после запуска генерации. 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GetReportInfoResponse>}
 */
API.Client.ReportsApi.prototype.getReportInfo = function(reportId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/reports/info/{reportId}'
      .replace('{' + 'reportId' + '}', String(reportId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'reportId' is set
  if (!reportId) {
    throw new Error('Missing required parameter reportId when calling getReportInfo');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}
