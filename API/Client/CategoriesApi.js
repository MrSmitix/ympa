/**
 * @fileoverview AUTOMATICALLY GENERATED service for API.Client.CategoriesApi.
 * Do not edit this file by hand or your changes will be lost next time it is
 * generated.
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 * Version: LATEST
* Generator version: 7.8.0
 * Generated by: org.openapitools.codegen.languages.JavascriptClosureAngularClientCodegen
 */
/**
 * @license BSD 3-Clause
 * https://opensource.org/license/bsd-3-clause/
 */

goog.provide('API.Client.CategoriesApi');

goog.require('API.Client.ApiClientDataErrorResponse');
goog.require('API.Client.ApiForbiddenErrorResponse');
goog.require('API.Client.ApiLimitErrorResponse');
goog.require('API.Client.ApiNotFoundErrorResponse');
goog.require('API.Client.ApiServerErrorResponse');
goog.require('API.Client.ApiUnauthorizedErrorResponse');
goog.require('API.Client.GetCategoriesMaxSaleQuantumRequest');
goog.require('API.Client.GetCategoriesMaxSaleQuantumResponse');
goog.require('API.Client.GetCategoriesRequest');
goog.require('API.Client.GetCategoriesResponse');

/**
 * @constructor
 * @param {!angular.$http} $http
 * @param {!Object} $httpParamSerializer
 * @param {!angular.$injector} $injector
 * @struct
 */
API.Client.CategoriesApi = function($http, $httpParamSerializer, $injector) {
  /** @private {!string} */
  this.basePath_ = $injector.has('CategoriesApiBasePath') ?
                   /** @type {!string} */ ($injector.get('CategoriesApiBasePath')) :
                   'https://api.partner.market.yandex.ru';

  /** @private {!Object<string, string>} */
  this.defaultHeaders_ = $injector.has('CategoriesApiDefaultHeaders') ?
                   /** @type {!Object<string, string>} */ (
                       $injector.get('CategoriesApiDefaultHeaders')) :
                   {};

  /** @private {!angular.$http} */
  this.http_ = $http;

  /** @package {!Object} */
  this.httpParamSerializer = $injector.get('$httpParamSerializer');
}
API.Client.CategoriesApi.$inject = ['$http', '$httpParamSerializer', '$injector'];

/**
 * Лимит на установку кванта продажи и минимального количества товаров в заказе
 * Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
 * @param {!GetCategoriesMaxSaleQuantumRequest} getCategoriesMaxSaleQuantumRequest 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GetCategoriesMaxSaleQuantumResponse>}
 */
API.Client.CategoriesApi.prototype.getCategoriesMaxSaleQuantum = function(getCategoriesMaxSaleQuantumRequest, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/categories/max-sale-quantum';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'getCategoriesMaxSaleQuantumRequest' is set
  if (!getCategoriesMaxSaleQuantumRequest) {
    throw new Error('Missing required parameter getCategoriesMaxSaleQuantumRequest when calling getCategoriesMaxSaleQuantum');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: getCategoriesMaxSaleQuantumRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Дерево категорий
 * Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
 * @param {!GetCategoriesRequest=} opt_getCategoriesRequest 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GetCategoriesResponse>}
 */
API.Client.CategoriesApi.prototype.getCategoriesTree = function(opt_getCategoriesRequest, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/categories/tree';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: opt_getCategoriesRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}
