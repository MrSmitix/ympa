/**
 * @fileoverview AUTOMATICALLY GENERATED service for API.Client.ShipmentsApi.
 * Do not edit this file by hand or your changes will be lost next time it is
 * generated.
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 * Version: LATEST
* Generator version: 7.8.0
 * Generated by: org.openapitools.codegen.languages.JavascriptClosureAngularClientCodegen
 */
/**
 * @license BSD 3-Clause
 * https://opensource.org/license/bsd-3-clause/
 */

goog.provide('API.Client.ShipmentsApi');

goog.require('API.Client.ApiClientDataErrorResponse');
goog.require('API.Client.ApiForbiddenErrorResponse');
goog.require('API.Client.ApiLimitErrorResponse');
goog.require('API.Client.ApiNotFoundErrorResponse');
goog.require('API.Client.ApiServerErrorResponse');
goog.require('API.Client.ApiUnauthorizedErrorResponse');
goog.require('API.Client.ConfirmShipmentRequest');
goog.require('API.Client.EmptyApiResponse');
goog.require('API.Client.GetShipmentOrdersInfoResponse');
goog.require('API.Client.GetShipmentResponse');
goog.require('API.Client.SearchShipmentsRequest');
goog.require('API.Client.SearchShipmentsResponse');
goog.require('API.Client.SetShipmentPalletsCountRequest');
goog.require('API.Client.ShipmentPalletLabelPageFormatType');
goog.require('API.Client.TransferOrdersFromShipmentRequest');

/**
 * @constructor
 * @param {!angular.$http} $http
 * @param {!Object} $httpParamSerializer
 * @param {!angular.$injector} $injector
 * @struct
 */
API.Client.ShipmentsApi = function($http, $httpParamSerializer, $injector) {
  /** @private {!string} */
  this.basePath_ = $injector.has('ShipmentsApiBasePath') ?
                   /** @type {!string} */ ($injector.get('ShipmentsApiBasePath')) :
                   'https://api.partner.market.yandex.ru';

  /** @private {!Object<string, string>} */
  this.defaultHeaders_ = $injector.has('ShipmentsApiDefaultHeaders') ?
                   /** @type {!Object<string, string>} */ (
                       $injector.get('ShipmentsApiDefaultHeaders')) :
                   {};

  /** @private {!angular.$http} */
  this.http_ = $http;

  /** @package {!Object} */
  this.httpParamSerializer = $injector.get('$httpParamSerializer');
}
API.Client.ShipmentsApi.$inject = ['$http', '$httpParamSerializer', '$injector'];

/**
 * Подтверждение отгрузки
 * Подтверждает отгрузку товаров в сортировочный центр или пункт приема заказов. |**⚙️ Лимит:** 100 запросов в час| |-| 
 * @param {!number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
 * @param {!number} shipmentId Идентификатор отгрузки.
 * @param {!ConfirmShipmentRequest=} opt_confirmShipmentRequest 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.EmptyApiResponse>}
 */
API.Client.ShipmentsApi.prototype.confirmShipment = function(campaignId, shipmentId, opt_confirmShipmentRequest, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/confirm'
      .replace('{' + 'campaignId' + '}', String(campaignId))
      .replace('{' + 'shipmentId' + '}', String(shipmentId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'campaignId' is set
  if (!campaignId) {
    throw new Error('Missing required parameter campaignId when calling confirmShipment');
  }
  // verify required parameter 'shipmentId' is set
  if (!shipmentId) {
    throw new Error('Missing required parameter shipmentId when calling confirmShipment');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: opt_confirmShipmentRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Получение акта приема-передачи
 * {% note warning \&quot;Экспресс‑доставка\&quot; %}  Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам Яндекс Go, подготавливать акт приема‑передачи не нужно.  {% endnote %}  Запрос формирует акт приема-передачи заказов, входящих в отгрузку, и возвращает акт в формате PDF. В акте содержатся собранные и готовые к отправке заказы.  При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:  {% cut \&quot;Данные, из которых Маркет формирует акт\&quot; %}  | **Данные в акте**                                         | **Описание**                                                                                                                                                                                                                                                         | | --------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Дата                                                      | Дата запроса.                                                                                                                                                                                                                                                        | | Отправитель                                               | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         | | Исполнитель                                               | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                | | № отправления в системе заказчика                         | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              | | № отправления в системе исполнителя (субподрядчика)       | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             | | Объявленная ценность                                      | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       | | Вес                                                       | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). | | Количество мест                                           | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |  {% endcut %}  Остальные поля нужно заполнить самостоятельно в распечатанном акте. |**⚙️ Лимит:** 100 запросов в час| |-| 
 * @param {!number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
 * @param {!number} shipmentId Идентификатор отгрузки.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Object>}
 */
API.Client.ShipmentsApi.prototype.downloadShipmentAct = function(campaignId, shipmentId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/act'
      .replace('{' + 'campaignId' + '}', String(campaignId))
      .replace('{' + 'shipmentId' + '}', String(shipmentId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'campaignId' is set
  if (!campaignId) {
    throw new Error('Missing required parameter campaignId when calling downloadShipmentAct');
  }
  // verify required parameter 'shipmentId' is set
  if (!shipmentId) {
    throw new Error('Missing required parameter shipmentId when calling downloadShipmentAct');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Получение акта расхождений
 * Возвращает акт расхождений для заданной отгрузки. |**⚙️ Лимит:** 200 запросов в час| |-| 
 * @param {!number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
 * @param {!number} shipmentId Идентификатор отгрузки.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Object>}
 */
API.Client.ShipmentsApi.prototype.downloadShipmentDiscrepancyAct = function(campaignId, shipmentId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/discrepancy-act'
      .replace('{' + 'campaignId' + '}', String(campaignId))
      .replace('{' + 'shipmentId' + '}', String(shipmentId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'campaignId' is set
  if (!campaignId) {
    throw new Error('Missing required parameter campaignId when calling downloadShipmentDiscrepancyAct');
  }
  // verify required parameter 'shipmentId' is set
  if (!shipmentId) {
    throw new Error('Missing required parameter shipmentId when calling downloadShipmentDiscrepancyAct');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Получение фактического акта приема-передачи
 * Возвращает фактический акт приема-передачи для заданной отгрузки.  Такой акт становится доступен спустя несколько часов после завершения отгрузки. Он может понадобиться, если после отгрузки обнаружатся расхождения.  |**⚙️ Лимит:** 200 запросов в час| |-| 
 * @param {!number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
 * @param {!number} shipmentId Идентификатор отгрузки.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Object>}
 */
API.Client.ShipmentsApi.prototype.downloadShipmentInboundAct = function(campaignId, shipmentId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/inbound-act'
      .replace('{' + 'campaignId' + '}', String(campaignId))
      .replace('{' + 'shipmentId' + '}', String(shipmentId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'campaignId' is set
  if (!campaignId) {
    throw new Error('Missing required parameter campaignId when calling downloadShipmentInboundAct');
  }
  // verify required parameter 'shipmentId' is set
  if (!shipmentId) {
    throw new Error('Missing required parameter shipmentId when calling downloadShipmentInboundAct');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Ярлыки для доверительной приемки (FBS)
 * PDF-файл с ярлыками на каждый короб или палету в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).  Распечатайте по несколько копий каждого ярлыка: на одну тару нужно наклеить минимум 2 ярлыка с разных сторон.  Количество упаковок в отгрузке задается в запросе [PUT campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets](../../reference/shipments/setShipmentPalletsCount.md). |**⚙️ Лимит:** 200 запросов в час| |-| 
 * @param {!number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
 * @param {!number} shipmentId Идентификатор отгрузки.
 * @param {!ShipmentPalletLabelPageFormatType=} opt_format Формат страниц PDF-файла с ярлыками:  * &#x60;A4&#x60; — по 16 ярлыков на странице. * &#x60;A8&#x60; — по одному ярлыку на странице. 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Object>}
 */
API.Client.ShipmentsApi.prototype.downloadShipmentPalletLabels = function(campaignId, shipmentId, opt_format, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels'
      .replace('{' + 'campaignId' + '}', String(campaignId))
      .replace('{' + 'shipmentId' + '}', String(shipmentId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'campaignId' is set
  if (!campaignId) {
    throw new Error('Missing required parameter campaignId when calling downloadShipmentPalletLabels');
  }
  // verify required parameter 'shipmentId' is set
  if (!shipmentId) {
    throw new Error('Missing required parameter shipmentId when calling downloadShipmentPalletLabels');
  }
  if (opt_format !== undefined) {
    queryParameters['format'] = opt_format;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Подтверждение ближайшей отгрузки и получение акта приема-передачи для нее
 * Запрос подтверждает ближайшую отгрузку и возвращает акт приема-передачи в формате PDF.  {% note warning \&quot;Экспресс‑доставка\&quot; %}  Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам [Яндекс Go](https://go.yandex/), подготавливать акт приема‑передачи не нужно.  {% endnote %}  В акт входят собранные и готовые к отправке заказы, которые отгружаются в сортировочный центр или пункт приема или курьерам Маркета.  При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:  {% cut \&quot;Данные, из которых Маркет формирует акт\&quot; %}  | **Данные в акте**                                   | **Описание**                                                                                                                                                                                                                                                         | | --------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Отправитель                                         | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         | | Исполнитель                                         | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                | | № отправления в системе заказчика                   | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              | | № отправления в системе исполнителя (субподрядчика) | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             | | Объявленная ценность                                | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       | | Стоимость всех товаров в заказе                     | Стоимость всех заказанных товаров.                                                                                                                                                                                                                                   | | Вес                                                 | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). | | Количество мест                                     | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |  {% endcut %}  Остальные поля нужно заполнить самостоятельно в распечатанном акте. |**⚙️ Лимит:** 100 запросов в час| |-| 
 * @param {!number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
 * @param {!number=} opt_warehouseId Идентификатор склада.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Object>}
 */
API.Client.ShipmentsApi.prototype.downloadShipmentReceptionTransferAct = function(campaignId, opt_warehouseId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/campaigns/{campaignId}/shipments/reception-transfer-act'
      .replace('{' + 'campaignId' + '}', String(campaignId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'campaignId' is set
  if (!campaignId) {
    throw new Error('Missing required parameter campaignId when calling downloadShipmentReceptionTransferAct');
  }
  if (opt_warehouseId !== undefined) {
    queryParameters['warehouse_id'] = opt_warehouseId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Получение транспортной накладной
 * Возвращает транспортную накладную для заданной отгрузки.  Транспортная накладная понадобится, если вы отгружаете товары непосредственно со своего склада. [Подробно об этом способе отгрузки](https://yandex.ru/support/marketplace/orders/fbs/settings/shipment.html#at-your-warehouse)  |**⚙️ Лимит:** 200 запросов в час| |-| 
 * @param {!number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
 * @param {!number} shipmentId Идентификатор отгрузки.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Object>}
 */
API.Client.ShipmentsApi.prototype.downloadShipmentTransportationWaybill = function(campaignId, shipmentId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/transportation-waybill'
      .replace('{' + 'campaignId' + '}', String(campaignId))
      .replace('{' + 'shipmentId' + '}', String(shipmentId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'campaignId' is set
  if (!campaignId) {
    throw new Error('Missing required parameter campaignId when calling downloadShipmentTransportationWaybill');
  }
  // verify required parameter 'shipmentId' is set
  if (!shipmentId) {
    throw new Error('Missing required parameter shipmentId when calling downloadShipmentTransportationWaybill');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Получение информации об одной отгрузке
 * Возвращает информацию об отгрузке по ее идентификатору. |**⚙️ Лимит:** 100 запросов в час| |-| 
 * @param {!number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
 * @param {!number} shipmentId Идентификатор отгрузки.
 * @param {!boolean=} opt_cancelledOrders Возвращать ли отмененные заказы.  Значение по умолчанию — &#x60;true&#x60;. Если возвращать отмененные заказы не нужно, передайте значение &#x60;false&#x60;. 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GetShipmentResponse>}
 */
API.Client.ShipmentsApi.prototype.getShipment = function(campaignId, shipmentId, opt_cancelledOrders, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}'
      .replace('{' + 'campaignId' + '}', String(campaignId))
      .replace('{' + 'shipmentId' + '}', String(shipmentId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'campaignId' is set
  if (!campaignId) {
    throw new Error('Missing required parameter campaignId when calling getShipment');
  }
  // verify required parameter 'shipmentId' is set
  if (!shipmentId) {
    throw new Error('Missing required parameter shipmentId when calling getShipment');
  }
  if (opt_cancelledOrders !== undefined) {
    queryParameters['cancelledOrders'] = opt_cancelledOrders;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Получение информации о возможности печати ярлыков (FBS)
 * Возвращает информацию о возможности печати ярлыков-наклеек для заказов в отгрузке. |**⚙️ Лимит:** 100 запросов в час| |-| 
 * @param {!number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
 * @param {!number} shipmentId Идентификатор отгрузки.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.GetShipmentOrdersInfoResponse>}
 */
API.Client.ShipmentsApi.prototype.getShipmentOrdersInfo = function(campaignId, shipmentId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/info'
      .replace('{' + 'campaignId' + '}', String(campaignId))
      .replace('{' + 'shipmentId' + '}', String(shipmentId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'campaignId' is set
  if (!campaignId) {
    throw new Error('Missing required parameter campaignId when calling getShipmentOrdersInfo');
  }
  // verify required parameter 'shipmentId' is set
  if (!shipmentId) {
    throw new Error('Missing required parameter shipmentId when calling getShipmentOrdersInfo');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Получение информации о нескольких отгрузках
 * Возвращает информацию об отгрузках по заданным параметрам:  * дате; * статусу; * идентификаторам заказов.  Результаты возвращаются постранично. |**⚙️ Лимит:** 100 запросов в час| |-| 
 * @param {!number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
 * @param {!SearchShipmentsRequest} searchShipmentsRequest 
 * @param {!string=} opt_pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. 
 * @param {!number=} opt_limit Количество значений на одной странице. 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.SearchShipmentsResponse>}
 */
API.Client.ShipmentsApi.prototype.searchShipments = function(campaignId, searchShipmentsRequest, opt_pageToken, opt_limit, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/campaigns/{campaignId}/first-mile/shipments'
      .replace('{' + 'campaignId' + '}', String(campaignId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'campaignId' is set
  if (!campaignId) {
    throw new Error('Missing required parameter campaignId when calling searchShipments');
  }
  // verify required parameter 'searchShipmentsRequest' is set
  if (!searchShipmentsRequest) {
    throw new Error('Missing required parameter searchShipmentsRequest when calling searchShipments');
  }
  if (opt_pageToken !== undefined) {
    queryParameters['page_token'] = opt_pageToken;
  }

  if (opt_limit !== undefined) {
    queryParameters['limit'] = opt_limit;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'PUT',
    url: path,
    json: true,
    data: searchShipmentsRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Передача количества упаковок в отгрузке
 * Передает Маркету количество коробов или палет в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).  Получить PDF-файл с ярлыками для упаковок можно с помощью запроса [GET campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels](../../reference/shipments/downloadShipmentPalletLabels.md). |**⚙️ Лимит:** 200 запросов в час| |-| 
 * @param {!number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
 * @param {!number} shipmentId Идентификатор отгрузки.
 * @param {!SetShipmentPalletsCountRequest} setShipmentPalletsCountRequest 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.EmptyApiResponse>}
 */
API.Client.ShipmentsApi.prototype.setShipmentPalletsCount = function(campaignId, shipmentId, setShipmentPalletsCountRequest, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets'
      .replace('{' + 'campaignId' + '}', String(campaignId))
      .replace('{' + 'shipmentId' + '}', String(shipmentId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'campaignId' is set
  if (!campaignId) {
    throw new Error('Missing required parameter campaignId when calling setShipmentPalletsCount');
  }
  // verify required parameter 'shipmentId' is set
  if (!shipmentId) {
    throw new Error('Missing required parameter shipmentId when calling setShipmentPalletsCount');
  }
  // verify required parameter 'setShipmentPalletsCountRequest' is set
  if (!setShipmentPalletsCountRequest) {
    throw new Error('Missing required parameter setShipmentPalletsCountRequest when calling setShipmentPalletsCount');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'PUT',
    url: path,
    json: true,
    data: setShipmentPalletsCountRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Перенос заказов в следующую отгрузку
 * Переносит указанные заказы из указанной отгрузки в следующую отгрузку. [Что такое отгрузка?](https://yandex.ru/support/marketplace/orders/fbs/process.html#ship)  Используйте этот запрос, если не успеваете собрать и упаковать заказы вовремя.  {% note warning \&quot;Такие переносы снижают индекс качества магазина\&quot; %}  Этот запрос предназначен для исключительных случаев. Если вы будете переносить заказы слишком часто, магазин столкнется с ограничениями. [Что за ограничения?](https://yandex.ru/support/marketplace/quality/score/fbs.html)  {% endnote %}  Переносить заказы можно, если до формирования отгрузки осталось больше получаса.  Перенос происходит не мгновенно, а занимает несколько минут.  |**⚙️ Лимит:** 200 запросов в час| |-| 
 * @param {!number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
 * @param {!number} shipmentId Идентификатор отгрузки.
 * @param {!TransferOrdersFromShipmentRequest} transferOrdersFromShipmentRequest 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.EmptyApiResponse>}
 */
API.Client.ShipmentsApi.prototype.transferOrdersFromShipment = function(campaignId, shipmentId, transferOrdersFromShipmentRequest, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/transfer'
      .replace('{' + 'campaignId' + '}', String(campaignId))
      .replace('{' + 'shipmentId' + '}', String(shipmentId));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'campaignId' is set
  if (!campaignId) {
    throw new Error('Missing required parameter campaignId when calling transferOrdersFromShipment');
  }
  // verify required parameter 'shipmentId' is set
  if (!shipmentId) {
    throw new Error('Missing required parameter shipmentId when calling transferOrdersFromShipment');
  }
  // verify required parameter 'transferOrdersFromShipmentRequest' is set
  if (!transferOrdersFromShipmentRequest) {
    throw new Error('Missing required parameter transferOrdersFromShipmentRequest when calling transferOrdersFromShipment');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: true,
    data: transferOrdersFromShipmentRequest,
        params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}
