/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOfferMappingKindType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOfferMappingKindType::OAIOfferMappingKindType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOfferMappingKindType::OAIOfferMappingKindType() {
    this->initializeModel();
}

OAIOfferMappingKindType::~OAIOfferMappingKindType() {}

void OAIOfferMappingKindType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIOfferMappingKindType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIOfferMappingKindType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ACTIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOfferMappingKindType::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ALL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOfferMappingKindType::ALL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIOfferMappingKindType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIOfferMappingKindType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIOfferMappingKindType::ACTIVE:
            val = "ACTIVE";
            break;
        case eOAIOfferMappingKindType::ALL:
            val = "ALL";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIOfferMappingKindType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIOfferMappingKindType::eOAIOfferMappingKindType OAIOfferMappingKindType::getValue() const {
    return m_value;
}

void OAIOfferMappingKindType::setValue(const OAIOfferMappingKindType::eOAIOfferMappingKindType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIOfferMappingKindType::isSet() const {
    
    return m_value_isSet;
}

bool OAIOfferMappingKindType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
