/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddOffersToArchiveDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddOffersToArchiveDTO::OAIAddOffersToArchiveDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddOffersToArchiveDTO::OAIAddOffersToArchiveDTO() {
    this->initializeModel();
}

OAIAddOffersToArchiveDTO::~OAIAddOffersToArchiveDTO() {}

void OAIAddOffersToArchiveDTO::initializeModel() {

    m_not_archived_offers_isSet = false;
    m_not_archived_offers_isValid = false;
}

void OAIAddOffersToArchiveDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddOffersToArchiveDTO::fromJsonObject(QJsonObject json) {

    m_not_archived_offers_isValid = ::OpenAPI::fromJsonValue(not_archived_offers, json[QString("notArchivedOffers")]);
    m_not_archived_offers_isSet = !json[QString("notArchivedOffers")].isNull() && m_not_archived_offers_isValid;
}

QString OAIAddOffersToArchiveDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddOffersToArchiveDTO::asJsonObject() const {
    QJsonObject obj;
    if (not_archived_offers.size() > 0) {
        obj.insert(QString("notArchivedOffers"), ::OpenAPI::toJsonValue(not_archived_offers));
    }
    return obj;
}

QList<OAIAddOffersToArchiveErrorDTO> OAIAddOffersToArchiveDTO::getNotArchivedOffers() const {
    return not_archived_offers;
}
void OAIAddOffersToArchiveDTO::setNotArchivedOffers(const QList<OAIAddOffersToArchiveErrorDTO> &not_archived_offers) {
    this->not_archived_offers = not_archived_offers;
    this->m_not_archived_offers_isSet = true;
}

bool OAIAddOffersToArchiveDTO::is_not_archived_offers_Set() const{
    return m_not_archived_offers_isSet;
}

bool OAIAddOffersToArchiveDTO::is_not_archived_offers_Valid() const{
    return m_not_archived_offers_isValid;
}

bool OAIAddOffersToArchiveDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (not_archived_offers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddOffersToArchiveDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
