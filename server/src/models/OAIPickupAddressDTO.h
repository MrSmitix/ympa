/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPickupAddressDTO.h
 *
 * Адрес доставки.
 */

#ifndef OAIPickupAddressDTO_H
#define OAIPickupAddressDTO_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPickupAddressDTO : public OAIObject {
public:
    OAIPickupAddressDTO();
    OAIPickupAddressDTO(QString json);
    ~OAIPickupAddressDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getStreet() const;
    void setStreet(const QString &street);
    bool is_street_Set() const;
    bool is_street_Valid() const;

    QString getHouse() const;
    void setHouse(const QString &house);
    bool is_house_Set() const;
    bool is_house_Valid() const;

    QString getPostcode() const;
    void setPostcode(const QString &postcode);
    bool is_postcode_Set() const;
    bool is_postcode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString street;
    bool m_street_isSet;
    bool m_street_isValid;

    QString house;
    bool m_house_isSet;
    bool m_house_isValid;

    QString postcode;
    bool m_postcode_isSet;
    bool m_postcode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPickupAddressDTO)

#endif // OAIPickupAddressDTO_H
