/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReturnDecisionDTO.h
 *
 * Решения по возвратам.
 */

#ifndef OAIReturnDecisionDTO_H
#define OAIReturnDecisionDTO_H

#include <QJsonObject>

#include "OAIReturnDecisionReasonType.h"
#include "OAIReturnDecisionSubreasonType.h"
#include "OAIReturnDecisionType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReturnDecisionDTO : public OAIObject {
public:
    OAIReturnDecisionDTO();
    OAIReturnDecisionDTO(QString json);
    ~OAIReturnDecisionDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getReturnItemId() const;
    void setReturnItemId(const qint64 &return_item_id);
    bool is_return_item_id_Set() const;
    bool is_return_item_id_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    OAIReturnDecisionReasonType getReasonType() const;
    void setReasonType(const OAIReturnDecisionReasonType &reason_type);
    bool is_reason_type_Set() const;
    bool is_reason_type_Valid() const;

    OAIReturnDecisionSubreasonType getSubreasonType() const;
    void setSubreasonType(const OAIReturnDecisionSubreasonType &subreason_type);
    bool is_subreason_type_Set() const;
    bool is_subreason_type_Valid() const;

    OAIReturnDecisionType getDecisionType() const;
    void setDecisionType(const OAIReturnDecisionType &decision_type);
    bool is_decision_type_Set() const;
    bool is_decision_type_Valid() const;

    qint64 getRefundAmount() const;
    void setRefundAmount(const qint64 &refund_amount);
    bool is_refund_amount_Set() const;
    bool is_refund_amount_Valid() const;

    qint64 getPartnerCompensation() const;
    void setPartnerCompensation(const qint64 &partner_compensation);
    bool is_partner_compensation_Set() const;
    bool is_partner_compensation_Valid() const;

    QList<QString> getImages() const;
    void setImages(const QList<QString> &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 return_item_id;
    bool m_return_item_id_isSet;
    bool m_return_item_id_isValid;

    qint32 count;
    bool m_count_isSet;
    bool m_count_isValid;

    QString comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    OAIReturnDecisionReasonType reason_type;
    bool m_reason_type_isSet;
    bool m_reason_type_isValid;

    OAIReturnDecisionSubreasonType subreason_type;
    bool m_subreason_type_isSet;
    bool m_subreason_type_isValid;

    OAIReturnDecisionType decision_type;
    bool m_decision_type_isSet;
    bool m_decision_type_isValid;

    qint64 refund_amount;
    bool m_refund_amount_isSet;
    bool m_refund_amount_isValid;

    qint64 partner_compensation;
    bool m_partner_compensation_isSet;
    bool m_partner_compensation_isValid;

    QList<QString> images;
    bool m_images_isSet;
    bool m_images_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReturnDecisionDTO)

#endif // OAIReturnDecisionDTO_H
