/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWarehouseAddressDTO.h
 *
 * Адрес склада.
 */

#ifndef OAIWarehouseAddressDTO_H
#define OAIWarehouseAddressDTO_H

#include <QJsonObject>

#include "OAIGpsDTO.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWarehouseAddressDTO : public OAIObject {
public:
    OAIWarehouseAddressDTO();
    OAIWarehouseAddressDTO(QString json);
    ~OAIWarehouseAddressDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getStreet() const;
    void setStreet(const QString &street);
    bool is_street_Set() const;
    bool is_street_Valid() const;

    QString getNumber() const;
    void setNumber(const QString &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QString getBuilding() const;
    void setBuilding(const QString &building);
    bool is_building_Set() const;
    bool is_building_Valid() const;

    QString getBlock() const;
    void setBlock(const QString &block);
    bool is_block_Set() const;
    bool is_block_Valid() const;

    OAIGpsDTO getGps() const;
    void setGps(const OAIGpsDTO &gps);
    bool is_gps_Set() const;
    bool is_gps_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString street;
    bool m_street_isSet;
    bool m_street_isValid;

    QString number;
    bool m_number_isSet;
    bool m_number_isValid;

    QString building;
    bool m_building_isSet;
    bool m_building_isValid;

    QString block;
    bool m_block_isSet;
    bool m_block_isValid;

    OAIGpsDTO gps;
    bool m_gps_isSet;
    bool m_gps_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWarehouseAddressDTO)

#endif // OAIWarehouseAddressDTO_H
