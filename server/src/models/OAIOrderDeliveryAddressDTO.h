/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrderDeliveryAddressDTO.h
 *
 * Адрес доставки.  Указывается, если &#x60;type&#x3D;DELIVERY&#x60;, &#x60;type&#x3D;POST&#x60; или &#x60;type&#x3D;PICKUP&#x60; (адрес пункта выдачи). 
 */

#ifndef OAIOrderDeliveryAddressDTO_H
#define OAIOrderDeliveryAddressDTO_H

#include <QJsonObject>

#include "OAIGpsDTO.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOrderDeliveryAddressDTO : public OAIObject {
public:
    OAIOrderDeliveryAddressDTO();
    OAIOrderDeliveryAddressDTO(QString json);
    ~OAIOrderDeliveryAddressDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getPostcode() const;
    void setPostcode(const QString &postcode);
    bool is_postcode_Set() const;
    bool is_postcode_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getDistrict() const;
    void setDistrict(const QString &district);
    bool is_district_Set() const;
    bool is_district_Valid() const;

    QString getSubway() const;
    void setSubway(const QString &subway);
    bool is_subway_Set() const;
    bool is_subway_Valid() const;

    QString getStreet() const;
    void setStreet(const QString &street);
    bool is_street_Set() const;
    bool is_street_Valid() const;

    QString getHouse() const;
    void setHouse(const QString &house);
    bool is_house_Set() const;
    bool is_house_Valid() const;

    QString getBlock() const;
    void setBlock(const QString &block);
    bool is_block_Set() const;
    bool is_block_Valid() const;

    QString getEntrance() const;
    void setEntrance(const QString &entrance);
    bool is_entrance_Set() const;
    bool is_entrance_Valid() const;

    QString getEntryphone() const;
    void setEntryphone(const QString &entryphone);
    bool is_entryphone_Set() const;
    bool is_entryphone_Valid() const;

    QString getFloor() const;
    void setFloor(const QString &floor);
    bool is_floor_Set() const;
    bool is_floor_Valid() const;

    QString getApartment() const;
    void setApartment(const QString &apartment);
    bool is_apartment_Set() const;
    bool is_apartment_Valid() const;

    QString getPhone() const;
    void setPhone(const QString &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    QString getRecipient() const;
    void setRecipient(const QString &recipient);
    bool is_recipient_Set() const;
    bool is_recipient_Valid() const;

    OAIGpsDTO getGps() const;
    void setGps(const OAIGpsDTO &gps);
    bool is_gps_Set() const;
    bool is_gps_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString postcode;
    bool m_postcode_isSet;
    bool m_postcode_isValid;

    QString city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString district;
    bool m_district_isSet;
    bool m_district_isValid;

    QString subway;
    bool m_subway_isSet;
    bool m_subway_isValid;

    QString street;
    bool m_street_isSet;
    bool m_street_isValid;

    QString house;
    bool m_house_isSet;
    bool m_house_isValid;

    QString block;
    bool m_block_isSet;
    bool m_block_isValid;

    QString entrance;
    bool m_entrance_isSet;
    bool m_entrance_isValid;

    QString entryphone;
    bool m_entryphone_isSet;
    bool m_entryphone_isValid;

    QString floor;
    bool m_floor_isSet;
    bool m_floor_isValid;

    QString apartment;
    bool m_apartment_isSet;
    bool m_apartment_isValid;

    QString phone;
    bool m_phone_isSet;
    bool m_phone_isValid;

    QString recipient;
    bool m_recipient_isSet;
    bool m_recipient_isValid;

    OAIGpsDTO gps;
    bool m_gps_isSet;
    bool m_gps_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrderDeliveryAddressDTO)

#endif // OAIOrderDeliveryAddressDTO_H
