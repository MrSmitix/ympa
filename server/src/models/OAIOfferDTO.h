/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOfferDTO.h
 *
 * Предложение.
 */

#ifndef OAIOfferDTO_H
#define OAIOfferDTO_H

#include <QJsonObject>

#include "OAICurrencyType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOfferDTO : public OAIObject {
public:
    OAIOfferDTO();
    OAIOfferDTO(QString json);
    ~OAIOfferDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getPrice() const;
    void setPrice(const double &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    qint64 getFeedId() const;
    void setFeedId(const qint64 &feed_id);
    bool is_feed_id_Set() const;
    bool is_feed_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getShopCategoryId() const;
    void setShopCategoryId(const QString &shop_category_id);
    bool is_shop_category_id_Set() const;
    bool is_shop_category_id_Valid() const;

    qint32 getMarketCategoryId() const;
    void setMarketCategoryId(const qint32 &market_category_id);
    bool is_market_category_id_Set() const;
    bool is_market_category_id_Valid() const;

    double getPreDiscountPrice() const;
    void setPreDiscountPrice(const double &pre_discount_price);
    bool is_pre_discount_price_Set() const;
    bool is_pre_discount_price_Valid() const;

    qint32 getDiscount() const;
    void setDiscount(const qint32 &discount);
    bool is_discount_Set() const;
    bool is_discount_Valid() const;

    bool isCutPrice() const;
    void setCutPrice(const bool &cut_price);
    bool is_cut_price_Set() const;
    bool is_cut_price_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    qint64 getModelId() const;
    void setModelId(const qint64 &model_id);
    bool is_model_id_Set() const;
    bool is_model_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAICurrencyType getCurrency() const;
    void setCurrency(const OAICurrencyType &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    double getBid() const;
    void setBid(const double &bid);
    bool is_bid_Set() const;
    bool is_bid_Valid() const;

    double getCbid() const;
    void setCbid(const double &cbid);
    bool is_cbid_Set() const;
    bool is_cbid_Valid() const;

    double getFee() const;
    void setFee(const double &fee);
    bool is_fee_Set() const;
    bool is_fee_Valid() const;

    bool isBlocked() const;
    void setBlocked(const bool &blocked);
    bool is_blocked_Set() const;
    bool is_blocked_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double price;
    bool m_price_isSet;
    bool m_price_isValid;

    qint64 feed_id;
    bool m_feed_id_isSet;
    bool m_feed_id_isValid;

    QString id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString shop_category_id;
    bool m_shop_category_id_isSet;
    bool m_shop_category_id_isValid;

    qint32 market_category_id;
    bool m_market_category_id_isSet;
    bool m_market_category_id_isValid;

    double pre_discount_price;
    bool m_pre_discount_price_isSet;
    bool m_pre_discount_price_isValid;

    qint32 discount;
    bool m_discount_isSet;
    bool m_discount_isValid;

    bool cut_price;
    bool m_cut_price_isSet;
    bool m_cut_price_isValid;

    QString url;
    bool m_url_isSet;
    bool m_url_isValid;

    qint64 model_id;
    bool m_model_id_isSet;
    bool m_model_id_isValid;

    QString name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAICurrencyType currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    double bid;
    bool m_bid_isSet;
    bool m_bid_isValid;

    double cbid;
    bool m_cbid_isSet;
    bool m_cbid_isValid;

    double fee;
    bool m_fee_isSet;
    bool m_fee_isValid;

    bool blocked;
    bool m_blocked_isSet;
    bool m_blocked_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOfferDTO)

#endif // OAIOfferDTO_H
