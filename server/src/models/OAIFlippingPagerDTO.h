/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFlippingPagerDTO.h
 *
 * Модель для пагинации.
 */

#ifndef OAIFlippingPagerDTO_H
#define OAIFlippingPagerDTO_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFlippingPagerDTO : public OAIObject {
public:
    OAIFlippingPagerDTO();
    OAIFlippingPagerDTO(QString json);
    ~OAIFlippingPagerDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    qint32 getFrom() const;
    void setFrom(const qint32 &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    qint32 getTo() const;
    void setTo(const qint32 &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    qint32 getCurrentPage() const;
    void setCurrentPage(const qint32 &current_page);
    bool is_current_page_Set() const;
    bool is_current_page_Valid() const;

    qint32 getPagesCount() const;
    void setPagesCount(const qint32 &pages_count);
    bool is_pages_count_Set() const;
    bool is_pages_count_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 total;
    bool m_total_isSet;
    bool m_total_isValid;

    qint32 from;
    bool m_from_isSet;
    bool m_from_isValid;

    qint32 to;
    bool m_to_isSet;
    bool m_to_isValid;

    qint32 current_page;
    bool m_current_page_isSet;
    bool m_current_page_isValid;

    qint32 pages_count;
    bool m_pages_count_isSet;
    bool m_pages_count_isValid;

    qint32 page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFlippingPagerDTO)

#endif // OAIFlippingPagerDTO_H
