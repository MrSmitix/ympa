/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetSuggestedOfferMappingsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetSuggestedOfferMappingsRequest::OAIGetSuggestedOfferMappingsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetSuggestedOfferMappingsRequest::OAIGetSuggestedOfferMappingsRequest() {
    this->initializeModel();
}

OAIGetSuggestedOfferMappingsRequest::~OAIGetSuggestedOfferMappingsRequest() {}

void OAIGetSuggestedOfferMappingsRequest::initializeModel() {

    m_offers_isSet = false;
    m_offers_isValid = false;
}

void OAIGetSuggestedOfferMappingsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetSuggestedOfferMappingsRequest::fromJsonObject(QJsonObject json) {

    m_offers_isValid = ::OpenAPI::fromJsonValue(offers, json[QString("offers")]);
    m_offers_isSet = !json[QString("offers")].isNull() && m_offers_isValid;
}

QString OAIGetSuggestedOfferMappingsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetSuggestedOfferMappingsRequest::asJsonObject() const {
    QJsonObject obj;
    if (offers.size() > 0) {
        obj.insert(QString("offers"), ::OpenAPI::toJsonValue(offers));
    }
    return obj;
}

QList<OAISuggestedOfferDTO> OAIGetSuggestedOfferMappingsRequest::getOffers() const {
    return offers;
}
void OAIGetSuggestedOfferMappingsRequest::setOffers(const QList<OAISuggestedOfferDTO> &offers) {
    this->offers = offers;
    this->m_offers_isSet = true;
}

bool OAIGetSuggestedOfferMappingsRequest::is_offers_Set() const{
    return m_offers_isSet;
}

bool OAIGetSuggestedOfferMappingsRequest::is_offers_Valid() const{
    return m_offers_isValid;
}

bool OAIGetSuggestedOfferMappingsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (offers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetSuggestedOfferMappingsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
