/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetOfferRecommendationsRequest.h
 *
 * 
 */

#ifndef OAIGetOfferRecommendationsRequest_H
#define OAIGetOfferRecommendationsRequest_H

#include <QJsonObject>

#include "OAIFieldStateType.h"
#include "OAIPriceCompetitivenessType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetOfferRecommendationsRequest : public OAIObject {
public:
    OAIGetOfferRecommendationsRequest();
    OAIGetOfferRecommendationsRequest(QString json);
    ~OAIGetOfferRecommendationsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getOfferIds() const;
    void setOfferIds(const QList<QString> &offer_ids);
    bool is_offer_ids_Set() const;
    bool is_offer_ids_Valid() const;

    OAIFieldStateType getCofinancePriceFilter() const;
    void setCofinancePriceFilter(const OAIFieldStateType &cofinance_price_filter);
    bool is_cofinance_price_filter_Set() const;
    bool is_cofinance_price_filter_Valid() const;

    OAIFieldStateType getRecommendedCofinancePriceFilter() const;
    void setRecommendedCofinancePriceFilter(const OAIFieldStateType &recommended_cofinance_price_filter);
    bool is_recommended_cofinance_price_filter_Set() const;
    bool is_recommended_cofinance_price_filter_Valid() const;

    OAIPriceCompetitivenessType getCompetitivenessFilter() const;
    void setCompetitivenessFilter(const OAIPriceCompetitivenessType &competitiveness_filter);
    bool is_competitiveness_filter_Set() const;
    bool is_competitiveness_filter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> offer_ids;
    bool m_offer_ids_isSet;
    bool m_offer_ids_isValid;

    OAIFieldStateType cofinance_price_filter;
    bool m_cofinance_price_filter_isSet;
    bool m_cofinance_price_filter_isValid;

    OAIFieldStateType recommended_cofinance_price_filter;
    bool m_recommended_cofinance_price_filter_isSet;
    bool m_recommended_cofinance_price_filter_isValid;

    OAIPriceCompetitivenessType competitiveness_filter;
    bool m_competitiveness_filter_isSet;
    bool m_competitiveness_filter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetOfferRecommendationsRequest)

#endif // OAIGetOfferRecommendationsRequest_H
