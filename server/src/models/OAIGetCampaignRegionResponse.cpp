/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetCampaignRegionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetCampaignRegionResponse::OAIGetCampaignRegionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetCampaignRegionResponse::OAIGetCampaignRegionResponse() {
    this->initializeModel();
}

OAIGetCampaignRegionResponse::~OAIGetCampaignRegionResponse() {}

void OAIGetCampaignRegionResponse::initializeModel() {

    m_region_isSet = false;
    m_region_isValid = false;
}

void OAIGetCampaignRegionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetCampaignRegionResponse::fromJsonObject(QJsonObject json) {

    m_region_isValid = ::OpenAPI::fromJsonValue(region, json[QString("region")]);
    m_region_isSet = !json[QString("region")].isNull() && m_region_isValid;
}

QString OAIGetCampaignRegionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetCampaignRegionResponse::asJsonObject() const {
    QJsonObject obj;
    if (region.isSet()) {
        obj.insert(QString("region"), ::OpenAPI::toJsonValue(region));
    }
    return obj;
}

OAIRegionDTO OAIGetCampaignRegionResponse::getRegion() const {
    return region;
}
void OAIGetCampaignRegionResponse::setRegion(const OAIRegionDTO &region) {
    this->region = region;
    this->m_region_isSet = true;
}

bool OAIGetCampaignRegionResponse::is_region_Set() const{
    return m_region_isSet;
}

bool OAIGetCampaignRegionResponse::is_region_Valid() const{
    return m_region_isValid;
}

bool OAIGetCampaignRegionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (region.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetCampaignRegionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
