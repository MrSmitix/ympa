/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIValueRestrictionDTO.h
 *
 * Ограничение на возможные значения, накладываемое другой характеристикой.  Если ограничивающая характеристика принимает определенное значение, список возможных значений ограничиваемой характеристики сокращается.  **Пример**  Характеристика **размер** сама по себе может принимать девять разных значений: &#x60;S&#x60;, &#x60;M&#x60;, &#x60;L&#x60;, &#x60;44&#x60;, &#x60;46&#x60;, &#x60;48&#x60;, &#x60;42/164&#x60;, &#x60;46/176&#x60;, &#x60;44S&#x60;.  Если ограничивающая характеристика **размерная сетка** принимает значение &#x60;RU&#x60;, список возможных значений размера сокращается до &#x60;44&#x60;, &#x60;46&#x60;, &#x60;48&#x60;. 
 */

#ifndef OAIValueRestrictionDTO_H
#define OAIValueRestrictionDTO_H

#include <QJsonObject>

#include "OAIOptionValuesLimitedDTO.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIValueRestrictionDTO : public OAIObject {
public:
    OAIValueRestrictionDTO();
    OAIValueRestrictionDTO(QString json);
    ~OAIValueRestrictionDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getLimitingParameterId() const;
    void setLimitingParameterId(const qint64 &limiting_parameter_id);
    bool is_limiting_parameter_id_Set() const;
    bool is_limiting_parameter_id_Valid() const;

    QList<OAIOptionValuesLimitedDTO> getLimitedValues() const;
    void setLimitedValues(const QList<OAIOptionValuesLimitedDTO> &limited_values);
    bool is_limited_values_Set() const;
    bool is_limited_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 limiting_parameter_id;
    bool m_limiting_parameter_id_isSet;
    bool m_limiting_parameter_id_isValid;

    QList<OAIOptionValuesLimitedDTO> limited_values;
    bool m_limited_values_isSet;
    bool m_limited_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIValueRestrictionDTO)

#endif // OAIValueRestrictionDTO_H
