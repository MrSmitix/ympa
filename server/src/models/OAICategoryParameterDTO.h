/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICategoryParameterDTO.h
 *
 * Характеристика товара.
 */

#ifndef OAICategoryParameterDTO_H
#define OAICategoryParameterDTO_H

#include <QJsonObject>

#include "OAICategoryParameterUnitDTO.h"
#include "OAIOfferCardRecommendationType.h"
#include "OAIParameterType.h"
#include "OAIParameterValueConstraintsDTO.h"
#include "OAIParameterValueOptionDTO.h"
#include "OAIValueRestrictionDTO.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICategoryParameterDTO : public OAIObject {
public:
    OAICategoryParameterDTO();
    OAICategoryParameterDTO(QString json);
    ~OAICategoryParameterDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIParameterType getType() const;
    void setType(const OAIParameterType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAICategoryParameterUnitDTO getUnit() const;
    void setUnit(const OAICategoryParameterUnitDTO &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIOfferCardRecommendationType> getRecommendationTypes() const;
    void setRecommendationTypes(const QList<OAIOfferCardRecommendationType> &recommendation_types);
    bool is_recommendation_types_Set() const;
    bool is_recommendation_types_Valid() const;

    bool isRequired() const;
    void setRequired(const bool &required);
    bool is_required_Set() const;
    bool is_required_Valid() const;

    bool isFiltering() const;
    void setFiltering(const bool &filtering);
    bool is_filtering_Set() const;
    bool is_filtering_Valid() const;

    bool isDistinctive() const;
    void setDistinctive(const bool &distinctive);
    bool is_distinctive_Set() const;
    bool is_distinctive_Valid() const;

    bool isMultivalue() const;
    void setMultivalue(const bool &multivalue);
    bool is_multivalue_Set() const;
    bool is_multivalue_Valid() const;

    bool isAllowCustomValues() const;
    void setAllowCustomValues(const bool &allow_custom_values);
    bool is_allow_custom_values_Set() const;
    bool is_allow_custom_values_Valid() const;

    QList<OAIParameterValueOptionDTO> getValues() const;
    void setValues(const QList<OAIParameterValueOptionDTO> &values);
    bool is_values_Set() const;
    bool is_values_Valid() const;

    OAIParameterValueConstraintsDTO getConstraints() const;
    void setConstraints(const OAIParameterValueConstraintsDTO &constraints);
    bool is_constraints_Set() const;
    bool is_constraints_Valid() const;

    QList<OAIValueRestrictionDTO> getValueRestrictions() const;
    void setValueRestrictions(const QList<OAIValueRestrictionDTO> &value_restrictions);
    bool is_value_restrictions_Set() const;
    bool is_value_restrictions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIParameterType type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAICategoryParameterUnitDTO unit;
    bool m_unit_isSet;
    bool m_unit_isValid;

    QString description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIOfferCardRecommendationType> recommendation_types;
    bool m_recommendation_types_isSet;
    bool m_recommendation_types_isValid;

    bool required;
    bool m_required_isSet;
    bool m_required_isValid;

    bool filtering;
    bool m_filtering_isSet;
    bool m_filtering_isValid;

    bool distinctive;
    bool m_distinctive_isSet;
    bool m_distinctive_isValid;

    bool multivalue;
    bool m_multivalue_isSet;
    bool m_multivalue_isValid;

    bool allow_custom_values;
    bool m_allow_custom_values_isSet;
    bool m_allow_custom_values_isValid;

    QList<OAIParameterValueOptionDTO> values;
    bool m_values_isSet;
    bool m_values_isValid;

    OAIParameterValueConstraintsDTO constraints;
    bool m_constraints_isSet;
    bool m_constraints_isValid;

    QList<OAIValueRestrictionDTO> value_restrictions;
    bool m_value_restrictions_isSet;
    bool m_value_restrictions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICategoryParameterDTO)

#endif // OAICategoryParameterDTO_H
