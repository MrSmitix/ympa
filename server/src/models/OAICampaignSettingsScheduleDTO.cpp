/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICampaignSettingsScheduleDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICampaignSettingsScheduleDTO::OAICampaignSettingsScheduleDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICampaignSettingsScheduleDTO::OAICampaignSettingsScheduleDTO() {
    this->initializeModel();
}

OAICampaignSettingsScheduleDTO::~OAICampaignSettingsScheduleDTO() {}

void OAICampaignSettingsScheduleDTO::initializeModel() {

    m_available_on_holidays_isSet = false;
    m_available_on_holidays_isValid = false;

    m_custom_holidays_isSet = false;
    m_custom_holidays_isValid = false;

    m_custom_working_days_isSet = false;
    m_custom_working_days_isValid = false;

    m_period_isSet = false;
    m_period_isValid = false;

    m_total_holidays_isSet = false;
    m_total_holidays_isValid = false;

    m_weekly_holidays_isSet = false;
    m_weekly_holidays_isValid = false;
}

void OAICampaignSettingsScheduleDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICampaignSettingsScheduleDTO::fromJsonObject(QJsonObject json) {

    m_available_on_holidays_isValid = ::OpenAPI::fromJsonValue(available_on_holidays, json[QString("availableOnHolidays")]);
    m_available_on_holidays_isSet = !json[QString("availableOnHolidays")].isNull() && m_available_on_holidays_isValid;

    m_custom_holidays_isValid = ::OpenAPI::fromJsonValue(custom_holidays, json[QString("customHolidays")]);
    m_custom_holidays_isSet = !json[QString("customHolidays")].isNull() && m_custom_holidays_isValid;

    m_custom_working_days_isValid = ::OpenAPI::fromJsonValue(custom_working_days, json[QString("customWorkingDays")]);
    m_custom_working_days_isSet = !json[QString("customWorkingDays")].isNull() && m_custom_working_days_isValid;

    m_period_isValid = ::OpenAPI::fromJsonValue(period, json[QString("period")]);
    m_period_isSet = !json[QString("period")].isNull() && m_period_isValid;

    m_total_holidays_isValid = ::OpenAPI::fromJsonValue(total_holidays, json[QString("totalHolidays")]);
    m_total_holidays_isSet = !json[QString("totalHolidays")].isNull() && m_total_holidays_isValid;

    m_weekly_holidays_isValid = ::OpenAPI::fromJsonValue(weekly_holidays, json[QString("weeklyHolidays")]);
    m_weekly_holidays_isSet = !json[QString("weeklyHolidays")].isNull() && m_weekly_holidays_isValid;
}

QString OAICampaignSettingsScheduleDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICampaignSettingsScheduleDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_available_on_holidays_isSet) {
        obj.insert(QString("availableOnHolidays"), ::OpenAPI::toJsonValue(available_on_holidays));
    }
    if (custom_holidays.size() > 0) {
        obj.insert(QString("customHolidays"), ::OpenAPI::toJsonValue(custom_holidays));
    }
    if (custom_working_days.size() > 0) {
        obj.insert(QString("customWorkingDays"), ::OpenAPI::toJsonValue(custom_working_days));
    }
    if (period.isSet()) {
        obj.insert(QString("period"), ::OpenAPI::toJsonValue(period));
    }
    if (total_holidays.size() > 0) {
        obj.insert(QString("totalHolidays"), ::OpenAPI::toJsonValue(total_holidays));
    }
    if (weekly_holidays.size() > 0) {
        obj.insert(QString("weeklyHolidays"), ::OpenAPI::toJsonValue(weekly_holidays));
    }
    return obj;
}

bool OAICampaignSettingsScheduleDTO::isAvailableOnHolidays() const {
    return available_on_holidays;
}
void OAICampaignSettingsScheduleDTO::setAvailableOnHolidays(const bool &available_on_holidays) {
    this->available_on_holidays = available_on_holidays;
    this->m_available_on_holidays_isSet = true;
}

bool OAICampaignSettingsScheduleDTO::is_available_on_holidays_Set() const{
    return m_available_on_holidays_isSet;
}

bool OAICampaignSettingsScheduleDTO::is_available_on_holidays_Valid() const{
    return m_available_on_holidays_isValid;
}

QList<QString> OAICampaignSettingsScheduleDTO::getCustomHolidays() const {
    return custom_holidays;
}
void OAICampaignSettingsScheduleDTO::setCustomHolidays(const QList<QString> &custom_holidays) {
    this->custom_holidays = custom_holidays;
    this->m_custom_holidays_isSet = true;
}

bool OAICampaignSettingsScheduleDTO::is_custom_holidays_Set() const{
    return m_custom_holidays_isSet;
}

bool OAICampaignSettingsScheduleDTO::is_custom_holidays_Valid() const{
    return m_custom_holidays_isValid;
}

QList<QString> OAICampaignSettingsScheduleDTO::getCustomWorkingDays() const {
    return custom_working_days;
}
void OAICampaignSettingsScheduleDTO::setCustomWorkingDays(const QList<QString> &custom_working_days) {
    this->custom_working_days = custom_working_days;
    this->m_custom_working_days_isSet = true;
}

bool OAICampaignSettingsScheduleDTO::is_custom_working_days_Set() const{
    return m_custom_working_days_isSet;
}

bool OAICampaignSettingsScheduleDTO::is_custom_working_days_Valid() const{
    return m_custom_working_days_isValid;
}

OAICampaignSettingsTimePeriodDTO OAICampaignSettingsScheduleDTO::getPeriod() const {
    return period;
}
void OAICampaignSettingsScheduleDTO::setPeriod(const OAICampaignSettingsTimePeriodDTO &period) {
    this->period = period;
    this->m_period_isSet = true;
}

bool OAICampaignSettingsScheduleDTO::is_period_Set() const{
    return m_period_isSet;
}

bool OAICampaignSettingsScheduleDTO::is_period_Valid() const{
    return m_period_isValid;
}

QList<QString> OAICampaignSettingsScheduleDTO::getTotalHolidays() const {
    return total_holidays;
}
void OAICampaignSettingsScheduleDTO::setTotalHolidays(const QList<QString> &total_holidays) {
    this->total_holidays = total_holidays;
    this->m_total_holidays_isSet = true;
}

bool OAICampaignSettingsScheduleDTO::is_total_holidays_Set() const{
    return m_total_holidays_isSet;
}

bool OAICampaignSettingsScheduleDTO::is_total_holidays_Valid() const{
    return m_total_holidays_isValid;
}

QList<qint32> OAICampaignSettingsScheduleDTO::getWeeklyHolidays() const {
    return weekly_holidays;
}
void OAICampaignSettingsScheduleDTO::setWeeklyHolidays(const QList<qint32> &weekly_holidays) {
    this->weekly_holidays = weekly_holidays;
    this->m_weekly_holidays_isSet = true;
}

bool OAICampaignSettingsScheduleDTO::is_weekly_holidays_Set() const{
    return m_weekly_holidays_isSet;
}

bool OAICampaignSettingsScheduleDTO::is_weekly_holidays_Valid() const{
    return m_weekly_holidays_isValid;
}

bool OAICampaignSettingsScheduleDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_available_on_holidays_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (custom_holidays.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (custom_working_days.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (period.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (total_holidays.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (weekly_holidays.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICampaignSettingsScheduleDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_custom_holidays_isValid && m_custom_working_days_isValid && m_total_holidays_isValid && m_weekly_holidays_isValid && true;
}

} // namespace OpenAPI
