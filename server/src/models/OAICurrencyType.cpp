/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICurrencyType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICurrencyType::OAICurrencyType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICurrencyType::OAICurrencyType() {
    this->initializeModel();
}

OAICurrencyType::~OAICurrencyType() {}

void OAICurrencyType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICurrencyType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICurrencyType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("RUR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::RUR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("USD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::USD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EUR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::EUR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UAH", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::UAH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AUD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::AUD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GBP", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::GBP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BYR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::BYR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BYN", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::BYN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DKK", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::DKK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ISK", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::ISK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KZT", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::KZT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CAD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::CAD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CNY", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::CNY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NOK", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::NOK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("XDR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::XDR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SGD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::SGD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TRY", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::TRY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SEK", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::SEK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CHF", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::CHF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("JPY", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::JPY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AZN", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::AZN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ALL", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::ALL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DZD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::DZD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AOA", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::AOA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ARS", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::ARS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AMD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::AMD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AFN", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::AFN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BHD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::BHD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BGN", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::BGN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BOB", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::BOB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BWP", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::BWP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BND", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::BND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BRL", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::BRL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BIF", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::BIF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HUF", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::HUF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VEF", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::VEF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KPW", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::KPW;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VND", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::VND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GMD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::GMD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GHS", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::GHS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GNF", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::GNF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HKD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::HKD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GEL", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::GEL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AED", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::AED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EGP", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::EGP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ZMK", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::ZMK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ILS", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::ILS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::INR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IDR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::IDR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("JOD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::JOD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IQD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::IQD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IRR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::IRR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("YER", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::YER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("QAR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::QAR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KES", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::KES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KGS", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::KGS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COP", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::COP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CDF", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::CDF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CRC", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::CRC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KWD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::KWD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CUP", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::CUP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LAK", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::LAK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LVL", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::LVL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SLL", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::SLL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LBP", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::LBP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LYD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::LYD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SZL", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::SZL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LTL", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::LTL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MUR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::MUR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MRO", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::MRO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MKD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::MKD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MWK", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::MWK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MGA", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::MGA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MYR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::MYR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MAD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::MAD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MXN", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::MXN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MZN", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::MZN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MDL", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::MDL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MNT", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::MNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NPR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::NPR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NGN", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::NGN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NIO", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::NIO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NZD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::NZD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OMR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::OMR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PKR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::PKR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PYG", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::PYG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PEN", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::PEN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PLN", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::PLN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KHR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::KHR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SAR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::SAR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RON", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::RON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SCR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::SCR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SYP", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::SYP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SKK", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::SKK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SOS", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::SOS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SDG", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::SDG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SRD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::SRD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TJS", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::TJS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("THB", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::THB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TWD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::TWD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BDT", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::BDT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TZS", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::TZS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TND", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::TND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TMM", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::TMM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UGX", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::UGX;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UZS", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::UZS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UYU", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::UYU;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PHP", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::PHP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DJF", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::DJF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("XAF", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::XAF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("XOF", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::XOF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HRK", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::HRK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CZK", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::CZK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CLP", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::CLP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LKR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::LKR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EEK", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::EEK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ETB", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::ETB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RSD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::RSD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ZAR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::ZAR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KRW", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::KRW;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NAD", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::NAD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TL", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::TL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UE", Qt::CaseInsensitive) == 0) {
        m_value = eOAICurrencyType::UE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICurrencyType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICurrencyType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICurrencyType::RUR:
            val = "RUR";
            break;
        case eOAICurrencyType::USD:
            val = "USD";
            break;
        case eOAICurrencyType::EUR:
            val = "EUR";
            break;
        case eOAICurrencyType::UAH:
            val = "UAH";
            break;
        case eOAICurrencyType::AUD:
            val = "AUD";
            break;
        case eOAICurrencyType::GBP:
            val = "GBP";
            break;
        case eOAICurrencyType::BYR:
            val = "BYR";
            break;
        case eOAICurrencyType::BYN:
            val = "BYN";
            break;
        case eOAICurrencyType::DKK:
            val = "DKK";
            break;
        case eOAICurrencyType::ISK:
            val = "ISK";
            break;
        case eOAICurrencyType::KZT:
            val = "KZT";
            break;
        case eOAICurrencyType::CAD:
            val = "CAD";
            break;
        case eOAICurrencyType::CNY:
            val = "CNY";
            break;
        case eOAICurrencyType::NOK:
            val = "NOK";
            break;
        case eOAICurrencyType::XDR:
            val = "XDR";
            break;
        case eOAICurrencyType::SGD:
            val = "SGD";
            break;
        case eOAICurrencyType::TRY:
            val = "TRY";
            break;
        case eOAICurrencyType::SEK:
            val = "SEK";
            break;
        case eOAICurrencyType::CHF:
            val = "CHF";
            break;
        case eOAICurrencyType::JPY:
            val = "JPY";
            break;
        case eOAICurrencyType::AZN:
            val = "AZN";
            break;
        case eOAICurrencyType::ALL:
            val = "ALL";
            break;
        case eOAICurrencyType::DZD:
            val = "DZD";
            break;
        case eOAICurrencyType::AOA:
            val = "AOA";
            break;
        case eOAICurrencyType::ARS:
            val = "ARS";
            break;
        case eOAICurrencyType::AMD:
            val = "AMD";
            break;
        case eOAICurrencyType::AFN:
            val = "AFN";
            break;
        case eOAICurrencyType::BHD:
            val = "BHD";
            break;
        case eOAICurrencyType::BGN:
            val = "BGN";
            break;
        case eOAICurrencyType::BOB:
            val = "BOB";
            break;
        case eOAICurrencyType::BWP:
            val = "BWP";
            break;
        case eOAICurrencyType::BND:
            val = "BND";
            break;
        case eOAICurrencyType::BRL:
            val = "BRL";
            break;
        case eOAICurrencyType::BIF:
            val = "BIF";
            break;
        case eOAICurrencyType::HUF:
            val = "HUF";
            break;
        case eOAICurrencyType::VEF:
            val = "VEF";
            break;
        case eOAICurrencyType::KPW:
            val = "KPW";
            break;
        case eOAICurrencyType::VND:
            val = "VND";
            break;
        case eOAICurrencyType::GMD:
            val = "GMD";
            break;
        case eOAICurrencyType::GHS:
            val = "GHS";
            break;
        case eOAICurrencyType::GNF:
            val = "GNF";
            break;
        case eOAICurrencyType::HKD:
            val = "HKD";
            break;
        case eOAICurrencyType::GEL:
            val = "GEL";
            break;
        case eOAICurrencyType::AED:
            val = "AED";
            break;
        case eOAICurrencyType::EGP:
            val = "EGP";
            break;
        case eOAICurrencyType::ZMK:
            val = "ZMK";
            break;
        case eOAICurrencyType::ILS:
            val = "ILS";
            break;
        case eOAICurrencyType::INR:
            val = "INR";
            break;
        case eOAICurrencyType::IDR:
            val = "IDR";
            break;
        case eOAICurrencyType::JOD:
            val = "JOD";
            break;
        case eOAICurrencyType::IQD:
            val = "IQD";
            break;
        case eOAICurrencyType::IRR:
            val = "IRR";
            break;
        case eOAICurrencyType::YER:
            val = "YER";
            break;
        case eOAICurrencyType::QAR:
            val = "QAR";
            break;
        case eOAICurrencyType::KES:
            val = "KES";
            break;
        case eOAICurrencyType::KGS:
            val = "KGS";
            break;
        case eOAICurrencyType::COP:
            val = "COP";
            break;
        case eOAICurrencyType::CDF:
            val = "CDF";
            break;
        case eOAICurrencyType::CRC:
            val = "CRC";
            break;
        case eOAICurrencyType::KWD:
            val = "KWD";
            break;
        case eOAICurrencyType::CUP:
            val = "CUP";
            break;
        case eOAICurrencyType::LAK:
            val = "LAK";
            break;
        case eOAICurrencyType::LVL:
            val = "LVL";
            break;
        case eOAICurrencyType::SLL:
            val = "SLL";
            break;
        case eOAICurrencyType::LBP:
            val = "LBP";
            break;
        case eOAICurrencyType::LYD:
            val = "LYD";
            break;
        case eOAICurrencyType::SZL:
            val = "SZL";
            break;
        case eOAICurrencyType::LTL:
            val = "LTL";
            break;
        case eOAICurrencyType::MUR:
            val = "MUR";
            break;
        case eOAICurrencyType::MRO:
            val = "MRO";
            break;
        case eOAICurrencyType::MKD:
            val = "MKD";
            break;
        case eOAICurrencyType::MWK:
            val = "MWK";
            break;
        case eOAICurrencyType::MGA:
            val = "MGA";
            break;
        case eOAICurrencyType::MYR:
            val = "MYR";
            break;
        case eOAICurrencyType::MAD:
            val = "MAD";
            break;
        case eOAICurrencyType::MXN:
            val = "MXN";
            break;
        case eOAICurrencyType::MZN:
            val = "MZN";
            break;
        case eOAICurrencyType::MDL:
            val = "MDL";
            break;
        case eOAICurrencyType::MNT:
            val = "MNT";
            break;
        case eOAICurrencyType::NPR:
            val = "NPR";
            break;
        case eOAICurrencyType::NGN:
            val = "NGN";
            break;
        case eOAICurrencyType::NIO:
            val = "NIO";
            break;
        case eOAICurrencyType::NZD:
            val = "NZD";
            break;
        case eOAICurrencyType::OMR:
            val = "OMR";
            break;
        case eOAICurrencyType::PKR:
            val = "PKR";
            break;
        case eOAICurrencyType::PYG:
            val = "PYG";
            break;
        case eOAICurrencyType::PEN:
            val = "PEN";
            break;
        case eOAICurrencyType::PLN:
            val = "PLN";
            break;
        case eOAICurrencyType::KHR:
            val = "KHR";
            break;
        case eOAICurrencyType::SAR:
            val = "SAR";
            break;
        case eOAICurrencyType::RON:
            val = "RON";
            break;
        case eOAICurrencyType::SCR:
            val = "SCR";
            break;
        case eOAICurrencyType::SYP:
            val = "SYP";
            break;
        case eOAICurrencyType::SKK:
            val = "SKK";
            break;
        case eOAICurrencyType::SOS:
            val = "SOS";
            break;
        case eOAICurrencyType::SDG:
            val = "SDG";
            break;
        case eOAICurrencyType::SRD:
            val = "SRD";
            break;
        case eOAICurrencyType::TJS:
            val = "TJS";
            break;
        case eOAICurrencyType::THB:
            val = "THB";
            break;
        case eOAICurrencyType::TWD:
            val = "TWD";
            break;
        case eOAICurrencyType::BDT:
            val = "BDT";
            break;
        case eOAICurrencyType::TZS:
            val = "TZS";
            break;
        case eOAICurrencyType::TND:
            val = "TND";
            break;
        case eOAICurrencyType::TMM:
            val = "TMM";
            break;
        case eOAICurrencyType::UGX:
            val = "UGX";
            break;
        case eOAICurrencyType::UZS:
            val = "UZS";
            break;
        case eOAICurrencyType::UYU:
            val = "UYU";
            break;
        case eOAICurrencyType::PHP:
            val = "PHP";
            break;
        case eOAICurrencyType::DJF:
            val = "DJF";
            break;
        case eOAICurrencyType::XAF:
            val = "XAF";
            break;
        case eOAICurrencyType::XOF:
            val = "XOF";
            break;
        case eOAICurrencyType::HRK:
            val = "HRK";
            break;
        case eOAICurrencyType::CZK:
            val = "CZK";
            break;
        case eOAICurrencyType::CLP:
            val = "CLP";
            break;
        case eOAICurrencyType::LKR:
            val = "LKR";
            break;
        case eOAICurrencyType::EEK:
            val = "EEK";
            break;
        case eOAICurrencyType::ETB:
            val = "ETB";
            break;
        case eOAICurrencyType::RSD:
            val = "RSD";
            break;
        case eOAICurrencyType::ZAR:
            val = "ZAR";
            break;
        case eOAICurrencyType::KRW:
            val = "KRW";
            break;
        case eOAICurrencyType::NAD:
            val = "NAD";
            break;
        case eOAICurrencyType::TL:
            val = "TL";
            break;
        case eOAICurrencyType::UE:
            val = "UE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICurrencyType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICurrencyType::eOAICurrencyType OAICurrencyType::getValue() const {
    return m_value;
}

void OAICurrencyType::setValue(const OAICurrencyType::eOAICurrencyType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICurrencyType::isSet() const {
    
    return m_value_isSet;
}

bool OAICurrencyType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
