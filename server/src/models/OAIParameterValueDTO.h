/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIParameterValueDTO.h
 *
 * Значение характеристики.  Вы можете указывать несколько значений одной характеристики при условии, что:  * Тип характеристики — &#x60;ENUM&#x60;. * В ответе на запрос [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md) у данной характеристики поле &#x60;multivalue&#x60; имеет значение &#x60;true&#x60;.  Для этого в &#x60;parameterValues&#x60; передавайте каждое значение отдельно — несколько объектов с параметрами &#x60;parameterId&#x60;, &#x60;valueId&#x60; и &#x60;value&#x60;. Параметр &#x60;parameterId&#x60; должен быть одинаковым. 
 */

#ifndef OAIParameterValueDTO_H
#define OAIParameterValueDTO_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIParameterValueDTO : public OAIObject {
public:
    OAIParameterValueDTO();
    OAIParameterValueDTO(QString json);
    ~OAIParameterValueDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getParameterId() const;
    void setParameterId(const qint64 &parameter_id);
    bool is_parameter_id_Set() const;
    bool is_parameter_id_Valid() const;

    qint64 getUnitId() const;
    void setUnitId(const qint64 &unit_id);
    bool is_unit_id_Set() const;
    bool is_unit_id_Valid() const;

    qint64 getValueId() const;
    void setValueId(const qint64 &value_id);
    bool is_value_id_Set() const;
    bool is_value_id_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 parameter_id;
    bool m_parameter_id_isSet;
    bool m_parameter_id_isValid;

    qint64 unit_id;
    bool m_unit_id_isSet;
    bool m_unit_id_isValid;

    qint64 value_id;
    bool m_value_id_isSet;
    bool m_value_id_isValid;

    QString value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIParameterValueDTO)

#endif // OAIParameterValueDTO_H
