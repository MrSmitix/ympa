/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOptionValuesLimitedDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOptionValuesLimitedDTO::OAIOptionValuesLimitedDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOptionValuesLimitedDTO::OAIOptionValuesLimitedDTO() {
    this->initializeModel();
}

OAIOptionValuesLimitedDTO::~OAIOptionValuesLimitedDTO() {}

void OAIOptionValuesLimitedDTO::initializeModel() {

    m_limiting_option_value_id_isSet = false;
    m_limiting_option_value_id_isValid = false;

    m_option_value_ids_isSet = false;
    m_option_value_ids_isValid = false;
}

void OAIOptionValuesLimitedDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOptionValuesLimitedDTO::fromJsonObject(QJsonObject json) {

    m_limiting_option_value_id_isValid = ::OpenAPI::fromJsonValue(limiting_option_value_id, json[QString("limitingOptionValueId")]);
    m_limiting_option_value_id_isSet = !json[QString("limitingOptionValueId")].isNull() && m_limiting_option_value_id_isValid;

    m_option_value_ids_isValid = ::OpenAPI::fromJsonValue(option_value_ids, json[QString("optionValueIds")]);
    m_option_value_ids_isSet = !json[QString("optionValueIds")].isNull() && m_option_value_ids_isValid;
}

QString OAIOptionValuesLimitedDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOptionValuesLimitedDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_limiting_option_value_id_isSet) {
        obj.insert(QString("limitingOptionValueId"), ::OpenAPI::toJsonValue(limiting_option_value_id));
    }
    if (option_value_ids.size() > 0) {
        obj.insert(QString("optionValueIds"), ::OpenAPI::toJsonValue(option_value_ids));
    }
    return obj;
}

qint64 OAIOptionValuesLimitedDTO::getLimitingOptionValueId() const {
    return limiting_option_value_id;
}
void OAIOptionValuesLimitedDTO::setLimitingOptionValueId(const qint64 &limiting_option_value_id) {
    this->limiting_option_value_id = limiting_option_value_id;
    this->m_limiting_option_value_id_isSet = true;
}

bool OAIOptionValuesLimitedDTO::is_limiting_option_value_id_Set() const{
    return m_limiting_option_value_id_isSet;
}

bool OAIOptionValuesLimitedDTO::is_limiting_option_value_id_Valid() const{
    return m_limiting_option_value_id_isValid;
}

QList<qint64> OAIOptionValuesLimitedDTO::getOptionValueIds() const {
    return option_value_ids;
}
void OAIOptionValuesLimitedDTO::setOptionValueIds(const QList<qint64> &option_value_ids) {
    this->option_value_ids = option_value_ids;
    this->m_option_value_ids_isSet = true;
}

bool OAIOptionValuesLimitedDTO::is_option_value_ids_Set() const{
    return m_option_value_ids_isSet;
}

bool OAIOptionValuesLimitedDTO::is_option_value_ids_Valid() const{
    return m_option_value_ids_isValid;
}

bool OAIOptionValuesLimitedDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_limiting_option_value_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (option_value_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOptionValuesLimitedDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_limiting_option_value_id_isValid && m_option_value_ids_isValid && true;
}

} // namespace OpenAPI
