/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFeedIndexLogsRecordDTO.h
 *
 * Список отчетов по индексации прайс-листа.
 */

#ifndef OAIFeedIndexLogsRecordDTO_H
#define OAIFeedIndexLogsRecordDTO_H

#include <QJsonObject>

#include "OAIFeedIndexLogsErrorDTO.h"
#include "OAIFeedIndexLogsIndexType.h"
#include "OAIFeedIndexLogsOffersDTO.h"
#include "OAIFeedIndexLogsStatusType.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFeedIndexLogsRecordDTO : public OAIObject {
public:
    OAIFeedIndexLogsRecordDTO();
    OAIFeedIndexLogsRecordDTO(QString json);
    ~OAIFeedIndexLogsRecordDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getDownloadTime() const;
    void setDownloadTime(const QDateTime &download_time);
    bool is_download_time_Set() const;
    bool is_download_time_Valid() const;

    QDateTime getFileTime() const;
    void setFileTime(const QDateTime &file_time);
    bool is_file_time_Set() const;
    bool is_file_time_Valid() const;

    qint64 getGenerationId() const;
    void setGenerationId(const qint64 &generation_id);
    bool is_generation_id_Set() const;
    bool is_generation_id_Valid() const;

    OAIFeedIndexLogsIndexType getIndexType() const;
    void setIndexType(const OAIFeedIndexLogsIndexType &index_type);
    bool is_index_type_Set() const;
    bool is_index_type_Valid() const;

    QDateTime getPublishedTime() const;
    void setPublishedTime(const QDateTime &published_time);
    bool is_published_time_Set() const;
    bool is_published_time_Valid() const;

    OAIFeedIndexLogsStatusType getStatus() const;
    void setStatus(const OAIFeedIndexLogsStatusType &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIFeedIndexLogsErrorDTO getError() const;
    void setError(const OAIFeedIndexLogsErrorDTO &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    OAIFeedIndexLogsOffersDTO getOffers() const;
    void setOffers(const OAIFeedIndexLogsOffersDTO &offers);
    bool is_offers_Set() const;
    bool is_offers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime download_time;
    bool m_download_time_isSet;
    bool m_download_time_isValid;

    QDateTime file_time;
    bool m_file_time_isSet;
    bool m_file_time_isValid;

    qint64 generation_id;
    bool m_generation_id_isSet;
    bool m_generation_id_isValid;

    OAIFeedIndexLogsIndexType index_type;
    bool m_index_type_isSet;
    bool m_index_type_isValid;

    QDateTime published_time;
    bool m_published_time_isSet;
    bool m_published_time_isValid;

    OAIFeedIndexLogsStatusType status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIFeedIndexLogsErrorDTO error;
    bool m_error_isSet;
    bool m_error_isValid;

    OAIFeedIndexLogsOffersDTO offers;
    bool m_offers_isSet;
    bool m_offers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFeedIndexLogsRecordDTO)

#endif // OAIFeedIndexLogsRecordDTO_H
