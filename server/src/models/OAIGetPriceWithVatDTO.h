/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetPriceWithVatDTO.h
 *
 * Цена с указанием ставки НДС и времени последнего обновления.
 */

#ifndef OAIGetPriceWithVatDTO_H
#define OAIGetPriceWithVatDTO_H

#include <QJsonObject>

#include "OAICurrencyType.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetPriceWithVatDTO : public OAIObject {
public:
    OAIGetPriceWithVatDTO();
    OAIGetPriceWithVatDTO(QString json);
    ~OAIGetPriceWithVatDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getValue() const;
    void setValue(const double &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    double getDiscountBase() const;
    void setDiscountBase(const double &discount_base);
    bool is_discount_base_Set() const;
    bool is_discount_base_Valid() const;

    OAICurrencyType getCurrencyId() const;
    void setCurrencyId(const OAICurrencyType &currency_id);
    bool is_currency_id_Set() const;
    bool is_currency_id_Valid() const;

    qint32 getVat() const;
    void setVat(const qint32 &vat);
    bool is_vat_Set() const;
    bool is_vat_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double value;
    bool m_value_isSet;
    bool m_value_isValid;

    double discount_base;
    bool m_discount_base_isSet;
    bool m_discount_base_isValid;

    OAICurrencyType currency_id;
    bool m_currency_id_isSet;
    bool m_currency_id_isValid;

    qint32 vat;
    bool m_vat_isSet;
    bool m_vat_isValid;

    QDateTime updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetPriceWithVatDTO)

#endif // OAIGetPriceWithVatDTO_H
