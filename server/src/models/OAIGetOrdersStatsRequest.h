/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetOrdersStatsRequest.h
 *
 * Запрос информации по заказам.
 */

#ifndef OAIGetOrdersStatsRequest_H
#define OAIGetOrdersStatsRequest_H

#include <QJsonObject>

#include "OAIOrderStatsStatusType.h"
#include <QDate>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetOrdersStatsRequest : public OAIObject {
public:
    OAIGetOrdersStatsRequest();
    OAIGetOrdersStatsRequest(QString json);
    ~OAIGetOrdersStatsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDate getDateFrom() const;
    void setDateFrom(const QDate &date_from);
    bool is_date_from_Set() const;
    bool is_date_from_Valid() const;

    QDate getDateTo() const;
    void setDateTo(const QDate &date_to);
    bool is_date_to_Set() const;
    bool is_date_to_Valid() const;

    QDate getUpdateFrom() const;
    void setUpdateFrom(const QDate &update_from);
    bool is_update_from_Set() const;
    bool is_update_from_Valid() const;

    QDate getUpdateTo() const;
    void setUpdateTo(const QDate &update_to);
    bool is_update_to_Set() const;
    bool is_update_to_Valid() const;

    QList<qint64> getOrders() const;
    void setOrders(const QList<qint64> &orders);
    bool is_orders_Set() const;
    bool is_orders_Valid() const;

    QList<OAIOrderStatsStatusType> getStatuses() const;
    void setStatuses(const QList<OAIOrderStatsStatusType> &statuses);
    bool is_statuses_Set() const;
    bool is_statuses_Valid() const;

    bool isHasCis() const;
    void setHasCis(const bool &has_cis);
    bool is_has_cis_Set() const;
    bool is_has_cis_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDate date_from;
    bool m_date_from_isSet;
    bool m_date_from_isValid;

    QDate date_to;
    bool m_date_to_isSet;
    bool m_date_to_isValid;

    QDate update_from;
    bool m_update_from_isSet;
    bool m_update_from_isValid;

    QDate update_to;
    bool m_update_to_isSet;
    bool m_update_to_isValid;

    QList<qint64> orders;
    bool m_orders_isSet;
    bool m_orders_isValid;

    QList<OAIOrderStatsStatusType> statuses;
    bool m_statuses_isSet;
    bool m_statuses_isValid;

    bool has_cis;
    bool m_has_cis_isSet;
    bool m_has_cis_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetOrdersStatsRequest)

#endif // OAIGetOrdersStatsRequest_H
