/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetCampaignOfferDTO.h
 *
 * Параметры размещения товара в магазине.
 */

#ifndef OAIGetCampaignOfferDTO_H
#define OAIGetCampaignOfferDTO_H

#include <QJsonObject>

#include "OAIGetPriceWithDiscountDTO.h"
#include "OAIGetPriceWithVatDTO.h"
#include "OAIOfferCampaignStatusType.h"
#include "OAIOfferErrorDTO.h"
#include "OAIQuantumDTO.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetCampaignOfferDTO : public OAIObject {
public:
    OAIGetCampaignOfferDTO();
    OAIGetCampaignOfferDTO(QString json);
    ~OAIGetCampaignOfferDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOfferId() const;
    void setOfferId(const QString &offer_id);
    bool is_offer_id_Set() const;
    bool is_offer_id_Valid() const;

    OAIQuantumDTO getQuantum() const;
    void setQuantum(const OAIQuantumDTO &quantum);
    bool is_quantum_Set() const;
    bool is_quantum_Valid() const;

    bool isAvailable() const;
    void setAvailable(const bool &available);
    bool is_available_Set() const;
    bool is_available_Valid() const;

    OAIGetPriceWithDiscountDTO getBasicPrice() const;
    void setBasicPrice(const OAIGetPriceWithDiscountDTO &basic_price);
    bool is_basic_price_Set() const;
    bool is_basic_price_Valid() const;

    OAIGetPriceWithVatDTO getCampaignPrice() const;
    void setCampaignPrice(const OAIGetPriceWithVatDTO &campaign_price);
    bool is_campaign_price_Set() const;
    bool is_campaign_price_Valid() const;

    OAIOfferCampaignStatusType getStatus() const;
    void setStatus(const OAIOfferCampaignStatusType &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAIOfferErrorDTO> getErrors() const;
    void setErrors(const QList<OAIOfferErrorDTO> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    QList<OAIOfferErrorDTO> getWarnings() const;
    void setWarnings(const QList<OAIOfferErrorDTO> &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString offer_id;
    bool m_offer_id_isSet;
    bool m_offer_id_isValid;

    OAIQuantumDTO quantum;
    bool m_quantum_isSet;
    bool m_quantum_isValid;

    bool available;
    bool m_available_isSet;
    bool m_available_isValid;

    OAIGetPriceWithDiscountDTO basic_price;
    bool m_basic_price_isSet;
    bool m_basic_price_isValid;

    OAIGetPriceWithVatDTO campaign_price;
    bool m_campaign_price_isSet;
    bool m_campaign_price_isValid;

    OAIOfferCampaignStatusType status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAIOfferErrorDTO> errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    QList<OAIOfferErrorDTO> warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetCampaignOfferDTO)

#endif // OAIGetCampaignOfferDTO_H
