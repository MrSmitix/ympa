/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGenerateUnitedNettingReportRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGenerateUnitedNettingReportRequest::OAIGenerateUnitedNettingReportRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGenerateUnitedNettingReportRequest::OAIGenerateUnitedNettingReportRequest() {
    this->initializeModel();
}

OAIGenerateUnitedNettingReportRequest::~OAIGenerateUnitedNettingReportRequest() {}

void OAIGenerateUnitedNettingReportRequest::initializeModel() {

    m_business_id_isSet = false;
    m_business_id_isValid = false;

    m_date_time_from_isSet = false;
    m_date_time_from_isValid = false;

    m_date_time_to_isSet = false;
    m_date_time_to_isValid = false;

    m_date_from_isSet = false;
    m_date_from_isValid = false;

    m_date_to_isSet = false;
    m_date_to_isValid = false;

    m_bank_order_id_isSet = false;
    m_bank_order_id_isValid = false;

    m_bank_order_date_time_isSet = false;
    m_bank_order_date_time_isValid = false;

    m_placement_programs_isSet = false;
    m_placement_programs_isValid = false;

    m_inns_isSet = false;
    m_inns_isValid = false;

    m_campaign_ids_isSet = false;
    m_campaign_ids_isValid = false;
}

void OAIGenerateUnitedNettingReportRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGenerateUnitedNettingReportRequest::fromJsonObject(QJsonObject json) {

    m_business_id_isValid = ::OpenAPI::fromJsonValue(business_id, json[QString("businessId")]);
    m_business_id_isSet = !json[QString("businessId")].isNull() && m_business_id_isValid;

    m_date_time_from_isValid = ::OpenAPI::fromJsonValue(date_time_from, json[QString("dateTimeFrom")]);
    m_date_time_from_isSet = !json[QString("dateTimeFrom")].isNull() && m_date_time_from_isValid;

    m_date_time_to_isValid = ::OpenAPI::fromJsonValue(date_time_to, json[QString("dateTimeTo")]);
    m_date_time_to_isSet = !json[QString("dateTimeTo")].isNull() && m_date_time_to_isValid;

    m_date_from_isValid = ::OpenAPI::fromJsonValue(date_from, json[QString("dateFrom")]);
    m_date_from_isSet = !json[QString("dateFrom")].isNull() && m_date_from_isValid;

    m_date_to_isValid = ::OpenAPI::fromJsonValue(date_to, json[QString("dateTo")]);
    m_date_to_isSet = !json[QString("dateTo")].isNull() && m_date_to_isValid;

    m_bank_order_id_isValid = ::OpenAPI::fromJsonValue(bank_order_id, json[QString("bankOrderId")]);
    m_bank_order_id_isSet = !json[QString("bankOrderId")].isNull() && m_bank_order_id_isValid;

    m_bank_order_date_time_isValid = ::OpenAPI::fromJsonValue(bank_order_date_time, json[QString("bankOrderDateTime")]);
    m_bank_order_date_time_isSet = !json[QString("bankOrderDateTime")].isNull() && m_bank_order_date_time_isValid;

    m_placement_programs_isValid = ::OpenAPI::fromJsonValue(placement_programs, json[QString("placementPrograms")]);
    m_placement_programs_isSet = !json[QString("placementPrograms")].isNull() && m_placement_programs_isValid;

    m_inns_isValid = ::OpenAPI::fromJsonValue(inns, json[QString("inns")]);
    m_inns_isSet = !json[QString("inns")].isNull() && m_inns_isValid;

    m_campaign_ids_isValid = ::OpenAPI::fromJsonValue(campaign_ids, json[QString("campaignIds")]);
    m_campaign_ids_isSet = !json[QString("campaignIds")].isNull() && m_campaign_ids_isValid;
}

QString OAIGenerateUnitedNettingReportRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGenerateUnitedNettingReportRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_business_id_isSet) {
        obj.insert(QString("businessId"), ::OpenAPI::toJsonValue(business_id));
    }
    if (m_date_time_from_isSet) {
        obj.insert(QString("dateTimeFrom"), ::OpenAPI::toJsonValue(date_time_from));
    }
    if (m_date_time_to_isSet) {
        obj.insert(QString("dateTimeTo"), ::OpenAPI::toJsonValue(date_time_to));
    }
    if (m_date_from_isSet) {
        obj.insert(QString("dateFrom"), ::OpenAPI::toJsonValue(date_from));
    }
    if (m_date_to_isSet) {
        obj.insert(QString("dateTo"), ::OpenAPI::toJsonValue(date_to));
    }
    if (m_bank_order_id_isSet) {
        obj.insert(QString("bankOrderId"), ::OpenAPI::toJsonValue(bank_order_id));
    }
    if (m_bank_order_date_time_isSet) {
        obj.insert(QString("bankOrderDateTime"), ::OpenAPI::toJsonValue(bank_order_date_time));
    }
    if (placement_programs.size() > 0) {
        obj.insert(QString("placementPrograms"), ::OpenAPI::toJsonValue(placement_programs));
    }
    if (inns.size() > 0) {
        obj.insert(QString("inns"), ::OpenAPI::toJsonValue(inns));
    }
    if (campaign_ids.size() > 0) {
        obj.insert(QString("campaignIds"), ::OpenAPI::toJsonValue(campaign_ids));
    }
    return obj;
}

qint64 OAIGenerateUnitedNettingReportRequest::getBusinessId() const {
    return business_id;
}
void OAIGenerateUnitedNettingReportRequest::setBusinessId(const qint64 &business_id) {
    this->business_id = business_id;
    this->m_business_id_isSet = true;
}

bool OAIGenerateUnitedNettingReportRequest::is_business_id_Set() const{
    return m_business_id_isSet;
}

bool OAIGenerateUnitedNettingReportRequest::is_business_id_Valid() const{
    return m_business_id_isValid;
}

QDateTime OAIGenerateUnitedNettingReportRequest::getDateTimeFrom() const {
    return date_time_from;
}
void OAIGenerateUnitedNettingReportRequest::setDateTimeFrom(const QDateTime &date_time_from) {
    this->date_time_from = date_time_from;
    this->m_date_time_from_isSet = true;
}

bool OAIGenerateUnitedNettingReportRequest::is_date_time_from_Set() const{
    return m_date_time_from_isSet;
}

bool OAIGenerateUnitedNettingReportRequest::is_date_time_from_Valid() const{
    return m_date_time_from_isValid;
}

QDateTime OAIGenerateUnitedNettingReportRequest::getDateTimeTo() const {
    return date_time_to;
}
void OAIGenerateUnitedNettingReportRequest::setDateTimeTo(const QDateTime &date_time_to) {
    this->date_time_to = date_time_to;
    this->m_date_time_to_isSet = true;
}

bool OAIGenerateUnitedNettingReportRequest::is_date_time_to_Set() const{
    return m_date_time_to_isSet;
}

bool OAIGenerateUnitedNettingReportRequest::is_date_time_to_Valid() const{
    return m_date_time_to_isValid;
}

QDate OAIGenerateUnitedNettingReportRequest::getDateFrom() const {
    return date_from;
}
void OAIGenerateUnitedNettingReportRequest::setDateFrom(const QDate &date_from) {
    this->date_from = date_from;
    this->m_date_from_isSet = true;
}

bool OAIGenerateUnitedNettingReportRequest::is_date_from_Set() const{
    return m_date_from_isSet;
}

bool OAIGenerateUnitedNettingReportRequest::is_date_from_Valid() const{
    return m_date_from_isValid;
}

QDate OAIGenerateUnitedNettingReportRequest::getDateTo() const {
    return date_to;
}
void OAIGenerateUnitedNettingReportRequest::setDateTo(const QDate &date_to) {
    this->date_to = date_to;
    this->m_date_to_isSet = true;
}

bool OAIGenerateUnitedNettingReportRequest::is_date_to_Set() const{
    return m_date_to_isSet;
}

bool OAIGenerateUnitedNettingReportRequest::is_date_to_Valid() const{
    return m_date_to_isValid;
}

qint64 OAIGenerateUnitedNettingReportRequest::getBankOrderId() const {
    return bank_order_id;
}
void OAIGenerateUnitedNettingReportRequest::setBankOrderId(const qint64 &bank_order_id) {
    this->bank_order_id = bank_order_id;
    this->m_bank_order_id_isSet = true;
}

bool OAIGenerateUnitedNettingReportRequest::is_bank_order_id_Set() const{
    return m_bank_order_id_isSet;
}

bool OAIGenerateUnitedNettingReportRequest::is_bank_order_id_Valid() const{
    return m_bank_order_id_isValid;
}

QDateTime OAIGenerateUnitedNettingReportRequest::getBankOrderDateTime() const {
    return bank_order_date_time;
}
void OAIGenerateUnitedNettingReportRequest::setBankOrderDateTime(const QDateTime &bank_order_date_time) {
    this->bank_order_date_time = bank_order_date_time;
    this->m_bank_order_date_time_isSet = true;
}

bool OAIGenerateUnitedNettingReportRequest::is_bank_order_date_time_Set() const{
    return m_bank_order_date_time_isSet;
}

bool OAIGenerateUnitedNettingReportRequest::is_bank_order_date_time_Valid() const{
    return m_bank_order_date_time_isValid;
}

QList<OAIPlacementType> OAIGenerateUnitedNettingReportRequest::getPlacementPrograms() const {
    return placement_programs;
}
void OAIGenerateUnitedNettingReportRequest::setPlacementPrograms(const QList<OAIPlacementType> &placement_programs) {
    this->placement_programs = placement_programs;
    this->m_placement_programs_isSet = true;
}

bool OAIGenerateUnitedNettingReportRequest::is_placement_programs_Set() const{
    return m_placement_programs_isSet;
}

bool OAIGenerateUnitedNettingReportRequest::is_placement_programs_Valid() const{
    return m_placement_programs_isValid;
}

QList<QString> OAIGenerateUnitedNettingReportRequest::getInns() const {
    return inns;
}
void OAIGenerateUnitedNettingReportRequest::setInns(const QList<QString> &inns) {
    this->inns = inns;
    this->m_inns_isSet = true;
}

bool OAIGenerateUnitedNettingReportRequest::is_inns_Set() const{
    return m_inns_isSet;
}

bool OAIGenerateUnitedNettingReportRequest::is_inns_Valid() const{
    return m_inns_isValid;
}

QList<qint64> OAIGenerateUnitedNettingReportRequest::getCampaignIds() const {
    return campaign_ids;
}
void OAIGenerateUnitedNettingReportRequest::setCampaignIds(const QList<qint64> &campaign_ids) {
    this->campaign_ids = campaign_ids;
    this->m_campaign_ids_isSet = true;
}

bool OAIGenerateUnitedNettingReportRequest::is_campaign_ids_Set() const{
    return m_campaign_ids_isSet;
}

bool OAIGenerateUnitedNettingReportRequest::is_campaign_ids_Valid() const{
    return m_campaign_ids_isValid;
}

bool OAIGenerateUnitedNettingReportRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_business_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_time_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_time_to_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_to_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_order_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (placement_programs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (inns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (campaign_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGenerateUnitedNettingReportRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_business_id_isValid && true;
}

} // namespace OpenAPI
