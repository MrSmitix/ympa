/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>
#include <QDebug>

#include "OAIBusinessOfferMappingsApiHandler.h"
#include "OAIBusinessOfferMappingsApiRequest.h"

namespace OpenAPI {

OAIBusinessOfferMappingsApiHandler::OAIBusinessOfferMappingsApiHandler(){

}

OAIBusinessOfferMappingsApiHandler::~OAIBusinessOfferMappingsApiHandler(){

}

void OAIBusinessOfferMappingsApiHandler::addOffersToArchive(qint64 business_id, OAIAddOffersToArchiveRequest oai_add_offers_to_archive_request) {
    Q_UNUSED(business_id);
    Q_UNUSED(oai_add_offers_to_archive_request);
    auto reqObj = qobject_cast<OAIBusinessOfferMappingsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIAddOffersToArchiveResponse res;
        reqObj->addOffersToArchiveResponse(res);
    }
}
void OAIBusinessOfferMappingsApiHandler::deleteOffers(qint64 business_id, OAIDeleteOffersRequest oai_delete_offers_request) {
    Q_UNUSED(business_id);
    Q_UNUSED(oai_delete_offers_request);
    auto reqObj = qobject_cast<OAIBusinessOfferMappingsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIDeleteOffersResponse res;
        reqObj->deleteOffersResponse(res);
    }
}
void OAIBusinessOfferMappingsApiHandler::deleteOffersFromArchive(qint64 business_id, OAIDeleteOffersFromArchiveRequest oai_delete_offers_from_archive_request) {
    Q_UNUSED(business_id);
    Q_UNUSED(oai_delete_offers_from_archive_request);
    auto reqObj = qobject_cast<OAIBusinessOfferMappingsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIDeleteOffersFromArchiveResponse res;
        reqObj->deleteOffersFromArchiveResponse(res);
    }
}
void OAIBusinessOfferMappingsApiHandler::getOfferMappings(qint64 business_id, QString page_token, qint32 limit, OAIGetOfferMappingsRequest oai_get_offer_mappings_request) {
    Q_UNUSED(business_id);
    Q_UNUSED(page_token);
    Q_UNUSED(limit);
    Q_UNUSED(oai_get_offer_mappings_request);
    auto reqObj = qobject_cast<OAIBusinessOfferMappingsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGetOfferMappingsResponse res;
        reqObj->getOfferMappingsResponse(res);
    }
}
void OAIBusinessOfferMappingsApiHandler::getSuggestedOfferMappings(qint64 business_id, OAIGetSuggestedOfferMappingsRequest oai_get_suggested_offer_mappings_request) {
    Q_UNUSED(business_id);
    Q_UNUSED(oai_get_suggested_offer_mappings_request);
    auto reqObj = qobject_cast<OAIBusinessOfferMappingsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGetSuggestedOfferMappingsResponse res;
        reqObj->getSuggestedOfferMappingsResponse(res);
    }
}
void OAIBusinessOfferMappingsApiHandler::updateOfferMappings(qint64 business_id, OAIUpdateOfferMappingsRequest oai_update_offer_mappings_request) {
    Q_UNUSED(business_id);
    Q_UNUSED(oai_update_offer_mappings_request);
    auto reqObj = qobject_cast<OAIBusinessOfferMappingsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIUpdateOfferMappingsResponse res;
        reqObj->updateOfferMappingsResponse(res);
    }
}


}
