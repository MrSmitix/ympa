/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIShipmentsApiHandler_H
#define OAI_OAIShipmentsApiHandler_H

#include <QObject>

#include "OAIApiClientDataErrorResponse.h"
#include "OAIApiForbiddenErrorResponse.h"
#include "OAIApiLimitErrorResponse.h"
#include "OAIApiNotFoundErrorResponse.h"
#include "OAIApiServerErrorResponse.h"
#include "OAIApiUnauthorizedErrorResponse.h"
#include "OAIConfirmShipmentRequest.h"
#include "OAIEmptyApiResponse.h"
#include "OAIGetShipmentOrdersInfoResponse.h"
#include "OAIGetShipmentResponse.h"
#include "OAIHttpFileElement.h"
#include "OAISearchShipmentsRequest.h"
#include "OAISearchShipmentsResponse.h"
#include "OAISetShipmentPalletsCountRequest.h"
#include "OAIShipmentPalletLabelPageFormatType.h"
#include "OAITransferOrdersFromShipmentRequest.h"
#include <QString>

namespace OpenAPI {

class OAIShipmentsApiHandler : public QObject
{
    Q_OBJECT

public:
    OAIShipmentsApiHandler();
    virtual ~OAIShipmentsApiHandler();


public Q_SLOTS:
    virtual void confirmShipment(qint64 campaign_id, qint64 shipment_id, OAIConfirmShipmentRequest oai_confirm_shipment_request);
    virtual void downloadShipmentAct(qint64 campaign_id, qint64 shipment_id);
    virtual void downloadShipmentDiscrepancyAct(qint64 campaign_id, qint64 shipment_id);
    virtual void downloadShipmentInboundAct(qint64 campaign_id, qint64 shipment_id);
    virtual void downloadShipmentPalletLabels(qint64 campaign_id, qint64 shipment_id, OAIShipmentPalletLabelPageFormatType format);
    virtual void downloadShipmentReceptionTransferAct(qint64 campaign_id, qint32 warehouse_id);
    virtual void downloadShipmentTransportationWaybill(qint64 campaign_id, qint64 shipment_id);
    virtual void getShipment(qint64 campaign_id, qint64 shipment_id, bool cancelled_orders);
    virtual void getShipmentOrdersInfo(qint64 campaign_id, qint64 shipment_id);
    virtual void searchShipments(qint64 campaign_id, OAISearchShipmentsRequest oai_search_shipments_request, QString page_token, qint32 limit);
    virtual void setShipmentPalletsCount(qint64 campaign_id, qint64 shipment_id, OAISetShipmentPalletsCountRequest oai_set_shipment_pallets_count_request);
    virtual void transferOrdersFromShipment(qint64 campaign_id, qint64 shipment_id, OAITransferOrdersFromShipmentRequest oai_transfer_orders_from_shipment_request);
    

};

}

#endif // OAI_OAIShipmentsApiHandler_H
