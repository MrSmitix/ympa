/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>
#include <QDebug>

#include "OAIReportsApiHandler.h"
#include "OAIReportsApiRequest.h"

namespace OpenAPI {

OAIReportsApiHandler::OAIReportsApiHandler(){

}

OAIReportsApiHandler::~OAIReportsApiHandler(){

}

void OAIReportsApiHandler::generateBoostConsolidatedReport(OAIGenerateBoostConsolidatedRequest oai_generate_boost_consolidated_request, OAIReportFormatType format) {
    Q_UNUSED(oai_generate_boost_consolidated_request);
    Q_UNUSED(format);
    auto reqObj = qobject_cast<OAIReportsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGenerateReportResponse res;
        reqObj->generateBoostConsolidatedReportResponse(res);
    }
}
void OAIReportsApiHandler::generateCompetitorsPositionReport(OAIGenerateCompetitorsPositionReportRequest oai_generate_competitors_position_report_request, OAIReportFormatType format) {
    Q_UNUSED(oai_generate_competitors_position_report_request);
    Q_UNUSED(format);
    auto reqObj = qobject_cast<OAIReportsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGenerateReportResponse res;
        reqObj->generateCompetitorsPositionReportResponse(res);
    }
}
void OAIReportsApiHandler::generateGoodsFeedbackReport(OAIGenerateGoodsFeedbackRequest oai_generate_goods_feedback_request, OAIReportFormatType format) {
    Q_UNUSED(oai_generate_goods_feedback_request);
    Q_UNUSED(format);
    auto reqObj = qobject_cast<OAIReportsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGenerateReportResponse res;
        reqObj->generateGoodsFeedbackReportResponse(res);
    }
}
void OAIReportsApiHandler::generateGoodsMovementReport(OAIGenerateGoodsMovementReportRequest oai_generate_goods_movement_report_request, OAIReportFormatType format) {
    Q_UNUSED(oai_generate_goods_movement_report_request);
    Q_UNUSED(format);
    auto reqObj = qobject_cast<OAIReportsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGenerateReportResponse res;
        reqObj->generateGoodsMovementReportResponse(res);
    }
}
void OAIReportsApiHandler::generateGoodsRealizationReport(OAIGenerateGoodsRealizationReportRequest oai_generate_goods_realization_report_request, OAIReportFormatType format) {
    Q_UNUSED(oai_generate_goods_realization_report_request);
    Q_UNUSED(format);
    auto reqObj = qobject_cast<OAIReportsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGenerateReportResponse res;
        reqObj->generateGoodsRealizationReportResponse(res);
    }
}
void OAIReportsApiHandler::generateGoodsTurnoverReport(OAIGenerateGoodsTurnoverRequest oai_generate_goods_turnover_request, OAIReportFormatType format) {
    Q_UNUSED(oai_generate_goods_turnover_request);
    Q_UNUSED(format);
    auto reqObj = qobject_cast<OAIReportsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGenerateReportResponse res;
        reqObj->generateGoodsTurnoverReportResponse(res);
    }
}
void OAIReportsApiHandler::generateMassOrderLabelsReport(OAIGenerateMassOrderLabelsRequest oai_generate_mass_order_labels_request, OAIPageFormatType format) {
    Q_UNUSED(oai_generate_mass_order_labels_request);
    Q_UNUSED(format);
    auto reqObj = qobject_cast<OAIReportsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGenerateReportResponse res;
        reqObj->generateMassOrderLabelsReportResponse(res);
    }
}
void OAIReportsApiHandler::generatePricesReport(OAIGeneratePricesReportRequest oai_generate_prices_report_request, OAIReportFormatType format) {
    Q_UNUSED(oai_generate_prices_report_request);
    Q_UNUSED(format);
    auto reqObj = qobject_cast<OAIReportsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGenerateReportResponse res;
        reqObj->generatePricesReportResponse(res);
    }
}
void OAIReportsApiHandler::generateShelfsStatisticsReport(OAIGenerateShelfsStatisticsRequest oai_generate_shelfs_statistics_request, OAIReportFormatType format) {
    Q_UNUSED(oai_generate_shelfs_statistics_request);
    Q_UNUSED(format);
    auto reqObj = qobject_cast<OAIReportsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGenerateReportResponse res;
        reqObj->generateShelfsStatisticsReportResponse(res);
    }
}
void OAIReportsApiHandler::generateShipmentListDocumentReport(OAIGenerateShipmentListDocumentReportRequest oai_generate_shipment_list_document_report_request) {
    Q_UNUSED(oai_generate_shipment_list_document_report_request);
    auto reqObj = qobject_cast<OAIReportsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGenerateReportResponse res;
        reqObj->generateShipmentListDocumentReportResponse(res);
    }
}
void OAIReportsApiHandler::generateShowsSalesReport(OAIGenerateShowsSalesReportRequest oai_generate_shows_sales_report_request, OAIReportFormatType format) {
    Q_UNUSED(oai_generate_shows_sales_report_request);
    Q_UNUSED(format);
    auto reqObj = qobject_cast<OAIReportsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGenerateReportResponse res;
        reqObj->generateShowsSalesReportResponse(res);
    }
}
void OAIReportsApiHandler::generateStocksOnWarehousesReport(OAIGenerateStocksOnWarehousesReportRequest oai_generate_stocks_on_warehouses_report_request, OAIReportFormatType format) {
    Q_UNUSED(oai_generate_stocks_on_warehouses_report_request);
    Q_UNUSED(format);
    auto reqObj = qobject_cast<OAIReportsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGenerateReportResponse res;
        reqObj->generateStocksOnWarehousesReportResponse(res);
    }
}
void OAIReportsApiHandler::generateUnitedMarketplaceServicesReport(OAIGenerateUnitedMarketplaceServicesReportRequest oai_generate_united_marketplace_services_report_request, OAIReportFormatType format) {
    Q_UNUSED(oai_generate_united_marketplace_services_report_request);
    Q_UNUSED(format);
    auto reqObj = qobject_cast<OAIReportsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGenerateReportResponse res;
        reqObj->generateUnitedMarketplaceServicesReportResponse(res);
    }
}
void OAIReportsApiHandler::generateUnitedNettingReport(OAIGenerateUnitedNettingReportRequest oai_generate_united_netting_report_request, OAIReportFormatType format) {
    Q_UNUSED(oai_generate_united_netting_report_request);
    Q_UNUSED(format);
    auto reqObj = qobject_cast<OAIReportsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGenerateReportResponse res;
        reqObj->generateUnitedNettingReportResponse(res);
    }
}
void OAIReportsApiHandler::generateUnitedOrdersReport(OAIGenerateUnitedOrdersRequest oai_generate_united_orders_request, OAIReportFormatType format) {
    Q_UNUSED(oai_generate_united_orders_request);
    Q_UNUSED(format);
    auto reqObj = qobject_cast<OAIReportsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGenerateReportResponse res;
        reqObj->generateUnitedOrdersReportResponse(res);
    }
}
void OAIReportsApiHandler::getReportInfo(QString report_id) {
    Q_UNUSED(report_id);
    auto reqObj = qobject_cast<OAIReportsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGetReportInfoResponse res;
        reqObj->getReportInfoResponse(res);
    }
}


}
