/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIOffersApiHandler_H
#define OAI_OAIOffersApiHandler_H

#include <QObject>

#include "OAIApiClientDataErrorResponse.h"
#include "OAIApiForbiddenErrorResponse.h"
#include "OAIApiLimitErrorResponse.h"
#include "OAIApiLockedErrorResponse.h"
#include "OAIApiNotFoundErrorResponse.h"
#include "OAIApiServerErrorResponse.h"
#include "OAIApiUnauthorizedErrorResponse.h"
#include "OAICurrencyType.h"
#include "OAIDeleteCampaignOffersRequest.h"
#include "OAIDeleteCampaignOffersResponse.h"
#include "OAIEmptyApiResponse.h"
#include "OAIGetAllOffersResponse.h"
#include "OAIGetCampaignOffersRequest.h"
#include "OAIGetCampaignOffersResponse.h"
#include "OAIGetOfferRecommendationsRequest.h"
#include "OAIGetOfferRecommendationsResponse.h"
#include "OAIGetOffersResponse.h"
#include "OAIUpdateCampaignOffersRequest.h"
#include <QString>

namespace OpenAPI {

class OAIOffersApiHandler : public QObject
{
    Q_OBJECT

public:
    OAIOffersApiHandler();
    virtual ~OAIOffersApiHandler();


public Q_SLOTS:
    virtual void deleteCampaignOffers(qint64 campaign_id, OAIDeleteCampaignOffersRequest oai_delete_campaign_offers_request);
    virtual void getAllOffers(qint64 campaign_id, qint64 feed_id, qint32 chunk);
    virtual void getCampaignOffers(qint64 campaign_id, OAIGetCampaignOffersRequest oai_get_campaign_offers_request, QString page_token, qint32 limit);
    virtual void getOfferRecommendations(qint64 business_id, OAIGetOfferRecommendationsRequest oai_get_offer_recommendations_request, QString page_token, qint32 limit);
    virtual void getOffers(qint64 campaign_id, QString query, qint64 feed_id, QString shop_category_id, OAICurrencyType currency, bool matched, qint32 page, qint32 page_size);
    virtual void updateCampaignOffers(qint64 campaign_id, OAIUpdateCampaignOffersRequest oai_update_campaign_offers_request);
    

};

}

#endif // OAI_OAIOffersApiHandler_H
