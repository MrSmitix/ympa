/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIBusinessOfferMappingsApiHandler_H
#define OAI_OAIBusinessOfferMappingsApiHandler_H

#include <QObject>

#include "OAIAddOffersToArchiveRequest.h"
#include "OAIAddOffersToArchiveResponse.h"
#include "OAIApiClientDataErrorResponse.h"
#include "OAIApiForbiddenErrorResponse.h"
#include "OAIApiLimitErrorResponse.h"
#include "OAIApiLockedErrorResponse.h"
#include "OAIApiNotFoundErrorResponse.h"
#include "OAIApiServerErrorResponse.h"
#include "OAIApiUnauthorizedErrorResponse.h"
#include "OAIDeleteOffersFromArchiveRequest.h"
#include "OAIDeleteOffersFromArchiveResponse.h"
#include "OAIDeleteOffersRequest.h"
#include "OAIDeleteOffersResponse.h"
#include "OAIGetOfferMappingsRequest.h"
#include "OAIGetOfferMappingsResponse.h"
#include "OAIGetSuggestedOfferMappingsRequest.h"
#include "OAIGetSuggestedOfferMappingsResponse.h"
#include "OAIUpdateOfferMappingsRequest.h"
#include "OAIUpdateOfferMappingsResponse.h"
#include <QString>

namespace OpenAPI {

class OAIBusinessOfferMappingsApiHandler : public QObject
{
    Q_OBJECT

public:
    OAIBusinessOfferMappingsApiHandler();
    virtual ~OAIBusinessOfferMappingsApiHandler();


public Q_SLOTS:
    virtual void addOffersToArchive(qint64 business_id, OAIAddOffersToArchiveRequest oai_add_offers_to_archive_request);
    virtual void deleteOffers(qint64 business_id, OAIDeleteOffersRequest oai_delete_offers_request);
    virtual void deleteOffersFromArchive(qint64 business_id, OAIDeleteOffersFromArchiveRequest oai_delete_offers_from_archive_request);
    virtual void getOfferMappings(qint64 business_id, QString page_token, qint32 limit, OAIGetOfferMappingsRequest oai_get_offer_mappings_request);
    virtual void getSuggestedOfferMappings(qint64 business_id, OAIGetSuggestedOfferMappingsRequest oai_get_suggested_offer_mappings_request);
    virtual void updateOfferMappings(qint64 business_id, OAIUpdateOfferMappingsRequest oai_update_offer_mappings_request);
    

};

}

#endif // OAI_OAIBusinessOfferMappingsApiHandler_H
