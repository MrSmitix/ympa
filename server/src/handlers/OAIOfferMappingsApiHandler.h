/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIOfferMappingsApiHandler_H
#define OAI_OAIOfferMappingsApiHandler_H

#include <QObject>

#include "OAIApiClientDataErrorResponse.h"
#include "OAIApiForbiddenErrorResponse.h"
#include "OAIApiLimitErrorResponse.h"
#include "OAIApiLockedErrorResponse.h"
#include "OAIApiNotFoundErrorResponse.h"
#include "OAIApiServerErrorResponse.h"
#include "OAIApiUnauthorizedErrorResponse.h"
#include "OAIEmptyApiResponse.h"
#include "OAIGetOfferMappingEntriesResponse.h"
#include "OAIGetSuggestedOfferMappingEntriesRequest.h"
#include "OAIGetSuggestedOfferMappingEntriesResponse.h"
#include "OAIOfferAvailabilityStatusType.h"
#include "OAIOfferMappingKindType.h"
#include "OAIOfferProcessingStatusType.h"
#include "OAIUpdateOfferMappingEntryRequest.h"
#include <QList>
#include <QString>

namespace OpenAPI {

class OAIOfferMappingsApiHandler : public QObject
{
    Q_OBJECT

public:
    OAIOfferMappingsApiHandler();
    virtual ~OAIOfferMappingsApiHandler();


public Q_SLOTS:
    virtual void getOfferMappingEntries(qint64 campaign_id, QList<QString> offer_id, QList<QString> shop_sku, OAIOfferMappingKindType mapping_kind, QList<OAIOfferProcessingStatusType> status, QList<OAIOfferAvailabilityStatusType> availability, QList<qint32> category_id, QList<QString> vendor, QString page_token, qint32 limit);
    virtual void getSuggestedOfferMappingEntries(qint64 campaign_id, OAIGetSuggestedOfferMappingEntriesRequest oai_get_suggested_offer_mapping_entries_request);
    virtual void updateOfferMappingEntries(qint64 campaign_id, OAIUpdateOfferMappingEntryRequest oai_update_offer_mapping_entry_request);
    

};

}

#endif // OAI_OAIOfferMappingsApiHandler_H
