/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIFbyApiHandler_H
#define OAI_OAIFbyApiHandler_H

#include <QObject>

#include "OAIAddHiddenOffersRequest.h"
#include "OAIAddOffersToArchiveRequest.h"
#include "OAIAddOffersToArchiveResponse.h"
#include "OAIApiClientDataErrorResponse.h"
#include "OAIApiForbiddenErrorResponse.h"
#include "OAIApiLimitErrorResponse.h"
#include "OAIApiLockedErrorResponse.h"
#include "OAIApiNotFoundErrorResponse.h"
#include "OAIApiServerErrorResponse.h"
#include "OAIApiUnauthorizedErrorResponse.h"
#include "OAICalculateTariffsRequest.h"
#include "OAICalculateTariffsResponse.h"
#include "OAIConfirmPricesRequest.h"
#include "OAICreateChatRequest.h"
#include "OAICreateChatResponse.h"
#include "OAICurrencyType.h"
#include "OAIDeleteCampaignOffersRequest.h"
#include "OAIDeleteCampaignOffersResponse.h"
#include "OAIDeleteGoodsFeedbackCommentRequest.h"
#include "OAIDeleteHiddenOffersRequest.h"
#include "OAIDeleteOffersFromArchiveRequest.h"
#include "OAIDeleteOffersFromArchiveResponse.h"
#include "OAIDeleteOffersRequest.h"
#include "OAIDeleteOffersResponse.h"
#include "OAIDeletePromoOffersRequest.h"
#include "OAIDeletePromoOffersResponse.h"
#include "OAIEmptyApiResponse.h"
#include "OAIFeedIndexLogsStatusType.h"
#include "OAIGenerateBoostConsolidatedRequest.h"
#include "OAIGenerateCompetitorsPositionReportRequest.h"
#include "OAIGenerateGoodsFeedbackRequest.h"
#include "OAIGenerateGoodsMovementReportRequest.h"
#include "OAIGenerateGoodsRealizationReportRequest.h"
#include "OAIGenerateGoodsTurnoverRequest.h"
#include "OAIGeneratePricesReportRequest.h"
#include "OAIGenerateReportResponse.h"
#include "OAIGenerateShelfsStatisticsRequest.h"
#include "OAIGenerateShowsSalesReportRequest.h"
#include "OAIGenerateStocksOnWarehousesReportRequest.h"
#include "OAIGenerateUnitedMarketplaceServicesReportRequest.h"
#include "OAIGenerateUnitedNettingReportRequest.h"
#include "OAIGenerateUnitedOrdersRequest.h"
#include "OAIGetAllOffersResponse.h"
#include "OAIGetBidsInfoRequest.h"
#include "OAIGetBidsInfoResponse.h"
#include "OAIGetBidsRecommendationsRequest.h"
#include "OAIGetBidsRecommendationsResponse.h"
#include "OAIGetBusinessBuyerInfoResponse.h"
#include "OAIGetBusinessDocumentsInfoResponse.h"
#include "OAIGetBusinessSettingsResponse.h"
#include "OAIGetCampaignLoginsResponse.h"
#include "OAIGetCampaignOffersRequest.h"
#include "OAIGetCampaignOffersResponse.h"
#include "OAIGetCampaignRegionResponse.h"
#include "OAIGetCampaignResponse.h"
#include "OAIGetCampaignSettingsResponse.h"
#include "OAIGetCampaignsResponse.h"
#include "OAIGetCategoriesMaxSaleQuantumRequest.h"
#include "OAIGetCategoriesMaxSaleQuantumResponse.h"
#include "OAIGetCategoriesRequest.h"
#include "OAIGetCategoriesResponse.h"
#include "OAIGetCategoryContentParametersResponse.h"
#include "OAIGetChatHistoryRequest.h"
#include "OAIGetChatHistoryResponse.h"
#include "OAIGetChatsRequest.h"
#include "OAIGetChatsResponse.h"
#include "OAIGetFeedIndexLogsResponse.h"
#include "OAIGetFeedResponse.h"
#include "OAIGetFeedbackListResponse.h"
#include "OAIGetFeedsResponse.h"
#include "OAIGetFulfillmentWarehousesResponse.h"
#include "OAIGetGoodsFeedbackCommentsRequest.h"
#include "OAIGetGoodsFeedbackCommentsResponse.h"
#include "OAIGetGoodsFeedbackRequest.h"
#include "OAIGetGoodsFeedbackResponse.h"
#include "OAIGetGoodsStatsRequest.h"
#include "OAIGetGoodsStatsResponse.h"
#include "OAIGetHiddenOffersResponse.h"
#include "OAIGetOfferCardsContentStatusRequest.h"
#include "OAIGetOfferCardsContentStatusResponse.h"
#include "OAIGetOfferMappingEntriesResponse.h"
#include "OAIGetOfferMappingsRequest.h"
#include "OAIGetOfferMappingsResponse.h"
#include "OAIGetOfferRecommendationsRequest.h"
#include "OAIGetOfferRecommendationsResponse.h"
#include "OAIGetOffersResponse.h"
#include "OAIGetOrderResponse.h"
#include "OAIGetOrdersResponse.h"
#include "OAIGetOrdersStatsRequest.h"
#include "OAIGetOrdersStatsResponse.h"
#include "OAIGetPricesByOfferIdsRequest.h"
#include "OAIGetPricesByOfferIdsResponse.h"
#include "OAIGetPricesResponse.h"
#include "OAIGetPromoOffersRequest.h"
#include "OAIGetPromoOffersResponse.h"
#include "OAIGetPromosRequest.h"
#include "OAIGetPromosResponse.h"
#include "OAIGetQualityRatingRequest.h"
#include "OAIGetQualityRatingResponse.h"
#include "OAIGetQuarantineOffersRequest.h"
#include "OAIGetQuarantineOffersResponse.h"
#include "OAIGetRegionWithChildrenResponse.h"
#include "OAIGetRegionsResponse.h"
#include "OAIGetReportInfoResponse.h"
#include "OAIGetReturnResponse.h"
#include "OAIGetReturnsResponse.h"
#include "OAIGetSuggestedOfferMappingEntriesRequest.h"
#include "OAIGetSuggestedOfferMappingEntriesResponse.h"
#include "OAIGetSuggestedOfferMappingsRequest.h"
#include "OAIGetSuggestedOfferMappingsResponse.h"
#include "OAIGetWarehouseStocksRequest.h"
#include "OAIGetWarehouseStocksResponse.h"
#include "OAIHttpFileElement.h"
#include "OAIOfferAvailabilityStatusType.h"
#include "OAIOfferMappingKindType.h"
#include "OAIOfferProcessingStatusType.h"
#include "OAIOrderBuyerType.h"
#include "OAIOrderDeliveryDispatchType.h"
#include "OAIOrderStatusType.h"
#include "OAIOrderSubstatusType.h"
#include "OAIPutSkuBidsRequest.h"
#include "OAIRefundStatusType.h"
#include "OAIReportFormatType.h"
#include "OAIReturnType.h"
#include "OAISendMessageToChatRequest.h"
#include "OAISetFeedParamsRequest.h"
#include "OAISkipGoodsFeedbackReactionRequest.h"
#include "OAISuggestPricesRequest.h"
#include "OAISuggestPricesResponse.h"
#include "OAIUpdateBusinessPricesRequest.h"
#include "OAIUpdateCampaignOffersRequest.h"
#include "OAIUpdateGoodsFeedbackCommentRequest.h"
#include "OAIUpdateGoodsFeedbackCommentResponse.h"
#include "OAIUpdateOfferContentRequest.h"
#include "OAIUpdateOfferContentResponse.h"
#include "OAIUpdateOfferMappingEntryRequest.h"
#include "OAIUpdateOfferMappingsRequest.h"
#include "OAIUpdateOfferMappingsResponse.h"
#include "OAIUpdatePricesRequest.h"
#include "OAIUpdatePromoOffersRequest.h"
#include "OAIUpdatePromoOffersResponse.h"
#include <QList>
#include <QSet>
#include <QString>

namespace OpenAPI {

class OAIFbyApiHandler : public QObject
{
    Q_OBJECT

public:
    OAIFbyApiHandler();
    virtual ~OAIFbyApiHandler();


public Q_SLOTS:
    virtual void addHiddenOffers(qint64 campaign_id, OAIAddHiddenOffersRequest oai_add_hidden_offers_request);
    virtual void addOffersToArchive(qint64 business_id, OAIAddOffersToArchiveRequest oai_add_offers_to_archive_request);
    virtual void calculateTariffs(OAICalculateTariffsRequest oai_calculate_tariffs_request);
    virtual void confirmBusinessPrices(qint64 business_id, OAIConfirmPricesRequest oai_confirm_prices_request);
    virtual void confirmCampaignPrices(qint64 campaign_id, OAIConfirmPricesRequest oai_confirm_prices_request);
    virtual void createChat(qint64 business_id, OAICreateChatRequest oai_create_chat_request);
    virtual void deleteCampaignOffers(qint64 campaign_id, OAIDeleteCampaignOffersRequest oai_delete_campaign_offers_request);
    virtual void deleteGoodsFeedbackComment(qint64 business_id, OAIDeleteGoodsFeedbackCommentRequest oai_delete_goods_feedback_comment_request);
    virtual void deleteHiddenOffers(qint64 campaign_id, OAIDeleteHiddenOffersRequest oai_delete_hidden_offers_request);
    virtual void deleteOffers(qint64 business_id, OAIDeleteOffersRequest oai_delete_offers_request);
    virtual void deleteOffersFromArchive(qint64 business_id, OAIDeleteOffersFromArchiveRequest oai_delete_offers_from_archive_request);
    virtual void deletePromoOffers(qint64 business_id, OAIDeletePromoOffersRequest oai_delete_promo_offers_request);
    virtual void generateBoostConsolidatedReport(OAIGenerateBoostConsolidatedRequest oai_generate_boost_consolidated_request, OAIReportFormatType format);
    virtual void generateCompetitorsPositionReport(OAIGenerateCompetitorsPositionReportRequest oai_generate_competitors_position_report_request, OAIReportFormatType format);
    virtual void generateGoodsFeedbackReport(OAIGenerateGoodsFeedbackRequest oai_generate_goods_feedback_request, OAIReportFormatType format);
    virtual void generateGoodsMovementReport(OAIGenerateGoodsMovementReportRequest oai_generate_goods_movement_report_request, OAIReportFormatType format);
    virtual void generateGoodsRealizationReport(OAIGenerateGoodsRealizationReportRequest oai_generate_goods_realization_report_request, OAIReportFormatType format);
    virtual void generateGoodsTurnoverReport(OAIGenerateGoodsTurnoverRequest oai_generate_goods_turnover_request, OAIReportFormatType format);
    virtual void generatePricesReport(OAIGeneratePricesReportRequest oai_generate_prices_report_request, OAIReportFormatType format);
    virtual void generateShelfsStatisticsReport(OAIGenerateShelfsStatisticsRequest oai_generate_shelfs_statistics_request, OAIReportFormatType format);
    virtual void generateShowsSalesReport(OAIGenerateShowsSalesReportRequest oai_generate_shows_sales_report_request, OAIReportFormatType format);
    virtual void generateStocksOnWarehousesReport(OAIGenerateStocksOnWarehousesReportRequest oai_generate_stocks_on_warehouses_report_request, OAIReportFormatType format);
    virtual void generateUnitedMarketplaceServicesReport(OAIGenerateUnitedMarketplaceServicesReportRequest oai_generate_united_marketplace_services_report_request, OAIReportFormatType format);
    virtual void generateUnitedNettingReport(OAIGenerateUnitedNettingReportRequest oai_generate_united_netting_report_request, OAIReportFormatType format);
    virtual void generateUnitedOrdersReport(OAIGenerateUnitedOrdersRequest oai_generate_united_orders_request, OAIReportFormatType format);
    virtual void getAllOffers(qint64 campaign_id, qint64 feed_id, qint32 chunk);
    virtual void getBidsInfoForBusiness(qint64 business_id, QString page_token, qint32 limit, OAIGetBidsInfoRequest oai_get_bids_info_request);
    virtual void getBidsRecommendations(qint64 business_id, OAIGetBidsRecommendationsRequest oai_get_bids_recommendations_request);
    virtual void getBusinessQuarantineOffers(qint64 business_id, OAIGetQuarantineOffersRequest oai_get_quarantine_offers_request, QString page_token, qint32 limit);
    virtual void getBusinessSettings(qint64 business_id);
    virtual void getCampaign(qint64 campaign_id);
    virtual void getCampaignLogins(qint64 campaign_id);
    virtual void getCampaignOffers(qint64 campaign_id, OAIGetCampaignOffersRequest oai_get_campaign_offers_request, QString page_token, qint32 limit);
    virtual void getCampaignQuarantineOffers(qint64 campaign_id, OAIGetQuarantineOffersRequest oai_get_quarantine_offers_request, QString page_token, qint32 limit);
    virtual void getCampaignRegion(qint64 campaign_id);
    virtual void getCampaignSettings(qint64 campaign_id);
    virtual void getCampaigns(qint32 page, qint32 page_size);
    virtual void getCampaignsByLogin(QString login, qint32 page, qint32 page_size);
    virtual void getCategoriesMaxSaleQuantum(OAIGetCategoriesMaxSaleQuantumRequest oai_get_categories_max_sale_quantum_request);
    virtual void getCategoriesTree(OAIGetCategoriesRequest oai_get_categories_request);
    virtual void getCategoryContentParameters(qint64 category_id);
    virtual void getChatHistory(qint64 business_id, qint64 chat_id, OAIGetChatHistoryRequest oai_get_chat_history_request, QString page_token, qint32 limit);
    virtual void getChats(qint64 business_id, OAIGetChatsRequest oai_get_chats_request, QString page_token, qint32 limit);
    virtual void getFeed(qint64 campaign_id, qint64 feed_id);
    virtual void getFeedIndexLogs(qint64 campaign_id, qint64 feed_id, qint32 limit, QDateTime published_time_from, QDateTime published_time_to, OAIFeedIndexLogsStatusType status);
    virtual void getFeedbackAndCommentUpdates(qint64 campaign_id, QString page_token, qint32 limit, QDate from_date);
    virtual void getFeeds(qint64 campaign_id);
    virtual void getFulfillmentWarehouses();
    virtual void getGoodsFeedbackComments(qint64 business_id, OAIGetGoodsFeedbackCommentsRequest oai_get_goods_feedback_comments_request, QString page_token, qint32 limit);
    virtual void getGoodsFeedbacks(qint64 business_id, QString page_token, qint32 limit, OAIGetGoodsFeedbackRequest oai_get_goods_feedback_request);
    virtual void getGoodsStats(qint64 campaign_id, OAIGetGoodsStatsRequest oai_get_goods_stats_request);
    virtual void getHiddenOffers(qint64 campaign_id, QList<QString> offer_id, QString page_token, qint32 limit, qint32 offset, qint32 page, qint32 page_size);
    virtual void getOfferCardsContentStatus(qint64 business_id, QString page_token, qint32 limit, OAIGetOfferCardsContentStatusRequest oai_get_offer_cards_content_status_request);
    virtual void getOfferMappingEntries(qint64 campaign_id, QList<QString> offer_id, QList<QString> shop_sku, OAIOfferMappingKindType mapping_kind, QList<OAIOfferProcessingStatusType> status, QList<OAIOfferAvailabilityStatusType> availability, QList<qint32> category_id, QList<QString> vendor, QString page_token, qint32 limit);
    virtual void getOfferMappings(qint64 business_id, QString page_token, qint32 limit, OAIGetOfferMappingsRequest oai_get_offer_mappings_request);
    virtual void getOfferRecommendations(qint64 business_id, OAIGetOfferRecommendationsRequest oai_get_offer_recommendations_request, QString page_token, qint32 limit);
    virtual void getOffers(qint64 campaign_id, QString query, qint64 feed_id, QString shop_category_id, OAICurrencyType currency, bool matched, qint32 page, qint32 page_size);
    virtual void getOrder(qint64 campaign_id, qint64 order_id);
    virtual void getOrderBusinessBuyerInfo(qint64 campaign_id, qint64 order_id);
    virtual void getOrderBusinessDocumentsInfo(qint64 campaign_id, qint64 order_id);
    virtual void getOrders(qint64 campaign_id, QList<qint64> order_ids, QSet<OAIOrderStatusType> status, QSet<OAIOrderSubstatusType> substatus, QDate from_date, QDate to_date, QDate supplier_shipment_date_from, QDate supplier_shipment_date_to, QDateTime updated_at_from, QDateTime updated_at_to, OAIOrderDeliveryDispatchType dispatch_type, bool fake, bool has_cis, bool only_waiting_for_cancellation_approve, bool only_estimated_delivery, OAIOrderBuyerType buyer_type, qint32 page, qint32 page_size, QString page_token, qint32 limit);
    virtual void getOrdersStats(qint64 campaign_id, QString page_token, qint32 limit, OAIGetOrdersStatsRequest oai_get_orders_stats_request);
    virtual void getPrices(qint64 campaign_id, QString page_token, qint32 limit, bool archived);
    virtual void getPricesByOfferIds(qint64 campaign_id, QString page_token, qint32 limit, OAIGetPricesByOfferIdsRequest oai_get_prices_by_offer_ids_request);
    virtual void getPromoOffers(qint64 business_id, OAIGetPromoOffersRequest oai_get_promo_offers_request, QString page_token, qint32 limit);
    virtual void getPromos(qint64 business_id, OAIGetPromosRequest oai_get_promos_request);
    virtual void getQualityRatings(qint64 business_id, OAIGetQualityRatingRequest oai_get_quality_rating_request);
    virtual void getReportInfo(QString report_id);
    virtual void getReturn(qint64 campaign_id, qint64 order_id, qint64 return_id);
    virtual void getReturnPhoto(qint64 campaign_id, qint64 order_id, qint64 return_id, qint64 item_id, QString image_hash);
    virtual void getReturns(qint64 campaign_id, QString page_token, qint32 limit, QList<qint64> order_ids, QList<OAIRefundStatusType> statuses, OAIReturnType type, QDate from_date, QDate to_date, QDate from_date2, QDate to_date2);
    virtual void getStocks(qint64 campaign_id, QString page_token, qint32 limit, OAIGetWarehouseStocksRequest oai_get_warehouse_stocks_request);
    virtual void getSuggestedOfferMappingEntries(qint64 campaign_id, OAIGetSuggestedOfferMappingEntriesRequest oai_get_suggested_offer_mapping_entries_request);
    virtual void getSuggestedOfferMappings(qint64 business_id, OAIGetSuggestedOfferMappingsRequest oai_get_suggested_offer_mappings_request);
    virtual void getSuggestedPrices(qint64 campaign_id, OAISuggestPricesRequest oai_suggest_prices_request);
    virtual void putBidsForBusiness(qint64 business_id, OAIPutSkuBidsRequest oai_put_sku_bids_request);
    virtual void putBidsForCampaign(qint64 campaign_id, OAIPutSkuBidsRequest oai_put_sku_bids_request);
    virtual void refreshFeed(qint64 campaign_id, qint64 feed_id);
    virtual void searchRegionChildren(qint64 region_id, qint32 page, qint32 page_size);
    virtual void searchRegionsById(qint64 region_id);
    virtual void searchRegionsByName(QString name, QString page_token, qint32 limit);
    virtual void sendFileToChat(qint64 business_id, qint64 chat_id, OAIHttpFileElement file);
    virtual void sendMessageToChat(qint64 business_id, qint64 chat_id, OAISendMessageToChatRequest oai_send_message_to_chat_request);
    virtual void setFeedParams(qint64 campaign_id, qint64 feed_id, OAISetFeedParamsRequest oai_set_feed_params_request);
    virtual void skipGoodsFeedbacksReaction(qint64 business_id, OAISkipGoodsFeedbackReactionRequest oai_skip_goods_feedback_reaction_request);
    virtual void updateBusinessPrices(qint64 business_id, OAIUpdateBusinessPricesRequest oai_update_business_prices_request);
    virtual void updateCampaignOffers(qint64 campaign_id, OAIUpdateCampaignOffersRequest oai_update_campaign_offers_request);
    virtual void updateGoodsFeedbackComment(qint64 business_id, OAIUpdateGoodsFeedbackCommentRequest oai_update_goods_feedback_comment_request);
    virtual void updateOfferContent(qint64 business_id, OAIUpdateOfferContentRequest oai_update_offer_content_request);
    virtual void updateOfferMappingEntries(qint64 campaign_id, OAIUpdateOfferMappingEntryRequest oai_update_offer_mapping_entry_request);
    virtual void updateOfferMappings(qint64 business_id, OAIUpdateOfferMappingsRequest oai_update_offer_mappings_request);
    virtual void updatePrices(qint64 campaign_id, OAIUpdatePricesRequest oai_update_prices_request);
    virtual void updatePromoOffers(qint64 business_id, OAIUpdatePromoOffersRequest oai_update_promo_offers_request);
    

};

}

#endif // OAI_OAIFbyApiHandler_H
