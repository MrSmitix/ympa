/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>
#include <QDebug>

#include "OAICampaignsApiHandler.h"
#include "OAICampaignsApiRequest.h"

namespace OpenAPI {

OAICampaignsApiHandler::OAICampaignsApiHandler(){

}

OAICampaignsApiHandler::~OAICampaignsApiHandler(){

}

void OAICampaignsApiHandler::getCampaign(qint64 campaign_id) {
    Q_UNUSED(campaign_id);
    auto reqObj = qobject_cast<OAICampaignsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGetCampaignResponse res;
        reqObj->getCampaignResponse(res);
    }
}
void OAICampaignsApiHandler::getCampaignLogins(qint64 campaign_id) {
    Q_UNUSED(campaign_id);
    auto reqObj = qobject_cast<OAICampaignsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGetCampaignLoginsResponse res;
        reqObj->getCampaignLoginsResponse(res);
    }
}
void OAICampaignsApiHandler::getCampaignRegion(qint64 campaign_id) {
    Q_UNUSED(campaign_id);
    auto reqObj = qobject_cast<OAICampaignsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGetCampaignRegionResponse res;
        reqObj->getCampaignRegionResponse(res);
    }
}
void OAICampaignsApiHandler::getCampaignSettings(qint64 campaign_id) {
    Q_UNUSED(campaign_id);
    auto reqObj = qobject_cast<OAICampaignsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGetCampaignSettingsResponse res;
        reqObj->getCampaignSettingsResponse(res);
    }
}
void OAICampaignsApiHandler::getCampaigns(qint32 page, qint32 page_size) {
    Q_UNUSED(page);
    Q_UNUSED(page_size);
    auto reqObj = qobject_cast<OAICampaignsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGetCampaignsResponse res;
        reqObj->getCampaignsResponse(res);
    }
}
void OAICampaignsApiHandler::getCampaignsByLogin(QString login, qint32 page, qint32 page_size) {
    Q_UNUSED(login);
    Q_UNUSED(page);
    Q_UNUSED(page_size);
    auto reqObj = qobject_cast<OAICampaignsApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGetCampaignsResponse res;
        reqObj->getCampaignsByLoginResponse(res);
    }
}


}
