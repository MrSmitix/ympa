/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>
#include <QDebug>

#include "OAIPriceQuarantineApiHandler.h"
#include "OAIPriceQuarantineApiRequest.h"

namespace OpenAPI {

OAIPriceQuarantineApiHandler::OAIPriceQuarantineApiHandler(){

}

OAIPriceQuarantineApiHandler::~OAIPriceQuarantineApiHandler(){

}

void OAIPriceQuarantineApiHandler::confirmBusinessPrices(qint64 business_id, OAIConfirmPricesRequest oai_confirm_prices_request) {
    Q_UNUSED(business_id);
    Q_UNUSED(oai_confirm_prices_request);
    auto reqObj = qobject_cast<OAIPriceQuarantineApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIEmptyApiResponse res;
        reqObj->confirmBusinessPricesResponse(res);
    }
}
void OAIPriceQuarantineApiHandler::confirmCampaignPrices(qint64 campaign_id, OAIConfirmPricesRequest oai_confirm_prices_request) {
    Q_UNUSED(campaign_id);
    Q_UNUSED(oai_confirm_prices_request);
    auto reqObj = qobject_cast<OAIPriceQuarantineApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIEmptyApiResponse res;
        reqObj->confirmCampaignPricesResponse(res);
    }
}
void OAIPriceQuarantineApiHandler::getBusinessQuarantineOffers(qint64 business_id, OAIGetQuarantineOffersRequest oai_get_quarantine_offers_request, QString page_token, qint32 limit) {
    Q_UNUSED(business_id);
    Q_UNUSED(oai_get_quarantine_offers_request);
    Q_UNUSED(page_token);
    Q_UNUSED(limit);
    auto reqObj = qobject_cast<OAIPriceQuarantineApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGetQuarantineOffersResponse res;
        reqObj->getBusinessQuarantineOffersResponse(res);
    }
}
void OAIPriceQuarantineApiHandler::getCampaignQuarantineOffers(qint64 campaign_id, OAIGetQuarantineOffersRequest oai_get_quarantine_offers_request, QString page_token, qint32 limit) {
    Q_UNUSED(campaign_id);
    Q_UNUSED(oai_get_quarantine_offers_request);
    Q_UNUSED(page_token);
    Q_UNUSED(limit);
    auto reqObj = qobject_cast<OAIPriceQuarantineApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIGetQuarantineOffersResponse res;
        reqObj->getCampaignQuarantineOffersResponse(res);
    }
}


}
