/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIDbsApiRequest_H
#define OAI_OAIDbsApiRequest_H

#include <QObject>
#include <QStringList>
#include <QMultiMap>
#include <QNetworkReply>
#include <QSharedPointer>

#include <qhttpengine/socket.h>
#include "OAIAcceptOrderCancellationRequest.h"
#include "OAIAddHiddenOffersRequest.h"
#include "OAIAddOffersToArchiveRequest.h"
#include "OAIAddOffersToArchiveResponse.h"
#include "OAIApiClientDataErrorResponse.h"
#include "OAIApiForbiddenErrorResponse.h"
#include "OAIApiLimitErrorResponse.h"
#include "OAIApiLockedErrorResponse.h"
#include "OAIApiNotFoundErrorResponse.h"
#include "OAIApiServerErrorResponse.h"
#include "OAIApiUnauthorizedErrorResponse.h"
#include "OAICalculateTariffsRequest.h"
#include "OAICalculateTariffsResponse.h"
#include "OAIChangeOutletRequest.h"
#include "OAIConfirmPricesRequest.h"
#include "OAICreateChatRequest.h"
#include "OAICreateChatResponse.h"
#include "OAICreateOutletResponse.h"
#include "OAICurrencyType.h"
#include "OAIDeleteCampaignOffersRequest.h"
#include "OAIDeleteCampaignOffersResponse.h"
#include "OAIDeleteGoodsFeedbackCommentRequest.h"
#include "OAIDeleteHiddenOffersRequest.h"
#include "OAIDeleteOffersFromArchiveRequest.h"
#include "OAIDeleteOffersFromArchiveResponse.h"
#include "OAIDeleteOffersRequest.h"
#include "OAIDeleteOffersResponse.h"
#include "OAIDeletePromoOffersRequest.h"
#include "OAIDeletePromoOffersResponse.h"
#include "OAIEmptyApiResponse.h"
#include "OAIFeedIndexLogsStatusType.h"
#include "OAIGenerateBoostConsolidatedRequest.h"
#include "OAIGenerateCompetitorsPositionReportRequest.h"
#include "OAIGenerateGoodsFeedbackRequest.h"
#include "OAIGenerateMassOrderLabelsRequest.h"
#include "OAIGeneratePricesReportRequest.h"
#include "OAIGenerateReportResponse.h"
#include "OAIGenerateShelfsStatisticsRequest.h"
#include "OAIGenerateShowsSalesReportRequest.h"
#include "OAIGenerateStocksOnWarehousesReportRequest.h"
#include "OAIGenerateUnitedMarketplaceServicesReportRequest.h"
#include "OAIGenerateUnitedNettingReportRequest.h"
#include "OAIGenerateUnitedOrdersRequest.h"
#include "OAIGetAllOffersResponse.h"
#include "OAIGetBidsInfoRequest.h"
#include "OAIGetBidsInfoResponse.h"
#include "OAIGetBidsRecommendationsRequest.h"
#include "OAIGetBidsRecommendationsResponse.h"
#include "OAIGetBusinessBuyerInfoResponse.h"
#include "OAIGetBusinessDocumentsInfoResponse.h"
#include "OAIGetBusinessSettingsResponse.h"
#include "OAIGetCampaignLoginsResponse.h"
#include "OAIGetCampaignOffersRequest.h"
#include "OAIGetCampaignOffersResponse.h"
#include "OAIGetCampaignRegionResponse.h"
#include "OAIGetCampaignResponse.h"
#include "OAIGetCampaignSettingsResponse.h"
#include "OAIGetCampaignsResponse.h"
#include "OAIGetCategoriesMaxSaleQuantumRequest.h"
#include "OAIGetCategoriesMaxSaleQuantumResponse.h"
#include "OAIGetCategoriesRequest.h"
#include "OAIGetCategoriesResponse.h"
#include "OAIGetCategoryContentParametersResponse.h"
#include "OAIGetChatHistoryRequest.h"
#include "OAIGetChatHistoryResponse.h"
#include "OAIGetChatsRequest.h"
#include "OAIGetChatsResponse.h"
#include "OAIGetDeliveryServicesResponse.h"
#include "OAIGetFeedIndexLogsResponse.h"
#include "OAIGetFeedResponse.h"
#include "OAIGetFeedbackListResponse.h"
#include "OAIGetFeedsResponse.h"
#include "OAIGetGoodsFeedbackCommentsRequest.h"
#include "OAIGetGoodsFeedbackCommentsResponse.h"
#include "OAIGetGoodsFeedbackRequest.h"
#include "OAIGetGoodsFeedbackResponse.h"
#include "OAIGetGoodsStatsRequest.h"
#include "OAIGetGoodsStatsResponse.h"
#include "OAIGetHiddenOffersResponse.h"
#include "OAIGetModelsOffersResponse.h"
#include "OAIGetModelsRequest.h"
#include "OAIGetModelsResponse.h"
#include "OAIGetOfferCardsContentStatusRequest.h"
#include "OAIGetOfferCardsContentStatusResponse.h"
#include "OAIGetOfferMappingEntriesResponse.h"
#include "OAIGetOfferMappingsRequest.h"
#include "OAIGetOfferMappingsResponse.h"
#include "OAIGetOfferRecommendationsRequest.h"
#include "OAIGetOfferRecommendationsResponse.h"
#include "OAIGetOffersResponse.h"
#include "OAIGetOrderBuyerInfoResponse.h"
#include "OAIGetOrderLabelsDataResponse.h"
#include "OAIGetOrderResponse.h"
#include "OAIGetOrdersResponse.h"
#include "OAIGetOrdersStatsRequest.h"
#include "OAIGetOrdersStatsResponse.h"
#include "OAIGetOutletLicensesResponse.h"
#include "OAIGetOutletResponse.h"
#include "OAIGetOutletsResponse.h"
#include "OAIGetPricesByOfferIdsRequest.h"
#include "OAIGetPricesByOfferIdsResponse.h"
#include "OAIGetPricesResponse.h"
#include "OAIGetPromoOffersRequest.h"
#include "OAIGetPromoOffersResponse.h"
#include "OAIGetPromosRequest.h"
#include "OAIGetPromosResponse.h"
#include "OAIGetQualityRatingDetailsResponse.h"
#include "OAIGetQualityRatingRequest.h"
#include "OAIGetQualityRatingResponse.h"
#include "OAIGetQuarantineOffersRequest.h"
#include "OAIGetQuarantineOffersResponse.h"
#include "OAIGetRegionWithChildrenResponse.h"
#include "OAIGetRegionsResponse.h"
#include "OAIGetReportInfoResponse.h"
#include "OAIGetReturnResponse.h"
#include "OAIGetReturnsResponse.h"
#include "OAIGetSuggestedOfferMappingEntriesRequest.h"
#include "OAIGetSuggestedOfferMappingEntriesResponse.h"
#include "OAIGetSuggestedOfferMappingsRequest.h"
#include "OAIGetSuggestedOfferMappingsResponse.h"
#include "OAIGetWarehouseStocksRequest.h"
#include "OAIGetWarehouseStocksResponse.h"
#include "OAIGetWarehousesResponse.h"
#include "OAIHttpFileElement.h"
#include "OAIOfferAvailabilityStatusType.h"
#include "OAIOfferMappingKindType.h"
#include "OAIOfferProcessingStatusType.h"
#include "OAIOrderBuyerType.h"
#include "OAIOrderDeliveryDispatchType.h"
#include "OAIOrderStatusType.h"
#include "OAIOrderSubstatusType.h"
#include "OAIPageFormatType.h"
#include "OAIProvideOrderDigitalCodesRequest.h"
#include "OAIProvideOrderItemIdentifiersRequest.h"
#include "OAIProvideOrderItemIdentifiersResponse.h"
#include "OAIPutSkuBidsRequest.h"
#include "OAIRefundStatusType.h"
#include "OAIReportFormatType.h"
#include "OAIReturnType.h"
#include "OAISearchModelsResponse.h"
#include "OAISendMessageToChatRequest.h"
#include "OAISetFeedParamsRequest.h"
#include "OAISetOrderBoxLayoutRequest.h"
#include "OAISetOrderBoxLayoutResponse.h"
#include "OAISetOrderDeliveryDateRequest.h"
#include "OAISetOrderDeliveryTrackCodeRequest.h"
#include "OAISetOrderShipmentBoxesRequest.h"
#include "OAISetOrderShipmentBoxesResponse.h"
#include "OAISetReturnDecisionRequest.h"
#include "OAISkipGoodsFeedbackReactionRequest.h"
#include "OAISortOrderType.h"
#include "OAISuggestPricesRequest.h"
#include "OAISuggestPricesResponse.h"
#include "OAIUpdateBusinessPricesRequest.h"
#include "OAIUpdateCampaignOffersRequest.h"
#include "OAIUpdateGoodsFeedbackCommentRequest.h"
#include "OAIUpdateGoodsFeedbackCommentResponse.h"
#include "OAIUpdateOfferContentRequest.h"
#include "OAIUpdateOfferContentResponse.h"
#include "OAIUpdateOfferMappingEntryRequest.h"
#include "OAIUpdateOfferMappingsRequest.h"
#include "OAIUpdateOfferMappingsResponse.h"
#include "OAIUpdateOrderItemRequest.h"
#include "OAIUpdateOrderStatusRequest.h"
#include "OAIUpdateOrderStatusResponse.h"
#include "OAIUpdateOrderStatusesRequest.h"
#include "OAIUpdateOrderStatusesResponse.h"
#include "OAIUpdateOrderStorageLimitRequest.h"
#include "OAIUpdateOutletLicenseRequest.h"
#include "OAIUpdatePricesRequest.h"
#include "OAIUpdatePromoOffersRequest.h"
#include "OAIUpdatePromoOffersResponse.h"
#include "OAIUpdateStocksRequest.h"
#include <QList>
#include <QSet>
#include <QString>
#include "OAIDbsApiHandler.h"

namespace OpenAPI {

class OAIDbsApiRequest : public QObject
{
    Q_OBJECT

public:
    OAIDbsApiRequest(QHttpEngine::Socket *s, QSharedPointer<OAIDbsApiHandler> handler);
    virtual ~OAIDbsApiRequest();

    void acceptOrderCancellationRequest(const QString& campaign_id, const QString& order_id);
    void addHiddenOffersRequest(const QString& campaign_id);
    void addOffersToArchiveRequest(const QString& business_id);
    void calculateTariffsRequest();
    void confirmBusinessPricesRequest(const QString& business_id);
    void confirmCampaignPricesRequest(const QString& campaign_id);
    void createChatRequest(const QString& business_id);
    void createOutletRequest(const QString& campaign_id);
    void deleteCampaignOffersRequest(const QString& campaign_id);
    void deleteGoodsFeedbackCommentRequest(const QString& business_id);
    void deleteHiddenOffersRequest(const QString& campaign_id);
    void deleteOffersRequest(const QString& business_id);
    void deleteOffersFromArchiveRequest(const QString& business_id);
    void deleteOutletRequest(const QString& campaign_id, const QString& outlet_id);
    void deleteOutletLicensesRequest(const QString& campaign_id);
    void deletePromoOffersRequest(const QString& business_id);
    void generateBoostConsolidatedReportRequest();
    void generateCompetitorsPositionReportRequest();
    void generateGoodsFeedbackReportRequest();
    void generateMassOrderLabelsReportRequest();
    void generateOrderLabelRequest(const QString& campaign_id, const QString& order_id, const QString& shipment_id, const QString& box_id);
    void generateOrderLabelsRequest(const QString& campaign_id, const QString& order_id);
    void generatePricesReportRequest();
    void generateShelfsStatisticsReportRequest();
    void generateShowsSalesReportRequest();
    void generateStocksOnWarehousesReportRequest();
    void generateUnitedMarketplaceServicesReportRequest();
    void generateUnitedNettingReportRequest();
    void generateUnitedOrdersReportRequest();
    void getAllOffersRequest(const QString& campaign_id);
    void getBidsInfoForBusinessRequest(const QString& business_id);
    void getBidsRecommendationsRequest(const QString& business_id);
    void getBusinessQuarantineOffersRequest(const QString& business_id);
    void getBusinessSettingsRequest(const QString& business_id);
    void getCampaignRequest(const QString& campaign_id);
    void getCampaignLoginsRequest(const QString& campaign_id);
    void getCampaignOffersRequest(const QString& campaign_id);
    void getCampaignQuarantineOffersRequest(const QString& campaign_id);
    void getCampaignRegionRequest(const QString& campaign_id);
    void getCampaignSettingsRequest(const QString& campaign_id);
    void getCampaignsRequest();
    void getCampaignsByLoginRequest(const QString& login);
    void getCategoriesMaxSaleQuantumRequest();
    void getCategoriesTreeRequest();
    void getCategoryContentParametersRequest(const QString& category_id);
    void getChatHistoryRequest(const QString& business_id);
    void getChatsRequest(const QString& business_id);
    void getDeliveryServicesRequest();
    void getFeedRequest(const QString& campaign_id, const QString& feed_id);
    void getFeedIndexLogsRequest(const QString& campaign_id, const QString& feed_id);
    void getFeedbackAndCommentUpdatesRequest(const QString& campaign_id);
    void getFeedsRequest(const QString& campaign_id);
    void getGoodsFeedbackCommentsRequest(const QString& business_id);
    void getGoodsFeedbacksRequest(const QString& business_id);
    void getGoodsStatsRequest(const QString& campaign_id);
    void getHiddenOffersRequest(const QString& campaign_id);
    void getModelRequest(const QString& model_id);
    void getModelOffersRequest(const QString& model_id);
    void getModelsRequest();
    void getModelsOffersRequest();
    void getOfferCardsContentStatusRequest(const QString& business_id);
    void getOfferMappingEntriesRequest(const QString& campaign_id);
    void getOfferMappingsRequest(const QString& business_id);
    void getOfferRecommendationsRequest(const QString& business_id);
    void getOffersRequest(const QString& campaign_id);
    void getOrderRequest(const QString& campaign_id, const QString& order_id);
    void getOrderBusinessBuyerInfoRequest(const QString& campaign_id, const QString& order_id);
    void getOrderBusinessDocumentsInfoRequest(const QString& campaign_id, const QString& order_id);
    void getOrderBuyerInfoRequest(const QString& campaign_id, const QString& order_id);
    void getOrderLabelsDataRequest(const QString& campaign_id, const QString& order_id);
    void getOrdersRequest(const QString& campaign_id);
    void getOrdersStatsRequest(const QString& campaign_id);
    void getOutletRequest(const QString& campaign_id, const QString& outlet_id);
    void getOutletLicensesRequest(const QString& campaign_id);
    void getOutletsRequest(const QString& campaign_id);
    void getPricesRequest(const QString& campaign_id);
    void getPricesByOfferIdsRequest(const QString& campaign_id);
    void getPromoOffersRequest(const QString& business_id);
    void getPromosRequest(const QString& business_id);
    void getQualityRatingDetailsRequest(const QString& campaign_id);
    void getQualityRatingsRequest(const QString& business_id);
    void getReportInfoRequest(const QString& report_id);
    void getReturnRequest(const QString& campaign_id, const QString& order_id, const QString& return_id);
    void getReturnApplicationRequest(const QString& campaign_id, const QString& order_id, const QString& return_id);
    void getReturnPhotoRequest(const QString& campaign_id, const QString& order_id, const QString& return_id, const QString& item_id, const QString& image_hash);
    void getReturnsRequest(const QString& campaign_id);
    void getStocksRequest(const QString& campaign_id);
    void getSuggestedOfferMappingEntriesRequest(const QString& campaign_id);
    void getSuggestedOfferMappingsRequest(const QString& business_id);
    void getSuggestedPricesRequest(const QString& campaign_id);
    void getWarehousesRequest(const QString& business_id);
    void provideOrderDigitalCodesRequest(const QString& campaign_id, const QString& order_id);
    void provideOrderItemIdentifiersRequest(const QString& campaign_id, const QString& order_id);
    void putBidsForBusinessRequest(const QString& business_id);
    void putBidsForCampaignRequest(const QString& campaign_id);
    void refreshFeedRequest(const QString& campaign_id, const QString& feed_id);
    void searchModelsRequest();
    void searchRegionChildrenRequest(const QString& region_id);
    void searchRegionsByIdRequest(const QString& region_id);
    void searchRegionsByNameRequest();
    void sendFileToChatRequest(const QString& business_id);
    void sendMessageToChatRequest(const QString& business_id);
    void setFeedParamsRequest(const QString& campaign_id, const QString& feed_id);
    void setOrderBoxLayoutRequest(const QString& campaign_id, const QString& order_id);
    void setOrderDeliveryDateRequest(const QString& campaign_id, const QString& order_id);
    void setOrderDeliveryTrackCodeRequest(const QString& campaign_id, const QString& order_id);
    void setOrderShipmentBoxesRequest(const QString& campaign_id, const QString& order_id, const QString& shipment_id);
    void setReturnDecisionRequest(const QString& campaign_id, const QString& order_id, const QString& return_id);
    void skipGoodsFeedbacksReactionRequest(const QString& business_id);
    void submitReturnDecisionRequest(const QString& campaign_id, const QString& order_id, const QString& return_id);
    void updateBusinessPricesRequest(const QString& business_id);
    void updateCampaignOffersRequest(const QString& campaign_id);
    void updateGoodsFeedbackCommentRequest(const QString& business_id);
    void updateOfferContentRequest(const QString& business_id);
    void updateOfferMappingEntriesRequest(const QString& campaign_id);
    void updateOfferMappingsRequest(const QString& business_id);
    void updateOrderItemsRequest(const QString& campaign_id, const QString& order_id);
    void updateOrderStatusRequest(const QString& campaign_id, const QString& order_id);
    void updateOrderStatusesRequest(const QString& campaign_id);
    void updateOrderStorageLimitRequest(const QString& campaign_id, const QString& order_id);
    void updateOutletRequest(const QString& campaign_id, const QString& outlet_id);
    void updateOutletLicensesRequest(const QString& campaign_id);
    void updatePricesRequest(const QString& campaign_id);
    void updatePromoOffersRequest(const QString& business_id);
    void updateStocksRequest(const QString& campaign_id);
    

    void acceptOrderCancellationResponse(const OAIEmptyApiResponse& res);
    void addHiddenOffersResponse(const OAIEmptyApiResponse& res);
    void addOffersToArchiveResponse(const OAIAddOffersToArchiveResponse& res);
    void calculateTariffsResponse(const OAICalculateTariffsResponse& res);
    void confirmBusinessPricesResponse(const OAIEmptyApiResponse& res);
    void confirmCampaignPricesResponse(const OAIEmptyApiResponse& res);
    void createChatResponse(const OAICreateChatResponse& res);
    void createOutletResponse(const OAICreateOutletResponse& res);
    void deleteCampaignOffersResponse(const OAIDeleteCampaignOffersResponse& res);
    void deleteGoodsFeedbackCommentResponse(const OAIEmptyApiResponse& res);
    void deleteHiddenOffersResponse(const OAIEmptyApiResponse& res);
    void deleteOffersResponse(const OAIDeleteOffersResponse& res);
    void deleteOffersFromArchiveResponse(const OAIDeleteOffersFromArchiveResponse& res);
    void deleteOutletResponse(const OAIEmptyApiResponse& res);
    void deleteOutletLicensesResponse(const OAIEmptyApiResponse& res);
    void deletePromoOffersResponse(const OAIDeletePromoOffersResponse& res);
    void generateBoostConsolidatedReportResponse(const OAIGenerateReportResponse& res);
    void generateCompetitorsPositionReportResponse(const OAIGenerateReportResponse& res);
    void generateGoodsFeedbackReportResponse(const OAIGenerateReportResponse& res);
    void generateMassOrderLabelsReportResponse(const OAIGenerateReportResponse& res);
    void generateOrderLabelResponse(const OAIHttpFileElement& res);
    void generateOrderLabelsResponse(const OAIHttpFileElement& res);
    void generatePricesReportResponse(const OAIGenerateReportResponse& res);
    void generateShelfsStatisticsReportResponse(const OAIGenerateReportResponse& res);
    void generateShowsSalesReportResponse(const OAIGenerateReportResponse& res);
    void generateStocksOnWarehousesReportResponse(const OAIGenerateReportResponse& res);
    void generateUnitedMarketplaceServicesReportResponse(const OAIGenerateReportResponse& res);
    void generateUnitedNettingReportResponse(const OAIGenerateReportResponse& res);
    void generateUnitedOrdersReportResponse(const OAIGenerateReportResponse& res);
    void getAllOffersResponse(const OAIGetAllOffersResponse& res);
    void getBidsInfoForBusinessResponse(const OAIGetBidsInfoResponse& res);
    void getBidsRecommendationsResponse(const OAIGetBidsRecommendationsResponse& res);
    void getBusinessQuarantineOffersResponse(const OAIGetQuarantineOffersResponse& res);
    void getBusinessSettingsResponse(const OAIGetBusinessSettingsResponse& res);
    void getCampaignResponse(const OAIGetCampaignResponse& res);
    void getCampaignLoginsResponse(const OAIGetCampaignLoginsResponse& res);
    void getCampaignOffersResponse(const OAIGetCampaignOffersResponse& res);
    void getCampaignQuarantineOffersResponse(const OAIGetQuarantineOffersResponse& res);
    void getCampaignRegionResponse(const OAIGetCampaignRegionResponse& res);
    void getCampaignSettingsResponse(const OAIGetCampaignSettingsResponse& res);
    void getCampaignsResponse(const OAIGetCampaignsResponse& res);
    void getCampaignsByLoginResponse(const OAIGetCampaignsResponse& res);
    void getCategoriesMaxSaleQuantumResponse(const OAIGetCategoriesMaxSaleQuantumResponse& res);
    void getCategoriesTreeResponse(const OAIGetCategoriesResponse& res);
    void getCategoryContentParametersResponse(const OAIGetCategoryContentParametersResponse& res);
    void getChatHistoryResponse(const OAIGetChatHistoryResponse& res);
    void getChatsResponse(const OAIGetChatsResponse& res);
    void getDeliveryServicesResponse(const OAIGetDeliveryServicesResponse& res);
    void getFeedResponse(const OAIGetFeedResponse& res);
    void getFeedIndexLogsResponse(const OAIGetFeedIndexLogsResponse& res);
    void getFeedbackAndCommentUpdatesResponse(const OAIGetFeedbackListResponse& res);
    void getFeedsResponse(const OAIGetFeedsResponse& res);
    void getGoodsFeedbackCommentsResponse(const OAIGetGoodsFeedbackCommentsResponse& res);
    void getGoodsFeedbacksResponse(const OAIGetGoodsFeedbackResponse& res);
    void getGoodsStatsResponse(const OAIGetGoodsStatsResponse& res);
    void getHiddenOffersResponse(const OAIGetHiddenOffersResponse& res);
    void getModelResponse(const OAIGetModelsResponse& res);
    void getModelOffersResponse(const OAIGetModelsOffersResponse& res);
    void getModelsResponse(const OAIGetModelsResponse& res);
    void getModelsOffersResponse(const OAIGetModelsOffersResponse& res);
    void getOfferCardsContentStatusResponse(const OAIGetOfferCardsContentStatusResponse& res);
    void getOfferMappingEntriesResponse(const OAIGetOfferMappingEntriesResponse& res);
    void getOfferMappingsResponse(const OAIGetOfferMappingsResponse& res);
    void getOfferRecommendationsResponse(const OAIGetOfferRecommendationsResponse& res);
    void getOffersResponse(const OAIGetOffersResponse& res);
    void getOrderResponse(const OAIGetOrderResponse& res);
    void getOrderBusinessBuyerInfoResponse(const OAIGetBusinessBuyerInfoResponse& res);
    void getOrderBusinessDocumentsInfoResponse(const OAIGetBusinessDocumentsInfoResponse& res);
    void getOrderBuyerInfoResponse(const OAIGetOrderBuyerInfoResponse& res);
    void getOrderLabelsDataResponse(const OAIGetOrderLabelsDataResponse& res);
    void getOrdersResponse(const OAIGetOrdersResponse& res);
    void getOrdersStatsResponse(const OAIGetOrdersStatsResponse& res);
    void getOutletResponse(const OAIGetOutletResponse& res);
    void getOutletLicensesResponse(const OAIGetOutletLicensesResponse& res);
    void getOutletsResponse(const OAIGetOutletsResponse& res);
    void getPricesResponse(const OAIGetPricesResponse& res);
    void getPricesByOfferIdsResponse(const OAIGetPricesByOfferIdsResponse& res);
    void getPromoOffersResponse(const OAIGetPromoOffersResponse& res);
    void getPromosResponse(const OAIGetPromosResponse& res);
    void getQualityRatingDetailsResponse(const OAIGetQualityRatingDetailsResponse& res);
    void getQualityRatingsResponse(const OAIGetQualityRatingResponse& res);
    void getReportInfoResponse(const OAIGetReportInfoResponse& res);
    void getReturnResponse(const OAIGetReturnResponse& res);
    void getReturnApplicationResponse(const OAIHttpFileElement& res);
    void getReturnPhotoResponse(const OAIHttpFileElement& res);
    void getReturnsResponse(const OAIGetReturnsResponse& res);
    void getStocksResponse(const OAIGetWarehouseStocksResponse& res);
    void getSuggestedOfferMappingEntriesResponse(const OAIGetSuggestedOfferMappingEntriesResponse& res);
    void getSuggestedOfferMappingsResponse(const OAIGetSuggestedOfferMappingsResponse& res);
    void getSuggestedPricesResponse(const OAISuggestPricesResponse& res);
    void getWarehousesResponse(const OAIGetWarehousesResponse& res);
    void provideOrderDigitalCodesResponse(const OAIEmptyApiResponse& res);
    void provideOrderItemIdentifiersResponse(const OAIProvideOrderItemIdentifiersResponse& res);
    void putBidsForBusinessResponse(const OAIEmptyApiResponse& res);
    void putBidsForCampaignResponse(const OAIEmptyApiResponse& res);
    void refreshFeedResponse(const OAIEmptyApiResponse& res);
    void searchModelsResponse(const OAISearchModelsResponse& res);
    void searchRegionChildrenResponse(const OAIGetRegionWithChildrenResponse& res);
    void searchRegionsByIdResponse(const OAIGetRegionsResponse& res);
    void searchRegionsByNameResponse(const OAIGetRegionsResponse& res);
    void sendFileToChatResponse(const OAIEmptyApiResponse& res);
    void sendMessageToChatResponse(const OAIEmptyApiResponse& res);
    void setFeedParamsResponse(const OAIEmptyApiResponse& res);
    void setOrderBoxLayoutResponse(const OAISetOrderBoxLayoutResponse& res);
    void setOrderDeliveryDateResponse(const OAIEmptyApiResponse& res);
    void setOrderDeliveryTrackCodeResponse(const OAIEmptyApiResponse& res);
    void setOrderShipmentBoxesResponse(const OAISetOrderShipmentBoxesResponse& res);
    void setReturnDecisionResponse(const OAIEmptyApiResponse& res);
    void skipGoodsFeedbacksReactionResponse(const OAIEmptyApiResponse& res);
    void submitReturnDecisionResponse(const OAIEmptyApiResponse& res);
    void updateBusinessPricesResponse(const OAIEmptyApiResponse& res);
    void updateCampaignOffersResponse(const OAIEmptyApiResponse& res);
    void updateGoodsFeedbackCommentResponse(const OAIUpdateGoodsFeedbackCommentResponse& res);
    void updateOfferContentResponse(const OAIUpdateOfferContentResponse& res);
    void updateOfferMappingEntriesResponse(const OAIEmptyApiResponse& res);
    void updateOfferMappingsResponse(const OAIUpdateOfferMappingsResponse& res);
    void updateOrderItemsResponse();
    void updateOrderStatusResponse(const OAIUpdateOrderStatusResponse& res);
    void updateOrderStatusesResponse(const OAIUpdateOrderStatusesResponse& res);
    void updateOrderStorageLimitResponse(const OAIEmptyApiResponse& res);
    void updateOutletResponse(const OAIEmptyApiResponse& res);
    void updateOutletLicensesResponse(const OAIEmptyApiResponse& res);
    void updatePricesResponse(const OAIEmptyApiResponse& res);
    void updatePromoOffersResponse(const OAIUpdatePromoOffersResponse& res);
    void updateStocksResponse(const OAIEmptyApiResponse& res);
    

    void acceptOrderCancellationError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void addHiddenOffersError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void addOffersToArchiveError(const OAIAddOffersToArchiveResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void calculateTariffsError(const OAICalculateTariffsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void confirmBusinessPricesError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void confirmCampaignPricesError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void createChatError(const OAICreateChatResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void createOutletError(const OAICreateOutletResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void deleteCampaignOffersError(const OAIDeleteCampaignOffersResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void deleteGoodsFeedbackCommentError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void deleteHiddenOffersError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void deleteOffersError(const OAIDeleteOffersResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void deleteOffersFromArchiveError(const OAIDeleteOffersFromArchiveResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void deleteOutletError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void deleteOutletLicensesError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void deletePromoOffersError(const OAIDeletePromoOffersResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void generateBoostConsolidatedReportError(const OAIGenerateReportResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void generateCompetitorsPositionReportError(const OAIGenerateReportResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void generateGoodsFeedbackReportError(const OAIGenerateReportResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void generateMassOrderLabelsReportError(const OAIGenerateReportResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void generateOrderLabelError(const OAIHttpFileElement& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void generateOrderLabelsError(const OAIHttpFileElement& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void generatePricesReportError(const OAIGenerateReportResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void generateShelfsStatisticsReportError(const OAIGenerateReportResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void generateShowsSalesReportError(const OAIGenerateReportResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void generateStocksOnWarehousesReportError(const OAIGenerateReportResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void generateUnitedMarketplaceServicesReportError(const OAIGenerateReportResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void generateUnitedNettingReportError(const OAIGenerateReportResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void generateUnitedOrdersReportError(const OAIGenerateReportResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getAllOffersError(const OAIGetAllOffersResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getBidsInfoForBusinessError(const OAIGetBidsInfoResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getBidsRecommendationsError(const OAIGetBidsRecommendationsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getBusinessQuarantineOffersError(const OAIGetQuarantineOffersResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getBusinessSettingsError(const OAIGetBusinessSettingsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getCampaignError(const OAIGetCampaignResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getCampaignLoginsError(const OAIGetCampaignLoginsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getCampaignOffersError(const OAIGetCampaignOffersResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getCampaignQuarantineOffersError(const OAIGetQuarantineOffersResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getCampaignRegionError(const OAIGetCampaignRegionResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getCampaignSettingsError(const OAIGetCampaignSettingsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getCampaignsError(const OAIGetCampaignsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getCampaignsByLoginError(const OAIGetCampaignsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getCategoriesMaxSaleQuantumError(const OAIGetCategoriesMaxSaleQuantumResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getCategoriesTreeError(const OAIGetCategoriesResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getCategoryContentParametersError(const OAIGetCategoryContentParametersResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getChatHistoryError(const OAIGetChatHistoryResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getChatsError(const OAIGetChatsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getDeliveryServicesError(const OAIGetDeliveryServicesResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getFeedError(const OAIGetFeedResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getFeedIndexLogsError(const OAIGetFeedIndexLogsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getFeedbackAndCommentUpdatesError(const OAIGetFeedbackListResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getFeedsError(const OAIGetFeedsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getGoodsFeedbackCommentsError(const OAIGetGoodsFeedbackCommentsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getGoodsFeedbacksError(const OAIGetGoodsFeedbackResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getGoodsStatsError(const OAIGetGoodsStatsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getHiddenOffersError(const OAIGetHiddenOffersResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getModelError(const OAIGetModelsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getModelOffersError(const OAIGetModelsOffersResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getModelsError(const OAIGetModelsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getModelsOffersError(const OAIGetModelsOffersResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getOfferCardsContentStatusError(const OAIGetOfferCardsContentStatusResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getOfferMappingEntriesError(const OAIGetOfferMappingEntriesResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getOfferMappingsError(const OAIGetOfferMappingsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getOfferRecommendationsError(const OAIGetOfferRecommendationsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getOffersError(const OAIGetOffersResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getOrderError(const OAIGetOrderResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getOrderBusinessBuyerInfoError(const OAIGetBusinessBuyerInfoResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getOrderBusinessDocumentsInfoError(const OAIGetBusinessDocumentsInfoResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getOrderBuyerInfoError(const OAIGetOrderBuyerInfoResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getOrderLabelsDataError(const OAIGetOrderLabelsDataResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getOrdersError(const OAIGetOrdersResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getOrdersStatsError(const OAIGetOrdersStatsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getOutletError(const OAIGetOutletResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getOutletLicensesError(const OAIGetOutletLicensesResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getOutletsError(const OAIGetOutletsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getPricesError(const OAIGetPricesResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getPricesByOfferIdsError(const OAIGetPricesByOfferIdsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getPromoOffersError(const OAIGetPromoOffersResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getPromosError(const OAIGetPromosResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getQualityRatingDetailsError(const OAIGetQualityRatingDetailsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getQualityRatingsError(const OAIGetQualityRatingResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getReportInfoError(const OAIGetReportInfoResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getReturnError(const OAIGetReturnResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getReturnApplicationError(const OAIHttpFileElement& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getReturnPhotoError(const OAIHttpFileElement& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getReturnsError(const OAIGetReturnsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getStocksError(const OAIGetWarehouseStocksResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getSuggestedOfferMappingEntriesError(const OAIGetSuggestedOfferMappingEntriesResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getSuggestedOfferMappingsError(const OAIGetSuggestedOfferMappingsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getSuggestedPricesError(const OAISuggestPricesResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getWarehousesError(const OAIGetWarehousesResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void provideOrderDigitalCodesError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void provideOrderItemIdentifiersError(const OAIProvideOrderItemIdentifiersResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void putBidsForBusinessError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void putBidsForCampaignError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void refreshFeedError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void searchModelsError(const OAISearchModelsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void searchRegionChildrenError(const OAIGetRegionWithChildrenResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void searchRegionsByIdError(const OAIGetRegionsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void searchRegionsByNameError(const OAIGetRegionsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void sendFileToChatError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void sendMessageToChatError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void setFeedParamsError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void setOrderBoxLayoutError(const OAISetOrderBoxLayoutResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void setOrderDeliveryDateError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void setOrderDeliveryTrackCodeError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void setOrderShipmentBoxesError(const OAISetOrderShipmentBoxesResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void setReturnDecisionError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void skipGoodsFeedbacksReactionError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void submitReturnDecisionError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void updateBusinessPricesError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void updateCampaignOffersError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void updateGoodsFeedbackCommentError(const OAIUpdateGoodsFeedbackCommentResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void updateOfferContentError(const OAIUpdateOfferContentResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void updateOfferMappingEntriesError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void updateOfferMappingsError(const OAIUpdateOfferMappingsResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void updateOrderItemsError(QNetworkReply::NetworkError error_type, QString& error_str);
    void updateOrderStatusError(const OAIUpdateOrderStatusResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void updateOrderStatusesError(const OAIUpdateOrderStatusesResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void updateOrderStorageLimitError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void updateOutletError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void updateOutletLicensesError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void updatePricesError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void updatePromoOffersError(const OAIUpdatePromoOffersResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    void updateStocksError(const OAIEmptyApiResponse& res, QNetworkReply::NetworkError error_type, QString& error_str);
    

    void sendCustomResponse(QByteArray & res, QNetworkReply::NetworkError error_type);

    void sendCustomResponse(QIODevice *res, QNetworkReply::NetworkError error_type);

    QMap<QString, QString> getRequestHeaders() const;

    QHttpEngine::Socket* getRawSocket();

    void setResponseHeaders(const QMultiMap<QString,QString>& headers);

Q_SIGNALS:
    void acceptOrderCancellation(qint64 campaign_id, qint64 order_id, OAIAcceptOrderCancellationRequest oai_accept_order_cancellation_request);
    void addHiddenOffers(qint64 campaign_id, OAIAddHiddenOffersRequest oai_add_hidden_offers_request);
    void addOffersToArchive(qint64 business_id, OAIAddOffersToArchiveRequest oai_add_offers_to_archive_request);
    void calculateTariffs(OAICalculateTariffsRequest oai_calculate_tariffs_request);
    void confirmBusinessPrices(qint64 business_id, OAIConfirmPricesRequest oai_confirm_prices_request);
    void confirmCampaignPrices(qint64 campaign_id, OAIConfirmPricesRequest oai_confirm_prices_request);
    void createChat(qint64 business_id, OAICreateChatRequest oai_create_chat_request);
    void createOutlet(qint64 campaign_id, OAIChangeOutletRequest oai_change_outlet_request);
    void deleteCampaignOffers(qint64 campaign_id, OAIDeleteCampaignOffersRequest oai_delete_campaign_offers_request);
    void deleteGoodsFeedbackComment(qint64 business_id, OAIDeleteGoodsFeedbackCommentRequest oai_delete_goods_feedback_comment_request);
    void deleteHiddenOffers(qint64 campaign_id, OAIDeleteHiddenOffersRequest oai_delete_hidden_offers_request);
    void deleteOffers(qint64 business_id, OAIDeleteOffersRequest oai_delete_offers_request);
    void deleteOffersFromArchive(qint64 business_id, OAIDeleteOffersFromArchiveRequest oai_delete_offers_from_archive_request);
    void deleteOutlet(qint64 campaign_id, qint64 outlet_id);
    void deleteOutletLicenses(qint64 campaign_id, QSet<qint64> ids);
    void deletePromoOffers(qint64 business_id, OAIDeletePromoOffersRequest oai_delete_promo_offers_request);
    void generateBoostConsolidatedReport(OAIGenerateBoostConsolidatedRequest oai_generate_boost_consolidated_request, OAIReportFormatType format);
    void generateCompetitorsPositionReport(OAIGenerateCompetitorsPositionReportRequest oai_generate_competitors_position_report_request, OAIReportFormatType format);
    void generateGoodsFeedbackReport(OAIGenerateGoodsFeedbackRequest oai_generate_goods_feedback_request, OAIReportFormatType format);
    void generateMassOrderLabelsReport(OAIGenerateMassOrderLabelsRequest oai_generate_mass_order_labels_request, OAIPageFormatType format);
    void generateOrderLabel(qint64 campaign_id, qint64 order_id, qint64 shipment_id, qint64 box_id, OAIPageFormatType format);
    void generateOrderLabels(qint64 campaign_id, qint64 order_id, OAIPageFormatType format);
    void generatePricesReport(OAIGeneratePricesReportRequest oai_generate_prices_report_request, OAIReportFormatType format);
    void generateShelfsStatisticsReport(OAIGenerateShelfsStatisticsRequest oai_generate_shelfs_statistics_request, OAIReportFormatType format);
    void generateShowsSalesReport(OAIGenerateShowsSalesReportRequest oai_generate_shows_sales_report_request, OAIReportFormatType format);
    void generateStocksOnWarehousesReport(OAIGenerateStocksOnWarehousesReportRequest oai_generate_stocks_on_warehouses_report_request, OAIReportFormatType format);
    void generateUnitedMarketplaceServicesReport(OAIGenerateUnitedMarketplaceServicesReportRequest oai_generate_united_marketplace_services_report_request, OAIReportFormatType format);
    void generateUnitedNettingReport(OAIGenerateUnitedNettingReportRequest oai_generate_united_netting_report_request, OAIReportFormatType format);
    void generateUnitedOrdersReport(OAIGenerateUnitedOrdersRequest oai_generate_united_orders_request, OAIReportFormatType format);
    void getAllOffers(qint64 campaign_id, qint64 feed_id, qint32 chunk);
    void getBidsInfoForBusiness(qint64 business_id, QString page_token, qint32 limit, OAIGetBidsInfoRequest oai_get_bids_info_request);
    void getBidsRecommendations(qint64 business_id, OAIGetBidsRecommendationsRequest oai_get_bids_recommendations_request);
    void getBusinessQuarantineOffers(qint64 business_id, OAIGetQuarantineOffersRequest oai_get_quarantine_offers_request, QString page_token, qint32 limit);
    void getBusinessSettings(qint64 business_id);
    void getCampaign(qint64 campaign_id);
    void getCampaignLogins(qint64 campaign_id);
    void getCampaignOffers(qint64 campaign_id, OAIGetCampaignOffersRequest oai_get_campaign_offers_request, QString page_token, qint32 limit);
    void getCampaignQuarantineOffers(qint64 campaign_id, OAIGetQuarantineOffersRequest oai_get_quarantine_offers_request, QString page_token, qint32 limit);
    void getCampaignRegion(qint64 campaign_id);
    void getCampaignSettings(qint64 campaign_id);
    void getCampaigns(qint32 page, qint32 page_size);
    void getCampaignsByLogin(QString login, qint32 page, qint32 page_size);
    void getCategoriesMaxSaleQuantum(OAIGetCategoriesMaxSaleQuantumRequest oai_get_categories_max_sale_quantum_request);
    void getCategoriesTree(OAIGetCategoriesRequest oai_get_categories_request);
    void getCategoryContentParameters(qint64 category_id);
    void getChatHistory(qint64 business_id, qint64 chat_id, OAIGetChatHistoryRequest oai_get_chat_history_request, QString page_token, qint32 limit);
    void getChats(qint64 business_id, OAIGetChatsRequest oai_get_chats_request, QString page_token, qint32 limit);
    void getDeliveryServices();
    void getFeed(qint64 campaign_id, qint64 feed_id);
    void getFeedIndexLogs(qint64 campaign_id, qint64 feed_id, qint32 limit, QDateTime published_time_from, QDateTime published_time_to, OAIFeedIndexLogsStatusType status);
    void getFeedbackAndCommentUpdates(qint64 campaign_id, QString page_token, qint32 limit, QDate from_date);
    void getFeeds(qint64 campaign_id);
    void getGoodsFeedbackComments(qint64 business_id, OAIGetGoodsFeedbackCommentsRequest oai_get_goods_feedback_comments_request, QString page_token, qint32 limit);
    void getGoodsFeedbacks(qint64 business_id, QString page_token, qint32 limit, OAIGetGoodsFeedbackRequest oai_get_goods_feedback_request);
    void getGoodsStats(qint64 campaign_id, OAIGetGoodsStatsRequest oai_get_goods_stats_request);
    void getHiddenOffers(qint64 campaign_id, QList<QString> offer_id, QString page_token, qint32 limit, qint32 offset, qint32 page, qint32 page_size);
    void getModel(qint64 model_id, qint64 region_id, OAICurrencyType currency);
    void getModelOffers(qint64 model_id, qint64 region_id, OAICurrencyType currency, OAISortOrderType order_by_price, qint32 count, qint32 page);
    void getModels(qint64 region_id, OAIGetModelsRequest oai_get_models_request, OAICurrencyType currency);
    void getModelsOffers(qint64 region_id, OAIGetModelsRequest oai_get_models_request, OAICurrencyType currency, OAISortOrderType order_by_price);
    void getOfferCardsContentStatus(qint64 business_id, QString page_token, qint32 limit, OAIGetOfferCardsContentStatusRequest oai_get_offer_cards_content_status_request);
    void getOfferMappingEntries(qint64 campaign_id, QList<QString> offer_id, QList<QString> shop_sku, OAIOfferMappingKindType mapping_kind, QList<OAIOfferProcessingStatusType> status, QList<OAIOfferAvailabilityStatusType> availability, QList<qint32> category_id, QList<QString> vendor, QString page_token, qint32 limit);
    void getOfferMappings(qint64 business_id, QString page_token, qint32 limit, OAIGetOfferMappingsRequest oai_get_offer_mappings_request);
    void getOfferRecommendations(qint64 business_id, OAIGetOfferRecommendationsRequest oai_get_offer_recommendations_request, QString page_token, qint32 limit);
    void getOffers(qint64 campaign_id, QString query, qint64 feed_id, QString shop_category_id, OAICurrencyType currency, bool matched, qint32 page, qint32 page_size);
    void getOrder(qint64 campaign_id, qint64 order_id);
    void getOrderBusinessBuyerInfo(qint64 campaign_id, qint64 order_id);
    void getOrderBusinessDocumentsInfo(qint64 campaign_id, qint64 order_id);
    void getOrderBuyerInfo(qint64 campaign_id, qint64 order_id);
    void getOrderLabelsData(qint64 campaign_id, qint64 order_id);
    void getOrders(qint64 campaign_id, QList<qint64> order_ids, QSet<OAIOrderStatusType> status, QSet<OAIOrderSubstatusType> substatus, QDate from_date, QDate to_date, QDate supplier_shipment_date_from, QDate supplier_shipment_date_to, QDateTime updated_at_from, QDateTime updated_at_to, OAIOrderDeliveryDispatchType dispatch_type, bool fake, bool has_cis, bool only_waiting_for_cancellation_approve, bool only_estimated_delivery, OAIOrderBuyerType buyer_type, qint32 page, qint32 page_size, QString page_token, qint32 limit);
    void getOrdersStats(qint64 campaign_id, QString page_token, qint32 limit, OAIGetOrdersStatsRequest oai_get_orders_stats_request);
    void getOutlet(qint64 campaign_id, qint64 outlet_id);
    void getOutletLicenses(qint64 campaign_id, QSet<qint64> outlet_ids, QSet<qint64> ids);
    void getOutlets(qint64 campaign_id, QString page_token, qint64 region_id, QString shop_outlet_code, qint64 region_id2);
    void getPrices(qint64 campaign_id, QString page_token, qint32 limit, bool archived);
    void getPricesByOfferIds(qint64 campaign_id, QString page_token, qint32 limit, OAIGetPricesByOfferIdsRequest oai_get_prices_by_offer_ids_request);
    void getPromoOffers(qint64 business_id, OAIGetPromoOffersRequest oai_get_promo_offers_request, QString page_token, qint32 limit);
    void getPromos(qint64 business_id, OAIGetPromosRequest oai_get_promos_request);
    void getQualityRatingDetails(qint64 campaign_id);
    void getQualityRatings(qint64 business_id, OAIGetQualityRatingRequest oai_get_quality_rating_request);
    void getReportInfo(QString report_id);
    void getReturn(qint64 campaign_id, qint64 order_id, qint64 return_id);
    void getReturnApplication(qint64 campaign_id, qint64 order_id, qint64 return_id);
    void getReturnPhoto(qint64 campaign_id, qint64 order_id, qint64 return_id, qint64 item_id, QString image_hash);
    void getReturns(qint64 campaign_id, QString page_token, qint32 limit, QList<qint64> order_ids, QList<OAIRefundStatusType> statuses, OAIReturnType type, QDate from_date, QDate to_date, QDate from_date2, QDate to_date2);
    void getStocks(qint64 campaign_id, QString page_token, qint32 limit, OAIGetWarehouseStocksRequest oai_get_warehouse_stocks_request);
    void getSuggestedOfferMappingEntries(qint64 campaign_id, OAIGetSuggestedOfferMappingEntriesRequest oai_get_suggested_offer_mapping_entries_request);
    void getSuggestedOfferMappings(qint64 business_id, OAIGetSuggestedOfferMappingsRequest oai_get_suggested_offer_mappings_request);
    void getSuggestedPrices(qint64 campaign_id, OAISuggestPricesRequest oai_suggest_prices_request);
    void getWarehouses(qint64 business_id);
    void provideOrderDigitalCodes(qint64 campaign_id, qint64 order_id, OAIProvideOrderDigitalCodesRequest oai_provide_order_digital_codes_request);
    void provideOrderItemIdentifiers(qint64 campaign_id, qint64 order_id, OAIProvideOrderItemIdentifiersRequest oai_provide_order_item_identifiers_request);
    void putBidsForBusiness(qint64 business_id, OAIPutSkuBidsRequest oai_put_sku_bids_request);
    void putBidsForCampaign(qint64 campaign_id, OAIPutSkuBidsRequest oai_put_sku_bids_request);
    void refreshFeed(qint64 campaign_id, qint64 feed_id);
    void searchModels(QString query, qint64 region_id, OAICurrencyType currency, qint32 page, qint32 page_size);
    void searchRegionChildren(qint64 region_id, qint32 page, qint32 page_size);
    void searchRegionsById(qint64 region_id);
    void searchRegionsByName(QString name, QString page_token, qint32 limit);
    void sendFileToChat(qint64 business_id, qint64 chat_id, OAIHttpFileElement file);
    void sendMessageToChat(qint64 business_id, qint64 chat_id, OAISendMessageToChatRequest oai_send_message_to_chat_request);
    void setFeedParams(qint64 campaign_id, qint64 feed_id, OAISetFeedParamsRequest oai_set_feed_params_request);
    void setOrderBoxLayout(qint64 campaign_id, qint64 order_id, OAISetOrderBoxLayoutRequest oai_set_order_box_layout_request);
    void setOrderDeliveryDate(qint64 campaign_id, qint64 order_id, OAISetOrderDeliveryDateRequest oai_set_order_delivery_date_request);
    void setOrderDeliveryTrackCode(qint64 campaign_id, qint64 order_id, OAISetOrderDeliveryTrackCodeRequest oai_set_order_delivery_track_code_request);
    void setOrderShipmentBoxes(qint64 campaign_id, qint64 order_id, qint64 shipment_id, OAISetOrderShipmentBoxesRequest oai_set_order_shipment_boxes_request);
    void setReturnDecision(qint64 campaign_id, qint64 order_id, qint64 return_id, OAISetReturnDecisionRequest oai_set_return_decision_request);
    void skipGoodsFeedbacksReaction(qint64 business_id, OAISkipGoodsFeedbackReactionRequest oai_skip_goods_feedback_reaction_request);
    void submitReturnDecision(qint64 campaign_id, qint64 order_id, qint64 return_id);
    void updateBusinessPrices(qint64 business_id, OAIUpdateBusinessPricesRequest oai_update_business_prices_request);
    void updateCampaignOffers(qint64 campaign_id, OAIUpdateCampaignOffersRequest oai_update_campaign_offers_request);
    void updateGoodsFeedbackComment(qint64 business_id, OAIUpdateGoodsFeedbackCommentRequest oai_update_goods_feedback_comment_request);
    void updateOfferContent(qint64 business_id, OAIUpdateOfferContentRequest oai_update_offer_content_request);
    void updateOfferMappingEntries(qint64 campaign_id, OAIUpdateOfferMappingEntryRequest oai_update_offer_mapping_entry_request);
    void updateOfferMappings(qint64 business_id, OAIUpdateOfferMappingsRequest oai_update_offer_mappings_request);
    void updateOrderItems(qint64 campaign_id, qint64 order_id, OAIUpdateOrderItemRequest oai_update_order_item_request);
    void updateOrderStatus(qint64 campaign_id, qint64 order_id, OAIUpdateOrderStatusRequest oai_update_order_status_request);
    void updateOrderStatuses(qint64 campaign_id, OAIUpdateOrderStatusesRequest oai_update_order_statuses_request);
    void updateOrderStorageLimit(qint64 campaign_id, qint64 order_id, OAIUpdateOrderStorageLimitRequest oai_update_order_storage_limit_request);
    void updateOutlet(qint64 campaign_id, qint64 outlet_id, OAIChangeOutletRequest oai_change_outlet_request);
    void updateOutletLicenses(qint64 campaign_id, OAIUpdateOutletLicenseRequest oai_update_outlet_license_request);
    void updatePrices(qint64 campaign_id, OAIUpdatePricesRequest oai_update_prices_request);
    void updatePromoOffers(qint64 business_id, OAIUpdatePromoOffersRequest oai_update_promo_offers_request);
    void updateStocks(qint64 campaign_id, OAIUpdateStocksRequest oai_update_stocks_request);
    

private:
    QMap<QString, QString> requestHeaders;
    QMap<QString, QString> responseHeaders;
    QHttpEngine::Socket  *socket;
    QSharedPointer<OAIDbsApiHandler> handler;

    inline void setSocketResponseHeaders(){
        QHttpEngine::Socket::HeaderMap resHeaders;
        for(auto itr = responseHeaders.begin(); itr != responseHeaders.end(); ++itr) {
            resHeaders.insert(itr.key().toUtf8(), itr.value().toUtf8());
        }
        socket->setHeaders(resHeaders);
    }
};

}

#endif // OAI_OAIDbsApiRequest_H
