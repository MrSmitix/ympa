/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WarehouseDTO } from './WarehouseDTO';
import {
    WarehouseDTOFromJSON,
    WarehouseDTOFromJSONTyped,
    WarehouseDTOToJSON,
} from './WarehouseDTO';

/**
 * Информация о группе складов.
 * @export
 * @interface WarehouseGroupDTO
 */
export interface WarehouseGroupDTO {
    /**
     * Название группы складов.
     * @type {string}
     * @memberof WarehouseGroupDTO
     */
    name: string;
    /**
     * 
     * @type {WarehouseDTO}
     * @memberof WarehouseGroupDTO
     */
    mainWarehouse: WarehouseDTO;
    /**
     * Список складов, входящих в группу.
     * @type {Array<WarehouseDTO>}
     * @memberof WarehouseGroupDTO
     */
    warehouses: Array<WarehouseDTO>;
}

/**
 * Check if a given object implements the WarehouseGroupDTO interface.
 */
export function instanceOfWarehouseGroupDTO(value: object): value is WarehouseGroupDTO {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('mainWarehouse' in value) || value['mainWarehouse'] === undefined) return false;
    if (!('warehouses' in value) || value['warehouses'] === undefined) return false;
    return true;
}

export function WarehouseGroupDTOFromJSON(json: any): WarehouseGroupDTO {
    return WarehouseGroupDTOFromJSONTyped(json, false);
}

export function WarehouseGroupDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): WarehouseGroupDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'mainWarehouse': WarehouseDTOFromJSON(json['mainWarehouse']),
        'warehouses': ((json['warehouses'] as Array<any>).map(WarehouseDTOFromJSON)),
    };
}

export function WarehouseGroupDTOToJSON(value?: WarehouseGroupDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'mainWarehouse': WarehouseDTOToJSON(value['mainWarehouse']),
        'warehouses': ((value['warehouses'] as Array<any>).map(WarehouseDTOToJSON)),
    };
}

