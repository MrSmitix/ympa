/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PriceSuggestDTO } from './PriceSuggestDTO';
import {
    PriceSuggestDTOFromJSON,
    PriceSuggestDTOFromJSONTyped,
    PriceSuggestDTOToJSON,
} from './PriceSuggestDTO';

/**
 * Товар с ценами для продвижения.
 * @export
 * @interface PriceSuggestOfferDTO
 */
export interface PriceSuggestOfferDTO {
    /**
     * SKU на Маркете.
     * @type {number}
     * @memberof PriceSuggestOfferDTO
     */
    marketSku?: number;
    /**
     * Ваш SKU — идентификатор товара в вашей системе.
     * 
     * Разрешена любая последовательность длиной до 255 знаков.
     * 
     * Правила использования SKU:
     * 
     * * У каждого товара SKU должен быть свой.
     * 
     * * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.
     * 
     * * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.
     * 
     * [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
     * 
     * @type {string}
     * @memberof PriceSuggestOfferDTO
     */
    offerId?: string;
    /**
     * Цены для продвижения.
     * 
     * @type {Array<PriceSuggestDTO>}
     * @memberof PriceSuggestOfferDTO
     */
    priceSuggestion?: Array<PriceSuggestDTO> | null;
}

/**
 * Check if a given object implements the PriceSuggestOfferDTO interface.
 */
export function instanceOfPriceSuggestOfferDTO(value: object): value is PriceSuggestOfferDTO {
    return true;
}

export function PriceSuggestOfferDTOFromJSON(json: any): PriceSuggestOfferDTO {
    return PriceSuggestOfferDTOFromJSONTyped(json, false);
}

export function PriceSuggestOfferDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PriceSuggestOfferDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'marketSku': json['marketSku'] == null ? undefined : json['marketSku'],
        'offerId': json['offerId'] == null ? undefined : json['offerId'],
        'priceSuggestion': json['priceSuggestion'] == null ? undefined : ((json['priceSuggestion'] as Array<any>).map(PriceSuggestDTOFromJSON)),
    };
}

export function PriceSuggestOfferDTOToJSON(value?: PriceSuggestOfferDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'marketSku': value['marketSku'],
        'offerId': value['offerId'],
        'priceSuggestion': value['priceSuggestion'] == null ? undefined : ((value['priceSuggestion'] as Array<any>).map(PriceSuggestDTOToJSON)),
    };
}

