/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReturnRequestDecisionType } from './ReturnRequestDecisionType';
import {
    ReturnRequestDecisionTypeFromJSON,
    ReturnRequestDecisionTypeFromJSONTyped,
    ReturnRequestDecisionTypeToJSON,
} from './ReturnRequestDecisionType';

/**
 * Решения по позиции в возврате.
 * @export
 * @interface SetReturnDecisionRequest
 */
export interface SetReturnDecisionRequest {
    /**
     * Идентификатор товара в возврате.
     * @type {number}
     * @memberof SetReturnDecisionRequest
     */
    returnItemId: number;
    /**
     * 
     * @type {ReturnRequestDecisionType}
     * @memberof SetReturnDecisionRequest
     */
    decisionType: ReturnRequestDecisionType;
    /**
     * Комментарий к решению. Укажите:
     * 
     * * для `REFUND_MONEY_INCLUDING_SHIPMENT`— стоимость обратной пересылки;
     * 
     * * для `REPAIR` — когда вы устраните недостатки товара;
     * 
     * * для `DECLINE_REFUND` — причину отказа;
     * 
     * * для `OTHER_DECISION` — какое решение вы предлагаете.
     * 
     * @type {string}
     * @memberof SetReturnDecisionRequest
     */
    comment?: string;
}



/**
 * Check if a given object implements the SetReturnDecisionRequest interface.
 */
export function instanceOfSetReturnDecisionRequest(value: object): value is SetReturnDecisionRequest {
    if (!('returnItemId' in value) || value['returnItemId'] === undefined) return false;
    if (!('decisionType' in value) || value['decisionType'] === undefined) return false;
    return true;
}

export function SetReturnDecisionRequestFromJSON(json: any): SetReturnDecisionRequest {
    return SetReturnDecisionRequestFromJSONTyped(json, false);
}

export function SetReturnDecisionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetReturnDecisionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'returnItemId': json['returnItemId'],
        'decisionType': ReturnRequestDecisionTypeFromJSON(json['decisionType']),
        'comment': json['comment'] == null ? undefined : json['comment'],
    };
}

export function SetReturnDecisionRequestToJSON(value?: SetReturnDecisionRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'returnItemId': value['returnItemId'],
        'decisionType': ReturnRequestDecisionTypeToJSON(value['decisionType']),
        'comment': value['comment'],
    };
}

