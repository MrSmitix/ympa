/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ChatStatusType } from './ChatStatusType';
import {
    ChatStatusTypeFromJSON,
    ChatStatusTypeFromJSONTyped,
    ChatStatusTypeToJSON,
} from './ChatStatusType';
import type { ChatType } from './ChatType';
import {
    ChatTypeFromJSON,
    ChatTypeFromJSONTyped,
    ChatTypeToJSON,
} from './ChatType';

/**
 * Фильтры по чатам, которые нужно вернуть.
 * 
 * @export
 * @interface GetChatsRequest
 */
export interface GetChatsRequest {
    /**
     * Фильтр по идентификаторам заказов на Маркете.
     * @type {Array<number>}
     * @memberof GetChatsRequest
     */
    orderIds?: Array<number> | null;
    /**
     * Фильтр по типам чатов.
     * @type {Array<ChatType>}
     * @memberof GetChatsRequest
     */
    types?: Array<ChatType> | null;
    /**
     * Фильтр по статусам чатов.
     * @type {Array<ChatStatusType>}
     * @memberof GetChatsRequest
     */
    statuses?: Array<ChatStatusType> | null;
}

/**
 * Check if a given object implements the GetChatsRequest interface.
 */
export function instanceOfGetChatsRequest(value: object): value is GetChatsRequest {
    return true;
}

export function GetChatsRequestFromJSON(json: any): GetChatsRequest {
    return GetChatsRequestFromJSONTyped(json, false);
}

export function GetChatsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetChatsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'orderIds': json['orderIds'] == null ? undefined : json['orderIds'],
        'types': json['types'] == null ? undefined : ((json['types'] as Array<any>).map(ChatTypeFromJSON)),
        'statuses': json['statuses'] == null ? undefined : ((json['statuses'] as Array<any>).map(ChatStatusTypeFromJSON)),
    };
}

export function GetChatsRequestToJSON(value?: GetChatsRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'orderIds': value['orderIds'],
        'types': value['types'] == null ? undefined : ((value['types'] as Array<any>).map(ChatTypeToJSON)),
        'statuses': value['statuses'] == null ? undefined : ((value['statuses'] as Array<any>).map(ChatStatusTypeToJSON)),
    };
}

