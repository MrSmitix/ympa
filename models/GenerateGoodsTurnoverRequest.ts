/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Данные, необходимые для генерации отчета.
 * 
 * @export
 * @interface GenerateGoodsTurnoverRequest
 */
export interface GenerateGoodsTurnoverRequest {
    /**
     * Идентификатор кампании.
     * @type {number}
     * @memberof GenerateGoodsTurnoverRequest
     */
    campaignId: number;
    /**
     * Дата, за которую нужно рассчитать оборачиваемость. Если параметр не указан, используется текущая дата.
     * @type {Date}
     * @memberof GenerateGoodsTurnoverRequest
     */
    date?: Date;
}

/**
 * Check if a given object implements the GenerateGoodsTurnoverRequest interface.
 */
export function instanceOfGenerateGoodsTurnoverRequest(value: object): value is GenerateGoodsTurnoverRequest {
    if (!('campaignId' in value) || value['campaignId'] === undefined) return false;
    return true;
}

export function GenerateGoodsTurnoverRequestFromJSON(json: any): GenerateGoodsTurnoverRequest {
    return GenerateGoodsTurnoverRequestFromJSONTyped(json, false);
}

export function GenerateGoodsTurnoverRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenerateGoodsTurnoverRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'campaignId': json['campaignId'],
        'date': json['date'] == null ? undefined : (new Date(json['date'])),
    };
}

export function GenerateGoodsTurnoverRequestToJSON(value?: GenerateGoodsTurnoverRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'campaignId': value['campaignId'],
        'date': value['date'] == null ? undefined : ((value['date']).toISOString().substring(0,10)),
    };
}

