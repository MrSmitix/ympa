/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Удаление товаров из акции.
 * 
 * Чтобы убрать:
 * 
 * * все товары из акции и больше не участвовать в ней, передайте значение `true` в параметре `deleteAllOffers`;
 * 
 * * часть товаров, передайте их идентификаторы в параметре `offersIds`.
 * 
 * @export
 * @interface DeletePromoOffersRequest
 */
export interface DeletePromoOffersRequest {
    /**
     * Идентификатор акции.
     * @type {string}
     * @memberof DeletePromoOffersRequest
     */
    promoId: string;
    /**
     * Чтобы убрать все товары из акции и больше не участвовать в ней, передайте значение `true` и не передавайте параметр `offerIds`.
     * @type {boolean}
     * @memberof DeletePromoOffersRequest
     */
    deleteAllOffers?: boolean;
    /**
     * Товары, которые нужно убрать из акции.
     * @type {Array<string>}
     * @memberof DeletePromoOffersRequest
     */
    offerIds?: Array<string> | null;
}

/**
 * Check if a given object implements the DeletePromoOffersRequest interface.
 */
export function instanceOfDeletePromoOffersRequest(value: object): value is DeletePromoOffersRequest {
    if (!('promoId' in value) || value['promoId'] === undefined) return false;
    return true;
}

export function DeletePromoOffersRequestFromJSON(json: any): DeletePromoOffersRequest {
    return DeletePromoOffersRequestFromJSONTyped(json, false);
}

export function DeletePromoOffersRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeletePromoOffersRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'promoId': json['promoId'],
        'deleteAllOffers': json['deleteAllOffers'] == null ? undefined : json['deleteAllOffers'],
        'offerIds': json['offerIds'] == null ? undefined : json['offerIds'],
    };
}

export function DeletePromoOffersRequestToJSON(value?: DeletePromoOffersRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'promoId': value['promoId'],
        'deleteAllOffers': value['deleteAllOffers'],
        'offerIds': value['offerIds'],
    };
}

