/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DayOfWeekType } from './DayOfWeekType';
import {
    DayOfWeekTypeFromJSON,
    DayOfWeekTypeFromJSONTyped,
    DayOfWeekTypeToJSON,
} from './DayOfWeekType';

/**
 * Расписание работы точки продаж.
 * @export
 * @interface OutletWorkingScheduleItemDTO
 */
export interface OutletWorkingScheduleItemDTO {
    /**
     * 
     * @type {DayOfWeekType}
     * @memberof OutletWorkingScheduleItemDTO
     */
    startDay: DayOfWeekType;
    /**
     * 
     * @type {DayOfWeekType}
     * @memberof OutletWorkingScheduleItemDTO
     */
    endDay: DayOfWeekType;
    /**
     * Точка продаж работает c указанного часа.
     * 
     * Формат: `ЧЧ:ММ`.
     * 
     * @type {string}
     * @memberof OutletWorkingScheduleItemDTO
     */
    startTime: string;
    /**
     * Точка продаж работает до указанного часа.
     * 
     * Формат: `ЧЧ:ММ`.
     * 
     * @type {string}
     * @memberof OutletWorkingScheduleItemDTO
     */
    endTime: string;
}



/**
 * Check if a given object implements the OutletWorkingScheduleItemDTO interface.
 */
export function instanceOfOutletWorkingScheduleItemDTO(value: object): value is OutletWorkingScheduleItemDTO {
    if (!('startDay' in value) || value['startDay'] === undefined) return false;
    if (!('endDay' in value) || value['endDay'] === undefined) return false;
    if (!('startTime' in value) || value['startTime'] === undefined) return false;
    if (!('endTime' in value) || value['endTime'] === undefined) return false;
    return true;
}

export function OutletWorkingScheduleItemDTOFromJSON(json: any): OutletWorkingScheduleItemDTO {
    return OutletWorkingScheduleItemDTOFromJSONTyped(json, false);
}

export function OutletWorkingScheduleItemDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OutletWorkingScheduleItemDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'startDay': DayOfWeekTypeFromJSON(json['startDay']),
        'endDay': DayOfWeekTypeFromJSON(json['endDay']),
        'startTime': json['startTime'],
        'endTime': json['endTime'],
    };
}

export function OutletWorkingScheduleItemDTOToJSON(value?: OutletWorkingScheduleItemDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'startDay': DayOfWeekTypeToJSON(value['startDay']),
        'endDay': DayOfWeekTypeToJSON(value['endDay']),
        'startTime': value['startTime'],
        'endTime': value['endTime'],
    };
}

