/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrdersStatsPaymentOrderDTO } from './OrdersStatsPaymentOrderDTO';
import {
    OrdersStatsPaymentOrderDTOFromJSON,
    OrdersStatsPaymentOrderDTOFromJSONTyped,
    OrdersStatsPaymentOrderDTOToJSON,
} from './OrdersStatsPaymentOrderDTO';
import type { OrdersStatsPaymentSourceType } from './OrdersStatsPaymentSourceType';
import {
    OrdersStatsPaymentSourceTypeFromJSON,
    OrdersStatsPaymentSourceTypeFromJSONTyped,
    OrdersStatsPaymentSourceTypeToJSON,
} from './OrdersStatsPaymentSourceType';
import type { OrdersStatsPaymentType } from './OrdersStatsPaymentType';
import {
    OrdersStatsPaymentTypeFromJSON,
    OrdersStatsPaymentTypeFromJSONTyped,
    OrdersStatsPaymentTypeToJSON,
} from './OrdersStatsPaymentType';

/**
 * Информация о денежных переводах по заказу.
 * @export
 * @interface OrdersStatsPaymentDTO
 */
export interface OrdersStatsPaymentDTO {
    /**
     * Идентификатор денежного перевода.
     * @type {string}
     * @memberof OrdersStatsPaymentDTO
     */
    id?: string;
    /**
     * Дата денежного перевода.
     * 
     * Формат даты: `ГГГГ-ММ-ДД`.
     * 
     * @type {Date}
     * @memberof OrdersStatsPaymentDTO
     */
    date?: Date;
    /**
     * 
     * @type {OrdersStatsPaymentType}
     * @memberof OrdersStatsPaymentDTO
     */
    type?: OrdersStatsPaymentType;
    /**
     * 
     * @type {OrdersStatsPaymentSourceType}
     * @memberof OrdersStatsPaymentDTO
     */
    source?: OrdersStatsPaymentSourceType;
    /**
     * Сумма денежного перевода.
     * Значение указывается в рублях независимо от способа денежного перевода.
     * Точность — два знака после запятой.
     * 
     * @type {number}
     * @memberof OrdersStatsPaymentDTO
     */
    total?: number;
    /**
     * 
     * @type {OrdersStatsPaymentOrderDTO}
     * @memberof OrdersStatsPaymentDTO
     */
    paymentOrder?: OrdersStatsPaymentOrderDTO;
}



/**
 * Check if a given object implements the OrdersStatsPaymentDTO interface.
 */
export function instanceOfOrdersStatsPaymentDTO(value: object): value is OrdersStatsPaymentDTO {
    return true;
}

export function OrdersStatsPaymentDTOFromJSON(json: any): OrdersStatsPaymentDTO {
    return OrdersStatsPaymentDTOFromJSONTyped(json, false);
}

export function OrdersStatsPaymentDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrdersStatsPaymentDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'date': json['date'] == null ? undefined : (new Date(json['date'])),
        'type': json['type'] == null ? undefined : OrdersStatsPaymentTypeFromJSON(json['type']),
        'source': json['source'] == null ? undefined : OrdersStatsPaymentSourceTypeFromJSON(json['source']),
        'total': json['total'] == null ? undefined : json['total'],
        'paymentOrder': json['paymentOrder'] == null ? undefined : OrdersStatsPaymentOrderDTOFromJSON(json['paymentOrder']),
    };
}

export function OrdersStatsPaymentDTOToJSON(value?: OrdersStatsPaymentDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'date': value['date'] == null ? undefined : ((value['date']).toISOString().substring(0,10)),
        'type': OrdersStatsPaymentTypeToJSON(value['type']),
        'source': OrdersStatsPaymentSourceTypeToJSON(value['source']),
        'total': value['total'],
        'paymentOrder': OrdersStatsPaymentOrderDTOToJSON(value['paymentOrder']),
    };
}

