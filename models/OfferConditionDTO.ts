/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OfferConditionQualityType } from './OfferConditionQualityType';
import {
    OfferConditionQualityTypeFromJSON,
    OfferConditionQualityTypeFromJSONTyped,
    OfferConditionQualityTypeToJSON,
} from './OfferConditionQualityType';
import type { OfferConditionType } from './OfferConditionType';
import {
    OfferConditionTypeFromJSON,
    OfferConditionTypeFromJSONTyped,
    OfferConditionTypeToJSON,
} from './OfferConditionType';

/**
 * Состояние уцененного товара.
 * 
 * @export
 * @interface OfferConditionDTO
 */
export interface OfferConditionDTO {
    /**
     * 
     * @type {OfferConditionType}
     * @memberof OfferConditionDTO
     */
    type?: OfferConditionType;
    /**
     * 
     * @type {OfferConditionQualityType}
     * @memberof OfferConditionDTO
     */
    quality?: OfferConditionQualityType;
    /**
     * Описание товара. Подробно опишите дефекты, насколько они заметны и где их искать.
     * 
     * @type {string}
     * @memberof OfferConditionDTO
     */
    reason?: string;
}



/**
 * Check if a given object implements the OfferConditionDTO interface.
 */
export function instanceOfOfferConditionDTO(value: object): value is OfferConditionDTO {
    return true;
}

export function OfferConditionDTOFromJSON(json: any): OfferConditionDTO {
    return OfferConditionDTOFromJSONTyped(json, false);
}

export function OfferConditionDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OfferConditionDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : OfferConditionTypeFromJSON(json['type']),
        'quality': json['quality'] == null ? undefined : OfferConditionQualityTypeFromJSON(json['quality']),
        'reason': json['reason'] == null ? undefined : json['reason'],
    };
}

export function OfferConditionDTOToJSON(value?: OfferConditionDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': OfferConditionTypeToJSON(value['type']),
        'quality': OfferConditionQualityTypeToJSON(value['quality']),
        'reason': value['reason'],
    };
}

