/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrdersStatsPriceDTO } from './OrdersStatsPriceDTO';
import {
    OrdersStatsPriceDTOFromJSON,
    OrdersStatsPriceDTOFromJSONTyped,
    OrdersStatsPriceDTOToJSON,
} from './OrdersStatsPriceDTO';
import type { OrdersStatsDetailsDTO } from './OrdersStatsDetailsDTO';
import {
    OrdersStatsDetailsDTOFromJSON,
    OrdersStatsDetailsDTOFromJSONTyped,
    OrdersStatsDetailsDTOToJSON,
} from './OrdersStatsDetailsDTO';
import type { OrdersStatsWarehouseDTO } from './OrdersStatsWarehouseDTO';
import {
    OrdersStatsWarehouseDTOFromJSON,
    OrdersStatsWarehouseDTOFromJSONTyped,
    OrdersStatsWarehouseDTOToJSON,
} from './OrdersStatsWarehouseDTO';

/**
 * Список товаров в заказе после возможных изменений.
 * 
 * В ходе обработки заказа Маркет может удалить из него единицы товаров — при проблемах на складе или по инициативе пользователя.
 * 
 * * Если из заказа удалены все единицы товара, его не будет в списке `items` — только в списке `initialItems`.
 * 
 * * Если в заказе осталась хотя бы одна единица товара, он будет и в списке `items` (с уменьшенным количеством единиц `count`), и в списке `initialItems` (с первоначальным количеством единиц `initialCount`).
 * 
 * @export
 * @interface OrdersStatsItemDTO
 */
export interface OrdersStatsItemDTO {
    /**
     * Название товара.
     * @type {string}
     * @memberof OrdersStatsItemDTO
     */
    offerName?: string;
    /**
     * SKU на Маркете.
     * @type {number}
     * @memberof OrdersStatsItemDTO
     */
    marketSku?: number;
    /**
     * Ваш SKU — идентификатор товара в вашей системе.
     * 
     * Разрешена любая последовательность длиной до 255 знаков.
     * 
     * Правила использования SKU:
     * 
     * * У каждого товара SKU должен быть свой.
     * 
     * * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.
     * 
     * * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.
     * 
     * [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
     * 
     * @type {string}
     * @memberof OrdersStatsItemDTO
     */
    shopSku?: string;
    /**
     * Количество единиц товара с учетом удаленных единиц.
     * 
     * Если из заказа удалены все единицы товара, он попадет только в список `initialItems`.
     * 
     * @type {number}
     * @memberof OrdersStatsItemDTO
     */
    count?: number;
    /**
     * Цена или скидки на товар.
     * @type {Array<OrdersStatsPriceDTO>}
     * @memberof OrdersStatsItemDTO
     */
    prices?: Array<OrdersStatsPriceDTO> | null;
    /**
     * 
     * @type {OrdersStatsWarehouseDTO}
     * @memberof OrdersStatsItemDTO
     */
    warehouse?: OrdersStatsWarehouseDTO;
    /**
     * Информация об удалении товара из заказа.
     * @type {Array<OrdersStatsDetailsDTO>}
     * @memberof OrdersStatsItemDTO
     */
    details?: Array<OrdersStatsDetailsDTO> | null;
    /**
     * Список кодов идентификации товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).
     * @type {Array<string>}
     * @memberof OrdersStatsItemDTO
     */
    cisList?: Array<string> | null;
    /**
     * Первоначальное количество единиц товара.
     * @type {number}
     * @memberof OrdersStatsItemDTO
     */
    initialCount?: number;
    /**
     * Списанная ставка ближайшего конкурента.
     * 
     * Указывается в процентах от стоимости товара и умножается на 100. Например, ставка 5% обозначается как 500.
     * 
     * @type {number}
     * @memberof OrdersStatsItemDTO
     */
    bidFee?: number;
    /**
     * Порог для скидок с Маркетом на момент оформления заказа. [Что это такое?](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)
     * 
     * Указан в рублях. Точность — два знака после запятой.
     * 
     * @type {number}
     * @memberof OrdersStatsItemDTO
     */
    cofinanceThreshold?: number;
    /**
     * Скидка с Маркетом. [Что это такое?](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)
     * 
     * Указана в рублях. Точность — два знака после запятой.
     * 
     * @type {number}
     * @memberof OrdersStatsItemDTO
     */
    cofinanceValue?: number;
}

/**
 * Check if a given object implements the OrdersStatsItemDTO interface.
 */
export function instanceOfOrdersStatsItemDTO(value: object): value is OrdersStatsItemDTO {
    return true;
}

export function OrdersStatsItemDTOFromJSON(json: any): OrdersStatsItemDTO {
    return OrdersStatsItemDTOFromJSONTyped(json, false);
}

export function OrdersStatsItemDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrdersStatsItemDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'offerName': json['offerName'] == null ? undefined : json['offerName'],
        'marketSku': json['marketSku'] == null ? undefined : json['marketSku'],
        'shopSku': json['shopSku'] == null ? undefined : json['shopSku'],
        'count': json['count'] == null ? undefined : json['count'],
        'prices': json['prices'] == null ? undefined : ((json['prices'] as Array<any>).map(OrdersStatsPriceDTOFromJSON)),
        'warehouse': json['warehouse'] == null ? undefined : OrdersStatsWarehouseDTOFromJSON(json['warehouse']),
        'details': json['details'] == null ? undefined : ((json['details'] as Array<any>).map(OrdersStatsDetailsDTOFromJSON)),
        'cisList': json['cisList'] == null ? undefined : json['cisList'],
        'initialCount': json['initialCount'] == null ? undefined : json['initialCount'],
        'bidFee': json['bidFee'] == null ? undefined : json['bidFee'],
        'cofinanceThreshold': json['cofinanceThreshold'] == null ? undefined : json['cofinanceThreshold'],
        'cofinanceValue': json['cofinanceValue'] == null ? undefined : json['cofinanceValue'],
    };
}

export function OrdersStatsItemDTOToJSON(value?: OrdersStatsItemDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'offerName': value['offerName'],
        'marketSku': value['marketSku'],
        'shopSku': value['shopSku'],
        'count': value['count'],
        'prices': value['prices'] == null ? undefined : ((value['prices'] as Array<any>).map(OrdersStatsPriceDTOToJSON)),
        'warehouse': OrdersStatsWarehouseDTOToJSON(value['warehouse']),
        'details': value['details'] == null ? undefined : ((value['details'] as Array<any>).map(OrdersStatsDetailsDTOToJSON)),
        'cisList': value['cisList'],
        'initialCount': value['initialCount'],
        'bidFee': value['bidFee'],
        'cofinanceThreshold': value['cofinanceThreshold'],
        'cofinanceValue': value['cofinanceValue'],
    };
}

