/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Данные о складе отправления.
 * @export
 * @interface PartnerShipmentWarehouseDTO
 */
export interface PartnerShipmentWarehouseDTO {
    /**
     * Идентификатор склада отправления.
     * @type {number}
     * @memberof PartnerShipmentWarehouseDTO
     */
    id?: number;
    /**
     * Наименование склада отправления.
     * @type {string}
     * @memberof PartnerShipmentWarehouseDTO
     */
    name?: string;
    /**
     * Адрес склада отправления.
     * @type {string}
     * @memberof PartnerShipmentWarehouseDTO
     */
    address?: string;
}

/**
 * Check if a given object implements the PartnerShipmentWarehouseDTO interface.
 */
export function instanceOfPartnerShipmentWarehouseDTO(value: object): value is PartnerShipmentWarehouseDTO {
    return true;
}

export function PartnerShipmentWarehouseDTOFromJSON(json: any): PartnerShipmentWarehouseDTO {
    return PartnerShipmentWarehouseDTOFromJSONTyped(json, false);
}

export function PartnerShipmentWarehouseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PartnerShipmentWarehouseDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'address': json['address'] == null ? undefined : json['address'],
    };
}

export function PartnerShipmentWarehouseDTOToJSON(value?: PartnerShipmentWarehouseDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'address': value['address'],
    };
}

