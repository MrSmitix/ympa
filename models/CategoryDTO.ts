/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Информация о категории.
 * 
 * Категория считается листовой, если у нее нет дочерних категорий.
 * 
 * @export
 * @interface CategoryDTO
 */
export interface CategoryDTO {
    /**
     * Идентификатор категории.
     * @type {number}
     * @memberof CategoryDTO
     */
    id: number;
    /**
     * Название категории.
     * @type {string}
     * @memberof CategoryDTO
     */
    name: string;
    /**
     * Дочерние категории.
     * @type {Array<CategoryDTO>}
     * @memberof CategoryDTO
     */
    children?: Array<CategoryDTO> | null;
}

/**
 * Check if a given object implements the CategoryDTO interface.
 */
export function instanceOfCategoryDTO(value: object): value is CategoryDTO {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function CategoryDTOFromJSON(json: any): CategoryDTO {
    return CategoryDTOFromJSONTyped(json, false);
}

export function CategoryDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategoryDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'children': json['children'] == null ? undefined : ((json['children'] as Array<any>).map(CategoryDTOFromJSON)),
    };
}

export function CategoryDTOToJSON(value?: CategoryDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'children': value['children'] == null ? undefined : ((value['children'] as Array<any>).map(CategoryDTOToJSON)),
    };
}

