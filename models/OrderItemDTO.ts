/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrderItemInstanceDTO } from './OrderItemInstanceDTO';
import {
    OrderItemInstanceDTOFromJSON,
    OrderItemInstanceDTOFromJSONTyped,
    OrderItemInstanceDTOToJSON,
} from './OrderItemInstanceDTO';
import type { OrderItemSubsidyDTO } from './OrderItemSubsidyDTO';
import {
    OrderItemSubsidyDTOFromJSON,
    OrderItemSubsidyDTOFromJSONTyped,
    OrderItemSubsidyDTOToJSON,
} from './OrderItemSubsidyDTO';
import type { OrderItemDetailDTO } from './OrderItemDetailDTO';
import {
    OrderItemDetailDTOFromJSON,
    OrderItemDetailDTOFromJSONTyped,
    OrderItemDetailDTOToJSON,
} from './OrderItemDetailDTO';
import type { OrderItemPromoDTO } from './OrderItemPromoDTO';
import {
    OrderItemPromoDTOFromJSON,
    OrderItemPromoDTOFromJSONTyped,
    OrderItemPromoDTOToJSON,
} from './OrderItemPromoDTO';
import type { OrderItemInstanceType } from './OrderItemInstanceType';
import {
    OrderItemInstanceTypeFromJSON,
    OrderItemInstanceTypeFromJSONTyped,
    OrderItemInstanceTypeToJSON,
} from './OrderItemInstanceType';
import type { OrderVatType } from './OrderVatType';
import {
    OrderVatTypeFromJSON,
    OrderVatTypeFromJSONTyped,
    OrderVatTypeToJSON,
} from './OrderVatType';

/**
 * Список товаров в заказе.
 * @export
 * @interface OrderItemDTO
 */
export interface OrderItemDTO {
    /**
     * Идентификатор товара в заказе.
     * 
     * Позволяет идентифицировать товар в рамках данного заказа.
     * 
     * @type {number}
     * @memberof OrderItemDTO
     */
    id?: number;
    /**
     * Ваш SKU — идентификатор товара в вашей системе.
     * 
     * Разрешена любая последовательность длиной до 255 знаков.
     * 
     * Правила использования SKU:
     * 
     * * У каждого товара SKU должен быть свой.
     * 
     * * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.
     * 
     * * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.
     * 
     * [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
     * 
     * @type {string}
     * @memberof OrderItemDTO
     */
    offerId?: string;
    /**
     * Название товара.
     * @type {string}
     * @memberof OrderItemDTO
     */
    offerName?: string;
    /**
     * Цена на товар в валюте заказа без учета вознаграждения партнеру за скидки по промокодам, купонам и акциям (параметр `subsidies`).
     * 
     * @type {number}
     * @memberof OrderItemDTO
     */
    price?: number;
    /**
     * Цена на товар в валюте покупателя. В цене уже учтены скидки по:
     * 
     * * акциям;
     * * купонам;
     * * промокодам.
     * 
     * @type {number}
     * @memberof OrderItemDTO
     */
    buyerPrice?: number;
    /**
     * Стоимость товара в валюте покупателя до применения скидок по:
     * 
     * * акциям;
     * * купонам;
     * * промокодам.
     * 
     * @type {number}
     * @memberof OrderItemDTO
     */
    buyerPriceBeforeDiscount?: number;
    /**
     * {% note warning "" %}
     * 
     * Этот параметр устарел.
     * 
     * {% endnote %}
     * 
     * Стоимость товара в валюте магазина до применения скидок.
     * 
     * @type {number}
     * @memberof OrderItemDTO
     * @deprecated
     */
    priceBeforeDiscount?: number;
    /**
     * Количество единиц товара.
     * @type {number}
     * @memberof OrderItemDTO
     */
    count?: number;
    /**
     * 
     * @type {OrderVatType}
     * @memberof OrderItemDTO
     */
    vat?: OrderVatType;
    /**
     * Ваш SKU — идентификатор товара в вашей системе.
     * 
     * Разрешена любая последовательность длиной до 255 знаков.
     * 
     * Правила использования SKU:
     * 
     * * У каждого товара SKU должен быть свой.
     * 
     * * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.
     * 
     * * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.
     * 
     * [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
     * 
     * @type {string}
     * @memberof OrderItemDTO
     */
    shopSku?: string;
    /**
     * {% note warning "" %}
     * 
     * Этот параметр устарел. Вместо него используйте `subsidies`.
     * 
     * {% endnote %}
     * 
     * Общее вознаграждение партнеру за DBS-доставку и все скидки на товар:
     * 
     * * по промокодам;
     * * по купонам;
     * * по баллам Плюса;
     * * по акциям.
     * 
     * Передается в валюте заказа.
     * 
     * @type {number}
     * @memberof OrderItemDTO
     * @deprecated
     */
    subsidy?: number;
    /**
     * {% note warning "" %}
     * 
     * Этот параметр устарел. Не используйте его.
     * 
     * {% endnote %}
     * 
     * Идентификатор склада в системе партнера, на который сформирован заказ.
     * 
     * @type {string}
     * @memberof OrderItemDTO
     * @deprecated
     */
    partnerWarehouseId?: string;
    /**
     * Информация о вознаграждениях партнеру за скидки на товар по промокодам, купонам и акциям.
     * @type {Array<OrderItemPromoDTO>}
     * @memberof OrderItemDTO
     */
    promos?: Array<OrderItemPromoDTO> | null;
    /**
     * Информация о маркировке единиц товара.
     * 
     * Возвращаются данные для маркировки, переданные в запросе [PUT campaigns/{campaignId}/orders/{orderId}/cis](../../reference/orders/provideOrderItemCis.md).
     * 
     * Если магазин еще не передавал коды для этого заказа, `instances` отсутствует.
     * 
     * @type {Array<OrderItemInstanceDTO>}
     * @memberof OrderItemDTO
     */
    instances?: Array<OrderItemInstanceDTO> | null;
    /**
     * Информация об удалении товара из заказа.
     * 
     * @type {Array<OrderItemDetailDTO>}
     * @memberof OrderItemDTO
     */
    details?: Array<OrderItemDetailDTO> | null;
    /**
     * Список субсидий по типам.
     * @type {Array<OrderItemSubsidyDTO>}
     * @memberof OrderItemDTO
     */
    subsidies?: Array<OrderItemSubsidyDTO> | null;
    /**
     * Список необходимых маркировок товара.
     * @type {Array<OrderItemInstanceType>}
     * @memberof OrderItemDTO
     */
    requiredInstanceTypes?: Array<OrderItemInstanceType> | null;
}



/**
 * Check if a given object implements the OrderItemDTO interface.
 */
export function instanceOfOrderItemDTO(value: object): value is OrderItemDTO {
    return true;
}

export function OrderItemDTOFromJSON(json: any): OrderItemDTO {
    return OrderItemDTOFromJSONTyped(json, false);
}

export function OrderItemDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderItemDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'offerId': json['offerId'] == null ? undefined : json['offerId'],
        'offerName': json['offerName'] == null ? undefined : json['offerName'],
        'price': json['price'] == null ? undefined : json['price'],
        'buyerPrice': json['buyerPrice'] == null ? undefined : json['buyerPrice'],
        'buyerPriceBeforeDiscount': json['buyerPriceBeforeDiscount'] == null ? undefined : json['buyerPriceBeforeDiscount'],
        'priceBeforeDiscount': json['priceBeforeDiscount'] == null ? undefined : json['priceBeforeDiscount'],
        'count': json['count'] == null ? undefined : json['count'],
        'vat': json['vat'] == null ? undefined : OrderVatTypeFromJSON(json['vat']),
        'shopSku': json['shopSku'] == null ? undefined : json['shopSku'],
        'subsidy': json['subsidy'] == null ? undefined : json['subsidy'],
        'partnerWarehouseId': json['partnerWarehouseId'] == null ? undefined : json['partnerWarehouseId'],
        'promos': json['promos'] == null ? undefined : ((json['promos'] as Array<any>).map(OrderItemPromoDTOFromJSON)),
        'instances': json['instances'] == null ? undefined : ((json['instances'] as Array<any>).map(OrderItemInstanceDTOFromJSON)),
        'details': json['details'] == null ? undefined : ((json['details'] as Array<any>).map(OrderItemDetailDTOFromJSON)),
        'subsidies': json['subsidies'] == null ? undefined : ((json['subsidies'] as Array<any>).map(OrderItemSubsidyDTOFromJSON)),
        'requiredInstanceTypes': json['requiredInstanceTypes'] == null ? undefined : ((json['requiredInstanceTypes'] as Array<any>).map(OrderItemInstanceTypeFromJSON)),
    };
}

export function OrderItemDTOToJSON(value?: OrderItemDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'offerId': value['offerId'],
        'offerName': value['offerName'],
        'price': value['price'],
        'buyerPrice': value['buyerPrice'],
        'buyerPriceBeforeDiscount': value['buyerPriceBeforeDiscount'],
        'priceBeforeDiscount': value['priceBeforeDiscount'],
        'count': value['count'],
        'vat': OrderVatTypeToJSON(value['vat']),
        'shopSku': value['shopSku'],
        'subsidy': value['subsidy'],
        'partnerWarehouseId': value['partnerWarehouseId'],
        'promos': value['promos'] == null ? undefined : ((value['promos'] as Array<any>).map(OrderItemPromoDTOToJSON)),
        'instances': value['instances'] == null ? undefined : ((value['instances'] as Array<any>).map(OrderItemInstanceDTOToJSON)),
        'details': value['details'] == null ? undefined : ((value['details'] as Array<any>).map(OrderItemDetailDTOToJSON)),
        'subsidies': value['subsidies'] == null ? undefined : ((value['subsidies'] as Array<any>).map(OrderItemSubsidyDTOToJSON)),
        'requiredInstanceTypes': value['requiredInstanceTypes'] == null ? undefined : ((value['requiredInstanceTypes'] as Array<any>).map(OrderItemInstanceTypeToJSON)),
    };
}

