/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrderSubstatusType } from './OrderSubstatusType';
import {
    OrderSubstatusTypeFromJSON,
    OrderSubstatusTypeFromJSONTyped,
    OrderSubstatusTypeToJSON,
} from './OrderSubstatusType';
import type { OrderStatusType } from './OrderStatusType';
import {
    OrderStatusTypeFromJSON,
    OrderStatusTypeFromJSONTyped,
    OrderStatusTypeToJSON,
} from './OrderStatusType';

/**
 * Информация по заказу.
 * @export
 * @interface OrderStateDTO
 */
export interface OrderStateDTO {
    /**
     * Идентификатор заказа.
     * @type {number}
     * @memberof OrderStateDTO
     */
    id: number;
    /**
     * 
     * @type {OrderStatusType}
     * @memberof OrderStateDTO
     */
    status: OrderStatusType;
    /**
     * 
     * @type {OrderSubstatusType}
     * @memberof OrderStateDTO
     */
    substatus?: OrderSubstatusType;
}



/**
 * Check if a given object implements the OrderStateDTO interface.
 */
export function instanceOfOrderStateDTO(value: object): value is OrderStateDTO {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function OrderStateDTOFromJSON(json: any): OrderStateDTO {
    return OrderStateDTOFromJSONTyped(json, false);
}

export function OrderStateDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderStateDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'status': OrderStatusTypeFromJSON(json['status']),
        'substatus': json['substatus'] == null ? undefined : OrderSubstatusTypeFromJSON(json['substatus']),
    };
}

export function OrderStateDTOToJSON(value?: OrderStateDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'status': OrderStatusTypeToJSON(value['status']),
        'substatus': OrderSubstatusTypeToJSON(value['substatus']),
    };
}

