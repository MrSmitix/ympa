/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrderTrackDTO } from './OrderTrackDTO';
import {
    OrderTrackDTOFromJSON,
    OrderTrackDTOFromJSONTyped,
    OrderTrackDTOToJSON,
} from './OrderTrackDTO';
import type { OrderParcelBoxDTO } from './OrderParcelBoxDTO';
import {
    OrderParcelBoxDTOFromJSON,
    OrderParcelBoxDTOFromJSONTyped,
    OrderParcelBoxDTOToJSON,
} from './OrderParcelBoxDTO';

/**
 * Список посылок.
 * 
 * В параметре может указываться несколько посылок.
 * 
 * @export
 * @interface OrderShipmentDTO
 */
export interface OrderShipmentDTO {
    /**
     * Идентификатор посылки, присвоенный Маркетом.
     * @type {number}
     * @memberof OrderShipmentDTO
     */
    id?: number;
    /**
     * Формат даты: `ДД-ММ-ГГГГ`.
     * 
     * @type {string}
     * @memberof OrderShipmentDTO
     */
    shipmentDate?: string;
    /**
     * **Только для модели Экспресс**
     * 
     * Время, к которому магазин должен упаковать заказ и перевести его в статус `READY_TO_SHIP`. После смены статуса за заказом приедет курьер.
     * 
     * Поле может появиться не сразу. Запрашивайте информацию о заказе в течении 5–10 минут, пока оно не вернется.
     * 
     * Формат времени: 24-часовой, `ЧЧ:ММ`.
     * 
     * Если заказ сделан организацией, параметр не возвращается до согласования даты доставки.
     * 
     * @type {string}
     * @memberof OrderShipmentDTO
     */
    shipmentTime?: string;
    /**
     * **Только для модели DBS**
     * 
     * Информация для отслеживания перемещений посылки.
     * 
     * @type {Array<OrderTrackDTO>}
     * @memberof OrderShipmentDTO
     */
    tracks?: Array<OrderTrackDTO> | null;
    /**
     * Список грузовых мест.
     * @type {Array<OrderParcelBoxDTO>}
     * @memberof OrderShipmentDTO
     */
    boxes?: Array<OrderParcelBoxDTO> | null;
}

/**
 * Check if a given object implements the OrderShipmentDTO interface.
 */
export function instanceOfOrderShipmentDTO(value: object): value is OrderShipmentDTO {
    return true;
}

export function OrderShipmentDTOFromJSON(json: any): OrderShipmentDTO {
    return OrderShipmentDTOFromJSONTyped(json, false);
}

export function OrderShipmentDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderShipmentDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'shipmentDate': json['shipmentDate'] == null ? undefined : json['shipmentDate'],
        'shipmentTime': json['shipmentTime'] == null ? undefined : json['shipmentTime'],
        'tracks': json['tracks'] == null ? undefined : ((json['tracks'] as Array<any>).map(OrderTrackDTOFromJSON)),
        'boxes': json['boxes'] == null ? undefined : ((json['boxes'] as Array<any>).map(OrderParcelBoxDTOFromJSON)),
    };
}

export function OrderShipmentDTOToJSON(value?: OrderShipmentDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'shipmentDate': value['shipmentDate'],
        'shipmentTime': value['shipmentTime'],
        'tracks': value['tracks'] == null ? undefined : ((value['tracks'] as Array<any>).map(OrderTrackDTOToJSON)),
        'boxes': value['boxes'] == null ? undefined : ((value['boxes'] as Array<any>).map(OrderParcelBoxDTOToJSON)),
    };
}

