/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UpdatePromoOfferDTO } from './UpdatePromoOfferDTO';
import {
    UpdatePromoOfferDTOFromJSON,
    UpdatePromoOfferDTOFromJSONTyped,
    UpdatePromoOfferDTOToJSON,
} from './UpdatePromoOfferDTO';

/**
 * Добавление товаров в акцию или обновление их параметров.
 * 
 * Чтобы добавить товары в акцию или обновить параметры каких-то товаров, передайте их в параметре `offers`.
 * 
 * @export
 * @interface UpdatePromoOffersRequest
 */
export interface UpdatePromoOffersRequest {
    /**
     * Идентификатор акции.
     * @type {string}
     * @memberof UpdatePromoOffersRequest
     */
    promoId: string;
    /**
     * Товары, которые необходимо добавить в акцию или цены которых нужно изменить.
     * @type {Array<UpdatePromoOfferDTO>}
     * @memberof UpdatePromoOffersRequest
     */
    offers: Array<UpdatePromoOfferDTO>;
}

/**
 * Check if a given object implements the UpdatePromoOffersRequest interface.
 */
export function instanceOfUpdatePromoOffersRequest(value: object): value is UpdatePromoOffersRequest {
    if (!('promoId' in value) || value['promoId'] === undefined) return false;
    if (!('offers' in value) || value['offers'] === undefined) return false;
    return true;
}

export function UpdatePromoOffersRequestFromJSON(json: any): UpdatePromoOffersRequest {
    return UpdatePromoOffersRequestFromJSONTyped(json, false);
}

export function UpdatePromoOffersRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatePromoOffersRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'promoId': json['promoId'],
        'offers': ((json['offers'] as Array<any>).map(UpdatePromoOfferDTOFromJSON)),
    };
}

export function UpdatePromoOffersRequestToJSON(value?: UpdatePromoOffersRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'promoId': value['promoId'],
        'offers': ((value['offers'] as Array<any>).map(UpdatePromoOfferDTOToJSON)),
    };
}

