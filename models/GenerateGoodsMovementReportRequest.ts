/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Данные, необходимые для генерации отчета.
 * @export
 * @interface GenerateGoodsMovementReportRequest
 */
export interface GenerateGoodsMovementReportRequest {
    /**
     * Идентификатор кампании.
     * @type {number}
     * @memberof GenerateGoodsMovementReportRequest
     */
    campaignId: number;
    /**
     * Начало периода, включительно.
     * @type {Date}
     * @memberof GenerateGoodsMovementReportRequest
     */
    dateFrom: Date;
    /**
     * Конец периода, включительно.
     * @type {Date}
     * @memberof GenerateGoodsMovementReportRequest
     */
    dateTo: Date;
    /**
     * Ваш SKU — идентификатор товара в вашей системе.
     * 
     * Разрешена любая последовательность длиной до 255 знаков.
     * 
     * Правила использования SKU:
     * 
     * * У каждого товара SKU должен быть свой.
     * 
     * * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.
     * 
     * * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.
     * 
     * [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
     * 
     * @type {string}
     * @memberof GenerateGoodsMovementReportRequest
     */
    shopSku?: string;
}

/**
 * Check if a given object implements the GenerateGoodsMovementReportRequest interface.
 */
export function instanceOfGenerateGoodsMovementReportRequest(value: object): value is GenerateGoodsMovementReportRequest {
    if (!('campaignId' in value) || value['campaignId'] === undefined) return false;
    if (!('dateFrom' in value) || value['dateFrom'] === undefined) return false;
    if (!('dateTo' in value) || value['dateTo'] === undefined) return false;
    return true;
}

export function GenerateGoodsMovementReportRequestFromJSON(json: any): GenerateGoodsMovementReportRequest {
    return GenerateGoodsMovementReportRequestFromJSONTyped(json, false);
}

export function GenerateGoodsMovementReportRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenerateGoodsMovementReportRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'campaignId': json['campaignId'],
        'dateFrom': (new Date(json['dateFrom'])),
        'dateTo': (new Date(json['dateTo'])),
        'shopSku': json['shopSku'] == null ? undefined : json['shopSku'],
    };
}

export function GenerateGoodsMovementReportRequestToJSON(value?: GenerateGoodsMovementReportRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'campaignId': value['campaignId'],
        'dateFrom': ((value['dateFrom']).toISOString().substring(0,10)),
        'dateTo': ((value['dateTo']).toISOString().substring(0,10)),
        'shopSku': value['shopSku'],
    };
}

