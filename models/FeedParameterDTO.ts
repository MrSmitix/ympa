/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Параметр прайс-листа.
 * @export
 * @interface FeedParameterDTO
 */
export interface FeedParameterDTO {
    /**
     * Удалить ли значение параметра.
     * 
     * Возможное значение:
     * * `true` — удалить значение параметра.
     * 
     * Используется вместе с параметром `name`.
     * 
     * @type {boolean}
     * @memberof FeedParameterDTO
     */
    deleted?: boolean;
    /**
     * Название параметра.
     * 
     * Возможное значение:
     * - `reparseIntervalMinutes` — период скачивания прайс-листа.
     * Маркет будет скачивать прайс-лист через количество минут, указанное в параметре `value`. Например, при `value=1440`, Маркет будет скачивать прайс-лист один раз в сутки.
     * 
     * {% note alert %}
     * 
     * Несмотря на установленное значение, Маркет скачает прайс-лист один раз в сутки.
     * 
     * {% endnote %}
     * 
     * Обязательный параметр.
     * 
     * @type {string}
     * @memberof FeedParameterDTO
     */
    name: string;
    /**
     * Значения параметра.
     * 
     * Используется вместе с параметром `name`.
     * 
     * @type {Array<number>}
     * @memberof FeedParameterDTO
     */
    values?: Array<number> | null;
}

/**
 * Check if a given object implements the FeedParameterDTO interface.
 */
export function instanceOfFeedParameterDTO(value: object): value is FeedParameterDTO {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function FeedParameterDTOFromJSON(json: any): FeedParameterDTO {
    return FeedParameterDTOFromJSONTyped(json, false);
}

export function FeedParameterDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeedParameterDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'deleted': json['deleted'] == null ? undefined : json['deleted'],
        'name': json['name'],
        'values': json['values'] == null ? undefined : json['values'],
    };
}

export function FeedParameterDTOToJSON(value?: FeedParameterDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'deleted': value['deleted'],
        'name': value['name'],
        'values': value['values'],
    };
}

