/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlacementType } from './PlacementType';
import {
    PlacementTypeFromJSON,
    PlacementTypeFromJSONTyped,
    PlacementTypeToJSON,
} from './PlacementType';
import type { BusinessDTO } from './BusinessDTO';
import {
    BusinessDTOFromJSON,
    BusinessDTOFromJSONTyped,
    BusinessDTOToJSON,
} from './BusinessDTO';

/**
 * Информация о магазине.
 * @export
 * @interface CampaignDTO
 */
export interface CampaignDTO {
    /**
     * URL магазина.
     * @type {string}
     * @memberof CampaignDTO
     */
    domain?: string;
    /**
     * Идентификатор кампании.
     * @type {number}
     * @memberof CampaignDTO
     */
    id?: number;
    /**
     * Идентификатор плательщика в Яндекс Балансе.
     * @type {number}
     * @memberof CampaignDTO
     */
    clientId?: number;
    /**
     * 
     * @type {BusinessDTO}
     * @memberof CampaignDTO
     */
    business?: BusinessDTO;
    /**
     * 
     * @type {PlacementType}
     * @memberof CampaignDTO
     */
    placementType?: PlacementType;
}



/**
 * Check if a given object implements the CampaignDTO interface.
 */
export function instanceOfCampaignDTO(value: object): value is CampaignDTO {
    return true;
}

export function CampaignDTOFromJSON(json: any): CampaignDTO {
    return CampaignDTOFromJSONTyped(json, false);
}

export function CampaignDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CampaignDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'domain': json['domain'] == null ? undefined : json['domain'],
        'id': json['id'] == null ? undefined : json['id'],
        'clientId': json['clientId'] == null ? undefined : json['clientId'],
        'business': json['business'] == null ? undefined : BusinessDTOFromJSON(json['business']),
        'placementType': json['placementType'] == null ? undefined : PlacementTypeFromJSON(json['placementType']),
    };
}

export function CampaignDTOToJSON(value?: CampaignDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'domain': value['domain'],
        'id': value['id'],
        'clientId': value['clientId'],
        'business': BusinessDTOToJSON(value['business']),
        'placementType': PlacementTypeToJSON(value['placementType']),
    };
}

