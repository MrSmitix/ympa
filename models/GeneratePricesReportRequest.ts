/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Данные, необходимые для генерации отчета.
 * @export
 * @interface GeneratePricesReportRequest
 */
export interface GeneratePricesReportRequest {
    /**
     * Идентификатор бизнеса.
     * 
     * В большинстве случаев обязателен. Не указывается, если задан `campaignId`.
     * 
     * @type {number}
     * @memberof GeneratePricesReportRequest
     */
    businessId?: number;
    /**
     * Идентификатор кампании.
     * 
     * Как правило, не используется. Передавайте только если в кабинете есть магазины с уникальными ценами и вы хотите получить отчет для них. В этом случае передавать `businessId` не нужно.
     * 
     * @type {number}
     * @memberof GeneratePricesReportRequest
     */
    campaignId?: number;
    /**
     * Фильтр по категориям на Маркете.
     * @type {Array<number>}
     * @memberof GeneratePricesReportRequest
     */
    categoryIds?: Array<number> | null;
    /**
     * Фильтр по времени появления предложения — начало периода.
     * 
     * Формат даты: `ДД-ММ-ГГГГ`.
     * 
     * @type {Date}
     * @memberof GeneratePricesReportRequest
     */
    creationDateFrom?: Date;
    /**
     * Фильтр по времени появления предложения — окончание периода.
     * 
     * Формат даты: `ДД-ММ-ГГГГ`.
     * 
     * @type {Date}
     * @memberof GeneratePricesReportRequest
     */
    creationDateTo?: Date;
}

/**
 * Check if a given object implements the GeneratePricesReportRequest interface.
 */
export function instanceOfGeneratePricesReportRequest(value: object): value is GeneratePricesReportRequest {
    return true;
}

export function GeneratePricesReportRequestFromJSON(json: any): GeneratePricesReportRequest {
    return GeneratePricesReportRequestFromJSONTyped(json, false);
}

export function GeneratePricesReportRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeneratePricesReportRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'businessId': json['businessId'] == null ? undefined : json['businessId'],
        'campaignId': json['campaignId'] == null ? undefined : json['campaignId'],
        'categoryIds': json['categoryIds'] == null ? undefined : json['categoryIds'],
        'creationDateFrom': json['creationDateFrom'] == null ? undefined : (new Date(json['creationDateFrom'])),
        'creationDateTo': json['creationDateTo'] == null ? undefined : (new Date(json['creationDateTo'])),
    };
}

export function GeneratePricesReportRequestToJSON(value?: GeneratePricesReportRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'businessId': value['businessId'],
        'campaignId': value['campaignId'],
        'categoryIds': value['categoryIds'],
        'creationDateFrom': value['creationDateFrom'] == null ? undefined : ((value['creationDateFrom']).toISOString().substring(0,10)),
        'creationDateTo': value['creationDateTo'] == null ? undefined : ((value['creationDateTo']).toISOString().substring(0,10)),
    };
}

