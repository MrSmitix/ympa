/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UnitDTO } from './UnitDTO';
import {
    UnitDTOFromJSON,
    UnitDTOFromJSONTyped,
    UnitDTOToJSON,
} from './UnitDTO';

/**
 * Единицы измерения характеристики товара.
 * @export
 * @interface CategoryParameterUnitDTO
 */
export interface CategoryParameterUnitDTO {
    /**
     * Единица измерения по умолчанию.
     * @type {number}
     * @memberof CategoryParameterUnitDTO
     */
    defaultUnitId: number;
    /**
     * Допустимые единицы измерения.
     * @type {Array<UnitDTO>}
     * @memberof CategoryParameterUnitDTO
     */
    units: Array<UnitDTO>;
}

/**
 * Check if a given object implements the CategoryParameterUnitDTO interface.
 */
export function instanceOfCategoryParameterUnitDTO(value: object): value is CategoryParameterUnitDTO {
    if (!('defaultUnitId' in value) || value['defaultUnitId'] === undefined) return false;
    if (!('units' in value) || value['units'] === undefined) return false;
    return true;
}

export function CategoryParameterUnitDTOFromJSON(json: any): CategoryParameterUnitDTO {
    return CategoryParameterUnitDTOFromJSONTyped(json, false);
}

export function CategoryParameterUnitDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategoryParameterUnitDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'defaultUnitId': json['defaultUnitId'],
        'units': ((json['units'] as Array<any>).map(UnitDTOFromJSON)),
    };
}

export function CategoryParameterUnitDTOToJSON(value?: CategoryParameterUnitDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'defaultUnitId': value['defaultUnitId'],
        'units': ((value['units'] as Array<any>).map(UnitDTOToJSON)),
    };
}

