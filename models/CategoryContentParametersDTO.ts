/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CategoryParameterDTO } from './CategoryParameterDTO';
import {
    CategoryParameterDTOFromJSON,
    CategoryParameterDTOFromJSONTyped,
    CategoryParameterDTOToJSON,
} from './CategoryParameterDTO';

/**
 * Информация о параметрах категории.
 * @export
 * @interface CategoryContentParametersDTO
 */
export interface CategoryContentParametersDTO {
    /**
     * Идентификатор категории на Маркете. Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).
     * @type {number}
     * @memberof CategoryContentParametersDTO
     */
    categoryId: number;
    /**
     * Список характеристик.
     * @type {Array<CategoryParameterDTO>}
     * @memberof CategoryContentParametersDTO
     */
    parameters?: Array<CategoryParameterDTO> | null;
}

/**
 * Check if a given object implements the CategoryContentParametersDTO interface.
 */
export function instanceOfCategoryContentParametersDTO(value: object): value is CategoryContentParametersDTO {
    if (!('categoryId' in value) || value['categoryId'] === undefined) return false;
    return true;
}

export function CategoryContentParametersDTOFromJSON(json: any): CategoryContentParametersDTO {
    return CategoryContentParametersDTOFromJSONTyped(json, false);
}

export function CategoryContentParametersDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategoryContentParametersDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'categoryId': json['categoryId'],
        'parameters': json['parameters'] == null ? undefined : ((json['parameters'] as Array<any>).map(CategoryParameterDTOFromJSON)),
    };
}

export function CategoryContentParametersDTOToJSON(value?: CategoryContentParametersDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'categoryId': value['categoryId'],
        'parameters': value['parameters'] == null ? undefined : ((value['parameters'] as Array<any>).map(CategoryParameterDTOToJSON)),
    };
}

