/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CategoryErrorType } from './CategoryErrorType';
import {
    CategoryErrorTypeFromJSON,
    CategoryErrorTypeFromJSONTyped,
    CategoryErrorTypeToJSON,
} from './CategoryErrorType';

/**
 * Текст ошибки.
 * @export
 * @interface CategoryErrorDTO
 */
export interface CategoryErrorDTO {
    /**
     * Идентификатор категории.
     * @type {number}
     * @memberof CategoryErrorDTO
     */
    categoryId?: number;
    /**
     * 
     * @type {CategoryErrorType}
     * @memberof CategoryErrorDTO
     */
    type?: CategoryErrorType;
}



/**
 * Check if a given object implements the CategoryErrorDTO interface.
 */
export function instanceOfCategoryErrorDTO(value: object): value is CategoryErrorDTO {
    return true;
}

export function CategoryErrorDTOFromJSON(json: any): CategoryErrorDTO {
    return CategoryErrorDTOFromJSONTyped(json, false);
}

export function CategoryErrorDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategoryErrorDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'categoryId': json['categoryId'] == null ? undefined : json['categoryId'],
        'type': json['type'] == null ? undefined : CategoryErrorTypeFromJSON(json['type']),
    };
}

export function CategoryErrorDTOToJSON(value?: CategoryErrorDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'categoryId': value['categoryId'],
        'type': CategoryErrorTypeToJSON(value['type']),
    };
}

