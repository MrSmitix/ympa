/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Параметры товара, для которого нужно рассчитать стоимость услуг.
 * @export
 * @interface CalculateTariffsOfferDTO
 */
export interface CalculateTariffsOfferDTO {
    /**
     * Идентификатор категории товара на Маркете.
     * 
     * Для расчета стоимости услуг необходимо указать идентификатор листовой категории товара — той, которая не имеет дочерних категорий.
     * 
     * Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).
     * 
     * @type {number}
     * @memberof CalculateTariffsOfferDTO
     */
    categoryId: number;
    /**
     * Цена на товар в рублях.
     * @type {number}
     * @memberof CalculateTariffsOfferDTO
     */
    price: number;
    /**
     * Длина товара в сантиметрах.
     * @type {number}
     * @memberof CalculateTariffsOfferDTO
     */
    length: number;
    /**
     * Ширина товара в сантиметрах.
     * @type {number}
     * @memberof CalculateTariffsOfferDTO
     */
    width: number;
    /**
     * Высота товара в сантиметрах.
     * @type {number}
     * @memberof CalculateTariffsOfferDTO
     */
    height: number;
    /**
     * Вес товара в килограммах.
     * @type {number}
     * @memberof CalculateTariffsOfferDTO
     */
    weight: number;
    /**
     * Квант продажи — количество единиц товара в одном товарном предложении.
     * @type {number}
     * @memberof CalculateTariffsOfferDTO
     */
    quantity?: number;
}

/**
 * Check if a given object implements the CalculateTariffsOfferDTO interface.
 */
export function instanceOfCalculateTariffsOfferDTO(value: object): value is CalculateTariffsOfferDTO {
    if (!('categoryId' in value) || value['categoryId'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('length' in value) || value['length'] === undefined) return false;
    if (!('width' in value) || value['width'] === undefined) return false;
    if (!('height' in value) || value['height'] === undefined) return false;
    if (!('weight' in value) || value['weight'] === undefined) return false;
    return true;
}

export function CalculateTariffsOfferDTOFromJSON(json: any): CalculateTariffsOfferDTO {
    return CalculateTariffsOfferDTOFromJSONTyped(json, false);
}

export function CalculateTariffsOfferDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CalculateTariffsOfferDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'categoryId': json['categoryId'],
        'price': json['price'],
        'length': json['length'],
        'width': json['width'],
        'height': json['height'],
        'weight': json['weight'],
        'quantity': json['quantity'] == null ? undefined : json['quantity'],
    };
}

export function CalculateTariffsOfferDTOToJSON(value?: CalculateTariffsOfferDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'categoryId': value['categoryId'],
        'price': value['price'],
        'length': value['length'],
        'width': value['width'],
        'height': value['height'],
        'weight': value['weight'],
        'quantity': value['quantity'],
    };
}

