/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ParcelBoxLabelDTO } from './ParcelBoxLabelDTO';
import {
    ParcelBoxLabelDTOFromJSON,
    ParcelBoxLabelDTOFromJSONTyped,
    ParcelBoxLabelDTOToJSON,
} from './ParcelBoxLabelDTO';

/**
 * Данные для печати ярлыка.
 * @export
 * @interface OrderLabelDTO
 */
export interface OrderLabelDTO {
    /**
     * Идентификатор заказа.
     * @type {number}
     * @memberof OrderLabelDTO
     */
    orderId: number;
    /**
     * Количество коробок в заказе.
     * @type {number}
     * @memberof OrderLabelDTO
     */
    placesNumber: number;
    /**
     * URL файла с ярлыками‑наклейками на все коробки в заказе.
     * 
     * Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/labels](../../reference/orders/generateOrderLabels.md).
     * 
     * @type {string}
     * @memberof OrderLabelDTO
     */
    url: string;
    /**
     * Информация на ярлыке.
     * @type {Array<ParcelBoxLabelDTO>}
     * @memberof OrderLabelDTO
     */
    parcelBoxLabels: Array<ParcelBoxLabelDTO>;
}

/**
 * Check if a given object implements the OrderLabelDTO interface.
 */
export function instanceOfOrderLabelDTO(value: object): value is OrderLabelDTO {
    if (!('orderId' in value) || value['orderId'] === undefined) return false;
    if (!('placesNumber' in value) || value['placesNumber'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('parcelBoxLabels' in value) || value['parcelBoxLabels'] === undefined) return false;
    return true;
}

export function OrderLabelDTOFromJSON(json: any): OrderLabelDTO {
    return OrderLabelDTOFromJSONTyped(json, false);
}

export function OrderLabelDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderLabelDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'orderId': json['orderId'],
        'placesNumber': json['placesNumber'],
        'url': json['url'],
        'parcelBoxLabels': ((json['parcelBoxLabels'] as Array<any>).map(ParcelBoxLabelDTOFromJSON)),
    };
}

export function OrderLabelDTOToJSON(value?: OrderLabelDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'orderId': value['orderId'],
        'placesNumber': value['placesNumber'],
        'url': value['url'],
        'parcelBoxLabels': ((value['parcelBoxLabels'] as Array<any>).map(ParcelBoxLabelDTOToJSON)),
    };
}

