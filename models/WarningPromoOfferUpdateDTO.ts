/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PromoOfferUpdateWarningDTO } from './PromoOfferUpdateWarningDTO';
import {
    PromoOfferUpdateWarningDTOFromJSON,
    PromoOfferUpdateWarningDTOFromJSONTyped,
    PromoOfferUpdateWarningDTOToJSON,
} from './PromoOfferUpdateWarningDTO';

/**
 * Описание предупреждения, которое появилось при добавлении товара.
 * @export
 * @interface WarningPromoOfferUpdateDTO
 */
export interface WarningPromoOfferUpdateDTO {
    /**
     * Ваш SKU — идентификатор товара в вашей системе.
     * 
     * Разрешена любая последовательность длиной до 255 знаков.
     * 
     * Правила использования SKU:
     * 
     * * У каждого товара SKU должен быть свой.
     * 
     * * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.
     * 
     * * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.
     * 
     * [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
     * 
     * @type {string}
     * @memberof WarningPromoOfferUpdateDTO
     */
    offerId: string;
    /**
     * Предупреждения, которые появились при добавлении товара в акцию или изменении его цен.
     * @type {Array<PromoOfferUpdateWarningDTO>}
     * @memberof WarningPromoOfferUpdateDTO
     */
    warnings: Array<PromoOfferUpdateWarningDTO>;
}

/**
 * Check if a given object implements the WarningPromoOfferUpdateDTO interface.
 */
export function instanceOfWarningPromoOfferUpdateDTO(value: object): value is WarningPromoOfferUpdateDTO {
    if (!('offerId' in value) || value['offerId'] === undefined) return false;
    if (!('warnings' in value) || value['warnings'] === undefined) return false;
    return true;
}

export function WarningPromoOfferUpdateDTOFromJSON(json: any): WarningPromoOfferUpdateDTO {
    return WarningPromoOfferUpdateDTOFromJSONTyped(json, false);
}

export function WarningPromoOfferUpdateDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): WarningPromoOfferUpdateDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'offerId': json['offerId'],
        'warnings': ((json['warnings'] as Array<any>).map(PromoOfferUpdateWarningDTOFromJSON)),
    };
}

export function WarningPromoOfferUpdateDTOToJSON(value?: WarningPromoOfferUpdateDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'offerId': value['offerId'],
        'warnings': ((value['warnings'] as Array<any>).map(PromoOfferUpdateWarningDTOToJSON)),
    };
}

