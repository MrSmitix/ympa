/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CurrencyType } from './CurrencyType';
import {
    CurrencyTypeFromJSON,
    CurrencyTypeFromJSONTyped,
    CurrencyTypeToJSON,
} from './CurrencyType';

/**
 * Цена с указанием скидки.
 * @export
 * @interface UpdatePriceWithDiscountDTO
 */
export interface UpdatePriceWithDiscountDTO {
    /**
     * Значение.
     * @type {number}
     * @memberof UpdatePriceWithDiscountDTO
     */
    value: number;
    /**
     * 
     * @type {CurrencyType}
     * @memberof UpdatePriceWithDiscountDTO
     */
    currencyId: CurrencyType;
    /**
     * Цена до скидки.
     * 
     * Число должно быть целым. Вы можете указать цену со скидкой от 5 до 99%.
     * 
     * Передавайте этот параметр при каждом обновлении цены, если предоставляете скидку на товар.
     * 
     * @type {number}
     * @memberof UpdatePriceWithDiscountDTO
     */
    discountBase?: number;
}



/**
 * Check if a given object implements the UpdatePriceWithDiscountDTO interface.
 */
export function instanceOfUpdatePriceWithDiscountDTO(value: object): value is UpdatePriceWithDiscountDTO {
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('currencyId' in value) || value['currencyId'] === undefined) return false;
    return true;
}

export function UpdatePriceWithDiscountDTOFromJSON(json: any): UpdatePriceWithDiscountDTO {
    return UpdatePriceWithDiscountDTOFromJSONTyped(json, false);
}

export function UpdatePriceWithDiscountDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatePriceWithDiscountDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'value': json['value'],
        'currencyId': CurrencyTypeFromJSON(json['currencyId']),
        'discountBase': json['discountBase'] == null ? undefined : json['discountBase'],
    };
}

export function UpdatePriceWithDiscountDTOToJSON(value?: UpdatePriceWithDiscountDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'value': value['value'],
        'currencyId': CurrencyTypeToJSON(value['currencyId']),
        'discountBase': value['discountBase'],
    };
}

