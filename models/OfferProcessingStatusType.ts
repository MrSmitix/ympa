/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Статус публикации товара:
 * 
 * * `READY` — товар прошел модерацию. Чтобы разместить его на Маркете, установите для него цену.
 * * `IN_WORK` — товар проходит модерацию. Это занимает несколько дней.
 * * `NEED_CONTENT` — для товара без SKU на Маркете `marketSku` нужно найти карточку самостоятельно (через API или кабинет продавца на Маркете) или создать ее, если товар еще не продается на Маркете.
 * * `NEED_INFO` — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. Информация о причинах отклонения возвращается в параметре `notes`.
 * * `REJECTED` — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары.
 * * `SUSPENDED` — товар не прошел модерацию, так как Маркет пока не размещает подобные товары.
 * 
 * @export
 */
export const OfferProcessingStatusType = {
    Unknown: 'UNKNOWN',
    Ready: 'READY',
    InWork: 'IN_WORK',
    NeedInfo: 'NEED_INFO',
    NeedMapping: 'NEED_MAPPING',
    NeedContent: 'NEED_CONTENT',
    ContentProcessing: 'CONTENT_PROCESSING',
    Suspended: 'SUSPENDED',
    Rejected: 'REJECTED',
    Review: 'REVIEW',
    CreateError: 'CREATE_ERROR',
    UpdateError: 'UPDATE_ERROR'
} as const;
export type OfferProcessingStatusType = typeof OfferProcessingStatusType[keyof typeof OfferProcessingStatusType];


export function instanceOfOfferProcessingStatusType(value: any): boolean {
    for (const key in OfferProcessingStatusType) {
        if (Object.prototype.hasOwnProperty.call(OfferProcessingStatusType, key)) {
            if (OfferProcessingStatusType[key as keyof typeof OfferProcessingStatusType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function OfferProcessingStatusTypeFromJSON(json: any): OfferProcessingStatusType {
    return OfferProcessingStatusTypeFromJSONTyped(json, false);
}

export function OfferProcessingStatusTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): OfferProcessingStatusType {
    return json as OfferProcessingStatusType;
}

export function OfferProcessingStatusTypeToJSON(value?: OfferProcessingStatusType | null): any {
    return value as any;
}

