/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MaxSaleQuantumDTO } from './MaxSaleQuantumDTO';
import {
    MaxSaleQuantumDTOFromJSON,
    MaxSaleQuantumDTOFromJSONTyped,
    MaxSaleQuantumDTOToJSON,
} from './MaxSaleQuantumDTO';
import type { CategoryErrorDTO } from './CategoryErrorDTO';
import {
    CategoryErrorDTOFromJSON,
    CategoryErrorDTOFromJSONTyped,
    CategoryErrorDTOToJSON,
} from './CategoryErrorDTO';

/**
 * Категории и лимит на установку кванта и минимального количества товаров.
 * @export
 * @interface GetCategoriesMaxSaleQuantumDTO
 */
export interface GetCategoriesMaxSaleQuantumDTO {
    /**
     * Категории и лимит на установку кванта и минимального количества товаров.
     * @type {Array<MaxSaleQuantumDTO>}
     * @memberof GetCategoriesMaxSaleQuantumDTO
     */
    results: Array<MaxSaleQuantumDTO>;
    /**
     * Ошибки, которые появились из-за переданных категорий.
     * @type {Array<CategoryErrorDTO>}
     * @memberof GetCategoriesMaxSaleQuantumDTO
     */
    errors?: Array<CategoryErrorDTO> | null;
}

/**
 * Check if a given object implements the GetCategoriesMaxSaleQuantumDTO interface.
 */
export function instanceOfGetCategoriesMaxSaleQuantumDTO(value: object): value is GetCategoriesMaxSaleQuantumDTO {
    if (!('results' in value) || value['results'] === undefined) return false;
    return true;
}

export function GetCategoriesMaxSaleQuantumDTOFromJSON(json: any): GetCategoriesMaxSaleQuantumDTO {
    return GetCategoriesMaxSaleQuantumDTOFromJSONTyped(json, false);
}

export function GetCategoriesMaxSaleQuantumDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetCategoriesMaxSaleQuantumDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'results': ((json['results'] as Array<any>).map(MaxSaleQuantumDTOFromJSON)),
        'errors': json['errors'] == null ? undefined : ((json['errors'] as Array<any>).map(CategoryErrorDTOFromJSON)),
    };
}

export function GetCategoriesMaxSaleQuantumDTOToJSON(value?: GetCategoriesMaxSaleQuantumDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'results': ((value['results'] as Array<any>).map(MaxSaleQuantumDTOToJSON)),
        'errors': value['errors'] == null ? undefined : ((value['errors'] as Array<any>).map(CategoryErrorDTOToJSON)),
    };
}

