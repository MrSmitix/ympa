/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RegionType } from './RegionType';
import {
    RegionTypeFromJSON,
    RegionTypeFromJSONTyped,
    RegionTypeToJSON,
} from './RegionType';
import type { CampaignSettingsDeliveryDTO } from './CampaignSettingsDeliveryDTO';
import {
    CampaignSettingsDeliveryDTOFromJSON,
    CampaignSettingsDeliveryDTOFromJSONTyped,
    CampaignSettingsDeliveryDTOToJSON,
} from './CampaignSettingsDeliveryDTO';
import type { CampaignSettingsScheduleSourceType } from './CampaignSettingsScheduleSourceType';
import {
    CampaignSettingsScheduleSourceTypeFromJSON,
    CampaignSettingsScheduleSourceTypeFromJSONTyped,
    CampaignSettingsScheduleSourceTypeToJSON,
} from './CampaignSettingsScheduleSourceType';

/**
 * Информация о своем регионе магазина.
 * @export
 * @interface CampaignSettingsLocalRegionDTO
 */
export interface CampaignSettingsLocalRegionDTO {
    /**
     * Идентификатор региона.
     * @type {number}
     * @memberof CampaignSettingsLocalRegionDTO
     */
    id?: number;
    /**
     * Название региона.
     * @type {string}
     * @memberof CampaignSettingsLocalRegionDTO
     */
    name?: string;
    /**
     * 
     * @type {RegionType}
     * @memberof CampaignSettingsLocalRegionDTO
     */
    type?: RegionType;
    /**
     * 
     * @type {CampaignSettingsScheduleSourceType}
     * @memberof CampaignSettingsLocalRegionDTO
     */
    deliveryOptionsSource?: CampaignSettingsScheduleSourceType;
    /**
     * 
     * @type {CampaignSettingsDeliveryDTO}
     * @memberof CampaignSettingsLocalRegionDTO
     */
    delivery?: CampaignSettingsDeliveryDTO;
}



/**
 * Check if a given object implements the CampaignSettingsLocalRegionDTO interface.
 */
export function instanceOfCampaignSettingsLocalRegionDTO(value: object): value is CampaignSettingsLocalRegionDTO {
    return true;
}

export function CampaignSettingsLocalRegionDTOFromJSON(json: any): CampaignSettingsLocalRegionDTO {
    return CampaignSettingsLocalRegionDTOFromJSONTyped(json, false);
}

export function CampaignSettingsLocalRegionDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CampaignSettingsLocalRegionDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'type': json['type'] == null ? undefined : RegionTypeFromJSON(json['type']),
        'deliveryOptionsSource': json['deliveryOptionsSource'] == null ? undefined : CampaignSettingsScheduleSourceTypeFromJSON(json['deliveryOptionsSource']),
        'delivery': json['delivery'] == null ? undefined : CampaignSettingsDeliveryDTOFromJSON(json['delivery']),
    };
}

export function CampaignSettingsLocalRegionDTOToJSON(value?: CampaignSettingsLocalRegionDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'type': RegionTypeToJSON(value['type']),
        'deliveryOptionsSource': CampaignSettingsScheduleSourceTypeToJSON(value['deliveryOptionsSource']),
        'delivery': CampaignSettingsDeliveryDTOToJSON(value['delivery']),
    };
}

