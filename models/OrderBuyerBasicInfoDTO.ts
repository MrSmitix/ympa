/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrderBuyerType } from './OrderBuyerType';
import {
    OrderBuyerTypeFromJSON,
    OrderBuyerTypeFromJSONTyped,
    OrderBuyerTypeToJSON,
} from './OrderBuyerType';

/**
 * Информация о покупателе с базовыми полями.
 * @export
 * @interface OrderBuyerBasicInfoDTO
 */
export interface OrderBuyerBasicInfoDTO {
    /**
     * Идентификатор покупателя.
     * @type {string}
     * @memberof OrderBuyerBasicInfoDTO
     */
    id?: string;
    /**
     * Фамилия покупателя.
     * @type {string}
     * @memberof OrderBuyerBasicInfoDTO
     */
    lastName?: string;
    /**
     * Имя покупателя.
     * @type {string}
     * @memberof OrderBuyerBasicInfoDTO
     */
    firstName?: string;
    /**
     * Отчество покупателя.
     * @type {string}
     * @memberof OrderBuyerBasicInfoDTO
     */
    middleName?: string;
    /**
     * 
     * @type {OrderBuyerType}
     * @memberof OrderBuyerBasicInfoDTO
     */
    type?: OrderBuyerType;
}



/**
 * Check if a given object implements the OrderBuyerBasicInfoDTO interface.
 */
export function instanceOfOrderBuyerBasicInfoDTO(value: object): value is OrderBuyerBasicInfoDTO {
    return true;
}

export function OrderBuyerBasicInfoDTOFromJSON(json: any): OrderBuyerBasicInfoDTO {
    return OrderBuyerBasicInfoDTOFromJSONTyped(json, false);
}

export function OrderBuyerBasicInfoDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderBuyerBasicInfoDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'middleName': json['middleName'] == null ? undefined : json['middleName'],
        'type': json['type'] == null ? undefined : OrderBuyerTypeFromJSON(json['type']),
    };
}

export function OrderBuyerBasicInfoDTOToJSON(value?: OrderBuyerBasicInfoDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'lastName': value['lastName'],
        'firstName': value['firstName'],
        'middleName': value['middleName'],
        'type': OrderBuyerTypeToJSON(value['type']),
    };
}

