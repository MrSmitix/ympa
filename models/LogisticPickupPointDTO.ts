/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LogisticPointType } from './LogisticPointType';
import {
    LogisticPointTypeFromJSON,
    LogisticPointTypeFromJSONTyped,
    LogisticPointTypeToJSON,
} from './LogisticPointType';
import type { PickupAddressDTO } from './PickupAddressDTO';
import {
    PickupAddressDTOFromJSON,
    PickupAddressDTOFromJSONTyped,
    PickupAddressDTOToJSON,
} from './PickupAddressDTO';

/**
 * Описание пункта вывоза для возврата.
 * @export
 * @interface LogisticPickupPointDTO
 */
export interface LogisticPickupPointDTO {
    /**
     * Идентификатор пункта вывоза.
     * @type {number}
     * @memberof LogisticPickupPointDTO
     */
    id?: number;
    /**
     * Название пункта вывоза.
     * @type {string}
     * @memberof LogisticPickupPointDTO
     */
    name?: string;
    /**
     * 
     * @type {PickupAddressDTO}
     * @memberof LogisticPickupPointDTO
     */
    address?: PickupAddressDTO;
    /**
     * Дополнительные инструкции к вывозу.
     * @type {string}
     * @memberof LogisticPickupPointDTO
     */
    instruction?: string;
    /**
     * 
     * @type {LogisticPointType}
     * @memberof LogisticPickupPointDTO
     */
    type?: LogisticPointType;
    /**
     * Идентификатор логистического партнера, к которому относится логистическая точка.
     * @type {number}
     * @memberof LogisticPickupPointDTO
     */
    logisticPartnerId?: number;
}



/**
 * Check if a given object implements the LogisticPickupPointDTO interface.
 */
export function instanceOfLogisticPickupPointDTO(value: object): value is LogisticPickupPointDTO {
    return true;
}

export function LogisticPickupPointDTOFromJSON(json: any): LogisticPickupPointDTO {
    return LogisticPickupPointDTOFromJSONTyped(json, false);
}

export function LogisticPickupPointDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): LogisticPickupPointDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'address': json['address'] == null ? undefined : PickupAddressDTOFromJSON(json['address']),
        'instruction': json['instruction'] == null ? undefined : json['instruction'],
        'type': json['type'] == null ? undefined : LogisticPointTypeFromJSON(json['type']),
        'logisticPartnerId': json['logisticPartnerId'] == null ? undefined : json['logisticPartnerId'],
    };
}

export function LogisticPickupPointDTOToJSON(value?: LogisticPickupPointDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'address': PickupAddressDTOToJSON(value['address']),
        'instruction': value['instruction'],
        'type': LogisticPointTypeToJSON(value['type']),
        'logisticPartnerId': value['logisticPartnerId'],
    };
}

