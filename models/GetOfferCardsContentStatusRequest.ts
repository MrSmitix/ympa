/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OfferCardStatusType } from './OfferCardStatusType';
import {
    OfferCardStatusTypeFromJSON,
    OfferCardStatusTypeFromJSONTyped,
    OfferCardStatusTypeToJSON,
} from './OfferCardStatusType';

/**
 * 
 * @export
 * @interface GetOfferCardsContentStatusRequest
 */
export interface GetOfferCardsContentStatusRequest {
    /**
     * Идентификаторы товаров, информация о которых нужна.
     * <br><br>
     * ⚠️ Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.
     * 
     * @type {Set<string>}
     * @memberof GetOfferCardsContentStatusRequest
     */
    offerIds?: Set<string> | null;
    /**
     * Фильтр по статусам карточек.
     * 
     * [Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html)
     * 
     * @type {Set<OfferCardStatusType>}
     * @memberof GetOfferCardsContentStatusRequest
     */
    cardStatuses?: Set<OfferCardStatusType> | null;
    /**
     * Фильтр по категориям на Маркете.
     * @type {Set<number>}
     * @memberof GetOfferCardsContentStatusRequest
     */
    categoryIds?: Set<number> | null;
}

/**
 * Check if a given object implements the GetOfferCardsContentStatusRequest interface.
 */
export function instanceOfGetOfferCardsContentStatusRequest(value: object): value is GetOfferCardsContentStatusRequest {
    return true;
}

export function GetOfferCardsContentStatusRequestFromJSON(json: any): GetOfferCardsContentStatusRequest {
    return GetOfferCardsContentStatusRequestFromJSONTyped(json, false);
}

export function GetOfferCardsContentStatusRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetOfferCardsContentStatusRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'offerIds': json['offerIds'] == null ? undefined : json['offerIds'],
        'cardStatuses': json['cardStatuses'] == null ? undefined : (new Set((json['cardStatuses'] as Array<any>).map(OfferCardStatusTypeFromJSON))),
        'categoryIds': json['categoryIds'] == null ? undefined : json['categoryIds'],
    };
}

export function GetOfferCardsContentStatusRequestToJSON(value?: GetOfferCardsContentStatusRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'offerIds': value['offerIds'] == null ? undefined : Array.from(value['offerIds'] as Set<any>),
        'cardStatuses': value['cardStatuses'] == null ? undefined : (Array.from(value['cardStatuses'] as Set<any>).map(OfferCardStatusTypeToJSON)),
        'categoryIds': value['categoryIds'] == null ? undefined : Array.from(value['categoryIds'] as Set<any>),
    };
}

