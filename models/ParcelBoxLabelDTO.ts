/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Информация о ярлыке для коробки.
 * @export
 * @interface ParcelBoxLabelDTO
 */
export interface ParcelBoxLabelDTO {
    /**
     * Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label](../../reference/orders/generateOrderLabel.md).
     * 
     * @type {string}
     * @memberof ParcelBoxLabelDTO
     */
    url: string;
    /**
     * Юридическое название магазина.
     * @type {string}
     * @memberof ParcelBoxLabelDTO
     */
    supplierName: string;
    /**
     * Юридическое название службы доставки.
     * @type {string}
     * @memberof ParcelBoxLabelDTO
     */
    deliveryServiceName: string;
    /**
     * Идентификатор заказа в системе Маркета.
     * @type {number}
     * @memberof ParcelBoxLabelDTO
     */
    orderId: number;
    /**
     * Идентификатор заказа в информационной системе магазина.
     * 
     * Совпадает с `orderId`, если Маркету неизвестен номер заказа в системе магазина.
     * 
     * @type {string}
     * @memberof ParcelBoxLabelDTO
     */
    orderNum: string;
    /**
     * Фамилия и инициалы получателя заказа.
     * @type {string}
     * @memberof ParcelBoxLabelDTO
     */
    recipientName: string;
    /**
     * Идентификатор коробки.
     * @type {number}
     * @memberof ParcelBoxLabelDTO
     */
    boxId: number;
    /**
     * Идентификатор коробки в информационной системе магазина.
     * 
     * Возвращается в формате: `номер заказа на Маркете-номер коробки`. Например, `7206821‑1`, `7206821‑2` и т. д.
     * 
     * @type {string}
     * @memberof ParcelBoxLabelDTO
     */
    fulfilmentId: string;
    /**
     * Номер коробки в заказе. Возвращается в формате: `номер места/общее количество мест`.
     * 
     * @type {string}
     * @memberof ParcelBoxLabelDTO
     */
    place: string;
    /**
     * {% note warning "" %}
     * 
     * Этот параметр устарел. Не используйте его.
     * 
     * {% endnote %}
     * 
     * Общая масса всех товаров в заказе. Возвращается в формате: `weight кг`.
     * 
     * @type {string}
     * @memberof ParcelBoxLabelDTO
     */
    weight: string;
    /**
     * Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).
     * @type {string}
     * @memberof ParcelBoxLabelDTO
     */
    deliveryServiceId: string;
    /**
     * Адрес получателя.
     * @type {string}
     * @memberof ParcelBoxLabelDTO
     */
    deliveryAddress?: string;
    /**
     * Дата отгрузки в формате `dd.MM.yyyy`.
     * @type {string}
     * @memberof ParcelBoxLabelDTO
     */
    shipmentDate?: string;
}

/**
 * Check if a given object implements the ParcelBoxLabelDTO interface.
 */
export function instanceOfParcelBoxLabelDTO(value: object): value is ParcelBoxLabelDTO {
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('supplierName' in value) || value['supplierName'] === undefined) return false;
    if (!('deliveryServiceName' in value) || value['deliveryServiceName'] === undefined) return false;
    if (!('orderId' in value) || value['orderId'] === undefined) return false;
    if (!('orderNum' in value) || value['orderNum'] === undefined) return false;
    if (!('recipientName' in value) || value['recipientName'] === undefined) return false;
    if (!('boxId' in value) || value['boxId'] === undefined) return false;
    if (!('fulfilmentId' in value) || value['fulfilmentId'] === undefined) return false;
    if (!('place' in value) || value['place'] === undefined) return false;
    if (!('weight' in value) || value['weight'] === undefined) return false;
    if (!('deliveryServiceId' in value) || value['deliveryServiceId'] === undefined) return false;
    return true;
}

export function ParcelBoxLabelDTOFromJSON(json: any): ParcelBoxLabelDTO {
    return ParcelBoxLabelDTOFromJSONTyped(json, false);
}

export function ParcelBoxLabelDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ParcelBoxLabelDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'],
        'supplierName': json['supplierName'],
        'deliveryServiceName': json['deliveryServiceName'],
        'orderId': json['orderId'],
        'orderNum': json['orderNum'],
        'recipientName': json['recipientName'],
        'boxId': json['boxId'],
        'fulfilmentId': json['fulfilmentId'],
        'place': json['place'],
        'weight': json['weight'],
        'deliveryServiceId': json['deliveryServiceId'],
        'deliveryAddress': json['deliveryAddress'] == null ? undefined : json['deliveryAddress'],
        'shipmentDate': json['shipmentDate'] == null ? undefined : json['shipmentDate'],
    };
}

export function ParcelBoxLabelDTOToJSON(value?: ParcelBoxLabelDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'url': value['url'],
        'supplierName': value['supplierName'],
        'deliveryServiceName': value['deliveryServiceName'],
        'orderId': value['orderId'],
        'orderNum': value['orderNum'],
        'recipientName': value['recipientName'],
        'boxId': value['boxId'],
        'fulfilmentId': value['fulfilmentId'],
        'place': value['place'],
        'weight': value['weight'],
        'deliveryServiceId': value['deliveryServiceId'],
        'deliveryAddress': value['deliveryAddress'],
        'shipmentDate': value['shipmentDate'],
    };
}

