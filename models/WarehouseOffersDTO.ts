/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WarehouseOfferDTO } from './WarehouseOfferDTO';
import {
    WarehouseOfferDTOFromJSON,
    WarehouseOfferDTOFromJSONTyped,
    WarehouseOfferDTOToJSON,
} from './WarehouseOfferDTO';

/**
 * Информация об остатках товаров на складе.
 * @export
 * @interface WarehouseOffersDTO
 */
export interface WarehouseOffersDTO {
    /**
     * Идентификатор склада.
     * @type {number}
     * @memberof WarehouseOffersDTO
     */
    warehouseId: number;
    /**
     * Информация об остатках.
     * @type {Array<WarehouseOfferDTO>}
     * @memberof WarehouseOffersDTO
     */
    offers: Array<WarehouseOfferDTO>;
}

/**
 * Check if a given object implements the WarehouseOffersDTO interface.
 */
export function instanceOfWarehouseOffersDTO(value: object): value is WarehouseOffersDTO {
    if (!('warehouseId' in value) || value['warehouseId'] === undefined) return false;
    if (!('offers' in value) || value['offers'] === undefined) return false;
    return true;
}

export function WarehouseOffersDTOFromJSON(json: any): WarehouseOffersDTO {
    return WarehouseOffersDTOFromJSONTyped(json, false);
}

export function WarehouseOffersDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): WarehouseOffersDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'warehouseId': json['warehouseId'],
        'offers': ((json['offers'] as Array<any>).map(WarehouseOfferDTOFromJSON)),
    };
}

export function WarehouseOffersDTOToJSON(value?: WarehouseOffersDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'warehouseId': value['warehouseId'],
        'offers': ((value['offers'] as Array<any>).map(WarehouseOfferDTOToJSON)),
    };
}

