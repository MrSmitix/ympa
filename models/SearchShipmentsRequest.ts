/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ShipmentStatusType } from './ShipmentStatusType';
import {
    ShipmentStatusTypeFromJSON,
    ShipmentStatusTypeFromJSONTyped,
    ShipmentStatusTypeToJSON,
} from './ShipmentStatusType';

/**
 * Запрос информации об отгрузках.
 * @export
 * @interface SearchShipmentsRequest
 */
export interface SearchShipmentsRequest {
    /**
     * Начальная дата для фильтрации по дате отгрузки (включительно).
     * 
     * Формат даты: `ДД-ММ-ГГГГ`.
     * 
     * @type {Date}
     * @memberof SearchShipmentsRequest
     */
    dateFrom: Date;
    /**
     * Конечная дата для фильтрации по дате отгрузки (включительно).
     * 
     * Формат даты: `ДД-ММ-ГГГГ`.
     * 
     * @type {Date}
     * @memberof SearchShipmentsRequest
     */
    dateTo: Date;
    /**
     * Список статусов отгрузок.
     * @type {Set<ShipmentStatusType>}
     * @memberof SearchShipmentsRequest
     */
    statuses?: Set<ShipmentStatusType> | null;
    /**
     * Список идентификаторов заказов из отгрузок.
     * @type {Set<number>}
     * @memberof SearchShipmentsRequest
     */
    orderIds?: Set<number> | null;
    /**
     * Возвращать ли отмененные заказы.
     * 
     * Значение по умолчанию — `true`. Если возвращать отмененные заказы не нужно, передайте значение `false`.
     * 
     * @type {boolean}
     * @memberof SearchShipmentsRequest
     */
    cancelledOrders?: boolean;
}

/**
 * Check if a given object implements the SearchShipmentsRequest interface.
 */
export function instanceOfSearchShipmentsRequest(value: object): value is SearchShipmentsRequest {
    if (!('dateFrom' in value) || value['dateFrom'] === undefined) return false;
    if (!('dateTo' in value) || value['dateTo'] === undefined) return false;
    return true;
}

export function SearchShipmentsRequestFromJSON(json: any): SearchShipmentsRequest {
    return SearchShipmentsRequestFromJSONTyped(json, false);
}

export function SearchShipmentsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchShipmentsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'dateFrom': (new Date(json['dateFrom'])),
        'dateTo': (new Date(json['dateTo'])),
        'statuses': json['statuses'] == null ? undefined : (new Set((json['statuses'] as Array<any>).map(ShipmentStatusTypeFromJSON))),
        'orderIds': json['orderIds'] == null ? undefined : json['orderIds'],
        'cancelledOrders': json['cancelledOrders'] == null ? undefined : json['cancelledOrders'],
    };
}

export function SearchShipmentsRequestToJSON(value?: SearchShipmentsRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'dateFrom': ((value['dateFrom']).toISOString().substring(0,10)),
        'dateTo': ((value['dateTo']).toISOString().substring(0,10)),
        'statuses': value['statuses'] == null ? undefined : (Array.from(value['statuses'] as Set<any>).map(ShipmentStatusTypeToJSON)),
        'orderIds': value['orderIds'] == null ? undefined : Array.from(value['orderIds'] as Set<any>),
        'cancelledOrders': value['cancelledOrders'],
    };
}

