/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TimeUnitType } from './TimeUnitType';
import {
    TimeUnitTypeFromJSON,
    TimeUnitTypeFromJSONTyped,
    TimeUnitTypeToJSON,
} from './TimeUnitType';

/**
 * Временной отрезок с комментарием. Требования к содержанию комментария зависят от контекста использования параметра и указаны в описании поля, которое его содержит.
 * @export
 * @interface TimePeriodDTO
 */
export interface TimePeriodDTO {
    /**
     * Продолжительность в указанных единицах.
     * @type {number}
     * @memberof TimePeriodDTO
     */
    timePeriod: number;
    /**
     * 
     * @type {TimeUnitType}
     * @memberof TimePeriodDTO
     */
    timeUnit: TimeUnitType;
    /**
     * Комментарий.
     * @type {string}
     * @memberof TimePeriodDTO
     */
    comment?: string;
}



/**
 * Check if a given object implements the TimePeriodDTO interface.
 */
export function instanceOfTimePeriodDTO(value: object): value is TimePeriodDTO {
    if (!('timePeriod' in value) || value['timePeriod'] === undefined) return false;
    if (!('timeUnit' in value) || value['timeUnit'] === undefined) return false;
    return true;
}

export function TimePeriodDTOFromJSON(json: any): TimePeriodDTO {
    return TimePeriodDTOFromJSONTyped(json, false);
}

export function TimePeriodDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimePeriodDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'timePeriod': json['timePeriod'],
        'timeUnit': TimeUnitTypeFromJSON(json['timeUnit']),
        'comment': json['comment'] == null ? undefined : json['comment'],
    };
}

export function TimePeriodDTOToJSON(value?: TimePeriodDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'timePeriod': value['timePeriod'],
        'timeUnit': TimeUnitTypeToJSON(value['timeUnit']),
        'comment': value['comment'],
    };
}

