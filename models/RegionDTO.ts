/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RegionType } from './RegionType';
import {
    RegionTypeFromJSON,
    RegionTypeFromJSONTyped,
    RegionTypeToJSON,
} from './RegionType';

/**
 * Регион доставки.
 * @export
 * @interface RegionDTO
 */
export interface RegionDTO {
    /**
     * Идентификатор региона.
     * @type {number}
     * @memberof RegionDTO
     */
    id?: number;
    /**
     * Название региона.
     * @type {string}
     * @memberof RegionDTO
     */
    name: string;
    /**
     * 
     * @type {RegionType}
     * @memberof RegionDTO
     */
    type: RegionType;
    /**
     * 
     * @type {RegionDTO}
     * @memberof RegionDTO
     */
    parent?: RegionDTO;
    /**
     * Дочерние регионы.
     * @type {Array<RegionDTO>}
     * @memberof RegionDTO
     */
    children?: Array<RegionDTO> | null;
}



/**
 * Check if a given object implements the RegionDTO interface.
 */
export function instanceOfRegionDTO(value: object): value is RegionDTO {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function RegionDTOFromJSON(json: any): RegionDTO {
    return RegionDTOFromJSONTyped(json, false);
}

export function RegionDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegionDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'type': RegionTypeFromJSON(json['type']),
        'parent': json['parent'] == null ? undefined : RegionDTOFromJSON(json['parent']),
        'children': json['children'] == null ? undefined : ((json['children'] as Array<any>).map(RegionDTOFromJSON)),
    };
}

export function RegionDTOToJSON(value?: RegionDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'type': RegionTypeToJSON(value['type']),
        'parent': RegionDTOToJSON(value['parent']),
        'children': value['children'] == null ? undefined : ((value['children'] as Array<any>).map(RegionDTOToJSON)),
    };
}

