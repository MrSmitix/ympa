/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TariffParameterDTO } from './TariffParameterDTO';
import {
    TariffParameterDTOFromJSON,
    TariffParameterDTOFromJSONTyped,
    TariffParameterDTOToJSON,
} from './TariffParameterDTO';
import type { CalculatedTariffType } from './CalculatedTariffType';
import {
    CalculatedTariffTypeFromJSON,
    CalculatedTariffTypeFromJSONTyped,
    CalculatedTariffTypeToJSON,
} from './CalculatedTariffType';

/**
 * Информация об услугах Маркета.
 * @export
 * @interface CalculatedTariffDTO
 */
export interface CalculatedTariffDTO {
    /**
     * 
     * @type {CalculatedTariffType}
     * @memberof CalculatedTariffDTO
     */
    type: CalculatedTariffType;
    /**
     * Стоимость услуги в рублях.
     * @type {number}
     * @memberof CalculatedTariffDTO
     */
    amount?: number;
    /**
     * Параметры расчета тарифа.
     * @type {Array<TariffParameterDTO>}
     * @memberof CalculatedTariffDTO
     */
    parameters: Array<TariffParameterDTO>;
}



/**
 * Check if a given object implements the CalculatedTariffDTO interface.
 */
export function instanceOfCalculatedTariffDTO(value: object): value is CalculatedTariffDTO {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('parameters' in value) || value['parameters'] === undefined) return false;
    return true;
}

export function CalculatedTariffDTOFromJSON(json: any): CalculatedTariffDTO {
    return CalculatedTariffDTOFromJSONTyped(json, false);
}

export function CalculatedTariffDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CalculatedTariffDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'type': CalculatedTariffTypeFromJSON(json['type']),
        'amount': json['amount'] == null ? undefined : json['amount'],
        'parameters': ((json['parameters'] as Array<any>).map(TariffParameterDTOFromJSON)),
    };
}

export function CalculatedTariffDTOToJSON(value?: CalculatedTariffDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': CalculatedTariffTypeToJSON(value['type']),
        'amount': value['amount'],
        'parameters': ((value['parameters'] as Array<any>).map(TariffParameterDTOToJSON)),
    };
}

