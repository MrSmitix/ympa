/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BasePriceDTO } from './BasePriceDTO';
import {
    BasePriceDTOFromJSON,
    BasePriceDTOFromJSONTyped,
    BasePriceDTOToJSON,
} from './BasePriceDTO';

/**
 * Максимальные значения цены, при которых она является привлекательной или умеренной.
 * @export
 * @interface PriceCompetitivenessThresholdsDTO
 */
export interface PriceCompetitivenessThresholdsDTO {
    /**
     * 
     * @type {BasePriceDTO}
     * @memberof PriceCompetitivenessThresholdsDTO
     */
    optimalPrice?: BasePriceDTO;
    /**
     * 
     * @type {BasePriceDTO}
     * @memberof PriceCompetitivenessThresholdsDTO
     */
    averagePrice?: BasePriceDTO;
}

/**
 * Check if a given object implements the PriceCompetitivenessThresholdsDTO interface.
 */
export function instanceOfPriceCompetitivenessThresholdsDTO(value: object): value is PriceCompetitivenessThresholdsDTO {
    return true;
}

export function PriceCompetitivenessThresholdsDTOFromJSON(json: any): PriceCompetitivenessThresholdsDTO {
    return PriceCompetitivenessThresholdsDTOFromJSONTyped(json, false);
}

export function PriceCompetitivenessThresholdsDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PriceCompetitivenessThresholdsDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'optimalPrice': json['optimalPrice'] == null ? undefined : BasePriceDTOFromJSON(json['optimalPrice']),
        'averagePrice': json['averagePrice'] == null ? undefined : BasePriceDTOFromJSON(json['averagePrice']),
    };
}

export function PriceCompetitivenessThresholdsDTOToJSON(value?: PriceCompetitivenessThresholdsDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'optimalPrice': BasePriceDTOToJSON(value['optimalPrice']),
        'averagePrice': BasePriceDTOToJSON(value['averagePrice']),
    };
}

