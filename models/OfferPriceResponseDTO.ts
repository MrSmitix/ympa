/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PriceDTO } from './PriceDTO';
import {
    PriceDTOFromJSON,
    PriceDTOFromJSONTyped,
    PriceDTOToJSON,
} from './PriceDTO';

/**
 * Информация об установленной цене на товар.
 * @export
 * @interface OfferPriceResponseDTO
 */
export interface OfferPriceResponseDTO {
    /**
     * Идентификатор предложения из прайс-листа.
     * @type {string}
     * @memberof OfferPriceResponseDTO
     */
    id?: string;
    /**
     * 
     * @type {PriceDTO}
     * @memberof OfferPriceResponseDTO
     */
    price?: PriceDTO;
    /**
     * SKU на Маркете.
     * @type {number}
     * @memberof OfferPriceResponseDTO
     */
    marketSku?: number;
    /**
     * Дата и время последнего обновления цены на товар.
     * @type {Date}
     * @memberof OfferPriceResponseDTO
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the OfferPriceResponseDTO interface.
 */
export function instanceOfOfferPriceResponseDTO(value: object): value is OfferPriceResponseDTO {
    return true;
}

export function OfferPriceResponseDTOFromJSON(json: any): OfferPriceResponseDTO {
    return OfferPriceResponseDTOFromJSONTyped(json, false);
}

export function OfferPriceResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OfferPriceResponseDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'price': json['price'] == null ? undefined : PriceDTOFromJSON(json['price']),
        'marketSku': json['marketSku'] == null ? undefined : json['marketSku'],
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function OfferPriceResponseDTOToJSON(value?: OfferPriceResponseDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'price': PriceDTOToJSON(value['price']),
        'marketSku': value['marketSku'],
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

