/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WarehouseAddressDTO } from './WarehouseAddressDTO';
import {
    WarehouseAddressDTOFromJSON,
    WarehouseAddressDTOFromJSONTyped,
    WarehouseAddressDTOToJSON,
} from './WarehouseAddressDTO';

/**
 * Информация о складе.
 * @export
 * @interface WarehouseDTO
 */
export interface WarehouseDTO {
    /**
     * Идентификатор склада.
     * @type {number}
     * @memberof WarehouseDTO
     */
    id: number;
    /**
     * Название склада.
     * @type {string}
     * @memberof WarehouseDTO
     */
    name: string;
    /**
     * Идентификатор кампании в API и идентификатор магазина.
     * @type {number}
     * @memberof WarehouseDTO
     */
    campaignId: number;
    /**
     * Возможна ли доставка по модели Экспресс.
     * @type {boolean}
     * @memberof WarehouseDTO
     */
    express: boolean;
    /**
     * 
     * @type {WarehouseAddressDTO}
     * @memberof WarehouseDTO
     */
    address?: WarehouseAddressDTO;
}

/**
 * Check if a given object implements the WarehouseDTO interface.
 */
export function instanceOfWarehouseDTO(value: object): value is WarehouseDTO {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('campaignId' in value) || value['campaignId'] === undefined) return false;
    if (!('express' in value) || value['express'] === undefined) return false;
    return true;
}

export function WarehouseDTOFromJSON(json: any): WarehouseDTO {
    return WarehouseDTOFromJSONTyped(json, false);
}

export function WarehouseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): WarehouseDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'campaignId': json['campaignId'],
        'express': json['express'],
        'address': json['address'] == null ? undefined : WarehouseAddressDTOFromJSON(json['address']),
    };
}

export function WarehouseDTOToJSON(value?: WarehouseDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'campaignId': value['campaignId'],
        'express': value['express'],
        'address': WarehouseAddressDTOToJSON(value['address']),
    };
}

