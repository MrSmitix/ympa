/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrderDeliveryDispatchType } from './OrderDeliveryDispatchType';
import {
    OrderDeliveryDispatchTypeFromJSON,
    OrderDeliveryDispatchTypeFromJSONTyped,
    OrderDeliveryDispatchTypeToJSON,
} from './OrderDeliveryDispatchType';
import type { OrderDeliveryEacType } from './OrderDeliveryEacType';
import {
    OrderDeliveryEacTypeFromJSON,
    OrderDeliveryEacTypeFromJSONTyped,
    OrderDeliveryEacTypeToJSON,
} from './OrderDeliveryEacType';
import type { OrderTrackDTO } from './OrderTrackDTO';
import {
    OrderTrackDTOFromJSON,
    OrderTrackDTOFromJSONTyped,
    OrderTrackDTOToJSON,
} from './OrderTrackDTO';
import type { OrderLiftType } from './OrderLiftType';
import {
    OrderLiftTypeFromJSON,
    OrderLiftTypeFromJSONTyped,
    OrderLiftTypeToJSON,
} from './OrderLiftType';
import type { OrderShipmentDTO } from './OrderShipmentDTO';
import {
    OrderShipmentDTOFromJSON,
    OrderShipmentDTOFromJSONTyped,
    OrderShipmentDTOToJSON,
} from './OrderShipmentDTO';
import type { OrderCourierDTO } from './OrderCourierDTO';
import {
    OrderCourierDTOFromJSON,
    OrderCourierDTOFromJSONTyped,
    OrderCourierDTOToJSON,
} from './OrderCourierDTO';
import type { RegionDTO } from './RegionDTO';
import {
    RegionDTOFromJSON,
    RegionDTOFromJSONTyped,
    RegionDTOToJSON,
} from './RegionDTO';
import type { OrderDeliveryPartnerType } from './OrderDeliveryPartnerType';
import {
    OrderDeliveryPartnerTypeFromJSON,
    OrderDeliveryPartnerTypeFromJSONTyped,
    OrderDeliveryPartnerTypeToJSON,
} from './OrderDeliveryPartnerType';
import type { OrderDeliveryType } from './OrderDeliveryType';
import {
    OrderDeliveryTypeFromJSON,
    OrderDeliveryTypeFromJSONTyped,
    OrderDeliveryTypeToJSON,
} from './OrderDeliveryType';
import type { OrderDeliveryDatesDTO } from './OrderDeliveryDatesDTO';
import {
    OrderDeliveryDatesDTOFromJSON,
    OrderDeliveryDatesDTOFromJSONTyped,
    OrderDeliveryDatesDTOToJSON,
} from './OrderDeliveryDatesDTO';
import type { OrderVatType } from './OrderVatType';
import {
    OrderVatTypeFromJSON,
    OrderVatTypeFromJSONTyped,
    OrderVatTypeToJSON,
} from './OrderVatType';
import type { OrderDeliveryAddressDTO } from './OrderDeliveryAddressDTO';
import {
    OrderDeliveryAddressDTOFromJSON,
    OrderDeliveryAddressDTOFromJSONTyped,
    OrderDeliveryAddressDTOToJSON,
} from './OrderDeliveryAddressDTO';

/**
 * Информация о доставке.
 * @export
 * @interface OrderDeliveryDTO
 */
export interface OrderDeliveryDTO {
    /**
     * Идентификатор доставки, присвоенный магазином.
     * 
     * Указывается, только если магазин передал данный идентификатор в ответе на запрос методом [POST cart](../../pushapi/reference/cart.md).
     * 
     * @type {string}
     * @memberof OrderDeliveryDTO
     */
    id?: string;
    /**
     * 
     * @type {OrderDeliveryType}
     * @memberof OrderDeliveryDTO
     */
    type?: OrderDeliveryType;
    /**
     * Наименование службы доставки.
     * @type {string}
     * @memberof OrderDeliveryDTO
     */
    serviceName?: string;
    /**
     * {% note warning "" %}
     * 
     * Этот параметр устарел. Стоимость доставки смотрите в параметре `deliveryTotal`.
     * 
     * {% endnote %}
     * 
     * Стоимость доставки в валюте заказа.
     * 
     * @type {number}
     * @memberof OrderDeliveryDTO
     * @deprecated
     */
    price?: number;
    /**
     * 
     * @type {OrderDeliveryPartnerType}
     * @memberof OrderDeliveryDTO
     */
    deliveryPartnerType?: OrderDeliveryPartnerType;
    /**
     * 
     * @type {OrderCourierDTO}
     * @memberof OrderDeliveryDTO
     */
    courier?: OrderCourierDTO;
    /**
     * 
     * @type {OrderDeliveryDatesDTO}
     * @memberof OrderDeliveryDTO
     */
    dates?: OrderDeliveryDatesDTO;
    /**
     * 
     * @type {RegionDTO}
     * @memberof OrderDeliveryDTO
     */
    region?: RegionDTO;
    /**
     * 
     * @type {OrderDeliveryAddressDTO}
     * @memberof OrderDeliveryDTO
     */
    address?: OrderDeliveryAddressDTO;
    /**
     * 
     * @type {OrderVatType}
     * @memberof OrderDeliveryDTO
     */
    vat?: OrderVatType;
    /**
     * Идентификатор службы доставки.
     * @type {number}
     * @memberof OrderDeliveryDTO
     */
    deliveryServiceId?: number;
    /**
     * 
     * @type {OrderLiftType}
     * @memberof OrderDeliveryDTO
     */
    liftType?: OrderLiftType;
    /**
     * Стоимость подъема на этаж.
     * @type {number}
     * @memberof OrderDeliveryDTO
     */
    liftPrice?: number;
    /**
     * Идентификатор пункта самовывоза, присвоенный магазином.
     * @type {string}
     * @memberof OrderDeliveryDTO
     */
    outletCode?: string;
    /**
     * Формат даты: `ДД-ММ-ГГГГ`.
     * 
     * @type {string}
     * @memberof OrderDeliveryDTO
     */
    outletStorageLimitDate?: string;
    /**
     * 
     * @type {OrderDeliveryDispatchType}
     * @memberof OrderDeliveryDTO
     */
    dispatchType?: OrderDeliveryDispatchType;
    /**
     * Информация для отслеживания перемещений посылки.
     * @type {Array<OrderTrackDTO>}
     * @memberof OrderDeliveryDTO
     */
    tracks?: Array<OrderTrackDTO> | null;
    /**
     * Информация о посылках.
     * @type {Array<OrderShipmentDTO>}
     * @memberof OrderDeliveryDTO
     */
    shipments?: Array<OrderShipmentDTO> | null;
    /**
     * Приблизительная ли дата доставки.
     * @type {boolean}
     * @memberof OrderDeliveryDTO
     */
    estimated?: boolean;
    /**
     * 
     * @type {OrderDeliveryEacType}
     * @memberof OrderDeliveryDTO
     */
    eacType?: OrderDeliveryEacType;
    /**
     * Код подтверждения ЭАПП (для типа `MERCHANT_TO_COURIER`).
     * 
     * @type {string}
     * @memberof OrderDeliveryDTO
     */
    eacCode?: string;
}



/**
 * Check if a given object implements the OrderDeliveryDTO interface.
 */
export function instanceOfOrderDeliveryDTO(value: object): value is OrderDeliveryDTO {
    return true;
}

export function OrderDeliveryDTOFromJSON(json: any): OrderDeliveryDTO {
    return OrderDeliveryDTOFromJSONTyped(json, false);
}

export function OrderDeliveryDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderDeliveryDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'] == null ? undefined : OrderDeliveryTypeFromJSON(json['type']),
        'serviceName': json['serviceName'] == null ? undefined : json['serviceName'],
        'price': json['price'] == null ? undefined : json['price'],
        'deliveryPartnerType': json['deliveryPartnerType'] == null ? undefined : OrderDeliveryPartnerTypeFromJSON(json['deliveryPartnerType']),
        'courier': json['courier'] == null ? undefined : OrderCourierDTOFromJSON(json['courier']),
        'dates': json['dates'] == null ? undefined : OrderDeliveryDatesDTOFromJSON(json['dates']),
        'region': json['region'] == null ? undefined : RegionDTOFromJSON(json['region']),
        'address': json['address'] == null ? undefined : OrderDeliveryAddressDTOFromJSON(json['address']),
        'vat': json['vat'] == null ? undefined : OrderVatTypeFromJSON(json['vat']),
        'deliveryServiceId': json['deliveryServiceId'] == null ? undefined : json['deliveryServiceId'],
        'liftType': json['liftType'] == null ? undefined : OrderLiftTypeFromJSON(json['liftType']),
        'liftPrice': json['liftPrice'] == null ? undefined : json['liftPrice'],
        'outletCode': json['outletCode'] == null ? undefined : json['outletCode'],
        'outletStorageLimitDate': json['outletStorageLimitDate'] == null ? undefined : json['outletStorageLimitDate'],
        'dispatchType': json['dispatchType'] == null ? undefined : OrderDeliveryDispatchTypeFromJSON(json['dispatchType']),
        'tracks': json['tracks'] == null ? undefined : ((json['tracks'] as Array<any>).map(OrderTrackDTOFromJSON)),
        'shipments': json['shipments'] == null ? undefined : ((json['shipments'] as Array<any>).map(OrderShipmentDTOFromJSON)),
        'estimated': json['estimated'] == null ? undefined : json['estimated'],
        'eacType': json['eacType'] == null ? undefined : OrderDeliveryEacTypeFromJSON(json['eacType']),
        'eacCode': json['eacCode'] == null ? undefined : json['eacCode'],
    };
}

export function OrderDeliveryDTOToJSON(value?: OrderDeliveryDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'type': OrderDeliveryTypeToJSON(value['type']),
        'serviceName': value['serviceName'],
        'price': value['price'],
        'deliveryPartnerType': OrderDeliveryPartnerTypeToJSON(value['deliveryPartnerType']),
        'courier': OrderCourierDTOToJSON(value['courier']),
        'dates': OrderDeliveryDatesDTOToJSON(value['dates']),
        'region': RegionDTOToJSON(value['region']),
        'address': OrderDeliveryAddressDTOToJSON(value['address']),
        'vat': OrderVatTypeToJSON(value['vat']),
        'deliveryServiceId': value['deliveryServiceId'],
        'liftType': OrderLiftTypeToJSON(value['liftType']),
        'liftPrice': value['liftPrice'],
        'outletCode': value['outletCode'],
        'outletStorageLimitDate': value['outletStorageLimitDate'],
        'dispatchType': OrderDeliveryDispatchTypeToJSON(value['dispatchType']),
        'tracks': value['tracks'] == null ? undefined : ((value['tracks'] as Array<any>).map(OrderTrackDTOToJSON)),
        'shipments': value['shipments'] == null ? undefined : ((value['shipments'] as Array<any>).map(OrderShipmentDTOToJSON)),
        'estimated': value['estimated'],
        'eacType': OrderDeliveryEacTypeToJSON(value['eacType']),
        'eacCode': value['eacCode'],
    };
}

