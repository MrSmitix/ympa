/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Причины возврата:
 * 
 * * `BAD_QUALITY` — бракованный товар (есть недостатки).
 * 
 * * `DO_NOT_FIT` — товар не подошел.
 * 
 * * `WRONG_ITEM` — привезли не тот товар.
 * 
 * * `DAMAGE_DELIVERY` — товар поврежден при доставке.
 * 
 * * `LOYALTY_FAIL` — невозможно установить виновного в браке/пересорте.
 * 
 * * `CONTENT_FAIL` — ошибочное описание товара по вине Маркета.
 * 
 * * `UNKNOWN` — причина не известна.
 * 
 * @export
 */
export const ReturnDecisionReasonType = {
    BadQuality: 'BAD_QUALITY',
    DoesNotFit: 'DOES_NOT_FIT',
    WrongItem: 'WRONG_ITEM',
    DamageDelivery: 'DAMAGE_DELIVERY',
    LoyaltyFail: 'LOYALTY_FAIL',
    ContentFail: 'CONTENT_FAIL',
    Unknown: 'UNKNOWN'
} as const;
export type ReturnDecisionReasonType = typeof ReturnDecisionReasonType[keyof typeof ReturnDecisionReasonType];


export function instanceOfReturnDecisionReasonType(value: any): boolean {
    for (const key in ReturnDecisionReasonType) {
        if (Object.prototype.hasOwnProperty.call(ReturnDecisionReasonType, key)) {
            if (ReturnDecisionReasonType[key as keyof typeof ReturnDecisionReasonType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function ReturnDecisionReasonTypeFromJSON(json: any): ReturnDecisionReasonType {
    return ReturnDecisionReasonTypeFromJSONTyped(json, false);
}

export function ReturnDecisionReasonTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReturnDecisionReasonType {
    return json as ReturnDecisionReasonType;
}

export function ReturnDecisionReasonTypeToJSON(value?: ReturnDecisionReasonType | null): any {
    return value as any;
}

