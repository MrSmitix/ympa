/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SellingProgramType } from './SellingProgramType';
import {
    SellingProgramTypeFromJSON,
    SellingProgramTypeFromJSONTyped,
    SellingProgramTypeToJSON,
} from './SellingProgramType';
import type { PaymentFrequencyType } from './PaymentFrequencyType';
import {
    PaymentFrequencyTypeFromJSON,
    PaymentFrequencyTypeFromJSONTyped,
    PaymentFrequencyTypeToJSON,
} from './PaymentFrequencyType';

/**
 * Параметры для расчета стоимости услуг.
 * @export
 * @interface CalculateTariffsParametersDTO
 */
export interface CalculateTariffsParametersDTO {
    /**
     * Идентификатор кампании. У пользователя, который выполняет запрос, должен быть доступ к этой кампании.
     * 
     * Используйте параметр `campaignId`, если уже завершили подключение магазина на Маркете. Иначе вернется пустой список.
     * 
     * Обязательный параметр, если не указан параметр `sellingProgram`. Совместное использование параметров приведет к ошибке.
     * 
     * @type {number}
     * @memberof CalculateTariffsParametersDTO
     */
    campaignId?: number;
    /**
     * 
     * @type {SellingProgramType}
     * @memberof CalculateTariffsParametersDTO
     */
    sellingProgram?: SellingProgramType;
    /**
     * 
     * @type {PaymentFrequencyType}
     * @memberof CalculateTariffsParametersDTO
     */
    frequency?: PaymentFrequencyType;
}



/**
 * Check if a given object implements the CalculateTariffsParametersDTO interface.
 */
export function instanceOfCalculateTariffsParametersDTO(value: object): value is CalculateTariffsParametersDTO {
    return true;
}

export function CalculateTariffsParametersDTOFromJSON(json: any): CalculateTariffsParametersDTO {
    return CalculateTariffsParametersDTOFromJSONTyped(json, false);
}

export function CalculateTariffsParametersDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CalculateTariffsParametersDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'campaignId': json['campaignId'] == null ? undefined : json['campaignId'],
        'sellingProgram': json['sellingProgram'] == null ? undefined : SellingProgramTypeFromJSON(json['sellingProgram']),
        'frequency': json['frequency'] == null ? undefined : PaymentFrequencyTypeFromJSON(json['frequency']),
    };
}

export function CalculateTariffsParametersDTOToJSON(value?: CalculateTariffsParametersDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'campaignId': value['campaignId'],
        'sellingProgram': SellingProgramTypeToJSON(value['sellingProgram']),
        'frequency': PaymentFrequencyTypeToJSON(value['frequency']),
    };
}

