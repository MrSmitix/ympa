/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModelOfferDTO } from './ModelOfferDTO';
import {
    ModelOfferDTOFromJSON,
    ModelOfferDTOFromJSONTyped,
    ModelOfferDTOToJSON,
} from './ModelOfferDTO';
import type { ModelPriceDTO } from './ModelPriceDTO';
import {
    ModelPriceDTOFromJSON,
    ModelPriceDTOFromJSONTyped,
    ModelPriceDTOToJSON,
} from './ModelPriceDTO';

/**
 * Модель товара.
 * @export
 * @interface EnrichedModelDTO
 */
export interface EnrichedModelDTO {
    /**
     * Идентификатор модели товара.
     * @type {number}
     * @memberof EnrichedModelDTO
     */
    id?: number;
    /**
     * Название модели товара.
     * @type {string}
     * @memberof EnrichedModelDTO
     */
    name?: string;
    /**
     * 
     * @type {ModelPriceDTO}
     * @memberof EnrichedModelDTO
     */
    prices?: ModelPriceDTO;
    /**
     * Список первых десяти предложений, расположенных на карточке модели.
     * 
     * В ответе на запрос возвращаются предложения различных магазинов. Если есть несколько предложений от одного магазина, в ответе отображается только одно, наиболее релевантное из них.
     * 
     * @type {Array<ModelOfferDTO>}
     * @memberof EnrichedModelDTO
     */
    offers?: Array<ModelOfferDTO> | null;
    /**
     * Суммарное количество предложений в розничных магазинах в регионе. Учитываются все предложения от каждого магазина.
     * @type {number}
     * @memberof EnrichedModelDTO
     */
    offlineOffers?: number;
    /**
     * Суммарное количество предложений в интернет-магазинах в регионе. Учитываются все предложения от каждого магазина.
     * @type {number}
     * @memberof EnrichedModelDTO
     */
    onlineOffers?: number;
}

/**
 * Check if a given object implements the EnrichedModelDTO interface.
 */
export function instanceOfEnrichedModelDTO(value: object): value is EnrichedModelDTO {
    return true;
}

export function EnrichedModelDTOFromJSON(json: any): EnrichedModelDTO {
    return EnrichedModelDTOFromJSONTyped(json, false);
}

export function EnrichedModelDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnrichedModelDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'prices': json['prices'] == null ? undefined : ModelPriceDTOFromJSON(json['prices']),
        'offers': json['offers'] == null ? undefined : ((json['offers'] as Array<any>).map(ModelOfferDTOFromJSON)),
        'offlineOffers': json['offlineOffers'] == null ? undefined : json['offlineOffers'],
        'onlineOffers': json['onlineOffers'] == null ? undefined : json['onlineOffers'],
    };
}

export function EnrichedModelDTOToJSON(value?: EnrichedModelDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'prices': ModelPriceDTOToJSON(value['prices']),
        'offers': value['offers'] == null ? undefined : ((value['offers'] as Array<any>).map(ModelOfferDTOToJSON)),
        'offlineOffers': value['offlineOffers'],
        'onlineOffers': value['onlineOffers'],
    };
}

