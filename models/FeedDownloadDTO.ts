/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FeedStatusType } from './FeedStatusType';
import {
    FeedStatusTypeFromJSON,
    FeedStatusTypeFromJSONTyped,
    FeedStatusTypeToJSON,
} from './FeedStatusType';
import type { FeedDownloadErrorDTO } from './FeedDownloadErrorDTO';
import {
    FeedDownloadErrorDTOFromJSON,
    FeedDownloadErrorDTOFromJSONTyped,
    FeedDownloadErrorDTOToJSON,
} from './FeedDownloadErrorDTO';

/**
 * Информация о последней загрузке прайс-листа.
 * @export
 * @interface FeedDownloadDTO
 */
export interface FeedDownloadDTO {
    /**
     * 
     * @type {FeedStatusType}
     * @memberof FeedDownloadDTO
     */
    status?: FeedStatusType;
    /**
     * 
     * @type {FeedDownloadErrorDTO}
     * @memberof FeedDownloadDTO
     */
    error?: FeedDownloadErrorDTO;
}



/**
 * Check if a given object implements the FeedDownloadDTO interface.
 */
export function instanceOfFeedDownloadDTO(value: object): value is FeedDownloadDTO {
    return true;
}

export function FeedDownloadDTOFromJSON(json: any): FeedDownloadDTO {
    return FeedDownloadDTOFromJSONTyped(json, false);
}

export function FeedDownloadDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeedDownloadDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'] == null ? undefined : FeedStatusTypeFromJSON(json['status']),
        'error': json['error'] == null ? undefined : FeedDownloadErrorDTOFromJSON(json['error']),
    };
}

export function FeedDownloadDTOToJSON(value?: FeedDownloadDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'status': FeedStatusTypeToJSON(value['status']),
        'error': FeedDownloadErrorDTOToJSON(value['error']),
    };
}

