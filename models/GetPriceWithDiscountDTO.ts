/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CurrencyType } from './CurrencyType';
import {
    CurrencyTypeFromJSON,
    CurrencyTypeFromJSONTyped,
    CurrencyTypeToJSON,
} from './CurrencyType';

/**
 * Цена с указанием скидки и времени последнего обновления.
 * @export
 * @interface GetPriceWithDiscountDTO
 */
export interface GetPriceWithDiscountDTO {
    /**
     * Значение.
     * @type {number}
     * @memberof GetPriceWithDiscountDTO
     */
    value: number;
    /**
     * 
     * @type {CurrencyType}
     * @memberof GetPriceWithDiscountDTO
     */
    currencyId: CurrencyType;
    /**
     * Цена до скидки.
     * 
     * Число должно быть целым. Вы можете указать цену со скидкой от 5 до 99%.
     * 
     * Передавайте этот параметр при каждом обновлении цены, если предоставляете скидку на товар.
     * 
     * @type {number}
     * @memberof GetPriceWithDiscountDTO
     */
    discountBase?: number;
    /**
     * Время последнего обновления.
     * @type {Date}
     * @memberof GetPriceWithDiscountDTO
     */
    updatedAt: Date;
}



/**
 * Check if a given object implements the GetPriceWithDiscountDTO interface.
 */
export function instanceOfGetPriceWithDiscountDTO(value: object): value is GetPriceWithDiscountDTO {
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('currencyId' in value) || value['currencyId'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function GetPriceWithDiscountDTOFromJSON(json: any): GetPriceWithDiscountDTO {
    return GetPriceWithDiscountDTOFromJSONTyped(json, false);
}

export function GetPriceWithDiscountDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetPriceWithDiscountDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'value': json['value'],
        'currencyId': CurrencyTypeFromJSON(json['currencyId']),
        'discountBase': json['discountBase'] == null ? undefined : json['discountBase'],
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function GetPriceWithDiscountDTOToJSON(value?: GetPriceWithDiscountDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'value': value['value'],
        'currencyId': CurrencyTypeToJSON(value['currencyId']),
        'discountBase': value['discountBase'],
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}

