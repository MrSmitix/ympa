/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlacementType } from './PlacementType';
import {
    PlacementTypeFromJSON,
    PlacementTypeFromJSONTyped,
    PlacementTypeToJSON,
} from './PlacementType';

/**
 * Данные, необходимые для генерации отчета: идентификатор магазина, период, за который нужен отчет, а также фильтры.
 * 
 * @export
 * @interface GenerateUnitedNettingReportRequest
 */
export interface GenerateUnitedNettingReportRequest {
    /**
     * Идентификатор бизнеса.
     * @type {number}
     * @memberof GenerateUnitedNettingReportRequest
     */
    businessId: number;
    /**
     * {% note warning "" %}
     * 
     * Этот параметр устарел. Не используйте его.
     * 
     * {% endnote %}
     * 
     * Начало периода, включительно.
     * 
     * @type {Date}
     * @memberof GenerateUnitedNettingReportRequest
     */
    dateTimeFrom?: Date;
    /**
     * {% note warning "" %}
     * 
     * Этот параметр устарел. Не используйте его.
     * 
     * {% endnote %}
     * 
     * Конец периода, включительно. Максимальный период — 1 год.
     * 
     * @type {Date}
     * @memberof GenerateUnitedNettingReportRequest
     */
    dateTimeTo?: Date;
    /**
     * Начало периода, включительно.
     * @type {Date}
     * @memberof GenerateUnitedNettingReportRequest
     */
    dateFrom?: Date;
    /**
     * Конец периода, включительно. Максимальный период — 1 год.
     * @type {Date}
     * @memberof GenerateUnitedNettingReportRequest
     */
    dateTo?: Date;
    /**
     * Номер платежного поручения.
     * @type {number}
     * @memberof GenerateUnitedNettingReportRequest
     */
    bankOrderId?: number;
    /**
     * Дата платежного поручения.
     * @type {Date}
     * @memberof GenerateUnitedNettingReportRequest
     */
    bankOrderDateTime?: Date;
    /**
     * Список моделей, которые нужны в отчете.
     * 
     * @type {Array<PlacementType>}
     * @memberof GenerateUnitedNettingReportRequest
     */
    placementPrograms?: Array<PlacementType> | null;
    /**
     * Список ИНН, которые нужны в отчете.
     * @type {Array<string>}
     * @memberof GenerateUnitedNettingReportRequest
     */
    inns?: Array<string> | null;
    /**
     * Список магазинов, которые нужны в отчете.
     * @type {Array<number>}
     * @memberof GenerateUnitedNettingReportRequest
     */
    campaignIds?: Array<number> | null;
}

/**
 * Check if a given object implements the GenerateUnitedNettingReportRequest interface.
 */
export function instanceOfGenerateUnitedNettingReportRequest(value: object): value is GenerateUnitedNettingReportRequest {
    if (!('businessId' in value) || value['businessId'] === undefined) return false;
    return true;
}

export function GenerateUnitedNettingReportRequestFromJSON(json: any): GenerateUnitedNettingReportRequest {
    return GenerateUnitedNettingReportRequestFromJSONTyped(json, false);
}

export function GenerateUnitedNettingReportRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenerateUnitedNettingReportRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'businessId': json['businessId'],
        'dateTimeFrom': json['dateTimeFrom'] == null ? undefined : (new Date(json['dateTimeFrom'])),
        'dateTimeTo': json['dateTimeTo'] == null ? undefined : (new Date(json['dateTimeTo'])),
        'dateFrom': json['dateFrom'] == null ? undefined : (new Date(json['dateFrom'])),
        'dateTo': json['dateTo'] == null ? undefined : (new Date(json['dateTo'])),
        'bankOrderId': json['bankOrderId'] == null ? undefined : json['bankOrderId'],
        'bankOrderDateTime': json['bankOrderDateTime'] == null ? undefined : (new Date(json['bankOrderDateTime'])),
        'placementPrograms': json['placementPrograms'] == null ? undefined : ((json['placementPrograms'] as Array<any>).map(PlacementTypeFromJSON)),
        'inns': json['inns'] == null ? undefined : json['inns'],
        'campaignIds': json['campaignIds'] == null ? undefined : json['campaignIds'],
    };
}

export function GenerateUnitedNettingReportRequestToJSON(value?: GenerateUnitedNettingReportRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'businessId': value['businessId'],
        'dateTimeFrom': value['dateTimeFrom'] == null ? undefined : ((value['dateTimeFrom']).toISOString()),
        'dateTimeTo': value['dateTimeTo'] == null ? undefined : ((value['dateTimeTo']).toISOString()),
        'dateFrom': value['dateFrom'] == null ? undefined : ((value['dateFrom']).toISOString().substring(0,10)),
        'dateTo': value['dateTo'] == null ? undefined : ((value['dateTo']).toISOString().substring(0,10)),
        'bankOrderId': value['bankOrderId'],
        'bankOrderDateTime': value['bankOrderDateTime'] == null ? undefined : ((value['bankOrderDateTime']).toISOString()),
        'placementPrograms': value['placementPrograms'] == null ? undefined : ((value['placementPrograms'] as Array<any>).map(PlacementTypeToJSON)),
        'inns': value['inns'],
        'campaignIds': value['campaignIds'],
    };
}

