/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WarningPromoOfferUpdateDTO } from './WarningPromoOfferUpdateDTO';
import {
    WarningPromoOfferUpdateDTOFromJSON,
    WarningPromoOfferUpdateDTOFromJSONTyped,
    WarningPromoOfferUpdateDTOToJSON,
} from './WarningPromoOfferUpdateDTO';
import type { RejectedPromoOfferUpdateDTO } from './RejectedPromoOfferUpdateDTO';
import {
    RejectedPromoOfferUpdateDTOFromJSON,
    RejectedPromoOfferUpdateDTOFromJSONTyped,
    RejectedPromoOfferUpdateDTOToJSON,
} from './RejectedPromoOfferUpdateDTO';

/**
 * Ошибки и предупреждения, которые появились при добавлении товаров в акцию.
 * @export
 * @interface UpdatePromoOffersResultDTO
 */
export interface UpdatePromoOffersResultDTO {
    /**
     * Изменения, которые были отклонены.
     * 
     * Возвращается, только если есть отклоненные изменения.
     * 
     * @type {Array<RejectedPromoOfferUpdateDTO>}
     * @memberof UpdatePromoOffersResultDTO
     */
    rejectedOffers?: Array<RejectedPromoOfferUpdateDTO> | null;
    /**
     * Изменения, по которым есть предупреждения. Они информируют о возможных проблемах. Информация о товарах обновится.
     * 
     * Возвращается, только если есть предупреждения.
     * 
     * @type {Array<WarningPromoOfferUpdateDTO>}
     * @memberof UpdatePromoOffersResultDTO
     */
    warningOffers?: Array<WarningPromoOfferUpdateDTO> | null;
}

/**
 * Check if a given object implements the UpdatePromoOffersResultDTO interface.
 */
export function instanceOfUpdatePromoOffersResultDTO(value: object): value is UpdatePromoOffersResultDTO {
    return true;
}

export function UpdatePromoOffersResultDTOFromJSON(json: any): UpdatePromoOffersResultDTO {
    return UpdatePromoOffersResultDTOFromJSONTyped(json, false);
}

export function UpdatePromoOffersResultDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatePromoOffersResultDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'rejectedOffers': json['rejectedOffers'] == null ? undefined : ((json['rejectedOffers'] as Array<any>).map(RejectedPromoOfferUpdateDTOFromJSON)),
        'warningOffers': json['warningOffers'] == null ? undefined : ((json['warningOffers'] as Array<any>).map(WarningPromoOfferUpdateDTOFromJSON)),
    };
}

export function UpdatePromoOffersResultDTOToJSON(value?: UpdatePromoOffersResultDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'rejectedOffers': value['rejectedOffers'] == null ? undefined : ((value['rejectedOffers'] as Array<any>).map(RejectedPromoOfferUpdateDTOToJSON)),
        'warningOffers': value['warningOffers'] == null ? undefined : ((value['warningOffers'] as Array<any>).map(WarningPromoOfferUpdateDTOToJSON)),
    };
}

