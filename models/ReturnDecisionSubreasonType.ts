/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Детали причин возврата:
 *   * `DO_NOT_FIT`:
 *     * `USER_DID_NOT_LIKE` — товар не понравился.
 *     * `USER_CHANGED_MIND` — передумал покупать.
 *     * `DELIVERED_TOO_LONG` — длительный срок доставки, поэтому передумал.
 * 
 *   * `BAD_QUALITY`:
 *     * `BAD_PACKAGE` — упаковка товара была нарушена.
 *     * `DAMAGED` — царапины, сколы.
 *     * `NOT_WORKING` — не включается / не работает.
 *     * `INCOMPLETENESS` — некомплект (не хватает детали в наборе, к товару).
 * 
 *   * `WRONG_ITEM`:
 *     * `WRONG_ITEM` — не тот товар.
 *     * `WRONG_COLOR` — не соответствует по цвету.
 *     * `DID_NOT_MATCH_DESCRIPTION` — не соответствует заявленным характеристикам/описанию.
 * 
 * @export
 */
export const ReturnDecisionSubreasonType = {
    UserDidNotLike: 'USER_DID_NOT_LIKE',
    UserChangedMind: 'USER_CHANGED_MIND',
    DeliveredTooLong: 'DELIVERED_TOO_LONG',
    BadPackage: 'BAD_PACKAGE',
    Damaged: 'DAMAGED',
    NotWorking: 'NOT_WORKING',
    Incompleteness: 'INCOMPLETENESS',
    WrongItem: 'WRONG_ITEM',
    WrongColor: 'WRONG_COLOR',
    DidNotMatchDescription: 'DID_NOT_MATCH_DESCRIPTION',
    Unknown: 'UNKNOWN'
} as const;
export type ReturnDecisionSubreasonType = typeof ReturnDecisionSubreasonType[keyof typeof ReturnDecisionSubreasonType];


export function instanceOfReturnDecisionSubreasonType(value: any): boolean {
    for (const key in ReturnDecisionSubreasonType) {
        if (Object.prototype.hasOwnProperty.call(ReturnDecisionSubreasonType, key)) {
            if (ReturnDecisionSubreasonType[key as keyof typeof ReturnDecisionSubreasonType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function ReturnDecisionSubreasonTypeFromJSON(json: any): ReturnDecisionSubreasonType {
    return ReturnDecisionSubreasonTypeFromJSONTyped(json, false);
}

export function ReturnDecisionSubreasonTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReturnDecisionSubreasonType {
    return json as ReturnDecisionSubreasonType;
}

export function ReturnDecisionSubreasonTypeToJSON(value?: ReturnDecisionSubreasonType | null): any {
    return value as any;
}

