/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Статус передачи возврата:
 * 
 * * `CREATED` — возврат создан.
 * 
 * * `RECEIVED` — принят у покупателя.
 * 
 * * `IN_TRANSIT` — возврат в пути.
 * 
 * * `READY_FOR_PICKUP` — возврат готов к выдаче магазину.
 * 
 * * `PICKED` — возврат выдан магазину.
 * 
 * * `LOST` — возврат утерян при транспортировке.
 * 
 * * `CANCELLED` — возврат отменен.
 * 
 * * `FULFILMENT_RECEIVED` — возврат принят на складе Маркета.
 * 
 * * `PREPARED_FOR_UTILIZATION` — возврат передан в утилизацию.
 * 
 * * `UTILIZED` — возврат утилизирован.
 * 
 * @export
 */
export const ReturnShipmentStatusType = {
    Created: 'CREATED',
    Received: 'RECEIVED',
    InTransit: 'IN_TRANSIT',
    ReadyForPickup: 'READY_FOR_PICKUP',
    Picked: 'PICKED',
    Lost: 'LOST',
    Expired: 'EXPIRED',
    Cancelled: 'CANCELLED',
    FulfilmentReceived: 'FULFILMENT_RECEIVED',
    PreparedForUtilization: 'PREPARED_FOR_UTILIZATION',
    NotInDemand: 'NOT_IN_DEMAND',
    Utilized: 'UTILIZED',
    ReadyForExpropriation: 'READY_FOR_EXPROPRIATION',
    ReceivedForExpropriation: 'RECEIVED_FOR_EXPROPRIATION'
} as const;
export type ReturnShipmentStatusType = typeof ReturnShipmentStatusType[keyof typeof ReturnShipmentStatusType];


export function instanceOfReturnShipmentStatusType(value: any): boolean {
    for (const key in ReturnShipmentStatusType) {
        if (Object.prototype.hasOwnProperty.call(ReturnShipmentStatusType, key)) {
            if (ReturnShipmentStatusType[key as keyof typeof ReturnShipmentStatusType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function ReturnShipmentStatusTypeFromJSON(json: any): ReturnShipmentStatusType {
    return ReturnShipmentStatusTypeFromJSONTyped(json, false);
}

export function ReturnShipmentStatusTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReturnShipmentStatusType {
    return json as ReturnShipmentStatusType;
}

export function ReturnShipmentStatusTypeToJSON(value?: ReturnShipmentStatusType | null): any {
    return value as any;
}

