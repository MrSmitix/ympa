/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Информация об остатках товара.
 * 
 * @export
 * @interface UpdateStockItemDTO
 */
export interface UpdateStockItemDTO {
    /**
     * Количество доступного товара.
     * 
     * @type {number}
     * @memberof UpdateStockItemDTO
     */
    count: number;
    /**
     * Дата и время последнего обновления информации об остатках.
     * <br><br>
     * Если вы не передали параметр `updatedAt`, используется текущее время.
     * <br><br>
     * Формат даты и времени: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.
     * 
     * @type {Date}
     * @memberof UpdateStockItemDTO
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the UpdateStockItemDTO interface.
 */
export function instanceOfUpdateStockItemDTO(value: object): value is UpdateStockItemDTO {
    if (!('count' in value) || value['count'] === undefined) return false;
    return true;
}

export function UpdateStockItemDTOFromJSON(json: any): UpdateStockItemDTO {
    return UpdateStockItemDTOFromJSONTyped(json, false);
}

export function UpdateStockItemDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateStockItemDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'],
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function UpdateStockItemDTOToJSON(value?: UpdateStockItemDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'count': value['count'],
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

