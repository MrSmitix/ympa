/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrderBoxLayoutPartialCountDTO } from './OrderBoxLayoutPartialCountDTO';
import {
    OrderBoxLayoutPartialCountDTOFromJSON,
    OrderBoxLayoutPartialCountDTOFromJSONTyped,
    OrderBoxLayoutPartialCountDTOToJSON,
} from './OrderBoxLayoutPartialCountDTO';
import type { BriefOrderItemInstanceDTO } from './BriefOrderItemInstanceDTO';
import {
    BriefOrderItemInstanceDTOFromJSON,
    BriefOrderItemInstanceDTOFromJSONTyped,
    BriefOrderItemInstanceDTOToJSON,
} from './BriefOrderItemInstanceDTO';

/**
 * Информация о товаре в коробке.
 * @export
 * @interface OrderBoxLayoutItemDTO
 */
export interface OrderBoxLayoutItemDTO {
    /**
     * Идентификатор товара в заказе.
     * 
     * {% cut "Где его взять" %}
     * 
     * Идентификатор приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`.
     * 
     * {% endcut %}
     *  
     * 
     * @type {number}
     * @memberof OrderBoxLayoutItemDTO
     */
    id: number;
    /**
     * Количество единиц товара в коробке.
     * 
     * Используйте это поле, если в коробке поедут целые товары, не разделенные на части. Не используйте это поле одновременно с `partialCount`.
     * 
     * @type {number}
     * @memberof OrderBoxLayoutItemDTO
     */
    fullCount?: number;
    /**
     * 
     * @type {OrderBoxLayoutPartialCountDTO}
     * @memberof OrderBoxLayoutItemDTO
     */
    partialCount?: OrderBoxLayoutPartialCountDTO;
    /**
     * Переданные вами коды маркировки.
     * @type {Array<BriefOrderItemInstanceDTO>}
     * @memberof OrderBoxLayoutItemDTO
     */
    instances?: Array<BriefOrderItemInstanceDTO> | null;
}

/**
 * Check if a given object implements the OrderBoxLayoutItemDTO interface.
 */
export function instanceOfOrderBoxLayoutItemDTO(value: object): value is OrderBoxLayoutItemDTO {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function OrderBoxLayoutItemDTOFromJSON(json: any): OrderBoxLayoutItemDTO {
    return OrderBoxLayoutItemDTOFromJSONTyped(json, false);
}

export function OrderBoxLayoutItemDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderBoxLayoutItemDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'fullCount': json['fullCount'] == null ? undefined : json['fullCount'],
        'partialCount': json['partialCount'] == null ? undefined : OrderBoxLayoutPartialCountDTOFromJSON(json['partialCount']),
        'instances': json['instances'] == null ? undefined : ((json['instances'] as Array<any>).map(BriefOrderItemInstanceDTOFromJSON)),
    };
}

export function OrderBoxLayoutItemDTOToJSON(value?: OrderBoxLayoutItemDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'fullCount': value['fullCount'],
        'partialCount': OrderBoxLayoutPartialCountDTOToJSON(value['partialCount']),
        'instances': value['instances'] == null ? undefined : ((value['instances'] as Array<any>).map(BriefOrderItemInstanceDTOToJSON)),
    };
}

