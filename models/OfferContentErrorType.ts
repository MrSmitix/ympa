/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Типы ошибок:
 * 
 * * `OFFER_NOT_FOUND` — такого товара нет в каталоге.
 * * `UNKNOWN_CATEGORY` — указана неизвестная категория.
 * * `CATEGORY_MISMATCH` — указана категория, которая не совпадает с категорией товара.
 * * `UNKNOWN_PARAMETER` — передана характеристика, которой нет среди характеристик категории.
 * * `UNEXPECTED_BOOLEAN_VALUE` — вместо boolean-значения передано что-то другое.
 * * `NUMBER_FORMAT` — передана строка, не обозначающая число, вместо числа.
 * * `VALUE_BLANK` — передано пустое значение.
 * * `INVALID_UNIT_ID` — передана единица измерения, недопустимая для характеристики.
 * * `INVALID_GROUP_ID_LENGTH` — в названии превышено допустимое значение символов — 255.
 * * `INVALID_GROUP_ID_CHARACTERS` — переданы [недопустимые символы](*ascii-code).
 * 
 * @export
 */
export const OfferContentErrorType = {
    OfferNotFound: 'OFFER_NOT_FOUND',
    UnknownCategory: 'UNKNOWN_CATEGORY',
    CategoryMismatch: 'CATEGORY_MISMATCH',
    UnknownParameter: 'UNKNOWN_PARAMETER',
    UnexpectedBooleanValue: 'UNEXPECTED_BOOLEAN_VALUE',
    NumberFormat: 'NUMBER_FORMAT',
    ValueBlank: 'VALUE_BLANK',
    InvalidUnitId: 'INVALID_UNIT_ID',
    InvalidGroupIdLength: 'INVALID_GROUP_ID_LENGTH',
    InvalidGroupIdCharacters: 'INVALID_GROUP_ID_CHARACTERS'
} as const;
export type OfferContentErrorType = typeof OfferContentErrorType[keyof typeof OfferContentErrorType];


export function instanceOfOfferContentErrorType(value: any): boolean {
    for (const key in OfferContentErrorType) {
        if (Object.prototype.hasOwnProperty.call(OfferContentErrorType, key)) {
            if (OfferContentErrorType[key as keyof typeof OfferContentErrorType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function OfferContentErrorTypeFromJSON(json: any): OfferContentErrorType {
    return OfferContentErrorTypeFromJSONTyped(json, false);
}

export function OfferContentErrorTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): OfferContentErrorType {
    return json as OfferContentErrorType;
}

export function OfferContentErrorTypeToJSON(value?: OfferContentErrorType | null): any {
    return value as any;
}

