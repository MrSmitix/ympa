/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FulfillmentWarehouseDTO } from './FulfillmentWarehouseDTO';
import {
    FulfillmentWarehouseDTOFromJSON,
    FulfillmentWarehouseDTOFromJSONTyped,
    FulfillmentWarehouseDTOToJSON,
} from './FulfillmentWarehouseDTO';

/**
 * Список складов Маркета (FBY).
 * @export
 * @interface FulfillmentWarehousesDTO
 */
export interface FulfillmentWarehousesDTO {
    /**
     * Список складов Маркета (FBY).
     * @type {Array<FulfillmentWarehouseDTO>}
     * @memberof FulfillmentWarehousesDTO
     */
    warehouses: Array<FulfillmentWarehouseDTO>;
}

/**
 * Check if a given object implements the FulfillmentWarehousesDTO interface.
 */
export function instanceOfFulfillmentWarehousesDTO(value: object): value is FulfillmentWarehousesDTO {
    if (!('warehouses' in value) || value['warehouses'] === undefined) return false;
    return true;
}

export function FulfillmentWarehousesDTOFromJSON(json: any): FulfillmentWarehousesDTO {
    return FulfillmentWarehousesDTOFromJSONTyped(json, false);
}

export function FulfillmentWarehousesDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): FulfillmentWarehousesDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'warehouses': ((json['warehouses'] as Array<any>).map(FulfillmentWarehouseDTOFromJSON)),
    };
}

export function FulfillmentWarehousesDTOToJSON(value?: FulfillmentWarehousesDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'warehouses': ((value['warehouses'] as Array<any>).map(FulfillmentWarehouseDTOToJSON)),
    };
}

