/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ShipmentActionType } from './ShipmentActionType';
import {
    ShipmentActionTypeFromJSON,
    ShipmentActionTypeFromJSONTyped,
    ShipmentActionTypeToJSON,
} from './ShipmentActionType';
import type { ShipmentStatusChangeDTO } from './ShipmentStatusChangeDTO';
import {
    ShipmentStatusChangeDTOFromJSON,
    ShipmentStatusChangeDTOFromJSONTyped,
    ShipmentStatusChangeDTOToJSON,
} from './ShipmentStatusChangeDTO';

/**
 * Информация об отгрузке.
 * @export
 * @interface ExtensionShipmentDTO
 */
export interface ExtensionShipmentDTO {
    /**
     * 
     * @type {ShipmentStatusChangeDTO}
     * @memberof ExtensionShipmentDTO
     */
    currentStatus?: ShipmentStatusChangeDTO;
    /**
     * Доступные действия над отгрузкой.
     * @type {Set<ShipmentActionType>}
     * @memberof ExtensionShipmentDTO
     */
    availableActions: Set<ShipmentActionType>;
}

/**
 * Check if a given object implements the ExtensionShipmentDTO interface.
 */
export function instanceOfExtensionShipmentDTO(value: object): value is ExtensionShipmentDTO {
    if (!('availableActions' in value) || value['availableActions'] === undefined) return false;
    return true;
}

export function ExtensionShipmentDTOFromJSON(json: any): ExtensionShipmentDTO {
    return ExtensionShipmentDTOFromJSONTyped(json, false);
}

export function ExtensionShipmentDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExtensionShipmentDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'currentStatus': json['currentStatus'] == null ? undefined : ShipmentStatusChangeDTOFromJSON(json['currentStatus']),
        'availableActions': (new Set((json['availableActions'] as Array<any>).map(ShipmentActionTypeFromJSON))),
    };
}

export function ExtensionShipmentDTOToJSON(value?: ExtensionShipmentDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'currentStatus': ShipmentStatusChangeDTOToJSON(value['currentStatus']),
        'availableActions': (Array.from(value['availableActions'] as Set<any>).map(ShipmentActionTypeToJSON)),
    };
}

