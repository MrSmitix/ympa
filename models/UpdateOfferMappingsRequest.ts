/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UpdateOfferMappingDTO } from './UpdateOfferMappingDTO';
import {
    UpdateOfferMappingDTOFromJSON,
    UpdateOfferMappingDTOFromJSONTyped,
    UpdateOfferMappingDTOToJSON,
} from './UpdateOfferMappingDTO';

/**
 * 
 * @export
 * @interface UpdateOfferMappingsRequest
 */
export interface UpdateOfferMappingsRequest {
    /**
     * Перечень товаров, которые нужно добавить или обновить.
     * @type {Array<UpdateOfferMappingDTO>}
     * @memberof UpdateOfferMappingsRequest
     */
    offerMappings: Array<UpdateOfferMappingDTO>;
    /**
     * Будут использоваться только переданные вами изображения товаров.
     * 
     * Значение по умолчанию — `false`. Если вы хотите заменить изображения, которые добавил Маркет, передайте значение `true`.
     * 
     * @type {boolean}
     * @memberof UpdateOfferMappingsRequest
     */
    onlyPartnerMediaContent?: boolean;
}

/**
 * Check if a given object implements the UpdateOfferMappingsRequest interface.
 */
export function instanceOfUpdateOfferMappingsRequest(value: object): value is UpdateOfferMappingsRequest {
    if (!('offerMappings' in value) || value['offerMappings'] === undefined) return false;
    return true;
}

export function UpdateOfferMappingsRequestFromJSON(json: any): UpdateOfferMappingsRequest {
    return UpdateOfferMappingsRequestFromJSONTyped(json, false);
}

export function UpdateOfferMappingsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateOfferMappingsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'offerMappings': ((json['offerMappings'] as Array<any>).map(UpdateOfferMappingDTOFromJSON)),
        'onlyPartnerMediaContent': json['onlyPartnerMediaContent'] == null ? undefined : json['onlyPartnerMediaContent'],
    };
}

export function UpdateOfferMappingsRequestToJSON(value?: UpdateOfferMappingsRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'offerMappings': ((value['offerMappings'] as Array<any>).map(UpdateOfferMappingDTOToJSON)),
        'onlyPartnerMediaContent': value['onlyPartnerMediaContent'],
    };
}

