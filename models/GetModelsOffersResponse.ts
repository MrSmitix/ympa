/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EnrichedModelDTO } from './EnrichedModelDTO';
import {
    EnrichedModelDTOFromJSON,
    EnrichedModelDTOFromJSONTyped,
    EnrichedModelDTOToJSON,
} from './EnrichedModelDTO';
import type { CurrencyType } from './CurrencyType';
import {
    CurrencyTypeFromJSON,
    CurrencyTypeFromJSONTyped,
    CurrencyTypeToJSON,
} from './CurrencyType';

/**
 * Ответ на запрос списка предложений для моделей.
 * @export
 * @interface GetModelsOffersResponse
 */
export interface GetModelsOffersResponse {
    /**
     * Список моделей товаров.
     * @type {Array<EnrichedModelDTO>}
     * @memberof GetModelsOffersResponse
     */
    models: Array<EnrichedModelDTO>;
    /**
     * 
     * @type {CurrencyType}
     * @memberof GetModelsOffersResponse
     */
    currency?: CurrencyType;
    /**
     * Идентификатор региона, для которого выводится информация о предложениях модели (доставляемых в этот регион).
     * 
     * Информацию о регионе по идентификатору можно получить с помощью запроса [GET regions/{regionId}](../../reference/regions/searchRegionsById.md).
     * 
     * @type {number}
     * @memberof GetModelsOffersResponse
     */
    regionId?: number;
}



/**
 * Check if a given object implements the GetModelsOffersResponse interface.
 */
export function instanceOfGetModelsOffersResponse(value: object): value is GetModelsOffersResponse {
    if (!('models' in value) || value['models'] === undefined) return false;
    return true;
}

export function GetModelsOffersResponseFromJSON(json: any): GetModelsOffersResponse {
    return GetModelsOffersResponseFromJSONTyped(json, false);
}

export function GetModelsOffersResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetModelsOffersResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'models': ((json['models'] as Array<any>).map(EnrichedModelDTOFromJSON)),
        'currency': json['currency'] == null ? undefined : CurrencyTypeFromJSON(json['currency']),
        'regionId': json['regionId'] == null ? undefined : json['regionId'],
    };
}

export function GetModelsOffersResponseToJSON(value?: GetModelsOffersResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'models': ((value['models'] as Array<any>).map(EnrichedModelDTOToJSON)),
        'currency': CurrencyTypeToJSON(value['currency']),
        'regionId': value['regionId'],
    };
}

