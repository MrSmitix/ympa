/* tslint:disable */
/* eslint-disable */
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FieldStateType } from './FieldStateType';
import {
    FieldStateTypeFromJSON,
    FieldStateTypeFromJSONTyped,
    FieldStateTypeToJSON,
} from './FieldStateType';
import type { PriceCompetitivenessType } from './PriceCompetitivenessType';
import {
    PriceCompetitivenessTypeFromJSON,
    PriceCompetitivenessTypeFromJSONTyped,
    PriceCompetitivenessTypeToJSON,
} from './PriceCompetitivenessType';

/**
 * 
 * @export
 * @interface GetOfferRecommendationsRequest
 */
export interface GetOfferRecommendationsRequest {
    /**
     * Идентификаторы товаров, информация о которых нужна. ⚠️ Не используйте это поле одновременно с остальными фильтрами. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.
     * @type {Array<string>}
     * @memberof GetOfferRecommendationsRequest
     */
    offerIds?: Array<string> | null;
    /**
     * 
     * @type {FieldStateType}
     * @memberof GetOfferRecommendationsRequest
     */
    cofinancePriceFilter?: FieldStateType;
    /**
     * 
     * @type {FieldStateType}
     * @memberof GetOfferRecommendationsRequest
     */
    recommendedCofinancePriceFilter?: FieldStateType;
    /**
     * 
     * @type {PriceCompetitivenessType}
     * @memberof GetOfferRecommendationsRequest
     */
    competitivenessFilter?: PriceCompetitivenessType;
}



/**
 * Check if a given object implements the GetOfferRecommendationsRequest interface.
 */
export function instanceOfGetOfferRecommendationsRequest(value: object): value is GetOfferRecommendationsRequest {
    return true;
}

export function GetOfferRecommendationsRequestFromJSON(json: any): GetOfferRecommendationsRequest {
    return GetOfferRecommendationsRequestFromJSONTyped(json, false);
}

export function GetOfferRecommendationsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetOfferRecommendationsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'offerIds': json['offerIds'] == null ? undefined : json['offerIds'],
        'cofinancePriceFilter': json['cofinancePriceFilter'] == null ? undefined : FieldStateTypeFromJSON(json['cofinancePriceFilter']),
        'recommendedCofinancePriceFilter': json['recommendedCofinancePriceFilter'] == null ? undefined : FieldStateTypeFromJSON(json['recommendedCofinancePriceFilter']),
        'competitivenessFilter': json['competitivenessFilter'] == null ? undefined : PriceCompetitivenessTypeFromJSON(json['competitivenessFilter']),
    };
}

export function GetOfferRecommendationsRequestToJSON(value?: GetOfferRecommendationsRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'offerIds': value['offerIds'],
        'cofinancePriceFilter': FieldStateTypeToJSON(value['cofinancePriceFilter']),
        'recommendedCofinancePriceFilter': FieldStateTypeToJSON(value['recommendedCofinancePriceFilter']),
        'competitivenessFilter': PriceCompetitivenessTypeToJSON(value['competitivenessFilter']),
    };
}

