<?php
/**
 * GoodsFeedbackStatisticsDTOTest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Tests\Model
 * @author   openapi-generator contributors
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Server\Tests\Model;

use OpenAPI\Server\Model\GoodsFeedbackStatisticsDTO;
use PHPUnit\Framework\MockObject\MockObject;
use PHPUnit\Framework\TestCase;

/**
 * GoodsFeedbackStatisticsDTOTest Class Doc Comment
 *
 * @category    Class
 * @description Статистическая информация по отзыву.
 * @package     OpenAPI\Server\Tests\Model
 * @author      openapi-generator contributors
 * @link        https://github.com/openapitools/openapi-generator
 * @coversDefaultClass \OpenAPI\Server\Model\GoodsFeedbackStatisticsDTO
 */
class GoodsFeedbackStatisticsDTOTest extends TestCase
{
    protected GoodsFeedbackStatisticsDTO|MockObject $object;

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
        $this->object = $this->getMockBuilder(GoodsFeedbackStatisticsDTO::class)->getMockForAbstractClass();
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * @group integration
     * @small
     */
    public function testTestClassExists(): void
    {
        $this->assertTrue(class_exists(GoodsFeedbackStatisticsDTO::class));
        $this->assertInstanceOf(GoodsFeedbackStatisticsDTO::class, $this->object);
    }

    /**
     * Test attribute "rating"
     *
     * @group unit
     * @small
     */
    public function testPropertyRating(): void
    {
        $this->markTestSkipped('Test for property rating not implemented');
    }

    /**
     * Test attribute "commentsCount"
     *
     * @group unit
     * @small
     */
    public function testPropertyCommentsCount(): void
    {
        $this->markTestSkipped('Test for property commentsCount not implemented');
    }

    /**
     * Test attribute "recommended"
     *
     * @group unit
     * @small
     */
    public function testPropertyRecommended(): void
    {
        $this->markTestSkipped('Test for property recommended not implemented');
    }

    /**
     * Test attribute "paidAmount"
     *
     * @group unit
     * @small
     */
    public function testPropertyPaidAmount(): void
    {
        $this->markTestSkipped('Test for property paidAmount not implemented');
    }
}
