<?php
/**
 * FullOutletDTOTest
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Tests\Model
 * @author   openapi-generator contributors
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Server\Tests\Model;

use OpenAPI\Server\Model\FullOutletDTO;
use PHPUnit\Framework\MockObject\MockObject;
use PHPUnit\Framework\TestCase;

/**
 * FullOutletDTOTest Class Doc Comment
 *
 * @category    Class
 * @description Информация о точке продаж.
 * @package     OpenAPI\Server\Tests\Model
 * @author      openapi-generator contributors
 * @link        https://github.com/openapitools/openapi-generator
 * @coversDefaultClass \OpenAPI\Server\Model\FullOutletDTO
 */
class FullOutletDTOTest extends TestCase
{
    protected FullOutletDTO|MockObject $object;

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
        $this->object = $this->getMockBuilder(FullOutletDTO::class)->getMockForAbstractClass();
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * @group integration
     * @small
     */
    public function testTestClassExists(): void
    {
        $this->assertTrue(class_exists(FullOutletDTO::class));
        $this->assertInstanceOf(FullOutletDTO::class, $this->object);
    }

    /**
     * Test attribute "name"
     *
     * @group unit
     * @small
     */
    public function testPropertyName(): void
    {
        $this->markTestSkipped('Test for property name not implemented');
    }

    /**
     * Test attribute "type"
     *
     * @group unit
     * @small
     */
    public function testPropertyType(): void
    {
        $this->markTestSkipped('Test for property type not implemented');
    }

    /**
     * Test attribute "coords"
     *
     * @group unit
     * @small
     */
    public function testPropertyCoords(): void
    {
        $this->markTestSkipped('Test for property coords not implemented');
    }

    /**
     * Test attribute "isMain"
     *
     * @group unit
     * @small
     */
    public function testPropertyIsMain(): void
    {
        $this->markTestSkipped('Test for property isMain not implemented');
    }

    /**
     * Test attribute "shopOutletCode"
     *
     * @group unit
     * @small
     */
    public function testPropertyShopOutletCode(): void
    {
        $this->markTestSkipped('Test for property shopOutletCode not implemented');
    }

    /**
     * Test attribute "visibility"
     *
     * @group unit
     * @small
     */
    public function testPropertyVisibility(): void
    {
        $this->markTestSkipped('Test for property visibility not implemented');
    }

    /**
     * Test attribute "address"
     *
     * @group unit
     * @small
     */
    public function testPropertyAddress(): void
    {
        $this->markTestSkipped('Test for property address not implemented');
    }

    /**
     * Test attribute "phones"
     *
     * @group unit
     * @small
     */
    public function testPropertyPhones(): void
    {
        $this->markTestSkipped('Test for property phones not implemented');
    }

    /**
     * Test attribute "workingSchedule"
     *
     * @group unit
     * @small
     */
    public function testPropertyWorkingSchedule(): void
    {
        $this->markTestSkipped('Test for property workingSchedule not implemented');
    }

    /**
     * Test attribute "deliveryRules"
     *
     * @group unit
     * @small
     */
    public function testPropertyDeliveryRules(): void
    {
        $this->markTestSkipped('Test for property deliveryRules not implemented');
    }

    /**
     * Test attribute "storagePeriod"
     *
     * @group unit
     * @small
     */
    public function testPropertyStoragePeriod(): void
    {
        $this->markTestSkipped('Test for property storagePeriod not implemented');
    }

    /**
     * Test attribute "id"
     *
     * @group unit
     * @small
     */
    public function testPropertyId(): void
    {
        $this->markTestSkipped('Test for property id not implemented');
    }

    /**
     * Test attribute "status"
     *
     * @group unit
     * @small
     */
    public function testPropertyStatus(): void
    {
        $this->markTestSkipped('Test for property status not implemented');
    }

    /**
     * Test attribute "region"
     *
     * @group unit
     * @small
     */
    public function testPropertyRegion(): void
    {
        $this->markTestSkipped('Test for property region not implemented');
    }

    /**
     * Test attribute "shopOutletId"
     *
     * @group unit
     * @small
     */
    public function testPropertyShopOutletId(): void
    {
        $this->markTestSkipped('Test for property shopOutletId not implemented');
    }

    /**
     * Test attribute "workingTime"
     *
     * @group unit
     * @small
     */
    public function testPropertyWorkingTime(): void
    {
        $this->markTestSkipped('Test for property workingTime not implemented');
    }

    /**
     * Test attribute "moderationReason"
     *
     * @group unit
     * @small
     */
    public function testPropertyModerationReason(): void
    {
        $this->markTestSkipped('Test for property moderationReason not implemented');
    }
}
