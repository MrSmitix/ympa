# NOTE: This file is auto generated by the openapi generator program.
# https://github.com/openapitools/openapi-generator
# Do not edit the class manually.

# bids
open_api_server_bids_getbidsinfoforbusiness:
    path:     /businesses/{businessId}/bids/info
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.bids::getBidsInfoForBusinessAction
    requirements:
        businessId: '\d+'

open_api_server_bids_getbidsrecommendations:
    path:     /businesses/{businessId}/bids/recommendations
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.bids::getBidsRecommendationsAction
    requirements:
        businessId: '\d+'

open_api_server_bids_putbidsforbusiness:
    path:     /businesses/{businessId}/bids
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.bids::putBidsForBusinessAction
    requirements:
        businessId: '\d+'

open_api_server_bids_putbidsforcampaign:
    path:     /campaigns/{campaignId}/bids
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.bids::putBidsForCampaignAction
    requirements:
        campaignId: '\d+'

# businessOfferMappings
open_api_server_businessOfferMappings_addofferstoarchive:
    path:     /businesses/{businessId}/offer-mappings/archive
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.businessOfferMappings::addOffersToArchiveAction
    requirements:
        businessId: '\d+'

open_api_server_businessOfferMappings_deleteoffers:
    path:     /businesses/{businessId}/offer-mappings/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.businessOfferMappings::deleteOffersAction
    requirements:
        businessId: '\d+'

open_api_server_businessOfferMappings_deleteoffersfromarchive:
    path:     /businesses/{businessId}/offer-mappings/unarchive
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.businessOfferMappings::deleteOffersFromArchiveAction
    requirements:
        businessId: '\d+'

open_api_server_businessOfferMappings_getoffermappings:
    path:     /businesses/{businessId}/offer-mappings
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.businessOfferMappings::getOfferMappingsAction
    requirements:
        businessId: '\d+'

open_api_server_businessOfferMappings_getsuggestedoffermappings:
    path:     /businesses/{businessId}/offer-mappings/suggestions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.businessOfferMappings::getSuggestedOfferMappingsAction
    requirements:
        businessId: '\d+'

open_api_server_businessOfferMappings_updateoffermappings:
    path:     /businesses/{businessId}/offer-mappings/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.businessOfferMappings::updateOfferMappingsAction
    requirements:
        businessId: '\d+'

# businesses
open_api_server_businesses_getbusinesssettings:
    path:     /businesses/{businessId}/settings
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.businesses::getBusinessSettingsAction
    requirements:
        businessId: '\d+'

# campaigns
open_api_server_campaigns_getcampaign:
    path:     /campaigns/{campaignId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.campaigns::getCampaignAction
    requirements:
        campaignId: '\d+'

open_api_server_campaigns_getcampaignlogins:
    path:     /campaigns/{campaignId}/logins
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.campaigns::getCampaignLoginsAction
    requirements:
        campaignId: '\d+'

open_api_server_campaigns_getcampaignregion:
    path:     /campaigns/{campaignId}/region
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.campaigns::getCampaignRegionAction
    requirements:
        campaignId: '\d+'

open_api_server_campaigns_getcampaignsettings:
    path:     /campaigns/{campaignId}/settings
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.campaigns::getCampaignSettingsAction
    requirements:
        campaignId: '\d+'

open_api_server_campaigns_getcampaigns:
    path:     /campaigns
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.campaigns::getCampaignsAction

open_api_server_campaigns_getcampaignsbylogin:
    path:     /campaigns/by_login/{login}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.campaigns::getCampaignsByLoginAction
    requirements:
        login: '[a-z0-9]+'

# categories
open_api_server_categories_getcategoriesmaxsalequantum:
    path:     /categories/max-sale-quantum
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.categories::getCategoriesMaxSaleQuantumAction

open_api_server_categories_getcategoriestree:
    path:     /categories/tree
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.categories::getCategoriesTreeAction

# chats
open_api_server_chats_createchat:
    path:     /businesses/{businessId}/chats/new
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.chats::createChatAction
    requirements:
        businessId: '\d+'

open_api_server_chats_getchathistory:
    path:     /businesses/{businessId}/chats/history
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.chats::getChatHistoryAction
    requirements:
        businessId: '\d+'

open_api_server_chats_getchats:
    path:     /businesses/{businessId}/chats
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.chats::getChatsAction
    requirements:
        businessId: '\d+'

open_api_server_chats_sendfiletochat:
    path:     /businesses/{businessId}/chats/file/send
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.chats::sendFileToChatAction
    requirements:
        businessId: '\d+'

open_api_server_chats_sendmessagetochat:
    path:     /businesses/{businessId}/chats/message
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.chats::sendMessageToChatAction
    requirements:
        businessId: '\d+'

# content
open_api_server_content_getcategorycontentparameters:
    path:     /category/{categoryId}/parameters
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.content::getCategoryContentParametersAction
    requirements:
        categoryId: '\d+'

open_api_server_content_getoffercardscontentstatus:
    path:     /businesses/{businessId}/offer-cards
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.content::getOfferCardsContentStatusAction
    requirements:
        businessId: '\d+'

open_api_server_content_updateoffercontent:
    path:     /businesses/{businessId}/offer-cards/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.content::updateOfferContentAction
    requirements:
        businessId: '\d+'

# dbs
open_api_server_dbs_acceptordercancellation:
    path:     /campaigns/{campaignId}/orders/{orderId}/cancellation/accept
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.dbs::acceptOrderCancellationAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_dbs_addhiddenoffers:
    path:     /campaigns/{campaignId}/hidden-offers
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::addHiddenOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_addofferstoarchive:
    path:     /businesses/{businessId}/offer-mappings/archive
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::addOffersToArchiveAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_calculatetariffs:
    path:     /tariffs/calculate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::calculateTariffsAction

open_api_server_dbs_confirmbusinessprices:
    path:     /businesses/{businessId}/price-quarantine/confirm
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::confirmBusinessPricesAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_confirmcampaignprices:
    path:     /campaigns/{campaignId}/price-quarantine/confirm
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::confirmCampaignPricesAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_createchat:
    path:     /businesses/{businessId}/chats/new
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::createChatAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_createoutlet:
    path:     /campaigns/{campaignId}/outlets
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::createOutletAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_deletecampaignoffers:
    path:     /campaigns/{campaignId}/offers/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::deleteCampaignOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_deletegoodsfeedbackcomment:
    path:     /businesses/{businessId}/goods-feedback/comments/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::deleteGoodsFeedbackCommentAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_deletehiddenoffers:
    path:     /campaigns/{campaignId}/hidden-offers/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::deleteHiddenOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_deleteoffers:
    path:     /businesses/{businessId}/offer-mappings/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::deleteOffersAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_deleteoffersfromarchive:
    path:     /businesses/{businessId}/offer-mappings/unarchive
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::deleteOffersFromArchiveAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_deleteoutlet:
    path:     /campaigns/{campaignId}/outlets/{outletId}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.dbs::deleteOutletAction
    requirements:
        campaignId: '\d+'
        outletId: '\d+'

open_api_server_dbs_deleteoutletlicenses:
    path:     /campaigns/{campaignId}/outlets/licenses
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.dbs::deleteOutletLicensesAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_deletepromooffers:
    path:     /businesses/{businessId}/promos/offers/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::deletePromoOffersAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_generateboostconsolidatedreport:
    path:     /reports/boost-consolidated/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::generateBoostConsolidatedReportAction

open_api_server_dbs_generatecompetitorspositionreport:
    path:     /reports/competitors-position/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::generateCompetitorsPositionReportAction

open_api_server_dbs_generategoodsfeedbackreport:
    path:     /reports/goods-feedback/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::generateGoodsFeedbackReportAction

open_api_server_dbs_generatemassorderlabelsreport:
    path:     /reports/documents/labels/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::generateMassOrderLabelsReportAction

open_api_server_dbs_generateorderlabel:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::generateOrderLabelAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        shipmentId: '\d+'
        boxId: '\d+'

open_api_server_dbs_generateorderlabels:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/labels
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::generateOrderLabelsAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_dbs_generatepricesreport:
    path:     /reports/prices/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::generatePricesReportAction

open_api_server_dbs_generateshelfsstatisticsreport:
    path:     /reports/shelf-statistics/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::generateShelfsStatisticsReportAction

open_api_server_dbs_generateshowssalesreport:
    path:     /reports/shows-sales/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::generateShowsSalesReportAction

open_api_server_dbs_generatestocksonwarehousesreport:
    path:     /reports/stocks-on-warehouses/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::generateStocksOnWarehousesReportAction

open_api_server_dbs_generateunitedmarketplaceservicesreport:
    path:     /reports/united-marketplace-services/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::generateUnitedMarketplaceServicesReportAction

open_api_server_dbs_generateunitednettingreport:
    path:     /reports/united-netting/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::generateUnitedNettingReportAction

open_api_server_dbs_generateunitedordersreport:
    path:     /reports/united-orders/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::generateUnitedOrdersReportAction

open_api_server_dbs_getalloffers:
    path:     /campaigns/{campaignId}/offers/all
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getAllOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getbidsinfoforbusiness:
    path:     /businesses/{businessId}/bids/info
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getBidsInfoForBusinessAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_getbidsrecommendations:
    path:     /businesses/{businessId}/bids/recommendations
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getBidsRecommendationsAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_getbusinessquarantineoffers:
    path:     /businesses/{businessId}/price-quarantine
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getBusinessQuarantineOffersAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_getbusinesssettings:
    path:     /businesses/{businessId}/settings
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getBusinessSettingsAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_getcampaign:
    path:     /campaigns/{campaignId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getCampaignAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getcampaignlogins:
    path:     /campaigns/{campaignId}/logins
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getCampaignLoginsAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getcampaignoffers:
    path:     /campaigns/{campaignId}/offers
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getCampaignOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getcampaignquarantineoffers:
    path:     /campaigns/{campaignId}/price-quarantine
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getCampaignQuarantineOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getcampaignregion:
    path:     /campaigns/{campaignId}/region
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getCampaignRegionAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getcampaignsettings:
    path:     /campaigns/{campaignId}/settings
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getCampaignSettingsAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getcampaigns:
    path:     /campaigns
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getCampaignsAction

open_api_server_dbs_getcampaignsbylogin:
    path:     /campaigns/by_login/{login}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getCampaignsByLoginAction
    requirements:
        login: '[a-z0-9]+'

open_api_server_dbs_getcategoriesmaxsalequantum:
    path:     /categories/max-sale-quantum
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getCategoriesMaxSaleQuantumAction

open_api_server_dbs_getcategoriestree:
    path:     /categories/tree
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getCategoriesTreeAction

open_api_server_dbs_getcategorycontentparameters:
    path:     /category/{categoryId}/parameters
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getCategoryContentParametersAction
    requirements:
        categoryId: '\d+'

open_api_server_dbs_getchathistory:
    path:     /businesses/{businessId}/chats/history
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getChatHistoryAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_getchats:
    path:     /businesses/{businessId}/chats
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getChatsAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_getdeliveryservices:
    path:     /delivery/services
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getDeliveryServicesAction

open_api_server_dbs_getfeed:
    path:     /campaigns/{campaignId}/feeds/{feedId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getFeedAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_dbs_getfeedindexlogs:
    path:     /campaigns/{campaignId}/feeds/{feedId}/index-logs
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getFeedIndexLogsAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_dbs_getfeedbackandcommentupdates:
    path:     /campaigns/{campaignId}/feedback/updates
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getFeedbackAndCommentUpdatesAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getfeeds:
    path:     /campaigns/{campaignId}/feeds
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getFeedsAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getgoodsfeedbackcomments:
    path:     /businesses/{businessId}/goods-feedback/comments
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getGoodsFeedbackCommentsAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_getgoodsfeedbacks:
    path:     /businesses/{businessId}/goods-feedback
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getGoodsFeedbacksAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_getgoodsstats:
    path:     /campaigns/{campaignId}/stats/skus
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getGoodsStatsAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_gethiddenoffers:
    path:     /campaigns/{campaignId}/hidden-offers
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getHiddenOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getmodel:
    path:     /models/{modelId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getModelAction
    requirements:
        modelId: '\d+'

open_api_server_dbs_getmodeloffers:
    path:     /models/{modelId}/offers
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getModelOffersAction
    requirements:
        modelId: '\d+'

open_api_server_dbs_getmodels:
    path:     /models
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getModelsAction

open_api_server_dbs_getmodelsoffers:
    path:     /models/offers
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getModelsOffersAction

open_api_server_dbs_getoffercardscontentstatus:
    path:     /businesses/{businessId}/offer-cards
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getOfferCardsContentStatusAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_getoffermappingentries:
    path:     /campaigns/{campaignId}/offer-mapping-entries
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getOfferMappingEntriesAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getoffermappings:
    path:     /businesses/{businessId}/offer-mappings
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getOfferMappingsAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_getofferrecommendations:
    path:     /businesses/{businessId}/offers/recommendations
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getOfferRecommendationsAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_getoffers:
    path:     /campaigns/{campaignId}/offers
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getorder:
    path:     /campaigns/{campaignId}/orders/{orderId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getOrderAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_dbs_getorderbusinessbuyerinfo:
    path:     /campaigns/{campaignId}/orders/{orderId}/business-buyer
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getOrderBusinessBuyerInfoAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_dbs_getorderbusinessdocumentsinfo:
    path:     /campaigns/{campaignId}/orders/{orderId}/documents
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getOrderBusinessDocumentsInfoAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_dbs_getorderbuyerinfo:
    path:     /campaigns/{campaignId}/orders/{orderId}/buyer
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getOrderBuyerInfoAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_dbs_getorderlabelsdata:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/labels/data
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getOrderLabelsDataAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_dbs_getorders:
    path:     /campaigns/{campaignId}/orders
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getOrdersAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getordersstats:
    path:     /campaigns/{campaignId}/stats/orders
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getOrdersStatsAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getoutlet:
    path:     /campaigns/{campaignId}/outlets/{outletId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getOutletAction
    requirements:
        campaignId: '\d+'
        outletId: '\d+'

open_api_server_dbs_getoutletlicenses:
    path:     /campaigns/{campaignId}/outlets/licenses
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getOutletLicensesAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getoutlets:
    path:     /campaigns/{campaignId}/outlets
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getOutletsAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getprices:
    path:     /campaigns/{campaignId}/offer-prices
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getPricesAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getpricesbyofferids:
    path:     /campaigns/{campaignId}/offer-prices
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getPricesByOfferIdsAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getpromooffers:
    path:     /businesses/{businessId}/promos/offers
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getPromoOffersAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_getpromos:
    path:     /businesses/{businessId}/promos
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getPromosAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_getqualityratingdetails:
    path:     /campaigns/{campaignId}/ratings/quality/details
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getQualityRatingDetailsAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getqualityratings:
    path:     /businesses/{businessId}/ratings/quality
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getQualityRatingsAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_getreportinfo:
    path:     /reports/info/{reportId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getReportInfoAction
    requirements:
        reportId: '[a-z0-9]+'

open_api_server_dbs_getreturn:
    path:     /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getReturnAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        returnId: '\d+'

open_api_server_dbs_getreturnapplication:
    path:     /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getReturnApplicationAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        returnId: '\d+'

open_api_server_dbs_getreturnphoto:
    path:     /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getReturnPhotoAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        returnId: '\d+'
        itemId: '\d+'
        imageHash: '[a-z0-9]+'

open_api_server_dbs_getreturns:
    path:     /campaigns/{campaignId}/returns
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getReturnsAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getstocks:
    path:     /campaigns/{campaignId}/offers/stocks
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getStocksAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getsuggestedoffermappingentries:
    path:     /campaigns/{campaignId}/offer-mapping-entries/suggestions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getSuggestedOfferMappingEntriesAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getsuggestedoffermappings:
    path:     /businesses/{businessId}/offer-mappings/suggestions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getSuggestedOfferMappingsAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_getsuggestedprices:
    path:     /campaigns/{campaignId}/offer-prices/suggestions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::getSuggestedPricesAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_getwarehouses:
    path:     /businesses/{businessId}/warehouses
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::getWarehousesAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_provideorderdigitalcodes:
    path:     /campaigns/{campaignId}/orders/{orderId}/deliverDigitalGoods
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::provideOrderDigitalCodesAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_dbs_provideorderitemidentifiers:
    path:     /campaigns/{campaignId}/orders/{orderId}/identifiers
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.dbs::provideOrderItemIdentifiersAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_dbs_putbidsforbusiness:
    path:     /businesses/{businessId}/bids
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.dbs::putBidsForBusinessAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_putbidsforcampaign:
    path:     /campaigns/{campaignId}/bids
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.dbs::putBidsForCampaignAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_refreshfeed:
    path:     /campaigns/{campaignId}/feeds/{feedId}/refresh
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::refreshFeedAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_dbs_searchmodels:
    path:     /models
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::searchModelsAction

open_api_server_dbs_searchregionchildren:
    path:     /regions/{regionId}/children
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::searchRegionChildrenAction
    requirements:
        regionId: '\d+'

open_api_server_dbs_searchregionsbyid:
    path:     /regions/{regionId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::searchRegionsByIdAction
    requirements:
        regionId: '\d+'

open_api_server_dbs_searchregionsbyname:
    path:     /regions
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.dbs::searchRegionsByNameAction

open_api_server_dbs_sendfiletochat:
    path:     /businesses/{businessId}/chats/file/send
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::sendFileToChatAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_sendmessagetochat:
    path:     /businesses/{businessId}/chats/message
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::sendMessageToChatAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_setfeedparams:
    path:     /campaigns/{campaignId}/feeds/{feedId}/params
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::setFeedParamsAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_dbs_setorderboxlayout:
    path:     /campaigns/{campaignId}/orders/{orderId}/boxes
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.dbs::setOrderBoxLayoutAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_dbs_setorderdeliverydate:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/date
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.dbs::setOrderDeliveryDateAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_dbs_setorderdeliverytrackcode:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/track
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::setOrderDeliveryTrackCodeAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_dbs_setordershipmentboxes:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.dbs::setOrderShipmentBoxesAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        shipmentId: '\d+'

open_api_server_dbs_setreturndecision:
    path:     /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::setReturnDecisionAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        returnId: '\d+'

open_api_server_dbs_skipgoodsfeedbacksreaction:
    path:     /businesses/{businessId}/goods-feedback/skip-reaction
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::skipGoodsFeedbacksReactionAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_submitreturndecision:
    path:     /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::submitReturnDecisionAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        returnId: '\d+'

open_api_server_dbs_updatebusinessprices:
    path:     /businesses/{businessId}/offer-prices/updates
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::updateBusinessPricesAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_updatecampaignoffers:
    path:     /campaigns/{campaignId}/offers/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::updateCampaignOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_updategoodsfeedbackcomment:
    path:     /businesses/{businessId}/goods-feedback/comments/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::updateGoodsFeedbackCommentAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_updateoffercontent:
    path:     /businesses/{businessId}/offer-cards/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::updateOfferContentAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_updateoffermappingentries:
    path:     /campaigns/{campaignId}/offer-mapping-entries/updates
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::updateOfferMappingEntriesAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_updateoffermappings:
    path:     /businesses/{businessId}/offer-mappings/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::updateOfferMappingsAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_updateorderitems:
    path:     /campaigns/{campaignId}/orders/{orderId}/items
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.dbs::updateOrderItemsAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_dbs_updateorderstatus:
    path:     /campaigns/{campaignId}/orders/{orderId}/status
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.dbs::updateOrderStatusAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_dbs_updateorderstatuses:
    path:     /campaigns/{campaignId}/orders/status-update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::updateOrderStatusesAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_updateorderstoragelimit:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/storage-limit
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.dbs::updateOrderStorageLimitAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_dbs_updateoutlet:
    path:     /campaigns/{campaignId}/outlets/{outletId}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.dbs::updateOutletAction
    requirements:
        campaignId: '\d+'
        outletId: '\d+'

open_api_server_dbs_updateoutletlicenses:
    path:     /campaigns/{campaignId}/outlets/licenses
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::updateOutletLicensesAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_updateprices:
    path:     /campaigns/{campaignId}/offer-prices/updates
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::updatePricesAction
    requirements:
        campaignId: '\d+'

open_api_server_dbs_updatepromooffers:
    path:     /businesses/{businessId}/promos/offers/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.dbs::updatePromoOffersAction
    requirements:
        businessId: '\d+'

open_api_server_dbs_updatestocks:
    path:     /campaigns/{campaignId}/offers/stocks
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.dbs::updateStocksAction
    requirements:
        campaignId: '\d+'

# deliveryServices
open_api_server_deliveryServices_getdeliveryservices:
    path:     /delivery/services
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.deliveryServices::getDeliveryServicesAction

# express
open_api_server_express_addhiddenoffers:
    path:     /campaigns/{campaignId}/hidden-offers
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::addHiddenOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_express_addofferstoarchive:
    path:     /businesses/{businessId}/offer-mappings/archive
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::addOffersToArchiveAction
    requirements:
        businessId: '\d+'

open_api_server_express_calculatetariffs:
    path:     /tariffs/calculate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::calculateTariffsAction

open_api_server_express_confirmbusinessprices:
    path:     /businesses/{businessId}/price-quarantine/confirm
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::confirmBusinessPricesAction
    requirements:
        businessId: '\d+'

open_api_server_express_confirmcampaignprices:
    path:     /campaigns/{campaignId}/price-quarantine/confirm
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::confirmCampaignPricesAction
    requirements:
        campaignId: '\d+'

open_api_server_express_createchat:
    path:     /businesses/{businessId}/chats/new
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::createChatAction
    requirements:
        businessId: '\d+'

open_api_server_express_deletecampaignoffers:
    path:     /campaigns/{campaignId}/offers/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::deleteCampaignOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_express_deletegoodsfeedbackcomment:
    path:     /businesses/{businessId}/goods-feedback/comments/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::deleteGoodsFeedbackCommentAction
    requirements:
        businessId: '\d+'

open_api_server_express_deletehiddenoffers:
    path:     /campaigns/{campaignId}/hidden-offers/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::deleteHiddenOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_express_deleteoffers:
    path:     /businesses/{businessId}/offer-mappings/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::deleteOffersAction
    requirements:
        businessId: '\d+'

open_api_server_express_deleteoffersfromarchive:
    path:     /businesses/{businessId}/offer-mappings/unarchive
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::deleteOffersFromArchiveAction
    requirements:
        businessId: '\d+'

open_api_server_express_deletepromooffers:
    path:     /businesses/{businessId}/promos/offers/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::deletePromoOffersAction
    requirements:
        businessId: '\d+'

open_api_server_express_generateboostconsolidatedreport:
    path:     /reports/boost-consolidated/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::generateBoostConsolidatedReportAction

open_api_server_express_generatecompetitorspositionreport:
    path:     /reports/competitors-position/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::generateCompetitorsPositionReportAction

open_api_server_express_generategoodsfeedbackreport:
    path:     /reports/goods-feedback/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::generateGoodsFeedbackReportAction

open_api_server_express_generategoodsrealizationreport:
    path:     /reports/goods-realization/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::generateGoodsRealizationReportAction

open_api_server_express_generatemassorderlabelsreport:
    path:     /reports/documents/labels/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::generateMassOrderLabelsReportAction

open_api_server_express_generateorderlabel:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::generateOrderLabelAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        shipmentId: '\d+'
        boxId: '\d+'

open_api_server_express_generateorderlabels:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/labels
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::generateOrderLabelsAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_express_generatepricesreport:
    path:     /reports/prices/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::generatePricesReportAction

open_api_server_express_generateshelfsstatisticsreport:
    path:     /reports/shelf-statistics/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::generateShelfsStatisticsReportAction

open_api_server_express_generateshowssalesreport:
    path:     /reports/shows-sales/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::generateShowsSalesReportAction

open_api_server_express_generatestocksonwarehousesreport:
    path:     /reports/stocks-on-warehouses/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::generateStocksOnWarehousesReportAction

open_api_server_express_generateunitedmarketplaceservicesreport:
    path:     /reports/united-marketplace-services/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::generateUnitedMarketplaceServicesReportAction

open_api_server_express_generateunitednettingreport:
    path:     /reports/united-netting/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::generateUnitedNettingReportAction

open_api_server_express_generateunitedordersreport:
    path:     /reports/united-orders/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::generateUnitedOrdersReportAction

open_api_server_express_getalloffers:
    path:     /campaigns/{campaignId}/offers/all
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getAllOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getbidsinfoforbusiness:
    path:     /businesses/{businessId}/bids/info
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getBidsInfoForBusinessAction
    requirements:
        businessId: '\d+'

open_api_server_express_getbidsrecommendations:
    path:     /businesses/{businessId}/bids/recommendations
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getBidsRecommendationsAction
    requirements:
        businessId: '\d+'

open_api_server_express_getbusinessquarantineoffers:
    path:     /businesses/{businessId}/price-quarantine
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getBusinessQuarantineOffersAction
    requirements:
        businessId: '\d+'

open_api_server_express_getbusinesssettings:
    path:     /businesses/{businessId}/settings
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getBusinessSettingsAction
    requirements:
        businessId: '\d+'

open_api_server_express_getcampaign:
    path:     /campaigns/{campaignId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getCampaignAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getcampaignlogins:
    path:     /campaigns/{campaignId}/logins
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getCampaignLoginsAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getcampaignoffers:
    path:     /campaigns/{campaignId}/offers
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getCampaignOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getcampaignquarantineoffers:
    path:     /campaigns/{campaignId}/price-quarantine
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getCampaignQuarantineOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getcampaignregion:
    path:     /campaigns/{campaignId}/region
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getCampaignRegionAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getcampaignsettings:
    path:     /campaigns/{campaignId}/settings
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getCampaignSettingsAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getcampaigns:
    path:     /campaigns
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getCampaignsAction

open_api_server_express_getcampaignsbylogin:
    path:     /campaigns/by_login/{login}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getCampaignsByLoginAction
    requirements:
        login: '[a-z0-9]+'

open_api_server_express_getcategoriesmaxsalequantum:
    path:     /categories/max-sale-quantum
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getCategoriesMaxSaleQuantumAction

open_api_server_express_getcategoriestree:
    path:     /categories/tree
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getCategoriesTreeAction

open_api_server_express_getcategorycontentparameters:
    path:     /category/{categoryId}/parameters
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getCategoryContentParametersAction
    requirements:
        categoryId: '\d+'

open_api_server_express_getchathistory:
    path:     /businesses/{businessId}/chats/history
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getChatHistoryAction
    requirements:
        businessId: '\d+'

open_api_server_express_getchats:
    path:     /businesses/{businessId}/chats
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getChatsAction
    requirements:
        businessId: '\d+'

open_api_server_express_getdeliveryservices:
    path:     /delivery/services
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getDeliveryServicesAction

open_api_server_express_getfeed:
    path:     /campaigns/{campaignId}/feeds/{feedId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getFeedAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_express_getfeedindexlogs:
    path:     /campaigns/{campaignId}/feeds/{feedId}/index-logs
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getFeedIndexLogsAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_express_getfeedbackandcommentupdates:
    path:     /campaigns/{campaignId}/feedback/updates
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getFeedbackAndCommentUpdatesAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getfeeds:
    path:     /campaigns/{campaignId}/feeds
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getFeedsAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getgoodsfeedbackcomments:
    path:     /businesses/{businessId}/goods-feedback/comments
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getGoodsFeedbackCommentsAction
    requirements:
        businessId: '\d+'

open_api_server_express_getgoodsfeedbacks:
    path:     /businesses/{businessId}/goods-feedback
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getGoodsFeedbacksAction
    requirements:
        businessId: '\d+'

open_api_server_express_getgoodsstats:
    path:     /campaigns/{campaignId}/stats/skus
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getGoodsStatsAction
    requirements:
        campaignId: '\d+'

open_api_server_express_gethiddenoffers:
    path:     /campaigns/{campaignId}/hidden-offers
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getHiddenOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getoffercardscontentstatus:
    path:     /businesses/{businessId}/offer-cards
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getOfferCardsContentStatusAction
    requirements:
        businessId: '\d+'

open_api_server_express_getoffermappingentries:
    path:     /campaigns/{campaignId}/offer-mapping-entries
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getOfferMappingEntriesAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getoffermappings:
    path:     /businesses/{businessId}/offer-mappings
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getOfferMappingsAction
    requirements:
        businessId: '\d+'

open_api_server_express_getofferrecommendations:
    path:     /businesses/{businessId}/offers/recommendations
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getOfferRecommendationsAction
    requirements:
        businessId: '\d+'

open_api_server_express_getoffers:
    path:     /campaigns/{campaignId}/offers
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getorder:
    path:     /campaigns/{campaignId}/orders/{orderId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getOrderAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_express_getorderbusinessbuyerinfo:
    path:     /campaigns/{campaignId}/orders/{orderId}/business-buyer
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getOrderBusinessBuyerInfoAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_express_getorderbusinessdocumentsinfo:
    path:     /campaigns/{campaignId}/orders/{orderId}/documents
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getOrderBusinessDocumentsInfoAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_express_getorderlabelsdata:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/labels/data
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getOrderLabelsDataAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_express_getorders:
    path:     /campaigns/{campaignId}/orders
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getOrdersAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getordersstats:
    path:     /campaigns/{campaignId}/stats/orders
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getOrdersStatsAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getprices:
    path:     /campaigns/{campaignId}/offer-prices
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getPricesAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getpricesbyofferids:
    path:     /campaigns/{campaignId}/offer-prices
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getPricesByOfferIdsAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getpromooffers:
    path:     /businesses/{businessId}/promos/offers
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getPromoOffersAction
    requirements:
        businessId: '\d+'

open_api_server_express_getpromos:
    path:     /businesses/{businessId}/promos
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getPromosAction
    requirements:
        businessId: '\d+'

open_api_server_express_getqualityratingdetails:
    path:     /campaigns/{campaignId}/ratings/quality/details
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getQualityRatingDetailsAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getqualityratings:
    path:     /businesses/{businessId}/ratings/quality
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getQualityRatingsAction
    requirements:
        businessId: '\d+'

open_api_server_express_getreportinfo:
    path:     /reports/info/{reportId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getReportInfoAction
    requirements:
        reportId: '[a-z0-9]+'

open_api_server_express_getreturn:
    path:     /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getReturnAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        returnId: '\d+'

open_api_server_express_getreturnapplication:
    path:     /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getReturnApplicationAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        returnId: '\d+'

open_api_server_express_getreturnphoto:
    path:     /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getReturnPhotoAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        returnId: '\d+'
        itemId: '\d+'
        imageHash: '[a-z0-9]+'

open_api_server_express_getreturns:
    path:     /campaigns/{campaignId}/returns
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getReturnsAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getstocks:
    path:     /campaigns/{campaignId}/offers/stocks
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getStocksAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getsuggestedoffermappingentries:
    path:     /campaigns/{campaignId}/offer-mapping-entries/suggestions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getSuggestedOfferMappingEntriesAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getsuggestedoffermappings:
    path:     /businesses/{businessId}/offer-mappings/suggestions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getSuggestedOfferMappingsAction
    requirements:
        businessId: '\d+'

open_api_server_express_getsuggestedprices:
    path:     /campaigns/{campaignId}/offer-prices/suggestions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::getSuggestedPricesAction
    requirements:
        campaignId: '\d+'

open_api_server_express_getwarehouses:
    path:     /businesses/{businessId}/warehouses
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::getWarehousesAction
    requirements:
        businessId: '\d+'

open_api_server_express_provideorderitemidentifiers:
    path:     /campaigns/{campaignId}/orders/{orderId}/identifiers
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.express::provideOrderItemIdentifiersAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_express_putbidsforbusiness:
    path:     /businesses/{businessId}/bids
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.express::putBidsForBusinessAction
    requirements:
        businessId: '\d+'

open_api_server_express_putbidsforcampaign:
    path:     /campaigns/{campaignId}/bids
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.express::putBidsForCampaignAction
    requirements:
        campaignId: '\d+'

open_api_server_express_refreshfeed:
    path:     /campaigns/{campaignId}/feeds/{feedId}/refresh
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::refreshFeedAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_express_searchregionchildren:
    path:     /regions/{regionId}/children
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::searchRegionChildrenAction
    requirements:
        regionId: '\d+'

open_api_server_express_searchregionsbyid:
    path:     /regions/{regionId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::searchRegionsByIdAction
    requirements:
        regionId: '\d+'

open_api_server_express_searchregionsbyname:
    path:     /regions
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.express::searchRegionsByNameAction

open_api_server_express_sendfiletochat:
    path:     /businesses/{businessId}/chats/file/send
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::sendFileToChatAction
    requirements:
        businessId: '\d+'

open_api_server_express_sendmessagetochat:
    path:     /businesses/{businessId}/chats/message
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::sendMessageToChatAction
    requirements:
        businessId: '\d+'

open_api_server_express_setfeedparams:
    path:     /campaigns/{campaignId}/feeds/{feedId}/params
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::setFeedParamsAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_express_setorderboxlayout:
    path:     /campaigns/{campaignId}/orders/{orderId}/boxes
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.express::setOrderBoxLayoutAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_express_setordershipmentboxes:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.express::setOrderShipmentBoxesAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        shipmentId: '\d+'

open_api_server_express_skipgoodsfeedbacksreaction:
    path:     /businesses/{businessId}/goods-feedback/skip-reaction
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::skipGoodsFeedbacksReactionAction
    requirements:
        businessId: '\d+'

open_api_server_express_updatebusinessprices:
    path:     /businesses/{businessId}/offer-prices/updates
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::updateBusinessPricesAction
    requirements:
        businessId: '\d+'

open_api_server_express_updatecampaignoffers:
    path:     /campaigns/{campaignId}/offers/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::updateCampaignOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_express_updategoodsfeedbackcomment:
    path:     /businesses/{businessId}/goods-feedback/comments/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::updateGoodsFeedbackCommentAction
    requirements:
        businessId: '\d+'

open_api_server_express_updateoffercontent:
    path:     /businesses/{businessId}/offer-cards/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::updateOfferContentAction
    requirements:
        businessId: '\d+'

open_api_server_express_updateoffermappingentries:
    path:     /campaigns/{campaignId}/offer-mapping-entries/updates
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::updateOfferMappingEntriesAction
    requirements:
        campaignId: '\d+'

open_api_server_express_updateoffermappings:
    path:     /businesses/{businessId}/offer-mappings/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::updateOfferMappingsAction
    requirements:
        businessId: '\d+'

open_api_server_express_updateorderitems:
    path:     /campaigns/{campaignId}/orders/{orderId}/items
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.express::updateOrderItemsAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_express_updateorderstatus:
    path:     /campaigns/{campaignId}/orders/{orderId}/status
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.express::updateOrderStatusAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_express_updateorderstatuses:
    path:     /campaigns/{campaignId}/orders/status-update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::updateOrderStatusesAction
    requirements:
        campaignId: '\d+'

open_api_server_express_updateprices:
    path:     /campaigns/{campaignId}/offer-prices/updates
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::updatePricesAction
    requirements:
        campaignId: '\d+'

open_api_server_express_updatepromooffers:
    path:     /businesses/{businessId}/promos/offers/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.express::updatePromoOffersAction
    requirements:
        businessId: '\d+'

open_api_server_express_updatestocks:
    path:     /campaigns/{campaignId}/offers/stocks
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.express::updateStocksAction
    requirements:
        campaignId: '\d+'

open_api_server_express_verifyordereac:
    path:     /campaigns/{campaignId}/orders/{orderId}/verifyEac
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.express::verifyOrderEacAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

# fbs
open_api_server_fbs_addhiddenoffers:
    path:     /campaigns/{campaignId}/hidden-offers
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::addHiddenOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_addofferstoarchive:
    path:     /businesses/{businessId}/offer-mappings/archive
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::addOffersToArchiveAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_calculatetariffs:
    path:     /tariffs/calculate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::calculateTariffsAction

open_api_server_fbs_confirmbusinessprices:
    path:     /businesses/{businessId}/price-quarantine/confirm
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::confirmBusinessPricesAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_confirmcampaignprices:
    path:     /campaigns/{campaignId}/price-quarantine/confirm
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::confirmCampaignPricesAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_confirmshipment:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/confirm
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::confirmShipmentAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_fbs_createchat:
    path:     /businesses/{businessId}/chats/new
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::createChatAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_deletecampaignoffers:
    path:     /campaigns/{campaignId}/offers/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::deleteCampaignOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_deletegoodsfeedbackcomment:
    path:     /businesses/{businessId}/goods-feedback/comments/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::deleteGoodsFeedbackCommentAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_deletehiddenoffers:
    path:     /campaigns/{campaignId}/hidden-offers/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::deleteHiddenOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_deleteoffers:
    path:     /businesses/{businessId}/offer-mappings/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::deleteOffersAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_deleteoffersfromarchive:
    path:     /businesses/{businessId}/offer-mappings/unarchive
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::deleteOffersFromArchiveAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_deletepromooffers:
    path:     /businesses/{businessId}/promos/offers/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::deletePromoOffersAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_downloadshipmentact:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/act
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::downloadShipmentActAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_fbs_downloadshipmentdiscrepancyact:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/discrepancy-act
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::downloadShipmentDiscrepancyActAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_fbs_downloadshipmentinboundact:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/inbound-act
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::downloadShipmentInboundActAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_fbs_downloadshipmentpalletlabels:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::downloadShipmentPalletLabelsAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_fbs_downloadshipmentreceptiontransferact:
    path:     /campaigns/{campaignId}/shipments/reception-transfer-act
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::downloadShipmentReceptionTransferActAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_downloadshipmenttransportationwaybill:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/transportation-waybill
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::downloadShipmentTransportationWaybillAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_fbs_generateboostconsolidatedreport:
    path:     /reports/boost-consolidated/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::generateBoostConsolidatedReportAction

open_api_server_fbs_generatecompetitorspositionreport:
    path:     /reports/competitors-position/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::generateCompetitorsPositionReportAction

open_api_server_fbs_generategoodsfeedbackreport:
    path:     /reports/goods-feedback/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::generateGoodsFeedbackReportAction

open_api_server_fbs_generategoodsrealizationreport:
    path:     /reports/goods-realization/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::generateGoodsRealizationReportAction

open_api_server_fbs_generatemassorderlabelsreport:
    path:     /reports/documents/labels/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::generateMassOrderLabelsReportAction

open_api_server_fbs_generateorderlabel:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::generateOrderLabelAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        shipmentId: '\d+'
        boxId: '\d+'

open_api_server_fbs_generateorderlabels:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/labels
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::generateOrderLabelsAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_fbs_generatepricesreport:
    path:     /reports/prices/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::generatePricesReportAction

open_api_server_fbs_generateshelfsstatisticsreport:
    path:     /reports/shelf-statistics/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::generateShelfsStatisticsReportAction

open_api_server_fbs_generateshipmentlistdocumentreport:
    path:     /reports/documents/shipment-list/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::generateShipmentListDocumentReportAction

open_api_server_fbs_generateshowssalesreport:
    path:     /reports/shows-sales/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::generateShowsSalesReportAction

open_api_server_fbs_generatestocksonwarehousesreport:
    path:     /reports/stocks-on-warehouses/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::generateStocksOnWarehousesReportAction

open_api_server_fbs_generateunitedmarketplaceservicesreport:
    path:     /reports/united-marketplace-services/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::generateUnitedMarketplaceServicesReportAction

open_api_server_fbs_generateunitednettingreport:
    path:     /reports/united-netting/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::generateUnitedNettingReportAction

open_api_server_fbs_generateunitedordersreport:
    path:     /reports/united-orders/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::generateUnitedOrdersReportAction

open_api_server_fbs_getalloffers:
    path:     /campaigns/{campaignId}/offers/all
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getAllOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getbidsinfoforbusiness:
    path:     /businesses/{businessId}/bids/info
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getBidsInfoForBusinessAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_getbidsrecommendations:
    path:     /businesses/{businessId}/bids/recommendations
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getBidsRecommendationsAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_getbusinessquarantineoffers:
    path:     /businesses/{businessId}/price-quarantine
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getBusinessQuarantineOffersAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_getbusinesssettings:
    path:     /businesses/{businessId}/settings
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getBusinessSettingsAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_getcampaign:
    path:     /campaigns/{campaignId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getCampaignAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getcampaignlogins:
    path:     /campaigns/{campaignId}/logins
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getCampaignLoginsAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getcampaignoffers:
    path:     /campaigns/{campaignId}/offers
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getCampaignOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getcampaignquarantineoffers:
    path:     /campaigns/{campaignId}/price-quarantine
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getCampaignQuarantineOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getcampaignregion:
    path:     /campaigns/{campaignId}/region
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getCampaignRegionAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getcampaignsettings:
    path:     /campaigns/{campaignId}/settings
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getCampaignSettingsAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getcampaigns:
    path:     /campaigns
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getCampaignsAction

open_api_server_fbs_getcampaignsbylogin:
    path:     /campaigns/by_login/{login}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getCampaignsByLoginAction
    requirements:
        login: '[a-z0-9]+'

open_api_server_fbs_getcategoriesmaxsalequantum:
    path:     /categories/max-sale-quantum
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getCategoriesMaxSaleQuantumAction

open_api_server_fbs_getcategoriestree:
    path:     /categories/tree
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getCategoriesTreeAction

open_api_server_fbs_getcategorycontentparameters:
    path:     /category/{categoryId}/parameters
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getCategoryContentParametersAction
    requirements:
        categoryId: '\d+'

open_api_server_fbs_getchathistory:
    path:     /businesses/{businessId}/chats/history
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getChatHistoryAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_getchats:
    path:     /businesses/{businessId}/chats
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getChatsAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_getdeliveryservices:
    path:     /delivery/services
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getDeliveryServicesAction

open_api_server_fbs_getfeed:
    path:     /campaigns/{campaignId}/feeds/{feedId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getFeedAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_fbs_getfeedindexlogs:
    path:     /campaigns/{campaignId}/feeds/{feedId}/index-logs
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getFeedIndexLogsAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_fbs_getfeedbackandcommentupdates:
    path:     /campaigns/{campaignId}/feedback/updates
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getFeedbackAndCommentUpdatesAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getfeeds:
    path:     /campaigns/{campaignId}/feeds
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getFeedsAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getgoodsfeedbackcomments:
    path:     /businesses/{businessId}/goods-feedback/comments
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getGoodsFeedbackCommentsAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_getgoodsfeedbacks:
    path:     /businesses/{businessId}/goods-feedback
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getGoodsFeedbacksAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_getgoodsstats:
    path:     /campaigns/{campaignId}/stats/skus
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getGoodsStatsAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_gethiddenoffers:
    path:     /campaigns/{campaignId}/hidden-offers
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getHiddenOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getoffercardscontentstatus:
    path:     /businesses/{businessId}/offer-cards
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getOfferCardsContentStatusAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_getoffermappingentries:
    path:     /campaigns/{campaignId}/offer-mapping-entries
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getOfferMappingEntriesAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getoffermappings:
    path:     /businesses/{businessId}/offer-mappings
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getOfferMappingsAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_getofferrecommendations:
    path:     /businesses/{businessId}/offers/recommendations
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getOfferRecommendationsAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_getoffers:
    path:     /campaigns/{campaignId}/offers
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getorder:
    path:     /campaigns/{campaignId}/orders/{orderId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getOrderAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_fbs_getorderbusinessbuyerinfo:
    path:     /campaigns/{campaignId}/orders/{orderId}/business-buyer
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getOrderBusinessBuyerInfoAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_fbs_getorderbusinessdocumentsinfo:
    path:     /campaigns/{campaignId}/orders/{orderId}/documents
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getOrderBusinessDocumentsInfoAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_fbs_getorderlabelsdata:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/labels/data
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getOrderLabelsDataAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_fbs_getorders:
    path:     /campaigns/{campaignId}/orders
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getOrdersAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getordersstats:
    path:     /campaigns/{campaignId}/stats/orders
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getOrdersStatsAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getprices:
    path:     /campaigns/{campaignId}/offer-prices
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getPricesAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getpricesbyofferids:
    path:     /campaigns/{campaignId}/offer-prices
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getPricesByOfferIdsAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getpromooffers:
    path:     /businesses/{businessId}/promos/offers
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getPromoOffersAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_getpromos:
    path:     /businesses/{businessId}/promos
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getPromosAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_getqualityratingdetails:
    path:     /campaigns/{campaignId}/ratings/quality/details
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getQualityRatingDetailsAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getqualityratings:
    path:     /businesses/{businessId}/ratings/quality
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getQualityRatingsAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_getreportinfo:
    path:     /reports/info/{reportId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getReportInfoAction
    requirements:
        reportId: '[a-z0-9]+'

open_api_server_fbs_getreturn:
    path:     /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getReturnAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        returnId: '\d+'

open_api_server_fbs_getreturnapplication:
    path:     /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getReturnApplicationAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        returnId: '\d+'

open_api_server_fbs_getreturnphoto:
    path:     /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getReturnPhotoAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        returnId: '\d+'
        itemId: '\d+'
        imageHash: '[a-z0-9]+'

open_api_server_fbs_getreturns:
    path:     /campaigns/{campaignId}/returns
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getReturnsAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getshipment:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getShipmentAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_fbs_getshipmentordersinfo:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/info
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getShipmentOrdersInfoAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_fbs_getstocks:
    path:     /campaigns/{campaignId}/offers/stocks
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getStocksAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getsuggestedoffermappingentries:
    path:     /campaigns/{campaignId}/offer-mapping-entries/suggestions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getSuggestedOfferMappingEntriesAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getsuggestedoffermappings:
    path:     /businesses/{businessId}/offer-mappings/suggestions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getSuggestedOfferMappingsAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_getsuggestedprices:
    path:     /campaigns/{campaignId}/offer-prices/suggestions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::getSuggestedPricesAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_getwarehouses:
    path:     /businesses/{businessId}/warehouses
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::getWarehousesAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_provideorderitemidentifiers:
    path:     /campaigns/{campaignId}/orders/{orderId}/identifiers
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.fbs::provideOrderItemIdentifiersAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_fbs_putbidsforbusiness:
    path:     /businesses/{businessId}/bids
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.fbs::putBidsForBusinessAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_putbidsforcampaign:
    path:     /campaigns/{campaignId}/bids
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.fbs::putBidsForCampaignAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_refreshfeed:
    path:     /campaigns/{campaignId}/feeds/{feedId}/refresh
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::refreshFeedAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_fbs_searchregionchildren:
    path:     /regions/{regionId}/children
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::searchRegionChildrenAction
    requirements:
        regionId: '\d+'

open_api_server_fbs_searchregionsbyid:
    path:     /regions/{regionId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::searchRegionsByIdAction
    requirements:
        regionId: '\d+'

open_api_server_fbs_searchregionsbyname:
    path:     /regions
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fbs::searchRegionsByNameAction

open_api_server_fbs_searchshipments:
    path:     /campaigns/{campaignId}/first-mile/shipments
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.fbs::searchShipmentsAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_sendfiletochat:
    path:     /businesses/{businessId}/chats/file/send
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::sendFileToChatAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_sendmessagetochat:
    path:     /businesses/{businessId}/chats/message
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::sendMessageToChatAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_setfeedparams:
    path:     /campaigns/{campaignId}/feeds/{feedId}/params
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::setFeedParamsAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_fbs_setorderboxlayout:
    path:     /campaigns/{campaignId}/orders/{orderId}/boxes
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.fbs::setOrderBoxLayoutAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_fbs_setordershipmentboxes:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.fbs::setOrderShipmentBoxesAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        shipmentId: '\d+'

open_api_server_fbs_setshipmentpalletscount:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.fbs::setShipmentPalletsCountAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_fbs_skipgoodsfeedbacksreaction:
    path:     /businesses/{businessId}/goods-feedback/skip-reaction
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::skipGoodsFeedbacksReactionAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_transferordersfromshipment:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/transfer
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::transferOrdersFromShipmentAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_fbs_updatebusinessprices:
    path:     /businesses/{businessId}/offer-prices/updates
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::updateBusinessPricesAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_updatecampaignoffers:
    path:     /campaigns/{campaignId}/offers/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::updateCampaignOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_updategoodsfeedbackcomment:
    path:     /businesses/{businessId}/goods-feedback/comments/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::updateGoodsFeedbackCommentAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_updateoffercontent:
    path:     /businesses/{businessId}/offer-cards/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::updateOfferContentAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_updateoffermappingentries:
    path:     /campaigns/{campaignId}/offer-mapping-entries/updates
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::updateOfferMappingEntriesAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_updateoffermappings:
    path:     /businesses/{businessId}/offer-mappings/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::updateOfferMappingsAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_updateorderitems:
    path:     /campaigns/{campaignId}/orders/{orderId}/items
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.fbs::updateOrderItemsAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_fbs_updateorderstatus:
    path:     /campaigns/{campaignId}/orders/{orderId}/status
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.fbs::updateOrderStatusAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_fbs_updateorderstatuses:
    path:     /campaigns/{campaignId}/orders/status-update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::updateOrderStatusesAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_updateprices:
    path:     /campaigns/{campaignId}/offer-prices/updates
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::updatePricesAction
    requirements:
        campaignId: '\d+'

open_api_server_fbs_updatepromooffers:
    path:     /businesses/{businessId}/promos/offers/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fbs::updatePromoOffersAction
    requirements:
        businessId: '\d+'

open_api_server_fbs_updatestocks:
    path:     /campaigns/{campaignId}/offers/stocks
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.fbs::updateStocksAction
    requirements:
        campaignId: '\d+'

# fby
open_api_server_fby_addhiddenoffers:
    path:     /campaigns/{campaignId}/hidden-offers
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::addHiddenOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_addofferstoarchive:
    path:     /businesses/{businessId}/offer-mappings/archive
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::addOffersToArchiveAction
    requirements:
        businessId: '\d+'

open_api_server_fby_calculatetariffs:
    path:     /tariffs/calculate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::calculateTariffsAction

open_api_server_fby_confirmbusinessprices:
    path:     /businesses/{businessId}/price-quarantine/confirm
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::confirmBusinessPricesAction
    requirements:
        businessId: '\d+'

open_api_server_fby_confirmcampaignprices:
    path:     /campaigns/{campaignId}/price-quarantine/confirm
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::confirmCampaignPricesAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_createchat:
    path:     /businesses/{businessId}/chats/new
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::createChatAction
    requirements:
        businessId: '\d+'

open_api_server_fby_deletecampaignoffers:
    path:     /campaigns/{campaignId}/offers/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::deleteCampaignOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_deletegoodsfeedbackcomment:
    path:     /businesses/{businessId}/goods-feedback/comments/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::deleteGoodsFeedbackCommentAction
    requirements:
        businessId: '\d+'

open_api_server_fby_deletehiddenoffers:
    path:     /campaigns/{campaignId}/hidden-offers/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::deleteHiddenOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_deleteoffers:
    path:     /businesses/{businessId}/offer-mappings/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::deleteOffersAction
    requirements:
        businessId: '\d+'

open_api_server_fby_deleteoffersfromarchive:
    path:     /businesses/{businessId}/offer-mappings/unarchive
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::deleteOffersFromArchiveAction
    requirements:
        businessId: '\d+'

open_api_server_fby_deletepromooffers:
    path:     /businesses/{businessId}/promos/offers/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::deletePromoOffersAction
    requirements:
        businessId: '\d+'

open_api_server_fby_generateboostconsolidatedreport:
    path:     /reports/boost-consolidated/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::generateBoostConsolidatedReportAction

open_api_server_fby_generatecompetitorspositionreport:
    path:     /reports/competitors-position/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::generateCompetitorsPositionReportAction

open_api_server_fby_generategoodsfeedbackreport:
    path:     /reports/goods-feedback/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::generateGoodsFeedbackReportAction

open_api_server_fby_generategoodsmovementreport:
    path:     /reports/goods-movement/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::generateGoodsMovementReportAction

open_api_server_fby_generategoodsrealizationreport:
    path:     /reports/goods-realization/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::generateGoodsRealizationReportAction

open_api_server_fby_generategoodsturnoverreport:
    path:     /reports/goods-turnover/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::generateGoodsTurnoverReportAction

open_api_server_fby_generatepricesreport:
    path:     /reports/prices/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::generatePricesReportAction

open_api_server_fby_generateshelfsstatisticsreport:
    path:     /reports/shelf-statistics/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::generateShelfsStatisticsReportAction

open_api_server_fby_generateshowssalesreport:
    path:     /reports/shows-sales/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::generateShowsSalesReportAction

open_api_server_fby_generatestocksonwarehousesreport:
    path:     /reports/stocks-on-warehouses/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::generateStocksOnWarehousesReportAction

open_api_server_fby_generateunitedmarketplaceservicesreport:
    path:     /reports/united-marketplace-services/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::generateUnitedMarketplaceServicesReportAction

open_api_server_fby_generateunitednettingreport:
    path:     /reports/united-netting/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::generateUnitedNettingReportAction

open_api_server_fby_generateunitedordersreport:
    path:     /reports/united-orders/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::generateUnitedOrdersReportAction

open_api_server_fby_getalloffers:
    path:     /campaigns/{campaignId}/offers/all
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getAllOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getbidsinfoforbusiness:
    path:     /businesses/{businessId}/bids/info
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getBidsInfoForBusinessAction
    requirements:
        businessId: '\d+'

open_api_server_fby_getbidsrecommendations:
    path:     /businesses/{businessId}/bids/recommendations
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getBidsRecommendationsAction
    requirements:
        businessId: '\d+'

open_api_server_fby_getbusinessquarantineoffers:
    path:     /businesses/{businessId}/price-quarantine
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getBusinessQuarantineOffersAction
    requirements:
        businessId: '\d+'

open_api_server_fby_getbusinesssettings:
    path:     /businesses/{businessId}/settings
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getBusinessSettingsAction
    requirements:
        businessId: '\d+'

open_api_server_fby_getcampaign:
    path:     /campaigns/{campaignId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getCampaignAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getcampaignlogins:
    path:     /campaigns/{campaignId}/logins
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getCampaignLoginsAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getcampaignoffers:
    path:     /campaigns/{campaignId}/offers
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getCampaignOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getcampaignquarantineoffers:
    path:     /campaigns/{campaignId}/price-quarantine
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getCampaignQuarantineOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getcampaignregion:
    path:     /campaigns/{campaignId}/region
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getCampaignRegionAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getcampaignsettings:
    path:     /campaigns/{campaignId}/settings
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getCampaignSettingsAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getcampaigns:
    path:     /campaigns
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getCampaignsAction

open_api_server_fby_getcampaignsbylogin:
    path:     /campaigns/by_login/{login}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getCampaignsByLoginAction
    requirements:
        login: '[a-z0-9]+'

open_api_server_fby_getcategoriesmaxsalequantum:
    path:     /categories/max-sale-quantum
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getCategoriesMaxSaleQuantumAction

open_api_server_fby_getcategoriestree:
    path:     /categories/tree
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getCategoriesTreeAction

open_api_server_fby_getcategorycontentparameters:
    path:     /category/{categoryId}/parameters
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getCategoryContentParametersAction
    requirements:
        categoryId: '\d+'

open_api_server_fby_getchathistory:
    path:     /businesses/{businessId}/chats/history
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getChatHistoryAction
    requirements:
        businessId: '\d+'

open_api_server_fby_getchats:
    path:     /businesses/{businessId}/chats
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getChatsAction
    requirements:
        businessId: '\d+'

open_api_server_fby_getfeed:
    path:     /campaigns/{campaignId}/feeds/{feedId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getFeedAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_fby_getfeedindexlogs:
    path:     /campaigns/{campaignId}/feeds/{feedId}/index-logs
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getFeedIndexLogsAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_fby_getfeedbackandcommentupdates:
    path:     /campaigns/{campaignId}/feedback/updates
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getFeedbackAndCommentUpdatesAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getfeeds:
    path:     /campaigns/{campaignId}/feeds
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getFeedsAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getfulfillmentwarehouses:
    path:     /warehouses
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getFulfillmentWarehousesAction

open_api_server_fby_getgoodsfeedbackcomments:
    path:     /businesses/{businessId}/goods-feedback/comments
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getGoodsFeedbackCommentsAction
    requirements:
        businessId: '\d+'

open_api_server_fby_getgoodsfeedbacks:
    path:     /businesses/{businessId}/goods-feedback
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getGoodsFeedbacksAction
    requirements:
        businessId: '\d+'

open_api_server_fby_getgoodsstats:
    path:     /campaigns/{campaignId}/stats/skus
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getGoodsStatsAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_gethiddenoffers:
    path:     /campaigns/{campaignId}/hidden-offers
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getHiddenOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getoffercardscontentstatus:
    path:     /businesses/{businessId}/offer-cards
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getOfferCardsContentStatusAction
    requirements:
        businessId: '\d+'

open_api_server_fby_getoffermappingentries:
    path:     /campaigns/{campaignId}/offer-mapping-entries
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getOfferMappingEntriesAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getoffermappings:
    path:     /businesses/{businessId}/offer-mappings
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getOfferMappingsAction
    requirements:
        businessId: '\d+'

open_api_server_fby_getofferrecommendations:
    path:     /businesses/{businessId}/offers/recommendations
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getOfferRecommendationsAction
    requirements:
        businessId: '\d+'

open_api_server_fby_getoffers:
    path:     /campaigns/{campaignId}/offers
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getorder:
    path:     /campaigns/{campaignId}/orders/{orderId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getOrderAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_fby_getorderbusinessbuyerinfo:
    path:     /campaigns/{campaignId}/orders/{orderId}/business-buyer
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getOrderBusinessBuyerInfoAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_fby_getorderbusinessdocumentsinfo:
    path:     /campaigns/{campaignId}/orders/{orderId}/documents
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getOrderBusinessDocumentsInfoAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_fby_getorders:
    path:     /campaigns/{campaignId}/orders
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getOrdersAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getordersstats:
    path:     /campaigns/{campaignId}/stats/orders
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getOrdersStatsAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getprices:
    path:     /campaigns/{campaignId}/offer-prices
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getPricesAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getpricesbyofferids:
    path:     /campaigns/{campaignId}/offer-prices
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getPricesByOfferIdsAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getpromooffers:
    path:     /businesses/{businessId}/promos/offers
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getPromoOffersAction
    requirements:
        businessId: '\d+'

open_api_server_fby_getpromos:
    path:     /businesses/{businessId}/promos
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getPromosAction
    requirements:
        businessId: '\d+'

open_api_server_fby_getqualityratings:
    path:     /businesses/{businessId}/ratings/quality
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getQualityRatingsAction
    requirements:
        businessId: '\d+'

open_api_server_fby_getreportinfo:
    path:     /reports/info/{reportId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getReportInfoAction
    requirements:
        reportId: '[a-z0-9]+'

open_api_server_fby_getreturn:
    path:     /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getReturnAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        returnId: '\d+'

open_api_server_fby_getreturnphoto:
    path:     /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getReturnPhotoAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        returnId: '\d+'
        itemId: '\d+'
        imageHash: '[a-z0-9]+'

open_api_server_fby_getreturns:
    path:     /campaigns/{campaignId}/returns
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::getReturnsAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getstocks:
    path:     /campaigns/{campaignId}/offers/stocks
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getStocksAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getsuggestedoffermappingentries:
    path:     /campaigns/{campaignId}/offer-mapping-entries/suggestions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getSuggestedOfferMappingEntriesAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_getsuggestedoffermappings:
    path:     /businesses/{businessId}/offer-mappings/suggestions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getSuggestedOfferMappingsAction
    requirements:
        businessId: '\d+'

open_api_server_fby_getsuggestedprices:
    path:     /campaigns/{campaignId}/offer-prices/suggestions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::getSuggestedPricesAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_putbidsforbusiness:
    path:     /businesses/{businessId}/bids
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.fby::putBidsForBusinessAction
    requirements:
        businessId: '\d+'

open_api_server_fby_putbidsforcampaign:
    path:     /campaigns/{campaignId}/bids
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.fby::putBidsForCampaignAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_refreshfeed:
    path:     /campaigns/{campaignId}/feeds/{feedId}/refresh
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::refreshFeedAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_fby_searchregionchildren:
    path:     /regions/{regionId}/children
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::searchRegionChildrenAction
    requirements:
        regionId: '\d+'

open_api_server_fby_searchregionsbyid:
    path:     /regions/{regionId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::searchRegionsByIdAction
    requirements:
        regionId: '\d+'

open_api_server_fby_searchregionsbyname:
    path:     /regions
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.fby::searchRegionsByNameAction

open_api_server_fby_sendfiletochat:
    path:     /businesses/{businessId}/chats/file/send
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::sendFileToChatAction
    requirements:
        businessId: '\d+'

open_api_server_fby_sendmessagetochat:
    path:     /businesses/{businessId}/chats/message
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::sendMessageToChatAction
    requirements:
        businessId: '\d+'

open_api_server_fby_setfeedparams:
    path:     /campaigns/{campaignId}/feeds/{feedId}/params
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::setFeedParamsAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_fby_skipgoodsfeedbacksreaction:
    path:     /businesses/{businessId}/goods-feedback/skip-reaction
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::skipGoodsFeedbacksReactionAction
    requirements:
        businessId: '\d+'

open_api_server_fby_updatebusinessprices:
    path:     /businesses/{businessId}/offer-prices/updates
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::updateBusinessPricesAction
    requirements:
        businessId: '\d+'

open_api_server_fby_updatecampaignoffers:
    path:     /campaigns/{campaignId}/offers/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::updateCampaignOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_updategoodsfeedbackcomment:
    path:     /businesses/{businessId}/goods-feedback/comments/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::updateGoodsFeedbackCommentAction
    requirements:
        businessId: '\d+'

open_api_server_fby_updateoffercontent:
    path:     /businesses/{businessId}/offer-cards/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::updateOfferContentAction
    requirements:
        businessId: '\d+'

open_api_server_fby_updateoffermappingentries:
    path:     /campaigns/{campaignId}/offer-mapping-entries/updates
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::updateOfferMappingEntriesAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_updateoffermappings:
    path:     /businesses/{businessId}/offer-mappings/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::updateOfferMappingsAction
    requirements:
        businessId: '\d+'

open_api_server_fby_updateprices:
    path:     /campaigns/{campaignId}/offer-prices/updates
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::updatePricesAction
    requirements:
        campaignId: '\d+'

open_api_server_fby_updatepromooffers:
    path:     /businesses/{businessId}/promos/offers/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.fby::updatePromoOffersAction
    requirements:
        businessId: '\d+'

# feedbacks
open_api_server_feedbacks_getfeedbackandcommentupdates:
    path:     /campaigns/{campaignId}/feedback/updates
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.feedbacks::getFeedbackAndCommentUpdatesAction
    requirements:
        campaignId: '\d+'

# feeds
open_api_server_feeds_getfeed:
    path:     /campaigns/{campaignId}/feeds/{feedId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.feeds::getFeedAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_feeds_getfeedindexlogs:
    path:     /campaigns/{campaignId}/feeds/{feedId}/index-logs
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.feeds::getFeedIndexLogsAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_feeds_getfeeds:
    path:     /campaigns/{campaignId}/feeds
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.feeds::getFeedsAction
    requirements:
        campaignId: '\d+'

open_api_server_feeds_refreshfeed:
    path:     /campaigns/{campaignId}/feeds/{feedId}/refresh
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.feeds::refreshFeedAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

open_api_server_feeds_setfeedparams:
    path:     /campaigns/{campaignId}/feeds/{feedId}/params
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.feeds::setFeedParamsAction
    requirements:
        campaignId: '\d+'
        feedId: '\d+'

# goodsFeedback
open_api_server_goodsFeedback_deletegoodsfeedbackcomment:
    path:     /businesses/{businessId}/goods-feedback/comments/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.goodsFeedback::deleteGoodsFeedbackCommentAction
    requirements:
        businessId: '\d+'

open_api_server_goodsFeedback_getgoodsfeedbackcomments:
    path:     /businesses/{businessId}/goods-feedback/comments
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.goodsFeedback::getGoodsFeedbackCommentsAction
    requirements:
        businessId: '\d+'

open_api_server_goodsFeedback_getgoodsfeedbacks:
    path:     /businesses/{businessId}/goods-feedback
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.goodsFeedback::getGoodsFeedbacksAction
    requirements:
        businessId: '\d+'

open_api_server_goodsFeedback_skipgoodsfeedbacksreaction:
    path:     /businesses/{businessId}/goods-feedback/skip-reaction
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.goodsFeedback::skipGoodsFeedbacksReactionAction
    requirements:
        businessId: '\d+'

open_api_server_goodsFeedback_updategoodsfeedbackcomment:
    path:     /businesses/{businessId}/goods-feedback/comments/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.goodsFeedback::updateGoodsFeedbackCommentAction
    requirements:
        businessId: '\d+'

# goodsStats
open_api_server_goodsStats_getgoodsstats:
    path:     /campaigns/{campaignId}/stats/skus
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.goodsStats::getGoodsStatsAction
    requirements:
        campaignId: '\d+'

# hiddenOffers
open_api_server_hiddenOffers_addhiddenoffers:
    path:     /campaigns/{campaignId}/hidden-offers
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.hiddenOffers::addHiddenOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_hiddenOffers_deletehiddenoffers:
    path:     /campaigns/{campaignId}/hidden-offers/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.hiddenOffers::deleteHiddenOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_hiddenOffers_gethiddenoffers:
    path:     /campaigns/{campaignId}/hidden-offers
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.hiddenOffers::getHiddenOffersAction
    requirements:
        campaignId: '\d+'

# models
open_api_server_models_getmodel:
    path:     /models/{modelId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.models::getModelAction
    requirements:
        modelId: '\d+'

open_api_server_models_getmodeloffers:
    path:     /models/{modelId}/offers
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.models::getModelOffersAction
    requirements:
        modelId: '\d+'

open_api_server_models_getmodels:
    path:     /models
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.models::getModelsAction

open_api_server_models_getmodelsoffers:
    path:     /models/offers
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.models::getModelsOffersAction

open_api_server_models_searchmodels:
    path:     /models
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.models::searchModelsAction

# offerMappings
open_api_server_offerMappings_getoffermappingentries:
    path:     /campaigns/{campaignId}/offer-mapping-entries
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.offerMappings::getOfferMappingEntriesAction
    requirements:
        campaignId: '\d+'

open_api_server_offerMappings_getsuggestedoffermappingentries:
    path:     /campaigns/{campaignId}/offer-mapping-entries/suggestions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.offerMappings::getSuggestedOfferMappingEntriesAction
    requirements:
        campaignId: '\d+'

open_api_server_offerMappings_updateoffermappingentries:
    path:     /campaigns/{campaignId}/offer-mapping-entries/updates
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.offerMappings::updateOfferMappingEntriesAction
    requirements:
        campaignId: '\d+'

# offers
open_api_server_offers_deletecampaignoffers:
    path:     /campaigns/{campaignId}/offers/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.offers::deleteCampaignOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_offers_getalloffers:
    path:     /campaigns/{campaignId}/offers/all
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.offers::getAllOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_offers_getcampaignoffers:
    path:     /campaigns/{campaignId}/offers
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.offers::getCampaignOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_offers_getofferrecommendations:
    path:     /businesses/{businessId}/offers/recommendations
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.offers::getOfferRecommendationsAction
    requirements:
        businessId: '\d+'

open_api_server_offers_getoffers:
    path:     /campaigns/{campaignId}/offers
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.offers::getOffersAction
    requirements:
        campaignId: '\d+'

open_api_server_offers_updatecampaignoffers:
    path:     /campaigns/{campaignId}/offers/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.offers::updateCampaignOffersAction
    requirements:
        campaignId: '\d+'

# orderBusinessInformation
open_api_server_orderBusinessInformation_getorderbusinessbuyerinfo:
    path:     /campaigns/{campaignId}/orders/{orderId}/business-buyer
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.orderBusinessInformation::getOrderBusinessBuyerInfoAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_orderBusinessInformation_getorderbusinessdocumentsinfo:
    path:     /campaigns/{campaignId}/orders/{orderId}/documents
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.orderBusinessInformation::getOrderBusinessDocumentsInfoAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

# orderDelivery
open_api_server_orderDelivery_getorderbuyerinfo:
    path:     /campaigns/{campaignId}/orders/{orderId}/buyer
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.orderDelivery::getOrderBuyerInfoAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_orderDelivery_setorderdeliverydate:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/date
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.orderDelivery::setOrderDeliveryDateAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_orderDelivery_setorderdeliverytrackcode:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/track
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.orderDelivery::setOrderDeliveryTrackCodeAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_orderDelivery_updateorderstoragelimit:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/storage-limit
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.orderDelivery::updateOrderStorageLimitAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_orderDelivery_verifyordereac:
    path:     /campaigns/{campaignId}/orders/{orderId}/verifyEac
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.orderDelivery::verifyOrderEacAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

# orderLabels
open_api_server_orderLabels_generateorderlabel:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.orderLabels::generateOrderLabelAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        shipmentId: '\d+'
        boxId: '\d+'

open_api_server_orderLabels_generateorderlabels:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/labels
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.orderLabels::generateOrderLabelsAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_orderLabels_getorderlabelsdata:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/labels/data
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.orderLabels::getOrderLabelsDataAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

# orders
open_api_server_orders_acceptordercancellation:
    path:     /campaigns/{campaignId}/orders/{orderId}/cancellation/accept
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.orders::acceptOrderCancellationAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_orders_getorder:
    path:     /campaigns/{campaignId}/orders/{orderId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.orders::getOrderAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_orders_getorders:
    path:     /campaigns/{campaignId}/orders
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.orders::getOrdersAction
    requirements:
        campaignId: '\d+'

open_api_server_orders_provideorderdigitalcodes:
    path:     /campaigns/{campaignId}/orders/{orderId}/deliverDigitalGoods
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.orders::provideOrderDigitalCodesAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_orders_provideorderitemidentifiers:
    path:     /campaigns/{campaignId}/orders/{orderId}/identifiers
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.orders::provideOrderItemIdentifiersAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_orders_setorderboxlayout:
    path:     /campaigns/{campaignId}/orders/{orderId}/boxes
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.orders::setOrderBoxLayoutAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_orders_setordershipmentboxes:
    path:     /campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.orders::setOrderShipmentBoxesAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        shipmentId: '\d+'

open_api_server_orders_updateorderitems:
    path:     /campaigns/{campaignId}/orders/{orderId}/items
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.orders::updateOrderItemsAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_orders_updateorderstatus:
    path:     /campaigns/{campaignId}/orders/{orderId}/status
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.orders::updateOrderStatusAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'

open_api_server_orders_updateorderstatuses:
    path:     /campaigns/{campaignId}/orders/status-update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.orders::updateOrderStatusesAction
    requirements:
        campaignId: '\d+'

# ordersStats
open_api_server_ordersStats_getordersstats:
    path:     /campaigns/{campaignId}/stats/orders
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ordersStats::getOrdersStatsAction
    requirements:
        campaignId: '\d+'

# outletLicenses
open_api_server_outletLicenses_deleteoutletlicenses:
    path:     /campaigns/{campaignId}/outlets/licenses
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.outletLicenses::deleteOutletLicensesAction
    requirements:
        campaignId: '\d+'

open_api_server_outletLicenses_getoutletlicenses:
    path:     /campaigns/{campaignId}/outlets/licenses
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.outletLicenses::getOutletLicensesAction
    requirements:
        campaignId: '\d+'

open_api_server_outletLicenses_updateoutletlicenses:
    path:     /campaigns/{campaignId}/outlets/licenses
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.outletLicenses::updateOutletLicensesAction
    requirements:
        campaignId: '\d+'

# outlets
open_api_server_outlets_createoutlet:
    path:     /campaigns/{campaignId}/outlets
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.outlets::createOutletAction
    requirements:
        campaignId: '\d+'

open_api_server_outlets_deleteoutlet:
    path:     /campaigns/{campaignId}/outlets/{outletId}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.outlets::deleteOutletAction
    requirements:
        campaignId: '\d+'
        outletId: '\d+'

open_api_server_outlets_getoutlet:
    path:     /campaigns/{campaignId}/outlets/{outletId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.outlets::getOutletAction
    requirements:
        campaignId: '\d+'
        outletId: '\d+'

open_api_server_outlets_getoutlets:
    path:     /campaigns/{campaignId}/outlets
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.outlets::getOutletsAction
    requirements:
        campaignId: '\d+'

open_api_server_outlets_updateoutlet:
    path:     /campaigns/{campaignId}/outlets/{outletId}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.outlets::updateOutletAction
    requirements:
        campaignId: '\d+'
        outletId: '\d+'

# priceQuarantine
open_api_server_priceQuarantine_confirmbusinessprices:
    path:     /businesses/{businessId}/price-quarantine/confirm
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.priceQuarantine::confirmBusinessPricesAction
    requirements:
        businessId: '\d+'

open_api_server_priceQuarantine_confirmcampaignprices:
    path:     /campaigns/{campaignId}/price-quarantine/confirm
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.priceQuarantine::confirmCampaignPricesAction
    requirements:
        campaignId: '\d+'

open_api_server_priceQuarantine_getbusinessquarantineoffers:
    path:     /businesses/{businessId}/price-quarantine
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.priceQuarantine::getBusinessQuarantineOffersAction
    requirements:
        businessId: '\d+'

open_api_server_priceQuarantine_getcampaignquarantineoffers:
    path:     /campaigns/{campaignId}/price-quarantine
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.priceQuarantine::getCampaignQuarantineOffersAction
    requirements:
        campaignId: '\d+'

# prices
open_api_server_prices_getprices:
    path:     /campaigns/{campaignId}/offer-prices
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.prices::getPricesAction
    requirements:
        campaignId: '\d+'

open_api_server_prices_getpricesbyofferids:
    path:     /campaigns/{campaignId}/offer-prices
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.prices::getPricesByOfferIdsAction
    requirements:
        campaignId: '\d+'

open_api_server_prices_getsuggestedprices:
    path:     /campaigns/{campaignId}/offer-prices/suggestions
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.prices::getSuggestedPricesAction
    requirements:
        campaignId: '\d+'

open_api_server_prices_updatebusinessprices:
    path:     /businesses/{businessId}/offer-prices/updates
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.prices::updateBusinessPricesAction
    requirements:
        businessId: '\d+'

open_api_server_prices_updateprices:
    path:     /campaigns/{campaignId}/offer-prices/updates
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.prices::updatePricesAction
    requirements:
        campaignId: '\d+'

# promos
open_api_server_promos_deletepromooffers:
    path:     /businesses/{businessId}/promos/offers/delete
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.promos::deletePromoOffersAction
    requirements:
        businessId: '\d+'

open_api_server_promos_getpromooffers:
    path:     /businesses/{businessId}/promos/offers
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.promos::getPromoOffersAction
    requirements:
        businessId: '\d+'

open_api_server_promos_getpromos:
    path:     /businesses/{businessId}/promos
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.promos::getPromosAction
    requirements:
        businessId: '\d+'

open_api_server_promos_updatepromooffers:
    path:     /businesses/{businessId}/promos/offers/update
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.promos::updatePromoOffersAction
    requirements:
        businessId: '\d+'

# ratings
open_api_server_ratings_getqualityratingdetails:
    path:     /campaigns/{campaignId}/ratings/quality/details
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ratings::getQualityRatingDetailsAction
    requirements:
        campaignId: '\d+'

open_api_server_ratings_getqualityratings:
    path:     /businesses/{businessId}/ratings/quality
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.ratings::getQualityRatingsAction
    requirements:
        businessId: '\d+'

# regions
open_api_server_regions_searchregionchildren:
    path:     /regions/{regionId}/children
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.regions::searchRegionChildrenAction
    requirements:
        regionId: '\d+'

open_api_server_regions_searchregionsbyid:
    path:     /regions/{regionId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.regions::searchRegionsByIdAction
    requirements:
        regionId: '\d+'

open_api_server_regions_searchregionsbyname:
    path:     /regions
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.regions::searchRegionsByNameAction

# reports
open_api_server_reports_generateboostconsolidatedreport:
    path:     /reports/boost-consolidated/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.reports::generateBoostConsolidatedReportAction

open_api_server_reports_generatecompetitorspositionreport:
    path:     /reports/competitors-position/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.reports::generateCompetitorsPositionReportAction

open_api_server_reports_generategoodsfeedbackreport:
    path:     /reports/goods-feedback/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.reports::generateGoodsFeedbackReportAction

open_api_server_reports_generategoodsmovementreport:
    path:     /reports/goods-movement/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.reports::generateGoodsMovementReportAction

open_api_server_reports_generategoodsrealizationreport:
    path:     /reports/goods-realization/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.reports::generateGoodsRealizationReportAction

open_api_server_reports_generategoodsturnoverreport:
    path:     /reports/goods-turnover/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.reports::generateGoodsTurnoverReportAction

open_api_server_reports_generatemassorderlabelsreport:
    path:     /reports/documents/labels/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.reports::generateMassOrderLabelsReportAction

open_api_server_reports_generatepricesreport:
    path:     /reports/prices/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.reports::generatePricesReportAction

open_api_server_reports_generateshelfsstatisticsreport:
    path:     /reports/shelf-statistics/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.reports::generateShelfsStatisticsReportAction

open_api_server_reports_generateshipmentlistdocumentreport:
    path:     /reports/documents/shipment-list/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.reports::generateShipmentListDocumentReportAction

open_api_server_reports_generateshowssalesreport:
    path:     /reports/shows-sales/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.reports::generateShowsSalesReportAction

open_api_server_reports_generatestocksonwarehousesreport:
    path:     /reports/stocks-on-warehouses/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.reports::generateStocksOnWarehousesReportAction

open_api_server_reports_generateunitedmarketplaceservicesreport:
    path:     /reports/united-marketplace-services/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.reports::generateUnitedMarketplaceServicesReportAction

open_api_server_reports_generateunitednettingreport:
    path:     /reports/united-netting/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.reports::generateUnitedNettingReportAction

open_api_server_reports_generateunitedordersreport:
    path:     /reports/united-orders/generate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.reports::generateUnitedOrdersReportAction

open_api_server_reports_getreportinfo:
    path:     /reports/info/{reportId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.reports::getReportInfoAction
    requirements:
        reportId: '[a-z0-9]+'

# returns
open_api_server_returns_getreturn:
    path:     /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.returns::getReturnAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        returnId: '\d+'

open_api_server_returns_getreturnapplication:
    path:     /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.returns::getReturnApplicationAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        returnId: '\d+'

open_api_server_returns_getreturnphoto:
    path:     /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.returns::getReturnPhotoAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        returnId: '\d+'
        itemId: '\d+'
        imageHash: '[a-z0-9]+'

open_api_server_returns_getreturns:
    path:     /campaigns/{campaignId}/returns
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.returns::getReturnsAction
    requirements:
        campaignId: '\d+'

open_api_server_returns_setreturndecision:
    path:     /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.returns::setReturnDecisionAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        returnId: '\d+'

open_api_server_returns_submitreturndecision:
    path:     /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.returns::submitReturnDecisionAction
    requirements:
        campaignId: '\d+'
        orderId: '\d+'
        returnId: '\d+'

# shipments
open_api_server_shipments_confirmshipment:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/confirm
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.shipments::confirmShipmentAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_shipments_downloadshipmentact:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/act
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.shipments::downloadShipmentActAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_shipments_downloadshipmentdiscrepancyact:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/discrepancy-act
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.shipments::downloadShipmentDiscrepancyActAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_shipments_downloadshipmentinboundact:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/inbound-act
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.shipments::downloadShipmentInboundActAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_shipments_downloadshipmentpalletlabels:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.shipments::downloadShipmentPalletLabelsAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_shipments_downloadshipmentreceptiontransferact:
    path:     /campaigns/{campaignId}/shipments/reception-transfer-act
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.shipments::downloadShipmentReceptionTransferActAction
    requirements:
        campaignId: '\d+'

open_api_server_shipments_downloadshipmenttransportationwaybill:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/transportation-waybill
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.shipments::downloadShipmentTransportationWaybillAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_shipments_getshipment:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.shipments::getShipmentAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_shipments_getshipmentordersinfo:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/info
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.shipments::getShipmentOrdersInfoAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_shipments_searchshipments:
    path:     /campaigns/{campaignId}/first-mile/shipments
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.shipments::searchShipmentsAction
    requirements:
        campaignId: '\d+'

open_api_server_shipments_setshipmentpalletscount:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.shipments::setShipmentPalletsCountAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

open_api_server_shipments_transferordersfromshipment:
    path:     /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/transfer
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.shipments::transferOrdersFromShipmentAction
    requirements:
        campaignId: '\d+'
        shipmentId: '\d+'

# stocks
open_api_server_stocks_getstocks:
    path:     /campaigns/{campaignId}/offers/stocks
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.stocks::getStocksAction
    requirements:
        campaignId: '\d+'

open_api_server_stocks_updatestocks:
    path:     /campaigns/{campaignId}/offers/stocks
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.stocks::updateStocksAction
    requirements:
        campaignId: '\d+'

# tariffs
open_api_server_tariffs_calculatetariffs:
    path:     /tariffs/calculate
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.tariffs::calculateTariffsAction

# warehouses
open_api_server_warehouses_getfulfillmentwarehouses:
    path:     /warehouses
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.warehouses::getFulfillmentWarehousesAction

open_api_server_warehouses_getwarehouses:
    path:     /businesses/{businessId}/warehouses
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.warehouses::getWarehousesAction
    requirements:
        businessId: '\d+'

