# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /api                        controllers.ApiDocController.api


#Functions for Bids API
POST     /businesses/:businessId/bids/info                     controllers.BidsApiController.getBidsInfoForBusiness(request: Request, businessId: Long)
POST     /businesses/:businessId/bids/recommendations                     controllers.BidsApiController.getBidsRecommendations(request: Request, businessId: Long)
PUT     /businesses/:businessId/bids                     controllers.BidsApiController.putBidsForBusiness(request: Request, businessId: Long)
PUT     /campaigns/:campaignId/bids                     controllers.BidsApiController.putBidsForCampaign(request: Request, campaignId: Long)

#Functions for BusinessOfferMappings API
POST     /businesses/:businessId/offer-mappings/archive                     controllers.BusinessOfferMappingsApiController.addOffersToArchive(request: Request, businessId: Long)
POST     /businesses/:businessId/offer-mappings/delete                     controllers.BusinessOfferMappingsApiController.deleteOffers(request: Request, businessId: Long)
POST     /businesses/:businessId/offer-mappings/unarchive                     controllers.BusinessOfferMappingsApiController.deleteOffersFromArchive(request: Request, businessId: Long)
POST     /businesses/:businessId/offer-mappings                     controllers.BusinessOfferMappingsApiController.getOfferMappings(request: Request, businessId: Long)
POST     /businesses/:businessId/offer-mappings/suggestions                     controllers.BusinessOfferMappingsApiController.getSuggestedOfferMappings(request: Request, businessId: Long)
POST     /businesses/:businessId/offer-mappings/update                     controllers.BusinessOfferMappingsApiController.updateOfferMappings(request: Request, businessId: Long)

#Functions for Businesses API
POST     /businesses/:businessId/settings                     controllers.BusinessesApiController.getBusinessSettings(request: Request, businessId: Long)

#Functions for Campaigns API
GET     /campaigns/:campaignId                     controllers.CampaignsApiController.getCampaign(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/logins                     controllers.CampaignsApiController.getCampaignLogins(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/region                     controllers.CampaignsApiController.getCampaignRegion(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/settings                     controllers.CampaignsApiController.getCampaignSettings(request: Request, campaignId: Long)
GET     /campaigns                     controllers.CampaignsApiController.getCampaigns(request: Request)
GET     /campaigns/by_login/:login                     controllers.CampaignsApiController.getCampaignsByLogin(request: Request, login: String)

#Functions for Categories API
POST     /categories/max-sale-quantum                     controllers.CategoriesApiController.getCategoriesMaxSaleQuantum(request: Request)
POST     /categories/tree                     controllers.CategoriesApiController.getCategoriesTree(request: Request)

#Functions for Chats API
POST     /businesses/:businessId/chats/new                     controllers.ChatsApiController.createChat(request: Request, businessId: Long)
POST     /businesses/:businessId/chats/history                     controllers.ChatsApiController.getChatHistory(request: Request, businessId: Long)
POST     /businesses/:businessId/chats                     controllers.ChatsApiController.getChats(request: Request, businessId: Long)
POST     /businesses/:businessId/chats/file/send                     controllers.ChatsApiController.sendFileToChat(request: Request, businessId: Long)
POST     /businesses/:businessId/chats/message                     controllers.ChatsApiController.sendMessageToChat(request: Request, businessId: Long)

#Functions for Content API
POST     /category/:categoryId/parameters                     controllers.ContentApiController.getCategoryContentParameters(request: Request, categoryId: Long)
POST     /businesses/:businessId/offer-cards                     controllers.ContentApiController.getOfferCardsContentStatus(request: Request, businessId: Long)
POST     /businesses/:businessId/offer-cards/update                     controllers.ContentApiController.updateOfferContent(request: Request, businessId: Long)

#Functions for Dbs API
PUT     /campaigns/:campaignId/orders/:orderId/cancellation/accept                     controllers.DbsApiController.acceptOrderCancellation(request: Request, campaignId: Long, orderId: Long)
POST     /campaigns/:campaignId/hidden-offers                     controllers.DbsApiController.addHiddenOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings/archive                     controllers.DbsApiController.addOffersToArchive(request: Request, businessId: Long)
POST     /tariffs/calculate                     controllers.DbsApiController.calculateTariffs(request: Request)
POST     /businesses/:businessId/price-quarantine/confirm                     controllers.DbsApiController.confirmBusinessPrices(request: Request, businessId: Long)
POST     /campaigns/:campaignId/price-quarantine/confirm                     controllers.DbsApiController.confirmCampaignPrices(request: Request, campaignId: Long)
POST     /businesses/:businessId/chats/new                     controllers.DbsApiController.createChat(request: Request, businessId: Long)
POST     /campaigns/:campaignId/outlets                     controllers.DbsApiController.createOutlet(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offers/delete                     controllers.DbsApiController.deleteCampaignOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/goods-feedback/comments/delete                     controllers.DbsApiController.deleteGoodsFeedbackComment(request: Request, businessId: Long)
POST     /campaigns/:campaignId/hidden-offers/delete                     controllers.DbsApiController.deleteHiddenOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings/delete                     controllers.DbsApiController.deleteOffers(request: Request, businessId: Long)
POST     /businesses/:businessId/offer-mappings/unarchive                     controllers.DbsApiController.deleteOffersFromArchive(request: Request, businessId: Long)
DELETE     /campaigns/:campaignId/outlets/:outletId                     controllers.DbsApiController.deleteOutlet(request: Request, campaignId: Long, outletId: Long)
DELETE     /campaigns/:campaignId/outlets/licenses                     controllers.DbsApiController.deleteOutletLicenses(request: Request, campaignId: Long)
POST     /businesses/:businessId/promos/offers/delete                     controllers.DbsApiController.deletePromoOffers(request: Request, businessId: Long)
POST     /reports/boost-consolidated/generate                     controllers.DbsApiController.generateBoostConsolidatedReport(request: Request)
POST     /reports/competitors-position/generate                     controllers.DbsApiController.generateCompetitorsPositionReport(request: Request)
POST     /reports/goods-feedback/generate                     controllers.DbsApiController.generateGoodsFeedbackReport(request: Request)
POST     /reports/documents/labels/generate                     controllers.DbsApiController.generateMassOrderLabelsReport(request: Request)
GET     /campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes/:boxId/label                     controllers.DbsApiController.generateOrderLabel(request: Request, campaignId: Long, orderId: Long, shipmentId: Long, boxId: Long)
GET     /campaigns/:campaignId/orders/:orderId/delivery/labels                     controllers.DbsApiController.generateOrderLabels(request: Request, campaignId: Long, orderId: Long)
POST     /reports/prices/generate                     controllers.DbsApiController.generatePricesReport(request: Request)
POST     /reports/shelf-statistics/generate                     controllers.DbsApiController.generateShelfsStatisticsReport(request: Request)
POST     /reports/shows-sales/generate                     controllers.DbsApiController.generateShowsSalesReport(request: Request)
POST     /reports/stocks-on-warehouses/generate                     controllers.DbsApiController.generateStocksOnWarehousesReport(request: Request)
POST     /reports/united-marketplace-services/generate                     controllers.DbsApiController.generateUnitedMarketplaceServicesReport(request: Request)
POST     /reports/united-netting/generate                     controllers.DbsApiController.generateUnitedNettingReport(request: Request)
POST     /reports/united-orders/generate                     controllers.DbsApiController.generateUnitedOrdersReport(request: Request)
GET     /campaigns/:campaignId/offers/all                     controllers.DbsApiController.getAllOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/bids/info                     controllers.DbsApiController.getBidsInfoForBusiness(request: Request, businessId: Long)
POST     /businesses/:businessId/bids/recommendations                     controllers.DbsApiController.getBidsRecommendations(request: Request, businessId: Long)
POST     /businesses/:businessId/price-quarantine                     controllers.DbsApiController.getBusinessQuarantineOffers(request: Request, businessId: Long)
POST     /businesses/:businessId/settings                     controllers.DbsApiController.getBusinessSettings(request: Request, businessId: Long)
GET     /campaigns/:campaignId                     controllers.DbsApiController.getCampaign(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/logins                     controllers.DbsApiController.getCampaignLogins(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offers                     controllers.DbsApiController.getCampaignOffers(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/price-quarantine                     controllers.DbsApiController.getCampaignQuarantineOffers(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/region                     controllers.DbsApiController.getCampaignRegion(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/settings                     controllers.DbsApiController.getCampaignSettings(request: Request, campaignId: Long)
GET     /campaigns                     controllers.DbsApiController.getCampaigns(request: Request)
GET     /campaigns/by_login/:login                     controllers.DbsApiController.getCampaignsByLogin(request: Request, login: String)
POST     /categories/max-sale-quantum                     controllers.DbsApiController.getCategoriesMaxSaleQuantum(request: Request)
POST     /categories/tree                     controllers.DbsApiController.getCategoriesTree(request: Request)
POST     /category/:categoryId/parameters                     controllers.DbsApiController.getCategoryContentParameters(request: Request, categoryId: Long)
POST     /businesses/:businessId/chats/history                     controllers.DbsApiController.getChatHistory(request: Request, businessId: Long)
POST     /businesses/:businessId/chats                     controllers.DbsApiController.getChats(request: Request, businessId: Long)
GET     /delivery/services                     controllers.DbsApiController.getDeliveryServices(request: Request)
GET     /campaigns/:campaignId/feeds/:feedId                     controllers.DbsApiController.getFeed(request: Request, campaignId: Long, feedId: Long)
GET     /campaigns/:campaignId/feeds/:feedId/index-logs                     controllers.DbsApiController.getFeedIndexLogs(request: Request, campaignId: Long, feedId: Long)
GET     /campaigns/:campaignId/feedback/updates                     controllers.DbsApiController.getFeedbackAndCommentUpdates(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/feeds                     controllers.DbsApiController.getFeeds(request: Request, campaignId: Long)
POST     /businesses/:businessId/goods-feedback/comments                     controllers.DbsApiController.getGoodsFeedbackComments(request: Request, businessId: Long)
POST     /businesses/:businessId/goods-feedback                     controllers.DbsApiController.getGoodsFeedbacks(request: Request, businessId: Long)
POST     /campaigns/:campaignId/stats/skus                     controllers.DbsApiController.getGoodsStats(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/hidden-offers                     controllers.DbsApiController.getHiddenOffers(request: Request, campaignId: Long)
GET     /models/:modelId                     controllers.DbsApiController.getModel(request: Request, modelId: Long)
GET     /models/:modelId/offers                     controllers.DbsApiController.getModelOffers(request: Request, modelId: Long)
POST     /models                     controllers.DbsApiController.getModels(request: Request)
POST     /models/offers                     controllers.DbsApiController.getModelsOffers(request: Request)
POST     /businesses/:businessId/offer-cards                     controllers.DbsApiController.getOfferCardsContentStatus(request: Request, businessId: Long)
GET     /campaigns/:campaignId/offer-mapping-entries                     controllers.DbsApiController.getOfferMappingEntries(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings                     controllers.DbsApiController.getOfferMappings(request: Request, businessId: Long)
POST     /businesses/:businessId/offers/recommendations                     controllers.DbsApiController.getOfferRecommendations(request: Request, businessId: Long)
GET     /campaigns/:campaignId/offers                     controllers.DbsApiController.getOffers(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/orders/:orderId                     controllers.DbsApiController.getOrder(request: Request, campaignId: Long, orderId: Long)
POST     /campaigns/:campaignId/orders/:orderId/business-buyer                     controllers.DbsApiController.getOrderBusinessBuyerInfo(request: Request, campaignId: Long, orderId: Long)
POST     /campaigns/:campaignId/orders/:orderId/documents                     controllers.DbsApiController.getOrderBusinessDocumentsInfo(request: Request, campaignId: Long, orderId: Long)
GET     /campaigns/:campaignId/orders/:orderId/buyer                     controllers.DbsApiController.getOrderBuyerInfo(request: Request, campaignId: Long, orderId: Long)
GET     /campaigns/:campaignId/orders/:orderId/delivery/labels/data                     controllers.DbsApiController.getOrderLabelsData(request: Request, campaignId: Long, orderId: Long)
GET     /campaigns/:campaignId/orders                     controllers.DbsApiController.getOrders(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/stats/orders                     controllers.DbsApiController.getOrdersStats(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/outlets/:outletId                     controllers.DbsApiController.getOutlet(request: Request, campaignId: Long, outletId: Long)
GET     /campaigns/:campaignId/outlets/licenses                     controllers.DbsApiController.getOutletLicenses(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/outlets                     controllers.DbsApiController.getOutlets(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/offer-prices                     controllers.DbsApiController.getPrices(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offer-prices                     controllers.DbsApiController.getPricesByOfferIds(request: Request, campaignId: Long)
POST     /businesses/:businessId/promos/offers                     controllers.DbsApiController.getPromoOffers(request: Request, businessId: Long)
POST     /businesses/:businessId/promos                     controllers.DbsApiController.getPromos(request: Request, businessId: Long)
POST     /campaigns/:campaignId/ratings/quality/details                     controllers.DbsApiController.getQualityRatingDetails(request: Request, campaignId: Long)
POST     /businesses/:businessId/ratings/quality                     controllers.DbsApiController.getQualityRatings(request: Request, businessId: Long)
GET     /reports/info/:reportId                     controllers.DbsApiController.getReportInfo(request: Request, reportId: String)
GET     /campaigns/:campaignId/orders/:orderId/returns/:returnId                     controllers.DbsApiController.getReturn(request: Request, campaignId: Long, orderId: Long, returnId: Long)
GET     /campaigns/:campaignId/orders/:orderId/returns/:returnId/application                     controllers.DbsApiController.getReturnApplication(request: Request, campaignId: Long, orderId: Long, returnId: Long)
GET     /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision/:itemId/image/:imageHash                     controllers.DbsApiController.getReturnPhoto(request: Request, campaignId: Long, orderId: Long, returnId: Long, itemId: Long, imageHash: String)
GET     /campaigns/:campaignId/returns                     controllers.DbsApiController.getReturns(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offers/stocks                     controllers.DbsApiController.getStocks(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offer-mapping-entries/suggestions                     controllers.DbsApiController.getSuggestedOfferMappingEntries(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings/suggestions                     controllers.DbsApiController.getSuggestedOfferMappings(request: Request, businessId: Long)
POST     /campaigns/:campaignId/offer-prices/suggestions                     controllers.DbsApiController.getSuggestedPrices(request: Request, campaignId: Long)
GET     /businesses/:businessId/warehouses                     controllers.DbsApiController.getWarehouses(request: Request, businessId: Long)
POST     /campaigns/:campaignId/orders/:orderId/deliverDigitalGoods                     controllers.DbsApiController.provideOrderDigitalCodes(request: Request, campaignId: Long, orderId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/identifiers                     controllers.DbsApiController.provideOrderItemIdentifiers(request: Request, campaignId: Long, orderId: Long)
PUT     /businesses/:businessId/bids                     controllers.DbsApiController.putBidsForBusiness(request: Request, businessId: Long)
PUT     /campaigns/:campaignId/bids                     controllers.DbsApiController.putBidsForCampaign(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/feeds/:feedId/refresh                     controllers.DbsApiController.refreshFeed(request: Request, campaignId: Long, feedId: Long)
GET     /models                     controllers.DbsApiController.searchModels(request: Request)
GET     /regions/:regionId/children                     controllers.DbsApiController.searchRegionChildren(request: Request, regionId: Long)
GET     /regions/:regionId                     controllers.DbsApiController.searchRegionsById(request: Request, regionId: Long)
GET     /regions                     controllers.DbsApiController.searchRegionsByName(request: Request)
POST     /businesses/:businessId/chats/file/send                     controllers.DbsApiController.sendFileToChat(request: Request, businessId: Long)
POST     /businesses/:businessId/chats/message                     controllers.DbsApiController.sendMessageToChat(request: Request, businessId: Long)
POST     /campaigns/:campaignId/feeds/:feedId/params                     controllers.DbsApiController.setFeedParams(request: Request, campaignId: Long, feedId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/boxes                     controllers.DbsApiController.setOrderBoxLayout(request: Request, campaignId: Long, orderId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/delivery/date                     controllers.DbsApiController.setOrderDeliveryDate(request: Request, campaignId: Long, orderId: Long)
POST     /campaigns/:campaignId/orders/:orderId/delivery/track                     controllers.DbsApiController.setOrderDeliveryTrackCode(request: Request, campaignId: Long, orderId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes                     controllers.DbsApiController.setOrderShipmentBoxes(request: Request, campaignId: Long, orderId: Long, shipmentId: Long)
POST     /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision                     controllers.DbsApiController.setReturnDecision(request: Request, campaignId: Long, orderId: Long, returnId: Long)
POST     /businesses/:businessId/goods-feedback/skip-reaction                     controllers.DbsApiController.skipGoodsFeedbacksReaction(request: Request, businessId: Long)
POST     /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision/submit                     controllers.DbsApiController.submitReturnDecision(request: Request, campaignId: Long, orderId: Long, returnId: Long)
POST     /businesses/:businessId/offer-prices/updates                     controllers.DbsApiController.updateBusinessPrices(request: Request, businessId: Long)
POST     /campaigns/:campaignId/offers/update                     controllers.DbsApiController.updateCampaignOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/goods-feedback/comments/update                     controllers.DbsApiController.updateGoodsFeedbackComment(request: Request, businessId: Long)
POST     /businesses/:businessId/offer-cards/update                     controllers.DbsApiController.updateOfferContent(request: Request, businessId: Long)
POST     /campaigns/:campaignId/offer-mapping-entries/updates                     controllers.DbsApiController.updateOfferMappingEntries(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings/update                     controllers.DbsApiController.updateOfferMappings(request: Request, businessId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/items                     controllers.DbsApiController.updateOrderItems(request: Request, campaignId: Long, orderId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/status                     controllers.DbsApiController.updateOrderStatus(request: Request, campaignId: Long, orderId: Long)
POST     /campaigns/:campaignId/orders/status-update                     controllers.DbsApiController.updateOrderStatuses(request: Request, campaignId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/delivery/storage-limit                     controllers.DbsApiController.updateOrderStorageLimit(request: Request, campaignId: Long, orderId: Long)
PUT     /campaigns/:campaignId/outlets/:outletId                     controllers.DbsApiController.updateOutlet(request: Request, campaignId: Long, outletId: Long)
POST     /campaigns/:campaignId/outlets/licenses                     controllers.DbsApiController.updateOutletLicenses(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offer-prices/updates                     controllers.DbsApiController.updatePrices(request: Request, campaignId: Long)
POST     /businesses/:businessId/promos/offers/update                     controllers.DbsApiController.updatePromoOffers(request: Request, businessId: Long)
PUT     /campaigns/:campaignId/offers/stocks                     controllers.DbsApiController.updateStocks(request: Request, campaignId: Long)

#Functions for DeliveryServices API
GET     /delivery/services                     controllers.DeliveryServicesApiController.getDeliveryServices(request: Request)

#Functions for Express API
POST     /campaigns/:campaignId/hidden-offers                     controllers.ExpressApiController.addHiddenOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings/archive                     controllers.ExpressApiController.addOffersToArchive(request: Request, businessId: Long)
POST     /tariffs/calculate                     controllers.ExpressApiController.calculateTariffs(request: Request)
POST     /businesses/:businessId/price-quarantine/confirm                     controllers.ExpressApiController.confirmBusinessPrices(request: Request, businessId: Long)
POST     /campaigns/:campaignId/price-quarantine/confirm                     controllers.ExpressApiController.confirmCampaignPrices(request: Request, campaignId: Long)
POST     /businesses/:businessId/chats/new                     controllers.ExpressApiController.createChat(request: Request, businessId: Long)
POST     /campaigns/:campaignId/offers/delete                     controllers.ExpressApiController.deleteCampaignOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/goods-feedback/comments/delete                     controllers.ExpressApiController.deleteGoodsFeedbackComment(request: Request, businessId: Long)
POST     /campaigns/:campaignId/hidden-offers/delete                     controllers.ExpressApiController.deleteHiddenOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings/delete                     controllers.ExpressApiController.deleteOffers(request: Request, businessId: Long)
POST     /businesses/:businessId/offer-mappings/unarchive                     controllers.ExpressApiController.deleteOffersFromArchive(request: Request, businessId: Long)
POST     /businesses/:businessId/promos/offers/delete                     controllers.ExpressApiController.deletePromoOffers(request: Request, businessId: Long)
POST     /reports/boost-consolidated/generate                     controllers.ExpressApiController.generateBoostConsolidatedReport(request: Request)
POST     /reports/competitors-position/generate                     controllers.ExpressApiController.generateCompetitorsPositionReport(request: Request)
POST     /reports/goods-feedback/generate                     controllers.ExpressApiController.generateGoodsFeedbackReport(request: Request)
POST     /reports/goods-realization/generate                     controllers.ExpressApiController.generateGoodsRealizationReport(request: Request)
POST     /reports/documents/labels/generate                     controllers.ExpressApiController.generateMassOrderLabelsReport(request: Request)
GET     /campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes/:boxId/label                     controllers.ExpressApiController.generateOrderLabel(request: Request, campaignId: Long, orderId: Long, shipmentId: Long, boxId: Long)
GET     /campaigns/:campaignId/orders/:orderId/delivery/labels                     controllers.ExpressApiController.generateOrderLabels(request: Request, campaignId: Long, orderId: Long)
POST     /reports/prices/generate                     controllers.ExpressApiController.generatePricesReport(request: Request)
POST     /reports/shelf-statistics/generate                     controllers.ExpressApiController.generateShelfsStatisticsReport(request: Request)
POST     /reports/shows-sales/generate                     controllers.ExpressApiController.generateShowsSalesReport(request: Request)
POST     /reports/stocks-on-warehouses/generate                     controllers.ExpressApiController.generateStocksOnWarehousesReport(request: Request)
POST     /reports/united-marketplace-services/generate                     controllers.ExpressApiController.generateUnitedMarketplaceServicesReport(request: Request)
POST     /reports/united-netting/generate                     controllers.ExpressApiController.generateUnitedNettingReport(request: Request)
POST     /reports/united-orders/generate                     controllers.ExpressApiController.generateUnitedOrdersReport(request: Request)
GET     /campaigns/:campaignId/offers/all                     controllers.ExpressApiController.getAllOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/bids/info                     controllers.ExpressApiController.getBidsInfoForBusiness(request: Request, businessId: Long)
POST     /businesses/:businessId/bids/recommendations                     controllers.ExpressApiController.getBidsRecommendations(request: Request, businessId: Long)
POST     /businesses/:businessId/price-quarantine                     controllers.ExpressApiController.getBusinessQuarantineOffers(request: Request, businessId: Long)
POST     /businesses/:businessId/settings                     controllers.ExpressApiController.getBusinessSettings(request: Request, businessId: Long)
GET     /campaigns/:campaignId                     controllers.ExpressApiController.getCampaign(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/logins                     controllers.ExpressApiController.getCampaignLogins(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offers                     controllers.ExpressApiController.getCampaignOffers(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/price-quarantine                     controllers.ExpressApiController.getCampaignQuarantineOffers(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/region                     controllers.ExpressApiController.getCampaignRegion(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/settings                     controllers.ExpressApiController.getCampaignSettings(request: Request, campaignId: Long)
GET     /campaigns                     controllers.ExpressApiController.getCampaigns(request: Request)
GET     /campaigns/by_login/:login                     controllers.ExpressApiController.getCampaignsByLogin(request: Request, login: String)
POST     /categories/max-sale-quantum                     controllers.ExpressApiController.getCategoriesMaxSaleQuantum(request: Request)
POST     /categories/tree                     controllers.ExpressApiController.getCategoriesTree(request: Request)
POST     /category/:categoryId/parameters                     controllers.ExpressApiController.getCategoryContentParameters(request: Request, categoryId: Long)
POST     /businesses/:businessId/chats/history                     controllers.ExpressApiController.getChatHistory(request: Request, businessId: Long)
POST     /businesses/:businessId/chats                     controllers.ExpressApiController.getChats(request: Request, businessId: Long)
GET     /delivery/services                     controllers.ExpressApiController.getDeliveryServices(request: Request)
GET     /campaigns/:campaignId/feeds/:feedId                     controllers.ExpressApiController.getFeed(request: Request, campaignId: Long, feedId: Long)
GET     /campaigns/:campaignId/feeds/:feedId/index-logs                     controllers.ExpressApiController.getFeedIndexLogs(request: Request, campaignId: Long, feedId: Long)
GET     /campaigns/:campaignId/feedback/updates                     controllers.ExpressApiController.getFeedbackAndCommentUpdates(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/feeds                     controllers.ExpressApiController.getFeeds(request: Request, campaignId: Long)
POST     /businesses/:businessId/goods-feedback/comments                     controllers.ExpressApiController.getGoodsFeedbackComments(request: Request, businessId: Long)
POST     /businesses/:businessId/goods-feedback                     controllers.ExpressApiController.getGoodsFeedbacks(request: Request, businessId: Long)
POST     /campaigns/:campaignId/stats/skus                     controllers.ExpressApiController.getGoodsStats(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/hidden-offers                     controllers.ExpressApiController.getHiddenOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-cards                     controllers.ExpressApiController.getOfferCardsContentStatus(request: Request, businessId: Long)
GET     /campaigns/:campaignId/offer-mapping-entries                     controllers.ExpressApiController.getOfferMappingEntries(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings                     controllers.ExpressApiController.getOfferMappings(request: Request, businessId: Long)
POST     /businesses/:businessId/offers/recommendations                     controllers.ExpressApiController.getOfferRecommendations(request: Request, businessId: Long)
GET     /campaigns/:campaignId/offers                     controllers.ExpressApiController.getOffers(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/orders/:orderId                     controllers.ExpressApiController.getOrder(request: Request, campaignId: Long, orderId: Long)
POST     /campaigns/:campaignId/orders/:orderId/business-buyer                     controllers.ExpressApiController.getOrderBusinessBuyerInfo(request: Request, campaignId: Long, orderId: Long)
POST     /campaigns/:campaignId/orders/:orderId/documents                     controllers.ExpressApiController.getOrderBusinessDocumentsInfo(request: Request, campaignId: Long, orderId: Long)
GET     /campaigns/:campaignId/orders/:orderId/delivery/labels/data                     controllers.ExpressApiController.getOrderLabelsData(request: Request, campaignId: Long, orderId: Long)
GET     /campaigns/:campaignId/orders                     controllers.ExpressApiController.getOrders(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/stats/orders                     controllers.ExpressApiController.getOrdersStats(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/offer-prices                     controllers.ExpressApiController.getPrices(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offer-prices                     controllers.ExpressApiController.getPricesByOfferIds(request: Request, campaignId: Long)
POST     /businesses/:businessId/promos/offers                     controllers.ExpressApiController.getPromoOffers(request: Request, businessId: Long)
POST     /businesses/:businessId/promos                     controllers.ExpressApiController.getPromos(request: Request, businessId: Long)
POST     /campaigns/:campaignId/ratings/quality/details                     controllers.ExpressApiController.getQualityRatingDetails(request: Request, campaignId: Long)
POST     /businesses/:businessId/ratings/quality                     controllers.ExpressApiController.getQualityRatings(request: Request, businessId: Long)
GET     /reports/info/:reportId                     controllers.ExpressApiController.getReportInfo(request: Request, reportId: String)
GET     /campaigns/:campaignId/orders/:orderId/returns/:returnId                     controllers.ExpressApiController.getReturn(request: Request, campaignId: Long, orderId: Long, returnId: Long)
GET     /campaigns/:campaignId/orders/:orderId/returns/:returnId/application                     controllers.ExpressApiController.getReturnApplication(request: Request, campaignId: Long, orderId: Long, returnId: Long)
GET     /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision/:itemId/image/:imageHash                     controllers.ExpressApiController.getReturnPhoto(request: Request, campaignId: Long, orderId: Long, returnId: Long, itemId: Long, imageHash: String)
GET     /campaigns/:campaignId/returns                     controllers.ExpressApiController.getReturns(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offers/stocks                     controllers.ExpressApiController.getStocks(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offer-mapping-entries/suggestions                     controllers.ExpressApiController.getSuggestedOfferMappingEntries(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings/suggestions                     controllers.ExpressApiController.getSuggestedOfferMappings(request: Request, businessId: Long)
POST     /campaigns/:campaignId/offer-prices/suggestions                     controllers.ExpressApiController.getSuggestedPrices(request: Request, campaignId: Long)
GET     /businesses/:businessId/warehouses                     controllers.ExpressApiController.getWarehouses(request: Request, businessId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/identifiers                     controllers.ExpressApiController.provideOrderItemIdentifiers(request: Request, campaignId: Long, orderId: Long)
PUT     /businesses/:businessId/bids                     controllers.ExpressApiController.putBidsForBusiness(request: Request, businessId: Long)
PUT     /campaigns/:campaignId/bids                     controllers.ExpressApiController.putBidsForCampaign(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/feeds/:feedId/refresh                     controllers.ExpressApiController.refreshFeed(request: Request, campaignId: Long, feedId: Long)
GET     /regions/:regionId/children                     controllers.ExpressApiController.searchRegionChildren(request: Request, regionId: Long)
GET     /regions/:regionId                     controllers.ExpressApiController.searchRegionsById(request: Request, regionId: Long)
GET     /regions                     controllers.ExpressApiController.searchRegionsByName(request: Request)
POST     /businesses/:businessId/chats/file/send                     controllers.ExpressApiController.sendFileToChat(request: Request, businessId: Long)
POST     /businesses/:businessId/chats/message                     controllers.ExpressApiController.sendMessageToChat(request: Request, businessId: Long)
POST     /campaigns/:campaignId/feeds/:feedId/params                     controllers.ExpressApiController.setFeedParams(request: Request, campaignId: Long, feedId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/boxes                     controllers.ExpressApiController.setOrderBoxLayout(request: Request, campaignId: Long, orderId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes                     controllers.ExpressApiController.setOrderShipmentBoxes(request: Request, campaignId: Long, orderId: Long, shipmentId: Long)
POST     /businesses/:businessId/goods-feedback/skip-reaction                     controllers.ExpressApiController.skipGoodsFeedbacksReaction(request: Request, businessId: Long)
POST     /businesses/:businessId/offer-prices/updates                     controllers.ExpressApiController.updateBusinessPrices(request: Request, businessId: Long)
POST     /campaigns/:campaignId/offers/update                     controllers.ExpressApiController.updateCampaignOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/goods-feedback/comments/update                     controllers.ExpressApiController.updateGoodsFeedbackComment(request: Request, businessId: Long)
POST     /businesses/:businessId/offer-cards/update                     controllers.ExpressApiController.updateOfferContent(request: Request, businessId: Long)
POST     /campaigns/:campaignId/offer-mapping-entries/updates                     controllers.ExpressApiController.updateOfferMappingEntries(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings/update                     controllers.ExpressApiController.updateOfferMappings(request: Request, businessId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/items                     controllers.ExpressApiController.updateOrderItems(request: Request, campaignId: Long, orderId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/status                     controllers.ExpressApiController.updateOrderStatus(request: Request, campaignId: Long, orderId: Long)
POST     /campaigns/:campaignId/orders/status-update                     controllers.ExpressApiController.updateOrderStatuses(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offer-prices/updates                     controllers.ExpressApiController.updatePrices(request: Request, campaignId: Long)
POST     /businesses/:businessId/promos/offers/update                     controllers.ExpressApiController.updatePromoOffers(request: Request, businessId: Long)
PUT     /campaigns/:campaignId/offers/stocks                     controllers.ExpressApiController.updateStocks(request: Request, campaignId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/verifyEac                     controllers.ExpressApiController.verifyOrderEac(request: Request, campaignId: Long, orderId: Long)

#Functions for Fbs API
POST     /campaigns/:campaignId/hidden-offers                     controllers.FbsApiController.addHiddenOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings/archive                     controllers.FbsApiController.addOffersToArchive(request: Request, businessId: Long)
POST     /tariffs/calculate                     controllers.FbsApiController.calculateTariffs(request: Request)
POST     /businesses/:businessId/price-quarantine/confirm                     controllers.FbsApiController.confirmBusinessPrices(request: Request, businessId: Long)
POST     /campaigns/:campaignId/price-quarantine/confirm                     controllers.FbsApiController.confirmCampaignPrices(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/first-mile/shipments/:shipmentId/confirm                     controllers.FbsApiController.confirmShipment(request: Request, campaignId: Long, shipmentId: Long)
POST     /businesses/:businessId/chats/new                     controllers.FbsApiController.createChat(request: Request, businessId: Long)
POST     /campaigns/:campaignId/offers/delete                     controllers.FbsApiController.deleteCampaignOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/goods-feedback/comments/delete                     controllers.FbsApiController.deleteGoodsFeedbackComment(request: Request, businessId: Long)
POST     /campaigns/:campaignId/hidden-offers/delete                     controllers.FbsApiController.deleteHiddenOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings/delete                     controllers.FbsApiController.deleteOffers(request: Request, businessId: Long)
POST     /businesses/:businessId/offer-mappings/unarchive                     controllers.FbsApiController.deleteOffersFromArchive(request: Request, businessId: Long)
POST     /businesses/:businessId/promos/offers/delete                     controllers.FbsApiController.deletePromoOffers(request: Request, businessId: Long)
GET     /campaigns/:campaignId/first-mile/shipments/:shipmentId/act                     controllers.FbsApiController.downloadShipmentAct(request: Request, campaignId: Long, shipmentId: Long)
GET     /campaigns/:campaignId/first-mile/shipments/:shipmentId/discrepancy-act                     controllers.FbsApiController.downloadShipmentDiscrepancyAct(request: Request, campaignId: Long, shipmentId: Long)
GET     /campaigns/:campaignId/first-mile/shipments/:shipmentId/inbound-act                     controllers.FbsApiController.downloadShipmentInboundAct(request: Request, campaignId: Long, shipmentId: Long)
GET     /campaigns/:campaignId/first-mile/shipments/:shipmentId/pallet/labels                     controllers.FbsApiController.downloadShipmentPalletLabels(request: Request, campaignId: Long, shipmentId: Long)
GET     /campaigns/:campaignId/shipments/reception-transfer-act                     controllers.FbsApiController.downloadShipmentReceptionTransferAct(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/first-mile/shipments/:shipmentId/transportation-waybill                     controllers.FbsApiController.downloadShipmentTransportationWaybill(request: Request, campaignId: Long, shipmentId: Long)
POST     /reports/boost-consolidated/generate                     controllers.FbsApiController.generateBoostConsolidatedReport(request: Request)
POST     /reports/competitors-position/generate                     controllers.FbsApiController.generateCompetitorsPositionReport(request: Request)
POST     /reports/goods-feedback/generate                     controllers.FbsApiController.generateGoodsFeedbackReport(request: Request)
POST     /reports/goods-realization/generate                     controllers.FbsApiController.generateGoodsRealizationReport(request: Request)
POST     /reports/documents/labels/generate                     controllers.FbsApiController.generateMassOrderLabelsReport(request: Request)
GET     /campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes/:boxId/label                     controllers.FbsApiController.generateOrderLabel(request: Request, campaignId: Long, orderId: Long, shipmentId: Long, boxId: Long)
GET     /campaigns/:campaignId/orders/:orderId/delivery/labels                     controllers.FbsApiController.generateOrderLabels(request: Request, campaignId: Long, orderId: Long)
POST     /reports/prices/generate                     controllers.FbsApiController.generatePricesReport(request: Request)
POST     /reports/shelf-statistics/generate                     controllers.FbsApiController.generateShelfsStatisticsReport(request: Request)
POST     /reports/documents/shipment-list/generate                     controllers.FbsApiController.generateShipmentListDocumentReport(request: Request)
POST     /reports/shows-sales/generate                     controllers.FbsApiController.generateShowsSalesReport(request: Request)
POST     /reports/stocks-on-warehouses/generate                     controllers.FbsApiController.generateStocksOnWarehousesReport(request: Request)
POST     /reports/united-marketplace-services/generate                     controllers.FbsApiController.generateUnitedMarketplaceServicesReport(request: Request)
POST     /reports/united-netting/generate                     controllers.FbsApiController.generateUnitedNettingReport(request: Request)
POST     /reports/united-orders/generate                     controllers.FbsApiController.generateUnitedOrdersReport(request: Request)
GET     /campaigns/:campaignId/offers/all                     controllers.FbsApiController.getAllOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/bids/info                     controllers.FbsApiController.getBidsInfoForBusiness(request: Request, businessId: Long)
POST     /businesses/:businessId/bids/recommendations                     controllers.FbsApiController.getBidsRecommendations(request: Request, businessId: Long)
POST     /businesses/:businessId/price-quarantine                     controllers.FbsApiController.getBusinessQuarantineOffers(request: Request, businessId: Long)
POST     /businesses/:businessId/settings                     controllers.FbsApiController.getBusinessSettings(request: Request, businessId: Long)
GET     /campaigns/:campaignId                     controllers.FbsApiController.getCampaign(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/logins                     controllers.FbsApiController.getCampaignLogins(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offers                     controllers.FbsApiController.getCampaignOffers(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/price-quarantine                     controllers.FbsApiController.getCampaignQuarantineOffers(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/region                     controllers.FbsApiController.getCampaignRegion(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/settings                     controllers.FbsApiController.getCampaignSettings(request: Request, campaignId: Long)
GET     /campaigns                     controllers.FbsApiController.getCampaigns(request: Request)
GET     /campaigns/by_login/:login                     controllers.FbsApiController.getCampaignsByLogin(request: Request, login: String)
POST     /categories/max-sale-quantum                     controllers.FbsApiController.getCategoriesMaxSaleQuantum(request: Request)
POST     /categories/tree                     controllers.FbsApiController.getCategoriesTree(request: Request)
POST     /category/:categoryId/parameters                     controllers.FbsApiController.getCategoryContentParameters(request: Request, categoryId: Long)
POST     /businesses/:businessId/chats/history                     controllers.FbsApiController.getChatHistory(request: Request, businessId: Long)
POST     /businesses/:businessId/chats                     controllers.FbsApiController.getChats(request: Request, businessId: Long)
GET     /delivery/services                     controllers.FbsApiController.getDeliveryServices(request: Request)
GET     /campaigns/:campaignId/feeds/:feedId                     controllers.FbsApiController.getFeed(request: Request, campaignId: Long, feedId: Long)
GET     /campaigns/:campaignId/feeds/:feedId/index-logs                     controllers.FbsApiController.getFeedIndexLogs(request: Request, campaignId: Long, feedId: Long)
GET     /campaigns/:campaignId/feedback/updates                     controllers.FbsApiController.getFeedbackAndCommentUpdates(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/feeds                     controllers.FbsApiController.getFeeds(request: Request, campaignId: Long)
POST     /businesses/:businessId/goods-feedback/comments                     controllers.FbsApiController.getGoodsFeedbackComments(request: Request, businessId: Long)
POST     /businesses/:businessId/goods-feedback                     controllers.FbsApiController.getGoodsFeedbacks(request: Request, businessId: Long)
POST     /campaigns/:campaignId/stats/skus                     controllers.FbsApiController.getGoodsStats(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/hidden-offers                     controllers.FbsApiController.getHiddenOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-cards                     controllers.FbsApiController.getOfferCardsContentStatus(request: Request, businessId: Long)
GET     /campaigns/:campaignId/offer-mapping-entries                     controllers.FbsApiController.getOfferMappingEntries(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings                     controllers.FbsApiController.getOfferMappings(request: Request, businessId: Long)
POST     /businesses/:businessId/offers/recommendations                     controllers.FbsApiController.getOfferRecommendations(request: Request, businessId: Long)
GET     /campaigns/:campaignId/offers                     controllers.FbsApiController.getOffers(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/orders/:orderId                     controllers.FbsApiController.getOrder(request: Request, campaignId: Long, orderId: Long)
POST     /campaigns/:campaignId/orders/:orderId/business-buyer                     controllers.FbsApiController.getOrderBusinessBuyerInfo(request: Request, campaignId: Long, orderId: Long)
POST     /campaigns/:campaignId/orders/:orderId/documents                     controllers.FbsApiController.getOrderBusinessDocumentsInfo(request: Request, campaignId: Long, orderId: Long)
GET     /campaigns/:campaignId/orders/:orderId/delivery/labels/data                     controllers.FbsApiController.getOrderLabelsData(request: Request, campaignId: Long, orderId: Long)
GET     /campaigns/:campaignId/orders                     controllers.FbsApiController.getOrders(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/stats/orders                     controllers.FbsApiController.getOrdersStats(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/offer-prices                     controllers.FbsApiController.getPrices(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offer-prices                     controllers.FbsApiController.getPricesByOfferIds(request: Request, campaignId: Long)
POST     /businesses/:businessId/promos/offers                     controllers.FbsApiController.getPromoOffers(request: Request, businessId: Long)
POST     /businesses/:businessId/promos                     controllers.FbsApiController.getPromos(request: Request, businessId: Long)
POST     /campaigns/:campaignId/ratings/quality/details                     controllers.FbsApiController.getQualityRatingDetails(request: Request, campaignId: Long)
POST     /businesses/:businessId/ratings/quality                     controllers.FbsApiController.getQualityRatings(request: Request, businessId: Long)
GET     /reports/info/:reportId                     controllers.FbsApiController.getReportInfo(request: Request, reportId: String)
GET     /campaigns/:campaignId/orders/:orderId/returns/:returnId                     controllers.FbsApiController.getReturn(request: Request, campaignId: Long, orderId: Long, returnId: Long)
GET     /campaigns/:campaignId/orders/:orderId/returns/:returnId/application                     controllers.FbsApiController.getReturnApplication(request: Request, campaignId: Long, orderId: Long, returnId: Long)
GET     /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision/:itemId/image/:imageHash                     controllers.FbsApiController.getReturnPhoto(request: Request, campaignId: Long, orderId: Long, returnId: Long, itemId: Long, imageHash: String)
GET     /campaigns/:campaignId/returns                     controllers.FbsApiController.getReturns(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/first-mile/shipments/:shipmentId                     controllers.FbsApiController.getShipment(request: Request, campaignId: Long, shipmentId: Long)
GET     /campaigns/:campaignId/first-mile/shipments/:shipmentId/orders/info                     controllers.FbsApiController.getShipmentOrdersInfo(request: Request, campaignId: Long, shipmentId: Long)
POST     /campaigns/:campaignId/offers/stocks                     controllers.FbsApiController.getStocks(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offer-mapping-entries/suggestions                     controllers.FbsApiController.getSuggestedOfferMappingEntries(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings/suggestions                     controllers.FbsApiController.getSuggestedOfferMappings(request: Request, businessId: Long)
POST     /campaigns/:campaignId/offer-prices/suggestions                     controllers.FbsApiController.getSuggestedPrices(request: Request, campaignId: Long)
GET     /businesses/:businessId/warehouses                     controllers.FbsApiController.getWarehouses(request: Request, businessId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/identifiers                     controllers.FbsApiController.provideOrderItemIdentifiers(request: Request, campaignId: Long, orderId: Long)
PUT     /businesses/:businessId/bids                     controllers.FbsApiController.putBidsForBusiness(request: Request, businessId: Long)
PUT     /campaigns/:campaignId/bids                     controllers.FbsApiController.putBidsForCampaign(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/feeds/:feedId/refresh                     controllers.FbsApiController.refreshFeed(request: Request, campaignId: Long, feedId: Long)
GET     /regions/:regionId/children                     controllers.FbsApiController.searchRegionChildren(request: Request, regionId: Long)
GET     /regions/:regionId                     controllers.FbsApiController.searchRegionsById(request: Request, regionId: Long)
GET     /regions                     controllers.FbsApiController.searchRegionsByName(request: Request)
PUT     /campaigns/:campaignId/first-mile/shipments                     controllers.FbsApiController.searchShipments(request: Request, campaignId: Long)
POST     /businesses/:businessId/chats/file/send                     controllers.FbsApiController.sendFileToChat(request: Request, businessId: Long)
POST     /businesses/:businessId/chats/message                     controllers.FbsApiController.sendMessageToChat(request: Request, businessId: Long)
POST     /campaigns/:campaignId/feeds/:feedId/params                     controllers.FbsApiController.setFeedParams(request: Request, campaignId: Long, feedId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/boxes                     controllers.FbsApiController.setOrderBoxLayout(request: Request, campaignId: Long, orderId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes                     controllers.FbsApiController.setOrderShipmentBoxes(request: Request, campaignId: Long, orderId: Long, shipmentId: Long)
PUT     /campaigns/:campaignId/first-mile/shipments/:shipmentId/pallets                     controllers.FbsApiController.setShipmentPalletsCount(request: Request, campaignId: Long, shipmentId: Long)
POST     /businesses/:businessId/goods-feedback/skip-reaction                     controllers.FbsApiController.skipGoodsFeedbacksReaction(request: Request, businessId: Long)
POST     /campaigns/:campaignId/first-mile/shipments/:shipmentId/orders/transfer                     controllers.FbsApiController.transferOrdersFromShipment(request: Request, campaignId: Long, shipmentId: Long)
POST     /businesses/:businessId/offer-prices/updates                     controllers.FbsApiController.updateBusinessPrices(request: Request, businessId: Long)
POST     /campaigns/:campaignId/offers/update                     controllers.FbsApiController.updateCampaignOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/goods-feedback/comments/update                     controllers.FbsApiController.updateGoodsFeedbackComment(request: Request, businessId: Long)
POST     /businesses/:businessId/offer-cards/update                     controllers.FbsApiController.updateOfferContent(request: Request, businessId: Long)
POST     /campaigns/:campaignId/offer-mapping-entries/updates                     controllers.FbsApiController.updateOfferMappingEntries(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings/update                     controllers.FbsApiController.updateOfferMappings(request: Request, businessId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/items                     controllers.FbsApiController.updateOrderItems(request: Request, campaignId: Long, orderId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/status                     controllers.FbsApiController.updateOrderStatus(request: Request, campaignId: Long, orderId: Long)
POST     /campaigns/:campaignId/orders/status-update                     controllers.FbsApiController.updateOrderStatuses(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offer-prices/updates                     controllers.FbsApiController.updatePrices(request: Request, campaignId: Long)
POST     /businesses/:businessId/promos/offers/update                     controllers.FbsApiController.updatePromoOffers(request: Request, businessId: Long)
PUT     /campaigns/:campaignId/offers/stocks                     controllers.FbsApiController.updateStocks(request: Request, campaignId: Long)

#Functions for Fby API
POST     /campaigns/:campaignId/hidden-offers                     controllers.FbyApiController.addHiddenOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings/archive                     controllers.FbyApiController.addOffersToArchive(request: Request, businessId: Long)
POST     /tariffs/calculate                     controllers.FbyApiController.calculateTariffs(request: Request)
POST     /businesses/:businessId/price-quarantine/confirm                     controllers.FbyApiController.confirmBusinessPrices(request: Request, businessId: Long)
POST     /campaigns/:campaignId/price-quarantine/confirm                     controllers.FbyApiController.confirmCampaignPrices(request: Request, campaignId: Long)
POST     /businesses/:businessId/chats/new                     controllers.FbyApiController.createChat(request: Request, businessId: Long)
POST     /campaigns/:campaignId/offers/delete                     controllers.FbyApiController.deleteCampaignOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/goods-feedback/comments/delete                     controllers.FbyApiController.deleteGoodsFeedbackComment(request: Request, businessId: Long)
POST     /campaigns/:campaignId/hidden-offers/delete                     controllers.FbyApiController.deleteHiddenOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings/delete                     controllers.FbyApiController.deleteOffers(request: Request, businessId: Long)
POST     /businesses/:businessId/offer-mappings/unarchive                     controllers.FbyApiController.deleteOffersFromArchive(request: Request, businessId: Long)
POST     /businesses/:businessId/promos/offers/delete                     controllers.FbyApiController.deletePromoOffers(request: Request, businessId: Long)
POST     /reports/boost-consolidated/generate                     controllers.FbyApiController.generateBoostConsolidatedReport(request: Request)
POST     /reports/competitors-position/generate                     controllers.FbyApiController.generateCompetitorsPositionReport(request: Request)
POST     /reports/goods-feedback/generate                     controllers.FbyApiController.generateGoodsFeedbackReport(request: Request)
POST     /reports/goods-movement/generate                     controllers.FbyApiController.generateGoodsMovementReport(request: Request)
POST     /reports/goods-realization/generate                     controllers.FbyApiController.generateGoodsRealizationReport(request: Request)
POST     /reports/goods-turnover/generate                     controllers.FbyApiController.generateGoodsTurnoverReport(request: Request)
POST     /reports/prices/generate                     controllers.FbyApiController.generatePricesReport(request: Request)
POST     /reports/shelf-statistics/generate                     controllers.FbyApiController.generateShelfsStatisticsReport(request: Request)
POST     /reports/shows-sales/generate                     controllers.FbyApiController.generateShowsSalesReport(request: Request)
POST     /reports/stocks-on-warehouses/generate                     controllers.FbyApiController.generateStocksOnWarehousesReport(request: Request)
POST     /reports/united-marketplace-services/generate                     controllers.FbyApiController.generateUnitedMarketplaceServicesReport(request: Request)
POST     /reports/united-netting/generate                     controllers.FbyApiController.generateUnitedNettingReport(request: Request)
POST     /reports/united-orders/generate                     controllers.FbyApiController.generateUnitedOrdersReport(request: Request)
GET     /campaigns/:campaignId/offers/all                     controllers.FbyApiController.getAllOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/bids/info                     controllers.FbyApiController.getBidsInfoForBusiness(request: Request, businessId: Long)
POST     /businesses/:businessId/bids/recommendations                     controllers.FbyApiController.getBidsRecommendations(request: Request, businessId: Long)
POST     /businesses/:businessId/price-quarantine                     controllers.FbyApiController.getBusinessQuarantineOffers(request: Request, businessId: Long)
POST     /businesses/:businessId/settings                     controllers.FbyApiController.getBusinessSettings(request: Request, businessId: Long)
GET     /campaigns/:campaignId                     controllers.FbyApiController.getCampaign(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/logins                     controllers.FbyApiController.getCampaignLogins(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offers                     controllers.FbyApiController.getCampaignOffers(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/price-quarantine                     controllers.FbyApiController.getCampaignQuarantineOffers(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/region                     controllers.FbyApiController.getCampaignRegion(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/settings                     controllers.FbyApiController.getCampaignSettings(request: Request, campaignId: Long)
GET     /campaigns                     controllers.FbyApiController.getCampaigns(request: Request)
GET     /campaigns/by_login/:login                     controllers.FbyApiController.getCampaignsByLogin(request: Request, login: String)
POST     /categories/max-sale-quantum                     controllers.FbyApiController.getCategoriesMaxSaleQuantum(request: Request)
POST     /categories/tree                     controllers.FbyApiController.getCategoriesTree(request: Request)
POST     /category/:categoryId/parameters                     controllers.FbyApiController.getCategoryContentParameters(request: Request, categoryId: Long)
POST     /businesses/:businessId/chats/history                     controllers.FbyApiController.getChatHistory(request: Request, businessId: Long)
POST     /businesses/:businessId/chats                     controllers.FbyApiController.getChats(request: Request, businessId: Long)
GET     /campaigns/:campaignId/feeds/:feedId                     controllers.FbyApiController.getFeed(request: Request, campaignId: Long, feedId: Long)
GET     /campaigns/:campaignId/feeds/:feedId/index-logs                     controllers.FbyApiController.getFeedIndexLogs(request: Request, campaignId: Long, feedId: Long)
GET     /campaigns/:campaignId/feedback/updates                     controllers.FbyApiController.getFeedbackAndCommentUpdates(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/feeds                     controllers.FbyApiController.getFeeds(request: Request, campaignId: Long)
GET     /warehouses                     controllers.FbyApiController.getFulfillmentWarehouses(request: Request)
POST     /businesses/:businessId/goods-feedback/comments                     controllers.FbyApiController.getGoodsFeedbackComments(request: Request, businessId: Long)
POST     /businesses/:businessId/goods-feedback                     controllers.FbyApiController.getGoodsFeedbacks(request: Request, businessId: Long)
POST     /campaigns/:campaignId/stats/skus                     controllers.FbyApiController.getGoodsStats(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/hidden-offers                     controllers.FbyApiController.getHiddenOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-cards                     controllers.FbyApiController.getOfferCardsContentStatus(request: Request, businessId: Long)
GET     /campaigns/:campaignId/offer-mapping-entries                     controllers.FbyApiController.getOfferMappingEntries(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings                     controllers.FbyApiController.getOfferMappings(request: Request, businessId: Long)
POST     /businesses/:businessId/offers/recommendations                     controllers.FbyApiController.getOfferRecommendations(request: Request, businessId: Long)
GET     /campaigns/:campaignId/offers                     controllers.FbyApiController.getOffers(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/orders/:orderId                     controllers.FbyApiController.getOrder(request: Request, campaignId: Long, orderId: Long)
POST     /campaigns/:campaignId/orders/:orderId/business-buyer                     controllers.FbyApiController.getOrderBusinessBuyerInfo(request: Request, campaignId: Long, orderId: Long)
POST     /campaigns/:campaignId/orders/:orderId/documents                     controllers.FbyApiController.getOrderBusinessDocumentsInfo(request: Request, campaignId: Long, orderId: Long)
GET     /campaigns/:campaignId/orders                     controllers.FbyApiController.getOrders(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/stats/orders                     controllers.FbyApiController.getOrdersStats(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/offer-prices                     controllers.FbyApiController.getPrices(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offer-prices                     controllers.FbyApiController.getPricesByOfferIds(request: Request, campaignId: Long)
POST     /businesses/:businessId/promos/offers                     controllers.FbyApiController.getPromoOffers(request: Request, businessId: Long)
POST     /businesses/:businessId/promos                     controllers.FbyApiController.getPromos(request: Request, businessId: Long)
POST     /businesses/:businessId/ratings/quality                     controllers.FbyApiController.getQualityRatings(request: Request, businessId: Long)
GET     /reports/info/:reportId                     controllers.FbyApiController.getReportInfo(request: Request, reportId: String)
GET     /campaigns/:campaignId/orders/:orderId/returns/:returnId                     controllers.FbyApiController.getReturn(request: Request, campaignId: Long, orderId: Long, returnId: Long)
GET     /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision/:itemId/image/:imageHash                     controllers.FbyApiController.getReturnPhoto(request: Request, campaignId: Long, orderId: Long, returnId: Long, itemId: Long, imageHash: String)
GET     /campaigns/:campaignId/returns                     controllers.FbyApiController.getReturns(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offers/stocks                     controllers.FbyApiController.getStocks(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offer-mapping-entries/suggestions                     controllers.FbyApiController.getSuggestedOfferMappingEntries(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings/suggestions                     controllers.FbyApiController.getSuggestedOfferMappings(request: Request, businessId: Long)
POST     /campaigns/:campaignId/offer-prices/suggestions                     controllers.FbyApiController.getSuggestedPrices(request: Request, campaignId: Long)
PUT     /businesses/:businessId/bids                     controllers.FbyApiController.putBidsForBusiness(request: Request, businessId: Long)
PUT     /campaigns/:campaignId/bids                     controllers.FbyApiController.putBidsForCampaign(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/feeds/:feedId/refresh                     controllers.FbyApiController.refreshFeed(request: Request, campaignId: Long, feedId: Long)
GET     /regions/:regionId/children                     controllers.FbyApiController.searchRegionChildren(request: Request, regionId: Long)
GET     /regions/:regionId                     controllers.FbyApiController.searchRegionsById(request: Request, regionId: Long)
GET     /regions                     controllers.FbyApiController.searchRegionsByName(request: Request)
POST     /businesses/:businessId/chats/file/send                     controllers.FbyApiController.sendFileToChat(request: Request, businessId: Long)
POST     /businesses/:businessId/chats/message                     controllers.FbyApiController.sendMessageToChat(request: Request, businessId: Long)
POST     /campaigns/:campaignId/feeds/:feedId/params                     controllers.FbyApiController.setFeedParams(request: Request, campaignId: Long, feedId: Long)
POST     /businesses/:businessId/goods-feedback/skip-reaction                     controllers.FbyApiController.skipGoodsFeedbacksReaction(request: Request, businessId: Long)
POST     /businesses/:businessId/offer-prices/updates                     controllers.FbyApiController.updateBusinessPrices(request: Request, businessId: Long)
POST     /campaigns/:campaignId/offers/update                     controllers.FbyApiController.updateCampaignOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/goods-feedback/comments/update                     controllers.FbyApiController.updateGoodsFeedbackComment(request: Request, businessId: Long)
POST     /businesses/:businessId/offer-cards/update                     controllers.FbyApiController.updateOfferContent(request: Request, businessId: Long)
POST     /campaigns/:campaignId/offer-mapping-entries/updates                     controllers.FbyApiController.updateOfferMappingEntries(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-mappings/update                     controllers.FbyApiController.updateOfferMappings(request: Request, businessId: Long)
POST     /campaigns/:campaignId/offer-prices/updates                     controllers.FbyApiController.updatePrices(request: Request, campaignId: Long)
POST     /businesses/:businessId/promos/offers/update                     controllers.FbyApiController.updatePromoOffers(request: Request, businessId: Long)

#Functions for Feedbacks API
GET     /campaigns/:campaignId/feedback/updates                     controllers.FeedbacksApiController.getFeedbackAndCommentUpdates(request: Request, campaignId: Long)

#Functions for Feeds API
GET     /campaigns/:campaignId/feeds/:feedId                     controllers.FeedsApiController.getFeed(request: Request, campaignId: Long, feedId: Long)
GET     /campaigns/:campaignId/feeds/:feedId/index-logs                     controllers.FeedsApiController.getFeedIndexLogs(request: Request, campaignId: Long, feedId: Long)
GET     /campaigns/:campaignId/feeds                     controllers.FeedsApiController.getFeeds(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/feeds/:feedId/refresh                     controllers.FeedsApiController.refreshFeed(request: Request, campaignId: Long, feedId: Long)
POST     /campaigns/:campaignId/feeds/:feedId/params                     controllers.FeedsApiController.setFeedParams(request: Request, campaignId: Long, feedId: Long)

#Functions for GoodsFeedback API
POST     /businesses/:businessId/goods-feedback/comments/delete                     controllers.GoodsFeedbackApiController.deleteGoodsFeedbackComment(request: Request, businessId: Long)
POST     /businesses/:businessId/goods-feedback/comments                     controllers.GoodsFeedbackApiController.getGoodsFeedbackComments(request: Request, businessId: Long)
POST     /businesses/:businessId/goods-feedback                     controllers.GoodsFeedbackApiController.getGoodsFeedbacks(request: Request, businessId: Long)
POST     /businesses/:businessId/goods-feedback/skip-reaction                     controllers.GoodsFeedbackApiController.skipGoodsFeedbacksReaction(request: Request, businessId: Long)
POST     /businesses/:businessId/goods-feedback/comments/update                     controllers.GoodsFeedbackApiController.updateGoodsFeedbackComment(request: Request, businessId: Long)

#Functions for GoodsStats API
POST     /campaigns/:campaignId/stats/skus                     controllers.GoodsStatsApiController.getGoodsStats(request: Request, campaignId: Long)

#Functions for HiddenOffers API
POST     /campaigns/:campaignId/hidden-offers                     controllers.HiddenOffersApiController.addHiddenOffers(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/hidden-offers/delete                     controllers.HiddenOffersApiController.deleteHiddenOffers(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/hidden-offers                     controllers.HiddenOffersApiController.getHiddenOffers(request: Request, campaignId: Long)

#Functions for Models API
GET     /models/:modelId                     controllers.ModelsApiController.getModel(request: Request, modelId: Long)
GET     /models/:modelId/offers                     controllers.ModelsApiController.getModelOffers(request: Request, modelId: Long)
POST     /models                     controllers.ModelsApiController.getModels(request: Request)
POST     /models/offers                     controllers.ModelsApiController.getModelsOffers(request: Request)
GET     /models                     controllers.ModelsApiController.searchModels(request: Request)

#Functions for OfferMappings API
GET     /campaigns/:campaignId/offer-mapping-entries                     controllers.OfferMappingsApiController.getOfferMappingEntries(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offer-mapping-entries/suggestions                     controllers.OfferMappingsApiController.getSuggestedOfferMappingEntries(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offer-mapping-entries/updates                     controllers.OfferMappingsApiController.updateOfferMappingEntries(request: Request, campaignId: Long)

#Functions for Offers API
POST     /campaigns/:campaignId/offers/delete                     controllers.OffersApiController.deleteCampaignOffers(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/offers/all                     controllers.OffersApiController.getAllOffers(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offers                     controllers.OffersApiController.getCampaignOffers(request: Request, campaignId: Long)
POST     /businesses/:businessId/offers/recommendations                     controllers.OffersApiController.getOfferRecommendations(request: Request, businessId: Long)
GET     /campaigns/:campaignId/offers                     controllers.OffersApiController.getOffers(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offers/update                     controllers.OffersApiController.updateCampaignOffers(request: Request, campaignId: Long)

#Functions for OrderBusinessInformation API
POST     /campaigns/:campaignId/orders/:orderId/business-buyer                     controllers.OrderBusinessInformationApiController.getOrderBusinessBuyerInfo(request: Request, campaignId: Long, orderId: Long)
POST     /campaigns/:campaignId/orders/:orderId/documents                     controllers.OrderBusinessInformationApiController.getOrderBusinessDocumentsInfo(request: Request, campaignId: Long, orderId: Long)

#Functions for OrderDelivery API
GET     /campaigns/:campaignId/orders/:orderId/buyer                     controllers.OrderDeliveryApiController.getOrderBuyerInfo(request: Request, campaignId: Long, orderId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/delivery/date                     controllers.OrderDeliveryApiController.setOrderDeliveryDate(request: Request, campaignId: Long, orderId: Long)
POST     /campaigns/:campaignId/orders/:orderId/delivery/track                     controllers.OrderDeliveryApiController.setOrderDeliveryTrackCode(request: Request, campaignId: Long, orderId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/delivery/storage-limit                     controllers.OrderDeliveryApiController.updateOrderStorageLimit(request: Request, campaignId: Long, orderId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/verifyEac                     controllers.OrderDeliveryApiController.verifyOrderEac(request: Request, campaignId: Long, orderId: Long)

#Functions for OrderLabels API
GET     /campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes/:boxId/label                     controllers.OrderLabelsApiController.generateOrderLabel(request: Request, campaignId: Long, orderId: Long, shipmentId: Long, boxId: Long)
GET     /campaigns/:campaignId/orders/:orderId/delivery/labels                     controllers.OrderLabelsApiController.generateOrderLabels(request: Request, campaignId: Long, orderId: Long)
GET     /campaigns/:campaignId/orders/:orderId/delivery/labels/data                     controllers.OrderLabelsApiController.getOrderLabelsData(request: Request, campaignId: Long, orderId: Long)

#Functions for Orders API
PUT     /campaigns/:campaignId/orders/:orderId/cancellation/accept                     controllers.OrdersApiController.acceptOrderCancellation(request: Request, campaignId: Long, orderId: Long)
GET     /campaigns/:campaignId/orders/:orderId                     controllers.OrdersApiController.getOrder(request: Request, campaignId: Long, orderId: Long)
GET     /campaigns/:campaignId/orders                     controllers.OrdersApiController.getOrders(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/orders/:orderId/deliverDigitalGoods                     controllers.OrdersApiController.provideOrderDigitalCodes(request: Request, campaignId: Long, orderId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/identifiers                     controllers.OrdersApiController.provideOrderItemIdentifiers(request: Request, campaignId: Long, orderId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/boxes                     controllers.OrdersApiController.setOrderBoxLayout(request: Request, campaignId: Long, orderId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes                     controllers.OrdersApiController.setOrderShipmentBoxes(request: Request, campaignId: Long, orderId: Long, shipmentId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/items                     controllers.OrdersApiController.updateOrderItems(request: Request, campaignId: Long, orderId: Long)
PUT     /campaigns/:campaignId/orders/:orderId/status                     controllers.OrdersApiController.updateOrderStatus(request: Request, campaignId: Long, orderId: Long)
POST     /campaigns/:campaignId/orders/status-update                     controllers.OrdersApiController.updateOrderStatuses(request: Request, campaignId: Long)

#Functions for OrdersStats API
POST     /campaigns/:campaignId/stats/orders                     controllers.OrdersStatsApiController.getOrdersStats(request: Request, campaignId: Long)

#Functions for OutletLicenses API
DELETE     /campaigns/:campaignId/outlets/licenses                     controllers.OutletLicensesApiController.deleteOutletLicenses(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/outlets/licenses                     controllers.OutletLicensesApiController.getOutletLicenses(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/outlets/licenses                     controllers.OutletLicensesApiController.updateOutletLicenses(request: Request, campaignId: Long)

#Functions for Outlets API
POST     /campaigns/:campaignId/outlets                     controllers.OutletsApiController.createOutlet(request: Request, campaignId: Long)
DELETE     /campaigns/:campaignId/outlets/:outletId                     controllers.OutletsApiController.deleteOutlet(request: Request, campaignId: Long, outletId: Long)
GET     /campaigns/:campaignId/outlets/:outletId                     controllers.OutletsApiController.getOutlet(request: Request, campaignId: Long, outletId: Long)
GET     /campaigns/:campaignId/outlets                     controllers.OutletsApiController.getOutlets(request: Request, campaignId: Long)
PUT     /campaigns/:campaignId/outlets/:outletId                     controllers.OutletsApiController.updateOutlet(request: Request, campaignId: Long, outletId: Long)

#Functions for PriceQuarantine API
POST     /businesses/:businessId/price-quarantine/confirm                     controllers.PriceQuarantineApiController.confirmBusinessPrices(request: Request, businessId: Long)
POST     /campaigns/:campaignId/price-quarantine/confirm                     controllers.PriceQuarantineApiController.confirmCampaignPrices(request: Request, campaignId: Long)
POST     /businesses/:businessId/price-quarantine                     controllers.PriceQuarantineApiController.getBusinessQuarantineOffers(request: Request, businessId: Long)
POST     /campaigns/:campaignId/price-quarantine                     controllers.PriceQuarantineApiController.getCampaignQuarantineOffers(request: Request, campaignId: Long)

#Functions for Prices API
GET     /campaigns/:campaignId/offer-prices                     controllers.PricesApiController.getPrices(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offer-prices                     controllers.PricesApiController.getPricesByOfferIds(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/offer-prices/suggestions                     controllers.PricesApiController.getSuggestedPrices(request: Request, campaignId: Long)
POST     /businesses/:businessId/offer-prices/updates                     controllers.PricesApiController.updateBusinessPrices(request: Request, businessId: Long)
POST     /campaigns/:campaignId/offer-prices/updates                     controllers.PricesApiController.updatePrices(request: Request, campaignId: Long)

#Functions for Promos API
POST     /businesses/:businessId/promos/offers/delete                     controllers.PromosApiController.deletePromoOffers(request: Request, businessId: Long)
POST     /businesses/:businessId/promos/offers                     controllers.PromosApiController.getPromoOffers(request: Request, businessId: Long)
POST     /businesses/:businessId/promos                     controllers.PromosApiController.getPromos(request: Request, businessId: Long)
POST     /businesses/:businessId/promos/offers/update                     controllers.PromosApiController.updatePromoOffers(request: Request, businessId: Long)

#Functions for Ratings API
POST     /campaigns/:campaignId/ratings/quality/details                     controllers.RatingsApiController.getQualityRatingDetails(request: Request, campaignId: Long)
POST     /businesses/:businessId/ratings/quality                     controllers.RatingsApiController.getQualityRatings(request: Request, businessId: Long)

#Functions for Regions API
GET     /regions/:regionId/children                     controllers.RegionsApiController.searchRegionChildren(request: Request, regionId: Long)
GET     /regions/:regionId                     controllers.RegionsApiController.searchRegionsById(request: Request, regionId: Long)
GET     /regions                     controllers.RegionsApiController.searchRegionsByName(request: Request)

#Functions for Reports API
POST     /reports/boost-consolidated/generate                     controllers.ReportsApiController.generateBoostConsolidatedReport(request: Request)
POST     /reports/competitors-position/generate                     controllers.ReportsApiController.generateCompetitorsPositionReport(request: Request)
POST     /reports/goods-feedback/generate                     controllers.ReportsApiController.generateGoodsFeedbackReport(request: Request)
POST     /reports/goods-movement/generate                     controllers.ReportsApiController.generateGoodsMovementReport(request: Request)
POST     /reports/goods-realization/generate                     controllers.ReportsApiController.generateGoodsRealizationReport(request: Request)
POST     /reports/goods-turnover/generate                     controllers.ReportsApiController.generateGoodsTurnoverReport(request: Request)
POST     /reports/documents/labels/generate                     controllers.ReportsApiController.generateMassOrderLabelsReport(request: Request)
POST     /reports/prices/generate                     controllers.ReportsApiController.generatePricesReport(request: Request)
POST     /reports/shelf-statistics/generate                     controllers.ReportsApiController.generateShelfsStatisticsReport(request: Request)
POST     /reports/documents/shipment-list/generate                     controllers.ReportsApiController.generateShipmentListDocumentReport(request: Request)
POST     /reports/shows-sales/generate                     controllers.ReportsApiController.generateShowsSalesReport(request: Request)
POST     /reports/stocks-on-warehouses/generate                     controllers.ReportsApiController.generateStocksOnWarehousesReport(request: Request)
POST     /reports/united-marketplace-services/generate                     controllers.ReportsApiController.generateUnitedMarketplaceServicesReport(request: Request)
POST     /reports/united-netting/generate                     controllers.ReportsApiController.generateUnitedNettingReport(request: Request)
POST     /reports/united-orders/generate                     controllers.ReportsApiController.generateUnitedOrdersReport(request: Request)
GET     /reports/info/:reportId                     controllers.ReportsApiController.getReportInfo(request: Request, reportId: String)

#Functions for Returns API
GET     /campaigns/:campaignId/orders/:orderId/returns/:returnId                     controllers.ReturnsApiController.getReturn(request: Request, campaignId: Long, orderId: Long, returnId: Long)
GET     /campaigns/:campaignId/orders/:orderId/returns/:returnId/application                     controllers.ReturnsApiController.getReturnApplication(request: Request, campaignId: Long, orderId: Long, returnId: Long)
GET     /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision/:itemId/image/:imageHash                     controllers.ReturnsApiController.getReturnPhoto(request: Request, campaignId: Long, orderId: Long, returnId: Long, itemId: Long, imageHash: String)
GET     /campaigns/:campaignId/returns                     controllers.ReturnsApiController.getReturns(request: Request, campaignId: Long)
POST     /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision                     controllers.ReturnsApiController.setReturnDecision(request: Request, campaignId: Long, orderId: Long, returnId: Long)
POST     /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision/submit                     controllers.ReturnsApiController.submitReturnDecision(request: Request, campaignId: Long, orderId: Long, returnId: Long)

#Functions for Shipments API
POST     /campaigns/:campaignId/first-mile/shipments/:shipmentId/confirm                     controllers.ShipmentsApiController.confirmShipment(request: Request, campaignId: Long, shipmentId: Long)
GET     /campaigns/:campaignId/first-mile/shipments/:shipmentId/act                     controllers.ShipmentsApiController.downloadShipmentAct(request: Request, campaignId: Long, shipmentId: Long)
GET     /campaigns/:campaignId/first-mile/shipments/:shipmentId/discrepancy-act                     controllers.ShipmentsApiController.downloadShipmentDiscrepancyAct(request: Request, campaignId: Long, shipmentId: Long)
GET     /campaigns/:campaignId/first-mile/shipments/:shipmentId/inbound-act                     controllers.ShipmentsApiController.downloadShipmentInboundAct(request: Request, campaignId: Long, shipmentId: Long)
GET     /campaigns/:campaignId/first-mile/shipments/:shipmentId/pallet/labels                     controllers.ShipmentsApiController.downloadShipmentPalletLabels(request: Request, campaignId: Long, shipmentId: Long)
GET     /campaigns/:campaignId/shipments/reception-transfer-act                     controllers.ShipmentsApiController.downloadShipmentReceptionTransferAct(request: Request, campaignId: Long)
GET     /campaigns/:campaignId/first-mile/shipments/:shipmentId/transportation-waybill                     controllers.ShipmentsApiController.downloadShipmentTransportationWaybill(request: Request, campaignId: Long, shipmentId: Long)
GET     /campaigns/:campaignId/first-mile/shipments/:shipmentId                     controllers.ShipmentsApiController.getShipment(request: Request, campaignId: Long, shipmentId: Long)
GET     /campaigns/:campaignId/first-mile/shipments/:shipmentId/orders/info                     controllers.ShipmentsApiController.getShipmentOrdersInfo(request: Request, campaignId: Long, shipmentId: Long)
PUT     /campaigns/:campaignId/first-mile/shipments                     controllers.ShipmentsApiController.searchShipments(request: Request, campaignId: Long)
PUT     /campaigns/:campaignId/first-mile/shipments/:shipmentId/pallets                     controllers.ShipmentsApiController.setShipmentPalletsCount(request: Request, campaignId: Long, shipmentId: Long)
POST     /campaigns/:campaignId/first-mile/shipments/:shipmentId/orders/transfer                     controllers.ShipmentsApiController.transferOrdersFromShipment(request: Request, campaignId: Long, shipmentId: Long)

#Functions for Stocks API
POST     /campaigns/:campaignId/offers/stocks                     controllers.StocksApiController.getStocks(request: Request, campaignId: Long)
PUT     /campaigns/:campaignId/offers/stocks                     controllers.StocksApiController.updateStocks(request: Request, campaignId: Long)

#Functions for Tariffs API
POST     /tariffs/calculate                     controllers.TariffsApiController.calculateTariffs(request: Request)

#Functions for Warehouses API
GET     /warehouses                     controllers.WarehousesApiController.getFulfillmentWarehouses(request: Request)
GET     /businesses/:businessId/warehouses                     controllers.WarehousesApiController.getWarehouses(request: Request, businessId: Long)

# Map static resources from the /public folder to the /assets URL path
GET /assets/*file           controllers.Assets.at(file)
GET /versionedAssets/*file  controllers.Assets.versioned(file)