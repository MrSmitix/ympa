# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~


# Routes for Bids API

POST /businesses/:businessId/bids/info                                                            api.BidsApiController.getBidsInfoForBusiness(businessId: Long)
POST /businesses/:businessId/bids/recommendations                                                 api.BidsApiController.getBidsRecommendations(businessId: Long)
PUT /businesses/:businessId/bids                                                                  api.BidsApiController.putBidsForBusiness(businessId: Long)
PUT /campaigns/:campaignId/bids                                                                   api.BidsApiController.putBidsForCampaign(campaignId: Long)

# Routes for BusinessOfferMappings API

POST /businesses/:businessId/offer-mappings/archive                                               api.BusinessOfferMappingsApiController.addOffersToArchive(businessId: Long)
POST /businesses/:businessId/offer-mappings/delete                                                api.BusinessOfferMappingsApiController.deleteOffers(businessId: Long)
POST /businesses/:businessId/offer-mappings/unarchive                                             api.BusinessOfferMappingsApiController.deleteOffersFromArchive(businessId: Long)
POST /businesses/:businessId/offer-mappings                                                       api.BusinessOfferMappingsApiController.getOfferMappings(businessId: Long)
POST /businesses/:businessId/offer-mappings/suggestions                                           api.BusinessOfferMappingsApiController.getSuggestedOfferMappings(businessId: Long)
POST /businesses/:businessId/offer-mappings/update                                                api.BusinessOfferMappingsApiController.updateOfferMappings(businessId: Long)

# Routes for Businesses API

POST /businesses/:businessId/settings                                                             api.BusinessesApiController.getBusinessSettings(businessId: Long)

# Routes for Campaigns API

GET /campaigns                                                                                    api.CampaignsApiController.getCampaigns()
GET /campaigns/:campaignId                                                                        api.CampaignsApiController.getCampaign(campaignId: Long)
GET /campaigns/:campaignId/logins                                                                 api.CampaignsApiController.getCampaignLogins(campaignId: Long)
GET /campaigns/:campaignId/region                                                                 api.CampaignsApiController.getCampaignRegion(campaignId: Long)
GET /campaigns/:campaignId/settings                                                               api.CampaignsApiController.getCampaignSettings(campaignId: Long)
GET /campaigns/by_login/:login                                                                    api.CampaignsApiController.getCampaignsByLogin(login: String)

# Routes for Categories API

POST /categories/max-sale-quantum                                                                 api.CategoriesApiController.getCategoriesMaxSaleQuantum()
POST /categories/tree                                                                             api.CategoriesApiController.getCategoriesTree()

# Routes for Chats API

POST /businesses/:businessId/chats/new                                                            api.ChatsApiController.createChat(businessId: Long)
POST /businesses/:businessId/chats/history                                                        api.ChatsApiController.getChatHistory(businessId: Long)
POST /businesses/:businessId/chats                                                                api.ChatsApiController.getChats(businessId: Long)
POST /businesses/:businessId/chats/file/send                                                      api.ChatsApiController.sendFileToChat(businessId: Long)
POST /businesses/:businessId/chats/message                                                        api.ChatsApiController.sendMessageToChat(businessId: Long)

# Routes for Content API

POST /category/:categoryId/parameters                                                             api.ContentApiController.getCategoryContentParameters(categoryId: Long)
POST /businesses/:businessId/offer-cards                                                          api.ContentApiController.getOfferCardsContentStatus(businessId: Long)
POST /businesses/:businessId/offer-cards/update                                                   api.ContentApiController.updateOfferContent(businessId: Long)

# Routes for Dbs API

POST /tariffs/calculate                                                                           api.DbsApiController.calculateTariffs()
POST /reports/boost-consolidated/generate                                                         api.DbsApiController.generateBoostConsolidatedReport()
POST /reports/competitors-position/generate                                                       api.DbsApiController.generateCompetitorsPositionReport()
POST /reports/goods-feedback/generate                                                             api.DbsApiController.generateGoodsFeedbackReport()
POST /reports/documents/labels/generate                                                           api.DbsApiController.generateMassOrderLabelsReport()
POST /reports/prices/generate                                                                     api.DbsApiController.generatePricesReport()
POST /reports/shelf-statistics/generate                                                           api.DbsApiController.generateShelfsStatisticsReport()
POST /reports/shows-sales/generate                                                                api.DbsApiController.generateShowsSalesReport()
POST /reports/stocks-on-warehouses/generate                                                       api.DbsApiController.generateStocksOnWarehousesReport()
POST /reports/united-marketplace-services/generate                                                api.DbsApiController.generateUnitedMarketplaceServicesReport()
POST /reports/united-netting/generate                                                             api.DbsApiController.generateUnitedNettingReport()
POST /reports/united-orders/generate                                                              api.DbsApiController.generateUnitedOrdersReport()
GET /campaigns                                                                                    api.DbsApiController.getCampaigns()
POST /categories/max-sale-quantum                                                                 api.DbsApiController.getCategoriesMaxSaleQuantum()
POST /categories/tree                                                                             api.DbsApiController.getCategoriesTree()
GET /delivery/services                                                                            api.DbsApiController.getDeliveryServices()
POST /models                                                                                      api.DbsApiController.getModels()
POST /models/offers                                                                               api.DbsApiController.getModelsOffers()
GET /models                                                                                       api.DbsApiController.searchModels()
GET /regions                                                                                      api.DbsApiController.searchRegionsByName()
PUT /campaigns/:campaignId/orders/:orderId/cancellation/accept                                    api.DbsApiController.acceptOrderCancellation(campaignId: Long, orderId: Long)
POST /campaigns/:campaignId/hidden-offers                                                         api.DbsApiController.addHiddenOffers(campaignId: Long)
POST /businesses/:businessId/offer-mappings/archive                                               api.DbsApiController.addOffersToArchive(businessId: Long)
POST /businesses/:businessId/price-quarantine/confirm                                             api.DbsApiController.confirmBusinessPrices(businessId: Long)
POST /campaigns/:campaignId/price-quarantine/confirm                                              api.DbsApiController.confirmCampaignPrices(campaignId: Long)
POST /businesses/:businessId/chats/new                                                            api.DbsApiController.createChat(businessId: Long)
POST /campaigns/:campaignId/outlets                                                               api.DbsApiController.createOutlet(campaignId: Long)
POST /campaigns/:campaignId/offers/delete                                                         api.DbsApiController.deleteCampaignOffers(campaignId: Long)
POST /businesses/:businessId/goods-feedback/comments/delete                                       api.DbsApiController.deleteGoodsFeedbackComment(businessId: Long)
POST /campaigns/:campaignId/hidden-offers/delete                                                  api.DbsApiController.deleteHiddenOffers(campaignId: Long)
POST /businesses/:businessId/offer-mappings/delete                                                api.DbsApiController.deleteOffers(businessId: Long)
POST /businesses/:businessId/offer-mappings/unarchive                                             api.DbsApiController.deleteOffersFromArchive(businessId: Long)
DELETE /campaigns/:campaignId/outlets/:outletId                                                   api.DbsApiController.deleteOutlet(campaignId: Long, outletId: Long)
DELETE /campaigns/:campaignId/outlets/licenses                                                    api.DbsApiController.deleteOutletLicenses(campaignId: Long)
POST /businesses/:businessId/promos/offers/delete                                                 api.DbsApiController.deletePromoOffers(businessId: Long)
GET /campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes/:boxId/label      api.DbsApiController.generateOrderLabel(campaignId: Long, orderId: Long, shipmentId: Long, boxId: Long)
GET /campaigns/:campaignId/orders/:orderId/delivery/labels                                        api.DbsApiController.generateOrderLabels(campaignId: Long, orderId: Long)
GET /campaigns/:campaignId/offers/all                                                             api.DbsApiController.getAllOffers(campaignId: Long)
POST /businesses/:businessId/bids/info                                                            api.DbsApiController.getBidsInfoForBusiness(businessId: Long)
POST /businesses/:businessId/bids/recommendations                                                 api.DbsApiController.getBidsRecommendations(businessId: Long)
POST /businesses/:businessId/price-quarantine                                                     api.DbsApiController.getBusinessQuarantineOffers(businessId: Long)
POST /businesses/:businessId/settings                                                             api.DbsApiController.getBusinessSettings(businessId: Long)
GET /campaigns/:campaignId                                                                        api.DbsApiController.getCampaign(campaignId: Long)
GET /campaigns/:campaignId/logins                                                                 api.DbsApiController.getCampaignLogins(campaignId: Long)
POST /campaigns/:campaignId/offers                                                                api.DbsApiController.getCampaignOffers(campaignId: Long)
POST /campaigns/:campaignId/price-quarantine                                                      api.DbsApiController.getCampaignQuarantineOffers(campaignId: Long)
GET /campaigns/:campaignId/region                                                                 api.DbsApiController.getCampaignRegion(campaignId: Long)
GET /campaigns/:campaignId/settings                                                               api.DbsApiController.getCampaignSettings(campaignId: Long)
GET /campaigns/by_login/:login                                                                    api.DbsApiController.getCampaignsByLogin(login: String)
POST /category/:categoryId/parameters                                                             api.DbsApiController.getCategoryContentParameters(categoryId: Long)
POST /businesses/:businessId/chats/history                                                        api.DbsApiController.getChatHistory(businessId: Long)
POST /businesses/:businessId/chats                                                                api.DbsApiController.getChats(businessId: Long)
GET /campaigns/:campaignId/feeds/:feedId                                                          api.DbsApiController.getFeed(campaignId: Long, feedId: Long)
GET /campaigns/:campaignId/feeds/:feedId/index-logs                                               api.DbsApiController.getFeedIndexLogs(campaignId: Long, feedId: Long)
GET /campaigns/:campaignId/feedback/updates                                                       api.DbsApiController.getFeedbackAndCommentUpdates(campaignId: Long)
GET /campaigns/:campaignId/feeds                                                                  api.DbsApiController.getFeeds(campaignId: Long)
POST /businesses/:businessId/goods-feedback/comments                                              api.DbsApiController.getGoodsFeedbackComments(businessId: Long)
POST /businesses/:businessId/goods-feedback                                                       api.DbsApiController.getGoodsFeedbacks(businessId: Long)
POST /campaigns/:campaignId/stats/skus                                                            api.DbsApiController.getGoodsStats(campaignId: Long)
GET /campaigns/:campaignId/hidden-offers                                                          api.DbsApiController.getHiddenOffers(campaignId: Long)
GET /models/:modelId                                                                              api.DbsApiController.getModel(modelId: Long)
GET /models/:modelId/offers                                                                       api.DbsApiController.getModelOffers(modelId: Long)
POST /businesses/:businessId/offer-cards                                                          api.DbsApiController.getOfferCardsContentStatus(businessId: Long)
GET /campaigns/:campaignId/offer-mapping-entries                                                  api.DbsApiController.getOfferMappingEntries(campaignId: Long)
POST /businesses/:businessId/offer-mappings                                                       api.DbsApiController.getOfferMappings(businessId: Long)
POST /businesses/:businessId/offers/recommendations                                               api.DbsApiController.getOfferRecommendations(businessId: Long)
GET /campaigns/:campaignId/offers                                                                 api.DbsApiController.getOffers(campaignId: Long)
GET /campaigns/:campaignId/orders/:orderId                                                        api.DbsApiController.getOrder(campaignId: Long, orderId: Long)
POST /campaigns/:campaignId/orders/:orderId/business-buyer                                        api.DbsApiController.getOrderBusinessBuyerInfo(campaignId: Long, orderId: Long)
POST /campaigns/:campaignId/orders/:orderId/documents                                             api.DbsApiController.getOrderBusinessDocumentsInfo(campaignId: Long, orderId: Long)
GET /campaigns/:campaignId/orders/:orderId/buyer                                                  api.DbsApiController.getOrderBuyerInfo(campaignId: Long, orderId: Long)
GET /campaigns/:campaignId/orders/:orderId/delivery/labels/data                                   api.DbsApiController.getOrderLabelsData(campaignId: Long, orderId: Long)
GET /campaigns/:campaignId/orders                                                                 api.DbsApiController.getOrders(campaignId: Long)
POST /campaigns/:campaignId/stats/orders                                                          api.DbsApiController.getOrdersStats(campaignId: Long)
GET /campaigns/:campaignId/outlets/:outletId                                                      api.DbsApiController.getOutlet(campaignId: Long, outletId: Long)
GET /campaigns/:campaignId/outlets/licenses                                                       api.DbsApiController.getOutletLicenses(campaignId: Long)
GET /campaigns/:campaignId/outlets                                                                api.DbsApiController.getOutlets(campaignId: Long)
GET /campaigns/:campaignId/offer-prices                                                           api.DbsApiController.getPrices(campaignId: Long)
POST /campaigns/:campaignId/offer-prices                                                          api.DbsApiController.getPricesByOfferIds(campaignId: Long)
POST /businesses/:businessId/promos/offers                                                        api.DbsApiController.getPromoOffers(businessId: Long)
POST /businesses/:businessId/promos                                                               api.DbsApiController.getPromos(businessId: Long)
POST /campaigns/:campaignId/ratings/quality/details                                               api.DbsApiController.getQualityRatingDetails(campaignId: Long)
POST /businesses/:businessId/ratings/quality                                                      api.DbsApiController.getQualityRatings(businessId: Long)
GET /reports/info/:reportId                                                                       api.DbsApiController.getReportInfo(reportId: String)
GET /campaigns/:campaignId/orders/:orderId/returns/:returnId                                      api.DbsApiController.getReturn(campaignId: Long, orderId: Long, returnId: Long)
GET /campaigns/:campaignId/orders/:orderId/returns/:returnId/application                          api.DbsApiController.getReturnApplication(campaignId: Long, orderId: Long, returnId: Long)
GET /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision/:itemId/image/:imageHash    api.DbsApiController.getReturnPhoto(campaignId: Long, orderId: Long, returnId: Long, itemId: Long, imageHash: String)
GET /campaigns/:campaignId/returns                                                                api.DbsApiController.getReturns(campaignId: Long)
POST /campaigns/:campaignId/offers/stocks                                                         api.DbsApiController.getStocks(campaignId: Long)
POST /campaigns/:campaignId/offer-mapping-entries/suggestions                                     api.DbsApiController.getSuggestedOfferMappingEntries(campaignId: Long)
POST /businesses/:businessId/offer-mappings/suggestions                                           api.DbsApiController.getSuggestedOfferMappings(businessId: Long)
POST /campaigns/:campaignId/offer-prices/suggestions                                              api.DbsApiController.getSuggestedPrices(campaignId: Long)
GET /businesses/:businessId/warehouses                                                            api.DbsApiController.getWarehouses(businessId: Long)
POST /campaigns/:campaignId/orders/:orderId/deliverDigitalGoods                                   api.DbsApiController.provideOrderDigitalCodes(campaignId: Long, orderId: Long)
PUT /campaigns/:campaignId/orders/:orderId/identifiers                                            api.DbsApiController.provideOrderItemIdentifiers(campaignId: Long, orderId: Long)
PUT /businesses/:businessId/bids                                                                  api.DbsApiController.putBidsForBusiness(businessId: Long)
PUT /campaigns/:campaignId/bids                                                                   api.DbsApiController.putBidsForCampaign(campaignId: Long)
POST /campaigns/:campaignId/feeds/:feedId/refresh                                                 api.DbsApiController.refreshFeed(campaignId: Long, feedId: Long)
GET /regions/:regionId/children                                                                   api.DbsApiController.searchRegionChildren(regionId: Long)
GET /regions/:regionId                                                                            api.DbsApiController.searchRegionsById(regionId: Long)
POST /businesses/:businessId/chats/file/send                                                      api.DbsApiController.sendFileToChat(businessId: Long)
POST /businesses/:businessId/chats/message                                                        api.DbsApiController.sendMessageToChat(businessId: Long)
POST /campaigns/:campaignId/feeds/:feedId/params                                                  api.DbsApiController.setFeedParams(campaignId: Long, feedId: Long)
PUT /campaigns/:campaignId/orders/:orderId/boxes                                                  api.DbsApiController.setOrderBoxLayout(campaignId: Long, orderId: Long)
PUT /campaigns/:campaignId/orders/:orderId/delivery/date                                          api.DbsApiController.setOrderDeliveryDate(campaignId: Long, orderId: Long)
POST /campaigns/:campaignId/orders/:orderId/delivery/track                                        api.DbsApiController.setOrderDeliveryTrackCode(campaignId: Long, orderId: Long)
PUT /campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes                   api.DbsApiController.setOrderShipmentBoxes(campaignId: Long, orderId: Long, shipmentId: Long)
POST /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision                            api.DbsApiController.setReturnDecision(campaignId: Long, orderId: Long, returnId: Long)
POST /businesses/:businessId/goods-feedback/skip-reaction                                         api.DbsApiController.skipGoodsFeedbacksReaction(businessId: Long)
POST /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision/submit                     api.DbsApiController.submitReturnDecision(campaignId: Long, orderId: Long, returnId: Long)
POST /businesses/:businessId/offer-prices/updates                                                 api.DbsApiController.updateBusinessPrices(businessId: Long)
POST /campaigns/:campaignId/offers/update                                                         api.DbsApiController.updateCampaignOffers(campaignId: Long)
POST /businesses/:businessId/goods-feedback/comments/update                                       api.DbsApiController.updateGoodsFeedbackComment(businessId: Long)
POST /businesses/:businessId/offer-cards/update                                                   api.DbsApiController.updateOfferContent(businessId: Long)
POST /campaigns/:campaignId/offer-mapping-entries/updates                                         api.DbsApiController.updateOfferMappingEntries(campaignId: Long)
POST /businesses/:businessId/offer-mappings/update                                                api.DbsApiController.updateOfferMappings(businessId: Long)
PUT /campaigns/:campaignId/orders/:orderId/items                                                  api.DbsApiController.updateOrderItems(campaignId: Long, orderId: Long)
PUT /campaigns/:campaignId/orders/:orderId/status                                                 api.DbsApiController.updateOrderStatus(campaignId: Long, orderId: Long)
POST /campaigns/:campaignId/orders/status-update                                                  api.DbsApiController.updateOrderStatuses(campaignId: Long)
PUT /campaigns/:campaignId/orders/:orderId/delivery/storage-limit                                 api.DbsApiController.updateOrderStorageLimit(campaignId: Long, orderId: Long)
PUT /campaigns/:campaignId/outlets/:outletId                                                      api.DbsApiController.updateOutlet(campaignId: Long, outletId: Long)
POST /campaigns/:campaignId/outlets/licenses                                                      api.DbsApiController.updateOutletLicenses(campaignId: Long)
POST /campaigns/:campaignId/offer-prices/updates                                                  api.DbsApiController.updatePrices(campaignId: Long)
POST /businesses/:businessId/promos/offers/update                                                 api.DbsApiController.updatePromoOffers(businessId: Long)
PUT /campaigns/:campaignId/offers/stocks                                                          api.DbsApiController.updateStocks(campaignId: Long)

# Routes for DeliveryServices API

GET /delivery/services                                                                            api.DeliveryServicesApiController.getDeliveryServices()

# Routes for Express API

POST /tariffs/calculate                                                                           api.ExpressApiController.calculateTariffs()
POST /reports/boost-consolidated/generate                                                         api.ExpressApiController.generateBoostConsolidatedReport()
POST /reports/competitors-position/generate                                                       api.ExpressApiController.generateCompetitorsPositionReport()
POST /reports/goods-feedback/generate                                                             api.ExpressApiController.generateGoodsFeedbackReport()
POST /reports/goods-realization/generate                                                          api.ExpressApiController.generateGoodsRealizationReport()
POST /reports/documents/labels/generate                                                           api.ExpressApiController.generateMassOrderLabelsReport()
POST /reports/prices/generate                                                                     api.ExpressApiController.generatePricesReport()
POST /reports/shelf-statistics/generate                                                           api.ExpressApiController.generateShelfsStatisticsReport()
POST /reports/shows-sales/generate                                                                api.ExpressApiController.generateShowsSalesReport()
POST /reports/stocks-on-warehouses/generate                                                       api.ExpressApiController.generateStocksOnWarehousesReport()
POST /reports/united-marketplace-services/generate                                                api.ExpressApiController.generateUnitedMarketplaceServicesReport()
POST /reports/united-netting/generate                                                             api.ExpressApiController.generateUnitedNettingReport()
POST /reports/united-orders/generate                                                              api.ExpressApiController.generateUnitedOrdersReport()
GET /campaigns                                                                                    api.ExpressApiController.getCampaigns()
POST /categories/max-sale-quantum                                                                 api.ExpressApiController.getCategoriesMaxSaleQuantum()
POST /categories/tree                                                                             api.ExpressApiController.getCategoriesTree()
GET /delivery/services                                                                            api.ExpressApiController.getDeliveryServices()
GET /regions                                                                                      api.ExpressApiController.searchRegionsByName()
POST /campaigns/:campaignId/hidden-offers                                                         api.ExpressApiController.addHiddenOffers(campaignId: Long)
POST /businesses/:businessId/offer-mappings/archive                                               api.ExpressApiController.addOffersToArchive(businessId: Long)
POST /businesses/:businessId/price-quarantine/confirm                                             api.ExpressApiController.confirmBusinessPrices(businessId: Long)
POST /campaigns/:campaignId/price-quarantine/confirm                                              api.ExpressApiController.confirmCampaignPrices(campaignId: Long)
POST /businesses/:businessId/chats/new                                                            api.ExpressApiController.createChat(businessId: Long)
POST /campaigns/:campaignId/offers/delete                                                         api.ExpressApiController.deleteCampaignOffers(campaignId: Long)
POST /businesses/:businessId/goods-feedback/comments/delete                                       api.ExpressApiController.deleteGoodsFeedbackComment(businessId: Long)
POST /campaigns/:campaignId/hidden-offers/delete                                                  api.ExpressApiController.deleteHiddenOffers(campaignId: Long)
POST /businesses/:businessId/offer-mappings/delete                                                api.ExpressApiController.deleteOffers(businessId: Long)
POST /businesses/:businessId/offer-mappings/unarchive                                             api.ExpressApiController.deleteOffersFromArchive(businessId: Long)
POST /businesses/:businessId/promos/offers/delete                                                 api.ExpressApiController.deletePromoOffers(businessId: Long)
GET /campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes/:boxId/label      api.ExpressApiController.generateOrderLabel(campaignId: Long, orderId: Long, shipmentId: Long, boxId: Long)
GET /campaigns/:campaignId/orders/:orderId/delivery/labels                                        api.ExpressApiController.generateOrderLabels(campaignId: Long, orderId: Long)
GET /campaigns/:campaignId/offers/all                                                             api.ExpressApiController.getAllOffers(campaignId: Long)
POST /businesses/:businessId/bids/info                                                            api.ExpressApiController.getBidsInfoForBusiness(businessId: Long)
POST /businesses/:businessId/bids/recommendations                                                 api.ExpressApiController.getBidsRecommendations(businessId: Long)
POST /businesses/:businessId/price-quarantine                                                     api.ExpressApiController.getBusinessQuarantineOffers(businessId: Long)
POST /businesses/:businessId/settings                                                             api.ExpressApiController.getBusinessSettings(businessId: Long)
GET /campaigns/:campaignId                                                                        api.ExpressApiController.getCampaign(campaignId: Long)
GET /campaigns/:campaignId/logins                                                                 api.ExpressApiController.getCampaignLogins(campaignId: Long)
POST /campaigns/:campaignId/offers                                                                api.ExpressApiController.getCampaignOffers(campaignId: Long)
POST /campaigns/:campaignId/price-quarantine                                                      api.ExpressApiController.getCampaignQuarantineOffers(campaignId: Long)
GET /campaigns/:campaignId/region                                                                 api.ExpressApiController.getCampaignRegion(campaignId: Long)
GET /campaigns/:campaignId/settings                                                               api.ExpressApiController.getCampaignSettings(campaignId: Long)
GET /campaigns/by_login/:login                                                                    api.ExpressApiController.getCampaignsByLogin(login: String)
POST /category/:categoryId/parameters                                                             api.ExpressApiController.getCategoryContentParameters(categoryId: Long)
POST /businesses/:businessId/chats/history                                                        api.ExpressApiController.getChatHistory(businessId: Long)
POST /businesses/:businessId/chats                                                                api.ExpressApiController.getChats(businessId: Long)
GET /campaigns/:campaignId/feeds/:feedId                                                          api.ExpressApiController.getFeed(campaignId: Long, feedId: Long)
GET /campaigns/:campaignId/feeds/:feedId/index-logs                                               api.ExpressApiController.getFeedIndexLogs(campaignId: Long, feedId: Long)
GET /campaigns/:campaignId/feedback/updates                                                       api.ExpressApiController.getFeedbackAndCommentUpdates(campaignId: Long)
GET /campaigns/:campaignId/feeds                                                                  api.ExpressApiController.getFeeds(campaignId: Long)
POST /businesses/:businessId/goods-feedback/comments                                              api.ExpressApiController.getGoodsFeedbackComments(businessId: Long)
POST /businesses/:businessId/goods-feedback                                                       api.ExpressApiController.getGoodsFeedbacks(businessId: Long)
POST /campaigns/:campaignId/stats/skus                                                            api.ExpressApiController.getGoodsStats(campaignId: Long)
GET /campaigns/:campaignId/hidden-offers                                                          api.ExpressApiController.getHiddenOffers(campaignId: Long)
POST /businesses/:businessId/offer-cards                                                          api.ExpressApiController.getOfferCardsContentStatus(businessId: Long)
GET /campaigns/:campaignId/offer-mapping-entries                                                  api.ExpressApiController.getOfferMappingEntries(campaignId: Long)
POST /businesses/:businessId/offer-mappings                                                       api.ExpressApiController.getOfferMappings(businessId: Long)
POST /businesses/:businessId/offers/recommendations                                               api.ExpressApiController.getOfferRecommendations(businessId: Long)
GET /campaigns/:campaignId/offers                                                                 api.ExpressApiController.getOffers(campaignId: Long)
GET /campaigns/:campaignId/orders/:orderId                                                        api.ExpressApiController.getOrder(campaignId: Long, orderId: Long)
POST /campaigns/:campaignId/orders/:orderId/business-buyer                                        api.ExpressApiController.getOrderBusinessBuyerInfo(campaignId: Long, orderId: Long)
POST /campaigns/:campaignId/orders/:orderId/documents                                             api.ExpressApiController.getOrderBusinessDocumentsInfo(campaignId: Long, orderId: Long)
GET /campaigns/:campaignId/orders/:orderId/delivery/labels/data                                   api.ExpressApiController.getOrderLabelsData(campaignId: Long, orderId: Long)
GET /campaigns/:campaignId/orders                                                                 api.ExpressApiController.getOrders(campaignId: Long)
POST /campaigns/:campaignId/stats/orders                                                          api.ExpressApiController.getOrdersStats(campaignId: Long)
GET /campaigns/:campaignId/offer-prices                                                           api.ExpressApiController.getPrices(campaignId: Long)
POST /campaigns/:campaignId/offer-prices                                                          api.ExpressApiController.getPricesByOfferIds(campaignId: Long)
POST /businesses/:businessId/promos/offers                                                        api.ExpressApiController.getPromoOffers(businessId: Long)
POST /businesses/:businessId/promos                                                               api.ExpressApiController.getPromos(businessId: Long)
POST /campaigns/:campaignId/ratings/quality/details                                               api.ExpressApiController.getQualityRatingDetails(campaignId: Long)
POST /businesses/:businessId/ratings/quality                                                      api.ExpressApiController.getQualityRatings(businessId: Long)
GET /reports/info/:reportId                                                                       api.ExpressApiController.getReportInfo(reportId: String)
GET /campaigns/:campaignId/orders/:orderId/returns/:returnId                                      api.ExpressApiController.getReturn(campaignId: Long, orderId: Long, returnId: Long)
GET /campaigns/:campaignId/orders/:orderId/returns/:returnId/application                          api.ExpressApiController.getReturnApplication(campaignId: Long, orderId: Long, returnId: Long)
GET /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision/:itemId/image/:imageHash    api.ExpressApiController.getReturnPhoto(campaignId: Long, orderId: Long, returnId: Long, itemId: Long, imageHash: String)
GET /campaigns/:campaignId/returns                                                                api.ExpressApiController.getReturns(campaignId: Long)
POST /campaigns/:campaignId/offers/stocks                                                         api.ExpressApiController.getStocks(campaignId: Long)
POST /campaigns/:campaignId/offer-mapping-entries/suggestions                                     api.ExpressApiController.getSuggestedOfferMappingEntries(campaignId: Long)
POST /businesses/:businessId/offer-mappings/suggestions                                           api.ExpressApiController.getSuggestedOfferMappings(businessId: Long)
POST /campaigns/:campaignId/offer-prices/suggestions                                              api.ExpressApiController.getSuggestedPrices(campaignId: Long)
GET /businesses/:businessId/warehouses                                                            api.ExpressApiController.getWarehouses(businessId: Long)
PUT /campaigns/:campaignId/orders/:orderId/identifiers                                            api.ExpressApiController.provideOrderItemIdentifiers(campaignId: Long, orderId: Long)
PUT /businesses/:businessId/bids                                                                  api.ExpressApiController.putBidsForBusiness(businessId: Long)
PUT /campaigns/:campaignId/bids                                                                   api.ExpressApiController.putBidsForCampaign(campaignId: Long)
POST /campaigns/:campaignId/feeds/:feedId/refresh                                                 api.ExpressApiController.refreshFeed(campaignId: Long, feedId: Long)
GET /regions/:regionId/children                                                                   api.ExpressApiController.searchRegionChildren(regionId: Long)
GET /regions/:regionId                                                                            api.ExpressApiController.searchRegionsById(regionId: Long)
POST /businesses/:businessId/chats/file/send                                                      api.ExpressApiController.sendFileToChat(businessId: Long)
POST /businesses/:businessId/chats/message                                                        api.ExpressApiController.sendMessageToChat(businessId: Long)
POST /campaigns/:campaignId/feeds/:feedId/params                                                  api.ExpressApiController.setFeedParams(campaignId: Long, feedId: Long)
PUT /campaigns/:campaignId/orders/:orderId/boxes                                                  api.ExpressApiController.setOrderBoxLayout(campaignId: Long, orderId: Long)
PUT /campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes                   api.ExpressApiController.setOrderShipmentBoxes(campaignId: Long, orderId: Long, shipmentId: Long)
POST /businesses/:businessId/goods-feedback/skip-reaction                                         api.ExpressApiController.skipGoodsFeedbacksReaction(businessId: Long)
POST /businesses/:businessId/offer-prices/updates                                                 api.ExpressApiController.updateBusinessPrices(businessId: Long)
POST /campaigns/:campaignId/offers/update                                                         api.ExpressApiController.updateCampaignOffers(campaignId: Long)
POST /businesses/:businessId/goods-feedback/comments/update                                       api.ExpressApiController.updateGoodsFeedbackComment(businessId: Long)
POST /businesses/:businessId/offer-cards/update                                                   api.ExpressApiController.updateOfferContent(businessId: Long)
POST /campaigns/:campaignId/offer-mapping-entries/updates                                         api.ExpressApiController.updateOfferMappingEntries(campaignId: Long)
POST /businesses/:businessId/offer-mappings/update                                                api.ExpressApiController.updateOfferMappings(businessId: Long)
PUT /campaigns/:campaignId/orders/:orderId/items                                                  api.ExpressApiController.updateOrderItems(campaignId: Long, orderId: Long)
PUT /campaigns/:campaignId/orders/:orderId/status                                                 api.ExpressApiController.updateOrderStatus(campaignId: Long, orderId: Long)
POST /campaigns/:campaignId/orders/status-update                                                  api.ExpressApiController.updateOrderStatuses(campaignId: Long)
POST /campaigns/:campaignId/offer-prices/updates                                                  api.ExpressApiController.updatePrices(campaignId: Long)
POST /businesses/:businessId/promos/offers/update                                                 api.ExpressApiController.updatePromoOffers(businessId: Long)
PUT /campaigns/:campaignId/offers/stocks                                                          api.ExpressApiController.updateStocks(campaignId: Long)
PUT /campaigns/:campaignId/orders/:orderId/verifyEac                                              api.ExpressApiController.verifyOrderEac(campaignId: Long, orderId: Long)

# Routes for Fbs API

POST /tariffs/calculate                                                                           api.FbsApiController.calculateTariffs()
POST /reports/boost-consolidated/generate                                                         api.FbsApiController.generateBoostConsolidatedReport()
POST /reports/competitors-position/generate                                                       api.FbsApiController.generateCompetitorsPositionReport()
POST /reports/goods-feedback/generate                                                             api.FbsApiController.generateGoodsFeedbackReport()
POST /reports/goods-realization/generate                                                          api.FbsApiController.generateGoodsRealizationReport()
POST /reports/documents/labels/generate                                                           api.FbsApiController.generateMassOrderLabelsReport()
POST /reports/prices/generate                                                                     api.FbsApiController.generatePricesReport()
POST /reports/shelf-statistics/generate                                                           api.FbsApiController.generateShelfsStatisticsReport()
POST /reports/documents/shipment-list/generate                                                    api.FbsApiController.generateShipmentListDocumentReport()
POST /reports/shows-sales/generate                                                                api.FbsApiController.generateShowsSalesReport()
POST /reports/stocks-on-warehouses/generate                                                       api.FbsApiController.generateStocksOnWarehousesReport()
POST /reports/united-marketplace-services/generate                                                api.FbsApiController.generateUnitedMarketplaceServicesReport()
POST /reports/united-netting/generate                                                             api.FbsApiController.generateUnitedNettingReport()
POST /reports/united-orders/generate                                                              api.FbsApiController.generateUnitedOrdersReport()
GET /campaigns                                                                                    api.FbsApiController.getCampaigns()
POST /categories/max-sale-quantum                                                                 api.FbsApiController.getCategoriesMaxSaleQuantum()
POST /categories/tree                                                                             api.FbsApiController.getCategoriesTree()
GET /delivery/services                                                                            api.FbsApiController.getDeliveryServices()
GET /regions                                                                                      api.FbsApiController.searchRegionsByName()
POST /campaigns/:campaignId/hidden-offers                                                         api.FbsApiController.addHiddenOffers(campaignId: Long)
POST /businesses/:businessId/offer-mappings/archive                                               api.FbsApiController.addOffersToArchive(businessId: Long)
POST /businesses/:businessId/price-quarantine/confirm                                             api.FbsApiController.confirmBusinessPrices(businessId: Long)
POST /campaigns/:campaignId/price-quarantine/confirm                                              api.FbsApiController.confirmCampaignPrices(campaignId: Long)
POST /campaigns/:campaignId/first-mile/shipments/:shipmentId/confirm                              api.FbsApiController.confirmShipment(campaignId: Long, shipmentId: Long)
POST /businesses/:businessId/chats/new                                                            api.FbsApiController.createChat(businessId: Long)
POST /campaigns/:campaignId/offers/delete                                                         api.FbsApiController.deleteCampaignOffers(campaignId: Long)
POST /businesses/:businessId/goods-feedback/comments/delete                                       api.FbsApiController.deleteGoodsFeedbackComment(businessId: Long)
POST /campaigns/:campaignId/hidden-offers/delete                                                  api.FbsApiController.deleteHiddenOffers(campaignId: Long)
POST /businesses/:businessId/offer-mappings/delete                                                api.FbsApiController.deleteOffers(businessId: Long)
POST /businesses/:businessId/offer-mappings/unarchive                                             api.FbsApiController.deleteOffersFromArchive(businessId: Long)
POST /businesses/:businessId/promos/offers/delete                                                 api.FbsApiController.deletePromoOffers(businessId: Long)
GET /campaigns/:campaignId/first-mile/shipments/:shipmentId/act                                   api.FbsApiController.downloadShipmentAct(campaignId: Long, shipmentId: Long)
GET /campaigns/:campaignId/first-mile/shipments/:shipmentId/discrepancy-act                       api.FbsApiController.downloadShipmentDiscrepancyAct(campaignId: Long, shipmentId: Long)
GET /campaigns/:campaignId/first-mile/shipments/:shipmentId/inbound-act                           api.FbsApiController.downloadShipmentInboundAct(campaignId: Long, shipmentId: Long)
GET /campaigns/:campaignId/first-mile/shipments/:shipmentId/pallet/labels                         api.FbsApiController.downloadShipmentPalletLabels(campaignId: Long, shipmentId: Long)
GET /campaigns/:campaignId/shipments/reception-transfer-act                                       api.FbsApiController.downloadShipmentReceptionTransferAct(campaignId: Long)
GET /campaigns/:campaignId/first-mile/shipments/:shipmentId/transportation-waybill                api.FbsApiController.downloadShipmentTransportationWaybill(campaignId: Long, shipmentId: Long)
GET /campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes/:boxId/label      api.FbsApiController.generateOrderLabel(campaignId: Long, orderId: Long, shipmentId: Long, boxId: Long)
GET /campaigns/:campaignId/orders/:orderId/delivery/labels                                        api.FbsApiController.generateOrderLabels(campaignId: Long, orderId: Long)
GET /campaigns/:campaignId/offers/all                                                             api.FbsApiController.getAllOffers(campaignId: Long)
POST /businesses/:businessId/bids/info                                                            api.FbsApiController.getBidsInfoForBusiness(businessId: Long)
POST /businesses/:businessId/bids/recommendations                                                 api.FbsApiController.getBidsRecommendations(businessId: Long)
POST /businesses/:businessId/price-quarantine                                                     api.FbsApiController.getBusinessQuarantineOffers(businessId: Long)
POST /businesses/:businessId/settings                                                             api.FbsApiController.getBusinessSettings(businessId: Long)
GET /campaigns/:campaignId                                                                        api.FbsApiController.getCampaign(campaignId: Long)
GET /campaigns/:campaignId/logins                                                                 api.FbsApiController.getCampaignLogins(campaignId: Long)
POST /campaigns/:campaignId/offers                                                                api.FbsApiController.getCampaignOffers(campaignId: Long)
POST /campaigns/:campaignId/price-quarantine                                                      api.FbsApiController.getCampaignQuarantineOffers(campaignId: Long)
GET /campaigns/:campaignId/region                                                                 api.FbsApiController.getCampaignRegion(campaignId: Long)
GET /campaigns/:campaignId/settings                                                               api.FbsApiController.getCampaignSettings(campaignId: Long)
GET /campaigns/by_login/:login                                                                    api.FbsApiController.getCampaignsByLogin(login: String)
POST /category/:categoryId/parameters                                                             api.FbsApiController.getCategoryContentParameters(categoryId: Long)
POST /businesses/:businessId/chats/history                                                        api.FbsApiController.getChatHistory(businessId: Long)
POST /businesses/:businessId/chats                                                                api.FbsApiController.getChats(businessId: Long)
GET /campaigns/:campaignId/feeds/:feedId                                                          api.FbsApiController.getFeed(campaignId: Long, feedId: Long)
GET /campaigns/:campaignId/feeds/:feedId/index-logs                                               api.FbsApiController.getFeedIndexLogs(campaignId: Long, feedId: Long)
GET /campaigns/:campaignId/feedback/updates                                                       api.FbsApiController.getFeedbackAndCommentUpdates(campaignId: Long)
GET /campaigns/:campaignId/feeds                                                                  api.FbsApiController.getFeeds(campaignId: Long)
POST /businesses/:businessId/goods-feedback/comments                                              api.FbsApiController.getGoodsFeedbackComments(businessId: Long)
POST /businesses/:businessId/goods-feedback                                                       api.FbsApiController.getGoodsFeedbacks(businessId: Long)
POST /campaigns/:campaignId/stats/skus                                                            api.FbsApiController.getGoodsStats(campaignId: Long)
GET /campaigns/:campaignId/hidden-offers                                                          api.FbsApiController.getHiddenOffers(campaignId: Long)
POST /businesses/:businessId/offer-cards                                                          api.FbsApiController.getOfferCardsContentStatus(businessId: Long)
GET /campaigns/:campaignId/offer-mapping-entries                                                  api.FbsApiController.getOfferMappingEntries(campaignId: Long)
POST /businesses/:businessId/offer-mappings                                                       api.FbsApiController.getOfferMappings(businessId: Long)
POST /businesses/:businessId/offers/recommendations                                               api.FbsApiController.getOfferRecommendations(businessId: Long)
GET /campaigns/:campaignId/offers                                                                 api.FbsApiController.getOffers(campaignId: Long)
GET /campaigns/:campaignId/orders/:orderId                                                        api.FbsApiController.getOrder(campaignId: Long, orderId: Long)
POST /campaigns/:campaignId/orders/:orderId/business-buyer                                        api.FbsApiController.getOrderBusinessBuyerInfo(campaignId: Long, orderId: Long)
POST /campaigns/:campaignId/orders/:orderId/documents                                             api.FbsApiController.getOrderBusinessDocumentsInfo(campaignId: Long, orderId: Long)
GET /campaigns/:campaignId/orders/:orderId/delivery/labels/data                                   api.FbsApiController.getOrderLabelsData(campaignId: Long, orderId: Long)
GET /campaigns/:campaignId/orders                                                                 api.FbsApiController.getOrders(campaignId: Long)
POST /campaigns/:campaignId/stats/orders                                                          api.FbsApiController.getOrdersStats(campaignId: Long)
GET /campaigns/:campaignId/offer-prices                                                           api.FbsApiController.getPrices(campaignId: Long)
POST /campaigns/:campaignId/offer-prices                                                          api.FbsApiController.getPricesByOfferIds(campaignId: Long)
POST /businesses/:businessId/promos/offers                                                        api.FbsApiController.getPromoOffers(businessId: Long)
POST /businesses/:businessId/promos                                                               api.FbsApiController.getPromos(businessId: Long)
POST /campaigns/:campaignId/ratings/quality/details                                               api.FbsApiController.getQualityRatingDetails(campaignId: Long)
POST /businesses/:businessId/ratings/quality                                                      api.FbsApiController.getQualityRatings(businessId: Long)
GET /reports/info/:reportId                                                                       api.FbsApiController.getReportInfo(reportId: String)
GET /campaigns/:campaignId/orders/:orderId/returns/:returnId                                      api.FbsApiController.getReturn(campaignId: Long, orderId: Long, returnId: Long)
GET /campaigns/:campaignId/orders/:orderId/returns/:returnId/application                          api.FbsApiController.getReturnApplication(campaignId: Long, orderId: Long, returnId: Long)
GET /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision/:itemId/image/:imageHash    api.FbsApiController.getReturnPhoto(campaignId: Long, orderId: Long, returnId: Long, itemId: Long, imageHash: String)
GET /campaigns/:campaignId/returns                                                                api.FbsApiController.getReturns(campaignId: Long)
GET /campaigns/:campaignId/first-mile/shipments/:shipmentId                                       api.FbsApiController.getShipment(campaignId: Long, shipmentId: Long)
GET /campaigns/:campaignId/first-mile/shipments/:shipmentId/orders/info                           api.FbsApiController.getShipmentOrdersInfo(campaignId: Long, shipmentId: Long)
POST /campaigns/:campaignId/offers/stocks                                                         api.FbsApiController.getStocks(campaignId: Long)
POST /campaigns/:campaignId/offer-mapping-entries/suggestions                                     api.FbsApiController.getSuggestedOfferMappingEntries(campaignId: Long)
POST /businesses/:businessId/offer-mappings/suggestions                                           api.FbsApiController.getSuggestedOfferMappings(businessId: Long)
POST /campaigns/:campaignId/offer-prices/suggestions                                              api.FbsApiController.getSuggestedPrices(campaignId: Long)
GET /businesses/:businessId/warehouses                                                            api.FbsApiController.getWarehouses(businessId: Long)
PUT /campaigns/:campaignId/orders/:orderId/identifiers                                            api.FbsApiController.provideOrderItemIdentifiers(campaignId: Long, orderId: Long)
PUT /businesses/:businessId/bids                                                                  api.FbsApiController.putBidsForBusiness(businessId: Long)
PUT /campaigns/:campaignId/bids                                                                   api.FbsApiController.putBidsForCampaign(campaignId: Long)
POST /campaigns/:campaignId/feeds/:feedId/refresh                                                 api.FbsApiController.refreshFeed(campaignId: Long, feedId: Long)
GET /regions/:regionId/children                                                                   api.FbsApiController.searchRegionChildren(regionId: Long)
GET /regions/:regionId                                                                            api.FbsApiController.searchRegionsById(regionId: Long)
PUT /campaigns/:campaignId/first-mile/shipments                                                   api.FbsApiController.searchShipments(campaignId: Long)
POST /businesses/:businessId/chats/file/send                                                      api.FbsApiController.sendFileToChat(businessId: Long)
POST /businesses/:businessId/chats/message                                                        api.FbsApiController.sendMessageToChat(businessId: Long)
POST /campaigns/:campaignId/feeds/:feedId/params                                                  api.FbsApiController.setFeedParams(campaignId: Long, feedId: Long)
PUT /campaigns/:campaignId/orders/:orderId/boxes                                                  api.FbsApiController.setOrderBoxLayout(campaignId: Long, orderId: Long)
PUT /campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes                   api.FbsApiController.setOrderShipmentBoxes(campaignId: Long, orderId: Long, shipmentId: Long)
PUT /campaigns/:campaignId/first-mile/shipments/:shipmentId/pallets                               api.FbsApiController.setShipmentPalletsCount(campaignId: Long, shipmentId: Long)
POST /businesses/:businessId/goods-feedback/skip-reaction                                         api.FbsApiController.skipGoodsFeedbacksReaction(businessId: Long)
POST /campaigns/:campaignId/first-mile/shipments/:shipmentId/orders/transfer                      api.FbsApiController.transferOrdersFromShipment(campaignId: Long, shipmentId: Long)
POST /businesses/:businessId/offer-prices/updates                                                 api.FbsApiController.updateBusinessPrices(businessId: Long)
POST /campaigns/:campaignId/offers/update                                                         api.FbsApiController.updateCampaignOffers(campaignId: Long)
POST /businesses/:businessId/goods-feedback/comments/update                                       api.FbsApiController.updateGoodsFeedbackComment(businessId: Long)
POST /businesses/:businessId/offer-cards/update                                                   api.FbsApiController.updateOfferContent(businessId: Long)
POST /campaigns/:campaignId/offer-mapping-entries/updates                                         api.FbsApiController.updateOfferMappingEntries(campaignId: Long)
POST /businesses/:businessId/offer-mappings/update                                                api.FbsApiController.updateOfferMappings(businessId: Long)
PUT /campaigns/:campaignId/orders/:orderId/items                                                  api.FbsApiController.updateOrderItems(campaignId: Long, orderId: Long)
PUT /campaigns/:campaignId/orders/:orderId/status                                                 api.FbsApiController.updateOrderStatus(campaignId: Long, orderId: Long)
POST /campaigns/:campaignId/orders/status-update                                                  api.FbsApiController.updateOrderStatuses(campaignId: Long)
POST /campaigns/:campaignId/offer-prices/updates                                                  api.FbsApiController.updatePrices(campaignId: Long)
POST /businesses/:businessId/promos/offers/update                                                 api.FbsApiController.updatePromoOffers(businessId: Long)
PUT /campaigns/:campaignId/offers/stocks                                                          api.FbsApiController.updateStocks(campaignId: Long)

# Routes for Fby API

POST /tariffs/calculate                                                                           api.FbyApiController.calculateTariffs()
POST /reports/boost-consolidated/generate                                                         api.FbyApiController.generateBoostConsolidatedReport()
POST /reports/competitors-position/generate                                                       api.FbyApiController.generateCompetitorsPositionReport()
POST /reports/goods-feedback/generate                                                             api.FbyApiController.generateGoodsFeedbackReport()
POST /reports/goods-movement/generate                                                             api.FbyApiController.generateGoodsMovementReport()
POST /reports/goods-realization/generate                                                          api.FbyApiController.generateGoodsRealizationReport()
POST /reports/goods-turnover/generate                                                             api.FbyApiController.generateGoodsTurnoverReport()
POST /reports/prices/generate                                                                     api.FbyApiController.generatePricesReport()
POST /reports/shelf-statistics/generate                                                           api.FbyApiController.generateShelfsStatisticsReport()
POST /reports/shows-sales/generate                                                                api.FbyApiController.generateShowsSalesReport()
POST /reports/stocks-on-warehouses/generate                                                       api.FbyApiController.generateStocksOnWarehousesReport()
POST /reports/united-marketplace-services/generate                                                api.FbyApiController.generateUnitedMarketplaceServicesReport()
POST /reports/united-netting/generate                                                             api.FbyApiController.generateUnitedNettingReport()
POST /reports/united-orders/generate                                                              api.FbyApiController.generateUnitedOrdersReport()
GET /campaigns                                                                                    api.FbyApiController.getCampaigns()
POST /categories/max-sale-quantum                                                                 api.FbyApiController.getCategoriesMaxSaleQuantum()
POST /categories/tree                                                                             api.FbyApiController.getCategoriesTree()
GET /warehouses                                                                                   api.FbyApiController.getFulfillmentWarehouses()
GET /regions                                                                                      api.FbyApiController.searchRegionsByName()
POST /campaigns/:campaignId/hidden-offers                                                         api.FbyApiController.addHiddenOffers(campaignId: Long)
POST /businesses/:businessId/offer-mappings/archive                                               api.FbyApiController.addOffersToArchive(businessId: Long)
POST /businesses/:businessId/price-quarantine/confirm                                             api.FbyApiController.confirmBusinessPrices(businessId: Long)
POST /campaigns/:campaignId/price-quarantine/confirm                                              api.FbyApiController.confirmCampaignPrices(campaignId: Long)
POST /businesses/:businessId/chats/new                                                            api.FbyApiController.createChat(businessId: Long)
POST /campaigns/:campaignId/offers/delete                                                         api.FbyApiController.deleteCampaignOffers(campaignId: Long)
POST /businesses/:businessId/goods-feedback/comments/delete                                       api.FbyApiController.deleteGoodsFeedbackComment(businessId: Long)
POST /campaigns/:campaignId/hidden-offers/delete                                                  api.FbyApiController.deleteHiddenOffers(campaignId: Long)
POST /businesses/:businessId/offer-mappings/delete                                                api.FbyApiController.deleteOffers(businessId: Long)
POST /businesses/:businessId/offer-mappings/unarchive                                             api.FbyApiController.deleteOffersFromArchive(businessId: Long)
POST /businesses/:businessId/promos/offers/delete                                                 api.FbyApiController.deletePromoOffers(businessId: Long)
GET /campaigns/:campaignId/offers/all                                                             api.FbyApiController.getAllOffers(campaignId: Long)
POST /businesses/:businessId/bids/info                                                            api.FbyApiController.getBidsInfoForBusiness(businessId: Long)
POST /businesses/:businessId/bids/recommendations                                                 api.FbyApiController.getBidsRecommendations(businessId: Long)
POST /businesses/:businessId/price-quarantine                                                     api.FbyApiController.getBusinessQuarantineOffers(businessId: Long)
POST /businesses/:businessId/settings                                                             api.FbyApiController.getBusinessSettings(businessId: Long)
GET /campaigns/:campaignId                                                                        api.FbyApiController.getCampaign(campaignId: Long)
GET /campaigns/:campaignId/logins                                                                 api.FbyApiController.getCampaignLogins(campaignId: Long)
POST /campaigns/:campaignId/offers                                                                api.FbyApiController.getCampaignOffers(campaignId: Long)
POST /campaigns/:campaignId/price-quarantine                                                      api.FbyApiController.getCampaignQuarantineOffers(campaignId: Long)
GET /campaigns/:campaignId/region                                                                 api.FbyApiController.getCampaignRegion(campaignId: Long)
GET /campaigns/:campaignId/settings                                                               api.FbyApiController.getCampaignSettings(campaignId: Long)
GET /campaigns/by_login/:login                                                                    api.FbyApiController.getCampaignsByLogin(login: String)
POST /category/:categoryId/parameters                                                             api.FbyApiController.getCategoryContentParameters(categoryId: Long)
POST /businesses/:businessId/chats/history                                                        api.FbyApiController.getChatHistory(businessId: Long)
POST /businesses/:businessId/chats                                                                api.FbyApiController.getChats(businessId: Long)
GET /campaigns/:campaignId/feeds/:feedId                                                          api.FbyApiController.getFeed(campaignId: Long, feedId: Long)
GET /campaigns/:campaignId/feeds/:feedId/index-logs                                               api.FbyApiController.getFeedIndexLogs(campaignId: Long, feedId: Long)
GET /campaigns/:campaignId/feedback/updates                                                       api.FbyApiController.getFeedbackAndCommentUpdates(campaignId: Long)
GET /campaigns/:campaignId/feeds                                                                  api.FbyApiController.getFeeds(campaignId: Long)
POST /businesses/:businessId/goods-feedback/comments                                              api.FbyApiController.getGoodsFeedbackComments(businessId: Long)
POST /businesses/:businessId/goods-feedback                                                       api.FbyApiController.getGoodsFeedbacks(businessId: Long)
POST /campaigns/:campaignId/stats/skus                                                            api.FbyApiController.getGoodsStats(campaignId: Long)
GET /campaigns/:campaignId/hidden-offers                                                          api.FbyApiController.getHiddenOffers(campaignId: Long)
POST /businesses/:businessId/offer-cards                                                          api.FbyApiController.getOfferCardsContentStatus(businessId: Long)
GET /campaigns/:campaignId/offer-mapping-entries                                                  api.FbyApiController.getOfferMappingEntries(campaignId: Long)
POST /businesses/:businessId/offer-mappings                                                       api.FbyApiController.getOfferMappings(businessId: Long)
POST /businesses/:businessId/offers/recommendations                                               api.FbyApiController.getOfferRecommendations(businessId: Long)
GET /campaigns/:campaignId/offers                                                                 api.FbyApiController.getOffers(campaignId: Long)
GET /campaigns/:campaignId/orders/:orderId                                                        api.FbyApiController.getOrder(campaignId: Long, orderId: Long)
POST /campaigns/:campaignId/orders/:orderId/business-buyer                                        api.FbyApiController.getOrderBusinessBuyerInfo(campaignId: Long, orderId: Long)
POST /campaigns/:campaignId/orders/:orderId/documents                                             api.FbyApiController.getOrderBusinessDocumentsInfo(campaignId: Long, orderId: Long)
GET /campaigns/:campaignId/orders                                                                 api.FbyApiController.getOrders(campaignId: Long)
POST /campaigns/:campaignId/stats/orders                                                          api.FbyApiController.getOrdersStats(campaignId: Long)
GET /campaigns/:campaignId/offer-prices                                                           api.FbyApiController.getPrices(campaignId: Long)
POST /campaigns/:campaignId/offer-prices                                                          api.FbyApiController.getPricesByOfferIds(campaignId: Long)
POST /businesses/:businessId/promos/offers                                                        api.FbyApiController.getPromoOffers(businessId: Long)
POST /businesses/:businessId/promos                                                               api.FbyApiController.getPromos(businessId: Long)
POST /businesses/:businessId/ratings/quality                                                      api.FbyApiController.getQualityRatings(businessId: Long)
GET /reports/info/:reportId                                                                       api.FbyApiController.getReportInfo(reportId: String)
GET /campaigns/:campaignId/orders/:orderId/returns/:returnId                                      api.FbyApiController.getReturn(campaignId: Long, orderId: Long, returnId: Long)
GET /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision/:itemId/image/:imageHash    api.FbyApiController.getReturnPhoto(campaignId: Long, orderId: Long, returnId: Long, itemId: Long, imageHash: String)
GET /campaigns/:campaignId/returns                                                                api.FbyApiController.getReturns(campaignId: Long)
POST /campaigns/:campaignId/offers/stocks                                                         api.FbyApiController.getStocks(campaignId: Long)
POST /campaigns/:campaignId/offer-mapping-entries/suggestions                                     api.FbyApiController.getSuggestedOfferMappingEntries(campaignId: Long)
POST /businesses/:businessId/offer-mappings/suggestions                                           api.FbyApiController.getSuggestedOfferMappings(businessId: Long)
POST /campaigns/:campaignId/offer-prices/suggestions                                              api.FbyApiController.getSuggestedPrices(campaignId: Long)
PUT /businesses/:businessId/bids                                                                  api.FbyApiController.putBidsForBusiness(businessId: Long)
PUT /campaigns/:campaignId/bids                                                                   api.FbyApiController.putBidsForCampaign(campaignId: Long)
POST /campaigns/:campaignId/feeds/:feedId/refresh                                                 api.FbyApiController.refreshFeed(campaignId: Long, feedId: Long)
GET /regions/:regionId/children                                                                   api.FbyApiController.searchRegionChildren(regionId: Long)
GET /regions/:regionId                                                                            api.FbyApiController.searchRegionsById(regionId: Long)
POST /businesses/:businessId/chats/file/send                                                      api.FbyApiController.sendFileToChat(businessId: Long)
POST /businesses/:businessId/chats/message                                                        api.FbyApiController.sendMessageToChat(businessId: Long)
POST /campaigns/:campaignId/feeds/:feedId/params                                                  api.FbyApiController.setFeedParams(campaignId: Long, feedId: Long)
POST /businesses/:businessId/goods-feedback/skip-reaction                                         api.FbyApiController.skipGoodsFeedbacksReaction(businessId: Long)
POST /businesses/:businessId/offer-prices/updates                                                 api.FbyApiController.updateBusinessPrices(businessId: Long)
POST /campaigns/:campaignId/offers/update                                                         api.FbyApiController.updateCampaignOffers(campaignId: Long)
POST /businesses/:businessId/goods-feedback/comments/update                                       api.FbyApiController.updateGoodsFeedbackComment(businessId: Long)
POST /businesses/:businessId/offer-cards/update                                                   api.FbyApiController.updateOfferContent(businessId: Long)
POST /campaigns/:campaignId/offer-mapping-entries/updates                                         api.FbyApiController.updateOfferMappingEntries(campaignId: Long)
POST /businesses/:businessId/offer-mappings/update                                                api.FbyApiController.updateOfferMappings(businessId: Long)
POST /campaigns/:campaignId/offer-prices/updates                                                  api.FbyApiController.updatePrices(campaignId: Long)
POST /businesses/:businessId/promos/offers/update                                                 api.FbyApiController.updatePromoOffers(businessId: Long)

# Routes for Feedbacks API

GET /campaigns/:campaignId/feedback/updates                                                       api.FeedbacksApiController.getFeedbackAndCommentUpdates(campaignId: Long)

# Routes for Feeds API

GET /campaigns/:campaignId/feeds/:feedId                                                          api.FeedsApiController.getFeed(campaignId: Long, feedId: Long)
GET /campaigns/:campaignId/feeds/:feedId/index-logs                                               api.FeedsApiController.getFeedIndexLogs(campaignId: Long, feedId: Long)
GET /campaigns/:campaignId/feeds                                                                  api.FeedsApiController.getFeeds(campaignId: Long)
POST /campaigns/:campaignId/feeds/:feedId/refresh                                                 api.FeedsApiController.refreshFeed(campaignId: Long, feedId: Long)
POST /campaigns/:campaignId/feeds/:feedId/params                                                  api.FeedsApiController.setFeedParams(campaignId: Long, feedId: Long)

# Routes for GoodsFeedback API

POST /businesses/:businessId/goods-feedback/comments/delete                                       api.GoodsFeedbackApiController.deleteGoodsFeedbackComment(businessId: Long)
POST /businesses/:businessId/goods-feedback/comments                                              api.GoodsFeedbackApiController.getGoodsFeedbackComments(businessId: Long)
POST /businesses/:businessId/goods-feedback                                                       api.GoodsFeedbackApiController.getGoodsFeedbacks(businessId: Long)
POST /businesses/:businessId/goods-feedback/skip-reaction                                         api.GoodsFeedbackApiController.skipGoodsFeedbacksReaction(businessId: Long)
POST /businesses/:businessId/goods-feedback/comments/update                                       api.GoodsFeedbackApiController.updateGoodsFeedbackComment(businessId: Long)

# Routes for GoodsStats API

POST /campaigns/:campaignId/stats/skus                                                            api.GoodsStatsApiController.getGoodsStats(campaignId: Long)

# Routes for HiddenOffers API

POST /campaigns/:campaignId/hidden-offers                                                         api.HiddenOffersApiController.addHiddenOffers(campaignId: Long)
POST /campaigns/:campaignId/hidden-offers/delete                                                  api.HiddenOffersApiController.deleteHiddenOffers(campaignId: Long)
GET /campaigns/:campaignId/hidden-offers                                                          api.HiddenOffersApiController.getHiddenOffers(campaignId: Long)

# Routes for Models API

POST /models                                                                                      api.ModelsApiController.getModels()
POST /models/offers                                                                               api.ModelsApiController.getModelsOffers()
GET /models                                                                                       api.ModelsApiController.searchModels()
GET /models/:modelId                                                                              api.ModelsApiController.getModel(modelId: Long)
GET /models/:modelId/offers                                                                       api.ModelsApiController.getModelOffers(modelId: Long)

# Routes for OfferMappings API

GET /campaigns/:campaignId/offer-mapping-entries                                                  api.OfferMappingsApiController.getOfferMappingEntries(campaignId: Long)
POST /campaigns/:campaignId/offer-mapping-entries/suggestions                                     api.OfferMappingsApiController.getSuggestedOfferMappingEntries(campaignId: Long)
POST /campaigns/:campaignId/offer-mapping-entries/updates                                         api.OfferMappingsApiController.updateOfferMappingEntries(campaignId: Long)

# Routes for Offers API

POST /campaigns/:campaignId/offers/delete                                                         api.OffersApiController.deleteCampaignOffers(campaignId: Long)
GET /campaigns/:campaignId/offers/all                                                             api.OffersApiController.getAllOffers(campaignId: Long)
POST /campaigns/:campaignId/offers                                                                api.OffersApiController.getCampaignOffers(campaignId: Long)
POST /businesses/:businessId/offers/recommendations                                               api.OffersApiController.getOfferRecommendations(businessId: Long)
GET /campaigns/:campaignId/offers                                                                 api.OffersApiController.getOffers(campaignId: Long)
POST /campaigns/:campaignId/offers/update                                                         api.OffersApiController.updateCampaignOffers(campaignId: Long)

# Routes for OrderBusinessInformation API

POST /campaigns/:campaignId/orders/:orderId/business-buyer                                        api.OrderBusinessInformationApiController.getOrderBusinessBuyerInfo(campaignId: Long, orderId: Long)
POST /campaigns/:campaignId/orders/:orderId/documents                                             api.OrderBusinessInformationApiController.getOrderBusinessDocumentsInfo(campaignId: Long, orderId: Long)

# Routes for OrderDelivery API

GET /campaigns/:campaignId/orders/:orderId/buyer                                                  api.OrderDeliveryApiController.getOrderBuyerInfo(campaignId: Long, orderId: Long)
PUT /campaigns/:campaignId/orders/:orderId/delivery/date                                          api.OrderDeliveryApiController.setOrderDeliveryDate(campaignId: Long, orderId: Long)
POST /campaigns/:campaignId/orders/:orderId/delivery/track                                        api.OrderDeliveryApiController.setOrderDeliveryTrackCode(campaignId: Long, orderId: Long)
PUT /campaigns/:campaignId/orders/:orderId/delivery/storage-limit                                 api.OrderDeliveryApiController.updateOrderStorageLimit(campaignId: Long, orderId: Long)
PUT /campaigns/:campaignId/orders/:orderId/verifyEac                                              api.OrderDeliveryApiController.verifyOrderEac(campaignId: Long, orderId: Long)

# Routes for OrderLabels API

GET /campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes/:boxId/label      api.OrderLabelsApiController.generateOrderLabel(campaignId: Long, orderId: Long, shipmentId: Long, boxId: Long)
GET /campaigns/:campaignId/orders/:orderId/delivery/labels                                        api.OrderLabelsApiController.generateOrderLabels(campaignId: Long, orderId: Long)
GET /campaigns/:campaignId/orders/:orderId/delivery/labels/data                                   api.OrderLabelsApiController.getOrderLabelsData(campaignId: Long, orderId: Long)

# Routes for Orders API

PUT /campaigns/:campaignId/orders/:orderId/cancellation/accept                                    api.OrdersApiController.acceptOrderCancellation(campaignId: Long, orderId: Long)
GET /campaigns/:campaignId/orders/:orderId                                                        api.OrdersApiController.getOrder(campaignId: Long, orderId: Long)
GET /campaigns/:campaignId/orders                                                                 api.OrdersApiController.getOrders(campaignId: Long)
POST /campaigns/:campaignId/orders/:orderId/deliverDigitalGoods                                   api.OrdersApiController.provideOrderDigitalCodes(campaignId: Long, orderId: Long)
PUT /campaigns/:campaignId/orders/:orderId/identifiers                                            api.OrdersApiController.provideOrderItemIdentifiers(campaignId: Long, orderId: Long)
PUT /campaigns/:campaignId/orders/:orderId/boxes                                                  api.OrdersApiController.setOrderBoxLayout(campaignId: Long, orderId: Long)
PUT /campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes                   api.OrdersApiController.setOrderShipmentBoxes(campaignId: Long, orderId: Long, shipmentId: Long)
PUT /campaigns/:campaignId/orders/:orderId/items                                                  api.OrdersApiController.updateOrderItems(campaignId: Long, orderId: Long)
PUT /campaigns/:campaignId/orders/:orderId/status                                                 api.OrdersApiController.updateOrderStatus(campaignId: Long, orderId: Long)
POST /campaigns/:campaignId/orders/status-update                                                  api.OrdersApiController.updateOrderStatuses(campaignId: Long)

# Routes for OrdersStats API

POST /campaigns/:campaignId/stats/orders                                                          api.OrdersStatsApiController.getOrdersStats(campaignId: Long)

# Routes for OutletLicenses API

DELETE /campaigns/:campaignId/outlets/licenses                                                    api.OutletLicensesApiController.deleteOutletLicenses(campaignId: Long)
GET /campaigns/:campaignId/outlets/licenses                                                       api.OutletLicensesApiController.getOutletLicenses(campaignId: Long)
POST /campaigns/:campaignId/outlets/licenses                                                      api.OutletLicensesApiController.updateOutletLicenses(campaignId: Long)

# Routes for Outlets API

POST /campaigns/:campaignId/outlets                                                               api.OutletsApiController.createOutlet(campaignId: Long)
DELETE /campaigns/:campaignId/outlets/:outletId                                                   api.OutletsApiController.deleteOutlet(campaignId: Long, outletId: Long)
GET /campaigns/:campaignId/outlets/:outletId                                                      api.OutletsApiController.getOutlet(campaignId: Long, outletId: Long)
GET /campaigns/:campaignId/outlets                                                                api.OutletsApiController.getOutlets(campaignId: Long)
PUT /campaigns/:campaignId/outlets/:outletId                                                      api.OutletsApiController.updateOutlet(campaignId: Long, outletId: Long)

# Routes for PriceQuarantine API

POST /businesses/:businessId/price-quarantine/confirm                                             api.PriceQuarantineApiController.confirmBusinessPrices(businessId: Long)
POST /campaigns/:campaignId/price-quarantine/confirm                                              api.PriceQuarantineApiController.confirmCampaignPrices(campaignId: Long)
POST /businesses/:businessId/price-quarantine                                                     api.PriceQuarantineApiController.getBusinessQuarantineOffers(businessId: Long)
POST /campaigns/:campaignId/price-quarantine                                                      api.PriceQuarantineApiController.getCampaignQuarantineOffers(campaignId: Long)

# Routes for Prices API

GET /campaigns/:campaignId/offer-prices                                                           api.PricesApiController.getPrices(campaignId: Long)
POST /campaigns/:campaignId/offer-prices                                                          api.PricesApiController.getPricesByOfferIds(campaignId: Long)
POST /campaigns/:campaignId/offer-prices/suggestions                                              api.PricesApiController.getSuggestedPrices(campaignId: Long)
POST /businesses/:businessId/offer-prices/updates                                                 api.PricesApiController.updateBusinessPrices(businessId: Long)
POST /campaigns/:campaignId/offer-prices/updates                                                  api.PricesApiController.updatePrices(campaignId: Long)

# Routes for Promos API

POST /businesses/:businessId/promos/offers/delete                                                 api.PromosApiController.deletePromoOffers(businessId: Long)
POST /businesses/:businessId/promos/offers                                                        api.PromosApiController.getPromoOffers(businessId: Long)
POST /businesses/:businessId/promos                                                               api.PromosApiController.getPromos(businessId: Long)
POST /businesses/:businessId/promos/offers/update                                                 api.PromosApiController.updatePromoOffers(businessId: Long)

# Routes for Ratings API

POST /campaigns/:campaignId/ratings/quality/details                                               api.RatingsApiController.getQualityRatingDetails(campaignId: Long)
POST /businesses/:businessId/ratings/quality                                                      api.RatingsApiController.getQualityRatings(businessId: Long)

# Routes for Regions API

GET /regions                                                                                      api.RegionsApiController.searchRegionsByName()
GET /regions/:regionId/children                                                                   api.RegionsApiController.searchRegionChildren(regionId: Long)
GET /regions/:regionId                                                                            api.RegionsApiController.searchRegionsById(regionId: Long)

# Routes for Reports API

POST /reports/boost-consolidated/generate                                                         api.ReportsApiController.generateBoostConsolidatedReport()
POST /reports/competitors-position/generate                                                       api.ReportsApiController.generateCompetitorsPositionReport()
POST /reports/goods-feedback/generate                                                             api.ReportsApiController.generateGoodsFeedbackReport()
POST /reports/goods-movement/generate                                                             api.ReportsApiController.generateGoodsMovementReport()
POST /reports/goods-realization/generate                                                          api.ReportsApiController.generateGoodsRealizationReport()
POST /reports/goods-turnover/generate                                                             api.ReportsApiController.generateGoodsTurnoverReport()
POST /reports/documents/labels/generate                                                           api.ReportsApiController.generateMassOrderLabelsReport()
POST /reports/prices/generate                                                                     api.ReportsApiController.generatePricesReport()
POST /reports/shelf-statistics/generate                                                           api.ReportsApiController.generateShelfsStatisticsReport()
POST /reports/documents/shipment-list/generate                                                    api.ReportsApiController.generateShipmentListDocumentReport()
POST /reports/shows-sales/generate                                                                api.ReportsApiController.generateShowsSalesReport()
POST /reports/stocks-on-warehouses/generate                                                       api.ReportsApiController.generateStocksOnWarehousesReport()
POST /reports/united-marketplace-services/generate                                                api.ReportsApiController.generateUnitedMarketplaceServicesReport()
POST /reports/united-netting/generate                                                             api.ReportsApiController.generateUnitedNettingReport()
POST /reports/united-orders/generate                                                              api.ReportsApiController.generateUnitedOrdersReport()
GET /reports/info/:reportId                                                                       api.ReportsApiController.getReportInfo(reportId: String)

# Routes for Returns API

GET /campaigns/:campaignId/orders/:orderId/returns/:returnId                                      api.ReturnsApiController.getReturn(campaignId: Long, orderId: Long, returnId: Long)
GET /campaigns/:campaignId/orders/:orderId/returns/:returnId/application                          api.ReturnsApiController.getReturnApplication(campaignId: Long, orderId: Long, returnId: Long)
GET /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision/:itemId/image/:imageHash    api.ReturnsApiController.getReturnPhoto(campaignId: Long, orderId: Long, returnId: Long, itemId: Long, imageHash: String)
GET /campaigns/:campaignId/returns                                                                api.ReturnsApiController.getReturns(campaignId: Long)
POST /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision                            api.ReturnsApiController.setReturnDecision(campaignId: Long, orderId: Long, returnId: Long)
POST /campaigns/:campaignId/orders/:orderId/returns/:returnId/decision/submit                     api.ReturnsApiController.submitReturnDecision(campaignId: Long, orderId: Long, returnId: Long)

# Routes for Shipments API

POST /campaigns/:campaignId/first-mile/shipments/:shipmentId/confirm                              api.ShipmentsApiController.confirmShipment(campaignId: Long, shipmentId: Long)
GET /campaigns/:campaignId/first-mile/shipments/:shipmentId/act                                   api.ShipmentsApiController.downloadShipmentAct(campaignId: Long, shipmentId: Long)
GET /campaigns/:campaignId/first-mile/shipments/:shipmentId/discrepancy-act                       api.ShipmentsApiController.downloadShipmentDiscrepancyAct(campaignId: Long, shipmentId: Long)
GET /campaigns/:campaignId/first-mile/shipments/:shipmentId/inbound-act                           api.ShipmentsApiController.downloadShipmentInboundAct(campaignId: Long, shipmentId: Long)
GET /campaigns/:campaignId/first-mile/shipments/:shipmentId/pallet/labels                         api.ShipmentsApiController.downloadShipmentPalletLabels(campaignId: Long, shipmentId: Long)
GET /campaigns/:campaignId/shipments/reception-transfer-act                                       api.ShipmentsApiController.downloadShipmentReceptionTransferAct(campaignId: Long)
GET /campaigns/:campaignId/first-mile/shipments/:shipmentId/transportation-waybill                api.ShipmentsApiController.downloadShipmentTransportationWaybill(campaignId: Long, shipmentId: Long)
GET /campaigns/:campaignId/first-mile/shipments/:shipmentId                                       api.ShipmentsApiController.getShipment(campaignId: Long, shipmentId: Long)
GET /campaigns/:campaignId/first-mile/shipments/:shipmentId/orders/info                           api.ShipmentsApiController.getShipmentOrdersInfo(campaignId: Long, shipmentId: Long)
PUT /campaigns/:campaignId/first-mile/shipments                                                   api.ShipmentsApiController.searchShipments(campaignId: Long)
PUT /campaigns/:campaignId/first-mile/shipments/:shipmentId/pallets                               api.ShipmentsApiController.setShipmentPalletsCount(campaignId: Long, shipmentId: Long)
POST /campaigns/:campaignId/first-mile/shipments/:shipmentId/orders/transfer                      api.ShipmentsApiController.transferOrdersFromShipment(campaignId: Long, shipmentId: Long)

# Routes for Stocks API

POST /campaigns/:campaignId/offers/stocks                                                         api.StocksApiController.getStocks(campaignId: Long)
PUT /campaigns/:campaignId/offers/stocks                                                          api.StocksApiController.updateStocks(campaignId: Long)

# Routes for Tariffs API

POST /tariffs/calculate                                                                           api.TariffsApiController.calculateTariffs()

# Routes for Warehouses API

GET /warehouses                                                                                   api.WarehousesApiController.getFulfillmentWarehouses()
GET /businesses/:businessId/warehouses                                                            api.WarehousesApiController.getWarehouses(businessId: Long)

# Map static resources from the /public folder to the /assets URL path
GET /assets/*file           controllers.Assets.at(file)
GET /versionedAssets/*file  controllers.Assets.versioned(file)

# Swagger UI
GET /api                    api.ApiDocController.api
