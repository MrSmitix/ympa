"$schema"   = "http://cyaninc.com/json-schemas/tosca-lite-v1/definition-module#"
title       = "ympa_python_blueplanet_server ShipmentInfoDTO"
package     = ympa_python_blueplanet_server
version     = "1.0"
description = "Defines a ShipmentInfoDTO"
authors     = ["F. Bar (foo@bar.baz)"]

imports {
  Root = tosca.resourceTypes.Root
  DeliveryServiceDTO = ympa_python_blueplanet_server.resourceTypes.DeliveryServiceDTO
  PalletsCountDTO = ympa_python_blueplanet_server.resourceTypes.PalletsCountDTO
  PartnerShipmentWarehouseDTO = ympa_python_blueplanet_server.resourceTypes.PartnerShipmentWarehouseDTO
  ShipmentStatusType = ympa_python_blueplanet_server.resourceTypes.ShipmentStatusType
  ShipmentType = ympa_python_blueplanet_server.resourceTypes.ShipmentType
}
resourceTypes {

  ShipmentInfoDTO {
    title = ShipmentInfoDTO
    description = ShipmentInfoDTO
    derivedFrom = Root
    properties {
        id {
          type =  integer
          description = "Идентификатор отгрузки."
          optional = false
        }
        plan_interval_from {
          type =  string
          description = "Начало планового интервала отгрузки."
          optional = false
        }
        plan_interval_to {
          type =  string
          description = "Конец планового интервала отгрузки."
          optional = false
        }
        shipment_type {
          type = ShipmentType
          description = ""
          optional = false
        }
        warehouse {
          type = PartnerShipmentWarehouseDTO
          description = ""
          optional = false
        }
        warehouse_to {
          type = PartnerShipmentWarehouseDTO
          description = ""
          optional = false
        }
        external_id {
          type =  string
          description = "Идентификатор отгрузки в вашей системе. Если вы еще не передавали идентификатор, вернется идентификатор из параметра &#x60;id&#x60;."
          optional = false
        }
        delivery_service {
          type = DeliveryServiceDTO
          description = ""
          optional = false
        }
        pallets_count {
          type = PalletsCountDTO
          description = ""
          optional = false
        }
        order_ids {
          type = array
          items.type =  integer
          description = "Идентификаторы заказов в отгрузке."
          optional = true
        }
        draft_count {
          type =  integer
          description = "Количество заказов, которое Маркет запланировал к отгрузке."
          optional = false
        }
        planned_count {
          type =  integer
          description = "Количество заказов, которое Маркет подтвердил к отгрузке."
          optional = false
        }
        fact_count {
          type =  integer
          description = "Количество заказов, принятых в сортировочном центре или пункте приема."
          optional = false
        }
        status {
          type = ShipmentStatusType
          description = ""
          optional = false
        }
        status_description {
          type =  string
          description = "Описание статуса отгрузки."
          optional = false
        }
        status_update_time {
          type =  string
          description = "Время последнего изменения статуса отгрузки."
          optional = false
        }
    }
  }
}

serviceTemplates {

  ShipmentInfoDTO {
    title = ShipmentInfoDTO
    description = ShipmentInfoDTO
    implements = ympa_python_blueplanet_server.resourceTypes.ShipmentInfoDTO

  }
}
