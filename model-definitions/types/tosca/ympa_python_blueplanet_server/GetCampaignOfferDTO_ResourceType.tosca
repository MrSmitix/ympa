"$schema"   = "http://cyaninc.com/json-schemas/tosca-lite-v1/definition-module#"
title       = "ympa_python_blueplanet_server GetCampaignOfferDTO"
package     = ympa_python_blueplanet_server
version     = "1.0"
description = "Defines a GetCampaignOfferDTO"
authors     = ["F. Bar (foo@bar.baz)"]

imports {
  Root = tosca.resourceTypes.Root
  GetPriceWithDiscountDTO = ympa_python_blueplanet_server.resourceTypes.GetPriceWithDiscountDTO
  GetPriceWithVatDTO = ympa_python_blueplanet_server.resourceTypes.GetPriceWithVatDTO
  OfferCampaignStatusType = ympa_python_blueplanet_server.resourceTypes.OfferCampaignStatusType
  OfferErrorDTO = ympa_python_blueplanet_server.resourceTypes.OfferErrorDTO
  QuantumDTO = ympa_python_blueplanet_server.resourceTypes.QuantumDTO
  import re = ympa_python_blueplanet_server.resourceTypes.import re
}
resourceTypes {

  GetCampaignOfferDTO {
    title = GetCampaignOfferDTO
    description = GetCampaignOfferDTO
    derivedFrom = Root
    properties {
        offer_id {
          type =  string
          description = "Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) "
          optional = true
        }
        quantum {
          type = QuantumDTO
          description = ""
          optional = false
        }
        available {
          type =  boolean
          description = "Есть ли товар в продаже. "
          optional = false
        }
        basic_price {
          type = GetPriceWithDiscountDTO
          description = ""
          optional = false
        }
        campaign_price {
          type = GetPriceWithVatDTO
          description = ""
          optional = false
        }
        status {
          type = OfferCampaignStatusType
          description = ""
          optional = false
        }
        errors {
          type = array
          items.type = OfferErrorDTO
          description = "Ошибки, препятствующие размещению товара на витрине. "
          optional = false
        }
        warnings {
          type = array
          items.type = OfferErrorDTO
          description = "Предупреждения, не препятствующие размещению товара на витрине. "
          optional = false
        }
    }
  }
}

serviceTemplates {

  GetCampaignOfferDTO {
    title = GetCampaignOfferDTO
    description = GetCampaignOfferDTO
    implements = ympa_python_blueplanet_server.resourceTypes.GetCampaignOfferDTO

  }
}
