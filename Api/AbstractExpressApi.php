<?php

/**
 * Партнерский API Маркета
 * PHP version 8.x
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace OpenAPIServer\Api;


abstract class AbstractExpressApi
{

    /**
     * Operation addHiddenOffers
     *
     * Path: `/campaigns/{campaignId}/hidden-offers`
     *
     * Скрытие товаров и настройки скрытия
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\AddHiddenOffersRequest $addHiddenOffersRequest Запрос на скрытие оферов. (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     */
    public function addHiddenOffers(int $campaignId, \OpenAPIServer\Model\AddHiddenOffersRequest $addHiddenOffersRequest): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation addHiddenOffers (stream)
     *
     * Path: `/campaigns/{campaignId}/hidden-offers`
     *
     * Скрытие товаров и настройки скрытия
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\AddHiddenOffersRequest $addHiddenOffersRequest Запрос на скрытие оферов. (required)
     *
     */
    public function addHiddenOffersStream(int $campaignId, \OpenAPIServer\Model\AddHiddenOffersRequest $addHiddenOffersRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation addOffersToArchive
     *
     * Path: `/businesses/{businessId}/offer-mappings/archive`
     *
     * Добавление товаров в архив
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\AddOffersToArchiveRequest $addOffersToArchiveRequest  (required)
     *
     * @return \OpenAPIServer\Model\AddOffersToArchiveResponse|null
     */
    public function addOffersToArchive(int $businessId, \OpenAPIServer\Model\AddOffersToArchiveRequest $addOffersToArchiveRequest): \OpenAPIServer\Model\AddOffersToArchiveResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation addOffersToArchive (stream)
     *
     * Path: `/businesses/{businessId}/offer-mappings/archive`
     *
     * Добавление товаров в архив
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\AddOffersToArchiveRequest $addOffersToArchiveRequest  (required)
     *
     */
    public function addOffersToArchiveStream(int $businessId, \OpenAPIServer\Model\AddOffersToArchiveRequest $addOffersToArchiveRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation calculateTariffs
     *
     * Path: `/tariffs/calculate`
     *
     * Калькулятор стоимости услуг
     *
     * @param \OpenAPIServer\Model\CalculateTariffsRequest $calculateTariffsRequest  (required)
     *
     * @return \OpenAPIServer\Model\CalculateTariffsResponse|null
     */
    public function calculateTariffs(\OpenAPIServer\Model\CalculateTariffsRequest $calculateTariffsRequest): \OpenAPIServer\Model\CalculateTariffsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation calculateTariffs (stream)
     *
     * Path: `/tariffs/calculate`
     *
     * Калькулятор стоимости услуг
     *
     * @param \OpenAPIServer\Model\CalculateTariffsRequest $calculateTariffsRequest  (required)
     *
     */
    public function calculateTariffsStream(\OpenAPIServer\Model\CalculateTariffsRequest $calculateTariffsRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation confirmBusinessPrices
     *
     * Path: `/businesses/{businessId}/price-quarantine/confirm`
     *
     * Удаление товара из карантина по цене в кабинете
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\ConfirmPricesRequest $confirmPricesRequest  (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     */
    public function confirmBusinessPrices(int $businessId, \OpenAPIServer\Model\ConfirmPricesRequest $confirmPricesRequest): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation confirmBusinessPrices (stream)
     *
     * Path: `/businesses/{businessId}/price-quarantine/confirm`
     *
     * Удаление товара из карантина по цене в кабинете
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\ConfirmPricesRequest $confirmPricesRequest  (required)
     *
     */
    public function confirmBusinessPricesStream(int $businessId, \OpenAPIServer\Model\ConfirmPricesRequest $confirmPricesRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation confirmCampaignPrices
     *
     * Path: `/campaigns/{campaignId}/price-quarantine/confirm`
     *
     * Удаление товара из карантина по цене в магазине
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\ConfirmPricesRequest $confirmPricesRequest  (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     */
    public function confirmCampaignPrices(int $campaignId, \OpenAPIServer\Model\ConfirmPricesRequest $confirmPricesRequest): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation confirmCampaignPrices (stream)
     *
     * Path: `/campaigns/{campaignId}/price-quarantine/confirm`
     *
     * Удаление товара из карантина по цене в магазине
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\ConfirmPricesRequest $confirmPricesRequest  (required)
     *
     */
    public function confirmCampaignPricesStream(int $campaignId, \OpenAPIServer\Model\ConfirmPricesRequest $confirmPricesRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation createChat
     *
     * Path: `/businesses/{businessId}/chats/new`
     *
     * Создание нового чата с покупателем
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\CreateChatRequest $createChatRequest description (required)
     *
     * @return \OpenAPIServer\Model\CreateChatResponse|null
     */
    public function createChat(int $businessId, \OpenAPIServer\Model\CreateChatRequest $createChatRequest): \OpenAPIServer\Model\CreateChatResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation createChat (stream)
     *
     * Path: `/businesses/{businessId}/chats/new`
     *
     * Создание нового чата с покупателем
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\CreateChatRequest $createChatRequest description (required)
     *
     */
    public function createChatStream(int $businessId, \OpenAPIServer\Model\CreateChatRequest $createChatRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation deleteCampaignOffers
     *
     * Path: `/campaigns/{campaignId}/offers/delete`
     *
     * Удаление товаров из ассортимента магазина
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\DeleteCampaignOffersRequest $deleteCampaignOffersRequest  (required)
     *
     * @return \OpenAPIServer\Model\DeleteCampaignOffersResponse|null
     */
    public function deleteCampaignOffers(int $campaignId, \OpenAPIServer\Model\DeleteCampaignOffersRequest $deleteCampaignOffersRequest): \OpenAPIServer\Model\DeleteCampaignOffersResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation deleteCampaignOffers (stream)
     *
     * Path: `/campaigns/{campaignId}/offers/delete`
     *
     * Удаление товаров из ассортимента магазина
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\DeleteCampaignOffersRequest $deleteCampaignOffersRequest  (required)
     *
     */
    public function deleteCampaignOffersStream(int $campaignId, \OpenAPIServer\Model\DeleteCampaignOffersRequest $deleteCampaignOffersRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation deleteGoodsFeedbackComment
     *
     * Path: `/businesses/{businessId}/goods-feedback/comments/delete`
     *
     * Удаление комментария к отзыву
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\DeleteGoodsFeedbackCommentRequest $deleteGoodsFeedbackCommentRequest  (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     */
    public function deleteGoodsFeedbackComment(int $businessId, \OpenAPIServer\Model\DeleteGoodsFeedbackCommentRequest $deleteGoodsFeedbackCommentRequest): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation deleteGoodsFeedbackComment (stream)
     *
     * Path: `/businesses/{businessId}/goods-feedback/comments/delete`
     *
     * Удаление комментария к отзыву
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\DeleteGoodsFeedbackCommentRequest $deleteGoodsFeedbackCommentRequest  (required)
     *
     */
    public function deleteGoodsFeedbackCommentStream(int $businessId, \OpenAPIServer\Model\DeleteGoodsFeedbackCommentRequest $deleteGoodsFeedbackCommentRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation deleteHiddenOffers
     *
     * Path: `/campaigns/{campaignId}/hidden-offers/delete`
     *
     * Возобновление показа товаров
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\DeleteHiddenOffersRequest $deleteHiddenOffersRequest Запрос на возобновление показа оферов. (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     */
    public function deleteHiddenOffers(int $campaignId, \OpenAPIServer\Model\DeleteHiddenOffersRequest $deleteHiddenOffersRequest): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation deleteHiddenOffers (stream)
     *
     * Path: `/campaigns/{campaignId}/hidden-offers/delete`
     *
     * Возобновление показа товаров
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\DeleteHiddenOffersRequest $deleteHiddenOffersRequest Запрос на возобновление показа оферов. (required)
     *
     */
    public function deleteHiddenOffersStream(int $campaignId, \OpenAPIServer\Model\DeleteHiddenOffersRequest $deleteHiddenOffersRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation deleteOffers
     *
     * Path: `/businesses/{businessId}/offer-mappings/delete`
     *
     * Удаление товаров из каталога
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\DeleteOffersRequest $deleteOffersRequest  (required)
     *
     * @return \OpenAPIServer\Model\DeleteOffersResponse|null
     */
    public function deleteOffers(int $businessId, \OpenAPIServer\Model\DeleteOffersRequest $deleteOffersRequest): \OpenAPIServer\Model\DeleteOffersResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation deleteOffers (stream)
     *
     * Path: `/businesses/{businessId}/offer-mappings/delete`
     *
     * Удаление товаров из каталога
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\DeleteOffersRequest $deleteOffersRequest  (required)
     *
     */
    public function deleteOffersStream(int $businessId, \OpenAPIServer\Model\DeleteOffersRequest $deleteOffersRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation deleteOffersFromArchive
     *
     * Path: `/businesses/{businessId}/offer-mappings/unarchive`
     *
     * Удаление товаров из архива
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\DeleteOffersFromArchiveRequest $deleteOffersFromArchiveRequest  (required)
     *
     * @return \OpenAPIServer\Model\DeleteOffersFromArchiveResponse|null
     */
    public function deleteOffersFromArchive(int $businessId, \OpenAPIServer\Model\DeleteOffersFromArchiveRequest $deleteOffersFromArchiveRequest): \OpenAPIServer\Model\DeleteOffersFromArchiveResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation deleteOffersFromArchive (stream)
     *
     * Path: `/businesses/{businessId}/offer-mappings/unarchive`
     *
     * Удаление товаров из архива
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\DeleteOffersFromArchiveRequest $deleteOffersFromArchiveRequest  (required)
     *
     */
    public function deleteOffersFromArchiveStream(int $businessId, \OpenAPIServer\Model\DeleteOffersFromArchiveRequest $deleteOffersFromArchiveRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation deletePromoOffers
     *
     * Path: `/businesses/{businessId}/promos/offers/delete`
     *
     * Удаление товаров из акции
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\DeletePromoOffersRequest $deletePromoOffersRequest  (required)
     *
     * @return \OpenAPIServer\Model\DeletePromoOffersResponse|null
     */
    public function deletePromoOffers(int $businessId, \OpenAPIServer\Model\DeletePromoOffersRequest $deletePromoOffersRequest): \OpenAPIServer\Model\DeletePromoOffersResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation deletePromoOffers (stream)
     *
     * Path: `/businesses/{businessId}/promos/offers/delete`
     *
     * Удаление товаров из акции
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\DeletePromoOffersRequest $deletePromoOffersRequest  (required)
     *
     */
    public function deletePromoOffersStream(int $businessId, \OpenAPIServer\Model\DeletePromoOffersRequest $deletePromoOffersRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateBoostConsolidatedReport
     *
     * Path: `/reports/boost-consolidated/generate`
     *
     * Отчет по бусту продаж
     *
     * @param \OpenAPIServer\Model\GenerateBoostConsolidatedRequest $generateBoostConsolidatedRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateBoostConsolidatedReport(\OpenAPIServer\Model\GenerateBoostConsolidatedRequest $generateBoostConsolidatedRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateBoostConsolidatedReport (stream)
     *
     * Path: `/reports/boost-consolidated/generate`
     *
     * Отчет по бусту продаж
     *
     * @param \OpenAPIServer\Model\GenerateBoostConsolidatedRequest $generateBoostConsolidatedRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateBoostConsolidatedReportStream(\OpenAPIServer\Model\GenerateBoostConsolidatedRequest $generateBoostConsolidatedRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateCompetitorsPositionReport
     *
     * Path: `/reports/competitors-position/generate`
     *
     * Отчет «Конкурентная позиция»
     *
     * @param \OpenAPIServer\Model\GenerateCompetitorsPositionReportRequest $generateCompetitorsPositionReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateCompetitorsPositionReport(\OpenAPIServer\Model\GenerateCompetitorsPositionReportRequest $generateCompetitorsPositionReportRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateCompetitorsPositionReport (stream)
     *
     * Path: `/reports/competitors-position/generate`
     *
     * Отчет «Конкурентная позиция»
     *
     * @param \OpenAPIServer\Model\GenerateCompetitorsPositionReportRequest $generateCompetitorsPositionReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateCompetitorsPositionReportStream(\OpenAPIServer\Model\GenerateCompetitorsPositionReportRequest $generateCompetitorsPositionReportRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateGoodsFeedbackReport
     *
     * Path: `/reports/goods-feedback/generate`
     *
     * Отчет по отзывам о товарах
     *
     * @param \OpenAPIServer\Model\GenerateGoodsFeedbackRequest $generateGoodsFeedbackRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateGoodsFeedbackReport(\OpenAPIServer\Model\GenerateGoodsFeedbackRequest $generateGoodsFeedbackRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateGoodsFeedbackReport (stream)
     *
     * Path: `/reports/goods-feedback/generate`
     *
     * Отчет по отзывам о товарах
     *
     * @param \OpenAPIServer\Model\GenerateGoodsFeedbackRequest $generateGoodsFeedbackRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateGoodsFeedbackReportStream(\OpenAPIServer\Model\GenerateGoodsFeedbackRequest $generateGoodsFeedbackRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateGoodsRealizationReport
     *
     * Path: `/reports/goods-realization/generate`
     *
     * Отчет по реализации
     *
     * @param \OpenAPIServer\Model\GenerateGoodsRealizationReportRequest $generateGoodsRealizationReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateGoodsRealizationReport(\OpenAPIServer\Model\GenerateGoodsRealizationReportRequest $generateGoodsRealizationReportRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateGoodsRealizationReport (stream)
     *
     * Path: `/reports/goods-realization/generate`
     *
     * Отчет по реализации
     *
     * @param \OpenAPIServer\Model\GenerateGoodsRealizationReportRequest $generateGoodsRealizationReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateGoodsRealizationReportStream(\OpenAPIServer\Model\GenerateGoodsRealizationReportRequest $generateGoodsRealizationReportRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateMassOrderLabelsReport
     *
     * Path: `/reports/documents/labels/generate`
     *
     * Готовые ярлыки‑наклейки на все коробки в нескольких заказах
     *
     * @param \OpenAPIServer\Model\GenerateMassOrderLabelsRequest $generateMassOrderLabelsRequest  (required)
     * @param  $format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateMassOrderLabelsReport(\OpenAPIServer\Model\GenerateMassOrderLabelsRequest $generateMassOrderLabelsRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateMassOrderLabelsReport (stream)
     *
     * Path: `/reports/documents/labels/generate`
     *
     * Готовые ярлыки‑наклейки на все коробки в нескольких заказах
     *
     * @param \OpenAPIServer\Model\GenerateMassOrderLabelsRequest $generateMassOrderLabelsRequest  (required)
     * @param  $format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7. (optional)
     *
     */
    public function generateMassOrderLabelsReportStream(\OpenAPIServer\Model\GenerateMassOrderLabelsRequest $generateMassOrderLabelsRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateOrderLabel
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label`
     *
     * Готовый ярлык‑наклейка для коробки в заказе
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param int $shipmentId Идентификатор грузоместа. (required)
     * @param int $boxId Идентификатор коробки. (required)
     * @param  $format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6. (optional)
     *
     * @return void
     */
    public function generateOrderLabel(int $campaignId, int $orderId, int $shipmentId, int $boxId,  $format): void
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateOrderLabel (stream)
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label`
     *
     * Готовый ярлык‑наклейка для коробки в заказе
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param int $shipmentId Идентификатор грузоместа. (required)
     * @param int $boxId Идентификатор коробки. (required)
     * @param  $format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6. (optional)
     *
     */
    public function generateOrderLabelStream(int $campaignId, int $orderId, int $shipmentId, int $boxId,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateOrderLabels
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/delivery/labels`
     *
     * Готовые ярлыки‑наклейки на все коробки в одном заказе
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param  $format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6. (optional)
     *
     * @return void
     */
    public function generateOrderLabels(int $campaignId, int $orderId,  $format): void
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateOrderLabels (stream)
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/delivery/labels`
     *
     * Готовые ярлыки‑наклейки на все коробки в одном заказе
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param  $format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6. (optional)
     *
     */
    public function generateOrderLabelsStream(int $campaignId, int $orderId,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generatePricesReport
     *
     * Path: `/reports/prices/generate`
     *
     * Отчет «Цены на рынке»
     *
     * @param \OpenAPIServer\Model\GeneratePricesReportRequest $generatePricesReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generatePricesReport(\OpenAPIServer\Model\GeneratePricesReportRequest $generatePricesReportRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generatePricesReport (stream)
     *
     * Path: `/reports/prices/generate`
     *
     * Отчет «Цены на рынке»
     *
     * @param \OpenAPIServer\Model\GeneratePricesReportRequest $generatePricesReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generatePricesReportStream(\OpenAPIServer\Model\GeneratePricesReportRequest $generatePricesReportRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateShelfsStatisticsReport
     *
     * Path: `/reports/shelf-statistics/generate`
     *
     * Отчет по полкам
     *
     * @param \OpenAPIServer\Model\GenerateShelfsStatisticsRequest $generateShelfsStatisticsRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateShelfsStatisticsReport(\OpenAPIServer\Model\GenerateShelfsStatisticsRequest $generateShelfsStatisticsRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateShelfsStatisticsReport (stream)
     *
     * Path: `/reports/shelf-statistics/generate`
     *
     * Отчет по полкам
     *
     * @param \OpenAPIServer\Model\GenerateShelfsStatisticsRequest $generateShelfsStatisticsRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateShelfsStatisticsReportStream(\OpenAPIServer\Model\GenerateShelfsStatisticsRequest $generateShelfsStatisticsRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateShowsSalesReport
     *
     * Path: `/reports/shows-sales/generate`
     *
     * Отчет «Аналитика продаж»
     *
     * @param \OpenAPIServer\Model\GenerateShowsSalesReportRequest $generateShowsSalesReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateShowsSalesReport(\OpenAPIServer\Model\GenerateShowsSalesReportRequest $generateShowsSalesReportRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateShowsSalesReport (stream)
     *
     * Path: `/reports/shows-sales/generate`
     *
     * Отчет «Аналитика продаж»
     *
     * @param \OpenAPIServer\Model\GenerateShowsSalesReportRequest $generateShowsSalesReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateShowsSalesReportStream(\OpenAPIServer\Model\GenerateShowsSalesReportRequest $generateShowsSalesReportRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateStocksOnWarehousesReport
     *
     * Path: `/reports/stocks-on-warehouses/generate`
     *
     * Отчет по остаткам на складах
     *
     * @param \OpenAPIServer\Model\GenerateStocksOnWarehousesReportRequest $generateStocksOnWarehousesReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateStocksOnWarehousesReport(\OpenAPIServer\Model\GenerateStocksOnWarehousesReportRequest $generateStocksOnWarehousesReportRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateStocksOnWarehousesReport (stream)
     *
     * Path: `/reports/stocks-on-warehouses/generate`
     *
     * Отчет по остаткам на складах
     *
     * @param \OpenAPIServer\Model\GenerateStocksOnWarehousesReportRequest $generateStocksOnWarehousesReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateStocksOnWarehousesReportStream(\OpenAPIServer\Model\GenerateStocksOnWarehousesReportRequest $generateStocksOnWarehousesReportRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateUnitedMarketplaceServicesReport
     *
     * Path: `/reports/united-marketplace-services/generate`
     *
     * Отчет по стоимости услуг
     *
     * @param \OpenAPIServer\Model\GenerateUnitedMarketplaceServicesReportRequest $generateUnitedMarketplaceServicesReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateUnitedMarketplaceServicesReport(\OpenAPIServer\Model\GenerateUnitedMarketplaceServicesReportRequest $generateUnitedMarketplaceServicesReportRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateUnitedMarketplaceServicesReport (stream)
     *
     * Path: `/reports/united-marketplace-services/generate`
     *
     * Отчет по стоимости услуг
     *
     * @param \OpenAPIServer\Model\GenerateUnitedMarketplaceServicesReportRequest $generateUnitedMarketplaceServicesReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateUnitedMarketplaceServicesReportStream(\OpenAPIServer\Model\GenerateUnitedMarketplaceServicesReportRequest $generateUnitedMarketplaceServicesReportRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateUnitedNettingReport
     *
     * Path: `/reports/united-netting/generate`
     *
     * Отчет по платежам
     *
     * @param \OpenAPIServer\Model\GenerateUnitedNettingReportRequest $generateUnitedNettingReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateUnitedNettingReport(\OpenAPIServer\Model\GenerateUnitedNettingReportRequest $generateUnitedNettingReportRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateUnitedNettingReport (stream)
     *
     * Path: `/reports/united-netting/generate`
     *
     * Отчет по платежам
     *
     * @param \OpenAPIServer\Model\GenerateUnitedNettingReportRequest $generateUnitedNettingReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateUnitedNettingReportStream(\OpenAPIServer\Model\GenerateUnitedNettingReportRequest $generateUnitedNettingReportRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateUnitedOrdersReport
     *
     * Path: `/reports/united-orders/generate`
     *
     * Отчет по заказам
     *
     * @param \OpenAPIServer\Model\GenerateUnitedOrdersRequest $generateUnitedOrdersRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateUnitedOrdersReport(\OpenAPIServer\Model\GenerateUnitedOrdersRequest $generateUnitedOrdersRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateUnitedOrdersReport (stream)
     *
     * Path: `/reports/united-orders/generate`
     *
     * Отчет по заказам
     *
     * @param \OpenAPIServer\Model\GenerateUnitedOrdersRequest $generateUnitedOrdersRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateUnitedOrdersReportStream(\OpenAPIServer\Model\GenerateUnitedOrdersRequest $generateUnitedOrdersRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getAllOffers
     *
     * Path: `/campaigns/{campaignId}/offers/all`
     *
     * Все предложения магазина
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?int $feedId Идентификатор прайс-листа. (optional)
     * @param ?int $chunk Номер сегмента с результатами.  Значение по умолчанию: &#x60;0&#x60;.  {% note info %}  Номера сегментов запрашиваются последовательно, пока не будет получен сегмент с пустым ответом. Пустой ответ означает, что все предложения магазина получены.  {% endnote %}  {% note alert %}  Нумерация начинается с 0. Чтобы запросить первую страницу, необходимо указать &#x60;chunk&#x3D;0&#x60; и т. д.  {% endnote %} (optional)
     *
     * @return \OpenAPIServer\Model\GetAllOffersResponse|null
     * @deprecated
     */
    public function getAllOffers(int $campaignId, ?int $feedId, ?int $chunk): \OpenAPIServer\Model\GetAllOffersResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getAllOffers (stream)
     *
     * Path: `/campaigns/{campaignId}/offers/all`
     *
     * Все предложения магазина
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?int $feedId Идентификатор прайс-листа. (optional)
     * @param ?int $chunk Номер сегмента с результатами.  Значение по умолчанию: &#x60;0&#x60;.  {% note info %}  Номера сегментов запрашиваются последовательно, пока не будет получен сегмент с пустым ответом. Пустой ответ означает, что все предложения магазина получены.  {% endnote %}  {% note alert %}  Нумерация начинается с 0. Чтобы запросить первую страницу, необходимо указать &#x60;chunk&#x3D;0&#x60; и т. д.  {% endnote %} (optional)
     *
     * @deprecated
     */
    public function getAllOffersStream(int $campaignId, ?int $feedId, ?int $chunk): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getBidsInfoForBusiness
     *
     * Path: `/businesses/{businessId}/bids/info`
     *
     * Информация об установленных ставках
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\OpenAPIServer\Model\GetBidsInfoRequest $getBidsInfoRequest description (optional)
     *
     * @return \OpenAPIServer\Model\GetBidsInfoResponse|null
     */
    public function getBidsInfoForBusiness(int $businessId, ?string $pageToken, ?int $limit, ?\OpenAPIServer\Model\GetBidsInfoRequest $getBidsInfoRequest): \OpenAPIServer\Model\GetBidsInfoResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getBidsInfoForBusiness (stream)
     *
     * Path: `/businesses/{businessId}/bids/info`
     *
     * Информация об установленных ставках
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\OpenAPIServer\Model\GetBidsInfoRequest $getBidsInfoRequest description (optional)
     *
     */
    public function getBidsInfoForBusinessStream(int $businessId, ?string $pageToken, ?int $limit, ?\OpenAPIServer\Model\GetBidsInfoRequest $getBidsInfoRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getBidsRecommendations
     *
     * Path: `/businesses/{businessId}/bids/recommendations`
     *
     * Рекомендованные ставки для заданных товаров
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetBidsRecommendationsRequest $getBidsRecommendationsRequest description. (required)
     *
     * @return \OpenAPIServer\Model\GetBidsRecommendationsResponse|null
     */
    public function getBidsRecommendations(int $businessId, \OpenAPIServer\Model\GetBidsRecommendationsRequest $getBidsRecommendationsRequest): \OpenAPIServer\Model\GetBidsRecommendationsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getBidsRecommendations (stream)
     *
     * Path: `/businesses/{businessId}/bids/recommendations`
     *
     * Рекомендованные ставки для заданных товаров
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetBidsRecommendationsRequest $getBidsRecommendationsRequest description. (required)
     *
     */
    public function getBidsRecommendationsStream(int $businessId, \OpenAPIServer\Model\GetBidsRecommendationsRequest $getBidsRecommendationsRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getBusinessQuarantineOffers
     *
     * Path: `/businesses/{businessId}/price-quarantine`
     *
     * Список товаров, находящихся в карантине по цене в кабинете
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetQuarantineOffersRequest $getQuarantineOffersRequest  (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     * @return \OpenAPIServer\Model\GetQuarantineOffersResponse|null
     */
    public function getBusinessQuarantineOffers(int $businessId, \OpenAPIServer\Model\GetQuarantineOffersRequest $getQuarantineOffersRequest, ?string $pageToken, ?int $limit): \OpenAPIServer\Model\GetQuarantineOffersResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getBusinessQuarantineOffers (stream)
     *
     * Path: `/businesses/{businessId}/price-quarantine`
     *
     * Список товаров, находящихся в карантине по цене в кабинете
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetQuarantineOffersRequest $getQuarantineOffersRequest  (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     */
    public function getBusinessQuarantineOffersStream(int $businessId, \OpenAPIServer\Model\GetQuarantineOffersRequest $getQuarantineOffersRequest, ?string $pageToken, ?int $limit): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getBusinessSettings
     *
     * Path: `/businesses/{businessId}/settings`
     *
     * Настройки кабинета
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return \OpenAPIServer\Model\GetBusinessSettingsResponse|null
     */
    public function getBusinessSettings(int $businessId): \OpenAPIServer\Model\GetBusinessSettingsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getBusinessSettings (stream)
     *
     * Path: `/businesses/{businessId}/settings`
     *
     * Настройки кабинета
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     */
    public function getBusinessSettingsStream(int $businessId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getCampaign
     *
     * Path: `/campaigns/{campaignId}`
     *
     * Информация о магазине
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return \OpenAPIServer\Model\GetCampaignResponse|null
     */
    public function getCampaign(int $campaignId): \OpenAPIServer\Model\GetCampaignResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getCampaign (stream)
     *
     * Path: `/campaigns/{campaignId}`
     *
     * Информация о магазине
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     */
    public function getCampaignStream(int $campaignId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getCampaignLogins
     *
     * Path: `/campaigns/{campaignId}/logins`
     *
     * Логины, связанные с магазином
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return \OpenAPIServer\Model\GetCampaignLoginsResponse|null
     */
    public function getCampaignLogins(int $campaignId): \OpenAPIServer\Model\GetCampaignLoginsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getCampaignLogins (stream)
     *
     * Path: `/campaigns/{campaignId}/logins`
     *
     * Логины, связанные с магазином
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     */
    public function getCampaignLoginsStream(int $campaignId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getCampaignOffers
     *
     * Path: `/campaigns/{campaignId}/offers`
     *
     * Информация о товарах, которые размещены в заданном магазине
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetCampaignOffersRequest $getCampaignOffersRequest  (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     * @return \OpenAPIServer\Model\GetCampaignOffersResponse|null
     */
    public function getCampaignOffers(int $campaignId, \OpenAPIServer\Model\GetCampaignOffersRequest $getCampaignOffersRequest, ?string $pageToken, ?int $limit): \OpenAPIServer\Model\GetCampaignOffersResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getCampaignOffers (stream)
     *
     * Path: `/campaigns/{campaignId}/offers`
     *
     * Информация о товарах, которые размещены в заданном магазине
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetCampaignOffersRequest $getCampaignOffersRequest  (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     */
    public function getCampaignOffersStream(int $campaignId, \OpenAPIServer\Model\GetCampaignOffersRequest $getCampaignOffersRequest, ?string $pageToken, ?int $limit): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getCampaignQuarantineOffers
     *
     * Path: `/campaigns/{campaignId}/price-quarantine`
     *
     * Список товаров, находящихся в карантине по цене в магазине
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetQuarantineOffersRequest $getQuarantineOffersRequest  (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     * @return \OpenAPIServer\Model\GetQuarantineOffersResponse|null
     */
    public function getCampaignQuarantineOffers(int $campaignId, \OpenAPIServer\Model\GetQuarantineOffersRequest $getQuarantineOffersRequest, ?string $pageToken, ?int $limit): \OpenAPIServer\Model\GetQuarantineOffersResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getCampaignQuarantineOffers (stream)
     *
     * Path: `/campaigns/{campaignId}/price-quarantine`
     *
     * Список товаров, находящихся в карантине по цене в магазине
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetQuarantineOffersRequest $getQuarantineOffersRequest  (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     */
    public function getCampaignQuarantineOffersStream(int $campaignId, \OpenAPIServer\Model\GetQuarantineOffersRequest $getQuarantineOffersRequest, ?string $pageToken, ?int $limit): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getCampaignRegion
     *
     * Path: `/campaigns/{campaignId}/region`
     *
     * Регион магазина
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return \OpenAPIServer\Model\GetCampaignRegionResponse|null
     * @deprecated
     */
    public function getCampaignRegion(int $campaignId): \OpenAPIServer\Model\GetCampaignRegionResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getCampaignRegion (stream)
     *
     * Path: `/campaigns/{campaignId}/region`
     *
     * Регион магазина
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @deprecated
     */
    public function getCampaignRegionStream(int $campaignId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getCampaignSettings
     *
     * Path: `/campaigns/{campaignId}/settings`
     *
     * Настройки магазина
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return \OpenAPIServer\Model\GetCampaignSettingsResponse|null
     */
    public function getCampaignSettings(int $campaignId): \OpenAPIServer\Model\GetCampaignSettingsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getCampaignSettings (stream)
     *
     * Path: `/campaigns/{campaignId}/settings`
     *
     * Настройки магазина
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     */
    public function getCampaignSettingsStream(int $campaignId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getCampaigns
     *
     * Path: `/campaigns`
     *
     * Список магазинов пользователя
     *
     * @param ?int $page Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром &#x60;page_size&#x60;.  &#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional, default to 1)
     * @param ?int $pageSize Размер страницы.  Используется вместе с параметром &#x60;page_number&#x60;.  &#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional)
     *
     * @return \OpenAPIServer\Model\GetCampaignsResponse|null
     */
    public function getCampaigns(?int $page, ?int $pageSize): \OpenAPIServer\Model\GetCampaignsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getCampaigns (stream)
     *
     * Path: `/campaigns`
     *
     * Список магазинов пользователя
     *
     * @param ?int $page Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром &#x60;page_size&#x60;.  &#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional, default to 1)
     * @param ?int $pageSize Размер страницы.  Используется вместе с параметром &#x60;page_number&#x60;.  &#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional)
     *
     */
    public function getCampaignsStream(?int $page, ?int $pageSize): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getCampaignsByLogin
     *
     * Path: `/campaigns/by_login/{login}`
     *
     * Магазины, доступные логину
     *
     * @param string $login Логин пользователя. (required)
     * @param ?int $page Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром &#x60;page_size&#x60;.  &#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional, default to 1)
     * @param ?int $pageSize Размер страницы.  Используется вместе с параметром &#x60;page_number&#x60;.  &#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional)
     *
     * @return \OpenAPIServer\Model\GetCampaignsResponse|null
     */
    public function getCampaignsByLogin(string $login, ?int $page, ?int $pageSize): \OpenAPIServer\Model\GetCampaignsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getCampaignsByLogin (stream)
     *
     * Path: `/campaigns/by_login/{login}`
     *
     * Магазины, доступные логину
     *
     * @param string $login Логин пользователя. (required)
     * @param ?int $page Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром &#x60;page_size&#x60;.  &#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional, default to 1)
     * @param ?int $pageSize Размер страницы.  Используется вместе с параметром &#x60;page_number&#x60;.  &#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional)
     *
     */
    public function getCampaignsByLoginStream(string $login, ?int $page, ?int $pageSize): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getCategoriesMaxSaleQuantum
     *
     * Path: `/categories/max-sale-quantum`
     *
     * Лимит на установку кванта продажи и минимального количества товаров в заказе
     *
     * @param \OpenAPIServer\Model\GetCategoriesMaxSaleQuantumRequest $getCategoriesMaxSaleQuantumRequest  (required)
     *
     * @return \OpenAPIServer\Model\GetCategoriesMaxSaleQuantumResponse|null
     */
    public function getCategoriesMaxSaleQuantum(\OpenAPIServer\Model\GetCategoriesMaxSaleQuantumRequest $getCategoriesMaxSaleQuantumRequest): \OpenAPIServer\Model\GetCategoriesMaxSaleQuantumResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getCategoriesMaxSaleQuantum (stream)
     *
     * Path: `/categories/max-sale-quantum`
     *
     * Лимит на установку кванта продажи и минимального количества товаров в заказе
     *
     * @param \OpenAPIServer\Model\GetCategoriesMaxSaleQuantumRequest $getCategoriesMaxSaleQuantumRequest  (required)
     *
     */
    public function getCategoriesMaxSaleQuantumStream(\OpenAPIServer\Model\GetCategoriesMaxSaleQuantumRequest $getCategoriesMaxSaleQuantumRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getCategoriesTree
     *
     * Path: `/categories/tree`
     *
     * Дерево категорий
     *
     * @param ?\OpenAPIServer\Model\GetCategoriesRequest $getCategoriesRequest  (optional)
     *
     * @return \OpenAPIServer\Model\GetCategoriesResponse|null
     */
    public function getCategoriesTree(?\OpenAPIServer\Model\GetCategoriesRequest $getCategoriesRequest): \OpenAPIServer\Model\GetCategoriesResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getCategoriesTree (stream)
     *
     * Path: `/categories/tree`
     *
     * Дерево категорий
     *
     * @param ?\OpenAPIServer\Model\GetCategoriesRequest $getCategoriesRequest  (optional)
     *
     */
    public function getCategoriesTreeStream(?\OpenAPIServer\Model\GetCategoriesRequest $getCategoriesRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getCategoryContentParameters
     *
     * Path: `/category/{categoryId}/parameters`
     *
     * Списки характеристик товаров по категориям
     *
     * @param int $categoryId Идентификатор категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится интересующий вас товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md). (required)
     *
     * @return \OpenAPIServer\Model\GetCategoryContentParametersResponse|null
     */
    public function getCategoryContentParameters(int $categoryId): \OpenAPIServer\Model\GetCategoryContentParametersResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getCategoryContentParameters (stream)
     *
     * Path: `/category/{categoryId}/parameters`
     *
     * Списки характеристик товаров по категориям
     *
     * @param int $categoryId Идентификатор категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится интересующий вас товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md). (required)
     *
     */
    public function getCategoryContentParametersStream(int $categoryId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getChatHistory
     *
     * Path: `/businesses/{businessId}/chats/history`
     *
     * Получение истории сообщений в чате
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $chatId Идентификатор чата. (required)
     * @param \OpenAPIServer\Model\GetChatHistoryRequest $getChatHistoryRequest description (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     * @return \OpenAPIServer\Model\GetChatHistoryResponse|null
     */
    public function getChatHistory(int $businessId, int $chatId, \OpenAPIServer\Model\GetChatHistoryRequest $getChatHistoryRequest, ?string $pageToken, ?int $limit): \OpenAPIServer\Model\GetChatHistoryResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getChatHistory (stream)
     *
     * Path: `/businesses/{businessId}/chats/history`
     *
     * Получение истории сообщений в чате
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $chatId Идентификатор чата. (required)
     * @param \OpenAPIServer\Model\GetChatHistoryRequest $getChatHistoryRequest description (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     */
    public function getChatHistoryStream(int $businessId, int $chatId, \OpenAPIServer\Model\GetChatHistoryRequest $getChatHistoryRequest, ?string $pageToken, ?int $limit): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getChats
     *
     * Path: `/businesses/{businessId}/chats`
     *
     * Получение доступных чатов
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetChatsRequest $getChatsRequest description (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     * @return \OpenAPIServer\Model\GetChatsResponse|null
     */
    public function getChats(int $businessId, \OpenAPIServer\Model\GetChatsRequest $getChatsRequest, ?string $pageToken, ?int $limit): \OpenAPIServer\Model\GetChatsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getChats (stream)
     *
     * Path: `/businesses/{businessId}/chats`
     *
     * Получение доступных чатов
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetChatsRequest $getChatsRequest description (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     */
    public function getChatsStream(int $businessId, \OpenAPIServer\Model\GetChatsRequest $getChatsRequest, ?string $pageToken, ?int $limit): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getDeliveryServices
     *
     * Path: `/delivery/services`
     *
     * Справочник служб доставки
     *
     *
     * @return \OpenAPIServer\Model\GetDeliveryServicesResponse|null
     */
    public function getDeliveryServices(): \OpenAPIServer\Model\GetDeliveryServicesResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getDeliveryServices (stream)
     *
     * Path: `/delivery/services`
     *
     * Справочник служб доставки
     *
     *
     */
    public function getDeliveryServicesStream(): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getFeed
     *
     * Path: `/campaigns/{campaignId}/feeds/{feedId}`
     *
     * Информация о прайс-листе
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     *
     * @return \OpenAPIServer\Model\GetFeedResponse|null
     * @deprecated
     */
    public function getFeed(int $campaignId, int $feedId): \OpenAPIServer\Model\GetFeedResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getFeed (stream)
     *
     * Path: `/campaigns/{campaignId}/feeds/{feedId}`
     *
     * Информация о прайс-листе
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     *
     * @deprecated
     */
    public function getFeedStream(int $campaignId, int $feedId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getFeedIndexLogs
     *
     * Path: `/campaigns/{campaignId}/feeds/{feedId}/index-logs`
     *
     * Отчет по индексации прайс-листа
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\DateTime $publishedTimeFrom Начальная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-21T00:42:42+03:00&#x60;.  Значение по умолчанию: последние восемь дней со времени отправки запроса. (optional)
     * @param ?\DateTime $publishedTimeTo Конечная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-31T00:42:42+03:00&#x60;.  Значение по умолчанию: дата и время отправки запроса.  {% note info %}  Если во время переключения между страницами выходных данных на Яндекс Маркете появятся новые результаты индексации прайс-листа, вы не получите часть данных. Чтобы этого не произошло, зафиксируйте выходные данные с помощью входного параметра &#x60;published_time_to&#x60;. Значение параметра не должно быть датой из будущего.  {% endnote %} (optional)
     * @param  $status Статус индексации и проверки прайс-листа на соответствие техническим требованиям.  Возможные значения: * &#x60;ERROR&#x60; — произошли ошибки. * &#x60;OK&#x60; — обработан без ошибок. * &#x60;WARNING&#x60; — наблюдались некритичные проблемы. (optional)
     *
     * @return \OpenAPIServer\Model\GetFeedIndexLogsResponse|null
     * @deprecated
     */
    public function getFeedIndexLogs(int $campaignId, int $feedId, ?int $limit, ?\DateTime $publishedTimeFrom, ?\DateTime $publishedTimeTo,  $status): \OpenAPIServer\Model\GetFeedIndexLogsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getFeedIndexLogs (stream)
     *
     * Path: `/campaigns/{campaignId}/feeds/{feedId}/index-logs`
     *
     * Отчет по индексации прайс-листа
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\DateTime $publishedTimeFrom Начальная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-21T00:42:42+03:00&#x60;.  Значение по умолчанию: последние восемь дней со времени отправки запроса. (optional)
     * @param ?\DateTime $publishedTimeTo Конечная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-31T00:42:42+03:00&#x60;.  Значение по умолчанию: дата и время отправки запроса.  {% note info %}  Если во время переключения между страницами выходных данных на Яндекс Маркете появятся новые результаты индексации прайс-листа, вы не получите часть данных. Чтобы этого не произошло, зафиксируйте выходные данные с помощью входного параметра &#x60;published_time_to&#x60;. Значение параметра не должно быть датой из будущего.  {% endnote %} (optional)
     * @param  $status Статус индексации и проверки прайс-листа на соответствие техническим требованиям.  Возможные значения: * &#x60;ERROR&#x60; — произошли ошибки. * &#x60;OK&#x60; — обработан без ошибок. * &#x60;WARNING&#x60; — наблюдались некритичные проблемы. (optional)
     *
     * @deprecated
     */
    public function getFeedIndexLogsStream(int $campaignId, int $feedId, ?int $limit, ?\DateTime $publishedTimeFrom, ?\DateTime $publishedTimeTo,  $status): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getFeedbackAndCommentUpdates
     *
     * Path: `/campaigns/{campaignId}/feedback/updates`
     *
     * Новые и обновленные отзывы о магазине
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\DateTime $fromDate Начальная дата обновления отзывов.  Если параметр указан, возвращаются отзывы, которые были написаны или обновлены с этой даты.  Формат даты: &#x60;ГГГГ-ММ-ДД&#x60;. (optional)
     *
     * @return \OpenAPIServer\Model\GetFeedbackListResponse|null
     * @deprecated
     */
    public function getFeedbackAndCommentUpdates(int $campaignId, ?string $pageToken, ?int $limit, ?\DateTime $fromDate): \OpenAPIServer\Model\GetFeedbackListResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getFeedbackAndCommentUpdates (stream)
     *
     * Path: `/campaigns/{campaignId}/feedback/updates`
     *
     * Новые и обновленные отзывы о магазине
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\DateTime $fromDate Начальная дата обновления отзывов.  Если параметр указан, возвращаются отзывы, которые были написаны или обновлены с этой даты.  Формат даты: &#x60;ГГГГ-ММ-ДД&#x60;. (optional)
     *
     * @deprecated
     */
    public function getFeedbackAndCommentUpdatesStream(int $campaignId, ?string $pageToken, ?int $limit, ?\DateTime $fromDate): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getFeeds
     *
     * Path: `/campaigns/{campaignId}/feeds`
     *
     * Список прайс-листов магазина
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return \OpenAPIServer\Model\GetFeedsResponse|null
     * @deprecated
     */
    public function getFeeds(int $campaignId): \OpenAPIServer\Model\GetFeedsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getFeeds (stream)
     *
     * Path: `/campaigns/{campaignId}/feeds`
     *
     * Список прайс-листов магазина
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @deprecated
     */
    public function getFeedsStream(int $campaignId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getGoodsFeedbackComments
     *
     * Path: `/businesses/{businessId}/goods-feedback/comments`
     *
     * Получение комментариев к отзыву
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetGoodsFeedbackCommentsRequest $getGoodsFeedbackCommentsRequest  (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     * @return \OpenAPIServer\Model\GetGoodsFeedbackCommentsResponse|null
     */
    public function getGoodsFeedbackComments(int $businessId, \OpenAPIServer\Model\GetGoodsFeedbackCommentsRequest $getGoodsFeedbackCommentsRequest, ?string $pageToken, ?int $limit): \OpenAPIServer\Model\GetGoodsFeedbackCommentsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getGoodsFeedbackComments (stream)
     *
     * Path: `/businesses/{businessId}/goods-feedback/comments`
     *
     * Получение комментариев к отзыву
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetGoodsFeedbackCommentsRequest $getGoodsFeedbackCommentsRequest  (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     */
    public function getGoodsFeedbackCommentsStream(int $businessId, \OpenAPIServer\Model\GetGoodsFeedbackCommentsRequest $getGoodsFeedbackCommentsRequest, ?string $pageToken, ?int $limit): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getGoodsFeedbacks
     *
     * Path: `/businesses/{businessId}/goods-feedback`
     *
     * Получение отзывов о товарах продавца
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\OpenAPIServer\Model\GetGoodsFeedbackRequest $getGoodsFeedbackRequest  (optional)
     *
     * @return \OpenAPIServer\Model\GetGoodsFeedbackResponse|null
     */
    public function getGoodsFeedbacks(int $businessId, ?string $pageToken, ?int $limit, ?\OpenAPIServer\Model\GetGoodsFeedbackRequest $getGoodsFeedbackRequest): \OpenAPIServer\Model\GetGoodsFeedbackResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getGoodsFeedbacks (stream)
     *
     * Path: `/businesses/{businessId}/goods-feedback`
     *
     * Получение отзывов о товарах продавца
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\OpenAPIServer\Model\GetGoodsFeedbackRequest $getGoodsFeedbackRequest  (optional)
     *
     */
    public function getGoodsFeedbacksStream(int $businessId, ?string $pageToken, ?int $limit, ?\OpenAPIServer\Model\GetGoodsFeedbackRequest $getGoodsFeedbackRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getGoodsStats
     *
     * Path: `/campaigns/{campaignId}/stats/skus`
     *
     * Отчет по товарам
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetGoodsStatsRequest $getGoodsStatsRequest  (required)
     *
     * @return \OpenAPIServer\Model\GetGoodsStatsResponse|null
     */
    public function getGoodsStats(int $campaignId, \OpenAPIServer\Model\GetGoodsStatsRequest $getGoodsStatsRequest): \OpenAPIServer\Model\GetGoodsStatsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getGoodsStats (stream)
     *
     * Path: `/campaigns/{campaignId}/stats/skus`
     *
     * Отчет по товарам
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetGoodsStatsRequest $getGoodsStatsRequest  (required)
     *
     */
    public function getGoodsStatsStream(int $campaignId, \OpenAPIServer\Model\GetGoodsStatsRequest $getGoodsStatsRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getHiddenOffers
     *
     * Path: `/campaigns/{campaignId}/hidden-offers`
     *
     * Информация о скрытых вами товарах
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?array $offerId Идентификатор скрытого предложения. (optional)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?int $offset Позиция в списке, начиная с которой возвращаются результаты ответа.  Используется вместе с параметром &#x60;limit&#x60;.  Если задан &#x60;offset&#x60;, параметры &#x60;page_number&#x60; и &#x60;page_size&#x60; игнорируются.  &#x60;offset&#x60; игнорируется, если задан &#x60;page_token&#x60;. (optional)
     * @param ?int $page Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром &#x60;page_size&#x60;.  &#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional, default to 1)
     * @param ?int $pageSize Размер страницы.  Используется вместе с параметром &#x60;page_number&#x60;.  &#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional)
     *
     * @return \OpenAPIServer\Model\GetHiddenOffersResponse|null
     */
    public function getHiddenOffers(int $campaignId, ?array $offerId, ?string $pageToken, ?int $limit, ?int $offset, ?int $page, ?int $pageSize): \OpenAPIServer\Model\GetHiddenOffersResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getHiddenOffers (stream)
     *
     * Path: `/campaigns/{campaignId}/hidden-offers`
     *
     * Информация о скрытых вами товарах
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?array $offerId Идентификатор скрытого предложения. (optional)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?int $offset Позиция в списке, начиная с которой возвращаются результаты ответа.  Используется вместе с параметром &#x60;limit&#x60;.  Если задан &#x60;offset&#x60;, параметры &#x60;page_number&#x60; и &#x60;page_size&#x60; игнорируются.  &#x60;offset&#x60; игнорируется, если задан &#x60;page_token&#x60;. (optional)
     * @param ?int $page Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром &#x60;page_size&#x60;.  &#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional, default to 1)
     * @param ?int $pageSize Размер страницы.  Используется вместе с параметром &#x60;page_number&#x60;.  &#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional)
     *
     */
    public function getHiddenOffersStream(int $campaignId, ?array $offerId, ?string $pageToken, ?int $limit, ?int $offset, ?int $page, ?int $pageSize): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getOfferCardsContentStatus
     *
     * Path: `/businesses/{businessId}/offer-cards`
     *
     * Получение информации о заполненности карточек магазина
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\OpenAPIServer\Model\GetOfferCardsContentStatusRequest $getOfferCardsContentStatusRequest  (optional)
     *
     * @return \OpenAPIServer\Model\GetOfferCardsContentStatusResponse|null
     */
    public function getOfferCardsContentStatus(int $businessId, ?string $pageToken, ?int $limit, ?\OpenAPIServer\Model\GetOfferCardsContentStatusRequest $getOfferCardsContentStatusRequest): \OpenAPIServer\Model\GetOfferCardsContentStatusResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getOfferCardsContentStatus (stream)
     *
     * Path: `/businesses/{businessId}/offer-cards`
     *
     * Получение информации о заполненности карточек магазина
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\OpenAPIServer\Model\GetOfferCardsContentStatusRequest $getOfferCardsContentStatusRequest  (optional)
     *
     */
    public function getOfferCardsContentStatusStream(int $businessId, ?string $pageToken, ?int $limit, ?\OpenAPIServer\Model\GetOfferCardsContentStatusRequest $getOfferCardsContentStatusRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getOfferMappingEntries
     *
     * Path: `/campaigns/{campaignId}/offer-mapping-entries`
     *
     * Список товаров в каталоге
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?array $offerId Идентификатор товара в каталоге. (optional)
     * @param ?array $shopSku Ваш SKU товара.  Параметр может быть указан несколько раз, например:  &#x60;&#x60;&#x60; ...shop_sku&#x3D;123&amp;shop_sku&#x3D;129&amp;shop_sku&#x3D;141... &#x60;&#x60;&#x60;  В запросе можно указать либо параметр &#x60;shopSku&#x60;, либо любые параметры для фильтрации товаров. Совместное использование параметра &#x60;shopSku&#x60; и параметров для фильтрации приведет к ошибке. (optional)
     * @param  $mappingKind Тип маппинга. (optional)
     * @param ?array $status Фильтрация по статусу публикации товара:  * &#x60;READY&#x60; — товар прошел модерацию. * &#x60;IN_WORK&#x60; — товар проходит модерацию. * &#x60;NEED_CONTENT&#x60; — для товара без SKU на Маркете marketSku нужно найти карточку самостоятельно или создать ее. * &#x60;NEED_INFO&#x60; — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. * &#x60;REJECTED&#x60; — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары. * &#x60;SUSPENDED&#x60; — товар не прошел модерацию, так как Маркет пока не размещает подобные товары. * &#x60;OTHER&#x60; — товар не прошел модерацию по другой причине.  Можно указать несколько статусов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  &#x60;&#x60;&#x60; ...status&#x3D;READY,IN_WORK... ...status&#x3D;READY&amp;status&#x3D;IN_WORK... &#x60;&#x60;&#x60;  В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке. (optional)
     * @param ?array $availability Фильтрация по планам поставок товара:  * &#x60;ACTIVE&#x60; — поставки будут. * &#x60;INACTIVE&#x60; — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять. * &#x60;DELISTED&#x60; — архив: товар закончился на складе, и его поставок больше не будет.  Можно указать несколько значений в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  &#x60;&#x60;&#x60; ...availability&#x3D;INACTIVE,DELISTED... ...availability&#x3D;INACTIVE&amp;availability&#x3D;DELISTED... &#x60;&#x60;&#x60;  В запросе можно указать либо параметр &#x60;shopSku&#x60;, либо любые параметры для фильтрации товаров. Совместное использование параметра &#x60;shopSku&#x60; и параметров для фильтрации приведет к ошибке. (optional)
     * @param ?array $categoryId Фильтрация по идентификатору категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).  Можно указать несколько идентификаторов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  &#x60;&#x60;&#x60; ...category_id&#x3D;14727164,14382343... ...category_id&#x3D;14727164&amp;category_id&#x3D;14382343... &#x60;&#x60;&#x60;  В запросе можно указать либо параметр &#x60;shopSku&#x60;, либо любые параметры для фильтрации товаров. Совместное использование параметра &#x60;shopSku&#x60; и параметров для фильтрации приведет к ошибке. (optional)
     * @param ?array $vendor Фильтрация по бренду товара.  Можно указать несколько брендов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  &#x60;&#x60;&#x60; ...vendor&#x3D;Aqua%20Minerale,Borjomi... ...vendor&#x3D;Aqua%20Minerale&amp;vendor&#x3D;Borjomi... &#x60;&#x60;&#x60;  Чтобы товар попал в результаты фильтрации, его бренд должен точно совпадать с одним из указанных в запросе. Например, если указан бренд Schwarzkopf, то в результатах не будет товаров Schwarzkopf Professional.  Если в названии бренда есть символы, которые не входят в таблицу ASCII (в том числе кириллические символы), используйте для них URL-кодирование. Например, пробел — %20, апостроф «&#39;» — %27 и т. д. Подробнее см. в разделе [Кодирование URL русскоязычной Википедии](https://ru.wikipedia.org/wiki/URL#Кодирование_URL).  В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке. (optional)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     * @return \OpenAPIServer\Model\GetOfferMappingEntriesResponse|null
     * @deprecated
     */
    public function getOfferMappingEntries(int $campaignId, ?array $offerId, ?array $shopSku,  $mappingKind, ?array $status, ?array $availability, ?array $categoryId, ?array $vendor, ?string $pageToken, ?int $limit): \OpenAPIServer\Model\GetOfferMappingEntriesResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getOfferMappingEntries (stream)
     *
     * Path: `/campaigns/{campaignId}/offer-mapping-entries`
     *
     * Список товаров в каталоге
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?array $offerId Идентификатор товара в каталоге. (optional)
     * @param ?array $shopSku Ваш SKU товара.  Параметр может быть указан несколько раз, например:  &#x60;&#x60;&#x60; ...shop_sku&#x3D;123&amp;shop_sku&#x3D;129&amp;shop_sku&#x3D;141... &#x60;&#x60;&#x60;  В запросе можно указать либо параметр &#x60;shopSku&#x60;, либо любые параметры для фильтрации товаров. Совместное использование параметра &#x60;shopSku&#x60; и параметров для фильтрации приведет к ошибке. (optional)
     * @param  $mappingKind Тип маппинга. (optional)
     * @param ?array $status Фильтрация по статусу публикации товара:  * &#x60;READY&#x60; — товар прошел модерацию. * &#x60;IN_WORK&#x60; — товар проходит модерацию. * &#x60;NEED_CONTENT&#x60; — для товара без SKU на Маркете marketSku нужно найти карточку самостоятельно или создать ее. * &#x60;NEED_INFO&#x60; — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. * &#x60;REJECTED&#x60; — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары. * &#x60;SUSPENDED&#x60; — товар не прошел модерацию, так как Маркет пока не размещает подобные товары. * &#x60;OTHER&#x60; — товар не прошел модерацию по другой причине.  Можно указать несколько статусов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  &#x60;&#x60;&#x60; ...status&#x3D;READY,IN_WORK... ...status&#x3D;READY&amp;status&#x3D;IN_WORK... &#x60;&#x60;&#x60;  В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке. (optional)
     * @param ?array $availability Фильтрация по планам поставок товара:  * &#x60;ACTIVE&#x60; — поставки будут. * &#x60;INACTIVE&#x60; — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять. * &#x60;DELISTED&#x60; — архив: товар закончился на складе, и его поставок больше не будет.  Можно указать несколько значений в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  &#x60;&#x60;&#x60; ...availability&#x3D;INACTIVE,DELISTED... ...availability&#x3D;INACTIVE&amp;availability&#x3D;DELISTED... &#x60;&#x60;&#x60;  В запросе можно указать либо параметр &#x60;shopSku&#x60;, либо любые параметры для фильтрации товаров. Совместное использование параметра &#x60;shopSku&#x60; и параметров для фильтрации приведет к ошибке. (optional)
     * @param ?array $categoryId Фильтрация по идентификатору категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).  Можно указать несколько идентификаторов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  &#x60;&#x60;&#x60; ...category_id&#x3D;14727164,14382343... ...category_id&#x3D;14727164&amp;category_id&#x3D;14382343... &#x60;&#x60;&#x60;  В запросе можно указать либо параметр &#x60;shopSku&#x60;, либо любые параметры для фильтрации товаров. Совместное использование параметра &#x60;shopSku&#x60; и параметров для фильтрации приведет к ошибке. (optional)
     * @param ?array $vendor Фильтрация по бренду товара.  Можно указать несколько брендов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  &#x60;&#x60;&#x60; ...vendor&#x3D;Aqua%20Minerale,Borjomi... ...vendor&#x3D;Aqua%20Minerale&amp;vendor&#x3D;Borjomi... &#x60;&#x60;&#x60;  Чтобы товар попал в результаты фильтрации, его бренд должен точно совпадать с одним из указанных в запросе. Например, если указан бренд Schwarzkopf, то в результатах не будет товаров Schwarzkopf Professional.  Если в названии бренда есть символы, которые не входят в таблицу ASCII (в том числе кириллические символы), используйте для них URL-кодирование. Например, пробел — %20, апостроф «&#39;» — %27 и т. д. Подробнее см. в разделе [Кодирование URL русскоязычной Википедии](https://ru.wikipedia.org/wiki/URL#Кодирование_URL).  В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке. (optional)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     * @deprecated
     */
    public function getOfferMappingEntriesStream(int $campaignId, ?array $offerId, ?array $shopSku,  $mappingKind, ?array $status, ?array $availability, ?array $categoryId, ?array $vendor, ?string $pageToken, ?int $limit): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getOfferMappings
     *
     * Path: `/businesses/{businessId}/offer-mappings`
     *
     * Информация о товарах в каталоге
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\OpenAPIServer\Model\GetOfferMappingsRequest $getOfferMappingsRequest  (optional)
     *
     * @return \OpenAPIServer\Model\GetOfferMappingsResponse|null
     */
    public function getOfferMappings(int $businessId, ?string $pageToken, ?int $limit, ?\OpenAPIServer\Model\GetOfferMappingsRequest $getOfferMappingsRequest): \OpenAPIServer\Model\GetOfferMappingsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getOfferMappings (stream)
     *
     * Path: `/businesses/{businessId}/offer-mappings`
     *
     * Информация о товарах в каталоге
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\OpenAPIServer\Model\GetOfferMappingsRequest $getOfferMappingsRequest  (optional)
     *
     */
    public function getOfferMappingsStream(int $businessId, ?string $pageToken, ?int $limit, ?\OpenAPIServer\Model\GetOfferMappingsRequest $getOfferMappingsRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getOfferRecommendations
     *
     * Path: `/businesses/{businessId}/offers/recommendations`
     *
     * Рекомендации Маркета, касающиеся цен
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetOfferRecommendationsRequest $getOfferRecommendationsRequest  (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     * @return \OpenAPIServer\Model\GetOfferRecommendationsResponse|null
     */
    public function getOfferRecommendations(int $businessId, \OpenAPIServer\Model\GetOfferRecommendationsRequest $getOfferRecommendationsRequest, ?string $pageToken, ?int $limit): \OpenAPIServer\Model\GetOfferRecommendationsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getOfferRecommendations (stream)
     *
     * Path: `/businesses/{businessId}/offers/recommendations`
     *
     * Рекомендации Маркета, касающиеся цен
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetOfferRecommendationsRequest $getOfferRecommendationsRequest  (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     */
    public function getOfferRecommendationsStream(int $businessId, \OpenAPIServer\Model\GetOfferRecommendationsRequest $getOfferRecommendationsRequest, ?string $pageToken, ?int $limit): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getOffers
     *
     * Path: `/campaigns/{campaignId}/offers`
     *
     * Предложения магазина
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $query Поисковый запрос.  Поддерживается язык запросов.  Значение по умолчанию: все предложения магазина, размещенные на Маркете. (optional)
     * @param ?int $feedId Идентификатор прайс-листа. (optional)
     * @param ?string $shopCategoryId Идентификатор категории предложения, указанный магазином в прайс-листе.  Параметр выводится только для предложений, у которых указана категория в прайс-листе.  Параметр доступен начиная с версии 2.0 партнерского API. (optional)
     * @param  $currency Валюта, в которой указана цена предложения.  Возможные значения:  * &#x60;BYN&#x60; — белорусский рубль.  * &#x60;KZT&#x60; — казахстанский тенге.  * &#x60;RUR&#x60; — российский рубль.  * &#x60;UAH&#x60; — украинская гривна. (optional)
     * @param ?bool $matched Фильтр по признаку соотнесения предложения и карточки модели.  Возможные значения:  * &#x60;0 / FALSE / NO&#x60; — поиск выполняется среди предложений, не соотнесенных ни с какой карточкой модели.  * &#x60;1 / TRUE / YES&#x60; — поиск выполняется среди предложений, соотнесенных с карточками моделей). (optional)
     * @param ?int $page Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром &#x60;page_size&#x60;.  &#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional, default to 1)
     * @param ?int $pageSize Размер страницы.  Используется вместе с параметром &#x60;page_number&#x60;.  &#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional)
     *
     * @return \OpenAPIServer\Model\GetOffersResponse|null
     * @deprecated
     */
    public function getOffers(int $campaignId, ?string $query, ?int $feedId, ?string $shopCategoryId,  $currency, ?bool $matched, ?int $page, ?int $pageSize): \OpenAPIServer\Model\GetOffersResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getOffers (stream)
     *
     * Path: `/campaigns/{campaignId}/offers`
     *
     * Предложения магазина
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $query Поисковый запрос.  Поддерживается язык запросов.  Значение по умолчанию: все предложения магазина, размещенные на Маркете. (optional)
     * @param ?int $feedId Идентификатор прайс-листа. (optional)
     * @param ?string $shopCategoryId Идентификатор категории предложения, указанный магазином в прайс-листе.  Параметр выводится только для предложений, у которых указана категория в прайс-листе.  Параметр доступен начиная с версии 2.0 партнерского API. (optional)
     * @param  $currency Валюта, в которой указана цена предложения.  Возможные значения:  * &#x60;BYN&#x60; — белорусский рубль.  * &#x60;KZT&#x60; — казахстанский тенге.  * &#x60;RUR&#x60; — российский рубль.  * &#x60;UAH&#x60; — украинская гривна. (optional)
     * @param ?bool $matched Фильтр по признаку соотнесения предложения и карточки модели.  Возможные значения:  * &#x60;0 / FALSE / NO&#x60; — поиск выполняется среди предложений, не соотнесенных ни с какой карточкой модели.  * &#x60;1 / TRUE / YES&#x60; — поиск выполняется среди предложений, соотнесенных с карточками моделей). (optional)
     * @param ?int $page Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром &#x60;page_size&#x60;.  &#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional, default to 1)
     * @param ?int $pageSize Размер страницы.  Используется вместе с параметром &#x60;page_number&#x60;.  &#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional)
     *
     * @deprecated
     */
    public function getOffersStream(int $campaignId, ?string $query, ?int $feedId, ?string $shopCategoryId,  $currency, ?bool $matched, ?int $page, ?int $pageSize): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getOrder
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}`
     *
     * Информация об одном заказе
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return \OpenAPIServer\Model\GetOrderResponse|null
     */
    public function getOrder(int $campaignId, int $orderId): \OpenAPIServer\Model\GetOrderResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getOrder (stream)
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}`
     *
     * Информация об одном заказе
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     */
    public function getOrderStream(int $campaignId, int $orderId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getOrderBusinessBuyerInfo
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/business-buyer`
     *
     * Информация о покупателе — юридическом лице
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return \OpenAPIServer\Model\GetBusinessBuyerInfoResponse|null
     */
    public function getOrderBusinessBuyerInfo(int $campaignId, int $orderId): \OpenAPIServer\Model\GetBusinessBuyerInfoResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getOrderBusinessBuyerInfo (stream)
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/business-buyer`
     *
     * Информация о покупателе — юридическом лице
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     */
    public function getOrderBusinessBuyerInfoStream(int $campaignId, int $orderId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getOrderBusinessDocumentsInfo
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/documents`
     *
     * Информация о документах
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return \OpenAPIServer\Model\GetBusinessDocumentsInfoResponse|null
     */
    public function getOrderBusinessDocumentsInfo(int $campaignId, int $orderId): \OpenAPIServer\Model\GetBusinessDocumentsInfoResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getOrderBusinessDocumentsInfo (stream)
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/documents`
     *
     * Информация о документах
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     */
    public function getOrderBusinessDocumentsInfoStream(int $campaignId, int $orderId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getOrderLabelsData
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/delivery/labels/data`
     *
     * Данные для самостоятельного изготовления ярлыков
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     * @return \OpenAPIServer\Model\GetOrderLabelsDataResponse|null
     */
    public function getOrderLabelsData(int $campaignId, int $orderId): \OpenAPIServer\Model\GetOrderLabelsDataResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getOrderLabelsData (stream)
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/delivery/labels/data`
     *
     * Данные для самостоятельного изготовления ярлыков
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     *
     */
    public function getOrderLabelsDataStream(int $campaignId, int $orderId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getOrders
     *
     * Path: `/campaigns/{campaignId}/orders`
     *
     * Информация о нескольких заказах
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?array $orderIds Фильтрация заказов по идентификаторам. &lt;br&gt;&lt;br&gt; ⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым. (optional)
     * @param ?array $status Статус заказа:  * &#x60;CANCELLED&#x60; — заказ отменен.  * &#x60;DELIVERED&#x60; — заказ получен покупателем.  * &#x60;DELIVERY&#x60; — заказ передан в службу доставки.  * &#x60;PICKUP&#x60; — заказ доставлен в пункт самовывоза.  * &#x60;PROCESSING&#x60; — заказ находится в обработке.  * &#x60;UNPAID&#x60; — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).  Также могут возвращаться другие значения. Обрабатывать их не требуется. (optional)
     * @param ?array $substatus Этап обработки заказа (если он имеет статус &#x60;PROCESSING&#x60;) или причина отмены заказа (если он имеет статус &#x60;CANCELLED&#x60;).  Возможные значения для заказа в статусе &#x60;PROCESSING&#x60;:  * &#x60;STARTED&#x60; — заказ подтвержден, его можно начать обрабатывать. * &#x60;READY_TO_SHIP&#x60; — заказ собран и готов к отправке. * &#x60;SHIPPED&#x60; — заказ передан службе доставки.  Возможные значения для заказа в статусе &#x60;CANCELLED&#x60;:  * &#x60;DELIVERY_SERVICE_UNDELIVERED&#x60; — служба доставки не смогла доставить заказ.  * &#x60;PROCESSING_EXPIRED&#x60; — значение более не используется.  * &#x60;REPLACING_ORDER&#x60; — покупатель решил заменить товар другим по собственной инициативе.  * &#x60;RESERVATION_EXPIRED&#x60; — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.  * &#x60;RESERVATION_FAILED&#x60; — Маркет не может продолжить дальнейшую обработку заказа.  * &#x60;SHOP_FAILED&#x60; — магазин не может выполнить заказ.  * &#x60;USER_CHANGED_MIND&#x60; — покупатель отменил заказ по личным причинам.  * &#x60;USER_NOT_PAID&#x60; — покупатель не оплатил заказ (для типа оплаты &#x60;PREPAID&#x60;) в течение 30 минут.  * &#x60;USER_REFUSED_DELIVERY&#x60; — покупателя не устроили условия доставки.  * &#x60;USER_REFUSED_PRODUCT&#x60; — покупателю не подошел товар.  * &#x60;USER_REFUSED_QUALITY&#x60; — покупателя не устроило качество товара.  * &#x60;USER_UNREACHABLE&#x60; — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:    * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;   * перерыв между первым и третьим звонком не менее 90 минут;   * соединение не короче 5 секунд.    Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400. * &#x60;USER_WANTS_TO_CHANGE_DELIVERY_DATE&#x60; — покупатель хочет получить заказ в другой день. * &#x60;CANCELLED_COURIER_NOT_FOUND&#x60; — не удалось найти курьера.  Также могут возвращаться другие значения. Обрабатывать их не требуется. (optional)
     * @param ?\DateTime $fromDate Начальная дата для фильтрации заказов по дате оформления.  Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;.  Между начальной и конечной датой (параметр &#x60;toDate&#x60;) должно быть не больше 30 дней.  Значение по умолчанию: 30 дней назад от текущей даты. (optional)
     * @param ?\DateTime $toDate Конечная дата для фильтрации заказов по дате оформления.  Показываются заказы, созданные до 00:00 указанного дня.  Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;.  Между начальной (параметр &#x60;fromDate&#x60;) и конечной датой должно быть не больше 30 дней.  Значение по умолчанию: текущая дата. (optional)
     * @param ?\DateTime $supplierShipmentDateFrom Начальная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр &#x60;shipmentDate&#x60;).  Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;.  Между начальной и конечной датой (параметр &#x60;supplierShipmentDateTo&#x60;) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. (optional)
     * @param ?\DateTime $supplierShipmentDateTo Конечная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр &#x60;shipmentDate&#x60;).  Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;.  Между начальной (параметр &#x60;supplierShipmentDateFrom&#x60;) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. (optional)
     * @param ?\DateTime $updatedAtFrom Начальная дата для фильтрации заказов по дате и времени обновления (параметр &#x60;updatedAt&#x60;).  Формат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-21T00:42:42+03:00&#x60;.  Между начальной и конечной датой (параметр &#x60;updatedAtTo&#x60;) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. (optional)
     * @param ?\DateTime $updatedAtTo Конечная дата для фильтрации заказов по дате и времени обновления (параметр &#x60;updatedAt&#x60;).  Формат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-21T00:42:42+03:00&#x60;.  Между начальной (параметр &#x60;updatedAtFrom&#x60;) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. (optional)
     * @param  $dispatchType Способ отгрузки (optional)
     * @param ?bool $fake Фильтрация заказов по типам:  * &#x60;false&#x60; — настоящий заказ покупателя.  * &#x60;true&#x60; — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. (optional, default to false)
     * @param ?bool $hasCis Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации [в системе «Честный ЗНАК»](https://честныйзнак.рф/):  * &#x60;true&#x60; — да.  * &#x60;false&#x60; — нет.  Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям. (optional, default to false)
     * @param ?bool $onlyWaitingForCancellationApprove **Только для модели DBS**  Фильтрация заказов по наличию запросов покупателей на отмену.  При значение &#x60;true&#x60; возвращаются только заказы, которые находятся в статусе &#x60;DELIVERY&#x60; или &#x60;PICKUP&#x60; и которые пользователи решили отменить.  Чтобы подтвердить или отклонить отмену, отправьте запрос [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation). (optional, default to false)
     * @param ?bool $onlyEstimatedDelivery Фильтрация заказов с долгой доставкой (31-60 дней) по подтвержденной дате доставки:  * &#x60;true&#x60; — возвращаются только заказы с неподтвержденной датой доставки. * &#x60;false&#x60; — фильтрация не применяется. (optional, default to false)
     * @param  $buyerType Фильтрация заказов по типу покупателя. (optional)
     * @param ?int $page Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром &#x60;page_size&#x60;.  &#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional, default to 1)
     * @param ?int $pageSize Размер страницы.  Используется вместе с параметром &#x60;page_number&#x60;.  &#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     * @return \OpenAPIServer\Model\GetOrdersResponse|null
     */
    public function getOrders(int $campaignId, ?array $orderIds, ?array $status, ?array $substatus, ?\DateTime $fromDate, ?\DateTime $toDate, ?\DateTime $supplierShipmentDateFrom, ?\DateTime $supplierShipmentDateTo, ?\DateTime $updatedAtFrom, ?\DateTime $updatedAtTo,  $dispatchType, ?bool $fake, ?bool $hasCis, ?bool $onlyWaitingForCancellationApprove, ?bool $onlyEstimatedDelivery,  $buyerType, ?int $page, ?int $pageSize, ?string $pageToken, ?int $limit): \OpenAPIServer\Model\GetOrdersResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getOrders (stream)
     *
     * Path: `/campaigns/{campaignId}/orders`
     *
     * Информация о нескольких заказах
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?array $orderIds Фильтрация заказов по идентификаторам. &lt;br&gt;&lt;br&gt; ⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым. (optional)
     * @param ?array $status Статус заказа:  * &#x60;CANCELLED&#x60; — заказ отменен.  * &#x60;DELIVERED&#x60; — заказ получен покупателем.  * &#x60;DELIVERY&#x60; — заказ передан в службу доставки.  * &#x60;PICKUP&#x60; — заказ доставлен в пункт самовывоза.  * &#x60;PROCESSING&#x60; — заказ находится в обработке.  * &#x60;UNPAID&#x60; — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).  Также могут возвращаться другие значения. Обрабатывать их не требуется. (optional)
     * @param ?array $substatus Этап обработки заказа (если он имеет статус &#x60;PROCESSING&#x60;) или причина отмены заказа (если он имеет статус &#x60;CANCELLED&#x60;).  Возможные значения для заказа в статусе &#x60;PROCESSING&#x60;:  * &#x60;STARTED&#x60; — заказ подтвержден, его можно начать обрабатывать. * &#x60;READY_TO_SHIP&#x60; — заказ собран и готов к отправке. * &#x60;SHIPPED&#x60; — заказ передан службе доставки.  Возможные значения для заказа в статусе &#x60;CANCELLED&#x60;:  * &#x60;DELIVERY_SERVICE_UNDELIVERED&#x60; — служба доставки не смогла доставить заказ.  * &#x60;PROCESSING_EXPIRED&#x60; — значение более не используется.  * &#x60;REPLACING_ORDER&#x60; — покупатель решил заменить товар другим по собственной инициативе.  * &#x60;RESERVATION_EXPIRED&#x60; — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.  * &#x60;RESERVATION_FAILED&#x60; — Маркет не может продолжить дальнейшую обработку заказа.  * &#x60;SHOP_FAILED&#x60; — магазин не может выполнить заказ.  * &#x60;USER_CHANGED_MIND&#x60; — покупатель отменил заказ по личным причинам.  * &#x60;USER_NOT_PAID&#x60; — покупатель не оплатил заказ (для типа оплаты &#x60;PREPAID&#x60;) в течение 30 минут.  * &#x60;USER_REFUSED_DELIVERY&#x60; — покупателя не устроили условия доставки.  * &#x60;USER_REFUSED_PRODUCT&#x60; — покупателю не подошел товар.  * &#x60;USER_REFUSED_QUALITY&#x60; — покупателя не устроило качество товара.  * &#x60;USER_UNREACHABLE&#x60; — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:    * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;   * перерыв между первым и третьим звонком не менее 90 минут;   * соединение не короче 5 секунд.    Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400. * &#x60;USER_WANTS_TO_CHANGE_DELIVERY_DATE&#x60; — покупатель хочет получить заказ в другой день. * &#x60;CANCELLED_COURIER_NOT_FOUND&#x60; — не удалось найти курьера.  Также могут возвращаться другие значения. Обрабатывать их не требуется. (optional)
     * @param ?\DateTime $fromDate Начальная дата для фильтрации заказов по дате оформления.  Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;.  Между начальной и конечной датой (параметр &#x60;toDate&#x60;) должно быть не больше 30 дней.  Значение по умолчанию: 30 дней назад от текущей даты. (optional)
     * @param ?\DateTime $toDate Конечная дата для фильтрации заказов по дате оформления.  Показываются заказы, созданные до 00:00 указанного дня.  Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;.  Между начальной (параметр &#x60;fromDate&#x60;) и конечной датой должно быть не больше 30 дней.  Значение по умолчанию: текущая дата. (optional)
     * @param ?\DateTime $supplierShipmentDateFrom Начальная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр &#x60;shipmentDate&#x60;).  Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;.  Между начальной и конечной датой (параметр &#x60;supplierShipmentDateTo&#x60;) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. (optional)
     * @param ?\DateTime $supplierShipmentDateTo Конечная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр &#x60;shipmentDate&#x60;).  Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;.  Между начальной (параметр &#x60;supplierShipmentDateFrom&#x60;) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. (optional)
     * @param ?\DateTime $updatedAtFrom Начальная дата для фильтрации заказов по дате и времени обновления (параметр &#x60;updatedAt&#x60;).  Формат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-21T00:42:42+03:00&#x60;.  Между начальной и конечной датой (параметр &#x60;updatedAtTo&#x60;) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. (optional)
     * @param ?\DateTime $updatedAtTo Конечная дата для фильтрации заказов по дате и времени обновления (параметр &#x60;updatedAt&#x60;).  Формат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-21T00:42:42+03:00&#x60;.  Между начальной (параметр &#x60;updatedAtFrom&#x60;) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. (optional)
     * @param  $dispatchType Способ отгрузки (optional)
     * @param ?bool $fake Фильтрация заказов по типам:  * &#x60;false&#x60; — настоящий заказ покупателя.  * &#x60;true&#x60; — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. (optional, default to false)
     * @param ?bool $hasCis Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации [в системе «Честный ЗНАК»](https://честныйзнак.рф/):  * &#x60;true&#x60; — да.  * &#x60;false&#x60; — нет.  Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям. (optional, default to false)
     * @param ?bool $onlyWaitingForCancellationApprove **Только для модели DBS**  Фильтрация заказов по наличию запросов покупателей на отмену.  При значение &#x60;true&#x60; возвращаются только заказы, которые находятся в статусе &#x60;DELIVERY&#x60; или &#x60;PICKUP&#x60; и которые пользователи решили отменить.  Чтобы подтвердить или отклонить отмену, отправьте запрос [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation). (optional, default to false)
     * @param ?bool $onlyEstimatedDelivery Фильтрация заказов с долгой доставкой (31-60 дней) по подтвержденной дате доставки:  * &#x60;true&#x60; — возвращаются только заказы с неподтвержденной датой доставки. * &#x60;false&#x60; — фильтрация не применяется. (optional, default to false)
     * @param  $buyerType Фильтрация заказов по типу покупателя. (optional)
     * @param ?int $page Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром &#x60;page_size&#x60;.  &#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional, default to 1)
     * @param ?int $pageSize Размер страницы.  Используется вместе с параметром &#x60;page_number&#x60;.  &#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     */
    public function getOrdersStream(int $campaignId, ?array $orderIds, ?array $status, ?array $substatus, ?\DateTime $fromDate, ?\DateTime $toDate, ?\DateTime $supplierShipmentDateFrom, ?\DateTime $supplierShipmentDateTo, ?\DateTime $updatedAtFrom, ?\DateTime $updatedAtTo,  $dispatchType, ?bool $fake, ?bool $hasCis, ?bool $onlyWaitingForCancellationApprove, ?bool $onlyEstimatedDelivery,  $buyerType, ?int $page, ?int $pageSize, ?string $pageToken, ?int $limit): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getOrdersStats
     *
     * Path: `/campaigns/{campaignId}/stats/orders`
     *
     * Детальная информация по заказам
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\OpenAPIServer\Model\GetOrdersStatsRequest $getOrdersStatsRequest  (optional)
     *
     * @return \OpenAPIServer\Model\GetOrdersStatsResponse|null
     */
    public function getOrdersStats(int $campaignId, ?string $pageToken, ?int $limit, ?\OpenAPIServer\Model\GetOrdersStatsRequest $getOrdersStatsRequest): \OpenAPIServer\Model\GetOrdersStatsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getOrdersStats (stream)
     *
     * Path: `/campaigns/{campaignId}/stats/orders`
     *
     * Детальная информация по заказам
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\OpenAPIServer\Model\GetOrdersStatsRequest $getOrdersStatsRequest  (optional)
     *
     */
    public function getOrdersStatsStream(int $campaignId, ?string $pageToken, ?int $limit, ?\OpenAPIServer\Model\GetOrdersStatsRequest $getOrdersStatsRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getPrices
     *
     * Path: `/campaigns/{campaignId}/offer-prices`
     *
     * Список цен
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?bool $archived Фильтр по нахождению в архиве. (optional, default to false)
     *
     * @return \OpenAPIServer\Model\GetPricesResponse|null
     * @deprecated
     */
    public function getPrices(int $campaignId, ?string $pageToken, ?int $limit, ?bool $archived): \OpenAPIServer\Model\GetPricesResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getPrices (stream)
     *
     * Path: `/campaigns/{campaignId}/offer-prices`
     *
     * Список цен
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?bool $archived Фильтр по нахождению в архиве. (optional, default to false)
     *
     * @deprecated
     */
    public function getPricesStream(int $campaignId, ?string $pageToken, ?int $limit, ?bool $archived): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getPricesByOfferIds
     *
     * Path: `/campaigns/{campaignId}/offer-prices`
     *
     * Просмотр цен на указанные товары в магазине
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\OpenAPIServer\Model\GetPricesByOfferIdsRequest $getPricesByOfferIdsRequest  (optional)
     *
     * @return \OpenAPIServer\Model\GetPricesByOfferIdsResponse|null
     */
    public function getPricesByOfferIds(int $campaignId, ?string $pageToken, ?int $limit, ?\OpenAPIServer\Model\GetPricesByOfferIdsRequest $getPricesByOfferIdsRequest): \OpenAPIServer\Model\GetPricesByOfferIdsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getPricesByOfferIds (stream)
     *
     * Path: `/campaigns/{campaignId}/offer-prices`
     *
     * Просмотр цен на указанные товары в магазине
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\OpenAPIServer\Model\GetPricesByOfferIdsRequest $getPricesByOfferIdsRequest  (optional)
     *
     */
    public function getPricesByOfferIdsStream(int $campaignId, ?string $pageToken, ?int $limit, ?\OpenAPIServer\Model\GetPricesByOfferIdsRequest $getPricesByOfferIdsRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getPromoOffers
     *
     * Path: `/businesses/{businessId}/promos/offers`
     *
     * Получение списка товаров, которые участвуют или могут участвовать в акции
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetPromoOffersRequest $getPromoOffersRequest  (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     * @return \OpenAPIServer\Model\GetPromoOffersResponse|null
     */
    public function getPromoOffers(int $businessId, \OpenAPIServer\Model\GetPromoOffersRequest $getPromoOffersRequest, ?string $pageToken, ?int $limit): \OpenAPIServer\Model\GetPromoOffersResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getPromoOffers (stream)
     *
     * Path: `/businesses/{businessId}/promos/offers`
     *
     * Получение списка товаров, которые участвуют или могут участвовать в акции
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetPromoOffersRequest $getPromoOffersRequest  (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     */
    public function getPromoOffersStream(int $businessId, \OpenAPIServer\Model\GetPromoOffersRequest $getPromoOffersRequest, ?string $pageToken, ?int $limit): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getPromos
     *
     * Path: `/businesses/{businessId}/promos`
     *
     * Получение списка акций
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?\OpenAPIServer\Model\GetPromosRequest $getPromosRequest  (optional)
     *
     * @return \OpenAPIServer\Model\GetPromosResponse|null
     */
    public function getPromos(int $businessId, ?\OpenAPIServer\Model\GetPromosRequest $getPromosRequest): \OpenAPIServer\Model\GetPromosResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getPromos (stream)
     *
     * Path: `/businesses/{businessId}/promos`
     *
     * Получение списка акций
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?\OpenAPIServer\Model\GetPromosRequest $getPromosRequest  (optional)
     *
     */
    public function getPromosStream(int $businessId, ?\OpenAPIServer\Model\GetPromosRequest $getPromosRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getQualityRatingDetails
     *
     * Path: `/campaigns/{campaignId}/ratings/quality/details`
     *
     * Заказы, которые повлияли на индекс качества
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return \OpenAPIServer\Model\GetQualityRatingDetailsResponse|null
     */
    public function getQualityRatingDetails(int $campaignId): \OpenAPIServer\Model\GetQualityRatingDetailsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getQualityRatingDetails (stream)
     *
     * Path: `/campaigns/{campaignId}/ratings/quality/details`
     *
     * Заказы, которые повлияли на индекс качества
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     */
    public function getQualityRatingDetailsStream(int $campaignId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getQualityRatings
     *
     * Path: `/businesses/{businessId}/ratings/quality`
     *
     * Индекс качества магазинов
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetQualityRatingRequest $getQualityRatingRequest  (required)
     *
     * @return \OpenAPIServer\Model\GetQualityRatingResponse|null
     */
    public function getQualityRatings(int $businessId, \OpenAPIServer\Model\GetQualityRatingRequest $getQualityRatingRequest): \OpenAPIServer\Model\GetQualityRatingResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getQualityRatings (stream)
     *
     * Path: `/businesses/{businessId}/ratings/quality`
     *
     * Индекс качества магазинов
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetQualityRatingRequest $getQualityRatingRequest  (required)
     *
     */
    public function getQualityRatingsStream(int $businessId, \OpenAPIServer\Model\GetQualityRatingRequest $getQualityRatingRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getReportInfo
     *
     * Path: `/reports/info/{reportId}`
     *
     * Получение заданного отчета
     *
     * @param string $reportId Идентификатор отчета, который вы получили после запуска генерации. (required)
     *
     * @return \OpenAPIServer\Model\GetReportInfoResponse|null
     */
    public function getReportInfo(string $reportId): \OpenAPIServer\Model\GetReportInfoResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getReportInfo (stream)
     *
     * Path: `/reports/info/{reportId}`
     *
     * Получение заданного отчета
     *
     * @param string $reportId Идентификатор отчета, который вы получили после запуска генерации. (required)
     *
     */
    public function getReportInfoStream(string $reportId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getReturn
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}`
     *
     * Информация о невыкупе или возврате
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param int $returnId Идентификатор возврата. (required)
     *
     * @return \OpenAPIServer\Model\GetReturnResponse|null
     */
    public function getReturn(int $campaignId, int $orderId, int $returnId): \OpenAPIServer\Model\GetReturnResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getReturn (stream)
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}`
     *
     * Информация о невыкупе или возврате
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param int $returnId Идентификатор возврата. (required)
     *
     */
    public function getReturnStream(int $campaignId, int $orderId, int $returnId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getReturnApplication
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application`
     *
     * Получение заявления на возврат
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param int $returnId Идентификатор возврата. (required)
     *
     * @return void
     */
    public function getReturnApplication(int $campaignId, int $orderId, int $returnId): void
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getReturnApplication (stream)
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application`
     *
     * Получение заявления на возврат
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param int $returnId Идентификатор возврата. (required)
     *
     */
    public function getReturnApplicationStream(int $campaignId, int $orderId, int $returnId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getReturnPhoto
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}`
     *
     * Получение фотографии возврата
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param int $returnId Идентификатор возврата. (required)
     * @param int $itemId Идентификатор товара в возврате. (required)
     * @param string $imageHash Хеш ссылки изображения для загрузки. (required)
     *
     * @return void
     */
    public function getReturnPhoto(int $campaignId, int $orderId, int $returnId, int $itemId, string $imageHash): void
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getReturnPhoto (stream)
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}`
     *
     * Получение фотографии возврата
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param int $returnId Идентификатор возврата. (required)
     * @param int $itemId Идентификатор товара в возврате. (required)
     * @param string $imageHash Хеш ссылки изображения для загрузки. (required)
     *
     */
    public function getReturnPhotoStream(int $campaignId, int $orderId, int $returnId, int $itemId, string $imageHash): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getReturns
     *
     * Path: `/campaigns/{campaignId}/returns`
     *
     * Список невыкупов и возвратов
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?array $orderIds Идентификаторы заказов — для фильтрации результатов.  Несколько идентификаторов перечисляются через запятую без пробела. Максимальное количество идентификаторов — 50. (optional)
     * @param ?array $statuses Статусы возвратов или невыкупов — для фильтрации результатов.  Несколько статусов перечисляются через запятую. (optional)
     * @param  $type Тип заказа для фильтрации:  * &#x60;RETURN&#x60; — возврат.  * &#x60;UNREDEEMED&#x60; — невыкуп.  Если не указывать, в ответе будут и возвраты, и невыкупы. (optional)
     * @param ?\DateTime $fromDate Начальная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: &#x60;ГГГГ-ММ-ДД&#x60;. (optional)
     * @param ?\DateTime $toDate Конечная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: &#x60;ГГГГ-ММ-ДД&#x60;. (optional)
     * @param ?\DateTime $fromDate2 {% note warning \&quot;\&quot; %}  Этот параметр устарел. Вместо него используйте &#x60;fromDate&#x60;.  {% endnote %}  Начальная дата для фильтрации возвратов или невыкупов по дате обновления. (optional) (deprecated)
     * @param ?\DateTime $toDate2 {% note warning \&quot;\&quot; %}  Этот параметр устарел. Вместо него используйте &#x60;toDate&#x60;.  {% endnote %}  Конечная дата для фильтрации возвратов или невыкупов по дате обновления. (optional) (deprecated)
     *
     * @return \OpenAPIServer\Model\GetReturnsResponse|null
     */
    public function getReturns(int $campaignId, ?string $pageToken, ?int $limit, ?array $orderIds, ?array $statuses,  $type, ?\DateTime $fromDate, ?\DateTime $toDate, ?\DateTime $fromDate2, ?\DateTime $toDate2): \OpenAPIServer\Model\GetReturnsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getReturns (stream)
     *
     * Path: `/campaigns/{campaignId}/returns`
     *
     * Список невыкупов и возвратов
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?array $orderIds Идентификаторы заказов — для фильтрации результатов.  Несколько идентификаторов перечисляются через запятую без пробела. Максимальное количество идентификаторов — 50. (optional)
     * @param ?array $statuses Статусы возвратов или невыкупов — для фильтрации результатов.  Несколько статусов перечисляются через запятую. (optional)
     * @param  $type Тип заказа для фильтрации:  * &#x60;RETURN&#x60; — возврат.  * &#x60;UNREDEEMED&#x60; — невыкуп.  Если не указывать, в ответе будут и возвраты, и невыкупы. (optional)
     * @param ?\DateTime $fromDate Начальная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: &#x60;ГГГГ-ММ-ДД&#x60;. (optional)
     * @param ?\DateTime $toDate Конечная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: &#x60;ГГГГ-ММ-ДД&#x60;. (optional)
     * @param ?\DateTime $fromDate2 {% note warning \&quot;\&quot; %}  Этот параметр устарел. Вместо него используйте &#x60;fromDate&#x60;.  {% endnote %}  Начальная дата для фильтрации возвратов или невыкупов по дате обновления. (optional) (deprecated)
     * @param ?\DateTime $toDate2 {% note warning \&quot;\&quot; %}  Этот параметр устарел. Вместо него используйте &#x60;toDate&#x60;.  {% endnote %}  Конечная дата для фильтрации возвратов или невыкупов по дате обновления. (optional) (deprecated)
     *
     */
    public function getReturnsStream(int $campaignId, ?string $pageToken, ?int $limit, ?array $orderIds, ?array $statuses,  $type, ?\DateTime $fromDate, ?\DateTime $toDate, ?\DateTime $fromDate2, ?\DateTime $toDate2): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getStocks
     *
     * Path: `/campaigns/{campaignId}/offers/stocks`
     *
     * Информация об остатках и оборачиваемости
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\OpenAPIServer\Model\GetWarehouseStocksRequest $getWarehouseStocksRequest  (optional)
     *
     * @return \OpenAPIServer\Model\GetWarehouseStocksResponse|null
     */
    public function getStocks(int $campaignId, ?string $pageToken, ?int $limit, ?\OpenAPIServer\Model\GetWarehouseStocksRequest $getWarehouseStocksRequest): \OpenAPIServer\Model\GetWarehouseStocksResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getStocks (stream)
     *
     * Path: `/campaigns/{campaignId}/offers/stocks`
     *
     * Информация об остатках и оборачиваемости
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\OpenAPIServer\Model\GetWarehouseStocksRequest $getWarehouseStocksRequest  (optional)
     *
     */
    public function getStocksStream(int $campaignId, ?string $pageToken, ?int $limit, ?\OpenAPIServer\Model\GetWarehouseStocksRequest $getWarehouseStocksRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getSuggestedOfferMappingEntries
     *
     * Path: `/campaigns/{campaignId}/offer-mapping-entries/suggestions`
     *
     * Рекомендованные карточки для товаров
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetSuggestedOfferMappingEntriesRequest $getSuggestedOfferMappingEntriesRequest  (required)
     *
     * @return \OpenAPIServer\Model\GetSuggestedOfferMappingEntriesResponse|null
     * @deprecated
     */
    public function getSuggestedOfferMappingEntries(int $campaignId, \OpenAPIServer\Model\GetSuggestedOfferMappingEntriesRequest $getSuggestedOfferMappingEntriesRequest): \OpenAPIServer\Model\GetSuggestedOfferMappingEntriesResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getSuggestedOfferMappingEntries (stream)
     *
     * Path: `/campaigns/{campaignId}/offer-mapping-entries/suggestions`
     *
     * Рекомендованные карточки для товаров
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\GetSuggestedOfferMappingEntriesRequest $getSuggestedOfferMappingEntriesRequest  (required)
     *
     * @deprecated
     */
    public function getSuggestedOfferMappingEntriesStream(int $campaignId, \OpenAPIServer\Model\GetSuggestedOfferMappingEntriesRequest $getSuggestedOfferMappingEntriesRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getSuggestedOfferMappings
     *
     * Path: `/businesses/{businessId}/offer-mappings/suggestions`
     *
     * Просмотр карточек на Маркете, которые подходят вашим товарам
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?\OpenAPIServer\Model\GetSuggestedOfferMappingsRequest $getSuggestedOfferMappingsRequest  (optional)
     *
     * @return \OpenAPIServer\Model\GetSuggestedOfferMappingsResponse|null
     */
    public function getSuggestedOfferMappings(int $businessId, ?\OpenAPIServer\Model\GetSuggestedOfferMappingsRequest $getSuggestedOfferMappingsRequest): \OpenAPIServer\Model\GetSuggestedOfferMappingsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getSuggestedOfferMappings (stream)
     *
     * Path: `/businesses/{businessId}/offer-mappings/suggestions`
     *
     * Просмотр карточек на Маркете, которые подходят вашим товарам
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param ?\OpenAPIServer\Model\GetSuggestedOfferMappingsRequest $getSuggestedOfferMappingsRequest  (optional)
     *
     */
    public function getSuggestedOfferMappingsStream(int $businessId, ?\OpenAPIServer\Model\GetSuggestedOfferMappingsRequest $getSuggestedOfferMappingsRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getSuggestedPrices
     *
     * Path: `/campaigns/{campaignId}/offer-prices/suggestions`
     *
     * Цены для продвижения товаров
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\SuggestPricesRequest $suggestPricesRequest  (required)
     *
     * @return \OpenAPIServer\Model\SuggestPricesResponse|null
     * @deprecated
     */
    public function getSuggestedPrices(int $campaignId, \OpenAPIServer\Model\SuggestPricesRequest $suggestPricesRequest): \OpenAPIServer\Model\SuggestPricesResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getSuggestedPrices (stream)
     *
     * Path: `/campaigns/{campaignId}/offer-prices/suggestions`
     *
     * Цены для продвижения товаров
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\SuggestPricesRequest $suggestPricesRequest  (required)
     *
     * @deprecated
     */
    public function getSuggestedPricesStream(int $campaignId, \OpenAPIServer\Model\SuggestPricesRequest $suggestPricesRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getWarehouses
     *
     * Path: `/businesses/{businessId}/warehouses`
     *
     * Список складов и групп складов
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return \OpenAPIServer\Model\GetWarehousesResponse|null
     */
    public function getWarehouses(int $businessId): \OpenAPIServer\Model\GetWarehousesResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getWarehouses (stream)
     *
     * Path: `/businesses/{businessId}/warehouses`
     *
     * Список складов и групп складов
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     */
    public function getWarehousesStream(int $businessId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation provideOrderItemIdentifiers
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/identifiers`
     *
     * Передача кодов маркировки единиц товара
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param \OpenAPIServer\Model\ProvideOrderItemIdentifiersRequest $provideOrderItemIdentifiersRequest  (required)
     *
     * @return \OpenAPIServer\Model\ProvideOrderItemIdentifiersResponse|null
     */
    public function provideOrderItemIdentifiers(int $campaignId, int $orderId, \OpenAPIServer\Model\ProvideOrderItemIdentifiersRequest $provideOrderItemIdentifiersRequest): \OpenAPIServer\Model\ProvideOrderItemIdentifiersResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation provideOrderItemIdentifiers (stream)
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/identifiers`
     *
     * Передача кодов маркировки единиц товара
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param \OpenAPIServer\Model\ProvideOrderItemIdentifiersRequest $provideOrderItemIdentifiersRequest  (required)
     *
     */
    public function provideOrderItemIdentifiersStream(int $campaignId, int $orderId, \OpenAPIServer\Model\ProvideOrderItemIdentifiersRequest $provideOrderItemIdentifiersRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation putBidsForBusiness
     *
     * Path: `/businesses/{businessId}/bids`
     *
     * Включение буста продаж и установка ставок
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\PutSkuBidsRequest $putSkuBidsRequest description (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     */
    public function putBidsForBusiness(int $businessId, \OpenAPIServer\Model\PutSkuBidsRequest $putSkuBidsRequest): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation putBidsForBusiness (stream)
     *
     * Path: `/businesses/{businessId}/bids`
     *
     * Включение буста продаж и установка ставок
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\PutSkuBidsRequest $putSkuBidsRequest description (required)
     *
     */
    public function putBidsForBusinessStream(int $businessId, \OpenAPIServer\Model\PutSkuBidsRequest $putSkuBidsRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation putBidsForCampaign
     *
     * Path: `/campaigns/{campaignId}/bids`
     *
     * Включение буста продаж и установка ставок для магазина
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\PutSkuBidsRequest $putSkuBidsRequest description (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     */
    public function putBidsForCampaign(int $campaignId, \OpenAPIServer\Model\PutSkuBidsRequest $putSkuBidsRequest): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation putBidsForCampaign (stream)
     *
     * Path: `/campaigns/{campaignId}/bids`
     *
     * Включение буста продаж и установка ставок для магазина
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\PutSkuBidsRequest $putSkuBidsRequest description (required)
     *
     */
    public function putBidsForCampaignStream(int $campaignId, \OpenAPIServer\Model\PutSkuBidsRequest $putSkuBidsRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation refreshFeed
     *
     * Path: `/campaigns/{campaignId}/feeds/{feedId}/refresh`
     *
     * Сообщить, что прайс-лист обновился
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     * @deprecated
     */
    public function refreshFeed(int $campaignId, int $feedId): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation refreshFeed (stream)
     *
     * Path: `/campaigns/{campaignId}/feeds/{feedId}/refresh`
     *
     * Сообщить, что прайс-лист обновился
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     *
     * @deprecated
     */
    public function refreshFeedStream(int $campaignId, int $feedId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation searchRegionChildren
     *
     * Path: `/regions/{regionId}/children`
     *
     * Информация о дочерних регионах
     *
     * @param int $regionId Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). (required)
     * @param ?int $page Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром &#x60;page_size&#x60;.  &#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional, default to 1)
     * @param ?int $pageSize Размер страницы.  Используется вместе с параметром &#x60;page_number&#x60;.  &#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional)
     *
     * @return \OpenAPIServer\Model\GetRegionWithChildrenResponse|null
     */
    public function searchRegionChildren(int $regionId, ?int $page, ?int $pageSize): \OpenAPIServer\Model\GetRegionWithChildrenResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation searchRegionChildren (stream)
     *
     * Path: `/regions/{regionId}/children`
     *
     * Информация о дочерних регионах
     *
     * @param int $regionId Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). (required)
     * @param ?int $page Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром &#x60;page_size&#x60;.  &#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional, default to 1)
     * @param ?int $pageSize Размер страницы.  Используется вместе с параметром &#x60;page_number&#x60;.  &#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;. (optional)
     *
     */
    public function searchRegionChildrenStream(int $regionId, ?int $page, ?int $pageSize): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation searchRegionsById
     *
     * Path: `/regions/{regionId}`
     *
     * Информация о регионе
     *
     * @param int $regionId Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). (required)
     *
     * @return \OpenAPIServer\Model\GetRegionsResponse|null
     */
    public function searchRegionsById(int $regionId): \OpenAPIServer\Model\GetRegionsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation searchRegionsById (stream)
     *
     * Path: `/regions/{regionId}`
     *
     * Информация о регионе
     *
     * @param int $regionId Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). (required)
     *
     */
    public function searchRegionsByIdStream(int $regionId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation searchRegionsByName
     *
     * Path: `/regions`
     *
     * Поиск регионов по их имени
     *
     * @param string $name Название региона.  Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, &#x60;Москва&#x60;. (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     * @return \OpenAPIServer\Model\GetRegionsResponse|null
     */
    public function searchRegionsByName(string $name, ?string $pageToken, ?int $limit): \OpenAPIServer\Model\GetRegionsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation searchRegionsByName (stream)
     *
     * Path: `/regions`
     *
     * Поиск регионов по их имени
     *
     * @param string $name Название региона.  Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, &#x60;Москва&#x60;. (required)
     * @param ?string $pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются. (optional)
     * @param ?int $limit Количество значений на одной странице. (optional)
     *
     */
    public function searchRegionsByNameStream(string $name, ?string $pageToken, ?int $limit): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation sendFileToChat
     *
     * Path: `/businesses/{businessId}/chats/file/send`
     *
     * Отправка файла в чат
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $chatId Идентификатор чата. (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     */
    public function sendFileToChat(int $businessId, int $chatId): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation sendFileToChat (stream)
     *
     * Path: `/businesses/{businessId}/chats/file/send`
     *
     * Отправка файла в чат
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $chatId Идентификатор чата. (required)
     *
     */
    public function sendFileToChatStream(int $businessId, int $chatId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation sendMessageToChat
     *
     * Path: `/businesses/{businessId}/chats/message`
     *
     * Отправка сообщения в чат
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $chatId Идентификатор чата. (required)
     * @param \OpenAPIServer\Model\SendMessageToChatRequest $sendMessageToChatRequest description (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     */
    public function sendMessageToChat(int $businessId, int $chatId, \OpenAPIServer\Model\SendMessageToChatRequest $sendMessageToChatRequest): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation sendMessageToChat (stream)
     *
     * Path: `/businesses/{businessId}/chats/message`
     *
     * Отправка сообщения в чат
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $chatId Идентификатор чата. (required)
     * @param \OpenAPIServer\Model\SendMessageToChatRequest $sendMessageToChatRequest description (required)
     *
     */
    public function sendMessageToChatStream(int $businessId, int $chatId, \OpenAPIServer\Model\SendMessageToChatRequest $sendMessageToChatRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation setFeedParams
     *
     * Path: `/campaigns/{campaignId}/feeds/{feedId}/params`
     *
     * Изменение параметров прайс-листа
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     * @param \OpenAPIServer\Model\SetFeedParamsRequest $setFeedParamsRequest  (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     * @deprecated
     */
    public function setFeedParams(int $campaignId, int $feedId, \OpenAPIServer\Model\SetFeedParamsRequest $setFeedParamsRequest): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation setFeedParams (stream)
     *
     * Path: `/campaigns/{campaignId}/feeds/{feedId}/params`
     *
     * Изменение параметров прайс-листа
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     * @param \OpenAPIServer\Model\SetFeedParamsRequest $setFeedParamsRequest  (required)
     *
     * @deprecated
     */
    public function setFeedParamsStream(int $campaignId, int $feedId, \OpenAPIServer\Model\SetFeedParamsRequest $setFeedParamsRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation setOrderBoxLayout
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/boxes`
     *
     * Подготовка заказа
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param \OpenAPIServer\Model\SetOrderBoxLayoutRequest $setOrderBoxLayoutRequest  (required)
     *
     * @return \OpenAPIServer\Model\SetOrderBoxLayoutResponse|null
     */
    public function setOrderBoxLayout(int $campaignId, int $orderId, \OpenAPIServer\Model\SetOrderBoxLayoutRequest $setOrderBoxLayoutRequest): \OpenAPIServer\Model\SetOrderBoxLayoutResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation setOrderBoxLayout (stream)
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/boxes`
     *
     * Подготовка заказа
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param \OpenAPIServer\Model\SetOrderBoxLayoutRequest $setOrderBoxLayoutRequest  (required)
     *
     */
    public function setOrderBoxLayoutStream(int $campaignId, int $orderId, \OpenAPIServer\Model\SetOrderBoxLayoutRequest $setOrderBoxLayoutRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation setOrderShipmentBoxes
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes`
     *
     * Передача количества грузовых мест в заказе
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param int $shipmentId Параметр больше не используется. Вставьте любое число — просто чтобы получился корректный URL. (required)
     * @param \OpenAPIServer\Model\SetOrderShipmentBoxesRequest $setOrderShipmentBoxesRequest  (required)
     *
     * @return \OpenAPIServer\Model\SetOrderShipmentBoxesResponse|null
     */
    public function setOrderShipmentBoxes(int $campaignId, int $orderId, int $shipmentId, \OpenAPIServer\Model\SetOrderShipmentBoxesRequest $setOrderShipmentBoxesRequest): \OpenAPIServer\Model\SetOrderShipmentBoxesResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation setOrderShipmentBoxes (stream)
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes`
     *
     * Передача количества грузовых мест в заказе
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param int $shipmentId Параметр больше не используется. Вставьте любое число — просто чтобы получился корректный URL. (required)
     * @param \OpenAPIServer\Model\SetOrderShipmentBoxesRequest $setOrderShipmentBoxesRequest  (required)
     *
     */
    public function setOrderShipmentBoxesStream(int $campaignId, int $orderId, int $shipmentId, \OpenAPIServer\Model\SetOrderShipmentBoxesRequest $setOrderShipmentBoxesRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation skipGoodsFeedbacksReaction
     *
     * Path: `/businesses/{businessId}/goods-feedback/skip-reaction`
     *
     * Отказ от ответа на отзывы
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\SkipGoodsFeedbackReactionRequest $skipGoodsFeedbackReactionRequest  (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     */
    public function skipGoodsFeedbacksReaction(int $businessId, \OpenAPIServer\Model\SkipGoodsFeedbackReactionRequest $skipGoodsFeedbackReactionRequest): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation skipGoodsFeedbacksReaction (stream)
     *
     * Path: `/businesses/{businessId}/goods-feedback/skip-reaction`
     *
     * Отказ от ответа на отзывы
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\SkipGoodsFeedbackReactionRequest $skipGoodsFeedbackReactionRequest  (required)
     *
     */
    public function skipGoodsFeedbacksReactionStream(int $businessId, \OpenAPIServer\Model\SkipGoodsFeedbackReactionRequest $skipGoodsFeedbackReactionRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation updateBusinessPrices
     *
     * Path: `/businesses/{businessId}/offer-prices/updates`
     *
     * Установка цен на товары во всех магазинах
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdateBusinessPricesRequest $updateBusinessPricesRequest  (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     */
    public function updateBusinessPrices(int $businessId, \OpenAPIServer\Model\UpdateBusinessPricesRequest $updateBusinessPricesRequest): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation updateBusinessPrices (stream)
     *
     * Path: `/businesses/{businessId}/offer-prices/updates`
     *
     * Установка цен на товары во всех магазинах
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdateBusinessPricesRequest $updateBusinessPricesRequest  (required)
     *
     */
    public function updateBusinessPricesStream(int $businessId, \OpenAPIServer\Model\UpdateBusinessPricesRequest $updateBusinessPricesRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation updateCampaignOffers
     *
     * Path: `/campaigns/{campaignId}/offers/update`
     *
     * Изменение условий продажи товаров в магазине
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdateCampaignOffersRequest $updateCampaignOffersRequest  (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     */
    public function updateCampaignOffers(int $campaignId, \OpenAPIServer\Model\UpdateCampaignOffersRequest $updateCampaignOffersRequest): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation updateCampaignOffers (stream)
     *
     * Path: `/campaigns/{campaignId}/offers/update`
     *
     * Изменение условий продажи товаров в магазине
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdateCampaignOffersRequest $updateCampaignOffersRequest  (required)
     *
     */
    public function updateCampaignOffersStream(int $campaignId, \OpenAPIServer\Model\UpdateCampaignOffersRequest $updateCampaignOffersRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation updateGoodsFeedbackComment
     *
     * Path: `/businesses/{businessId}/goods-feedback/comments/update`
     *
     * Добавление нового или изменение созданного комментария
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdateGoodsFeedbackCommentRequest $updateGoodsFeedbackCommentRequest  (required)
     *
     * @return \OpenAPIServer\Model\UpdateGoodsFeedbackCommentResponse|null
     */
    public function updateGoodsFeedbackComment(int $businessId, \OpenAPIServer\Model\UpdateGoodsFeedbackCommentRequest $updateGoodsFeedbackCommentRequest): \OpenAPIServer\Model\UpdateGoodsFeedbackCommentResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation updateGoodsFeedbackComment (stream)
     *
     * Path: `/businesses/{businessId}/goods-feedback/comments/update`
     *
     * Добавление нового или изменение созданного комментария
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdateGoodsFeedbackCommentRequest $updateGoodsFeedbackCommentRequest  (required)
     *
     */
    public function updateGoodsFeedbackCommentStream(int $businessId, \OpenAPIServer\Model\UpdateGoodsFeedbackCommentRequest $updateGoodsFeedbackCommentRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation updateOfferContent
     *
     * Path: `/businesses/{businessId}/offer-cards/update`
     *
     * Редактирование категорийных характеристик товара
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdateOfferContentRequest $updateOfferContentRequest  (required)
     *
     * @return \OpenAPIServer\Model\UpdateOfferContentResponse|null
     */
    public function updateOfferContent(int $businessId, \OpenAPIServer\Model\UpdateOfferContentRequest $updateOfferContentRequest): \OpenAPIServer\Model\UpdateOfferContentResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation updateOfferContent (stream)
     *
     * Path: `/businesses/{businessId}/offer-cards/update`
     *
     * Редактирование категорийных характеристик товара
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdateOfferContentRequest $updateOfferContentRequest  (required)
     *
     */
    public function updateOfferContentStream(int $businessId, \OpenAPIServer\Model\UpdateOfferContentRequest $updateOfferContentRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation updateOfferMappingEntries
     *
     * Path: `/campaigns/{campaignId}/offer-mapping-entries/updates`
     *
     * Добавление и редактирование товаров в каталоге
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdateOfferMappingEntryRequest $updateOfferMappingEntryRequest  (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     * @deprecated
     */
    public function updateOfferMappingEntries(int $campaignId, \OpenAPIServer\Model\UpdateOfferMappingEntryRequest $updateOfferMappingEntryRequest): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation updateOfferMappingEntries (stream)
     *
     * Path: `/campaigns/{campaignId}/offer-mapping-entries/updates`
     *
     * Добавление и редактирование товаров в каталоге
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdateOfferMappingEntryRequest $updateOfferMappingEntryRequest  (required)
     *
     * @deprecated
     */
    public function updateOfferMappingEntriesStream(int $campaignId, \OpenAPIServer\Model\UpdateOfferMappingEntryRequest $updateOfferMappingEntryRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation updateOfferMappings
     *
     * Path: `/businesses/{businessId}/offer-mappings/update`
     *
     * Добавление товаров в каталог и изменение информации о них
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdateOfferMappingsRequest $updateOfferMappingsRequest  (required)
     *
     * @return \OpenAPIServer\Model\UpdateOfferMappingsResponse|null
     */
    public function updateOfferMappings(int $businessId, \OpenAPIServer\Model\UpdateOfferMappingsRequest $updateOfferMappingsRequest): \OpenAPIServer\Model\UpdateOfferMappingsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation updateOfferMappings (stream)
     *
     * Path: `/businesses/{businessId}/offer-mappings/update`
     *
     * Добавление товаров в каталог и изменение информации о них
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdateOfferMappingsRequest $updateOfferMappingsRequest  (required)
     *
     */
    public function updateOfferMappingsStream(int $businessId, \OpenAPIServer\Model\UpdateOfferMappingsRequest $updateOfferMappingsRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation updateOrderItems
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/items`
     *
     * Удаление товара из заказа или уменьшение числа единиц
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param \OpenAPIServer\Model\UpdateOrderItemRequest $updateOrderItemRequest  (required)
     *
     * @return void
     */
    public function updateOrderItems(int $campaignId, int $orderId, \OpenAPIServer\Model\UpdateOrderItemRequest $updateOrderItemRequest): void
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation updateOrderItems (stream)
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/items`
     *
     * Удаление товара из заказа или уменьшение числа единиц
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param \OpenAPIServer\Model\UpdateOrderItemRequest $updateOrderItemRequest  (required)
     *
     */
    public function updateOrderItemsStream(int $campaignId, int $orderId, \OpenAPIServer\Model\UpdateOrderItemRequest $updateOrderItemRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation updateOrderStatus
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/status`
     *
     * Изменение статуса одного заказа
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param \OpenAPIServer\Model\UpdateOrderStatusRequest $updateOrderStatusRequest  (required)
     *
     * @return \OpenAPIServer\Model\UpdateOrderStatusResponse|null
     */
    public function updateOrderStatus(int $campaignId, int $orderId, \OpenAPIServer\Model\UpdateOrderStatusRequest $updateOrderStatusRequest): \OpenAPIServer\Model\UpdateOrderStatusResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation updateOrderStatus (stream)
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/status`
     *
     * Изменение статуса одного заказа
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param \OpenAPIServer\Model\UpdateOrderStatusRequest $updateOrderStatusRequest  (required)
     *
     */
    public function updateOrderStatusStream(int $campaignId, int $orderId, \OpenAPIServer\Model\UpdateOrderStatusRequest $updateOrderStatusRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation updateOrderStatuses
     *
     * Path: `/campaigns/{campaignId}/orders/status-update`
     *
     * Изменение статусов нескольких заказов
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdateOrderStatusesRequest $updateOrderStatusesRequest  (required)
     *
     * @return \OpenAPIServer\Model\UpdateOrderStatusesResponse|null
     */
    public function updateOrderStatuses(int $campaignId, \OpenAPIServer\Model\UpdateOrderStatusesRequest $updateOrderStatusesRequest): \OpenAPIServer\Model\UpdateOrderStatusesResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation updateOrderStatuses (stream)
     *
     * Path: `/campaigns/{campaignId}/orders/status-update`
     *
     * Изменение статусов нескольких заказов
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdateOrderStatusesRequest $updateOrderStatusesRequest  (required)
     *
     */
    public function updateOrderStatusesStream(int $campaignId, \OpenAPIServer\Model\UpdateOrderStatusesRequest $updateOrderStatusesRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation updatePrices
     *
     * Path: `/campaigns/{campaignId}/offer-prices/updates`
     *
     * Установка цен на товары в конкретном магазине
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdatePricesRequest $updatePricesRequest  (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     */
    public function updatePrices(int $campaignId, \OpenAPIServer\Model\UpdatePricesRequest $updatePricesRequest): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation updatePrices (stream)
     *
     * Path: `/campaigns/{campaignId}/offer-prices/updates`
     *
     * Установка цен на товары в конкретном магазине
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdatePricesRequest $updatePricesRequest  (required)
     *
     */
    public function updatePricesStream(int $campaignId, \OpenAPIServer\Model\UpdatePricesRequest $updatePricesRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation updatePromoOffers
     *
     * Path: `/businesses/{businessId}/promos/offers/update`
     *
     * Добавление товаров в акцию или изменение их цен
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdatePromoOffersRequest $updatePromoOffersRequest  (required)
     *
     * @return \OpenAPIServer\Model\UpdatePromoOffersResponse|null
     */
    public function updatePromoOffers(int $businessId, \OpenAPIServer\Model\UpdatePromoOffersRequest $updatePromoOffersRequest): \OpenAPIServer\Model\UpdatePromoOffersResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation updatePromoOffers (stream)
     *
     * Path: `/businesses/{businessId}/promos/offers/update`
     *
     * Добавление товаров в акцию или изменение их цен
     *
     * @param int $businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdatePromoOffersRequest $updatePromoOffersRequest  (required)
     *
     */
    public function updatePromoOffersStream(int $businessId, \OpenAPIServer\Model\UpdatePromoOffersRequest $updatePromoOffersRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation updateStocks
     *
     * Path: `/campaigns/{campaignId}/offers/stocks`
     *
     * Передача информации об остатках
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdateStocksRequest $updateStocksRequest  (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     */
    public function updateStocks(int $campaignId, \OpenAPIServer\Model\UpdateStocksRequest $updateStocksRequest): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation updateStocks (stream)
     *
     * Path: `/campaigns/{campaignId}/offers/stocks`
     *
     * Передача информации об остатках
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param \OpenAPIServer\Model\UpdateStocksRequest $updateStocksRequest  (required)
     *
     */
    public function updateStocksStream(int $campaignId, \OpenAPIServer\Model\UpdateStocksRequest $updateStocksRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation verifyOrderEac
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/verifyEac`
     *
     * Передача кода подтверждения
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param \OpenAPIServer\Model\VerifyOrderEacRequest $verifyOrderEacRequest  (required)
     *
     * @return \OpenAPIServer\Model\VerifyOrderEacResponse|null
     */
    public function verifyOrderEac(int $campaignId, int $orderId, \OpenAPIServer\Model\VerifyOrderEacRequest $verifyOrderEacRequest): \OpenAPIServer\Model\VerifyOrderEacResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation verifyOrderEac (stream)
     *
     * Path: `/campaigns/{campaignId}/orders/{orderId}/verifyEac`
     *
     * Передача кода подтверждения
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $orderId Идентификатор заказа. (required)
     * @param \OpenAPIServer\Model\VerifyOrderEacRequest $verifyOrderEacRequest  (required)
     *
     */
    public function verifyOrderEacStream(int $campaignId, int $orderId, \OpenAPIServer\Model\VerifyOrderEacRequest $verifyOrderEacRequest): void
    {
        throw new \Exception('Not implemented');
    }
}
