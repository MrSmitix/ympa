<?php

/**
 * Партнерский API Маркета
 * PHP version 8.x
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace OpenAPIServer\Api;


abstract class AbstractFeedsApi
{

    /**
     * Operation getFeed
     *
     * Path: `/campaigns/{campaignId}/feeds/{feedId}`
     *
     * Информация о прайс-листе
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     *
     * @return \OpenAPIServer\Model\GetFeedResponse|null
     * @deprecated
     */
    public function getFeed(int $campaignId, int $feedId): \OpenAPIServer\Model\GetFeedResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getFeed (stream)
     *
     * Path: `/campaigns/{campaignId}/feeds/{feedId}`
     *
     * Информация о прайс-листе
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     *
     * @deprecated
     */
    public function getFeedStream(int $campaignId, int $feedId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getFeedIndexLogs
     *
     * Path: `/campaigns/{campaignId}/feeds/{feedId}/index-logs`
     *
     * Отчет по индексации прайс-листа
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\DateTime $publishedTimeFrom Начальная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-21T00:42:42+03:00&#x60;.  Значение по умолчанию: последние восемь дней со времени отправки запроса. (optional)
     * @param ?\DateTime $publishedTimeTo Конечная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-31T00:42:42+03:00&#x60;.  Значение по умолчанию: дата и время отправки запроса.  {% note info %}  Если во время переключения между страницами выходных данных на Яндекс Маркете появятся новые результаты индексации прайс-листа, вы не получите часть данных. Чтобы этого не произошло, зафиксируйте выходные данные с помощью входного параметра &#x60;published_time_to&#x60;. Значение параметра не должно быть датой из будущего.  {% endnote %} (optional)
     * @param  $status Статус индексации и проверки прайс-листа на соответствие техническим требованиям.  Возможные значения: * &#x60;ERROR&#x60; — произошли ошибки. * &#x60;OK&#x60; — обработан без ошибок. * &#x60;WARNING&#x60; — наблюдались некритичные проблемы. (optional)
     *
     * @return \OpenAPIServer\Model\GetFeedIndexLogsResponse|null
     * @deprecated
     */
    public function getFeedIndexLogs(int $campaignId, int $feedId, ?int $limit, ?\DateTime $publishedTimeFrom, ?\DateTime $publishedTimeTo,  $status): \OpenAPIServer\Model\GetFeedIndexLogsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getFeedIndexLogs (stream)
     *
     * Path: `/campaigns/{campaignId}/feeds/{feedId}/index-logs`
     *
     * Отчет по индексации прайс-листа
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     * @param ?int $limit Количество значений на одной странице. (optional)
     * @param ?\DateTime $publishedTimeFrom Начальная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-21T00:42:42+03:00&#x60;.  Значение по умолчанию: последние восемь дней со времени отправки запроса. (optional)
     * @param ?\DateTime $publishedTimeTo Конечная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-31T00:42:42+03:00&#x60;.  Значение по умолчанию: дата и время отправки запроса.  {% note info %}  Если во время переключения между страницами выходных данных на Яндекс Маркете появятся новые результаты индексации прайс-листа, вы не получите часть данных. Чтобы этого не произошло, зафиксируйте выходные данные с помощью входного параметра &#x60;published_time_to&#x60;. Значение параметра не должно быть датой из будущего.  {% endnote %} (optional)
     * @param  $status Статус индексации и проверки прайс-листа на соответствие техническим требованиям.  Возможные значения: * &#x60;ERROR&#x60; — произошли ошибки. * &#x60;OK&#x60; — обработан без ошибок. * &#x60;WARNING&#x60; — наблюдались некритичные проблемы. (optional)
     *
     * @deprecated
     */
    public function getFeedIndexLogsStream(int $campaignId, int $feedId, ?int $limit, ?\DateTime $publishedTimeFrom, ?\DateTime $publishedTimeTo,  $status): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getFeeds
     *
     * Path: `/campaigns/{campaignId}/feeds`
     *
     * Список прайс-листов магазина
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @return \OpenAPIServer\Model\GetFeedsResponse|null
     * @deprecated
     */
    public function getFeeds(int $campaignId): \OpenAPIServer\Model\GetFeedsResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getFeeds (stream)
     *
     * Path: `/campaigns/{campaignId}/feeds`
     *
     * Список прайс-листов магазина
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     *
     * @deprecated
     */
    public function getFeedsStream(int $campaignId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation refreshFeed
     *
     * Path: `/campaigns/{campaignId}/feeds/{feedId}/refresh`
     *
     * Сообщить, что прайс-лист обновился
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     * @deprecated
     */
    public function refreshFeed(int $campaignId, int $feedId): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation refreshFeed (stream)
     *
     * Path: `/campaigns/{campaignId}/feeds/{feedId}/refresh`
     *
     * Сообщить, что прайс-лист обновился
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     *
     * @deprecated
     */
    public function refreshFeedStream(int $campaignId, int $feedId): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation setFeedParams
     *
     * Path: `/campaigns/{campaignId}/feeds/{feedId}/params`
     *
     * Изменение параметров прайс-листа
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     * @param \OpenAPIServer\Model\SetFeedParamsRequest $setFeedParamsRequest  (required)
     *
     * @return \OpenAPIServer\Model\EmptyApiResponse|null
     * @deprecated
     */
    public function setFeedParams(int $campaignId, int $feedId, \OpenAPIServer\Model\SetFeedParamsRequest $setFeedParamsRequest): \OpenAPIServer\Model\EmptyApiResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation setFeedParams (stream)
     *
     * Path: `/campaigns/{campaignId}/feeds/{feedId}/params`
     *
     * Изменение параметров прайс-листа
     *
     * @param int $campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) (required)
     * @param int $feedId Идентификатор прайс-листа. (required)
     * @param \OpenAPIServer\Model\SetFeedParamsRequest $setFeedParamsRequest  (required)
     *
     * @deprecated
     */
    public function setFeedParamsStream(int $campaignId, int $feedId, \OpenAPIServer\Model\SetFeedParamsRequest $setFeedParamsRequest): void
    {
        throw new \Exception('Not implemented');
    }
}
