<?php

/**
 * Партнерский API Маркета
 * PHP version 8.x
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace OpenAPIServer\Api;


abstract class AbstractReportsApi
{

    /**
     * Operation generateBoostConsolidatedReport
     *
     * Path: `/reports/boost-consolidated/generate`
     *
     * Отчет по бусту продаж
     *
     * @param \OpenAPIServer\Model\GenerateBoostConsolidatedRequest $generateBoostConsolidatedRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateBoostConsolidatedReport(\OpenAPIServer\Model\GenerateBoostConsolidatedRequest $generateBoostConsolidatedRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateBoostConsolidatedReport (stream)
     *
     * Path: `/reports/boost-consolidated/generate`
     *
     * Отчет по бусту продаж
     *
     * @param \OpenAPIServer\Model\GenerateBoostConsolidatedRequest $generateBoostConsolidatedRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateBoostConsolidatedReportStream(\OpenAPIServer\Model\GenerateBoostConsolidatedRequest $generateBoostConsolidatedRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateCompetitorsPositionReport
     *
     * Path: `/reports/competitors-position/generate`
     *
     * Отчет «Конкурентная позиция»
     *
     * @param \OpenAPIServer\Model\GenerateCompetitorsPositionReportRequest $generateCompetitorsPositionReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateCompetitorsPositionReport(\OpenAPIServer\Model\GenerateCompetitorsPositionReportRequest $generateCompetitorsPositionReportRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateCompetitorsPositionReport (stream)
     *
     * Path: `/reports/competitors-position/generate`
     *
     * Отчет «Конкурентная позиция»
     *
     * @param \OpenAPIServer\Model\GenerateCompetitorsPositionReportRequest $generateCompetitorsPositionReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateCompetitorsPositionReportStream(\OpenAPIServer\Model\GenerateCompetitorsPositionReportRequest $generateCompetitorsPositionReportRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateGoodsFeedbackReport
     *
     * Path: `/reports/goods-feedback/generate`
     *
     * Отчет по отзывам о товарах
     *
     * @param \OpenAPIServer\Model\GenerateGoodsFeedbackRequest $generateGoodsFeedbackRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateGoodsFeedbackReport(\OpenAPIServer\Model\GenerateGoodsFeedbackRequest $generateGoodsFeedbackRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateGoodsFeedbackReport (stream)
     *
     * Path: `/reports/goods-feedback/generate`
     *
     * Отчет по отзывам о товарах
     *
     * @param \OpenAPIServer\Model\GenerateGoodsFeedbackRequest $generateGoodsFeedbackRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateGoodsFeedbackReportStream(\OpenAPIServer\Model\GenerateGoodsFeedbackRequest $generateGoodsFeedbackRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateGoodsMovementReport
     *
     * Path: `/reports/goods-movement/generate`
     *
     * Отчет по движению товаров
     *
     * @param \OpenAPIServer\Model\GenerateGoodsMovementReportRequest $generateGoodsMovementReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateGoodsMovementReport(\OpenAPIServer\Model\GenerateGoodsMovementReportRequest $generateGoodsMovementReportRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateGoodsMovementReport (stream)
     *
     * Path: `/reports/goods-movement/generate`
     *
     * Отчет по движению товаров
     *
     * @param \OpenAPIServer\Model\GenerateGoodsMovementReportRequest $generateGoodsMovementReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateGoodsMovementReportStream(\OpenAPIServer\Model\GenerateGoodsMovementReportRequest $generateGoodsMovementReportRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateGoodsRealizationReport
     *
     * Path: `/reports/goods-realization/generate`
     *
     * Отчет по реализации
     *
     * @param \OpenAPIServer\Model\GenerateGoodsRealizationReportRequest $generateGoodsRealizationReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateGoodsRealizationReport(\OpenAPIServer\Model\GenerateGoodsRealizationReportRequest $generateGoodsRealizationReportRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateGoodsRealizationReport (stream)
     *
     * Path: `/reports/goods-realization/generate`
     *
     * Отчет по реализации
     *
     * @param \OpenAPIServer\Model\GenerateGoodsRealizationReportRequest $generateGoodsRealizationReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateGoodsRealizationReportStream(\OpenAPIServer\Model\GenerateGoodsRealizationReportRequest $generateGoodsRealizationReportRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateGoodsTurnoverReport
     *
     * Path: `/reports/goods-turnover/generate`
     *
     * Отчет по оборачиваемости
     *
     * @param \OpenAPIServer\Model\GenerateGoodsTurnoverRequest $generateGoodsTurnoverRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateGoodsTurnoverReport(\OpenAPIServer\Model\GenerateGoodsTurnoverRequest $generateGoodsTurnoverRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateGoodsTurnoverReport (stream)
     *
     * Path: `/reports/goods-turnover/generate`
     *
     * Отчет по оборачиваемости
     *
     * @param \OpenAPIServer\Model\GenerateGoodsTurnoverRequest $generateGoodsTurnoverRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateGoodsTurnoverReportStream(\OpenAPIServer\Model\GenerateGoodsTurnoverRequest $generateGoodsTurnoverRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateMassOrderLabelsReport
     *
     * Path: `/reports/documents/labels/generate`
     *
     * Готовые ярлыки‑наклейки на все коробки в нескольких заказах
     *
     * @param \OpenAPIServer\Model\GenerateMassOrderLabelsRequest $generateMassOrderLabelsRequest  (required)
     * @param  $format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateMassOrderLabelsReport(\OpenAPIServer\Model\GenerateMassOrderLabelsRequest $generateMassOrderLabelsRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateMassOrderLabelsReport (stream)
     *
     * Path: `/reports/documents/labels/generate`
     *
     * Готовые ярлыки‑наклейки на все коробки в нескольких заказах
     *
     * @param \OpenAPIServer\Model\GenerateMassOrderLabelsRequest $generateMassOrderLabelsRequest  (required)
     * @param  $format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7. (optional)
     *
     */
    public function generateMassOrderLabelsReportStream(\OpenAPIServer\Model\GenerateMassOrderLabelsRequest $generateMassOrderLabelsRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generatePricesReport
     *
     * Path: `/reports/prices/generate`
     *
     * Отчет «Цены на рынке»
     *
     * @param \OpenAPIServer\Model\GeneratePricesReportRequest $generatePricesReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generatePricesReport(\OpenAPIServer\Model\GeneratePricesReportRequest $generatePricesReportRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generatePricesReport (stream)
     *
     * Path: `/reports/prices/generate`
     *
     * Отчет «Цены на рынке»
     *
     * @param \OpenAPIServer\Model\GeneratePricesReportRequest $generatePricesReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generatePricesReportStream(\OpenAPIServer\Model\GeneratePricesReportRequest $generatePricesReportRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateShelfsStatisticsReport
     *
     * Path: `/reports/shelf-statistics/generate`
     *
     * Отчет по полкам
     *
     * @param \OpenAPIServer\Model\GenerateShelfsStatisticsRequest $generateShelfsStatisticsRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateShelfsStatisticsReport(\OpenAPIServer\Model\GenerateShelfsStatisticsRequest $generateShelfsStatisticsRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateShelfsStatisticsReport (stream)
     *
     * Path: `/reports/shelf-statistics/generate`
     *
     * Отчет по полкам
     *
     * @param \OpenAPIServer\Model\GenerateShelfsStatisticsRequest $generateShelfsStatisticsRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateShelfsStatisticsReportStream(\OpenAPIServer\Model\GenerateShelfsStatisticsRequest $generateShelfsStatisticsRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateShipmentListDocumentReport
     *
     * Path: `/reports/documents/shipment-list/generate`
     *
     * Получение листа сборки
     *
     * @param \OpenAPIServer\Model\GenerateShipmentListDocumentReportRequest $generateShipmentListDocumentReportRequest  (required)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateShipmentListDocumentReport(\OpenAPIServer\Model\GenerateShipmentListDocumentReportRequest $generateShipmentListDocumentReportRequest): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateShipmentListDocumentReport (stream)
     *
     * Path: `/reports/documents/shipment-list/generate`
     *
     * Получение листа сборки
     *
     * @param \OpenAPIServer\Model\GenerateShipmentListDocumentReportRequest $generateShipmentListDocumentReportRequest  (required)
     *
     */
    public function generateShipmentListDocumentReportStream(\OpenAPIServer\Model\GenerateShipmentListDocumentReportRequest $generateShipmentListDocumentReportRequest): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateShowsSalesReport
     *
     * Path: `/reports/shows-sales/generate`
     *
     * Отчет «Аналитика продаж»
     *
     * @param \OpenAPIServer\Model\GenerateShowsSalesReportRequest $generateShowsSalesReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateShowsSalesReport(\OpenAPIServer\Model\GenerateShowsSalesReportRequest $generateShowsSalesReportRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateShowsSalesReport (stream)
     *
     * Path: `/reports/shows-sales/generate`
     *
     * Отчет «Аналитика продаж»
     *
     * @param \OpenAPIServer\Model\GenerateShowsSalesReportRequest $generateShowsSalesReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateShowsSalesReportStream(\OpenAPIServer\Model\GenerateShowsSalesReportRequest $generateShowsSalesReportRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateStocksOnWarehousesReport
     *
     * Path: `/reports/stocks-on-warehouses/generate`
     *
     * Отчет по остаткам на складах
     *
     * @param \OpenAPIServer\Model\GenerateStocksOnWarehousesReportRequest $generateStocksOnWarehousesReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateStocksOnWarehousesReport(\OpenAPIServer\Model\GenerateStocksOnWarehousesReportRequest $generateStocksOnWarehousesReportRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateStocksOnWarehousesReport (stream)
     *
     * Path: `/reports/stocks-on-warehouses/generate`
     *
     * Отчет по остаткам на складах
     *
     * @param \OpenAPIServer\Model\GenerateStocksOnWarehousesReportRequest $generateStocksOnWarehousesReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateStocksOnWarehousesReportStream(\OpenAPIServer\Model\GenerateStocksOnWarehousesReportRequest $generateStocksOnWarehousesReportRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateUnitedMarketplaceServicesReport
     *
     * Path: `/reports/united-marketplace-services/generate`
     *
     * Отчет по стоимости услуг
     *
     * @param \OpenAPIServer\Model\GenerateUnitedMarketplaceServicesReportRequest $generateUnitedMarketplaceServicesReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateUnitedMarketplaceServicesReport(\OpenAPIServer\Model\GenerateUnitedMarketplaceServicesReportRequest $generateUnitedMarketplaceServicesReportRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateUnitedMarketplaceServicesReport (stream)
     *
     * Path: `/reports/united-marketplace-services/generate`
     *
     * Отчет по стоимости услуг
     *
     * @param \OpenAPIServer\Model\GenerateUnitedMarketplaceServicesReportRequest $generateUnitedMarketplaceServicesReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateUnitedMarketplaceServicesReportStream(\OpenAPIServer\Model\GenerateUnitedMarketplaceServicesReportRequest $generateUnitedMarketplaceServicesReportRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateUnitedNettingReport
     *
     * Path: `/reports/united-netting/generate`
     *
     * Отчет по платежам
     *
     * @param \OpenAPIServer\Model\GenerateUnitedNettingReportRequest $generateUnitedNettingReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateUnitedNettingReport(\OpenAPIServer\Model\GenerateUnitedNettingReportRequest $generateUnitedNettingReportRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateUnitedNettingReport (stream)
     *
     * Path: `/reports/united-netting/generate`
     *
     * Отчет по платежам
     *
     * @param \OpenAPIServer\Model\GenerateUnitedNettingReportRequest $generateUnitedNettingReportRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateUnitedNettingReportStream(\OpenAPIServer\Model\GenerateUnitedNettingReportRequest $generateUnitedNettingReportRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation generateUnitedOrdersReport
     *
     * Path: `/reports/united-orders/generate`
     *
     * Отчет по заказам
     *
     * @param \OpenAPIServer\Model\GenerateUnitedOrdersRequest $generateUnitedOrdersRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     * @return \OpenAPIServer\Model\GenerateReportResponse|null
     */
    public function generateUnitedOrdersReport(\OpenAPIServer\Model\GenerateUnitedOrdersRequest $generateUnitedOrdersRequest,  $format): \OpenAPIServer\Model\GenerateReportResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation generateUnitedOrdersReport (stream)
     *
     * Path: `/reports/united-orders/generate`
     *
     * Отчет по заказам
     *
     * @param \OpenAPIServer\Model\GenerateUnitedOrdersRequest $generateUnitedOrdersRequest  (required)
     * @param  $format Формат отчета. (optional)
     *
     */
    public function generateUnitedOrdersReportStream(\OpenAPIServer\Model\GenerateUnitedOrdersRequest $generateUnitedOrdersRequest,  $format): void
    {
        throw new \Exception('Not implemented');
    }
    /**
     * Operation getReportInfo
     *
     * Path: `/reports/info/{reportId}`
     *
     * Получение заданного отчета
     *
     * @param string $reportId Идентификатор отчета, который вы получили после запуска генерации. (required)
     *
     * @return \OpenAPIServer\Model\GetReportInfoResponse|null
     */
    public function getReportInfo(string $reportId): \OpenAPIServer\Model\GetReportInfoResponse|null
    {
        throw new \Exception('Not implemented');
    }

    /**
     * Operation getReportInfo (stream)
     *
     * Path: `/reports/info/{reportId}`
     *
     * Получение заданного отчета
     *
     * @param string $reportId Идентификатор отчета, который вы получили после запуска генерации. (required)
     *
     */
    public function getReportInfoStream(string $reportId): void
    {
        throw new \Exception('Not implemented');
    }
}
