/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ympa_go_client

import (
	"encoding/json"
	"fmt"
)

// ShelfsStatisticsAttributionType Тип атрибуции:   * `CLICKS` — по кликам.   * `SHOWS` — по показам. <br><br>  О том, какие данные в отчете зависят и не зависят от типа атрибуции, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf#stats). 
type ShelfsStatisticsAttributionType string

// List of ShelfsStatisticsAttributionType
const (
	CLICKS ShelfsStatisticsAttributionType = "CLICKS"
	SHOWS ShelfsStatisticsAttributionType = "SHOWS"
)

// All allowed values of ShelfsStatisticsAttributionType enum
var AllowedShelfsStatisticsAttributionTypeEnumValues = []ShelfsStatisticsAttributionType{
	"CLICKS",
	"SHOWS",
}

func (v *ShelfsStatisticsAttributionType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ShelfsStatisticsAttributionType(value)
	for _, existing := range AllowedShelfsStatisticsAttributionTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ShelfsStatisticsAttributionType", value)
}

// NewShelfsStatisticsAttributionTypeFromValue returns a pointer to a valid ShelfsStatisticsAttributionType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewShelfsStatisticsAttributionTypeFromValue(v string) (*ShelfsStatisticsAttributionType, error) {
	ev := ShelfsStatisticsAttributionType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ShelfsStatisticsAttributionType: valid values are %v", v, AllowedShelfsStatisticsAttributionTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ShelfsStatisticsAttributionType) IsValid() bool {
	for _, existing := range AllowedShelfsStatisticsAttributionTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ShelfsStatisticsAttributionType value
func (v ShelfsStatisticsAttributionType) Ptr() *ShelfsStatisticsAttributionType {
	return &v
}

type NullableShelfsStatisticsAttributionType struct {
	value *ShelfsStatisticsAttributionType
	isSet bool
}

func (v NullableShelfsStatisticsAttributionType) Get() *ShelfsStatisticsAttributionType {
	return v.value
}

func (v *NullableShelfsStatisticsAttributionType) Set(val *ShelfsStatisticsAttributionType) {
	v.value = val
	v.isSet = true
}

func (v NullableShelfsStatisticsAttributionType) IsSet() bool {
	return v.isSet
}

func (v *NullableShelfsStatisticsAttributionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShelfsStatisticsAttributionType(val *ShelfsStatisticsAttributionType) *NullableShelfsStatisticsAttributionType {
	return &NullableShelfsStatisticsAttributionType{value: val, isSet: true}
}

func (v NullableShelfsStatisticsAttributionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShelfsStatisticsAttributionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

