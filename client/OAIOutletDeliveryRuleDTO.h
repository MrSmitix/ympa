/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOutletDeliveryRuleDTO.h
 *
 * Информация об условиях доставки для данной точки продаж.
 */

#ifndef OAIOutletDeliveryRuleDTO_H
#define OAIOutletDeliveryRuleDTO_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOutletDeliveryRuleDTO : public OAIObject {
public:
    OAIOutletDeliveryRuleDTO();
    OAIOutletDeliveryRuleDTO(QString json);
    ~OAIOutletDeliveryRuleDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMinDeliveryDays() const;
    void setMinDeliveryDays(const qint32 &min_delivery_days);
    bool is_min_delivery_days_Set() const;
    bool is_min_delivery_days_Valid() const;

    qint32 getMaxDeliveryDays() const;
    void setMaxDeliveryDays(const qint32 &max_delivery_days);
    bool is_max_delivery_days_Set() const;
    bool is_max_delivery_days_Valid() const;

    qint64 getDeliveryServiceId() const;
    void setDeliveryServiceId(const qint64 &delivery_service_id);
    bool is_delivery_service_id_Set() const;
    bool is_delivery_service_id_Valid() const;

    qint32 getOrderBefore() const;
    void setOrderBefore(const qint32 &order_before);
    bool is_order_before_Set() const;
    bool is_order_before_Valid() const;

    double getPriceFreePickup() const;
    void setPriceFreePickup(const double &price_free_pickup);
    bool is_price_free_pickup_Set() const;
    bool is_price_free_pickup_Valid() const;

    bool isUnspecifiedDeliveryInterval() const;
    void setUnspecifiedDeliveryInterval(const bool &unspecified_delivery_interval);
    bool is_unspecified_delivery_interval_Set() const;
    bool is_unspecified_delivery_interval_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_min_delivery_days;
    bool m_min_delivery_days_isSet;
    bool m_min_delivery_days_isValid;

    qint32 m_max_delivery_days;
    bool m_max_delivery_days_isSet;
    bool m_max_delivery_days_isValid;

    qint64 m_delivery_service_id;
    bool m_delivery_service_id_isSet;
    bool m_delivery_service_id_isValid;

    qint32 m_order_before;
    bool m_order_before_isSet;
    bool m_order_before_isValid;

    double m_price_free_pickup;
    bool m_price_free_pickup_isSet;
    bool m_price_free_pickup_isValid;

    bool m_unspecified_delivery_interval;
    bool m_unspecified_delivery_interval_isSet;
    bool m_unspecified_delivery_interval_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOutletDeliveryRuleDTO)

#endif // OAIOutletDeliveryRuleDTO_H
