/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrderDTO.h
 *
 * Заказ.
 */

#ifndef OAIOrderDTO_H
#define OAIOrderDTO_H

#include <QJsonObject>

#include "OAICurrencyType.h"
#include "OAIOrderBuyerDTO.h"
#include "OAIOrderDeliveryDTO.h"
#include "OAIOrderItemDTO.h"
#include "OAIOrderPaymentMethodType.h"
#include "OAIOrderPaymentType.h"
#include "OAIOrderStatusType.h"
#include "OAIOrderSubsidyDTO.h"
#include "OAIOrderSubstatusType.h"
#include "OAIOrderTaxSystemType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOrderItemDTO;
class OAIOrderSubsidyDTO;
class OAIOrderDeliveryDTO;
class OAIOrderBuyerDTO;

class OAIOrderDTO : public OAIObject {
public:
    OAIOrderDTO();
    OAIOrderDTO(QString json);
    ~OAIOrderDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIOrderStatusType getStatus() const;
    void setStatus(const OAIOrderStatusType &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIOrderSubstatusType getSubstatus() const;
    void setSubstatus(const OAIOrderSubstatusType &substatus);
    bool is_substatus_Set() const;
    bool is_substatus_Valid() const;

    QString getCreationDate() const;
    void setCreationDate(const QString &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAICurrencyType getCurrency() const;
    void setCurrency(const OAICurrencyType &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    double getItemsTotal() const;
    void setItemsTotal(const double &items_total);
    bool is_items_total_Set() const;
    bool is_items_total_Valid() const;

    double getDeliveryTotal() const;
    void setDeliveryTotal(const double &delivery_total);
    bool is_delivery_total_Set() const;
    bool is_delivery_total_Valid() const;

    Q_DECL_DEPRECATED double getBuyerItemsTotal() const;
    Q_DECL_DEPRECATED void setBuyerItemsTotal(const double &buyer_items_total);
    Q_DECL_DEPRECATED bool is_buyer_items_total_Set() const;
    Q_DECL_DEPRECATED bool is_buyer_items_total_Valid() const;

    Q_DECL_DEPRECATED double getBuyerTotal() const;
    Q_DECL_DEPRECATED void setBuyerTotal(const double &buyer_total);
    Q_DECL_DEPRECATED bool is_buyer_total_Set() const;
    Q_DECL_DEPRECATED bool is_buyer_total_Valid() const;

    double getBuyerItemsTotalBeforeDiscount() const;
    void setBuyerItemsTotalBeforeDiscount(const double &buyer_items_total_before_discount);
    bool is_buyer_items_total_before_discount_Set() const;
    bool is_buyer_items_total_before_discount_Valid() const;

    Q_DECL_DEPRECATED double getBuyerTotalBeforeDiscount() const;
    Q_DECL_DEPRECATED void setBuyerTotalBeforeDiscount(const double &buyer_total_before_discount);
    Q_DECL_DEPRECATED bool is_buyer_total_before_discount_Set() const;
    Q_DECL_DEPRECATED bool is_buyer_total_before_discount_Valid() const;

    OAIOrderPaymentType getPaymentType() const;
    void setPaymentType(const OAIOrderPaymentType &payment_type);
    bool is_payment_type_Set() const;
    bool is_payment_type_Valid() const;

    OAIOrderPaymentMethodType getPaymentMethod() const;
    void setPaymentMethod(const OAIOrderPaymentMethodType &payment_method);
    bool is_payment_method_Set() const;
    bool is_payment_method_Valid() const;

    bool isFake() const;
    void setFake(const bool &fake);
    bool is_fake_Set() const;
    bool is_fake_Valid() const;

    QList<OAIOrderItemDTO> getItems() const;
    void setItems(const QList<OAIOrderItemDTO> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    QList<OAIOrderSubsidyDTO> getSubsidies() const;
    void setSubsidies(const QList<OAIOrderSubsidyDTO> &subsidies);
    bool is_subsidies_Set() const;
    bool is_subsidies_Valid() const;

    OAIOrderDeliveryDTO getDelivery() const;
    void setDelivery(const OAIOrderDeliveryDTO &delivery);
    bool is_delivery_Set() const;
    bool is_delivery_Valid() const;

    OAIOrderBuyerDTO getBuyer() const;
    void setBuyer(const OAIOrderBuyerDTO &buyer);
    bool is_buyer_Set() const;
    bool is_buyer_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    OAIOrderTaxSystemType getTaxSystem() const;
    void setTaxSystem(const OAIOrderTaxSystemType &tax_system);
    bool is_tax_system_Set() const;
    bool is_tax_system_Valid() const;

    bool isCancelRequested() const;
    void setCancelRequested(const bool &cancel_requested);
    bool is_cancel_requested_Set() const;
    bool is_cancel_requested_Valid() const;

    QString getExpiryDate() const;
    void setExpiryDate(const QString &expiry_date);
    bool is_expiry_date_Set() const;
    bool is_expiry_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIOrderStatusType m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIOrderSubstatusType m_substatus;
    bool m_substatus_isSet;
    bool m_substatus_isValid;

    QString m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAICurrencyType m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    double m_items_total;
    bool m_items_total_isSet;
    bool m_items_total_isValid;

    double m_delivery_total;
    bool m_delivery_total_isSet;
    bool m_delivery_total_isValid;

    double m_buyer_items_total;
    bool m_buyer_items_total_isSet;
    bool m_buyer_items_total_isValid;

    double m_buyer_total;
    bool m_buyer_total_isSet;
    bool m_buyer_total_isValid;

    double m_buyer_items_total_before_discount;
    bool m_buyer_items_total_before_discount_isSet;
    bool m_buyer_items_total_before_discount_isValid;

    double m_buyer_total_before_discount;
    bool m_buyer_total_before_discount_isSet;
    bool m_buyer_total_before_discount_isValid;

    OAIOrderPaymentType m_payment_type;
    bool m_payment_type_isSet;
    bool m_payment_type_isValid;

    OAIOrderPaymentMethodType m_payment_method;
    bool m_payment_method_isSet;
    bool m_payment_method_isValid;

    bool m_fake;
    bool m_fake_isSet;
    bool m_fake_isValid;

    QList<OAIOrderItemDTO> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    QList<OAIOrderSubsidyDTO> m_subsidies;
    bool m_subsidies_isSet;
    bool m_subsidies_isValid;

    OAIOrderDeliveryDTO m_delivery;
    bool m_delivery_isSet;
    bool m_delivery_isValid;

    OAIOrderBuyerDTO m_buyer;
    bool m_buyer_isSet;
    bool m_buyer_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    OAIOrderTaxSystemType m_tax_system;
    bool m_tax_system_isSet;
    bool m_tax_system_isValid;

    bool m_cancel_requested;
    bool m_cancel_requested_isSet;
    bool m_cancel_requested_isValid;

    QString m_expiry_date;
    bool m_expiry_date_isSet;
    bool m_expiry_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrderDTO)

#endif // OAIOrderDTO_H
