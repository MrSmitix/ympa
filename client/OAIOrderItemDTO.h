/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrderItemDTO.h
 *
 * Список товаров в заказе.
 */

#ifndef OAIOrderItemDTO_H
#define OAIOrderItemDTO_H

#include <QJsonObject>

#include "OAIOrderItemDetailDTO.h"
#include "OAIOrderItemInstanceDTO.h"
#include "OAIOrderItemInstanceType.h"
#include "OAIOrderItemPromoDTO.h"
#include "OAIOrderItemSubsidyDTO.h"
#include "OAIOrderVatType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOrderItemPromoDTO;
class OAIOrderItemInstanceDTO;
class OAIOrderItemDetailDTO;
class OAIOrderItemSubsidyDTO;

class OAIOrderItemDTO : public OAIObject {
public:
    OAIOrderItemDTO();
    OAIOrderItemDTO(QString json);
    ~OAIOrderItemDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getOfferId() const;
    void setOfferId(const QString &offer_id);
    bool is_offer_id_Set() const;
    bool is_offer_id_Valid() const;

    QString getOfferName() const;
    void setOfferName(const QString &offer_name);
    bool is_offer_name_Set() const;
    bool is_offer_name_Valid() const;

    double getPrice() const;
    void setPrice(const double &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    double getBuyerPrice() const;
    void setBuyerPrice(const double &buyer_price);
    bool is_buyer_price_Set() const;
    bool is_buyer_price_Valid() const;

    double getBuyerPriceBeforeDiscount() const;
    void setBuyerPriceBeforeDiscount(const double &buyer_price_before_discount);
    bool is_buyer_price_before_discount_Set() const;
    bool is_buyer_price_before_discount_Valid() const;

    Q_DECL_DEPRECATED double getPriceBeforeDiscount() const;
    Q_DECL_DEPRECATED void setPriceBeforeDiscount(const double &price_before_discount);
    Q_DECL_DEPRECATED bool is_price_before_discount_Set() const;
    Q_DECL_DEPRECATED bool is_price_before_discount_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    OAIOrderVatType getVat() const;
    void setVat(const OAIOrderVatType &vat);
    bool is_vat_Set() const;
    bool is_vat_Valid() const;

    QString getShopSku() const;
    void setShopSku(const QString &shop_sku);
    bool is_shop_sku_Set() const;
    bool is_shop_sku_Valid() const;

    Q_DECL_DEPRECATED double getSubsidy() const;
    Q_DECL_DEPRECATED void setSubsidy(const double &subsidy);
    Q_DECL_DEPRECATED bool is_subsidy_Set() const;
    Q_DECL_DEPRECATED bool is_subsidy_Valid() const;

    Q_DECL_DEPRECATED QString getPartnerWarehouseId() const;
    Q_DECL_DEPRECATED void setPartnerWarehouseId(const QString &partner_warehouse_id);
    Q_DECL_DEPRECATED bool is_partner_warehouse_id_Set() const;
    Q_DECL_DEPRECATED bool is_partner_warehouse_id_Valid() const;

    QList<OAIOrderItemPromoDTO> getPromos() const;
    void setPromos(const QList<OAIOrderItemPromoDTO> &promos);
    bool is_promos_Set() const;
    bool is_promos_Valid() const;

    QList<OAIOrderItemInstanceDTO> getInstances() const;
    void setInstances(const QList<OAIOrderItemInstanceDTO> &instances);
    bool is_instances_Set() const;
    bool is_instances_Valid() const;

    QList<OAIOrderItemDetailDTO> getDetails() const;
    void setDetails(const QList<OAIOrderItemDetailDTO> &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    QList<OAIOrderItemSubsidyDTO> getSubsidies() const;
    void setSubsidies(const QList<OAIOrderItemSubsidyDTO> &subsidies);
    bool is_subsidies_Set() const;
    bool is_subsidies_Valid() const;

    QList<OAIOrderItemInstanceType> getRequiredInstanceTypes() const;
    void setRequiredInstanceTypes(const QList<OAIOrderItemInstanceType> &required_instance_types);
    bool is_required_instance_types_Set() const;
    bool is_required_instance_types_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_offer_id;
    bool m_offer_id_isSet;
    bool m_offer_id_isValid;

    QString m_offer_name;
    bool m_offer_name_isSet;
    bool m_offer_name_isValid;

    double m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    double m_buyer_price;
    bool m_buyer_price_isSet;
    bool m_buyer_price_isValid;

    double m_buyer_price_before_discount;
    bool m_buyer_price_before_discount_isSet;
    bool m_buyer_price_before_discount_isValid;

    double m_price_before_discount;
    bool m_price_before_discount_isSet;
    bool m_price_before_discount_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    OAIOrderVatType m_vat;
    bool m_vat_isSet;
    bool m_vat_isValid;

    QString m_shop_sku;
    bool m_shop_sku_isSet;
    bool m_shop_sku_isValid;

    double m_subsidy;
    bool m_subsidy_isSet;
    bool m_subsidy_isValid;

    QString m_partner_warehouse_id;
    bool m_partner_warehouse_id_isSet;
    bool m_partner_warehouse_id_isValid;

    QList<OAIOrderItemPromoDTO> m_promos;
    bool m_promos_isSet;
    bool m_promos_isValid;

    QList<OAIOrderItemInstanceDTO> m_instances;
    bool m_instances_isSet;
    bool m_instances_isValid;

    QList<OAIOrderItemDetailDTO> m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    QList<OAIOrderItemSubsidyDTO> m_subsidies;
    bool m_subsidies_isSet;
    bool m_subsidies_isValid;

    QList<OAIOrderItemInstanceType> m_required_instance_types;
    bool m_required_instance_types_isSet;
    bool m_required_instance_types_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrderItemDTO)

#endif // OAIOrderItemDTO_H
