/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICampaignsQualityRatingDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICampaignsQualityRatingDTO::OAICampaignsQualityRatingDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICampaignsQualityRatingDTO::OAICampaignsQualityRatingDTO() {
    this->initializeModel();
}

OAICampaignsQualityRatingDTO::~OAICampaignsQualityRatingDTO() {}

void OAICampaignsQualityRatingDTO::initializeModel() {

    m_campaign_ratings_isSet = false;
    m_campaign_ratings_isValid = false;
}

void OAICampaignsQualityRatingDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICampaignsQualityRatingDTO::fromJsonObject(QJsonObject json) {

    m_campaign_ratings_isValid = ::OpenAPI::fromJsonValue(m_campaign_ratings, json[QString("campaignRatings")]);
    m_campaign_ratings_isSet = !json[QString("campaignRatings")].isNull() && m_campaign_ratings_isValid;
}

QString OAICampaignsQualityRatingDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICampaignsQualityRatingDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_campaign_ratings.size() > 0) {
        obj.insert(QString("campaignRatings"), ::OpenAPI::toJsonValue(m_campaign_ratings));
    }
    return obj;
}

QList<OAICampaignQualityRatingDTO> OAICampaignsQualityRatingDTO::getCampaignRatings() const {
    return m_campaign_ratings;
}
void OAICampaignsQualityRatingDTO::setCampaignRatings(const QList<OAICampaignQualityRatingDTO> &campaign_ratings) {
    m_campaign_ratings = campaign_ratings;
    m_campaign_ratings_isSet = true;
}

bool OAICampaignsQualityRatingDTO::is_campaign_ratings_Set() const{
    return m_campaign_ratings_isSet;
}

bool OAICampaignsQualityRatingDTO::is_campaign_ratings_Valid() const{
    return m_campaign_ratings_isValid;
}

bool OAICampaignsQualityRatingDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_campaign_ratings.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICampaignsQualityRatingDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_campaign_ratings_isValid && true;
}

} // namespace OpenAPI
