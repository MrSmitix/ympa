/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrdersStatsItemDTO.h
 *
 * Список товаров в заказе после возможных изменений.  В ходе обработки заказа Маркет может удалить из него единицы товаров — при проблемах на складе или по инициативе пользователя.  * Если из заказа удалены все единицы товара, его не будет в списке &#x60;items&#x60; — только в списке &#x60;initialItems&#x60;.  * Если в заказе осталась хотя бы одна единица товара, он будет и в списке &#x60;items&#x60; (с уменьшенным количеством единиц &#x60;count&#x60;), и в списке &#x60;initialItems&#x60; (с первоначальным количеством единиц &#x60;initialCount&#x60;). 
 */

#ifndef OAIOrdersStatsItemDTO_H
#define OAIOrdersStatsItemDTO_H

#include <QJsonObject>

#include "OAIOrdersStatsDetailsDTO.h"
#include "OAIOrdersStatsPriceDTO.h"
#include "OAIOrdersStatsWarehouseDTO.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOrdersStatsPriceDTO;
class OAIOrdersStatsWarehouseDTO;
class OAIOrdersStatsDetailsDTO;

class OAIOrdersStatsItemDTO : public OAIObject {
public:
    OAIOrdersStatsItemDTO();
    OAIOrdersStatsItemDTO(QString json);
    ~OAIOrdersStatsItemDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOfferName() const;
    void setOfferName(const QString &offer_name);
    bool is_offer_name_Set() const;
    bool is_offer_name_Valid() const;

    qint64 getMarketSku() const;
    void setMarketSku(const qint64 &market_sku);
    bool is_market_sku_Set() const;
    bool is_market_sku_Valid() const;

    QString getShopSku() const;
    void setShopSku(const QString &shop_sku);
    bool is_shop_sku_Set() const;
    bool is_shop_sku_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    QList<OAIOrdersStatsPriceDTO> getPrices() const;
    void setPrices(const QList<OAIOrdersStatsPriceDTO> &prices);
    bool is_prices_Set() const;
    bool is_prices_Valid() const;

    OAIOrdersStatsWarehouseDTO getWarehouse() const;
    void setWarehouse(const OAIOrdersStatsWarehouseDTO &warehouse);
    bool is_warehouse_Set() const;
    bool is_warehouse_Valid() const;

    QList<OAIOrdersStatsDetailsDTO> getDetails() const;
    void setDetails(const QList<OAIOrdersStatsDetailsDTO> &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    QList<QString> getCisList() const;
    void setCisList(const QList<QString> &cis_list);
    bool is_cis_list_Set() const;
    bool is_cis_list_Valid() const;

    qint32 getInitialCount() const;
    void setInitialCount(const qint32 &initial_count);
    bool is_initial_count_Set() const;
    bool is_initial_count_Valid() const;

    qint32 getBidFee() const;
    void setBidFee(const qint32 &bid_fee);
    bool is_bid_fee_Set() const;
    bool is_bid_fee_Valid() const;

    double getCofinanceThreshold() const;
    void setCofinanceThreshold(const double &cofinance_threshold);
    bool is_cofinance_threshold_Set() const;
    bool is_cofinance_threshold_Valid() const;

    double getCofinanceValue() const;
    void setCofinanceValue(const double &cofinance_value);
    bool is_cofinance_value_Set() const;
    bool is_cofinance_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_offer_name;
    bool m_offer_name_isSet;
    bool m_offer_name_isValid;

    qint64 m_market_sku;
    bool m_market_sku_isSet;
    bool m_market_sku_isValid;

    QString m_shop_sku;
    bool m_shop_sku_isSet;
    bool m_shop_sku_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    QList<OAIOrdersStatsPriceDTO> m_prices;
    bool m_prices_isSet;
    bool m_prices_isValid;

    OAIOrdersStatsWarehouseDTO m_warehouse;
    bool m_warehouse_isSet;
    bool m_warehouse_isValid;

    QList<OAIOrdersStatsDetailsDTO> m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    QList<QString> m_cis_list;
    bool m_cis_list_isSet;
    bool m_cis_list_isValid;

    qint32 m_initial_count;
    bool m_initial_count_isSet;
    bool m_initial_count_isValid;

    qint32 m_bid_fee;
    bool m_bid_fee_isSet;
    bool m_bid_fee_isValid;

    double m_cofinance_threshold;
    bool m_cofinance_threshold_isSet;
    bool m_cofinance_threshold_isValid;

    double m_cofinance_value;
    bool m_cofinance_value_isSet;
    bool m_cofinance_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrdersStatsItemDTO)

#endif // OAIOrdersStatsItemDTO_H
