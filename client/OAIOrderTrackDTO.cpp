/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderTrackDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderTrackDTO::OAIOrderTrackDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderTrackDTO::OAIOrderTrackDTO() {
    this->initializeModel();
}

OAIOrderTrackDTO::~OAIOrderTrackDTO() {}

void OAIOrderTrackDTO::initializeModel() {

    m_track_code_isSet = false;
    m_track_code_isValid = false;

    m_delivery_service_id_isSet = false;
    m_delivery_service_id_isValid = false;
}

void OAIOrderTrackDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderTrackDTO::fromJsonObject(QJsonObject json) {

    m_track_code_isValid = ::OpenAPI::fromJsonValue(m_track_code, json[QString("trackCode")]);
    m_track_code_isSet = !json[QString("trackCode")].isNull() && m_track_code_isValid;

    m_delivery_service_id_isValid = ::OpenAPI::fromJsonValue(m_delivery_service_id, json[QString("deliveryServiceId")]);
    m_delivery_service_id_isSet = !json[QString("deliveryServiceId")].isNull() && m_delivery_service_id_isValid;
}

QString OAIOrderTrackDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderTrackDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_track_code_isSet) {
        obj.insert(QString("trackCode"), ::OpenAPI::toJsonValue(m_track_code));
    }
    if (m_delivery_service_id_isSet) {
        obj.insert(QString("deliveryServiceId"), ::OpenAPI::toJsonValue(m_delivery_service_id));
    }
    return obj;
}

QString OAIOrderTrackDTO::getTrackCode() const {
    return m_track_code;
}
void OAIOrderTrackDTO::setTrackCode(const QString &track_code) {
    m_track_code = track_code;
    m_track_code_isSet = true;
}

bool OAIOrderTrackDTO::is_track_code_Set() const{
    return m_track_code_isSet;
}

bool OAIOrderTrackDTO::is_track_code_Valid() const{
    return m_track_code_isValid;
}

qint64 OAIOrderTrackDTO::getDeliveryServiceId() const {
    return m_delivery_service_id;
}
void OAIOrderTrackDTO::setDeliveryServiceId(const qint64 &delivery_service_id) {
    m_delivery_service_id = delivery_service_id;
    m_delivery_service_id_isSet = true;
}

bool OAIOrderTrackDTO::is_delivery_service_id_Set() const{
    return m_delivery_service_id_isSet;
}

bool OAIOrderTrackDTO::is_delivery_service_id_Valid() const{
    return m_delivery_service_id_isValid;
}

bool OAIOrderTrackDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_track_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_service_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderTrackDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
