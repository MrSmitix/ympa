/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoodsFeedbackDTO.h
 *
 * Отзыв о товаре.
 */

#ifndef OAIGoodsFeedbackDTO_H
#define OAIGoodsFeedbackDTO_H

#include <QJsonObject>

#include "OAIGoodsFeedbackDescriptionDTO.h"
#include "OAIGoodsFeedbackIdentifiersDTO.h"
#include "OAIGoodsFeedbackMediaDTO.h"
#include "OAIGoodsFeedbackStatisticsDTO.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoodsFeedbackIdentifiersDTO;
class OAIGoodsFeedbackDescriptionDTO;
class OAIGoodsFeedbackMediaDTO;
class OAIGoodsFeedbackStatisticsDTO;

class OAIGoodsFeedbackDTO : public OAIObject {
public:
    OAIGoodsFeedbackDTO();
    OAIGoodsFeedbackDTO(QString json);
    ~OAIGoodsFeedbackDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getFeedbackId() const;
    void setFeedbackId(const qint64 &feedback_id);
    bool is_feedback_id_Set() const;
    bool is_feedback_id_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    bool isNeedReaction() const;
    void setNeedReaction(const bool &need_reaction);
    bool is_need_reaction_Set() const;
    bool is_need_reaction_Valid() const;

    OAIGoodsFeedbackIdentifiersDTO getIdentifiers() const;
    void setIdentifiers(const OAIGoodsFeedbackIdentifiersDTO &identifiers);
    bool is_identifiers_Set() const;
    bool is_identifiers_Valid() const;

    QString getAuthor() const;
    void setAuthor(const QString &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    OAIGoodsFeedbackDescriptionDTO getDescription() const;
    void setDescription(const OAIGoodsFeedbackDescriptionDTO &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIGoodsFeedbackMediaDTO getMedia() const;
    void setMedia(const OAIGoodsFeedbackMediaDTO &media);
    bool is_media_Set() const;
    bool is_media_Valid() const;

    OAIGoodsFeedbackStatisticsDTO getStatistics() const;
    void setStatistics(const OAIGoodsFeedbackStatisticsDTO &statistics);
    bool is_statistics_Set() const;
    bool is_statistics_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_feedback_id;
    bool m_feedback_id_isSet;
    bool m_feedback_id_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    bool m_need_reaction;
    bool m_need_reaction_isSet;
    bool m_need_reaction_isValid;

    OAIGoodsFeedbackIdentifiersDTO m_identifiers;
    bool m_identifiers_isSet;
    bool m_identifiers_isValid;

    QString m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    OAIGoodsFeedbackDescriptionDTO m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIGoodsFeedbackMediaDTO m_media;
    bool m_media_isSet;
    bool m_media_isValid;

    OAIGoodsFeedbackStatisticsDTO m_statistics;
    bool m_statistics_isSet;
    bool m_statistics_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoodsFeedbackDTO)

#endif // OAIGoodsFeedbackDTO_H
