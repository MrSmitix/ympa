/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrdersStatsCommissionType.h
 *
 * Услуга:  * &#x60;FEE&#x60; — размещение товара на Маркете. * &#x60;FULFILLMENT&#x60; — складская обработка. Не возвращается с 1 января 2024 года. * &#x60;LOYALTY_PARTICIPATION_FEE&#x60; — участие в программе лояльности и отзывы за баллы. * &#x60;AUCTION_PROMOTION&#x60; — буст продаж с оплатой за продажи. * &#x60;INSTALLMENT&#x60; — рассрочка. Не возвращается с 24 февраля 2022 года. * &#x60;DELIVERY_TO_CUSTOMER&#x60; — доставка покупателю (FBY, FBS). Для DBS и Экспресс — если заказ возвращается через логистику Маркета. * &#x60;EXPRESS_DELIVERY_TO_CUSTOMER&#x60; — экспресс-доставка покупателю (Экспресс). * &#x60;AGENCY&#x60; — прием платежа покупателя. * &#x60;PAYMENT_TRANSFER&#x60; — перевод платежа покупателя. * &#x60;RETURNED_ORDERS_STORAGE&#x60; — хранение невыкупов и возвратов (FBS). Для DBS и Экспресс — если заказ возвращается через логистику Маркета. * &#x60;SORTING&#x60; — обработка заказа (FBS). * &#x60;INTAKE_SORTING&#x60; — организация забора заказов со склада продавца (FBS). * &#x60;RETURN_PROCESSING&#x60; — обработка заказов на складе (FBS). Для DBS и Экспресс — если заказ возвращается через логистику Маркета. * &#x60;ILLIQUID_GOODS_SALE&#x60; — вознаграждение за продажу невывезенных товаров. 
 */

#ifndef OAIOrdersStatsCommissionType_H
#define OAIOrdersStatsCommissionType_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOrdersStatsCommissionType : public OAIEnum {
public:
    OAIOrdersStatsCommissionType();
    OAIOrdersStatsCommissionType(QString json);
    ~OAIOrdersStatsCommissionType() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIOrdersStatsCommissionType {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        FEE, 
        FULFILLMENT, 
        LOYALTY_PARTICIPATION_FEE, 
        AUCTION_PROMOTION, 
        INSTALLMENT, 
        DELIVERY_TO_CUSTOMER, 
        EXPRESS_DELIVERY_TO_CUSTOMER, 
        AGENCY, 
        PAYMENT_TRANSFER, 
        RETURNED_ORDERS_STORAGE, 
        SORTING, 
        INTAKE_SORTING, 
        RETURN_PROCESSING, 
        ILLIQUID_GOODS_SALE
    };
    OAIOrdersStatsCommissionType::eOAIOrdersStatsCommissionType getValue() const;
    void setValue(const OAIOrdersStatsCommissionType::eOAIOrdersStatsCommissionType& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIOrdersStatsCommissionType m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrdersStatsCommissionType)

#endif // OAIOrdersStatsCommissionType_H
