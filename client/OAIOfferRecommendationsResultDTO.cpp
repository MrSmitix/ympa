/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOfferRecommendationsResultDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOfferRecommendationsResultDTO::OAIOfferRecommendationsResultDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOfferRecommendationsResultDTO::OAIOfferRecommendationsResultDTO() {
    this->initializeModel();
}

OAIOfferRecommendationsResultDTO::~OAIOfferRecommendationsResultDTO() {}

void OAIOfferRecommendationsResultDTO::initializeModel() {

    m_paging_isSet = false;
    m_paging_isValid = false;

    m_offer_recommendations_isSet = false;
    m_offer_recommendations_isValid = false;
}

void OAIOfferRecommendationsResultDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOfferRecommendationsResultDTO::fromJsonObject(QJsonObject json) {

    m_paging_isValid = ::OpenAPI::fromJsonValue(m_paging, json[QString("paging")]);
    m_paging_isSet = !json[QString("paging")].isNull() && m_paging_isValid;

    m_offer_recommendations_isValid = ::OpenAPI::fromJsonValue(m_offer_recommendations, json[QString("offerRecommendations")]);
    m_offer_recommendations_isSet = !json[QString("offerRecommendations")].isNull() && m_offer_recommendations_isValid;
}

QString OAIOfferRecommendationsResultDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOfferRecommendationsResultDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_paging.isSet()) {
        obj.insert(QString("paging"), ::OpenAPI::toJsonValue(m_paging));
    }
    if (m_offer_recommendations.size() > 0) {
        obj.insert(QString("offerRecommendations"), ::OpenAPI::toJsonValue(m_offer_recommendations));
    }
    return obj;
}

OAIScrollingPagerDTO OAIOfferRecommendationsResultDTO::getPaging() const {
    return m_paging;
}
void OAIOfferRecommendationsResultDTO::setPaging(const OAIScrollingPagerDTO &paging) {
    m_paging = paging;
    m_paging_isSet = true;
}

bool OAIOfferRecommendationsResultDTO::is_paging_Set() const{
    return m_paging_isSet;
}

bool OAIOfferRecommendationsResultDTO::is_paging_Valid() const{
    return m_paging_isValid;
}

QList<OAIOfferRecommendationDTO> OAIOfferRecommendationsResultDTO::getOfferRecommendations() const {
    return m_offer_recommendations;
}
void OAIOfferRecommendationsResultDTO::setOfferRecommendations(const QList<OAIOfferRecommendationDTO> &offer_recommendations) {
    m_offer_recommendations = offer_recommendations;
    m_offer_recommendations_isSet = true;
}

bool OAIOfferRecommendationsResultDTO::is_offer_recommendations_Set() const{
    return m_offer_recommendations_isSet;
}

bool OAIOfferRecommendationsResultDTO::is_offer_recommendations_Valid() const{
    return m_offer_recommendations_isValid;
}

bool OAIOfferRecommendationsResultDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_paging.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_offer_recommendations.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOfferRecommendationsResultDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_offer_recommendations_isValid && true;
}

} // namespace OpenAPI
