/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchModelsResponse.h
 *
 * 
 */

#ifndef OAISearchModelsResponse_H
#define OAISearchModelsResponse_H

#include <QJsonObject>

#include "OAICurrencyType.h"
#include "OAIFlippingPagerDTO.h"
#include "OAIModelDTO.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIModelDTO;
class OAIFlippingPagerDTO;

class OAISearchModelsResponse : public OAIObject {
public:
    OAISearchModelsResponse();
    OAISearchModelsResponse(QString json);
    ~OAISearchModelsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIModelDTO> getModels() const;
    void setModels(const QList<OAIModelDTO> &models);
    bool is_models_Set() const;
    bool is_models_Valid() const;

    OAICurrencyType getCurrency() const;
    void setCurrency(const OAICurrencyType &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    qint64 getRegionId() const;
    void setRegionId(const qint64 &region_id);
    bool is_region_id_Set() const;
    bool is_region_id_Valid() const;

    OAIFlippingPagerDTO getPager() const;
    void setPager(const OAIFlippingPagerDTO &pager);
    bool is_pager_Set() const;
    bool is_pager_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIModelDTO> m_models;
    bool m_models_isSet;
    bool m_models_isValid;

    OAICurrencyType m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    qint64 m_region_id;
    bool m_region_id_isSet;
    bool m_region_id_isValid;

    OAIFlippingPagerDTO m_pager;
    bool m_pager_isSet;
    bool m_pager_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchModelsResponse)

#endif // OAISearchModelsResponse_H
