/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICampaignSettingsDTO.h
 *
 * Настройки магазина.
 */

#ifndef OAICampaignSettingsDTO_H
#define OAICampaignSettingsDTO_H

#include <QJsonObject>

#include "OAICampaignSettingsLocalRegionDTO.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICampaignSettingsLocalRegionDTO;

class OAICampaignSettingsDTO : public OAIObject {
public:
    OAICampaignSettingsDTO();
    OAICampaignSettingsDTO(QString json);
    ~OAICampaignSettingsDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getCountryRegion() const;
    void setCountryRegion(const qint64 &country_region);
    bool is_country_region_Set() const;
    bool is_country_region_Valid() const;

    QString getShopName() const;
    void setShopName(const QString &shop_name);
    bool is_shop_name_Set() const;
    bool is_shop_name_Valid() const;

    bool isShowInContext() const;
    void setShowInContext(const bool &show_in_context);
    bool is_show_in_context_Set() const;
    bool is_show_in_context_Valid() const;

    bool isShowInPremium() const;
    void setShowInPremium(const bool &show_in_premium);
    bool is_show_in_premium_Set() const;
    bool is_show_in_premium_Valid() const;

    bool isUseOpenStat() const;
    void setUseOpenStat(const bool &use_open_stat);
    bool is_use_open_stat_Set() const;
    bool is_use_open_stat_Valid() const;

    OAICampaignSettingsLocalRegionDTO getLocalRegion() const;
    void setLocalRegion(const OAICampaignSettingsLocalRegionDTO &local_region);
    bool is_local_region_Set() const;
    bool is_local_region_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_country_region;
    bool m_country_region_isSet;
    bool m_country_region_isValid;

    QString m_shop_name;
    bool m_shop_name_isSet;
    bool m_shop_name_isValid;

    bool m_show_in_context;
    bool m_show_in_context_isSet;
    bool m_show_in_context_isValid;

    bool m_show_in_premium;
    bool m_show_in_premium_isSet;
    bool m_show_in_premium_isValid;

    bool m_use_open_stat;
    bool m_use_open_stat_isSet;
    bool m_use_open_stat_isValid;

    OAICampaignSettingsLocalRegionDTO m_local_region;
    bool m_local_region_isSet;
    bool m_local_region_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICampaignSettingsDTO)

#endif // OAICampaignSettingsDTO_H
