/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBriefOrderItemDTO.h
 *
 * Информация о маркированном товаре.
 */

#ifndef OAIBriefOrderItemDTO_H
#define OAIBriefOrderItemDTO_H

#include <QJsonObject>

#include "OAIOrderItemInstanceDTO.h"
#include "OAIOrderVatType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOrderItemInstanceDTO;

class OAIBriefOrderItemDTO : public OAIObject {
public:
    OAIBriefOrderItemDTO();
    OAIBriefOrderItemDTO(QString json);
    ~OAIBriefOrderItemDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIOrderVatType getVat() const;
    void setVat(const OAIOrderVatType &vat);
    bool is_vat_Set() const;
    bool is_vat_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    double getPrice() const;
    void setPrice(const double &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    QString getOfferName() const;
    void setOfferName(const QString &offer_name);
    bool is_offer_name_Set() const;
    bool is_offer_name_Valid() const;

    QString getOfferId() const;
    void setOfferId(const QString &offer_id);
    bool is_offer_id_Set() const;
    bool is_offer_id_Valid() const;

    QList<OAIOrderItemInstanceDTO> getInstances() const;
    void setInstances(const QList<OAIOrderItemInstanceDTO> &instances);
    bool is_instances_Set() const;
    bool is_instances_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIOrderVatType m_vat;
    bool m_vat_isSet;
    bool m_vat_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    double m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    QString m_offer_name;
    bool m_offer_name_isSet;
    bool m_offer_name_isValid;

    QString m_offer_id;
    bool m_offer_id_isSet;
    bool m_offer_id_isValid;

    QList<OAIOrderItemInstanceDTO> m_instances;
    bool m_instances_isSet;
    bool m_instances_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBriefOrderItemDTO)

#endif // OAIBriefOrderItemDTO_H
