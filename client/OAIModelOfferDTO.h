/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIModelOfferDTO.h
 *
 * Информация о предложении.
 */

#ifndef OAIModelOfferDTO_H
#define OAIModelOfferDTO_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIModelOfferDTO : public OAIObject {
public:
    OAIModelOfferDTO();
    OAIModelOfferDTO(QString json);
    ~OAIModelOfferDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDiscount() const;
    void setDiscount(const qint32 &discount);
    bool is_discount_Set() const;
    bool is_discount_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPos() const;
    void setPos(const qint32 &pos);
    bool is_pos_Set() const;
    bool is_pos_Valid() const;

    double getPreDiscountPrice() const;
    void setPreDiscountPrice(const double &pre_discount_price);
    bool is_pre_discount_price_Set() const;
    bool is_pre_discount_price_Valid() const;

    double getPrice() const;
    void setPrice(const double &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    qint64 getRegionId() const;
    void setRegionId(const qint64 &region_id);
    bool is_region_id_Set() const;
    bool is_region_id_Valid() const;

    double getShippingCost() const;
    void setShippingCost(const double &shipping_cost);
    bool is_shipping_cost_Set() const;
    bool is_shipping_cost_Valid() const;

    QString getShopName() const;
    void setShopName(const QString &shop_name);
    bool is_shop_name_Set() const;
    bool is_shop_name_Valid() const;

    qint32 getShopRating() const;
    void setShopRating(const qint32 &shop_rating);
    bool is_shop_rating_Set() const;
    bool is_shop_rating_Valid() const;

    Q_DECL_DEPRECATED qint32 getInStock() const;
    Q_DECL_DEPRECATED void setInStock(const qint32 &in_stock);
    Q_DECL_DEPRECATED bool is_in_stock_Set() const;
    Q_DECL_DEPRECATED bool is_in_stock_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_discount;
    bool m_discount_isSet;
    bool m_discount_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_pos;
    bool m_pos_isSet;
    bool m_pos_isValid;

    double m_pre_discount_price;
    bool m_pre_discount_price_isSet;
    bool m_pre_discount_price_isValid;

    double m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    qint64 m_region_id;
    bool m_region_id_isSet;
    bool m_region_id_isValid;

    double m_shipping_cost;
    bool m_shipping_cost_isSet;
    bool m_shipping_cost_isValid;

    QString m_shop_name;
    bool m_shop_name_isSet;
    bool m_shop_name_isValid;

    qint32 m_shop_rating;
    bool m_shop_rating_isSet;
    bool m_shop_rating_isValid;

    qint32 m_in_stock;
    bool m_in_stock_isSet;
    bool m_in_stock_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIModelOfferDTO)

#endif // OAIModelOfferDTO_H
