/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderPromoType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderPromoType::OAIOrderPromoType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderPromoType::OAIOrderPromoType() {
    this->initializeModel();
}

OAIOrderPromoType::~OAIOrderPromoType() {}

void OAIOrderPromoType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIOrderPromoType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIOrderPromoType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DIRECT_DISCOUNT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::DIRECT_DISCOUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BLUE_SET", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::BLUE_SET;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BLUE_FLASH", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::BLUE_FLASH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GENERIC_BUNDLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::GENERIC_BUNDLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MARKET_COUPON", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::MARKET_COUPON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MARKET_PROMOCODE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::MARKET_PROMOCODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MARKET_DEAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::MARKET_DEAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MARKET_BLUE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::MARKET_BLUE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MARKET_PRIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::MARKET_PRIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("YANDEX_PLUS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::YANDEX_PLUS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BERU_PLUS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::BERU_PLUS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MARKET_COIN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::MARKET_COIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("YANDEX_EMPLOYEE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::YANDEX_EMPLOYEE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LIMITED_FREE_DELIVERY_PROMO", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::LIMITED_FREE_DELIVERY_PROMO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREE_DELIVERY_THRESHOLD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::FREE_DELIVERY_THRESHOLD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MULTICART_DISCOUNT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::MULTICART_DISCOUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRICE_DROP_AS_YOU_SHOP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::PRICE_DROP_AS_YOU_SHOP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREE_DELIVERY_FOR_LDI", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::FREE_DELIVERY_FOR_LDI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREE_DELIVERY_FOR_LSC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::FREE_DELIVERY_FOR_LSC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SECRET_SALE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::SECRET_SALE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FREE_PICKUP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::FREE_PICKUP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CHEAPEST_AS_GIFT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::CHEAPEST_AS_GIFT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CASHBACK", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::CASHBACK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SUPPLIER_MULTICART_DISCOUNT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::SUPPLIER_MULTICART_DISCOUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SPREAD_DISCOUNT_COUNT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::SPREAD_DISCOUNT_COUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SPREAD_DISCOUNT_RECEIPT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::SPREAD_DISCOUNT_RECEIPT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ANNOUNCEMENT_PROMO", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::ANNOUNCEMENT_PROMO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DISCOUNT_BY_PAYMENT_TYPE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::DISCOUNT_BY_PAYMENT_TYPE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PERCENT_DISCOUNT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::PERCENT_DISCOUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DCO_EXTRA_DISCOUNT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::DCO_EXTRA_DISCOUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EMPTY_PROMO", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::EMPTY_PROMO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BLOCKING_PROMO", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::BLOCKING_PROMO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNKNOWN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderPromoType::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIOrderPromoType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIOrderPromoType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIOrderPromoType::DIRECT_DISCOUNT:
            val = "DIRECT_DISCOUNT";
            break;
        case eOAIOrderPromoType::BLUE_SET:
            val = "BLUE_SET";
            break;
        case eOAIOrderPromoType::BLUE_FLASH:
            val = "BLUE_FLASH";
            break;
        case eOAIOrderPromoType::GENERIC_BUNDLE:
            val = "GENERIC_BUNDLE";
            break;
        case eOAIOrderPromoType::MARKET_COUPON:
            val = "MARKET_COUPON";
            break;
        case eOAIOrderPromoType::MARKET_PROMOCODE:
            val = "MARKET_PROMOCODE";
            break;
        case eOAIOrderPromoType::MARKET_DEAL:
            val = "MARKET_DEAL";
            break;
        case eOAIOrderPromoType::MARKET_BLUE:
            val = "MARKET_BLUE";
            break;
        case eOAIOrderPromoType::MARKET_PRIME:
            val = "MARKET_PRIME";
            break;
        case eOAIOrderPromoType::YANDEX_PLUS:
            val = "YANDEX_PLUS";
            break;
        case eOAIOrderPromoType::BERU_PLUS:
            val = "BERU_PLUS";
            break;
        case eOAIOrderPromoType::MARKET_COIN:
            val = "MARKET_COIN";
            break;
        case eOAIOrderPromoType::YANDEX_EMPLOYEE:
            val = "YANDEX_EMPLOYEE";
            break;
        case eOAIOrderPromoType::LIMITED_FREE_DELIVERY_PROMO:
            val = "LIMITED_FREE_DELIVERY_PROMO";
            break;
        case eOAIOrderPromoType::FREE_DELIVERY_THRESHOLD:
            val = "FREE_DELIVERY_THRESHOLD";
            break;
        case eOAIOrderPromoType::MULTICART_DISCOUNT:
            val = "MULTICART_DISCOUNT";
            break;
        case eOAIOrderPromoType::PRICE_DROP_AS_YOU_SHOP:
            val = "PRICE_DROP_AS_YOU_SHOP";
            break;
        case eOAIOrderPromoType::FREE_DELIVERY_FOR_LDI:
            val = "FREE_DELIVERY_FOR_LDI";
            break;
        case eOAIOrderPromoType::FREE_DELIVERY_FOR_LSC:
            val = "FREE_DELIVERY_FOR_LSC";
            break;
        case eOAIOrderPromoType::SECRET_SALE:
            val = "SECRET_SALE";
            break;
        case eOAIOrderPromoType::FREE_PICKUP:
            val = "FREE_PICKUP";
            break;
        case eOAIOrderPromoType::CHEAPEST_AS_GIFT:
            val = "CHEAPEST_AS_GIFT";
            break;
        case eOAIOrderPromoType::CASHBACK:
            val = "CASHBACK";
            break;
        case eOAIOrderPromoType::SUPPLIER_MULTICART_DISCOUNT:
            val = "SUPPLIER_MULTICART_DISCOUNT";
            break;
        case eOAIOrderPromoType::SPREAD_DISCOUNT_COUNT:
            val = "SPREAD_DISCOUNT_COUNT";
            break;
        case eOAIOrderPromoType::SPREAD_DISCOUNT_RECEIPT:
            val = "SPREAD_DISCOUNT_RECEIPT";
            break;
        case eOAIOrderPromoType::ANNOUNCEMENT_PROMO:
            val = "ANNOUNCEMENT_PROMO";
            break;
        case eOAIOrderPromoType::DISCOUNT_BY_PAYMENT_TYPE:
            val = "DISCOUNT_BY_PAYMENT_TYPE";
            break;
        case eOAIOrderPromoType::PERCENT_DISCOUNT:
            val = "PERCENT_DISCOUNT";
            break;
        case eOAIOrderPromoType::DCO_EXTRA_DISCOUNT:
            val = "DCO_EXTRA_DISCOUNT";
            break;
        case eOAIOrderPromoType::EMPTY_PROMO:
            val = "EMPTY_PROMO";
            break;
        case eOAIOrderPromoType::BLOCKING_PROMO:
            val = "BLOCKING_PROMO";
            break;
        case eOAIOrderPromoType::UNKNOWN:
            val = "UNKNOWN";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIOrderPromoType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIOrderPromoType::eOAIOrderPromoType OAIOrderPromoType::getValue() const {
    return m_value;
}

void OAIOrderPromoType::setValue(const OAIOrderPromoType::eOAIOrderPromoType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIOrderPromoType::isSet() const {
    
    return m_value_isSet;
}

bool OAIOrderPromoType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
