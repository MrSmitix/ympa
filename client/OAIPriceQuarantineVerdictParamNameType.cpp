/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPriceQuarantineVerdictParamNameType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPriceQuarantineVerdictParamNameType::OAIPriceQuarantineVerdictParamNameType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPriceQuarantineVerdictParamNameType::OAIPriceQuarantineVerdictParamNameType() {
    this->initializeModel();
}

OAIPriceQuarantineVerdictParamNameType::~OAIPriceQuarantineVerdictParamNameType() {}

void OAIPriceQuarantineVerdictParamNameType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPriceQuarantineVerdictParamNameType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPriceQuarantineVerdictParamNameType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CURRENT_PRICE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPriceQuarantineVerdictParamNameType::CURRENT_PRICE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LAST_VALID_PRICE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPriceQuarantineVerdictParamNameType::LAST_VALID_PRICE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MIN_PRICE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPriceQuarantineVerdictParamNameType::MIN_PRICE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CURRENCY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPriceQuarantineVerdictParamNameType::CURRENCY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPriceQuarantineVerdictParamNameType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPriceQuarantineVerdictParamNameType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPriceQuarantineVerdictParamNameType::CURRENT_PRICE:
            val = "CURRENT_PRICE";
            break;
        case eOAIPriceQuarantineVerdictParamNameType::LAST_VALID_PRICE:
            val = "LAST_VALID_PRICE";
            break;
        case eOAIPriceQuarantineVerdictParamNameType::MIN_PRICE:
            val = "MIN_PRICE";
            break;
        case eOAIPriceQuarantineVerdictParamNameType::CURRENCY:
            val = "CURRENCY";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPriceQuarantineVerdictParamNameType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPriceQuarantineVerdictParamNameType::eOAIPriceQuarantineVerdictParamNameType OAIPriceQuarantineVerdictParamNameType::getValue() const {
    return m_value;
}

void OAIPriceQuarantineVerdictParamNameType::setValue(const OAIPriceQuarantineVerdictParamNameType::eOAIPriceQuarantineVerdictParamNameType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPriceQuarantineVerdictParamNameType::isSet() const {
    
    return m_value_isSet;
}

bool OAIPriceQuarantineVerdictParamNameType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
