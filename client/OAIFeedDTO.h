/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFeedDTO.h
 *
 * Информация о прайс-листе.
 */

#ifndef OAIFeedDTO_H
#define OAIFeedDTO_H

#include <QJsonObject>

#include "OAIFeedContentDTO.h"
#include "OAIFeedDownloadDTO.h"
#include "OAIFeedPlacementDTO.h"
#include "OAIFeedPublicationDTO.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFeedContentDTO;
class OAIFeedDownloadDTO;
class OAIFeedPlacementDTO;
class OAIFeedPublicationDTO;

class OAIFeedDTO : public OAIObject {
public:
    OAIFeedDTO();
    OAIFeedDTO(QString json);
    ~OAIFeedDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLogin() const;
    void setLogin(const QString &login);
    bool is_login_Set() const;
    bool is_login_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QDateTime getUploadDate() const;
    void setUploadDate(const QDateTime &upload_date);
    bool is_upload_date_Set() const;
    bool is_upload_date_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    OAIFeedContentDTO getContent() const;
    void setContent(const OAIFeedContentDTO &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    OAIFeedDownloadDTO getDownload() const;
    void setDownload(const OAIFeedDownloadDTO &download);
    bool is_download_Set() const;
    bool is_download_Valid() const;

    OAIFeedPlacementDTO getPlacement() const;
    void setPlacement(const OAIFeedPlacementDTO &placement);
    bool is_placement_Set() const;
    bool is_placement_Valid() const;

    OAIFeedPublicationDTO getPublication() const;
    void setPublication(const OAIFeedPublicationDTO &publication);
    bool is_publication_Set() const;
    bool is_publication_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_login;
    bool m_login_isSet;
    bool m_login_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QDateTime m_upload_date;
    bool m_upload_date_isSet;
    bool m_upload_date_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    OAIFeedContentDTO m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    OAIFeedDownloadDTO m_download;
    bool m_download_isSet;
    bool m_download_isValid;

    OAIFeedPlacementDTO m_placement;
    bool m_placement_isSet;
    bool m_placement_isValid;

    OAIFeedPublicationDTO m_publication;
    bool m_publication_isSet;
    bool m_publication_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFeedDTO)

#endif // OAIFeedDTO_H
