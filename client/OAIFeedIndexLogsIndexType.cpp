/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFeedIndexLogsIndexType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFeedIndexLogsIndexType::OAIFeedIndexLogsIndexType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFeedIndexLogsIndexType::OAIFeedIndexLogsIndexType() {
    this->initializeModel();
}

OAIFeedIndexLogsIndexType::~OAIFeedIndexLogsIndexType() {}

void OAIFeedIndexLogsIndexType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFeedIndexLogsIndexType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFeedIndexLogsIndexType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DIFF", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFeedIndexLogsIndexType::DIFF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAST_PRICE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFeedIndexLogsIndexType::FAST_PRICE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FULL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFeedIndexLogsIndexType::FULL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFeedIndexLogsIndexType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFeedIndexLogsIndexType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFeedIndexLogsIndexType::DIFF:
            val = "DIFF";
            break;
        case eOAIFeedIndexLogsIndexType::FAST_PRICE:
            val = "FAST_PRICE";
            break;
        case eOAIFeedIndexLogsIndexType::FULL:
            val = "FULL";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFeedIndexLogsIndexType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFeedIndexLogsIndexType::eOAIFeedIndexLogsIndexType OAIFeedIndexLogsIndexType::getValue() const {
    return m_value;
}

void OAIFeedIndexLogsIndexType::setValue(const OAIFeedIndexLogsIndexType::eOAIFeedIndexLogsIndexType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFeedIndexLogsIndexType::isSet() const {
    
    return m_value_isSet;
}

bool OAIFeedIndexLogsIndexType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
