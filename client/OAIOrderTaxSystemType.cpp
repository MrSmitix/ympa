/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderTaxSystemType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderTaxSystemType::OAIOrderTaxSystemType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderTaxSystemType::OAIOrderTaxSystemType() {
    this->initializeModel();
}

OAIOrderTaxSystemType::~OAIOrderTaxSystemType() {}

void OAIOrderTaxSystemType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIOrderTaxSystemType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIOrderTaxSystemType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("OSN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderTaxSystemType::OSN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("USN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderTaxSystemType::USN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("USN_MINUS_COST", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderTaxSystemType::USN_MINUS_COST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ENVD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderTaxSystemType::ENVD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ECHN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderTaxSystemType::ECHN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PSN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderTaxSystemType::PSN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NPD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderTaxSystemType::NPD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNKNOWN_VALUE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderTaxSystemType::UNKNOWN_VALUE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIOrderTaxSystemType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIOrderTaxSystemType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIOrderTaxSystemType::OSN:
            val = "OSN";
            break;
        case eOAIOrderTaxSystemType::USN:
            val = "USN";
            break;
        case eOAIOrderTaxSystemType::USN_MINUS_COST:
            val = "USN_MINUS_COST";
            break;
        case eOAIOrderTaxSystemType::ENVD:
            val = "ENVD";
            break;
        case eOAIOrderTaxSystemType::ECHN:
            val = "ECHN";
            break;
        case eOAIOrderTaxSystemType::PSN:
            val = "PSN";
            break;
        case eOAIOrderTaxSystemType::NPD:
            val = "NPD";
            break;
        case eOAIOrderTaxSystemType::UNKNOWN_VALUE:
            val = "UNKNOWN_VALUE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIOrderTaxSystemType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIOrderTaxSystemType::eOAIOrderTaxSystemType OAIOrderTaxSystemType::getValue() const {
    return m_value;
}

void OAIOrderTaxSystemType::setValue(const OAIOrderTaxSystemType::eOAIOrderTaxSystemType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIOrderTaxSystemType::isSet() const {
    
    return m_value_isSet;
}

bool OAIOrderTaxSystemType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
