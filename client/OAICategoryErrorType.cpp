/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICategoryErrorType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICategoryErrorType::OAICategoryErrorType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICategoryErrorType::OAICategoryErrorType() {
    this->initializeModel();
}

OAICategoryErrorType::~OAICategoryErrorType() {}

void OAICategoryErrorType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICategoryErrorType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICategoryErrorType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("UNKNOWN_CATEGORY", Qt::CaseInsensitive) == 0) {
        m_value = eOAICategoryErrorType::UNKNOWN_CATEGORY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CATEGORY_IS_NOT_LEAF", Qt::CaseInsensitive) == 0) {
        m_value = eOAICategoryErrorType::CATEGORY_IS_NOT_LEAF;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICategoryErrorType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICategoryErrorType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICategoryErrorType::UNKNOWN_CATEGORY:
            val = "UNKNOWN_CATEGORY";
            break;
        case eOAICategoryErrorType::CATEGORY_IS_NOT_LEAF:
            val = "CATEGORY_IS_NOT_LEAF";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICategoryErrorType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICategoryErrorType::eOAICategoryErrorType OAICategoryErrorType::getValue() const {
    return m_value;
}

void OAICategoryErrorType::setValue(const OAICategoryErrorType::eOAICategoryErrorType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICategoryErrorType::isSet() const {
    
    return m_value_isSet;
}

bool OAICategoryErrorType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
