/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetGoodsFeedbackRequest.h
 *
 * Фильтр запроса отзывов в кабинете. 
 */

#ifndef OAIGetGoodsFeedbackRequest_H
#define OAIGetGoodsFeedbackRequest_H

#include <QJsonObject>

#include "OAIFeedbackReactionStatusType.h"
#include <QDateTime>
#include <QSet>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetGoodsFeedbackRequest : public OAIObject {
public:
    OAIGetGoodsFeedbackRequest();
    OAIGetGoodsFeedbackRequest(QString json);
    ~OAIGetGoodsFeedbackRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getDateTimeFrom() const;
    void setDateTimeFrom(const QDateTime &date_time_from);
    bool is_date_time_from_Set() const;
    bool is_date_time_from_Valid() const;

    QDateTime getDateTimeTo() const;
    void setDateTimeTo(const QDateTime &date_time_to);
    bool is_date_time_to_Set() const;
    bool is_date_time_to_Valid() const;

    OAIFeedbackReactionStatusType getReactionStatus() const;
    void setReactionStatus(const OAIFeedbackReactionStatusType &reaction_status);
    bool is_reaction_status_Set() const;
    bool is_reaction_status_Valid() const;

    QSet<qint32> getRatingValues() const;
    void setRatingValues(const QSet<qint32> &rating_values);
    bool is_rating_values_Set() const;
    bool is_rating_values_Valid() const;

    QSet<qint64> getModelIds() const;
    void setModelIds(const QSet<qint64> &model_ids);
    bool is_model_ids_Set() const;
    bool is_model_ids_Valid() const;

    bool isPaid() const;
    void setPaid(const bool &paid);
    bool is_paid_Set() const;
    bool is_paid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_date_time_from;
    bool m_date_time_from_isSet;
    bool m_date_time_from_isValid;

    QDateTime m_date_time_to;
    bool m_date_time_to_isSet;
    bool m_date_time_to_isValid;

    OAIFeedbackReactionStatusType m_reaction_status;
    bool m_reaction_status_isSet;
    bool m_reaction_status_isValid;

    QSet<qint32> m_rating_values;
    bool m_rating_values_isSet;
    bool m_rating_values_isValid;

    QSet<qint64> m_model_ids;
    bool m_model_ids_isSet;
    bool m_model_ids_isValid;

    bool m_paid;
    bool m_paid_isSet;
    bool m_paid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetGoodsFeedbackRequest)

#endif // OAIGetGoodsFeedbackRequest_H
