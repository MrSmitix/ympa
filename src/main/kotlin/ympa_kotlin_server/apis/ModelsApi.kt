/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_kotlin_server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import ympa_kotlin_server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import ympa_kotlin_server.infrastructure.ApiPrincipal
import ympa_kotlin_server.models.ApiClientDataErrorResponse
import ympa_kotlin_server.models.ApiForbiddenErrorResponse
import ympa_kotlin_server.models.ApiLimitErrorResponse
import ympa_kotlin_server.models.ApiNotFoundErrorResponse
import ympa_kotlin_server.models.ApiServerErrorResponse
import ympa_kotlin_server.models.ApiUnauthorizedErrorResponse
import ympa_kotlin_server.models.CurrencyType
import ympa_kotlin_server.models.GetModelsOffersResponse
import ympa_kotlin_server.models.GetModelsRequest
import ympa_kotlin_server.models.GetModelsResponse
import ympa_kotlin_server.models.SearchModelsResponse
import ympa_kotlin_server.models.SortOrderType

fun Route.ModelsApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("OAuth") {
    get<Paths.getModel> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "models" : [ {
                "name" : "name",
                "id" : 0,
                "prices" : {
                  "avg" : 6.027456183070403,
                  "min" : 5.962133916683182,
                  "max" : 1.4658129805029452
                }
              }, {
                "name" : "name",
                "id" : 0,
                "prices" : {
                  "avg" : 6.027456183070403,
                  "min" : 5.962133916683182,
                  "max" : 1.4658129805029452
                }
              } ],
              "regionId" : 0,
              "currency" : "RUR"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    get<Paths.getModelOffers> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "models" : [ {
                "offers" : [ {
                  "shopRating" : 9,
                  "preDiscountPrice" : 5.962133916683182,
                  "shippingCost" : 7.061401241503109,
                  "pos" : 1,
                  "regionId" : 2,
                  "price" : 5.637376656633329,
                  "name" : "name",
                  "discount" : 6,
                  "shopName" : "shopName",
                  "inStock" : 3
                }, {
                  "shopRating" : 9,
                  "preDiscountPrice" : 5.962133916683182,
                  "shippingCost" : 7.061401241503109,
                  "pos" : 1,
                  "regionId" : 2,
                  "price" : 5.637376656633329,
                  "name" : "name",
                  "discount" : 6,
                  "shopName" : "shopName",
                  "inStock" : 3
                } ],
                "onlineOffers" : 4,
                "name" : "name",
                "id" : 0,
                "prices" : {
                  "avg" : 6.027456183070403,
                  "min" : 5.962133916683182,
                  "max" : 1.4658129805029452
                },
                "offlineOffers" : 2
              }, {
                "offers" : [ {
                  "shopRating" : 9,
                  "preDiscountPrice" : 5.962133916683182,
                  "shippingCost" : 7.061401241503109,
                  "pos" : 1,
                  "regionId" : 2,
                  "price" : 5.637376656633329,
                  "name" : "name",
                  "discount" : 6,
                  "shopName" : "shopName",
                  "inStock" : 3
                }, {
                  "shopRating" : 9,
                  "preDiscountPrice" : 5.962133916683182,
                  "shippingCost" : 7.061401241503109,
                  "pos" : 1,
                  "regionId" : 2,
                  "price" : 5.637376656633329,
                  "name" : "name",
                  "discount" : 6,
                  "shopName" : "shopName",
                  "inStock" : 3
                } ],
                "onlineOffers" : 4,
                "name" : "name",
                "id" : 0,
                "prices" : {
                  "avg" : 6.027456183070403,
                  "min" : 5.962133916683182,
                  "max" : 1.4658129805029452
                },
                "offlineOffers" : 2
              } ],
              "regionId" : 7,
              "currency" : "RUR"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    post<Paths.getModels> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "models" : [ {
                "name" : "name",
                "id" : 0,
                "prices" : {
                  "avg" : 6.027456183070403,
                  "min" : 5.962133916683182,
                  "max" : 1.4658129805029452
                }
              }, {
                "name" : "name",
                "id" : 0,
                "prices" : {
                  "avg" : 6.027456183070403,
                  "min" : 5.962133916683182,
                  "max" : 1.4658129805029452
                }
              } ],
              "regionId" : 0,
              "currency" : "RUR"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    post<Paths.getModelsOffers> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "models" : [ {
                "offers" : [ {
                  "shopRating" : 9,
                  "preDiscountPrice" : 5.962133916683182,
                  "shippingCost" : 7.061401241503109,
                  "pos" : 1,
                  "regionId" : 2,
                  "price" : 5.637376656633329,
                  "name" : "name",
                  "discount" : 6,
                  "shopName" : "shopName",
                  "inStock" : 3
                }, {
                  "shopRating" : 9,
                  "preDiscountPrice" : 5.962133916683182,
                  "shippingCost" : 7.061401241503109,
                  "pos" : 1,
                  "regionId" : 2,
                  "price" : 5.637376656633329,
                  "name" : "name",
                  "discount" : 6,
                  "shopName" : "shopName",
                  "inStock" : 3
                } ],
                "onlineOffers" : 4,
                "name" : "name",
                "id" : 0,
                "prices" : {
                  "avg" : 6.027456183070403,
                  "min" : 5.962133916683182,
                  "max" : 1.4658129805029452
                },
                "offlineOffers" : 2
              }, {
                "offers" : [ {
                  "shopRating" : 9,
                  "preDiscountPrice" : 5.962133916683182,
                  "shippingCost" : 7.061401241503109,
                  "pos" : 1,
                  "regionId" : 2,
                  "price" : 5.637376656633329,
                  "name" : "name",
                  "discount" : 6,
                  "shopName" : "shopName",
                  "inStock" : 3
                }, {
                  "shopRating" : 9,
                  "preDiscountPrice" : 5.962133916683182,
                  "shippingCost" : 7.061401241503109,
                  "pos" : 1,
                  "regionId" : 2,
                  "price" : 5.637376656633329,
                  "name" : "name",
                  "discount" : 6,
                  "shopName" : "shopName",
                  "inStock" : 3
                } ],
                "onlineOffers" : 4,
                "name" : "name",
                "id" : 0,
                "prices" : {
                  "avg" : 6.027456183070403,
                  "min" : 5.962133916683182,
                  "max" : 1.4658129805029452
                },
                "offlineOffers" : 2
              } ],
              "regionId" : 7,
              "currency" : "RUR"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    get<Paths.searchModels> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "models" : [ {
                "name" : "name",
                "id" : 0,
                "prices" : {
                  "avg" : 6.027456183070403,
                  "min" : 5.962133916683182,
                  "max" : 1.4658129805029452
                }
              }, {
                "name" : "name",
                "id" : 0,
                "prices" : {
                  "avg" : 6.027456183070403,
                  "min" : 5.962133916683182,
                  "max" : 1.4658129805029452
                }
              } ],
              "pager" : {
                "total" : 1,
                "pagesCount" : 7,
                "pageSize" : 9,
                "from" : 5,
                "to" : 5,
                "currentPage" : 2
              },
              "regionId" : 5,
              "currency" : "RUR"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
