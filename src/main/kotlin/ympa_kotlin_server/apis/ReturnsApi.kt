/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_kotlin_server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import ympa_kotlin_server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import ympa_kotlin_server.infrastructure.ApiPrincipal
import ympa_kotlin_server.models.ApiClientDataErrorResponse
import ympa_kotlin_server.models.ApiForbiddenErrorResponse
import ympa_kotlin_server.models.ApiLimitErrorResponse
import ympa_kotlin_server.models.ApiNotFoundErrorResponse
import ympa_kotlin_server.models.ApiServerErrorResponse
import ympa_kotlin_server.models.ApiUnauthorizedErrorResponse
import ympa_kotlin_server.models.EmptyApiResponse
import ympa_kotlin_server.models.GetReturnResponse
import ympa_kotlin_server.models.GetReturnsResponse
import ympa_kotlin_server.models.RefundStatusType
import ympa_kotlin_server.models.ReturnType
import ympa_kotlin_server.models.SetReturnDecisionRequest

fun Route.ReturnsApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("OAuth") {
    get<Paths.getReturn> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "result" : {
                "updateDate" : "2000-01-23T04:56:07.000+00:00",
                "fastReturn" : true,
                "orderId" : 6,
                "shipmentRecipientType" : "SHOP",
                "refundStatus" : "STARTED_BY_USER",
                "logisticPickupPoint" : {
                  "logisticPartnerId" : 5,
                  "address" : {
                    "country" : "Россия",
                    "city" : "Москва",
                    "street" : "Стрелецкая улица",
                    "postcode" : "123518",
                    "house" : "9к2"
                  },
                  "instruction" : "instruction",
                  "name" : "name",
                  "id" : 1,
                  "type" : "WAREHOUSE"
                },
                "id" : 0,
                "creationDate" : "2000-01-23T04:56:07.000+00:00",
                "items" : [ {
                  "shopSku" : "shopSku",
                  "instances" : [ {
                    "stockType" : "FIT",
                    "imei" : "imei",
                    "cis" : "cis",
                    "status" : "CREATED"
                  }, {
                    "stockType" : "FIT",
                    "imei" : "imei",
                    "cis" : "cis",
                    "status" : "CREATED"
                  } ],
                  "marketSku" : 2,
                  "count" : 7,
                  "decisions" : [ {
                    "images" : [ "images", "images" ],
                    "returnItemId" : 9,
                    "subreasonType" : "USER_DID_NOT_LIKE",
                    "count" : 3,
                    "comment" : "comment",
                    "decisionType" : "REFUND_MONEY",
                    "reasonType" : "BAD_QUALITY",
                    "partnerCompensation" : 4,
                    "refundAmount" : 2
                  }, {
                    "images" : [ "images", "images" ],
                    "returnItemId" : 9,
                    "subreasonType" : "USER_DID_NOT_LIKE",
                    "count" : 3,
                    "comment" : "comment",
                    "decisionType" : "REFUND_MONEY",
                    "reasonType" : "BAD_QUALITY",
                    "partnerCompensation" : 4,
                    "refundAmount" : 2
                  } ],
                  "tracks" : [ {
                    "trackCode" : "trackCode"
                  }, {
                    "trackCode" : "trackCode"
                  } ]
                }, {
                  "shopSku" : "shopSku",
                  "instances" : [ {
                    "stockType" : "FIT",
                    "imei" : "imei",
                    "cis" : "cis",
                    "status" : "CREATED"
                  }, {
                    "stockType" : "FIT",
                    "imei" : "imei",
                    "cis" : "cis",
                    "status" : "CREATED"
                  } ],
                  "marketSku" : 2,
                  "count" : 7,
                  "decisions" : [ {
                    "images" : [ "images", "images" ],
                    "returnItemId" : 9,
                    "subreasonType" : "USER_DID_NOT_LIKE",
                    "count" : 3,
                    "comment" : "comment",
                    "decisionType" : "REFUND_MONEY",
                    "reasonType" : "BAD_QUALITY",
                    "partnerCompensation" : 4,
                    "refundAmount" : 2
                  }, {
                    "images" : [ "images", "images" ],
                    "returnItemId" : 9,
                    "subreasonType" : "USER_DID_NOT_LIKE",
                    "count" : 3,
                    "comment" : "comment",
                    "decisionType" : "REFUND_MONEY",
                    "reasonType" : "BAD_QUALITY",
                    "partnerCompensation" : 4,
                    "refundAmount" : 2
                  } ],
                  "tracks" : [ {
                    "trackCode" : "trackCode"
                  }, {
                    "trackCode" : "trackCode"
                  } ]
                } ],
                "returnType" : "UNREDEEMED",
                "shipmentStatus" : "CREATED",
                "refundAmount" : 5
              },
              "status" : "OK"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    get<Paths.getReturnApplication> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "errors" : [ {
                "code" : "code",
                "message" : "message"
              }, {
                "code" : "code",
                "message" : "message"
              } ],
              "status" : "OK"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    get<Paths.getReturnPhoto> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "errors" : [ {
                "code" : "code",
                "message" : "message"
              }, {
                "code" : "code",
                "message" : "message"
              } ],
              "status" : "OK"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    get<Paths.getReturns> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "result" : {
                "paging" : {
                  "nextPageToken" : "nextPageToken"
                },
                "returns" : [ {
                  "updateDate" : "2000-01-23T04:56:07.000+00:00",
                  "fastReturn" : true,
                  "orderId" : 6,
                  "shipmentRecipientType" : "SHOP",
                  "refundStatus" : "STARTED_BY_USER",
                  "logisticPickupPoint" : {
                    "logisticPartnerId" : 5,
                    "address" : {
                      "country" : "Россия",
                      "city" : "Москва",
                      "street" : "Стрелецкая улица",
                      "postcode" : "123518",
                      "house" : "9к2"
                    },
                    "instruction" : "instruction",
                    "name" : "name",
                    "id" : 1,
                    "type" : "WAREHOUSE"
                  },
                  "id" : 0,
                  "creationDate" : "2000-01-23T04:56:07.000+00:00",
                  "items" : [ {
                    "shopSku" : "shopSku",
                    "instances" : [ {
                      "stockType" : "FIT",
                      "imei" : "imei",
                      "cis" : "cis",
                      "status" : "CREATED"
                    }, {
                      "stockType" : "FIT",
                      "imei" : "imei",
                      "cis" : "cis",
                      "status" : "CREATED"
                    } ],
                    "marketSku" : 2,
                    "count" : 7,
                    "decisions" : [ {
                      "images" : [ "images", "images" ],
                      "returnItemId" : 9,
                      "subreasonType" : "USER_DID_NOT_LIKE",
                      "count" : 3,
                      "comment" : "comment",
                      "decisionType" : "REFUND_MONEY",
                      "reasonType" : "BAD_QUALITY",
                      "partnerCompensation" : 4,
                      "refundAmount" : 2
                    }, {
                      "images" : [ "images", "images" ],
                      "returnItemId" : 9,
                      "subreasonType" : "USER_DID_NOT_LIKE",
                      "count" : 3,
                      "comment" : "comment",
                      "decisionType" : "REFUND_MONEY",
                      "reasonType" : "BAD_QUALITY",
                      "partnerCompensation" : 4,
                      "refundAmount" : 2
                    } ],
                    "tracks" : [ {
                      "trackCode" : "trackCode"
                    }, {
                      "trackCode" : "trackCode"
                    } ]
                  }, {
                    "shopSku" : "shopSku",
                    "instances" : [ {
                      "stockType" : "FIT",
                      "imei" : "imei",
                      "cis" : "cis",
                      "status" : "CREATED"
                    }, {
                      "stockType" : "FIT",
                      "imei" : "imei",
                      "cis" : "cis",
                      "status" : "CREATED"
                    } ],
                    "marketSku" : 2,
                    "count" : 7,
                    "decisions" : [ {
                      "images" : [ "images", "images" ],
                      "returnItemId" : 9,
                      "subreasonType" : "USER_DID_NOT_LIKE",
                      "count" : 3,
                      "comment" : "comment",
                      "decisionType" : "REFUND_MONEY",
                      "reasonType" : "BAD_QUALITY",
                      "partnerCompensation" : 4,
                      "refundAmount" : 2
                    }, {
                      "images" : [ "images", "images" ],
                      "returnItemId" : 9,
                      "subreasonType" : "USER_DID_NOT_LIKE",
                      "count" : 3,
                      "comment" : "comment",
                      "decisionType" : "REFUND_MONEY",
                      "reasonType" : "BAD_QUALITY",
                      "partnerCompensation" : 4,
                      "refundAmount" : 2
                    } ],
                    "tracks" : [ {
                      "trackCode" : "trackCode"
                    }, {
                      "trackCode" : "trackCode"
                    } ]
                  } ],
                  "returnType" : "UNREDEEMED",
                  "shipmentStatus" : "CREATED",
                  "refundAmount" : 5
                }, {
                  "updateDate" : "2000-01-23T04:56:07.000+00:00",
                  "fastReturn" : true,
                  "orderId" : 6,
                  "shipmentRecipientType" : "SHOP",
                  "refundStatus" : "STARTED_BY_USER",
                  "logisticPickupPoint" : {
                    "logisticPartnerId" : 5,
                    "address" : {
                      "country" : "Россия",
                      "city" : "Москва",
                      "street" : "Стрелецкая улица",
                      "postcode" : "123518",
                      "house" : "9к2"
                    },
                    "instruction" : "instruction",
                    "name" : "name",
                    "id" : 1,
                    "type" : "WAREHOUSE"
                  },
                  "id" : 0,
                  "creationDate" : "2000-01-23T04:56:07.000+00:00",
                  "items" : [ {
                    "shopSku" : "shopSku",
                    "instances" : [ {
                      "stockType" : "FIT",
                      "imei" : "imei",
                      "cis" : "cis",
                      "status" : "CREATED"
                    }, {
                      "stockType" : "FIT",
                      "imei" : "imei",
                      "cis" : "cis",
                      "status" : "CREATED"
                    } ],
                    "marketSku" : 2,
                    "count" : 7,
                    "decisions" : [ {
                      "images" : [ "images", "images" ],
                      "returnItemId" : 9,
                      "subreasonType" : "USER_DID_NOT_LIKE",
                      "count" : 3,
                      "comment" : "comment",
                      "decisionType" : "REFUND_MONEY",
                      "reasonType" : "BAD_QUALITY",
                      "partnerCompensation" : 4,
                      "refundAmount" : 2
                    }, {
                      "images" : [ "images", "images" ],
                      "returnItemId" : 9,
                      "subreasonType" : "USER_DID_NOT_LIKE",
                      "count" : 3,
                      "comment" : "comment",
                      "decisionType" : "REFUND_MONEY",
                      "reasonType" : "BAD_QUALITY",
                      "partnerCompensation" : 4,
                      "refundAmount" : 2
                    } ],
                    "tracks" : [ {
                      "trackCode" : "trackCode"
                    }, {
                      "trackCode" : "trackCode"
                    } ]
                  }, {
                    "shopSku" : "shopSku",
                    "instances" : [ {
                      "stockType" : "FIT",
                      "imei" : "imei",
                      "cis" : "cis",
                      "status" : "CREATED"
                    }, {
                      "stockType" : "FIT",
                      "imei" : "imei",
                      "cis" : "cis",
                      "status" : "CREATED"
                    } ],
                    "marketSku" : 2,
                    "count" : 7,
                    "decisions" : [ {
                      "images" : [ "images", "images" ],
                      "returnItemId" : 9,
                      "subreasonType" : "USER_DID_NOT_LIKE",
                      "count" : 3,
                      "comment" : "comment",
                      "decisionType" : "REFUND_MONEY",
                      "reasonType" : "BAD_QUALITY",
                      "partnerCompensation" : 4,
                      "refundAmount" : 2
                    }, {
                      "images" : [ "images", "images" ],
                      "returnItemId" : 9,
                      "subreasonType" : "USER_DID_NOT_LIKE",
                      "count" : 3,
                      "comment" : "comment",
                      "decisionType" : "REFUND_MONEY",
                      "reasonType" : "BAD_QUALITY",
                      "partnerCompensation" : 4,
                      "refundAmount" : 2
                    } ],
                    "tracks" : [ {
                      "trackCode" : "trackCode"
                    }, {
                      "trackCode" : "trackCode"
                    } ]
                  } ],
                  "returnType" : "UNREDEEMED",
                  "shipmentStatus" : "CREATED",
                  "refundAmount" : 5
                } ]
              },
              "status" : "OK"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    post<Paths.setReturnDecision> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "status" : "OK"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    post<Paths.submitReturnDecision> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "status" : "OK"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
