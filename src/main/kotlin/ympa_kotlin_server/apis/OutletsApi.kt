/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_kotlin_server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import ympa_kotlin_server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import ympa_kotlin_server.infrastructure.ApiPrincipal
import ympa_kotlin_server.models.ApiClientDataErrorResponse
import ympa_kotlin_server.models.ApiForbiddenErrorResponse
import ympa_kotlin_server.models.ApiLimitErrorResponse
import ympa_kotlin_server.models.ApiNotFoundErrorResponse
import ympa_kotlin_server.models.ApiServerErrorResponse
import ympa_kotlin_server.models.ApiUnauthorizedErrorResponse
import ympa_kotlin_server.models.ChangeOutletRequest
import ympa_kotlin_server.models.CreateOutletResponse
import ympa_kotlin_server.models.EmptyApiResponse
import ympa_kotlin_server.models.GetOutletResponse
import ympa_kotlin_server.models.GetOutletsResponse

fun Route.OutletsApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("OAuth") {
    post<Paths.createOutlet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "result" : {
                "id" : 0
              },
              "status" : "OK"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    delete<Paths.deleteOutlet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "status" : "OK"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    get<Paths.getOutlet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "outlet" : {
                "storagePeriod" : 9,
                "address" : {
                  "number" : "number",
                  "km" : 6,
                  "regionId" : 0,
                  "city" : "city",
                  "street" : "street",
                  "additional" : "additional",
                  "estate" : "estate",
                  "block" : "block",
                  "building" : "building"
                },
                "moderationReason" : "moderationReason",
                "visibility" : "HIDDEN",
                "isMain" : true,
                "phones" : [ "phones", "phones" ],
                "workingTime" : "workingTime",
                "type" : "DEPOT",
                "workingSchedule" : {
                  "scheduleItems" : [ {
                    "startDay" : "MONDAY",
                    "startTime" : "startTime",
                    "endTime" : "endTime"
                  }, {
                    "startDay" : "MONDAY",
                    "startTime" : "startTime",
                    "endTime" : "endTime"
                  } ],
                  "workInHoliday" : true
                },
                "shopOutletId" : "shopOutletId",
                "shopOutletCode" : "shopOutletCode",
                "name" : "name",
                "id" : 3,
                "region" : {
                  "children" : [ null, null ],
                  "name" : "name",
                  "id" : 0,
                  "type" : "OTHER"
                },
                "coords" : "coords",
                "deliveryRules" : [ {
                  "priceFreePickup" : 7.061401241503109,
                  "deliveryServiceId" : 5,
                  "maxDeliveryDays" : 5,
                  "minDeliveryDays" : 1,
                  "orderBefore" : 5,
                  "unspecifiedDeliveryInterval" : true
                }, {
                  "priceFreePickup" : 7.061401241503109,
                  "deliveryServiceId" : 5,
                  "maxDeliveryDays" : 5,
                  "minDeliveryDays" : 1,
                  "orderBefore" : 5,
                  "unspecifiedDeliveryInterval" : true
                } ],
                "status" : "AT_MODERATION"
              }
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    get<Paths.getOutlets> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "pager" : {
                "total" : 1,
                "pagesCount" : 7,
                "pageSize" : 9,
                "from" : 5,
                "to" : 5,
                "currentPage" : 2
              },
              "outlets" : [ {
                "storagePeriod" : 9,
                "address" : {
                  "number" : "number",
                  "km" : 6,
                  "regionId" : 0,
                  "city" : "city",
                  "street" : "street",
                  "additional" : "additional",
                  "estate" : "estate",
                  "block" : "block",
                  "building" : "building"
                },
                "moderationReason" : "moderationReason",
                "visibility" : "HIDDEN",
                "isMain" : true,
                "phones" : [ "phones", "phones" ],
                "workingTime" : "workingTime",
                "type" : "DEPOT",
                "workingSchedule" : {
                  "scheduleItems" : [ {
                    "startDay" : "MONDAY",
                    "startTime" : "startTime",
                    "endTime" : "endTime"
                  }, {
                    "startDay" : "MONDAY",
                    "startTime" : "startTime",
                    "endTime" : "endTime"
                  } ],
                  "workInHoliday" : true
                },
                "shopOutletId" : "shopOutletId",
                "shopOutletCode" : "shopOutletCode",
                "name" : "name",
                "id" : 3,
                "region" : {
                  "children" : [ null, null ],
                  "name" : "name",
                  "id" : 0,
                  "type" : "OTHER"
                },
                "coords" : "coords",
                "deliveryRules" : [ {
                  "priceFreePickup" : 7.061401241503109,
                  "deliveryServiceId" : 5,
                  "maxDeliveryDays" : 5,
                  "minDeliveryDays" : 1,
                  "orderBefore" : 5,
                  "unspecifiedDeliveryInterval" : true
                }, {
                  "priceFreePickup" : 7.061401241503109,
                  "deliveryServiceId" : 5,
                  "maxDeliveryDays" : 5,
                  "minDeliveryDays" : 1,
                  "orderBefore" : 5,
                  "unspecifiedDeliveryInterval" : true
                } ],
                "status" : "AT_MODERATION"
              }, {
                "storagePeriod" : 9,
                "address" : {
                  "number" : "number",
                  "km" : 6,
                  "regionId" : 0,
                  "city" : "city",
                  "street" : "street",
                  "additional" : "additional",
                  "estate" : "estate",
                  "block" : "block",
                  "building" : "building"
                },
                "moderationReason" : "moderationReason",
                "visibility" : "HIDDEN",
                "isMain" : true,
                "phones" : [ "phones", "phones" ],
                "workingTime" : "workingTime",
                "type" : "DEPOT",
                "workingSchedule" : {
                  "scheduleItems" : [ {
                    "startDay" : "MONDAY",
                    "startTime" : "startTime",
                    "endTime" : "endTime"
                  }, {
                    "startDay" : "MONDAY",
                    "startTime" : "startTime",
                    "endTime" : "endTime"
                  } ],
                  "workInHoliday" : true
                },
                "shopOutletId" : "shopOutletId",
                "shopOutletCode" : "shopOutletCode",
                "name" : "name",
                "id" : 3,
                "region" : {
                  "children" : [ null, null ],
                  "name" : "name",
                  "id" : 0,
                  "type" : "OTHER"
                },
                "coords" : "coords",
                "deliveryRules" : [ {
                  "priceFreePickup" : 7.061401241503109,
                  "deliveryServiceId" : 5,
                  "maxDeliveryDays" : 5,
                  "minDeliveryDays" : 1,
                  "orderBefore" : 5,
                  "unspecifiedDeliveryInterval" : true
                }, {
                  "priceFreePickup" : 7.061401241503109,
                  "deliveryServiceId" : 5,
                  "maxDeliveryDays" : 5,
                  "minDeliveryDays" : 1,
                  "orderBefore" : 5,
                  "unspecifiedDeliveryInterval" : true
                } ],
                "status" : "AT_MODERATION"
              } ],
              "paging" : {
                "prevPageToken" : "prevPageToken",
                "nextPageToken" : "nextPageToken"
              }
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    put<Paths.updateOutlet> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "status" : "OK"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
