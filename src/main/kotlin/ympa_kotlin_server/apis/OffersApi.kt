/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_kotlin_server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import ympa_kotlin_server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import ympa_kotlin_server.infrastructure.ApiPrincipal
import ympa_kotlin_server.models.ApiClientDataErrorResponse
import ympa_kotlin_server.models.ApiForbiddenErrorResponse
import ympa_kotlin_server.models.ApiLimitErrorResponse
import ympa_kotlin_server.models.ApiLockedErrorResponse
import ympa_kotlin_server.models.ApiNotFoundErrorResponse
import ympa_kotlin_server.models.ApiServerErrorResponse
import ympa_kotlin_server.models.ApiUnauthorizedErrorResponse
import ympa_kotlin_server.models.CurrencyType
import ympa_kotlin_server.models.DeleteCampaignOffersRequest
import ympa_kotlin_server.models.DeleteCampaignOffersResponse
import ympa_kotlin_server.models.EmptyApiResponse
import ympa_kotlin_server.models.GetAllOffersResponse
import ympa_kotlin_server.models.GetCampaignOffersRequest
import ympa_kotlin_server.models.GetCampaignOffersResponse
import ympa_kotlin_server.models.GetOfferRecommendationsRequest
import ympa_kotlin_server.models.GetOfferRecommendationsResponse
import ympa_kotlin_server.models.GetOffersResponse
import ympa_kotlin_server.models.UpdateCampaignOffersRequest

fun Route.OffersApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("OAuth") {
    post<Paths.deleteCampaignOffers> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "result" : {
                "notDeletedOfferIds" : [ null, null ]
              },
              "status" : "OK"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    get<Paths.getAllOffers> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "offers" : [ {
                "marketCategoryId" : 1,
                "preDiscountPrice" : 5.962133916683182,
                "shopCategoryId" : "shopCategoryId",
                "modelId" : 2,
                "fee" : 3.616076749251911,
                "discount" : 5,
                "url" : "url",
                "cbid" : 9.301444243932576,
                "blocked" : true,
                "feedId" : 6,
                "price" : 0.8008281904610115,
                "name" : "name",
                "currency" : "RUR",
                "id" : "id",
                "cutPrice" : true,
                "bid" : 7.061401241503109
              }, {
                "marketCategoryId" : 1,
                "preDiscountPrice" : 5.962133916683182,
                "shopCategoryId" : "shopCategoryId",
                "modelId" : 2,
                "fee" : 3.616076749251911,
                "discount" : 5,
                "url" : "url",
                "cbid" : 9.301444243932576,
                "blocked" : true,
                "feedId" : 6,
                "price" : 0.8008281904610115,
                "name" : "name",
                "currency" : "RUR",
                "id" : "id",
                "cutPrice" : true,
                "bid" : 7.061401241503109
              } ]
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    post<Paths.getCampaignOffers> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "result" : {
                "offers" : [ {
                  "campaignPrice" : {
                    "vat" : 5,
                    "discountBase" : 5.962133916683182,
                    "currencyId" : "RUR",
                    "value" : 1.4658129805029452,
                    "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                  },
                  "basicPrice" : {
                    "discountBase" : 0.23021358869347652,
                    "currencyId" : "RUR",
                    "value" : 0.5637376656633328,
                    "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                  },
                  "warnings" : [ {
                    "comment" : "comment",
                    "message" : "message"
                  }, {
                    "comment" : "comment",
                    "message" : "message"
                  } ],
                  "available" : true,
                  "offerId" : "offerId",
                  "quantum" : {
                    "minQuantity" : 1,
                    "stepQuantity" : 60
                  },
                  "errors" : [ {
                    "comment" : "comment",
                    "message" : "message"
                  }, {
                    "comment" : "comment",
                    "message" : "message"
                  } ],
                  "status" : "PUBLISHED"
                }, {
                  "campaignPrice" : {
                    "vat" : 5,
                    "discountBase" : 5.962133916683182,
                    "currencyId" : "RUR",
                    "value" : 1.4658129805029452,
                    "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                  },
                  "basicPrice" : {
                    "discountBase" : 0.23021358869347652,
                    "currencyId" : "RUR",
                    "value" : 0.5637376656633328,
                    "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                  },
                  "warnings" : [ {
                    "comment" : "comment",
                    "message" : "message"
                  }, {
                    "comment" : "comment",
                    "message" : "message"
                  } ],
                  "available" : true,
                  "offerId" : "offerId",
                  "quantum" : {
                    "minQuantity" : 1,
                    "stepQuantity" : 60
                  },
                  "errors" : [ {
                    "comment" : "comment",
                    "message" : "message"
                  }, {
                    "comment" : "comment",
                    "message" : "message"
                  } ],
                  "status" : "PUBLISHED"
                } ],
                "paging" : {
                  "prevPageToken" : "prevPageToken",
                  "nextPageToken" : "nextPageToken"
                }
              },
              "status" : "OK"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    post<Paths.getOfferRecommendations> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "result" : {
                "paging" : {
                  "prevPageToken" : "prevPageToken",
                  "nextPageToken" : "nextPageToken"
                },
                "offerRecommendations" : [ {
                  "offer" : {
                    "shows" : 0,
                    "price" : {
                      "value" : 0.9301444243932576
                    },
                    "offerId" : "offerId",
                    "competitiveness" : "OPTIMAL",
                    "cofinancePrice" : {
                      "value" : 0.7061401241503109,
                      "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                    }
                  },
                  "recommendation" : {
                    "recommendedCofinancePrice" : {
                      "value" : 0.9301444243932576
                    },
                    "offerId" : "offerId",
                    "competitivenessThresholds" : {
                      "optimalPrice" : {
                        "value" : 0.9301444243932576
                      },
                      "averagePrice" : {
                        "value" : 0.9301444243932576
                      }
                    }
                  }
                }, {
                  "offer" : {
                    "shows" : 0,
                    "price" : {
                      "value" : 0.9301444243932576
                    },
                    "offerId" : "offerId",
                    "competitiveness" : "OPTIMAL",
                    "cofinancePrice" : {
                      "value" : 0.7061401241503109,
                      "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                    }
                  },
                  "recommendation" : {
                    "recommendedCofinancePrice" : {
                      "value" : 0.9301444243932576
                    },
                    "offerId" : "offerId",
                    "competitivenessThresholds" : {
                      "optimalPrice" : {
                        "value" : 0.9301444243932576
                      },
                      "averagePrice" : {
                        "value" : 0.9301444243932576
                      }
                    }
                  }
                } ]
              },
              "status" : "OK"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    get<Paths.getOffers> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "offers" : [ {
                "marketCategoryId" : 1,
                "preDiscountPrice" : 5.962133916683182,
                "shopCategoryId" : "shopCategoryId",
                "modelId" : 2,
                "fee" : 3.616076749251911,
                "discount" : 5,
                "url" : "url",
                "cbid" : 9.301444243932576,
                "blocked" : true,
                "feedId" : 6,
                "price" : 0.8008281904610115,
                "name" : "name",
                "currency" : "RUR",
                "id" : "id",
                "cutPrice" : true,
                "bid" : 7.061401241503109
              }, {
                "marketCategoryId" : 1,
                "preDiscountPrice" : 5.962133916683182,
                "shopCategoryId" : "shopCategoryId",
                "modelId" : 2,
                "fee" : 3.616076749251911,
                "discount" : 5,
                "url" : "url",
                "cbid" : 9.301444243932576,
                "blocked" : true,
                "feedId" : 6,
                "price" : 0.8008281904610115,
                "name" : "name",
                "currency" : "RUR",
                "id" : "id",
                "cutPrice" : true,
                "bid" : 7.061401241503109
              } ],
              "pager" : {
                "total" : 1,
                "pagesCount" : 7,
                "pageSize" : 9,
                "from" : 5,
                "to" : 5,
                "currentPage" : 2
              }
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    post<Paths.updateCampaignOffers> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "status" : "OK"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
