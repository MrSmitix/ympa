/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_kotlin_server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import ympa_kotlin_server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import ympa_kotlin_server.infrastructure.ApiPrincipal
import ympa_kotlin_server.models.ApiClientDataErrorResponse
import ympa_kotlin_server.models.ApiForbiddenErrorResponse
import ympa_kotlin_server.models.ApiLimitErrorResponse
import ympa_kotlin_server.models.ApiLockedErrorResponse
import ympa_kotlin_server.models.ApiNotFoundErrorResponse
import ympa_kotlin_server.models.ApiServerErrorResponse
import ympa_kotlin_server.models.ApiUnauthorizedErrorResponse
import ympa_kotlin_server.models.EmptyApiResponse
import ympa_kotlin_server.models.GetPricesByOfferIdsRequest
import ympa_kotlin_server.models.GetPricesByOfferIdsResponse
import ympa_kotlin_server.models.GetPricesResponse
import ympa_kotlin_server.models.SuggestPricesRequest
import ympa_kotlin_server.models.SuggestPricesResponse
import ympa_kotlin_server.models.UpdateBusinessPricesRequest
import ympa_kotlin_server.models.UpdatePricesRequest

fun Route.PricesApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("OAuth") {
    get<Paths.getPrices> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "result" : {
                "offers" : [ {
                  "price" : {
                    "vat" : 1,
                    "discountBase" : 6.027456183070403,
                    "currencyId" : "RUR",
                    "value" : 0.8008281904610115
                  },
                  "marketSku" : 0,
                  "id" : "id",
                  "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                }, {
                  "price" : {
                    "vat" : 1,
                    "discountBase" : 6.027456183070403,
                    "currencyId" : "RUR",
                    "value" : 0.8008281904610115
                  },
                  "marketSku" : 0,
                  "id" : "id",
                  "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                } ],
                "total" : 6,
                "paging" : {
                  "prevPageToken" : "prevPageToken",
                  "nextPageToken" : "nextPageToken"
                }
              },
              "status" : "OK"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    post<Paths.getPricesByOfferIds> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "result" : {
                "offers" : [ {
                  "price" : {
                    "vat" : 1,
                    "discountBase" : 6.027456183070403,
                    "currencyId" : "RUR",
                    "value" : 0.8008281904610115
                  },
                  "offerId" : "offerId",
                  "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                }, {
                  "price" : {
                    "vat" : 1,
                    "discountBase" : 6.027456183070403,
                    "currencyId" : "RUR",
                    "value" : 0.8008281904610115
                  },
                  "offerId" : "offerId",
                  "updatedAt" : "2000-01-23T04:56:07.000+00:00"
                } ],
                "paging" : {
                  "prevPageToken" : "prevPageToken",
                  "nextPageToken" : "nextPageToken"
                }
              },
              "status" : "OK"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    post<Paths.getSuggestedPrices> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "result" : {
                "offers" : [ {
                  "marketSku" : 0,
                  "offerId" : "offerId",
                  "priceSuggestion" : [ {
                    "price" : 6.027456183070403,
                    "type" : "BUYBOX"
                  }, {
                    "price" : 6.027456183070403,
                    "type" : "BUYBOX"
                  } ]
                }, {
                  "marketSku" : 0,
                  "offerId" : "offerId",
                  "priceSuggestion" : [ {
                    "price" : 6.027456183070403,
                    "type" : "BUYBOX"
                  }, {
                    "price" : 6.027456183070403,
                    "type" : "BUYBOX"
                  } ]
                } ]
              },
              "status" : "OK"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    post<Paths.updateBusinessPrices> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "status" : "OK"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

    authenticate("OAuth") {
    post<Paths.updatePrices> {
        
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "status" : "OK"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
        
    }
    }

}
