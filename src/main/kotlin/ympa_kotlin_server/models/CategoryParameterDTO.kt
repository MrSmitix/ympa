/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_kotlin_server.models

import ympa_kotlin_server.models.CategoryParameterUnitDTO
import ympa_kotlin_server.models.OfferCardRecommendationType
import ympa_kotlin_server.models.ParameterType
import ympa_kotlin_server.models.ParameterValueConstraintsDTO
import ympa_kotlin_server.models.ParameterValueOptionDTO
import ympa_kotlin_server.models.ValueRestrictionDTO

/**
 * Характеристика товара.
 * @param id Идентификатор характеристики.
 * @param type 
 * @param required Обязательность характеристики.
 * @param filtering Используется ли характеристика в фильтре.
 * @param distinctive Является ли характеристика особенностью варианта.
 * @param multivalue Можно ли передать сразу несколько значений.
 * @param allowCustomValues Можно ли передавать собственное значение, которого нет в списке вариантов Маркета. Только для характеристик типа `ENUM`.
 * @param name Название характеристики.
 * @param unit 
 * @param description Описание характеристики.
 * @param recommendationTypes Перечень возможных рекомендаций по заполнению карточки, к которым относится данная характеристика.
 * @param propertyValues Список допустимых значений параметра. Только для характеристик типа `ENUM`.
 * @param constraints 
 * @param valueRestrictions Ограничения на значения, накладываемые другими характеристиками. Только для характеристик типа `ENUM`.
 */
data class CategoryParameterDTO(
    /* Идентификатор характеристики. */
    val id: kotlin.Long,
    val type: ParameterType,
    /* Обязательность характеристики. */
    val required: kotlin.Boolean,
    /* Используется ли характеристика в фильтре. */
    val filtering: kotlin.Boolean,
    /* Является ли характеристика особенностью варианта. */
    val distinctive: kotlin.Boolean,
    /* Можно ли передать сразу несколько значений. */
    val multivalue: kotlin.Boolean,
    /* Можно ли передавать собственное значение, которого нет в списке вариантов Маркета. Только для характеристик типа `ENUM`. */
    val allowCustomValues: kotlin.Boolean,
    /* Название характеристики. */
    val name: kotlin.String? = null,
    val unit: CategoryParameterUnitDTO? = null,
    /* Описание характеристики. */
    val description: kotlin.String? = null,
    /* Перечень возможных рекомендаций по заполнению карточки, к которым относится данная характеристика. */
    val recommendationTypes: kotlin.collections.List<OfferCardRecommendationType>? = null,
    /* Список допустимых значений параметра. Только для характеристик типа `ENUM`. */
    val propertyValues: kotlin.collections.List<ParameterValueOptionDTO>? = null,
    val constraints: ParameterValueConstraintsDTO? = null,
    /* Ограничения на значения, накладываемые другими характеристиками. Только для характеристик типа `ENUM`. */
    val valueRestrictions: kotlin.collections.List<ValueRestrictionDTO>? = null
) 

