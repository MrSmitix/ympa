/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_kotlin_server.models


/**
 * Адрес точки продаж. 
 * @param regionId Идентификатор региона.  Идентификатор можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).  {% note alert %}  При создании и редактировании точек продаж можно указывать только регионы типов `TOWN` (город), `CITY` (крупный город) и `REPUBLIC_AREA` (район субъекта федерации). Тип региона указан в выходных параметрах type запросов [GET regions](../../reference/regions/searchRegionsByName.md) и [GET regions/{regionId}](../../reference/regions/searchRegionsById.md).  {% endnote %} 
 * @param street Улица.
 * @param number Номер дома.
 * @param building Номер строения.
 * @param estate Номер владения.
 * @param block Номер корпуса.
 * @param additional Дополнительная информация.
 * @param km Порядковый номер километра дороги, на котором располагается точка продаж, если отсутствует улица.
 * @param city {% note warning \"\" %}  Этот параметр устарел. Не используйте его. Город или населенный пункт возвращается в параметре `regionId`.  {% endnote %} 
 */
data class OutletAddressDTO(
    /* Идентификатор региона.  Идентификатор можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).  {% note alert %}  При создании и редактировании точек продаж можно указывать только регионы типов `TOWN` (город), `CITY` (крупный город) и `REPUBLIC_AREA` (район субъекта федерации). Тип региона указан в выходных параметрах type запросов [GET regions](../../reference/regions/searchRegionsByName.md) и [GET regions/{regionId}](../../reference/regions/searchRegionsById.md).  {% endnote %}  */
    val regionId: kotlin.Long,
    /* Улица. */
    val street: kotlin.String? = null,
    /* Номер дома. */
    val number: kotlin.String? = null,
    /* Номер строения. */
    val building: kotlin.String? = null,
    /* Номер владения. */
    val estate: kotlin.String? = null,
    /* Номер корпуса. */
    val block: kotlin.String? = null,
    /* Дополнительная информация. */
    val additional: kotlin.String? = null,
    /* Порядковый номер километра дороги, на котором располагается точка продаж, если отсутствует улица. */
    val km: kotlin.Int? = null,
    /* {% note warning \"\" %}  Этот параметр устарел. Не используйте его. Город или населенный пункт возвращается в параметре `regionId`.  {% endnote %}  */
    val city: kotlin.String? = null
) 

