/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_kotlin_server.models


/**
 * Информация о ярлыке для коробки.
 * @param url Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label](../../reference/orders/generateOrderLabel.md). 
 * @param supplierName Юридическое название магазина.
 * @param deliveryServiceName Юридическое название службы доставки.
 * @param orderId Идентификатор заказа в системе Маркета.
 * @param orderNum Идентификатор заказа в информационной системе магазина.  Совпадает с `orderId`, если Маркету неизвестен номер заказа в системе магазина. 
 * @param recipientName Фамилия и инициалы получателя заказа.
 * @param boxId Идентификатор коробки.
 * @param fulfilmentId Идентификатор коробки в информационной системе магазина.  Возвращается в формате: `номер заказа на Маркете-номер коробки`. Например, `7206821‑1`, `7206821‑2` и т. д. 
 * @param place Номер коробки в заказе. Возвращается в формате: `номер места/общее количество мест`. 
 * @param weight {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Общая масса всех товаров в заказе. Возвращается в формате: `weight кг`. 
 * @param deliveryServiceId Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).
 * @param deliveryAddress Адрес получателя.
 * @param shipmentDate Дата отгрузки в формате `dd.MM.yyyy`.
 */
data class ParcelBoxLabelDTO(
    /* Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label](../../reference/orders/generateOrderLabel.md).  */
    val url: kotlin.String,
    /* Юридическое название магазина. */
    val supplierName: kotlin.String,
    /* Юридическое название службы доставки. */
    val deliveryServiceName: kotlin.String,
    /* Идентификатор заказа в системе Маркета. */
    val orderId: kotlin.Long,
    /* Идентификатор заказа в информационной системе магазина.  Совпадает с `orderId`, если Маркету неизвестен номер заказа в системе магазина.  */
    val orderNum: kotlin.String,
    /* Фамилия и инициалы получателя заказа. */
    val recipientName: kotlin.String,
    /* Идентификатор коробки. */
    val boxId: kotlin.Long,
    /* Идентификатор коробки в информационной системе магазина.  Возвращается в формате: `номер заказа на Маркете-номер коробки`. Например, `7206821‑1`, `7206821‑2` и т. д.  */
    val fulfilmentId: kotlin.String,
    /* Номер коробки в заказе. Возвращается в формате: `номер места/общее количество мест`.  */
    val place: kotlin.String,
    /* {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Общая масса всех товаров в заказе. Возвращается в формате: `weight кг`.  */
    val weight: kotlin.String,
    /* Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md). */
    val deliveryServiceId: kotlin.String,
    /* Адрес получателя. */
    val deliveryAddress: kotlin.String? = null,
    /* Дата отгрузки в формате `dd.MM.yyyy`. */
    val shipmentDate: kotlin.String? = null
) 

