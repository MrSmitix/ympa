/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_kotlin_server.models


/**
 * Параметры товара, для которого нужно рассчитать стоимость услуг.
 * @param categoryId Идентификатор категории товара на Маркете.  Для расчета стоимости услуг необходимо указать идентификатор листовой категории товара — той, которая не имеет дочерних категорий.  Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md). 
 * @param price Цена на товар в рублях.
 * @param length Длина товара в сантиметрах.
 * @param width Ширина товара в сантиметрах.
 * @param height Высота товара в сантиметрах.
 * @param weight Вес товара в килограммах.
 * @param quantity Квант продажи — количество единиц товара в одном товарном предложении.
 */
data class CalculateTariffsOfferDTO(
    /* Идентификатор категории товара на Маркете.  Для расчета стоимости услуг необходимо указать идентификатор листовой категории товара — той, которая не имеет дочерних категорий.  Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).  */
    val categoryId: kotlin.Long,
    /* Цена на товар в рублях. */
    val price: java.math.BigDecimal,
    /* Длина товара в сантиметрах. */
    val length: java.math.BigDecimal,
    /* Ширина товара в сантиметрах. */
    val width: java.math.BigDecimal,
    /* Высота товара в сантиметрах. */
    val height: java.math.BigDecimal,
    /* Вес товара в килограммах. */
    val weight: java.math.BigDecimal,
    /* Квант продажи — количество единиц товара в одном товарном предложении. */
    val quantity: kotlin.Int? = 1
) 

