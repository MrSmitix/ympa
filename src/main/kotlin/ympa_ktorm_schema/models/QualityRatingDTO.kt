/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Информация об индексе качества.
 * @param rating Значение индекса качества.
 * @param calculationDate Дата вычисления.  Формат даты: `ГГГГ‑ММ‑ДД`. 
 * @param components Составляющие индекса качества.
 */
object QualityRatingDTOs : BaseTable<QualityRatingDTO>("QualityRatingDTO") {
    val rating = long("rating") /* Значение индекса качества. */
    val calculationDate = date("calculationDate") /* Дата вычисления.  Формат даты: `ГГГГ‑ММ‑ДД`.  */

    /**
     * Create an entity of type QualityRatingDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = QualityRatingDTO(
        rating = row[rating] ?: 0 /* kotlin.Long */ /* Значение индекса качества. */,
        calculationDate = row[calculationDate] /* java.time.LocalDate */ /* Дата вычисления.  Формат даты: `ГГГГ‑ММ‑ДД`.  */,
        components = emptyList() /* kotlin.Array<QualityRatingComponentDTO> */ /* Составляющие индекса качества. */
    )

    /**
    * Assign all the columns from the entity of type QualityRatingDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = QualityRatingDTO()
    * database.update(QualityRatingDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: QualityRatingDTO) {
        this.apply {
            set(QualityRatingDTOs.rating, entity.rating)
            set(QualityRatingDTOs.calculationDate, entity.calculationDate)
        }
    }

}


object QualityRatingDTOQualityRatingComponentDTO : BaseTable<Pair<kotlin.Long, kotlin.Long>>("QualityRatingDTOQualityRatingComponentDTO") {
    val qualityRatingDTO = long("qualityRatingDTO")
    val qualityRatingComponentDTO = long("qualityRatingComponentDTO")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[qualityRatingDTO] ?: 0, row[qualityRatingComponentDTO] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(QualityRatingDTOQualityRatingComponentDTO.qualityRatingDTO, entity.first)
            set(QualityRatingDTOQualityRatingComponentDTO.qualityRatingComponentDTO, entity.second)
        }
    }

}

