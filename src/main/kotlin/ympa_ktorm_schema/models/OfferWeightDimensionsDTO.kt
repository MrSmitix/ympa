/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Габариты упаковки и вес товара.  Если товар занимает несколько коробок, перед измерением размеров сложите их компактно.  ![Схема измерения многоместных грузов](../../_images/reference/boxes-measure.png) 
 * @param length Длина упаковки в см. 
 * @param width Ширина упаковки в см. 
 * @param height Высота упаковки в см. 
 * @param weight Вес товара в кг с учетом упаковки (брутто). 
 */
object OfferWeightDimensionsDTOs : BaseTable<OfferWeightDimensionsDTO>("OfferWeightDimensionsDTO") {
    val length = decimal("length") /* Длина упаковки в см.  */
    val width = decimal("width") /* Ширина упаковки в см.  */
    val height = decimal("height") /* Высота упаковки в см.  */
    val weight = decimal("weight") /* Вес товара в кг с учетом упаковки (брутто).  */

    /**
     * Create an entity of type OfferWeightDimensionsDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = OfferWeightDimensionsDTO(
        length = row[length] ?: 0 /* java.math.BigDecimal */ /* Длина упаковки в см.  */,
        width = row[width] ?: 0 /* java.math.BigDecimal */ /* Ширина упаковки в см.  */,
        height = row[height] ?: 0 /* java.math.BigDecimal */ /* Высота упаковки в см.  */,
        weight = row[weight] ?: 0 /* java.math.BigDecimal */ /* Вес товара в кг с учетом упаковки (брутто).  */
    )

    /**
    * Assign all the columns from the entity of type OfferWeightDimensionsDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = OfferWeightDimensionsDTO()
    * database.update(OfferWeightDimensionsDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: OfferWeightDimensionsDTO) {
        this.apply {
            set(OfferWeightDimensionsDTOs.length, entity.length)
            set(OfferWeightDimensionsDTOs.width, entity.width)
            set(OfferWeightDimensionsDTOs.height, entity.height)
            set(OfferWeightDimensionsDTOs.weight, entity.weight)
        }
    }

}


