/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Результат выполнения запроса.
 * @param verificationResult 
 * @param attemptsLeft Количество оставшихся попыток проверки кода.  Возвращается, если магазин отправил некорректный код.  Когда все попытки будут исчерпаны, код обновится. 
 */
object EacVerificationResultDTOs : BaseTable<EacVerificationResultDTO>("EacVerificationResultDTO") {
    val verificationResult = long("verificationResult") /* null */
    val attemptsLeft = int("attemptsLeft") /* null */ /* Количество оставшихся попыток проверки кода.  Возвращается, если магазин отправил некорректный код.  Когда все попытки будут исчерпаны, код обновится.  */

    /**
     * Create an entity of type EacVerificationResultDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = EacVerificationResultDTO(
        verificationResult = EacVerificationStatusTypes.createEntity(row, withReferences) /* EacVerificationStatusType? */,
        attemptsLeft = row[attemptsLeft]  /* kotlin.Int? */ /* Количество оставшихся попыток проверки кода.  Возвращается, если магазин отправил некорректный код.  Когда все попытки будут исчерпаны, код обновится.  */
    )

    /**
    * Assign all the columns from the entity of type EacVerificationResultDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = EacVerificationResultDTO()
    * database.update(EacVerificationResultDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: EacVerificationResultDTO) {
        this.apply {
            set(EacVerificationResultDTOs.verificationResult, entity.verificationResult)
            set(EacVerificationResultDTOs.attemptsLeft, entity.attemptsLeft)
        }
    }

}


