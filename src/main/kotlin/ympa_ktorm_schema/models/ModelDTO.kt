/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Модель товара.
 * @param id Идентификатор модели товара.
 * @param name Название модели товара.
 * @param prices 
 */
object ModelDTOs : BaseTable<ModelDTO>("ModelDTO") {
    val id = long("id") /* null */ /* Идентификатор модели товара. */
    val name = text("name") /* null */ /* Название модели товара. */
    val prices = long("prices") /* null */

    /**
     * Create an entity of type ModelDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = ModelDTO(
        id = row[id]  /* kotlin.Long? */ /* Идентификатор модели товара. */,
        name = row[name]  /* kotlin.String? */ /* Название модели товара. */,
        prices = ModelPriceDTOs.createEntity(row, withReferences) /* ModelPriceDTO? */
    )

    /**
    * Assign all the columns from the entity of type ModelDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = ModelDTO()
    * database.update(ModelDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: ModelDTO) {
        this.apply {
            set(ModelDTOs.id, entity.id)
            set(ModelDTOs.name, entity.name)
            set(ModelDTOs.prices, entity.prices)
        }
    }

}


