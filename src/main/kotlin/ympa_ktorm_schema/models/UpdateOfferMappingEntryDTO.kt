/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Список товаров.  В теле запроса можно передать от одного до 500 товаров.  Обязательный параметр. 
 * @param mapping 
 * @param awaitingModerationMapping 
 * @param rejectedMapping 
 * @param offer 
 */
object UpdateOfferMappingEntryDTOs : BaseTable<UpdateOfferMappingEntryDTO>("UpdateOfferMappingEntryDTO") {
    val mapping = long("mapping") /* null */
    val awaitingModerationMapping = long("awaitingModerationMapping") /* null */
    val rejectedMapping = long("rejectedMapping") /* null */
    val offer = long("offer") /* null */

    /**
     * Create an entity of type UpdateOfferMappingEntryDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = UpdateOfferMappingEntryDTO(
        mapping = OfferMappingDTOs.createEntity(row, withReferences) /* OfferMappingDTO? */,
        awaitingModerationMapping = OfferMappingDTOs.createEntity(row, withReferences) /* OfferMappingDTO? */,
        rejectedMapping = OfferMappingDTOs.createEntity(row, withReferences) /* OfferMappingDTO? */,
        offer = UpdateMappingsOfferDTOs.createEntity(row, withReferences) /* UpdateMappingsOfferDTO? */
    )

    /**
    * Assign all the columns from the entity of type UpdateOfferMappingEntryDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = UpdateOfferMappingEntryDTO()
    * database.update(UpdateOfferMappingEntryDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: UpdateOfferMappingEntryDTO) {
        this.apply {
            set(UpdateOfferMappingEntryDTOs.mapping, entity.mapping)
            set(UpdateOfferMappingEntryDTOs.awaitingModerationMapping, entity.awaitingModerationMapping)
            set(UpdateOfferMappingEntryDTOs.rejectedMapping, entity.rejectedMapping)
            set(UpdateOfferMappingEntryDTOs.offer, entity.offer)
        }
    }

}


