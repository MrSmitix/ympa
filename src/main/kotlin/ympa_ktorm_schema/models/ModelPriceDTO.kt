/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Информация о ценах на модель товара.
 * @param avg Средняя цена предложения для модели в регионе.
 * @param max Максимальная цена предложения для модели в регионе.
 * @param min Минимальная цена предложения для модели в регионе.
 */
object ModelPriceDTOs : BaseTable<ModelPriceDTO>("ModelPriceDTO") {
    val avg = decimal("avg") /* null */ /* Средняя цена предложения для модели в регионе. */
    val max = decimal("max") /* null */ /* Максимальная цена предложения для модели в регионе. */
    val min = decimal("min") /* null */ /* Минимальная цена предложения для модели в регионе. */

    /**
     * Create an entity of type ModelPriceDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = ModelPriceDTO(
        avg = row[avg]  /* java.math.BigDecimal? */ /* Средняя цена предложения для модели в регионе. */,
        max = row[max]  /* java.math.BigDecimal? */ /* Максимальная цена предложения для модели в регионе. */,
        min = row[min]  /* java.math.BigDecimal? */ /* Минимальная цена предложения для модели в регионе. */
    )

    /**
    * Assign all the columns from the entity of type ModelPriceDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = ModelPriceDTO()
    * database.update(ModelPriceDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: ModelPriceDTO) {
        this.apply {
            set(ModelPriceDTOs.avg, entity.avg)
            set(ModelPriceDTOs.max, entity.max)
            set(ModelPriceDTOs.min, entity.min)
        }
    }

}


