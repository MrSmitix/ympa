/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Информация об оборачиваемости товара.
 * @param turnover 
 * @param turnoverDays Значение в днях. [Что это за число?](https://yandex.ru/support/marketplace/analytics/turnover.html)
 */
object TurnoverDTOs : BaseTable<TurnoverDTO>("TurnoverDTO") {
    val turnover = long("turnover")
    val turnoverDays = double("turnoverDays") /* null */ /* Значение в днях. [Что это за число?](https://yandex.ru/support/marketplace/analytics/turnover.html) */

    /**
     * Create an entity of type TurnoverDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = TurnoverDTO(
        turnover = TurnoverTypes.createEntity(row, withReferences) /* TurnoverType */,
        turnoverDays = row[turnoverDays]  /* kotlin.Double? */ /* Значение в днях. [Что это за число?](https://yandex.ru/support/marketplace/analytics/turnover.html) */
    )

    /**
    * Assign all the columns from the entity of type TurnoverDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = TurnoverDTO()
    * database.update(TurnoverDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: TurnoverDTO) {
        this.apply {
            set(TurnoverDTOs.turnover, entity.turnover)
            set(TurnoverDTOs.turnoverDays, entity.turnoverDays)
        }
    }

}


