/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Идентификатор, который понадобится для отслеживания статуса генерации и получения готового отчета.
 * @param reportId Идентификатор, который понадобится для отслеживания статуса генерации и получения готового отчета.
 * @param estimatedGenerationTime Ожидаемая продолжительность генерации в миллисекундах.
 */
object GenerateReportDTOs : BaseTable<GenerateReportDTO>("GenerateReportDTO") {
    val reportId = text("reportId") /* Идентификатор, который понадобится для отслеживания статуса генерации и получения готового отчета. */
    val estimatedGenerationTime = long("estimatedGenerationTime") /* Ожидаемая продолжительность генерации в миллисекундах. */

    /**
     * Create an entity of type GenerateReportDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = GenerateReportDTO(
        reportId = row[reportId] ?: "" /* kotlin.String */ /* Идентификатор, который понадобится для отслеживания статуса генерации и получения готового отчета. */,
        estimatedGenerationTime = row[estimatedGenerationTime] ?: 0 /* kotlin.Long */ /* Ожидаемая продолжительность генерации в миллисекундах. */
    )

    /**
    * Assign all the columns from the entity of type GenerateReportDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = GenerateReportDTO()
    * database.update(GenerateReportDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: GenerateReportDTO) {
        this.apply {
            set(GenerateReportDTOs.reportId, entity.reportId)
            set(GenerateReportDTOs.estimatedGenerationTime, entity.estimatedGenerationTime)
        }
    }

}


