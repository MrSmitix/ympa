/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Параметры товара в акции с типом `MARKET_PROMOCODE`.
 * @param maxPrice Максимально возможная цена для участия в акции до применения промокода.  Указывается в рублях.  Возвращается для всех товаров. 
 */
object PromoOfferPromocodeParamsDTOs : BaseTable<PromoOfferPromocodeParamsDTO>("PromoOfferPromocodeParamsDTO") {
    val maxPrice = long("maxPrice") /* Максимально возможная цена для участия в акции до применения промокода.  Указывается в рублях.  Возвращается для всех товаров.  */

    /**
     * Create an entity of type PromoOfferPromocodeParamsDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = PromoOfferPromocodeParamsDTO(
        maxPrice = row[maxPrice] ?: 0 /* kotlin.Long */ /* Максимально возможная цена для участия в акции до применения промокода.  Указывается в рублях.  Возвращается для всех товаров.  */
    )

    /**
    * Assign all the columns from the entity of type PromoOfferPromocodeParamsDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = PromoOfferPromocodeParamsDTO()
    * database.update(PromoOfferPromocodeParamsDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: PromoOfferPromocodeParamsDTO) {
        this.apply {
            set(PromoOfferPromocodeParamsDTOs.maxPrice, entity.maxPrice)
        }
    }

}


