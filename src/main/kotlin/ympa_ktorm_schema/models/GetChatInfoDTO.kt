/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Информация о чатах.
 * @param chatId Идентификатор чата.
 * @param orderId Идентификатор заказа.
 * @param type 
 * @param status 
 * @param createdAt Дата и время создания чата.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`. 
 * @param updatedAt Дата и время последнего сообщения в чате.
 */
object GetChatInfoDTOs : BaseTable<GetChatInfoDTO>("GetChatInfoDTO") {
    val chatId = long("chatId") /* Идентификатор чата. */
    val orderId = long("orderId") /* Идентификатор заказа. */
    val type = long("type")
    val status = long("status")
    val createdAt = datetime("createdAt") /* Дата и время создания чата.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`.  */
    val updatedAt = datetime("updatedAt") /* Дата и время последнего сообщения в чате. */

    /**
     * Create an entity of type GetChatInfoDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = GetChatInfoDTO(
        chatId = row[chatId] ?: 0 /* kotlin.Long */ /* Идентификатор чата. */,
        orderId = row[orderId] ?: 0 /* kotlin.Long */ /* Идентификатор заказа. */,
        type = ChatTypes.createEntity(row, withReferences) /* ChatType */,
        status = ChatStatusTypes.createEntity(row, withReferences) /* ChatStatusType */,
        createdAt = row[createdAt] /* java.time.LocalDateTime */ /* Дата и время создания чата.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`.  */,
        updatedAt = row[updatedAt] /* java.time.LocalDateTime */ /* Дата и время последнего сообщения в чате. */
    )

    /**
    * Assign all the columns from the entity of type GetChatInfoDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = GetChatInfoDTO()
    * database.update(GetChatInfoDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: GetChatInfoDTO) {
        this.apply {
            set(GetChatInfoDTOs.chatId, entity.chatId)
            set(GetChatInfoDTOs.orderId, entity.orderId)
            set(GetChatInfoDTOs.type, entity.type)
            set(GetChatInfoDTOs.status, entity.status)
            set(GetChatInfoDTOs.createdAt, entity.createdAt)
            set(GetChatInfoDTOs.updatedAt, entity.updatedAt)
        }
    }

}


