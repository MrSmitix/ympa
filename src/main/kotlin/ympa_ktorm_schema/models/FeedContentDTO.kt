/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Информация о проверке содержимого прайс-листа, загруженного на Маркет.
 * @param rejectedOffersCount Количество предложений, в которых найдены ошибки на этапе загрузки прайс-листа. Выводится, если параметр `content status=OK`. 
 * @param status 
 * @param totalOffersCount Количество предложений в прайс-листе. Выводится, если параметр `content status=OK`. 
 * @param error 
 */
object FeedContentDTOs : BaseTable<FeedContentDTO>("FeedContentDTO") {
    val rejectedOffersCount = long("rejectedOffersCount") /* null */ /* Количество предложений, в которых найдены ошибки на этапе загрузки прайс-листа. Выводится, если параметр `content status=OK`.  */
    val status = long("status") /* null */
    val totalOffersCount = long("totalOffersCount") /* null */ /* Количество предложений в прайс-листе. Выводится, если параметр `content status=OK`.  */
    val error = long("error") /* null */

    /**
     * Create an entity of type FeedContentDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = FeedContentDTO(
        rejectedOffersCount = row[rejectedOffersCount]  /* kotlin.Long? */ /* Количество предложений, в которых найдены ошибки на этапе загрузки прайс-листа. Выводится, если параметр `content status=OK`.  */,
        status = FeedStatusTypes.createEntity(row, withReferences) /* FeedStatusType? */,
        totalOffersCount = row[totalOffersCount]  /* kotlin.Long? */ /* Количество предложений в прайс-листе. Выводится, если параметр `content status=OK`.  */,
        error = FeedContentErrorDTOs.createEntity(row, withReferences) /* FeedContentErrorDTO? */
    )

    /**
    * Assign all the columns from the entity of type FeedContentDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = FeedContentDTO()
    * database.update(FeedContentDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: FeedContentDTO) {
        this.apply {
            set(FeedContentDTOs.rejectedOffersCount, entity.rejectedOffersCount)
            set(FeedContentDTOs.status, entity.status)
            set(FeedContentDTOs.totalOffersCount, entity.totalOffersCount)
            set(FeedContentDTOs.error, entity.error)
        }
    }

}


