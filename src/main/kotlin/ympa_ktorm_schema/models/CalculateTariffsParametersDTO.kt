/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Параметры для расчета стоимости услуг.
 * @param campaignId Идентификатор кампании. У пользователя, который выполняет запрос, должен быть доступ к этой кампании.  Используйте параметр `campaignId`, если уже завершили подключение магазина на Маркете. Иначе вернется пустой список.  Обязательный параметр, если не указан параметр `sellingProgram`. Совместное использование параметров приведет к ошибке. 
 * @param sellingProgram 
 * @param frequency 
 */
object CalculateTariffsParametersDTOs : BaseTable<CalculateTariffsParametersDTO>("CalculateTariffsParametersDTO") {
    val campaignId = long("campaignId") /* null */ /* Идентификатор кампании. У пользователя, который выполняет запрос, должен быть доступ к этой кампании.  Используйте параметр `campaignId`, если уже завершили подключение магазина на Маркете. Иначе вернется пустой список.  Обязательный параметр, если не указан параметр `sellingProgram`. Совместное использование параметров приведет к ошибке.  */
    val sellingProgram = long("sellingProgram") /* null */
    val frequency = long("frequency") /* null */

    /**
     * Create an entity of type CalculateTariffsParametersDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CalculateTariffsParametersDTO(
        campaignId = row[campaignId]  /* kotlin.Long? */ /* Идентификатор кампании. У пользователя, который выполняет запрос, должен быть доступ к этой кампании.  Используйте параметр `campaignId`, если уже завершили подключение магазина на Маркете. Иначе вернется пустой список.  Обязательный параметр, если не указан параметр `sellingProgram`. Совместное использование параметров приведет к ошибке.  */,
        sellingProgram = SellingProgramTypes.createEntity(row, withReferences) /* SellingProgramType? */,
        frequency = PaymentFrequencyTypes.createEntity(row, withReferences) /* PaymentFrequencyType? */
    )

    /**
    * Assign all the columns from the entity of type CalculateTariffsParametersDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CalculateTariffsParametersDTO()
    * database.update(CalculateTariffsParametersDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CalculateTariffsParametersDTO) {
        this.apply {
            set(CalculateTariffsParametersDTOs.campaignId, entity.campaignId)
            set(CalculateTariffsParametersDTOs.sellingProgram, entity.sellingProgram)
            set(CalculateTariffsParametersDTOs.frequency, entity.frequency)
        }
    }

}


