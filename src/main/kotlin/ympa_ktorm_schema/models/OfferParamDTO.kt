/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Параметры товара.  Если у товара несколько значений одного параметра, передайте их с одним и тем же `name`, но разными `value`.  {% cut \"Пример\" %}  ```json \"params\": [   {     \"name\": \"Цвет\",     \"value\": \"Зеленый\"   },   {     \"name\": \"Цвет\",     \"value\": \"Желтый\"   } ] ```  {% endcut %} 
 * @param name Название.  Должно совпадать с названием характеристики на Маркете. Узнать его можно из Excel-шаблона категории или через запрос [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md). 
 * @param value Значение. 
 */
object OfferParamDTOs : BaseTable<OfferParamDTO>("OfferParamDTO") {
    val name = text("name") /* Название.  Должно совпадать с названием характеристики на Маркете. Узнать его можно из Excel-шаблона категории или через запрос [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).  */
    val value = text("value") /* Значение.  */

    /**
     * Create an entity of type OfferParamDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = OfferParamDTO(
        name = row[name] ?: "" /* kotlin.String */ /* Название.  Должно совпадать с названием характеристики на Маркете. Узнать его можно из Excel-шаблона категории или через запрос [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).  */,
        value = row[value] ?: "" /* kotlin.String */ /* Значение.  */
    )

    /**
    * Assign all the columns from the entity of type OfferParamDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = OfferParamDTO()
    * database.update(OfferParamDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: OfferParamDTO) {
        this.apply {
            set(OfferParamDTOs.name, entity.name)
            set(OfferParamDTOs.value, entity.value)
        }
    }

}


