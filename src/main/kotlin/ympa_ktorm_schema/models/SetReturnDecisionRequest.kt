/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Решения по позиции в возврате.
 * @param returnItemId Идентификатор товара в возврате.
 * @param decisionType 
 * @param comment Комментарий к решению. Укажите:  * для `REFUND_MONEY_INCLUDING_SHIPMENT`— стоимость обратной пересылки;  * для `REPAIR` — когда вы устраните недостатки товара;  * для `DECLINE_REFUND` — причину отказа;  * для `OTHER_DECISION` — какое решение вы предлагаете. 
 */
object SetReturnDecisionRequests : BaseTable<SetReturnDecisionRequest>("SetReturnDecisionRequest") {
    val returnItemId = long("returnItemId") /* Идентификатор товара в возврате. */
    val decisionType = long("decisionType")
    val comment = text("comment") /* null */ /* Комментарий к решению. Укажите:  * для `REFUND_MONEY_INCLUDING_SHIPMENT`— стоимость обратной пересылки;  * для `REPAIR` — когда вы устраните недостатки товара;  * для `DECLINE_REFUND` — причину отказа;  * для `OTHER_DECISION` — какое решение вы предлагаете.  */

    /**
     * Create an entity of type SetReturnDecisionRequest from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = SetReturnDecisionRequest(
        returnItemId = row[returnItemId] ?: 0 /* kotlin.Long */ /* Идентификатор товара в возврате. */,
        decisionType = ReturnRequestDecisionTypes.createEntity(row, withReferences) /* ReturnRequestDecisionType */,
        comment = row[comment]  /* kotlin.String? */ /* Комментарий к решению. Укажите:  * для `REFUND_MONEY_INCLUDING_SHIPMENT`— стоимость обратной пересылки;  * для `REPAIR` — когда вы устраните недостатки товара;  * для `DECLINE_REFUND` — причину отказа;  * для `OTHER_DECISION` — какое решение вы предлагаете.  */
    )

    /**
    * Assign all the columns from the entity of type SetReturnDecisionRequest to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = SetReturnDecisionRequest()
    * database.update(SetReturnDecisionRequests, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: SetReturnDecisionRequest) {
        this.apply {
            set(SetReturnDecisionRequests.returnItemId, entity.returnItemId)
            set(SetReturnDecisionRequests.decisionType, entity.decisionType)
            set(SetReturnDecisionRequests.comment, entity.comment)
        }
    }

}


