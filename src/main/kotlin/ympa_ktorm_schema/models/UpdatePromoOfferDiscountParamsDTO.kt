/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Параметры товара в акции с типом `DIRECT_DISCOUNT` или `BLUE_FLASH`.  Обязательный параметр для акций с этими типами. 
 * @param price Зачеркнутая цена — та, по которой товар продавался до акции.  Указывается в рублях.  Число должно быть целым. 
 * @param promoPrice Цена по акции — та, по которой вы хотите продавать товар.  Указывается в рублях.  Число должно быть целым. 
 */
object UpdatePromoOfferDiscountParamsDTOs : BaseTable<UpdatePromoOfferDiscountParamsDTO>("UpdatePromoOfferDiscountParamsDTO") {
    val price = long("price") /* null */ /* Зачеркнутая цена — та, по которой товар продавался до акции.  Указывается в рублях.  Число должно быть целым.  */
    val promoPrice = long("promoPrice") /* null */ /* Цена по акции — та, по которой вы хотите продавать товар.  Указывается в рублях.  Число должно быть целым.  */

    /**
     * Create an entity of type UpdatePromoOfferDiscountParamsDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = UpdatePromoOfferDiscountParamsDTO(
        price = row[price]  /* kotlin.Long? */ /* Зачеркнутая цена — та, по которой товар продавался до акции.  Указывается в рублях.  Число должно быть целым.  */,
        promoPrice = row[promoPrice]  /* kotlin.Long? */ /* Цена по акции — та, по которой вы хотите продавать товар.  Указывается в рублях.  Число должно быть целым.  */
    )

    /**
    * Assign all the columns from the entity of type UpdatePromoOfferDiscountParamsDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = UpdatePromoOfferDiscountParamsDTO()
    * database.update(UpdatePromoOfferDiscountParamsDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: UpdatePromoOfferDiscountParamsDTO) {
        this.apply {
            set(UpdatePromoOfferDiscountParamsDTOs.price, entity.price)
            set(UpdatePromoOfferDiscountParamsDTOs.promoPrice, entity.promoPrice)
        }
    }

}


