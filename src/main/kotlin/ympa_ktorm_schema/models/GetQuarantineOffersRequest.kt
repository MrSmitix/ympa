/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Фильтрации товаров  В запросе можно указать либо фильтр offerIds, либо любые другие фильтры товаров. Совместное использование фильтра offerIds с другими фильтрациями приведет к ошибке. 
 * @param offerIds Идентификаторы товаров, информация о которых нужна. <br><br> ⚠️ Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым. 
 * @param cardStatuses Фильтр по статусам карточек.  [Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html) 
 * @param categoryIds Фильтр по категориям на Маркете.
 * @param vendorNames Фильтр по брендам.
 * @param tags Фильтр по тегам.
 */
object GetQuarantineOffersRequests : BaseTable<GetQuarantineOffersRequest>("GetQuarantineOffersRequest") {

    /**
     * Create an entity of type GetQuarantineOffersRequest from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = GetQuarantineOffersRequest(
        offerIds = emptyList() /* kotlin.Array<kotlin.String>? */ /* Идентификаторы товаров, информация о которых нужна. <br><br> ⚠️ Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.  */,
        cardStatuses = emptyList() /* kotlin.Array<OfferCardStatusType>? */ /* Фильтр по статусам карточек.  [Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html)  */,
        categoryIds = emptyList() /* kotlin.Array<kotlin.Int>? */ /* Фильтр по категориям на Маркете. */,
        vendorNames = emptyList() /* kotlin.Array<kotlin.String>? */ /* Фильтр по брендам. */,
        tags = emptyList() /* kotlin.Array<kotlin.String>? */ /* Фильтр по тегам. */
    )

    /**
    * Assign all the columns from the entity of type GetQuarantineOffersRequest to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = GetQuarantineOffersRequest()
    * database.update(GetQuarantineOffersRequests, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: GetQuarantineOffersRequest) {
        this.apply {
        }
    }

}


object GetQuarantineOffersRequestOfferIds : BaseTable<Pair<kotlin.Long, kotlin.String>>("GetQuarantineOffersRequestOfferIds") {
    val getQuarantineOffersRequest = long("getQuarantineOffersRequest")
    val offerIds = text("offerIds")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.String> =
        Pair(row[getQuarantineOffersRequest] ?: 0, row[offerIds] ?: "")

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.String>) {
        this.apply {
            set(GetQuarantineOffersRequestOfferIds.getQuarantineOffersRequest, entity.first)
            set(GetQuarantineOffersRequestOfferIds.offerIds, entity.second)
        }
    }

}

object GetQuarantineOffersRequestOfferCardStatusType : BaseTable<Pair<kotlin.Long, kotlin.Long>>("GetQuarantineOffersRequestOfferCardStatusType") {
    val getQuarantineOffersRequest = long("getQuarantineOffersRequest")
    val offerCardStatusType = long("offerCardStatusType")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[getQuarantineOffersRequest] ?: 0, row[offerCardStatusType] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(GetQuarantineOffersRequestOfferCardStatusType.getQuarantineOffersRequest, entity.first)
            set(GetQuarantineOffersRequestOfferCardStatusType.offerCardStatusType, entity.second)
        }
    }

}

object GetQuarantineOffersRequestCategoryIds : BaseTable<Pair<kotlin.Long, kotlin.Int>>("GetQuarantineOffersRequestCategoryIds") {
    val getQuarantineOffersRequest = long("getQuarantineOffersRequest")
    val categoryIds = int("categoryIds")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Int> =
        Pair(row[getQuarantineOffersRequest] ?: 0, row[categoryIds] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Int>) {
        this.apply {
            set(GetQuarantineOffersRequestCategoryIds.getQuarantineOffersRequest, entity.first)
            set(GetQuarantineOffersRequestCategoryIds.categoryIds, entity.second)
        }
    }

}

object GetQuarantineOffersRequestVendorNames : BaseTable<Pair<kotlin.Long, kotlin.String>>("GetQuarantineOffersRequestVendorNames") {
    val getQuarantineOffersRequest = long("getQuarantineOffersRequest")
    val vendorNames = text("vendorNames")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.String> =
        Pair(row[getQuarantineOffersRequest] ?: 0, row[vendorNames] ?: "")

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.String>) {
        this.apply {
            set(GetQuarantineOffersRequestVendorNames.getQuarantineOffersRequest, entity.first)
            set(GetQuarantineOffersRequestVendorNames.vendorNames, entity.second)
        }
    }

}

object GetQuarantineOffersRequestTags : BaseTable<Pair<kotlin.Long, kotlin.String>>("GetQuarantineOffersRequestTags") {
    val getQuarantineOffersRequest = long("getQuarantineOffersRequest")
    val tags = text("tags")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.String> =
        Pair(row[getQuarantineOffersRequest] ?: 0, row[tags] ?: "")

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.String>) {
        this.apply {
            set(GetQuarantineOffersRequestTags.getQuarantineOffersRequest, entity.first)
            set(GetQuarantineOffersRequestTags.tags, entity.second)
        }
    }

}

