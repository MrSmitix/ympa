/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Данные, необходимые для генерации отчета.
 * @param businessId Идентификатор бизнеса.
 * @param categoryId Идентификатор категории.
 * @param dateFrom Начало периода, включительно.
 * @param dateTo Конец периода, включительно.
 */
object GenerateCompetitorsPositionReportRequests : BaseTable<GenerateCompetitorsPositionReportRequest>("GenerateCompetitorsPositionReportRequest") {
    val businessId = long("businessId") /* Идентификатор бизнеса. */
    val categoryId = long("categoryId") /* Идентификатор категории. */
    val dateFrom = date("dateFrom") /* Начало периода, включительно. */
    val dateTo = date("dateTo") /* Конец периода, включительно. */

    /**
     * Create an entity of type GenerateCompetitorsPositionReportRequest from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = GenerateCompetitorsPositionReportRequest(
        businessId = row[businessId] ?: 0 /* kotlin.Long */ /* Идентификатор бизнеса. */,
        categoryId = row[categoryId] ?: 0 /* kotlin.Long */ /* Идентификатор категории. */,
        dateFrom = row[dateFrom] /* java.time.LocalDate */ /* Начало периода, включительно. */,
        dateTo = row[dateTo] /* java.time.LocalDate */ /* Конец периода, включительно. */
    )

    /**
    * Assign all the columns from the entity of type GenerateCompetitorsPositionReportRequest to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = GenerateCompetitorsPositionReportRequest()
    * database.update(GenerateCompetitorsPositionReportRequests, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: GenerateCompetitorsPositionReportRequest) {
        this.apply {
            set(GenerateCompetitorsPositionReportRequests.businessId, entity.businessId)
            set(GenerateCompetitorsPositionReportRequests.categoryId, entity.categoryId)
            set(GenerateCompetitorsPositionReportRequests.dateFrom, entity.dateFrom)
            set(GenerateCompetitorsPositionReportRequests.dateTo, entity.dateTo)
        }
    }

}


