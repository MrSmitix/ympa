/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Список режимов работы точки продаж. 
 * @param scheduleItems Список расписаний работы точки продаж. 
 * @param workInHoliday Признак, работает ли точка продаж в дни государственных праздников.  Возможные значения:  * `false` — точка продаж не работает в дни государственных праздников. * `true` — точка продаж работает в дни государственных праздников. 
 */
object OutletWorkingScheduleDTOs : BaseTable<OutletWorkingScheduleDTO>("OutletWorkingScheduleDTO") {
    val workInHoliday = boolean("workInHoliday") /* null */ /* Признак, работает ли точка продаж в дни государственных праздников.  Возможные значения:  * `false` — точка продаж не работает в дни государственных праздников. * `true` — точка продаж работает в дни государственных праздников.  */

    /**
     * Create an entity of type OutletWorkingScheduleDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = OutletWorkingScheduleDTO(
        scheduleItems = emptyList() /* kotlin.Array<OutletWorkingScheduleItemDTO> */ /* Список расписаний работы точки продаж.  */,
        workInHoliday = row[workInHoliday]  /* kotlin.Boolean? */ /* Признак, работает ли точка продаж в дни государственных праздников.  Возможные значения:  * `false` — точка продаж не работает в дни государственных праздников. * `true` — точка продаж работает в дни государственных праздников.  */
    )

    /**
    * Assign all the columns from the entity of type OutletWorkingScheduleDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = OutletWorkingScheduleDTO()
    * database.update(OutletWorkingScheduleDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: OutletWorkingScheduleDTO) {
        this.apply {
            set(OutletWorkingScheduleDTOs.workInHoliday, entity.workInHoliday)
        }
    }

}


object OutletWorkingScheduleDTOOutletWorkingScheduleItemDTO : BaseTable<Pair<kotlin.Long, kotlin.Long>>("OutletWorkingScheduleDTOOutletWorkingScheduleItemDTO") {
    val outletWorkingScheduleDTO = long("outletWorkingScheduleDTO")
    val outletWorkingScheduleItemDTO = long("outletWorkingScheduleItemDTO")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[outletWorkingScheduleDTO] ?: 0, row[outletWorkingScheduleItemDTO] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(OutletWorkingScheduleDTOOutletWorkingScheduleItemDTO.outletWorkingScheduleDTO, entity.first)
            set(OutletWorkingScheduleDTOOutletWorkingScheduleItemDTO.outletWorkingScheduleItemDTO, entity.second)
        }
    }

}

