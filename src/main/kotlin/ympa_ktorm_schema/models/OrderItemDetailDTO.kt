/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Детали по товару в заказе.
 * @param itemCount Количество единиц товара.
 * @param itemStatus 
 * @param updateDate Формат даты: `ДД-ММ-ГГГГ`. 
 */
object OrderItemDetailDTOs : BaseTable<OrderItemDetailDTO>("OrderItemDetailDTO") {
    val itemCount = long("itemCount") /* null */ /* Количество единиц товара. */
    val itemStatus = long("itemStatus") /* null */
    val updateDate = text("updateDate") /* null */ /* Формат даты: `ДД-ММ-ГГГГ`.  */

    /**
     * Create an entity of type OrderItemDetailDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = OrderItemDetailDTO(
        itemCount = row[itemCount]  /* kotlin.Long? */ /* Количество единиц товара. */,
        itemStatus = OrderItemStatusTypes.createEntity(row, withReferences) /* OrderItemStatusType? */,
        updateDate = row[updateDate]  /* kotlin.String? */ /* Формат даты: `ДД-ММ-ГГГГ`.  */
    )

    /**
    * Assign all the columns from the entity of type OrderItemDetailDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = OrderItemDetailDTO()
    * database.update(OrderItemDetailDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: OrderItemDetailDTO) {
        this.apply {
            set(OrderItemDetailDTOs.itemCount, entity.itemCount)
            set(OrderItemDetailDTOs.itemStatus, entity.itemStatus)
            set(OrderItemDetailDTOs.updateDate, entity.updateDate)
        }
    }

}


