/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Логистическая информация по возврату.
 * @param stockType 
 * @param status 
 * @param cis Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).
 * @param imei Международный идентификатор мобильного оборудования.
 */
object ReturnInstanceDTOs : BaseTable<ReturnInstanceDTO>("ReturnInstanceDTO") {
    val stockType = long("stockType") /* null */
    val status = long("status") /* null */
    val cis = text("cis") /* null */ /* Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/). */
    val imei = text("imei") /* null */ /* Международный идентификатор мобильного оборудования. */

    /**
     * Create an entity of type ReturnInstanceDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = ReturnInstanceDTO(
        stockType = ReturnInstanceStockTypes.createEntity(row, withReferences) /* ReturnInstanceStockType? */,
        status = ReturnInstanceStatusTypes.createEntity(row, withReferences) /* ReturnInstanceStatusType? */,
        cis = row[cis]  /* kotlin.String? */ /* Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/). */,
        imei = row[imei]  /* kotlin.String? */ /* Международный идентификатор мобильного оборудования. */
    )

    /**
    * Assign all the columns from the entity of type ReturnInstanceDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = ReturnInstanceDTO()
    * database.update(ReturnInstanceDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: ReturnInstanceDTO) {
        this.apply {
            set(ReturnInstanceDTOs.stockType, entity.stockType)
            set(ReturnInstanceDTOs.status, entity.status)
            set(ReturnInstanceDTOs.cis, entity.cis)
            set(ReturnInstanceDTOs.imei, entity.imei)
        }
    }

}


