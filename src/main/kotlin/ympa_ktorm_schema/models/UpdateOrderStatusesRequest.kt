/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Список заказов.
 * @param orders Список заказов.
 */
object UpdateOrderStatusesRequests : BaseTable<UpdateOrderStatusesRequest>("UpdateOrderStatusesRequest") {

    /**
     * Create an entity of type UpdateOrderStatusesRequest from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = UpdateOrderStatusesRequest(
        orders = emptyList() /* kotlin.Array<OrderStateDTO> */ /* Список заказов. */
    )

    /**
    * Assign all the columns from the entity of type UpdateOrderStatusesRequest to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = UpdateOrderStatusesRequest()
    * database.update(UpdateOrderStatusesRequests, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: UpdateOrderStatusesRequest) {
        this.apply {
        }
    }

}


object UpdateOrderStatusesRequestOrderStateDTO : BaseTable<Pair<kotlin.Long, kotlin.Long>>("UpdateOrderStatusesRequestOrderStateDTO") {
    val updateOrderStatusesRequest = long("updateOrderStatusesRequest")
    val orderStateDTO = long("orderStateDTO")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[updateOrderStatusesRequest] ?: 0, row[orderStateDTO] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(UpdateOrderStatusesRequestOrderStateDTO.updateOrderStatusesRequest, entity.first)
            set(UpdateOrderStatusesRequestOrderStateDTO.orderStateDTO, entity.second)
        }
    }

}

