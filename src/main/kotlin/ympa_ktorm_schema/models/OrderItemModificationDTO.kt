/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Список товаров в заказе.  Если магазин не передал информацию о товаре во входных данных, он будет удален из заказа.  Обязательный параметр. 
 * @param id Идентификатор товара в рамках заказа.  Получить идентификатор можно с помощью ресурсов [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).  Обязательный параметр. 
 * @param count Новое количество товара.
 * @param instances Информация о маркировке единиц товара.  Передавайте в запросе все единицы товара, который подлежит маркировке.  Обязательный параметр, если в заказе есть товары, подлежащие маркировке [в системе «Честный ЗНАК»](https://честныйзнак.рф/). 
 */
object OrderItemModificationDTOs : BaseTable<OrderItemModificationDTO>("OrderItemModificationDTO") {
    val id = long("id") /* Идентификатор товара в рамках заказа.  Получить идентификатор можно с помощью ресурсов [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).  Обязательный параметр.  */
    val count = int("count") /* Новое количество товара. */

    /**
     * Create an entity of type OrderItemModificationDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = OrderItemModificationDTO(
        id = row[id] ?: 0 /* kotlin.Long */ /* Идентификатор товара в рамках заказа.  Получить идентификатор можно с помощью ресурсов [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).  Обязательный параметр.  */,
        count = row[count] ?: 0 /* kotlin.Int */ /* Новое количество товара. */,
        instances = emptyList() /* kotlin.Array<BriefOrderItemInstanceDTO>? */ /* Информация о маркировке единиц товара.  Передавайте в запросе все единицы товара, который подлежит маркировке.  Обязательный параметр, если в заказе есть товары, подлежащие маркировке [в системе «Честный ЗНАК»](https://честныйзнак.рф/).  */
    )

    /**
    * Assign all the columns from the entity of type OrderItemModificationDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = OrderItemModificationDTO()
    * database.update(OrderItemModificationDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: OrderItemModificationDTO) {
        this.apply {
            set(OrderItemModificationDTOs.id, entity.id)
            set(OrderItemModificationDTOs.count, entity.count)
        }
    }

}


object OrderItemModificationDTOBriefOrderItemInstanceDTO : BaseTable<Pair<kotlin.Long, kotlin.Long>>("OrderItemModificationDTOBriefOrderItemInstanceDTO") {
    val orderItemModificationDTO = long("orderItemModificationDTO")
    val briefOrderItemInstanceDTO = long("briefOrderItemInstanceDTO")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[orderItemModificationDTO] ?: 0, row[briefOrderItemInstanceDTO] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(OrderItemModificationDTOBriefOrderItemInstanceDTO.orderItemModificationDTO, entity.first)
            set(OrderItemModificationDTOBriefOrderItemInstanceDTO.briefOrderItemInstanceDTO, entity.second)
        }
    }

}

