/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Причина попадания товара в карантин.
 * @param params Цена, из-за которой товар попал в карантин, и значения для сравнения. Конкретный набор параметров зависит от типа карантина.
 * @param type 
 */
object PriceQuarantineVerdictDTOs : BaseTable<PriceQuarantineVerdictDTO>("PriceQuarantineVerdictDTO") {
    val type = long("type") /* null */

    /**
     * Create an entity of type PriceQuarantineVerdictDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = PriceQuarantineVerdictDTO(
        params = emptyList() /* kotlin.Array<PriceQuarantineVerdictParameterDTO> */ /* Цена, из-за которой товар попал в карантин, и значения для сравнения. Конкретный набор параметров зависит от типа карантина. */,
        type = PriceQuarantineVerdictTypes.createEntity(row, withReferences) /* PriceQuarantineVerdictType? */
    )

    /**
    * Assign all the columns from the entity of type PriceQuarantineVerdictDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = PriceQuarantineVerdictDTO()
    * database.update(PriceQuarantineVerdictDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: PriceQuarantineVerdictDTO) {
        this.apply {
            set(PriceQuarantineVerdictDTOs.type, entity.type)
        }
    }

}


object PriceQuarantineVerdictDTOPriceQuarantineVerdictParameterDTO : BaseTable<Pair<kotlin.Long, kotlin.Long>>("PriceQuarantineVerdictDTOPriceQuarantineVerdictParameterDTO") {
    val priceQuarantineVerdictDTO = long("priceQuarantineVerdictDTO")
    val priceQuarantineVerdictParameterDTO = long("priceQuarantineVerdictParameterDTO")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[priceQuarantineVerdictDTO] ?: 0, row[priceQuarantineVerdictParameterDTO] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(PriceQuarantineVerdictDTOPriceQuarantineVerdictParameterDTO.priceQuarantineVerdictDTO, entity.first)
            set(PriceQuarantineVerdictDTOPriceQuarantineVerdictParameterDTO.priceQuarantineVerdictParameterDTO, entity.second)
        }
    }

}

