/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Информация о товарах в акции.
 * @param activeOffers Количество товаров, которые участвуют или участвовали в акции.  Учитываются только товары, которые были добавлены вручную.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index). 
 * @param potentialOffers Количество доступных товаров в акции.  Параметр возвращается только для текущих и будущих акций. 
 * @param processing Есть ли изменения в ассортименте, которые еще не применились. Сохранение изменений занимает некоторое время.  Параметр возвращается только для текущих и будущих акций. 
 */
object GetPromoAssortmentInfoDTOs : BaseTable<GetPromoAssortmentInfoDTO>("GetPromoAssortmentInfoDTO") {
    val activeOffers = int("activeOffers") /* Количество товаров, которые участвуют или участвовали в акции.  Учитываются только товары, которые были добавлены вручную.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).  */
    val potentialOffers = int("potentialOffers") /* null */ /* Количество доступных товаров в акции.  Параметр возвращается только для текущих и будущих акций.  */
    val processing = boolean("processing") /* null */ /* Есть ли изменения в ассортименте, которые еще не применились. Сохранение изменений занимает некоторое время.  Параметр возвращается только для текущих и будущих акций.  */

    /**
     * Create an entity of type GetPromoAssortmentInfoDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = GetPromoAssortmentInfoDTO(
        activeOffers = row[activeOffers] ?: 0 /* kotlin.Int */ /* Количество товаров, которые участвуют или участвовали в акции.  Учитываются только товары, которые были добавлены вручную.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).  */,
        potentialOffers = row[potentialOffers]  /* kotlin.Int? */ /* Количество доступных товаров в акции.  Параметр возвращается только для текущих и будущих акций.  */,
        processing = row[processing]  /* kotlin.Boolean? */ /* Есть ли изменения в ассортименте, которые еще не применились. Сохранение изменений занимает некоторое время.  Параметр возвращается только для текущих и будущих акций.  */
    )

    /**
    * Assign all the columns from the entity of type GetPromoAssortmentInfoDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = GetPromoAssortmentInfoDTO()
    * database.update(GetPromoAssortmentInfoDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: GetPromoAssortmentInfoDTO) {
        this.apply {
            set(GetPromoAssortmentInfoDTOs.activeOffers, entity.activeOffers)
            set(GetPromoAssortmentInfoDTOs.potentialOffers, entity.potentialOffers)
            set(GetPromoAssortmentInfoDTOs.processing, entity.processing)
        }
    }

}


