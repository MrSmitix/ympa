/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * В ответе Маркет возвращает переданный вами список грузовых мест. Не обращайте на это поле внимания. 
 * @param boxes Список грузовых мест. Маркет определил количество мест по длине этого списка. 
 */
object ShipmentBoxesDTOs : BaseTable<ShipmentBoxesDTO>("ShipmentBoxesDTO") {

    /**
     * Create an entity of type ShipmentBoxesDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = ShipmentBoxesDTO(
        boxes = emptyList() /* kotlin.Array<ParcelBoxDTO> */ /* Список грузовых мест. Маркет определил количество мест по длине этого списка.  */
    )

    /**
    * Assign all the columns from the entity of type ShipmentBoxesDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = ShipmentBoxesDTO()
    * database.update(ShipmentBoxesDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: ShipmentBoxesDTO) {
        this.apply {
        }
    }

}


object ShipmentBoxesDTOParcelBoxDTO : BaseTable<Pair<kotlin.Long, kotlin.Long>>("ShipmentBoxesDTOParcelBoxDTO") {
    val shipmentBoxesDTO = long("shipmentBoxesDTO")
    val parcelBoxDTO = long("parcelBoxDTO")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[shipmentBoxesDTO] ?: 0, row[parcelBoxDTO] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(ShipmentBoxesDTOParcelBoxDTO.shipmentBoxesDTO, entity.first)
            set(ShipmentBoxesDTOParcelBoxDTO.parcelBoxDTO, entity.second)
        }
    }

}

