/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Информация о курьере.
 * @param fullName Полное имя курьера.
 * @param phone Номер телефона курьера.
 * @param phoneExtension Добавочный номер телефона.
 * @param vehicleNumber Номер транспортного средства.
 * @param vehicleDescription Описание машины. Например, модель и цвет.
 */
object OrderCourierDTOs : BaseTable<OrderCourierDTO>("OrderCourierDTO") {
    val fullName = text("fullName") /* null */ /* Полное имя курьера. */
    val phone = text("phone") /* null */ /* Номер телефона курьера. */
    val phoneExtension = text("phoneExtension") /* null */ /* Добавочный номер телефона. */
    val vehicleNumber = text("vehicleNumber") /* null */ /* Номер транспортного средства. */
    val vehicleDescription = text("vehicleDescription") /* null */ /* Описание машины. Например, модель и цвет. */

    /**
     * Create an entity of type OrderCourierDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = OrderCourierDTO(
        fullName = row[fullName]  /* kotlin.String? */ /* Полное имя курьера. */,
        phone = row[phone]  /* kotlin.String? */ /* Номер телефона курьера. */,
        phoneExtension = row[phoneExtension]  /* kotlin.String? */ /* Добавочный номер телефона. */,
        vehicleNumber = row[vehicleNumber]  /* kotlin.String? */ /* Номер транспортного средства. */,
        vehicleDescription = row[vehicleDescription]  /* kotlin.String? */ /* Описание машины. Например, модель и цвет. */
    )

    /**
    * Assign all the columns from the entity of type OrderCourierDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = OrderCourierDTO()
    * database.update(OrderCourierDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: OrderCourierDTO) {
        this.apply {
            set(OrderCourierDTOs.fullName, entity.fullName)
            set(OrderCourierDTOs.phone, entity.phone)
            set(OrderCourierDTOs.phoneExtension, entity.phoneExtension)
            set(OrderCourierDTOs.vehicleNumber, entity.vehicleNumber)
            set(OrderCourierDTOs.vehicleDescription, entity.vehicleDescription)
        }
    }

}


