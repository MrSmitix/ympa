/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Диапазон дат доставки.
 * @param fromDate Формат даты: `ДД-ММ-ГГГГ`. 
 * @param toDate Формат даты: `ДД-ММ-ГГГГ`. 
 * @param fromTime Начало интервала времени доставки.  Передается только совместно с параметром `type=DELIVERY`.  Формат времени: 24-часовой, `ЧЧ:ММ`. В качестве минут всегда должно быть указано `00` (исключение — `23:59`).  Минимальное значение: `00:00`. 
 * @param toTime Конец интервала времени доставки.  Передается только совместно с параметром `type=DELIVERY`.  Формат времени: 24-часовой, `ЧЧ:ММ`. В качестве минут всегда должно быть указано `00` (исключение — `23:59`).  Максимальное значение: `23:59`. 
 * @param realDeliveryDate Формат даты: `ДД-ММ-ГГГГ`. 
 */
object OrderDeliveryDatesDTOs : BaseTable<OrderDeliveryDatesDTO>("OrderDeliveryDatesDTO") {
    val fromDate = text("fromDate") /* null */ /* Формат даты: `ДД-ММ-ГГГГ`.  */
    val toDate = text("toDate") /* null */ /* Формат даты: `ДД-ММ-ГГГГ`.  */
    val fromTime = text("fromTime") /* null */ /* Начало интервала времени доставки.  Передается только совместно с параметром `type=DELIVERY`.  Формат времени: 24-часовой, `ЧЧ:ММ`. В качестве минут всегда должно быть указано `00` (исключение — `23:59`).  Минимальное значение: `00:00`.  */
    val toTime = text("toTime") /* null */ /* Конец интервала времени доставки.  Передается только совместно с параметром `type=DELIVERY`.  Формат времени: 24-часовой, `ЧЧ:ММ`. В качестве минут всегда должно быть указано `00` (исключение — `23:59`).  Максимальное значение: `23:59`.  */
    val realDeliveryDate = text("realDeliveryDate") /* null */ /* Формат даты: `ДД-ММ-ГГГГ`.  */

    /**
     * Create an entity of type OrderDeliveryDatesDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = OrderDeliveryDatesDTO(
        fromDate = row[fromDate]  /* kotlin.String? */ /* Формат даты: `ДД-ММ-ГГГГ`.  */,
        toDate = row[toDate]  /* kotlin.String? */ /* Формат даты: `ДД-ММ-ГГГГ`.  */,
        fromTime = row[fromTime]  /* kotlin.String? */ /* Начало интервала времени доставки.  Передается только совместно с параметром `type=DELIVERY`.  Формат времени: 24-часовой, `ЧЧ:ММ`. В качестве минут всегда должно быть указано `00` (исключение — `23:59`).  Минимальное значение: `00:00`.  */,
        toTime = row[toTime]  /* kotlin.String? */ /* Конец интервала времени доставки.  Передается только совместно с параметром `type=DELIVERY`.  Формат времени: 24-часовой, `ЧЧ:ММ`. В качестве минут всегда должно быть указано `00` (исключение — `23:59`).  Максимальное значение: `23:59`.  */,
        realDeliveryDate = row[realDeliveryDate]  /* kotlin.String? */ /* Формат даты: `ДД-ММ-ГГГГ`.  */
    )

    /**
    * Assign all the columns from the entity of type OrderDeliveryDatesDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = OrderDeliveryDatesDTO()
    * database.update(OrderDeliveryDatesDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: OrderDeliveryDatesDTO) {
        this.apply {
            set(OrderDeliveryDatesDTOs.fromDate, entity.fromDate)
            set(OrderDeliveryDatesDTOs.toDate, entity.toDate)
            set(OrderDeliveryDatesDTOs.fromTime, entity.fromTime)
            set(OrderDeliveryDatesDTOs.toTime, entity.toTime)
            set(OrderDeliveryDatesDTOs.realDeliveryDate, entity.realDeliveryDate)
        }
    }

}


