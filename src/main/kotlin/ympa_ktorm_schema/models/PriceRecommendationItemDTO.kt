/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Рекомендованная цена.
 * @param campaignId Идентификатор кампании.
 * @param price Рекомендованная цена на товар. Чтобы продвижение хорошо работало, цена на товар должна быть не выше этого значения. [Подробно о рекомендованных ценах](https://yandex.ru/support/marketplace/marketing/campaigns.html#prices) 
 */
object PriceRecommendationItemDTOs : BaseTable<PriceRecommendationItemDTO>("PriceRecommendationItemDTO") {
    val campaignId = long("campaignId") /* Идентификатор кампании. */
    val price = decimal("price") /* Рекомендованная цена на товар. Чтобы продвижение хорошо работало, цена на товар должна быть не выше этого значения. [Подробно о рекомендованных ценах](https://yandex.ru/support/marketplace/marketing/campaigns.html#prices)  */

    /**
     * Create an entity of type PriceRecommendationItemDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = PriceRecommendationItemDTO(
        campaignId = row[campaignId] ?: 0 /* kotlin.Long */ /* Идентификатор кампании. */,
        price = row[price] ?: 0 /* java.math.BigDecimal */ /* Рекомендованная цена на товар. Чтобы продвижение хорошо работало, цена на товар должна быть не выше этого значения. [Подробно о рекомендованных ценах](https://yandex.ru/support/marketplace/marketing/campaigns.html#prices)  */
    )

    /**
    * Assign all the columns from the entity of type PriceRecommendationItemDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = PriceRecommendationItemDTO()
    * database.update(PriceRecommendationItemDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: PriceRecommendationItemDTO) {
        this.apply {
            set(PriceRecommendationItemDTOs.campaignId, entity.campaignId)
            set(PriceRecommendationItemDTOs.price, entity.price)
        }
    }

}


