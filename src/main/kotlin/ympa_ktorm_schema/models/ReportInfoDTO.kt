/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Статус генерации и ссылка на готовый отчет.
 * @param status 
 * @param generationRequestedAt Дата и время запроса на генерацию.
 * @param subStatus 
 * @param generationFinishedAt Дата и время завершения генерации.
 * @param file Ссылка на готовый отчет.
 * @param estimatedGenerationTime Ожидаемая продолжительность генерации в миллисекундах.
 */
object ReportInfoDTOs : BaseTable<ReportInfoDTO>("ReportInfoDTO") {
    val status = long("status")
    val generationRequestedAt = datetime("generationRequestedAt") /* Дата и время запроса на генерацию. */
    val subStatus = long("subStatus") /* null */
    val generationFinishedAt = datetime("generationFinishedAt") /* null */ /* Дата и время завершения генерации. */
    val file = text("file") /* null */ /* Ссылка на готовый отчет. */
    val estimatedGenerationTime = long("estimatedGenerationTime") /* null */ /* Ожидаемая продолжительность генерации в миллисекундах. */

    /**
     * Create an entity of type ReportInfoDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = ReportInfoDTO(
        status = ReportStatusTypes.createEntity(row, withReferences) /* ReportStatusType */,
        generationRequestedAt = row[generationRequestedAt] /* java.time.LocalDateTime */ /* Дата и время запроса на генерацию. */,
        subStatus = ReportSubStatusTypes.createEntity(row, withReferences) /* ReportSubStatusType? */,
        generationFinishedAt = row[generationFinishedAt]  /* java.time.LocalDateTime? */ /* Дата и время завершения генерации. */,
        file = row[file]  /* kotlin.String? */ /* Ссылка на готовый отчет. */,
        estimatedGenerationTime = row[estimatedGenerationTime]  /* kotlin.Long? */ /* Ожидаемая продолжительность генерации в миллисекундах. */
    )

    /**
    * Assign all the columns from the entity of type ReportInfoDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = ReportInfoDTO()
    * database.update(ReportInfoDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: ReportInfoDTO) {
        this.apply {
            set(ReportInfoDTOs.status, entity.status)
            set(ReportInfoDTOs.generationRequestedAt, entity.generationRequestedAt)
            set(ReportInfoDTOs.subStatus, entity.subStatus)
            set(ReportInfoDTOs.generationFinishedAt, entity.generationFinishedAt)
            set(ReportInfoDTOs.file, entity.file)
            set(ReportInfoDTOs.estimatedGenerationTime, entity.estimatedGenerationTime)
        }
    }

}


