/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Региональная информация.
 * @param currency 
 * @param regionId Идентификатор региона, для которого выводится информация о предложениях модели (доставляемых в этот регион).  Информацию о регионе по идентификатору можно получить с помощью запроса [GET regions/{regionId}](../../reference/regions/searchRegionsById.md). 
 */
object RegionalModelInfoDTOs : BaseTable<RegionalModelInfoDTO>("RegionalModelInfoDTO") {
    val currency = long("currency") /* null */
    val regionId = long("regionId") /* null */ /* Идентификатор региона, для которого выводится информация о предложениях модели (доставляемых в этот регион).  Информацию о регионе по идентификатору можно получить с помощью запроса [GET regions/{regionId}](../../reference/regions/searchRegionsById.md).  */

    /**
     * Create an entity of type RegionalModelInfoDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = RegionalModelInfoDTO(
        currency = CurrencyTypes.createEntity(row, withReferences) /* CurrencyType? */,
        regionId = row[regionId]  /* kotlin.Long? */ /* Идентификатор региона, для которого выводится информация о предложениях модели (доставляемых в этот регион).  Информацию о регионе по идентификатору можно получить с помощью запроса [GET regions/{regionId}](../../reference/regions/searchRegionsById.md).  */
    )

    /**
    * Assign all the columns from the entity of type RegionalModelInfoDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = RegionalModelInfoDTO()
    * database.update(RegionalModelInfoDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: RegionalModelInfoDTO) {
        this.apply {
            set(RegionalModelInfoDTOs.currency, entity.currency)
            set(RegionalModelInfoDTOs.regionId, entity.regionId)
        }
    }

}


