/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Информация о товаре в коробке.
 * @param id Идентификатор товара в заказе.  {% cut \"Где его взять\" %}  Идентификатор приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`.  {% endcut %}   
 * @param fullCount Количество единиц товара в коробке.  Используйте это поле, если в коробке поедут целые товары, не разделенные на части. Не используйте это поле одновременно с `partialCount`. 
 * @param partialCount 
 * @param instances Переданные вами коды маркировки.
 */
object OrderBoxLayoutItemDTOs : BaseTable<OrderBoxLayoutItemDTO>("OrderBoxLayoutItemDTO") {
    val id = long("id") /* Идентификатор товара в заказе.  {% cut \"Где его взять\" %}  Идентификатор приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`.  {% endcut %}    */
    val fullCount = int("fullCount") /* null */ /* Количество единиц товара в коробке.  Используйте это поле, если в коробке поедут целые товары, не разделенные на части. Не используйте это поле одновременно с `partialCount`.  */
    val partialCount = long("partialCount") /* null */

    /**
     * Create an entity of type OrderBoxLayoutItemDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = OrderBoxLayoutItemDTO(
        id = row[id] ?: 0 /* kotlin.Long */ /* Идентификатор товара в заказе.  {% cut \"Где его взять\" %}  Идентификатор приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`.  {% endcut %}    */,
        fullCount = row[fullCount]  /* kotlin.Int? */ /* Количество единиц товара в коробке.  Используйте это поле, если в коробке поедут целые товары, не разделенные на части. Не используйте это поле одновременно с `partialCount`.  */,
        partialCount = OrderBoxLayoutPartialCountDTOs.createEntity(row, withReferences) /* OrderBoxLayoutPartialCountDTO? */,
        instances = emptyList() /* kotlin.Array<BriefOrderItemInstanceDTO>? */ /* Переданные вами коды маркировки. */
    )

    /**
    * Assign all the columns from the entity of type OrderBoxLayoutItemDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = OrderBoxLayoutItemDTO()
    * database.update(OrderBoxLayoutItemDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: OrderBoxLayoutItemDTO) {
        this.apply {
            set(OrderBoxLayoutItemDTOs.id, entity.id)
            set(OrderBoxLayoutItemDTOs.fullCount, entity.fullCount)
            set(OrderBoxLayoutItemDTOs.partialCount, entity.partialCount)
        }
    }

}


object OrderBoxLayoutItemDTOBriefOrderItemInstanceDTO : BaseTable<Pair<kotlin.Long, kotlin.Long>>("OrderBoxLayoutItemDTOBriefOrderItemInstanceDTO") {
    val orderBoxLayoutItemDTO = long("orderBoxLayoutItemDTO")
    val briefOrderItemInstanceDTO = long("briefOrderItemInstanceDTO")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[orderBoxLayoutItemDTO] ?: 0, row[briefOrderItemInstanceDTO] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(OrderBoxLayoutItemDTOBriefOrderItemInstanceDTO.orderBoxLayoutItemDTO, entity.first)
            set(OrderBoxLayoutItemDTOBriefOrderItemInstanceDTO.briefOrderItemInstanceDTO, entity.second)
        }
    }

}

