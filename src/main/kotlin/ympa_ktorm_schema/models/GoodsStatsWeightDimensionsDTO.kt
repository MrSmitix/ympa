/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Информация о весе и габаритах товара.  Если товар уже привязан к карточке (`marketSku`), в ответе вернутся габариты из карточки Маркета, а не размеры, которые вы передаете. 
 * @param length Длина товара в сантиметрах.
 * @param width Ширина товара в сантиметрах.
 * @param height Высота товара в сантиметрах.
 * @param weight Вес товара в килограммах.
 */
object GoodsStatsWeightDimensionsDTOs : BaseTable<GoodsStatsWeightDimensionsDTO>("GoodsStatsWeightDimensionsDTO") {
    val length = decimal("length") /* null */ /* Длина товара в сантиметрах. */
    val width = decimal("width") /* null */ /* Ширина товара в сантиметрах. */
    val height = decimal("height") /* null */ /* Высота товара в сантиметрах. */
    val weight = decimal("weight") /* null */ /* Вес товара в килограммах. */

    /**
     * Create an entity of type GoodsStatsWeightDimensionsDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = GoodsStatsWeightDimensionsDTO(
        length = row[length]  /* java.math.BigDecimal? */ /* Длина товара в сантиметрах. */,
        width = row[width]  /* java.math.BigDecimal? */ /* Ширина товара в сантиметрах. */,
        height = row[height]  /* java.math.BigDecimal? */ /* Высота товара в сантиметрах. */,
        weight = row[weight]  /* java.math.BigDecimal? */ /* Вес товара в килограммах. */
    )

    /**
    * Assign all the columns from the entity of type GoodsStatsWeightDimensionsDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = GoodsStatsWeightDimensionsDTO()
    * database.update(GoodsStatsWeightDimensionsDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: GoodsStatsWeightDimensionsDTO) {
        this.apply {
            set(GoodsStatsWeightDimensionsDTOs.length, entity.length)
            set(GoodsStatsWeightDimensionsDTOs.width, entity.width)
            set(GoodsStatsWeightDimensionsDTOs.height, entity.height)
            set(GoodsStatsWeightDimensionsDTOs.weight, entity.weight)
        }
    }

}


