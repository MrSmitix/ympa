/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Информация о документах. 
 * @param upd 
 * @param ukd 
 * @param torgTwelve 
 * @param sf 
 * @param ksf 
 */
object OrderBusinessDocumentsDTOs : BaseTable<OrderBusinessDocumentsDTO>("OrderBusinessDocumentsDTO") {
    val upd = long("upd") /* null */
    val ukd = long("ukd") /* null */
    val torgTwelve = long("torgTwelve") /* null */
    val sf = long("sf") /* null */
    val ksf = long("ksf") /* null */

    /**
     * Create an entity of type OrderBusinessDocumentsDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = OrderBusinessDocumentsDTO(
        upd = DocumentDTOs.createEntity(row, withReferences) /* DocumentDTO? */,
        ukd = DocumentDTOs.createEntity(row, withReferences) /* DocumentDTO? */,
        torgTwelve = DocumentDTOs.createEntity(row, withReferences) /* DocumentDTO? */,
        sf = DocumentDTOs.createEntity(row, withReferences) /* DocumentDTO? */,
        ksf = DocumentDTOs.createEntity(row, withReferences) /* DocumentDTO? */
    )

    /**
    * Assign all the columns from the entity of type OrderBusinessDocumentsDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = OrderBusinessDocumentsDTO()
    * database.update(OrderBusinessDocumentsDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: OrderBusinessDocumentsDTO) {
        this.apply {
            set(OrderBusinessDocumentsDTOs.upd, entity.upd)
            set(OrderBusinessDocumentsDTOs.ukd, entity.ukd)
            set(OrderBusinessDocumentsDTOs.torgTwelve, entity.torgTwelve)
            set(OrderBusinessDocumentsDTOs.sf, entity.sf)
            set(OrderBusinessDocumentsDTOs.ksf, entity.ksf)
        }
    }

}


