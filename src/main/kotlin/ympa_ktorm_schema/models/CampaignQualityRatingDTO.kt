/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Информация об индексе качества магазина.
 * @param campaignId Идентификатор магазина.
 * @param ratings Список значений индекса качества.
 */
object CampaignQualityRatingDTOs : BaseTable<CampaignQualityRatingDTO>("CampaignQualityRatingDTO") {
    val campaignId = long("campaignId") /* Идентификатор магазина. */

    /**
     * Create an entity of type CampaignQualityRatingDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = CampaignQualityRatingDTO(
        campaignId = row[campaignId] ?: 0 /* kotlin.Long */ /* Идентификатор магазина. */,
        ratings = emptyList() /* kotlin.Array<QualityRatingDTO> */ /* Список значений индекса качества. */
    )

    /**
    * Assign all the columns from the entity of type CampaignQualityRatingDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = CampaignQualityRatingDTO()
    * database.update(CampaignQualityRatingDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: CampaignQualityRatingDTO) {
        this.apply {
            set(CampaignQualityRatingDTOs.campaignId, entity.campaignId)
        }
    }

}


object CampaignQualityRatingDTOQualityRatingDTO : BaseTable<Pair<kotlin.Long, kotlin.Long>>("CampaignQualityRatingDTOQualityRatingDTO") {
    val campaignQualityRatingDTO = long("campaignQualityRatingDTO")
    val qualityRatingDTO = long("qualityRatingDTO")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[campaignQualityRatingDTO] ?: 0, row[qualityRatingDTO] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(CampaignQualityRatingDTOQualityRatingDTO.campaignQualityRatingDTO, entity.first)
            set(CampaignQualityRatingDTOQualityRatingDTO.qualityRatingDTO, entity.second)
        }
    }

}

