/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Список заказов.
 * @param id Идентификатор заказа.
 * @param status 
 * @param substatus 
 * @param updateStatus 
 * @param errorDetails Ошибка при изменении статуса заказа. Содержит описание ошибки и идентификатор заказа.  Возвращается, если параметр `updateStatus` принимает значение `ERROR`. 
 */
object UpdateOrderStatusDTOs : BaseTable<UpdateOrderStatusDTO>("UpdateOrderStatusDTO") {
    val id = long("id") /* null */ /* Идентификатор заказа. */
    val status = long("status") /* null */
    val substatus = long("substatus") /* null */
    val updateStatus = long("updateStatus") /* null */
    val errorDetails = text("errorDetails") /* null */ /* Ошибка при изменении статуса заказа. Содержит описание ошибки и идентификатор заказа.  Возвращается, если параметр `updateStatus` принимает значение `ERROR`.  */

    /**
     * Create an entity of type UpdateOrderStatusDTO from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = UpdateOrderStatusDTO(
        id = row[id]  /* kotlin.Long? */ /* Идентификатор заказа. */,
        status = OrderStatusTypes.createEntity(row, withReferences) /* OrderStatusType? */,
        substatus = OrderSubstatusTypes.createEntity(row, withReferences) /* OrderSubstatusType? */,
        updateStatus = OrderUpdateStatusTypes.createEntity(row, withReferences) /* OrderUpdateStatusType? */,
        errorDetails = row[errorDetails]  /* kotlin.String? */ /* Ошибка при изменении статуса заказа. Содержит описание ошибки и идентификатор заказа.  Возвращается, если параметр `updateStatus` принимает значение `ERROR`.  */
    )

    /**
    * Assign all the columns from the entity of type UpdateOrderStatusDTO to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = UpdateOrderStatusDTO()
    * database.update(UpdateOrderStatusDTOs, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: UpdateOrderStatusDTO) {
        this.apply {
            set(UpdateOrderStatusDTOs.id, entity.id)
            set(UpdateOrderStatusDTOs.status, entity.status)
            set(UpdateOrderStatusDTOs.substatus, entity.substatus)
            set(UpdateOrderStatusDTOs.updateStatus, entity.updateStatus)
            set(UpdateOrderStatusDTOs.errorDetails, entity.errorDetails)
        }
    }

}


