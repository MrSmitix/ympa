/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_ktorm_schema.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * Неверны авторизационные данные, указанные в запросе, или запрещен доступ к запрашиваемому ресурсу.
 * @param status 
 * @param errors Список ошибок.
 */
object ApiForbiddenErrorResponses : BaseTable<ApiForbiddenErrorResponse>("ApiForbiddenErrorResponse") {
    val status = long("status") /* null */

    /**
     * Create an entity of type ApiForbiddenErrorResponse from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = ApiForbiddenErrorResponse(
        status = ApiResponseStatusTypes.createEntity(row, withReferences) /* ApiResponseStatusType? */,
        errors = emptyList() /* kotlin.Array<ApiErrorDTO>? */ /* Список ошибок. */
    )

    /**
    * Assign all the columns from the entity of type ApiForbiddenErrorResponse to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = ApiForbiddenErrorResponse()
    * database.update(ApiForbiddenErrorResponses, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: ApiForbiddenErrorResponse) {
        this.apply {
            set(ApiForbiddenErrorResponses.status, entity.status)
        }
    }

}


object ApiForbiddenErrorResponseApiErrorDTO : BaseTable<Pair<kotlin.Long, kotlin.Long>>("ApiForbiddenErrorResponseApiErrorDTO") {
    val apiForbiddenErrorResponse = long("apiForbiddenErrorResponse")
    val apiErrorDTO = long("apiErrorDTO")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[apiForbiddenErrorResponse] ?: 0, row[apiErrorDTO] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(ApiForbiddenErrorResponseApiErrorDTO.apiForbiddenErrorResponse, entity.first)
            set(ApiForbiddenErrorResponseApiErrorDTO.apiErrorDTO, entity.second)
        }
    }

}

