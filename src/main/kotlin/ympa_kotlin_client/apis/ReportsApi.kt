/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.apis

import java.io.IOException
import okhttp3.OkHttpClient
import okhttp3.HttpUrl

import ympa_kotlin_client.models.ApiClientDataErrorResponse
import ympa_kotlin_client.models.ApiForbiddenErrorResponse
import ympa_kotlin_client.models.ApiLimitErrorResponse
import ympa_kotlin_client.models.ApiNotFoundErrorResponse
import ympa_kotlin_client.models.ApiServerErrorResponse
import ympa_kotlin_client.models.ApiUnauthorizedErrorResponse
import ympa_kotlin_client.models.GenerateBoostConsolidatedRequest
import ympa_kotlin_client.models.GenerateCompetitorsPositionReportRequest
import ympa_kotlin_client.models.GenerateGoodsFeedbackRequest
import ympa_kotlin_client.models.GenerateGoodsMovementReportRequest
import ympa_kotlin_client.models.GenerateGoodsRealizationReportRequest
import ympa_kotlin_client.models.GenerateGoodsTurnoverRequest
import ympa_kotlin_client.models.GenerateMassOrderLabelsRequest
import ympa_kotlin_client.models.GeneratePricesReportRequest
import ympa_kotlin_client.models.GenerateReportResponse
import ympa_kotlin_client.models.GenerateShelfsStatisticsRequest
import ympa_kotlin_client.models.GenerateShipmentListDocumentReportRequest
import ympa_kotlin_client.models.GenerateShowsSalesReportRequest
import ympa_kotlin_client.models.GenerateStocksOnWarehousesReportRequest
import ympa_kotlin_client.models.GenerateUnitedMarketplaceServicesReportRequest
import ympa_kotlin_client.models.GenerateUnitedNettingReportRequest
import ympa_kotlin_client.models.GenerateUnitedOrdersRequest
import ympa_kotlin_client.models.GetReportInfoResponse
import ympa_kotlin_client.models.PageFormatType
import ympa_kotlin_client.models.ReportFormatType

import com.squareup.moshi.Json

import ympa_kotlin_client.infrastructure.ApiClient
import ympa_kotlin_client.infrastructure.ApiResponse
import ympa_kotlin_client.infrastructure.ClientException
import ympa_kotlin_client.infrastructure.ClientError
import ympa_kotlin_client.infrastructure.ServerException
import ympa_kotlin_client.infrastructure.ServerError
import ympa_kotlin_client.infrastructure.MultiValueMap
import ympa_kotlin_client.infrastructure.PartConfig
import ympa_kotlin_client.infrastructure.RequestConfig
import ympa_kotlin_client.infrastructure.RequestMethod
import ympa_kotlin_client.infrastructure.ResponseType
import ympa_kotlin_client.infrastructure.Success
import ympa_kotlin_client.infrastructure.toMultiValue

class ReportsApi(basePath: kotlin.String = defaultBasePath, client: OkHttpClient = ApiClient.defaultClient) : ApiClient(basePath, client) {
    companion object {
        @JvmStatic
        val defaultBasePath: String by lazy {
            System.getProperties().getProperty(ApiClient.baseUrlKey, "https://api.partner.market.yandex.ru")
        }
    }

    /**
     * Отчет по бусту продаж
     * Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateBoostConsolidatedRequest 
     * @param format Формат отчета. (optional)
     * @return GenerateReportResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun generateBoostConsolidatedReport(generateBoostConsolidatedRequest: GenerateBoostConsolidatedRequest, format: ReportFormatType? = null) : GenerateReportResponse {
        val localVarResponse = generateBoostConsolidatedReportWithHttpInfo(generateBoostConsolidatedRequest = generateBoostConsolidatedRequest, format = format)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GenerateReportResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Отчет по бусту продаж
     * Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateBoostConsolidatedRequest 
     * @param format Формат отчета. (optional)
     * @return ApiResponse<GenerateReportResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun generateBoostConsolidatedReportWithHttpInfo(generateBoostConsolidatedRequest: GenerateBoostConsolidatedRequest, format: ReportFormatType?) : ApiResponse<GenerateReportResponse?> {
        val localVariableConfig = generateBoostConsolidatedReportRequestConfig(generateBoostConsolidatedRequest = generateBoostConsolidatedRequest, format = format)

        return request<GenerateBoostConsolidatedRequest, GenerateReportResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation generateBoostConsolidatedReport
     *
     * @param generateBoostConsolidatedRequest 
     * @param format Формат отчета. (optional)
     * @return RequestConfig
     */
    fun generateBoostConsolidatedReportRequestConfig(generateBoostConsolidatedRequest: GenerateBoostConsolidatedRequest, format: ReportFormatType?) : RequestConfig<GenerateBoostConsolidatedRequest> {
        val localVariableBody = generateBoostConsolidatedRequest
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (format != null) {
                    put("format", listOf(format.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/reports/boost-consolidated/generate",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Отчет «Конкурентная позиция»
     * Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \&quot;Значение -1 в отчете\&quot; %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| 
     * @param generateCompetitorsPositionReportRequest 
     * @param format Формат отчета. (optional)
     * @return GenerateReportResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun generateCompetitorsPositionReport(generateCompetitorsPositionReportRequest: GenerateCompetitorsPositionReportRequest, format: ReportFormatType? = null) : GenerateReportResponse {
        val localVarResponse = generateCompetitorsPositionReportWithHttpInfo(generateCompetitorsPositionReportRequest = generateCompetitorsPositionReportRequest, format = format)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GenerateReportResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Отчет «Конкурентная позиция»
     * Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \&quot;Значение -1 в отчете\&quot; %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| 
     * @param generateCompetitorsPositionReportRequest 
     * @param format Формат отчета. (optional)
     * @return ApiResponse<GenerateReportResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun generateCompetitorsPositionReportWithHttpInfo(generateCompetitorsPositionReportRequest: GenerateCompetitorsPositionReportRequest, format: ReportFormatType?) : ApiResponse<GenerateReportResponse?> {
        val localVariableConfig = generateCompetitorsPositionReportRequestConfig(generateCompetitorsPositionReportRequest = generateCompetitorsPositionReportRequest, format = format)

        return request<GenerateCompetitorsPositionReportRequest, GenerateReportResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation generateCompetitorsPositionReport
     *
     * @param generateCompetitorsPositionReportRequest 
     * @param format Формат отчета. (optional)
     * @return RequestConfig
     */
    fun generateCompetitorsPositionReportRequestConfig(generateCompetitorsPositionReportRequest: GenerateCompetitorsPositionReportRequest, format: ReportFormatType?) : RequestConfig<GenerateCompetitorsPositionReportRequest> {
        val localVariableBody = generateCompetitorsPositionReportRequest
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (format != null) {
                    put("format", listOf(format.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/reports/competitors-position/generate",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Отчет по отзывам о товарах
     * Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateGoodsFeedbackRequest 
     * @param format Формат отчета. (optional)
     * @return GenerateReportResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun generateGoodsFeedbackReport(generateGoodsFeedbackRequest: GenerateGoodsFeedbackRequest, format: ReportFormatType? = null) : GenerateReportResponse {
        val localVarResponse = generateGoodsFeedbackReportWithHttpInfo(generateGoodsFeedbackRequest = generateGoodsFeedbackRequest, format = format)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GenerateReportResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Отчет по отзывам о товарах
     * Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateGoodsFeedbackRequest 
     * @param format Формат отчета. (optional)
     * @return ApiResponse<GenerateReportResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun generateGoodsFeedbackReportWithHttpInfo(generateGoodsFeedbackRequest: GenerateGoodsFeedbackRequest, format: ReportFormatType?) : ApiResponse<GenerateReportResponse?> {
        val localVariableConfig = generateGoodsFeedbackReportRequestConfig(generateGoodsFeedbackRequest = generateGoodsFeedbackRequest, format = format)

        return request<GenerateGoodsFeedbackRequest, GenerateReportResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation generateGoodsFeedbackReport
     *
     * @param generateGoodsFeedbackRequest 
     * @param format Формат отчета. (optional)
     * @return RequestConfig
     */
    fun generateGoodsFeedbackReportRequestConfig(generateGoodsFeedbackRequest: GenerateGoodsFeedbackRequest, format: ReportFormatType?) : RequestConfig<GenerateGoodsFeedbackRequest> {
        val localVariableBody = generateGoodsFeedbackRequest
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (format != null) {
                    put("format", listOf(format.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/reports/goods-feedback/generate",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Отчет по движению товаров
     * Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateGoodsMovementReportRequest 
     * @param format Формат отчета. (optional)
     * @return GenerateReportResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun generateGoodsMovementReport(generateGoodsMovementReportRequest: GenerateGoodsMovementReportRequest, format: ReportFormatType? = null) : GenerateReportResponse {
        val localVarResponse = generateGoodsMovementReportWithHttpInfo(generateGoodsMovementReportRequest = generateGoodsMovementReportRequest, format = format)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GenerateReportResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Отчет по движению товаров
     * Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateGoodsMovementReportRequest 
     * @param format Формат отчета. (optional)
     * @return ApiResponse<GenerateReportResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun generateGoodsMovementReportWithHttpInfo(generateGoodsMovementReportRequest: GenerateGoodsMovementReportRequest, format: ReportFormatType?) : ApiResponse<GenerateReportResponse?> {
        val localVariableConfig = generateGoodsMovementReportRequestConfig(generateGoodsMovementReportRequest = generateGoodsMovementReportRequest, format = format)

        return request<GenerateGoodsMovementReportRequest, GenerateReportResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation generateGoodsMovementReport
     *
     * @param generateGoodsMovementReportRequest 
     * @param format Формат отчета. (optional)
     * @return RequestConfig
     */
    fun generateGoodsMovementReportRequestConfig(generateGoodsMovementReportRequest: GenerateGoodsMovementReportRequest, format: ReportFormatType?) : RequestConfig<GenerateGoodsMovementReportRequest> {
        val localVariableBody = generateGoodsMovementReportRequest
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (format != null) {
                    put("format", listOf(format.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/reports/goods-movement/generate",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Отчет по реализации
     * Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateGoodsRealizationReportRequest 
     * @param format Формат отчета. (optional)
     * @return GenerateReportResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun generateGoodsRealizationReport(generateGoodsRealizationReportRequest: GenerateGoodsRealizationReportRequest, format: ReportFormatType? = null) : GenerateReportResponse {
        val localVarResponse = generateGoodsRealizationReportWithHttpInfo(generateGoodsRealizationReportRequest = generateGoodsRealizationReportRequest, format = format)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GenerateReportResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Отчет по реализации
     * Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateGoodsRealizationReportRequest 
     * @param format Формат отчета. (optional)
     * @return ApiResponse<GenerateReportResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun generateGoodsRealizationReportWithHttpInfo(generateGoodsRealizationReportRequest: GenerateGoodsRealizationReportRequest, format: ReportFormatType?) : ApiResponse<GenerateReportResponse?> {
        val localVariableConfig = generateGoodsRealizationReportRequestConfig(generateGoodsRealizationReportRequest = generateGoodsRealizationReportRequest, format = format)

        return request<GenerateGoodsRealizationReportRequest, GenerateReportResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation generateGoodsRealizationReport
     *
     * @param generateGoodsRealizationReportRequest 
     * @param format Формат отчета. (optional)
     * @return RequestConfig
     */
    fun generateGoodsRealizationReportRequestConfig(generateGoodsRealizationReportRequest: GenerateGoodsRealizationReportRequest, format: ReportFormatType?) : RequestConfig<GenerateGoodsRealizationReportRequest> {
        val localVariableBody = generateGoodsRealizationReportRequest
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (format != null) {
                    put("format", listOf(format.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/reports/goods-realization/generate",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Отчет по оборачиваемости
     * Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateGoodsTurnoverRequest 
     * @param format Формат отчета. (optional)
     * @return GenerateReportResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun generateGoodsTurnoverReport(generateGoodsTurnoverRequest: GenerateGoodsTurnoverRequest, format: ReportFormatType? = null) : GenerateReportResponse {
        val localVarResponse = generateGoodsTurnoverReportWithHttpInfo(generateGoodsTurnoverRequest = generateGoodsTurnoverRequest, format = format)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GenerateReportResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Отчет по оборачиваемости
     * Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateGoodsTurnoverRequest 
     * @param format Формат отчета. (optional)
     * @return ApiResponse<GenerateReportResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun generateGoodsTurnoverReportWithHttpInfo(generateGoodsTurnoverRequest: GenerateGoodsTurnoverRequest, format: ReportFormatType?) : ApiResponse<GenerateReportResponse?> {
        val localVariableConfig = generateGoodsTurnoverReportRequestConfig(generateGoodsTurnoverRequest = generateGoodsTurnoverRequest, format = format)

        return request<GenerateGoodsTurnoverRequest, GenerateReportResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation generateGoodsTurnoverReport
     *
     * @param generateGoodsTurnoverRequest 
     * @param format Формат отчета. (optional)
     * @return RequestConfig
     */
    fun generateGoodsTurnoverReportRequestConfig(generateGoodsTurnoverRequest: GenerateGoodsTurnoverRequest, format: ReportFormatType?) : RequestConfig<GenerateGoodsTurnoverRequest> {
        val localVariableBody = generateGoodsTurnoverRequest
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (format != null) {
                    put("format", listOf(format.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/reports/goods-turnover/generate",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Готовые ярлыки‑наклейки на все коробки в нескольких заказах
     * Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| 
     * @param generateMassOrderLabelsRequest 
     * @param format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7. (optional)
     * @return GenerateReportResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun generateMassOrderLabelsReport(generateMassOrderLabelsRequest: GenerateMassOrderLabelsRequest, format: PageFormatType? = null) : GenerateReportResponse {
        val localVarResponse = generateMassOrderLabelsReportWithHttpInfo(generateMassOrderLabelsRequest = generateMassOrderLabelsRequest, format = format)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GenerateReportResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Готовые ярлыки‑наклейки на все коробки в нескольких заказах
     * Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| 
     * @param generateMassOrderLabelsRequest 
     * @param format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7. (optional)
     * @return ApiResponse<GenerateReportResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun generateMassOrderLabelsReportWithHttpInfo(generateMassOrderLabelsRequest: GenerateMassOrderLabelsRequest, format: PageFormatType?) : ApiResponse<GenerateReportResponse?> {
        val localVariableConfig = generateMassOrderLabelsReportRequestConfig(generateMassOrderLabelsRequest = generateMassOrderLabelsRequest, format = format)

        return request<GenerateMassOrderLabelsRequest, GenerateReportResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation generateMassOrderLabelsReport
     *
     * @param generateMassOrderLabelsRequest 
     * @param format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7. (optional)
     * @return RequestConfig
     */
    fun generateMassOrderLabelsReportRequestConfig(generateMassOrderLabelsRequest: GenerateMassOrderLabelsRequest, format: PageFormatType?) : RequestConfig<GenerateMassOrderLabelsRequest> {
        val localVariableBody = generateMassOrderLabelsRequest
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (format != null) {
                    put("format", listOf(format.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/reports/documents/labels/generate",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Отчет «Цены на рынке»
     * Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generatePricesReportRequest 
     * @param format Формат отчета. (optional)
     * @return GenerateReportResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun generatePricesReport(generatePricesReportRequest: GeneratePricesReportRequest, format: ReportFormatType? = null) : GenerateReportResponse {
        val localVarResponse = generatePricesReportWithHttpInfo(generatePricesReportRequest = generatePricesReportRequest, format = format)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GenerateReportResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Отчет «Цены на рынке»
     * Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generatePricesReportRequest 
     * @param format Формат отчета. (optional)
     * @return ApiResponse<GenerateReportResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun generatePricesReportWithHttpInfo(generatePricesReportRequest: GeneratePricesReportRequest, format: ReportFormatType?) : ApiResponse<GenerateReportResponse?> {
        val localVariableConfig = generatePricesReportRequestConfig(generatePricesReportRequest = generatePricesReportRequest, format = format)

        return request<GeneratePricesReportRequest, GenerateReportResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation generatePricesReport
     *
     * @param generatePricesReportRequest 
     * @param format Формат отчета. (optional)
     * @return RequestConfig
     */
    fun generatePricesReportRequestConfig(generatePricesReportRequest: GeneratePricesReportRequest, format: ReportFormatType?) : RequestConfig<GeneratePricesReportRequest> {
        val localVariableBody = generatePricesReportRequest
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (format != null) {
                    put("format", listOf(format.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/reports/prices/generate",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Отчет по полкам
     * Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateShelfsStatisticsRequest 
     * @param format Формат отчета. (optional)
     * @return GenerateReportResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun generateShelfsStatisticsReport(generateShelfsStatisticsRequest: GenerateShelfsStatisticsRequest, format: ReportFormatType? = null) : GenerateReportResponse {
        val localVarResponse = generateShelfsStatisticsReportWithHttpInfo(generateShelfsStatisticsRequest = generateShelfsStatisticsRequest, format = format)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GenerateReportResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Отчет по полкам
     * Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateShelfsStatisticsRequest 
     * @param format Формат отчета. (optional)
     * @return ApiResponse<GenerateReportResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun generateShelfsStatisticsReportWithHttpInfo(generateShelfsStatisticsRequest: GenerateShelfsStatisticsRequest, format: ReportFormatType?) : ApiResponse<GenerateReportResponse?> {
        val localVariableConfig = generateShelfsStatisticsReportRequestConfig(generateShelfsStatisticsRequest = generateShelfsStatisticsRequest, format = format)

        return request<GenerateShelfsStatisticsRequest, GenerateReportResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation generateShelfsStatisticsReport
     *
     * @param generateShelfsStatisticsRequest 
     * @param format Формат отчета. (optional)
     * @return RequestConfig
     */
    fun generateShelfsStatisticsReportRequestConfig(generateShelfsStatisticsRequest: GenerateShelfsStatisticsRequest, format: ReportFormatType?) : RequestConfig<GenerateShelfsStatisticsRequest> {
        val localVariableBody = generateShelfsStatisticsRequest
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (format != null) {
                    put("format", listOf(format.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/reports/shelf-statistics/generate",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Получение листа сборки
     * Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateShipmentListDocumentReportRequest 
     * @return GenerateReportResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun generateShipmentListDocumentReport(generateShipmentListDocumentReportRequest: GenerateShipmentListDocumentReportRequest) : GenerateReportResponse {
        val localVarResponse = generateShipmentListDocumentReportWithHttpInfo(generateShipmentListDocumentReportRequest = generateShipmentListDocumentReportRequest)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GenerateReportResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Получение листа сборки
     * Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateShipmentListDocumentReportRequest 
     * @return ApiResponse<GenerateReportResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun generateShipmentListDocumentReportWithHttpInfo(generateShipmentListDocumentReportRequest: GenerateShipmentListDocumentReportRequest) : ApiResponse<GenerateReportResponse?> {
        val localVariableConfig = generateShipmentListDocumentReportRequestConfig(generateShipmentListDocumentReportRequest = generateShipmentListDocumentReportRequest)

        return request<GenerateShipmentListDocumentReportRequest, GenerateReportResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation generateShipmentListDocumentReport
     *
     * @param generateShipmentListDocumentReportRequest 
     * @return RequestConfig
     */
    fun generateShipmentListDocumentReportRequestConfig(generateShipmentListDocumentReportRequest: GenerateShipmentListDocumentReportRequest) : RequestConfig<GenerateShipmentListDocumentReportRequest> {
        val localVariableBody = generateShipmentListDocumentReportRequest
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/reports/documents/shipment-list/generate",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Отчет «Аналитика продаж»
     * Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| 
     * @param generateShowsSalesReportRequest 
     * @param format Формат отчета. (optional)
     * @return GenerateReportResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun generateShowsSalesReport(generateShowsSalesReportRequest: GenerateShowsSalesReportRequest, format: ReportFormatType? = null) : GenerateReportResponse {
        val localVarResponse = generateShowsSalesReportWithHttpInfo(generateShowsSalesReportRequest = generateShowsSalesReportRequest, format = format)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GenerateReportResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Отчет «Аналитика продаж»
     * Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| 
     * @param generateShowsSalesReportRequest 
     * @param format Формат отчета. (optional)
     * @return ApiResponse<GenerateReportResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun generateShowsSalesReportWithHttpInfo(generateShowsSalesReportRequest: GenerateShowsSalesReportRequest, format: ReportFormatType?) : ApiResponse<GenerateReportResponse?> {
        val localVariableConfig = generateShowsSalesReportRequestConfig(generateShowsSalesReportRequest = generateShowsSalesReportRequest, format = format)

        return request<GenerateShowsSalesReportRequest, GenerateReportResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation generateShowsSalesReport
     *
     * @param generateShowsSalesReportRequest 
     * @param format Формат отчета. (optional)
     * @return RequestConfig
     */
    fun generateShowsSalesReportRequestConfig(generateShowsSalesReportRequest: GenerateShowsSalesReportRequest, format: ReportFormatType?) : RequestConfig<GenerateShowsSalesReportRequest> {
        val localVariableBody = generateShowsSalesReportRequest
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (format != null) {
                    put("format", listOf(format.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/reports/shows-sales/generate",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Отчет по остаткам на складах
     * Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateStocksOnWarehousesReportRequest 
     * @param format Формат отчета. (optional)
     * @return GenerateReportResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun generateStocksOnWarehousesReport(generateStocksOnWarehousesReportRequest: GenerateStocksOnWarehousesReportRequest, format: ReportFormatType? = null) : GenerateReportResponse {
        val localVarResponse = generateStocksOnWarehousesReportWithHttpInfo(generateStocksOnWarehousesReportRequest = generateStocksOnWarehousesReportRequest, format = format)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GenerateReportResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Отчет по остаткам на складах
     * Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateStocksOnWarehousesReportRequest 
     * @param format Формат отчета. (optional)
     * @return ApiResponse<GenerateReportResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun generateStocksOnWarehousesReportWithHttpInfo(generateStocksOnWarehousesReportRequest: GenerateStocksOnWarehousesReportRequest, format: ReportFormatType?) : ApiResponse<GenerateReportResponse?> {
        val localVariableConfig = generateStocksOnWarehousesReportRequestConfig(generateStocksOnWarehousesReportRequest = generateStocksOnWarehousesReportRequest, format = format)

        return request<GenerateStocksOnWarehousesReportRequest, GenerateReportResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation generateStocksOnWarehousesReport
     *
     * @param generateStocksOnWarehousesReportRequest 
     * @param format Формат отчета. (optional)
     * @return RequestConfig
     */
    fun generateStocksOnWarehousesReportRequestConfig(generateStocksOnWarehousesReportRequest: GenerateStocksOnWarehousesReportRequest, format: ReportFormatType?) : RequestConfig<GenerateStocksOnWarehousesReportRequest> {
        val localVariableBody = generateStocksOnWarehousesReportRequest
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (format != null) {
                    put("format", listOf(format.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/reports/stocks-on-warehouses/generate",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Отчет по стоимости услуг
     * Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |-----------------------------|---------------------------------| |По дате начисления услуги    |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;            | |По дате формирования акта    |&#x60;year&#x60; и &#x60;month&#x60;                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateUnitedMarketplaceServicesReportRequest 
     * @param format Формат отчета. (optional)
     * @return GenerateReportResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun generateUnitedMarketplaceServicesReport(generateUnitedMarketplaceServicesReportRequest: GenerateUnitedMarketplaceServicesReportRequest, format: ReportFormatType? = null) : GenerateReportResponse {
        val localVarResponse = generateUnitedMarketplaceServicesReportWithHttpInfo(generateUnitedMarketplaceServicesReportRequest = generateUnitedMarketplaceServicesReportRequest, format = format)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GenerateReportResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Отчет по стоимости услуг
     * Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |-----------------------------|---------------------------------| |По дате начисления услуги    |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;            | |По дате формирования акта    |&#x60;year&#x60; и &#x60;month&#x60;                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateUnitedMarketplaceServicesReportRequest 
     * @param format Формат отчета. (optional)
     * @return ApiResponse<GenerateReportResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun generateUnitedMarketplaceServicesReportWithHttpInfo(generateUnitedMarketplaceServicesReportRequest: GenerateUnitedMarketplaceServicesReportRequest, format: ReportFormatType?) : ApiResponse<GenerateReportResponse?> {
        val localVariableConfig = generateUnitedMarketplaceServicesReportRequestConfig(generateUnitedMarketplaceServicesReportRequest = generateUnitedMarketplaceServicesReportRequest, format = format)

        return request<GenerateUnitedMarketplaceServicesReportRequest, GenerateReportResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation generateUnitedMarketplaceServicesReport
     *
     * @param generateUnitedMarketplaceServicesReportRequest 
     * @param format Формат отчета. (optional)
     * @return RequestConfig
     */
    fun generateUnitedMarketplaceServicesReportRequestConfig(generateUnitedMarketplaceServicesReportRequest: GenerateUnitedMarketplaceServicesReportRequest, format: ReportFormatType?) : RequestConfig<GenerateUnitedMarketplaceServicesReportRequest> {
        val localVariableBody = generateUnitedMarketplaceServicesReportRequest
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (format != null) {
                    put("format", listOf(format.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/reports/united-marketplace-services/generate",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Отчет по платежам
     * Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |-------------------------|---------------------------------------| |О платежах за период     |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;                  | |О платежном поручении    |&#x60;bankOrderId&#x60; и &#x60;bankOrderDateTime&#x60;    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateUnitedNettingReportRequest 
     * @param format Формат отчета. (optional)
     * @return GenerateReportResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun generateUnitedNettingReport(generateUnitedNettingReportRequest: GenerateUnitedNettingReportRequest, format: ReportFormatType? = null) : GenerateReportResponse {
        val localVarResponse = generateUnitedNettingReportWithHttpInfo(generateUnitedNettingReportRequest = generateUnitedNettingReportRequest, format = format)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GenerateReportResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Отчет по платежам
     * Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |-------------------------|---------------------------------------| |О платежах за период     |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;                  | |О платежном поручении    |&#x60;bankOrderId&#x60; и &#x60;bankOrderDateTime&#x60;    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateUnitedNettingReportRequest 
     * @param format Формат отчета. (optional)
     * @return ApiResponse<GenerateReportResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun generateUnitedNettingReportWithHttpInfo(generateUnitedNettingReportRequest: GenerateUnitedNettingReportRequest, format: ReportFormatType?) : ApiResponse<GenerateReportResponse?> {
        val localVariableConfig = generateUnitedNettingReportRequestConfig(generateUnitedNettingReportRequest = generateUnitedNettingReportRequest, format = format)

        return request<GenerateUnitedNettingReportRequest, GenerateReportResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation generateUnitedNettingReport
     *
     * @param generateUnitedNettingReportRequest 
     * @param format Формат отчета. (optional)
     * @return RequestConfig
     */
    fun generateUnitedNettingReportRequestConfig(generateUnitedNettingReportRequest: GenerateUnitedNettingReportRequest, format: ReportFormatType?) : RequestConfig<GenerateUnitedNettingReportRequest> {
        val localVariableBody = generateUnitedNettingReportRequest
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (format != null) {
                    put("format", listOf(format.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/reports/united-netting/generate",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Отчет по заказам
     * Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \&quot;\&quot; %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateUnitedOrdersRequest 
     * @param format Формат отчета. (optional)
     * @return GenerateReportResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun generateUnitedOrdersReport(generateUnitedOrdersRequest: GenerateUnitedOrdersRequest, format: ReportFormatType? = null) : GenerateReportResponse {
        val localVarResponse = generateUnitedOrdersReportWithHttpInfo(generateUnitedOrdersRequest = generateUnitedOrdersRequest, format = format)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GenerateReportResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Отчет по заказам
     * Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \&quot;\&quot; %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param generateUnitedOrdersRequest 
     * @param format Формат отчета. (optional)
     * @return ApiResponse<GenerateReportResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun generateUnitedOrdersReportWithHttpInfo(generateUnitedOrdersRequest: GenerateUnitedOrdersRequest, format: ReportFormatType?) : ApiResponse<GenerateReportResponse?> {
        val localVariableConfig = generateUnitedOrdersReportRequestConfig(generateUnitedOrdersRequest = generateUnitedOrdersRequest, format = format)

        return request<GenerateUnitedOrdersRequest, GenerateReportResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation generateUnitedOrdersReport
     *
     * @param generateUnitedOrdersRequest 
     * @param format Формат отчета. (optional)
     * @return RequestConfig
     */
    fun generateUnitedOrdersReportRequestConfig(generateUnitedOrdersRequest: GenerateUnitedOrdersRequest, format: ReportFormatType?) : RequestConfig<GenerateUnitedOrdersRequest> {
        val localVariableBody = generateUnitedOrdersRequest
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (format != null) {
                    put("format", listOf(format.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/reports/united-orders/generate",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Получение заданного отчета
     * Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
     * @param reportId Идентификатор отчета, который вы получили после запуска генерации. 
     * @return GetReportInfoResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getReportInfo(reportId: kotlin.String) : GetReportInfoResponse {
        val localVarResponse = getReportInfoWithHttpInfo(reportId = reportId)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetReportInfoResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Получение заданного отчета
     * Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
     * @param reportId Идентификатор отчета, который вы получили после запуска генерации. 
     * @return ApiResponse<GetReportInfoResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getReportInfoWithHttpInfo(reportId: kotlin.String) : ApiResponse<GetReportInfoResponse?> {
        val localVariableConfig = getReportInfoRequestConfig(reportId = reportId)

        return request<Unit, GetReportInfoResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getReportInfo
     *
     * @param reportId Идентификатор отчета, который вы получили после запуска генерации. 
     * @return RequestConfig
     */
    fun getReportInfoRequestConfig(reportId: kotlin.String) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/reports/info/{reportId}".replace("{"+"reportId"+"}", encodeURIComponent(reportId.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }


    private fun encodeURIComponent(uriComponent: kotlin.String): kotlin.String =
        HttpUrl.Builder().scheme("http").host("localhost").addPathSegment(uriComponent).build().encodedPathSegments[0]
}
