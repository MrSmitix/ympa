/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Типы ошибок:  * `OFFER_NOT_FOUND` — такого товара нет в каталоге. * `UNKNOWN_CATEGORY` — указана неизвестная категория. * `CATEGORY_MISMATCH` — указана категория, которая не совпадает с категорией товара. * `UNKNOWN_PARAMETER` — передана характеристика, которой нет среди характеристик категории. * `UNEXPECTED_BOOLEAN_VALUE` — вместо boolean-значения передано что-то другое. * `NUMBER_FORMAT` — передана строка, не обозначающая число, вместо числа. * `VALUE_BLANK` — передано пустое значение. * `INVALID_UNIT_ID` — передана единица измерения, недопустимая для характеристики. * `INVALID_GROUP_ID_LENGTH` — в названии превышено допустимое значение символов — 255. * `INVALID_GROUP_ID_CHARACTERS` — переданы [недопустимые символы](*ascii-code). 
 *
 * Values: OFFER_NOT_FOUND,UNKNOWN_CATEGORY,CATEGORY_MISMATCH,UNKNOWN_PARAMETER,UNEXPECTED_BOOLEAN_VALUE,NUMBER_FORMAT,VALUE_BLANK,INVALID_UNIT_ID,INVALID_GROUP_ID_LENGTH,INVALID_GROUP_ID_CHARACTERS
 */

@JsonClass(generateAdapter = false)
enum class OfferContentErrorType(val value: kotlin.String) {

    @Json(name = "OFFER_NOT_FOUND")
    OFFER_NOT_FOUND("OFFER_NOT_FOUND"),

    @Json(name = "UNKNOWN_CATEGORY")
    UNKNOWN_CATEGORY("UNKNOWN_CATEGORY"),

    @Json(name = "CATEGORY_MISMATCH")
    CATEGORY_MISMATCH("CATEGORY_MISMATCH"),

    @Json(name = "UNKNOWN_PARAMETER")
    UNKNOWN_PARAMETER("UNKNOWN_PARAMETER"),

    @Json(name = "UNEXPECTED_BOOLEAN_VALUE")
    UNEXPECTED_BOOLEAN_VALUE("UNEXPECTED_BOOLEAN_VALUE"),

    @Json(name = "NUMBER_FORMAT")
    NUMBER_FORMAT("NUMBER_FORMAT"),

    @Json(name = "VALUE_BLANK")
    VALUE_BLANK("VALUE_BLANK"),

    @Json(name = "INVALID_UNIT_ID")
    INVALID_UNIT_ID("INVALID_UNIT_ID"),

    @Json(name = "INVALID_GROUP_ID_LENGTH")
    INVALID_GROUP_ID_LENGTH("INVALID_GROUP_ID_LENGTH"),

    @Json(name = "INVALID_GROUP_ID_CHARACTERS")
    INVALID_GROUP_ID_CHARACTERS("INVALID_GROUP_ID_CHARACTERS");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is OfferContentErrorType) "$data" else null

        /**
         * Returns a valid [OfferContentErrorType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): OfferContentErrorType? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

