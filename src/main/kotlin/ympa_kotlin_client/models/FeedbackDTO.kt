/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models

import ympa_kotlin_client.models.FeedbackAuthorDTO
import ympa_kotlin_client.models.FeedbackCommentDTO
import ympa_kotlin_client.models.FeedbackGradesDTO
import ympa_kotlin_client.models.FeedbackOrderDTO
import ympa_kotlin_client.models.FeedbackShopDTO
import ympa_kotlin_client.models.FeedbackStateType

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Отзыв пользователя Яндекс Маркета об указанном магазине.
 *
 * @param comments Переписка автора отзыва с магазином.
 * @param id Идентификатор отзыва.
 * @param createdAt Дата и время создания отзыва.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`. 
 * @param text Комментарий автора отзыва.
 * @param state 
 * @param author 
 * @param pro Достоинства магазина, описанные в отзыве.
 * @param contra Недостатки магазина, описанные в отзыве.
 * @param shop 
 * @param resolved Решена ли проблема автора отзыва:  * `true` — да. * `false` — нет.  Если проблема решена, около отзыва на странице магазина появляется соответствующая надпись. 
 * @param verified {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Является ли отзыв рекомендованным:  * `true` — да. * `false` — нет. 
 * @param recommend Купил бы автор отзыва в магазине снова:  * `true` — да. * `false` — нет. 
 * @param grades 
 * @param order 
 */


data class FeedbackDTO (

    /* Переписка автора отзыва с магазином. */
    @Json(name = "comments")
    val comments: kotlin.collections.List<FeedbackCommentDTO>,

    /* Идентификатор отзыва. */
    @Json(name = "id")
    val id: kotlin.Long? = null,

    /* Дата и время создания отзыва.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`.  */
    @Json(name = "createdAt")
    val createdAt: java.time.OffsetDateTime? = null,

    /* Комментарий автора отзыва. */
    @Json(name = "text")
    val text: kotlin.String? = null,

    @Json(name = "state")
    val state: FeedbackStateType? = null,

    @Json(name = "author")
    val author: FeedbackAuthorDTO? = null,

    /* Достоинства магазина, описанные в отзыве. */
    @Json(name = "pro")
    val pro: kotlin.String? = null,

    /* Недостатки магазина, описанные в отзыве. */
    @Json(name = "contra")
    val contra: kotlin.String? = null,

    @Json(name = "shop")
    val shop: FeedbackShopDTO? = null,

    /* Решена ли проблема автора отзыва:  * `true` — да. * `false` — нет.  Если проблема решена, около отзыва на странице магазина появляется соответствующая надпись.  */
    @Json(name = "resolved")
    val resolved: kotlin.Boolean? = null,

    /* {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Является ли отзыв рекомендованным:  * `true` — да. * `false` — нет.  */
    @Json(name = "verified")
    val verified: kotlin.Boolean? = null,

    /* Купил бы автор отзыва в магазине снова:  * `true` — да. * `false` — нет.  */
    @Json(name = "recommend")
    val recommend: kotlin.Boolean? = null,

    @Json(name = "grades")
    val grades: FeedbackGradesDTO? = null,

    @Json(name = "order")
    val order: FeedbackOrderDTO? = null

) {


}

