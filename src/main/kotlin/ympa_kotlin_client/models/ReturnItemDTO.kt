/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models

import ympa_kotlin_client.models.ReturnDecisionDTO
import ympa_kotlin_client.models.ReturnInstanceDTO
import ympa_kotlin_client.models.TrackDTO

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Список товаров в возврате.
 *
 * @param shopSku Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
 * @param count Количество единиц товара.
 * @param marketSku SKU на Маркете.
 * @param decisions Список решений по возврату.
 * @param instances Список логистических позиций возврата.
 * @param tracks Список трек-кодов для почтовых отправлений.
 */


data class ReturnItemDTO (

    /* Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)  */
    @Json(name = "shopSku")
    val shopSku: kotlin.String,

    /* Количество единиц товара. */
    @Json(name = "count")
    val count: kotlin.Long,

    /* SKU на Маркете. */
    @Json(name = "marketSku")
    val marketSku: kotlin.Long? = null,

    /* Список решений по возврату. */
    @Json(name = "decisions")
    val decisions: kotlin.collections.List<ReturnDecisionDTO>? = null,

    /* Список логистических позиций возврата. */
    @Json(name = "instances")
    val instances: kotlin.collections.List<ReturnInstanceDTO>? = null,

    /* Список трек-кодов для почтовых отправлений. */
    @Json(name = "tracks")
    val tracks: kotlin.collections.List<TrackDTO>? = null

) {


}

