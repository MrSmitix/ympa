/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Рекомендация по дополнению или замене контента. Не возвращается для карточек, которые заполнены Маркетом или содержат бывшие в употреблении товары.  Часть рекомендаций относятся к **основным параметрам**, которые есть у товаров любых категорий. Другие — к тем **характеристикам**, которые есть у товара потому, что он относится к определенной категории.  **1. Рекомендации, относящиеся к основным параметрам**  Каждая такая рекомендация относится к **единственному параметру**. Чтобы заполнить этот параметр, пользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  Рекомендации по заполнению параметров в `updateOfferMappings`:  * `RECOGNIZED_VENDOR` — напишите название производителя так, как его пишет сам производитель (параметр `vendor`). * `PICTURE_COUNT` — добавьте изображения (параметр `pictures`). * `FIRST_PICTURE_SIZE` — замените первое изображение более крупным (параметр `pictures`). * `TITLE_LENGTH` — измените название (параметр `name`). Составьте название по схеме: тип + бренд или производитель + модель + особенности, если есть (размер, вес, цвет). * `DESCRIPTION_LENGTH` — добавьте описание рекомендуемого размера (параметр `description`). * `AVERAGE_PICTURE_SIZE` — замените все изображения на изображения высокого качества (параметр `pictures`). * `FIRST_VIDEO_LENGTH` — добавьте первое видео рекомендуемой длины (параметр `videos`). * `AVERAGE_VIDEO_SIZE` — замените все видео на видео высокого качества (параметр `videos`). * `VIDEO_COUNT` — добавьте больше видео (параметр `videos`).  Рекомендуемые значения параметров описаны в [Справке Яндекс Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/add/).  **2. Рекомендации, относящиеся к характеристикам по категориям**  Каждая такая рекомендация предполагает заполнение **одной или нескольких характеристик**. Чтобы узнать, какие именно характеристики нужно заполнить, воспользуйтесь запросом [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md). Например, если вы получили рекомендацию `MAIN`, нужно заполнить характеристики, имеющие `MAIN` в массиве `recommendationTypes`.  Рекомендации:  * `MAIN` — заполните ключевые характеристики товара, которые используются в поиске и фильтрах. * `ADDITIONAL` — заполните дополнительные характеристики товара. * `DISTINCTIVE` — заполните характеристики, которыми отличаются друг от друга варианты товара.  **3. Устаревшие рекомендации**  * `HAS_VIDEO`. * `FILTERABLE`. * `HAS_DESCRIPTION`. * `HAS_BARCODE`. 
 *
 * Values: HAS_VIDEO,RECOGNIZED_VENDOR,MAIN,ADDITIONAL,DISTINCTIVE,FILTERABLE,PICTURE_COUNT,HAS_DESCRIPTION,HAS_BARCODE,FIRST_PICTURE_SIZE,TITLE_LENGTH,DESCRIPTION_LENGTH,AVERAGE_PICTURE_SIZE,FIRST_VIDEO_SIZE,FIRST_VIDEO_LENGTH,AVERAGE_VIDEO_SIZE,VIDEO_COUNT
 */

@JsonClass(generateAdapter = false)
enum class OfferCardRecommendationType(val value: kotlin.String) {

    @Json(name = "HAS_VIDEO")
    HAS_VIDEO("HAS_VIDEO"),

    @Json(name = "RECOGNIZED_VENDOR")
    RECOGNIZED_VENDOR("RECOGNIZED_VENDOR"),

    @Json(name = "MAIN")
    MAIN("MAIN"),

    @Json(name = "ADDITIONAL")
    ADDITIONAL("ADDITIONAL"),

    @Json(name = "DISTINCTIVE")
    DISTINCTIVE("DISTINCTIVE"),

    @Json(name = "FILTERABLE")
    FILTERABLE("FILTERABLE"),

    @Json(name = "PICTURE_COUNT")
    PICTURE_COUNT("PICTURE_COUNT"),

    @Json(name = "HAS_DESCRIPTION")
    HAS_DESCRIPTION("HAS_DESCRIPTION"),

    @Json(name = "HAS_BARCODE")
    HAS_BARCODE("HAS_BARCODE"),

    @Json(name = "FIRST_PICTURE_SIZE")
    FIRST_PICTURE_SIZE("FIRST_PICTURE_SIZE"),

    @Json(name = "TITLE_LENGTH")
    TITLE_LENGTH("TITLE_LENGTH"),

    @Json(name = "DESCRIPTION_LENGTH")
    DESCRIPTION_LENGTH("DESCRIPTION_LENGTH"),

    @Json(name = "AVERAGE_PICTURE_SIZE")
    AVERAGE_PICTURE_SIZE("AVERAGE_PICTURE_SIZE"),

    @Json(name = "FIRST_VIDEO_SIZE")
    FIRST_VIDEO_SIZE("FIRST_VIDEO_SIZE"),

    @Json(name = "FIRST_VIDEO_LENGTH")
    FIRST_VIDEO_LENGTH("FIRST_VIDEO_LENGTH"),

    @Json(name = "AVERAGE_VIDEO_SIZE")
    AVERAGE_VIDEO_SIZE("AVERAGE_VIDEO_SIZE"),

    @Json(name = "VIDEO_COUNT")
    VIDEO_COUNT("VIDEO_COUNT");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is OfferCardRecommendationType) "$data" else null

        /**
         * Returns a valid [OfferCardRecommendationType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): OfferCardRecommendationType? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

