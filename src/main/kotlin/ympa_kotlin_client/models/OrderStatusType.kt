/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Статус заказа:  * `CANCELLED` — отменен.  * `DELIVERED` — получен покупателем.  * `DELIVERY` — передан в службу доставки.  * `PICKUP` — доставлен в пункт самовывоза.  * `PROCESSING` — находится в обработке.  * `PENDING` — ожидает обработки со стороны продавца.  * `UNPAID` — оформлен, но еще не оплачен (если выбрана оплата при оформлении).  * `PLACING` — оформляется, подготовка к резервированию.  * `RESERVED` — зарезервирован, но недооформлен.  * `PARTIALLY_RETURNED` — возвращен частично.  * `RETURNED` — возвращен полностью.  * `UNKNOWN` — неизвестный статус.  Также могут возвращаться другие значения. Обрабатывать их не требуется. 
 *
 * Values: PLACING,RESERVED,UNPAID,PROCESSING,DELIVERY,PICKUP,DELIVERED,CANCELLED,PENDING,PARTIALLY_RETURNED,RETURNED,UNKNOWN
 */

@JsonClass(generateAdapter = false)
enum class OrderStatusType(val value: kotlin.String) {

    @Json(name = "PLACING")
    PLACING("PLACING"),

    @Json(name = "RESERVED")
    RESERVED("RESERVED"),

    @Json(name = "UNPAID")
    UNPAID("UNPAID"),

    @Json(name = "PROCESSING")
    PROCESSING("PROCESSING"),

    @Json(name = "DELIVERY")
    DELIVERY("DELIVERY"),

    @Json(name = "PICKUP")
    PICKUP("PICKUP"),

    @Json(name = "DELIVERED")
    DELIVERED("DELIVERED"),

    @Json(name = "CANCELLED")
    CANCELLED("CANCELLED"),

    @Json(name = "PENDING")
    PENDING("PENDING"),

    @Json(name = "PARTIALLY_RETURNED")
    PARTIALLY_RETURNED("PARTIALLY_RETURNED"),

    @Json(name = "RETURNED")
    RETURNED("RETURNED"),

    @Json(name = "UNKNOWN")
    UNKNOWN("UNKNOWN");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is OrderStatusType) "$data" else null

        /**
         * Returns a valid [OrderStatusType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): OrderStatusType? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

