/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models

import ympa_kotlin_client.models.OrderItemDetailDTO
import ympa_kotlin_client.models.OrderItemInstanceDTO
import ympa_kotlin_client.models.OrderItemInstanceType
import ympa_kotlin_client.models.OrderItemPromoDTO
import ympa_kotlin_client.models.OrderItemSubsidyDTO
import ympa_kotlin_client.models.OrderVatType

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Список товаров в заказе.
 *
 * @param id Идентификатор товара в заказе.  Позволяет идентифицировать товар в рамках данного заказа. 
 * @param offerId Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
 * @param offerName Название товара.
 * @param price Цена на товар в валюте заказа без учета вознаграждения партнеру за скидки по промокодам, купонам и акциям (параметр `subsidies`). 
 * @param buyerPrice Цена на товар в валюте покупателя. В цене уже учтены скидки по:  * акциям; * купонам; * промокодам. 
 * @param buyerPriceBeforeDiscount Стоимость товара в валюте покупателя до применения скидок по:  * акциям; * купонам; * промокодам. 
 * @param priceBeforeDiscount {% note warning \"\" %}  Этот параметр устарел.  {% endnote %}  Стоимость товара в валюте магазина до применения скидок. 
 * @param count Количество единиц товара.
 * @param vat 
 * @param shopSku Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
 * @param subsidy {% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `subsidies`.  {% endnote %}  Общее вознаграждение партнеру за DBS-доставку и все скидки на товар:  * по промокодам; * по купонам; * по баллам Плюса; * по акциям.  Передается в валюте заказа. 
 * @param partnerWarehouseId {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Идентификатор склада в системе партнера, на который сформирован заказ. 
 * @param promos Информация о вознаграждениях партнеру за скидки на товар по промокодам, купонам и акциям.
 * @param instances Информация о маркировке единиц товара.  Возвращаются данные для маркировки, переданные в запросе [PUT campaigns/{campaignId}/orders/{orderId}/cis](../../reference/orders/provideOrderItemCis.md).  Если магазин еще не передавал коды для этого заказа, `instances` отсутствует. 
 * @param details Информация об удалении товара из заказа. 
 * @param subsidies Список субсидий по типам.
 * @param requiredInstanceTypes Список необходимых маркировок товара.
 */


data class OrderItemDTO (

    /* Идентификатор товара в заказе.  Позволяет идентифицировать товар в рамках данного заказа.  */
    @Json(name = "id")
    val id: kotlin.Long? = null,

    /* Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)  */
    @Json(name = "offerId")
    val offerId: kotlin.String? = null,

    /* Название товара. */
    @Json(name = "offerName")
    val offerName: kotlin.String? = null,

    /* Цена на товар в валюте заказа без учета вознаграждения партнеру за скидки по промокодам, купонам и акциям (параметр `subsidies`).  */
    @Json(name = "price")
    val price: java.math.BigDecimal? = null,

    /* Цена на товар в валюте покупателя. В цене уже учтены скидки по:  * акциям; * купонам; * промокодам.  */
    @Json(name = "buyerPrice")
    val buyerPrice: java.math.BigDecimal? = null,

    /* Стоимость товара в валюте покупателя до применения скидок по:  * акциям; * купонам; * промокодам.  */
    @Json(name = "buyerPriceBeforeDiscount")
    val buyerPriceBeforeDiscount: java.math.BigDecimal? = null,

    /* {% note warning \"\" %}  Этот параметр устарел.  {% endnote %}  Стоимость товара в валюте магазина до применения скидок.  */
    @Json(name = "priceBeforeDiscount")
    @Deprecated(message = "This property is deprecated.")
    val priceBeforeDiscount: java.math.BigDecimal? = null,

    /* Количество единиц товара. */
    @Json(name = "count")
    val count: kotlin.Int? = null,

    @Json(name = "vat")
    val vat: OrderVatType? = null,

    /* Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)  */
    @Json(name = "shopSku")
    val shopSku: kotlin.String? = null,

    /* {% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `subsidies`.  {% endnote %}  Общее вознаграждение партнеру за DBS-доставку и все скидки на товар:  * по промокодам; * по купонам; * по баллам Плюса; * по акциям.  Передается в валюте заказа.  */
    @Json(name = "subsidy")
    @Deprecated(message = "This property is deprecated.")
    val subsidy: java.math.BigDecimal? = null,

    /* {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Идентификатор склада в системе партнера, на который сформирован заказ.  */
    @Json(name = "partnerWarehouseId")
    @Deprecated(message = "This property is deprecated.")
    val partnerWarehouseId: kotlin.String? = null,

    /* Информация о вознаграждениях партнеру за скидки на товар по промокодам, купонам и акциям. */
    @Json(name = "promos")
    val promos: kotlin.collections.List<OrderItemPromoDTO>? = null,

    /* Информация о маркировке единиц товара.  Возвращаются данные для маркировки, переданные в запросе [PUT campaigns/{campaignId}/orders/{orderId}/cis](../../reference/orders/provideOrderItemCis.md).  Если магазин еще не передавал коды для этого заказа, `instances` отсутствует.  */
    @Json(name = "instances")
    val instances: kotlin.collections.List<OrderItemInstanceDTO>? = null,

    /* Информация об удалении товара из заказа.  */
    @Json(name = "details")
    val details: kotlin.collections.List<OrderItemDetailDTO>? = null,

    /* Список субсидий по типам. */
    @Json(name = "subsidies")
    val subsidies: kotlin.collections.List<OrderItemSubsidyDTO>? = null,

    /* Список необходимых маркировок товара. */
    @Json(name = "requiredInstanceTypes")
    val requiredInstanceTypes: kotlin.collections.List<OrderItemInstanceType>? = null

) {


}

