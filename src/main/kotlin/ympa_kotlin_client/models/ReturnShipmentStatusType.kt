/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Статус передачи возврата:  * `CREATED` — возврат создан.  * `RECEIVED` — принят у покупателя.  * `IN_TRANSIT` — возврат в пути.  * `READY_FOR_PICKUP` — возврат готов к выдаче магазину.  * `PICKED` — возврат выдан магазину.  * `LOST` — возврат утерян при транспортировке.  * `CANCELLED` — возврат отменен.  * `FULFILMENT_RECEIVED` — возврат принят на складе Маркета.  * `PREPARED_FOR_UTILIZATION` — возврат передан в утилизацию.  * `UTILIZED` — возврат утилизирован. 
 *
 * Values: CREATED,RECEIVED,IN_TRANSIT,READY_FOR_PICKUP,PICKED,LOST,EXPIRED,CANCELLED,FULFILMENT_RECEIVED,PREPARED_FOR_UTILIZATION,NOT_IN_DEMAND,UTILIZED,READY_FOR_EXPROPRIATION,RECEIVED_FOR_EXPROPRIATION
 */

@JsonClass(generateAdapter = false)
enum class ReturnShipmentStatusType(val value: kotlin.String) {

    @Json(name = "CREATED")
    CREATED("CREATED"),

    @Json(name = "RECEIVED")
    RECEIVED("RECEIVED"),

    @Json(name = "IN_TRANSIT")
    IN_TRANSIT("IN_TRANSIT"),

    @Json(name = "READY_FOR_PICKUP")
    READY_FOR_PICKUP("READY_FOR_PICKUP"),

    @Json(name = "PICKED")
    PICKED("PICKED"),

    @Json(name = "LOST")
    LOST("LOST"),

    @Json(name = "EXPIRED")
    EXPIRED("EXPIRED"),

    @Json(name = "CANCELLED")
    CANCELLED("CANCELLED"),

    @Json(name = "FULFILMENT_RECEIVED")
    FULFILMENT_RECEIVED("FULFILMENT_RECEIVED"),

    @Json(name = "PREPARED_FOR_UTILIZATION")
    PREPARED_FOR_UTILIZATION("PREPARED_FOR_UTILIZATION"),

    @Json(name = "NOT_IN_DEMAND")
    NOT_IN_DEMAND("NOT_IN_DEMAND"),

    @Json(name = "UTILIZED")
    UTILIZED("UTILIZED"),

    @Json(name = "READY_FOR_EXPROPRIATION")
    READY_FOR_EXPROPRIATION("READY_FOR_EXPROPRIATION"),

    @Json(name = "RECEIVED_FOR_EXPROPRIATION")
    RECEIVED_FOR_EXPROPRIATION("RECEIVED_FOR_EXPROPRIATION");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is ReturnShipmentStatusType) "$data" else null

        /**
         * Returns a valid [ReturnShipmentStatusType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): ReturnShipmentStatusType? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

