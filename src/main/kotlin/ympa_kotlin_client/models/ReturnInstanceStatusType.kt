/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Логистический статус конкретного товара.
 *
 * Values: CREATED,RECEIVED,IN_TRANSIT,READY_FOR_PICKUP,PICKED,RECEIVED_ON_FULFILLMENT,CANCELLED,LOST,UTILIZED,PREPARED_FOR_UTILIZATION,EXPROPRIATED,NOT_IN_DEMAND
 */

@JsonClass(generateAdapter = false)
enum class ReturnInstanceStatusType(val value: kotlin.String) {

    @Json(name = "CREATED")
    CREATED("CREATED"),

    @Json(name = "RECEIVED")
    RECEIVED("RECEIVED"),

    @Json(name = "IN_TRANSIT")
    IN_TRANSIT("IN_TRANSIT"),

    @Json(name = "READY_FOR_PICKUP")
    READY_FOR_PICKUP("READY_FOR_PICKUP"),

    @Json(name = "PICKED")
    PICKED("PICKED"),

    @Json(name = "RECEIVED_ON_FULFILLMENT")
    RECEIVED_ON_FULFILLMENT("RECEIVED_ON_FULFILLMENT"),

    @Json(name = "CANCELLED")
    CANCELLED("CANCELLED"),

    @Json(name = "LOST")
    LOST("LOST"),

    @Json(name = "UTILIZED")
    UTILIZED("UTILIZED"),

    @Json(name = "PREPARED_FOR_UTILIZATION")
    PREPARED_FOR_UTILIZATION("PREPARED_FOR_UTILIZATION"),

    @Json(name = "EXPROPRIATED")
    EXPROPRIATED("EXPROPRIATED"),

    @Json(name = "NOT_IN_DEMAND")
    NOT_IN_DEMAND("NOT_IN_DEMAND");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is ReturnInstanceStatusType) "$data" else null

        /**
         * Returns a valid [ReturnInstanceStatusType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): ReturnInstanceStatusType? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

