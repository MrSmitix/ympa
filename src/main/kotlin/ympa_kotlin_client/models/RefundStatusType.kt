/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Cтатус возврата денег:  * `STARTED_BY_USER` — создан клиентом из личного кабинета.  * `REFUND_IN_PROGRESS` — ждет решение о возврате денег.  * `REFUNDED` — по возврату проведены все возвратные денежные транзакции.  * `FAILED` — невозможно провести возврат покупателю.  * `WAITING_FOR_DECISION` — ожидает решения.  * `DECISION_MADE` — по возврату принято решение.  * `REFUNDED_WITH_BONUSES` — возврат осуществлен баллами Плюса или промокодом.  * `REFUNDED_BY_SHOP` — магазин сделал самостоятельно возврат денег.  * `COMPLETE_WITHOUT_REFUND` — возврат денег не требуется.  * `CANCELLED` — возврат отменен. 
 *
 * Values: STARTED_BY_USER,REFUND_IN_PROGRESS,REFUNDED,FAILED,WAITING_FOR_DECISION,DECISION_MADE,REFUNDED_WITH_BONUSES,REFUNDED_BY_SHOP,CANCELLED,COMPLETE_WITHOUT_REFUND,UNKNOWN
 */

@JsonClass(generateAdapter = false)
enum class RefundStatusType(val value: kotlin.String) {

    @Json(name = "STARTED_BY_USER")
    STARTED_BY_USER("STARTED_BY_USER"),

    @Json(name = "REFUND_IN_PROGRESS")
    REFUND_IN_PROGRESS("REFUND_IN_PROGRESS"),

    @Json(name = "REFUNDED")
    REFUNDED("REFUNDED"),

    @Json(name = "FAILED")
    FAILED("FAILED"),

    @Json(name = "WAITING_FOR_DECISION")
    WAITING_FOR_DECISION("WAITING_FOR_DECISION"),

    @Json(name = "DECISION_MADE")
    DECISION_MADE("DECISION_MADE"),

    @Json(name = "REFUNDED_WITH_BONUSES")
    REFUNDED_WITH_BONUSES("REFUNDED_WITH_BONUSES"),

    @Json(name = "REFUNDED_BY_SHOP")
    REFUNDED_BY_SHOP("REFUNDED_BY_SHOP"),

    @Json(name = "CANCELLED")
    CANCELLED("CANCELLED"),

    @Json(name = "COMPLETE_WITHOUT_REFUND")
    COMPLETE_WITHOUT_REFUND("COMPLETE_WITHOUT_REFUND"),

    @Json(name = "UNKNOWN")
    UNKNOWN("UNKNOWN");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is RefundStatusType) "$data" else null

        /**
         * Returns a valid [RefundStatusType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): RefundStatusType? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

