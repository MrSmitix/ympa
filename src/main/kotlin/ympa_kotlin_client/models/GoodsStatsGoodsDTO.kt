/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models

import ympa_kotlin_client.models.GoodsStatsWarehouseDTO
import ympa_kotlin_client.models.GoodsStatsWeightDimensionsDTO
import ympa_kotlin_client.models.TariffDTO

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Информация о товаре.
 *
 * @param shopSku Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
 * @param marketSku SKU на Маркете.
 * @param name Название товара.
 * @param price Цена на товар в валюте, которая установлена [в кабинете продавца на Маркете](https://partner.market.yandex.ru/).
 * @param categoryId Идентификатор категории товара на Маркете.
 * @param categoryName Название категории товара на Маркете.
 * @param weightDimensions 
 * @param warehouses Информация о складах, на которых хранится товар.  Параметр не приходит, если товара нет ни на одном складе. 
 * @param tariffs Информация о тарифах, по которым нужно заплатить за услуги Маркета.  По некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели FBS стоимость услуги `SORTING` (обработка заказа) зависит от способа отгрузки и количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/). 
 * @param pictures Ссылки (URL) изображений товара в хорошем качестве.
 */


data class GoodsStatsGoodsDTO (

    /* Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)  */
    @Json(name = "shopSku")
    val shopSku: kotlin.String? = null,

    /* SKU на Маркете. */
    @Json(name = "marketSku")
    val marketSku: kotlin.Long? = null,

    /* Название товара. */
    @Json(name = "name")
    val name: kotlin.String? = null,

    /* Цена на товар в валюте, которая установлена [в кабинете продавца на Маркете](https://partner.market.yandex.ru/). */
    @Json(name = "price")
    val price: java.math.BigDecimal? = null,

    /* Идентификатор категории товара на Маркете. */
    @Json(name = "categoryId")
    val categoryId: kotlin.Long? = null,

    /* Название категории товара на Маркете. */
    @Json(name = "categoryName")
    val categoryName: kotlin.String? = null,

    @Json(name = "weightDimensions")
    val weightDimensions: GoodsStatsWeightDimensionsDTO? = null,

    /* Информация о складах, на которых хранится товар.  Параметр не приходит, если товара нет ни на одном складе.  */
    @Json(name = "warehouses")
    val warehouses: kotlin.collections.List<GoodsStatsWarehouseDTO>? = null,

    /* Информация о тарифах, по которым нужно заплатить за услуги Маркета.  По некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели FBS стоимость услуги `SORTING` (обработка заказа) зависит от способа отгрузки и количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/).  */
    @Json(name = "tariffs")
    val tariffs: kotlin.collections.List<TariffDTO>? = null,

    /* Ссылки (URL) изображений товара в хорошем качестве. */
    @Json(name = "pictures")
    val pictures: kotlin.collections.List<kotlin.String>? = null

) {


}

