/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Детали причин возврата:   * `DO_NOT_FIT`:     * `USER_DID_NOT_LIKE` — товар не понравился.     * `USER_CHANGED_MIND` — передумал покупать.     * `DELIVERED_TOO_LONG` — длительный срок доставки, поэтому передумал.    * `BAD_QUALITY`:     * `BAD_PACKAGE` — упаковка товара была нарушена.     * `DAMAGED` — царапины, сколы.     * `NOT_WORKING` — не включается / не работает.     * `INCOMPLETENESS` — некомплект (не хватает детали в наборе, к товару).    * `WRONG_ITEM`:     * `WRONG_ITEM` — не тот товар.     * `WRONG_COLOR` — не соответствует по цвету.     * `DID_NOT_MATCH_DESCRIPTION` — не соответствует заявленным характеристикам/описанию. 
 *
 * Values: USER_DID_NOT_LIKE,USER_CHANGED_MIND,DELIVERED_TOO_LONG,BAD_PACKAGE,DAMAGED,NOT_WORKING,INCOMPLETENESS,WRONG_ITEM,WRONG_COLOR,DID_NOT_MATCH_DESCRIPTION,UNKNOWN
 */

@JsonClass(generateAdapter = false)
enum class ReturnDecisionSubreasonType(val value: kotlin.String) {

    @Json(name = "USER_DID_NOT_LIKE")
    USER_DID_NOT_LIKE("USER_DID_NOT_LIKE"),

    @Json(name = "USER_CHANGED_MIND")
    USER_CHANGED_MIND("USER_CHANGED_MIND"),

    @Json(name = "DELIVERED_TOO_LONG")
    DELIVERED_TOO_LONG("DELIVERED_TOO_LONG"),

    @Json(name = "BAD_PACKAGE")
    BAD_PACKAGE("BAD_PACKAGE"),

    @Json(name = "DAMAGED")
    DAMAGED("DAMAGED"),

    @Json(name = "NOT_WORKING")
    NOT_WORKING("NOT_WORKING"),

    @Json(name = "INCOMPLETENESS")
    INCOMPLETENESS("INCOMPLETENESS"),

    @Json(name = "WRONG_ITEM")
    WRONG_ITEM("WRONG_ITEM"),

    @Json(name = "WRONG_COLOR")
    WRONG_COLOR("WRONG_COLOR"),

    @Json(name = "DID_NOT_MATCH_DESCRIPTION")
    DID_NOT_MATCH_DESCRIPTION("DID_NOT_MATCH_DESCRIPTION"),

    @Json(name = "UNKNOWN")
    UNKNOWN("UNKNOWN");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is ReturnDecisionSubreasonType) "$data" else null

        /**
         * Returns a valid [ReturnDecisionSubreasonType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): ReturnDecisionSubreasonType? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

