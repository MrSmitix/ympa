/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models

import ympa_kotlin_client.models.OutletAddressDTO
import ympa_kotlin_client.models.OutletDeliveryRuleDTO
import ympa_kotlin_client.models.OutletType
import ympa_kotlin_client.models.OutletVisibilityType
import ympa_kotlin_client.models.OutletWorkingScheduleDTO

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param name Название точки продаж. 
 * @param type 
 * @param address 
 * @param phones Номера телефонов точки продаж. Передавайте в формате: `+7 (999) 999-99-99`. 
 * @param workingSchedule 
 * @param coords Координаты точки продаж.  Формат: долгота, широта. Разделители: запятая и / или пробел. Например, `20.4522144, 54.7104264`.  Если параметр не передан, координаты будут определены по значениям параметров, вложенных в `address`. 
 * @param isMain Признак основной точки продаж.  Возможные значения:  * `false` — неосновная точка продаж. * `true` — основная точка продаж. 
 * @param shopOutletCode Идентификатор точки продаж, присвоенный магазином.
 * @param visibility 
 * @param deliveryRules Информация об условиях доставки для данной точки продаж.  Обязательный параметр, если параметр `type=DEPOT` или `type=MIXED`. 
 * @param storagePeriod Срок хранения заказа в собственном пункте выдачи заказов. Считается в днях.
 */


data class ChangeOutletRequest (

    /* Название точки продаж.  */
    @Json(name = "name")
    val name: kotlin.String,

    @Json(name = "type")
    val type: OutletType,

    @Json(name = "address")
    val address: OutletAddressDTO,

    /* Номера телефонов точки продаж. Передавайте в формате: `+7 (999) 999-99-99`.  */
    @Json(name = "phones")
    val phones: kotlin.collections.List<kotlin.String>,

    @Json(name = "workingSchedule")
    val workingSchedule: OutletWorkingScheduleDTO,

    /* Координаты точки продаж.  Формат: долгота, широта. Разделители: запятая и / или пробел. Например, `20.4522144, 54.7104264`.  Если параметр не передан, координаты будут определены по значениям параметров, вложенных в `address`.  */
    @Json(name = "coords")
    val coords: kotlin.String? = null,

    /* Признак основной точки продаж.  Возможные значения:  * `false` — неосновная точка продаж. * `true` — основная точка продаж.  */
    @Json(name = "isMain")
    val isMain: kotlin.Boolean? = null,

    /* Идентификатор точки продаж, присвоенный магазином. */
    @Json(name = "shopOutletCode")
    val shopOutletCode: kotlin.String? = null,

    @Json(name = "visibility")
    val visibility: OutletVisibilityType? = null,

    /* Информация об условиях доставки для данной точки продаж.  Обязательный параметр, если параметр `type=DEPOT` или `type=MIXED`.  */
    @Json(name = "deliveryRules")
    val deliveryRules: kotlin.collections.List<OutletDeliveryRuleDTO>? = null,

    /* Срок хранения заказа в собственном пункте выдачи заказов. Считается в днях. */
    @Json(name = "storagePeriod")
    val storagePeriod: kotlin.Long? = null

) {


}

