/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models

import ympa_kotlin_client.models.GpsDTO

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Адрес доставки.  Указывается, если `type=DELIVERY`, `type=POST` или `type=PICKUP` (адрес пункта выдачи). 
 *
 * @param country Страна.  Обязательный параметр. 
 * @param postcode Почтовый индекс.  Указывается, если выбрана доставка почтой (`delivery type=POST`). 
 * @param city Город или населенный пункт.  Обязательный параметр. 
 * @param district Район.
 * @param subway Станция метро.
 * @param street Улица.  Обязательный параметр. 
 * @param house Дом или владение.  Обязательный параметр. 
 * @param block Корпус или строение.
 * @param entrance Подъезд.
 * @param entryphone Код домофона.
 * @param floor Этаж.
 * @param apartment Квартира или офис.
 * @param phone Телефон получателя заказа.  Обязательный параметр. 
 * @param recipient Фамилия, имя и отчество получателя заказа.  Обязательный параметр. 
 * @param gps 
 */


data class OrderDeliveryAddressDTO (

    /* Страна.  Обязательный параметр.  */
    @Json(name = "country")
    val country: kotlin.String? = null,

    /* Почтовый индекс.  Указывается, если выбрана доставка почтой (`delivery type=POST`).  */
    @Json(name = "postcode")
    val postcode: kotlin.String? = null,

    /* Город или населенный пункт.  Обязательный параметр.  */
    @Json(name = "city")
    val city: kotlin.String? = null,

    /* Район. */
    @Json(name = "district")
    val district: kotlin.String? = null,

    /* Станция метро. */
    @Json(name = "subway")
    val subway: kotlin.String? = null,

    /* Улица.  Обязательный параметр.  */
    @Json(name = "street")
    val street: kotlin.String? = null,

    /* Дом или владение.  Обязательный параметр.  */
    @Json(name = "house")
    val house: kotlin.String? = null,

    /* Корпус или строение. */
    @Json(name = "block")
    val block: kotlin.String? = null,

    /* Подъезд. */
    @Json(name = "entrance")
    val entrance: kotlin.String? = null,

    /* Код домофона. */
    @Json(name = "entryphone")
    val entryphone: kotlin.String? = null,

    /* Этаж. */
    @Json(name = "floor")
    val floor: kotlin.String? = null,

    /* Квартира или офис. */
    @Json(name = "apartment")
    val apartment: kotlin.String? = null,

    /* Телефон получателя заказа.  Обязательный параметр.  */
    @Json(name = "phone")
    val phone: kotlin.String? = null,

    /* Фамилия, имя и отчество получателя заказа.  Обязательный параметр.  */
    @Json(name = "recipient")
    val recipient: kotlin.String? = null,

    @Json(name = "gps")
    val gps: GpsDTO? = null

) {


}

