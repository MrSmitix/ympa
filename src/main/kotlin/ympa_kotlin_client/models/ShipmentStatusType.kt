/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Статус отгрузки:  * `OUTBOUND_CREATED` — формируется. * `OUTBOUND_READY_FOR_CONFIRMATION` — можно обрабатывать. * `OUTBOUND_CONFIRMED` — подтверждена и готова к отправке. * `OUTBOUND_SIGNED` — по ней подписан электронный акт приема-передачи. * `ACCEPTED` — принята в сортировочном центре или пункте приема. * `ACCEPTED_WITH_DISCREPANCIES` — принята с расхождениями. * `FINISHED` — завершена. * `ERROR` — отменена из-за ошибки. 
 *
 * Values: OUTBOUND_CREATED,OUTBOUND_READY_FOR_CONFIRMATION,OUTBOUND_CONFIRMED,OUTBOUND_SIGNED,FINISHED,ACCEPTED,ACCEPTED_WITH_DISCREPANCIES,ERROR
 */

@JsonClass(generateAdapter = false)
enum class ShipmentStatusType(val value: kotlin.String) {

    @Json(name = "OUTBOUND_CREATED")
    OUTBOUND_CREATED("OUTBOUND_CREATED"),

    @Json(name = "OUTBOUND_READY_FOR_CONFIRMATION")
    OUTBOUND_READY_FOR_CONFIRMATION("OUTBOUND_READY_FOR_CONFIRMATION"),

    @Json(name = "OUTBOUND_CONFIRMED")
    OUTBOUND_CONFIRMED("OUTBOUND_CONFIRMED"),

    @Json(name = "OUTBOUND_SIGNED")
    OUTBOUND_SIGNED("OUTBOUND_SIGNED"),

    @Json(name = "FINISHED")
    FINISHED("FINISHED"),

    @Json(name = "ACCEPTED")
    ACCEPTED("ACCEPTED"),

    @Json(name = "ACCEPTED_WITH_DISCREPANCIES")
    ACCEPTED_WITH_DISCREPANCIES("ACCEPTED_WITH_DISCREPANCIES"),

    @Json(name = "ERROR")
    ERROR("ERROR");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is ShipmentStatusType) "$data" else null

        /**
         * Returns a valid [ShipmentStatusType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): ShipmentStatusType? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

