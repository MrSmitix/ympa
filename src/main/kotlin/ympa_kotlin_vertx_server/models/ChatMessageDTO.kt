/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_kotlin_vertx_server.models

import ympa_kotlin_vertx_server.models.ChatMessagePayloadDTO
import ympa_kotlin_vertx_server.models.ChatMessageSenderType

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * Информация о сообщениях.
 * @param messageId Идентификатор сообщения.
 * @param createdAt Дата и время создания сообщения.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`. 
 * @param sender 
 * @param message Текст сообщения.  Необязательный параметр, если возвращается параметр `payload`. 
 * @param payload Информация о приложенных к сообщению файлах.  Необязательный параметр, если возвращается параметр `message`. 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class ChatMessageDTO (
    /* Идентификатор сообщения. */
    @SerializedName("messageId") private val _messageId: kotlin.Long?,
    /* Дата и время создания сообщения.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`.  */
    @SerializedName("createdAt") private val _createdAt: java.time.OffsetDateTime?,
    @SerializedName("sender") private val _sender: ChatMessageSenderType?,
    /* Текст сообщения.  Необязательный параметр, если возвращается параметр `payload`.  */
    val message: kotlin.String? = null,
    /* Информация о приложенных к сообщению файлах.  Необязательный параметр, если возвращается параметр `message`.  */
    val payload: kotlin.Array<ChatMessagePayloadDTO>? = null
) {

        val messageId get() = _messageId ?: throw IllegalArgumentException("messageId is required")
                    
        val createdAt get() = _createdAt ?: throw IllegalArgumentException("createdAt is required")
                    
        val sender get() = _sender ?: throw IllegalArgumentException("sender is required")
                    
}

