/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_kotlin_vertx_server.models

import ympa_kotlin_vertx_server.models.CurrencyType
import ympa_kotlin_vertx_server.models.OrderBuyerDTO
import ympa_kotlin_vertx_server.models.OrderDeliveryDTO
import ympa_kotlin_vertx_server.models.OrderItemDTO
import ympa_kotlin_vertx_server.models.OrderPaymentMethodType
import ympa_kotlin_vertx_server.models.OrderPaymentType
import ympa_kotlin_vertx_server.models.OrderStatusType
import ympa_kotlin_vertx_server.models.OrderSubsidyDTO
import ympa_kotlin_vertx_server.models.OrderSubstatusType
import ympa_kotlin_vertx_server.models.OrderTaxSystemType

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * Заказ.
 * @param items Список товаров в заказе.
 * @param id Идентификатор заказа.
 * @param status 
 * @param substatus 
 * @param creationDate 
 * @param updatedAt 
 * @param currency 
 * @param itemsTotal Платеж покупателя. 
 * @param deliveryTotal Стоимость доставки. 
 * @param buyerItemsTotal {% note warning \"\" %}  Этот параметр устарел.  {% endnote %}  Стоимость всех товаров в заказе в валюте покупателя после применения скидок и без учета стоимости доставки. 
 * @param buyerTotal {% note warning \"\" %}  Этот параметр устарел.  {% endnote %}  Стоимость всех товаров в заказе в валюте покупателя после применения скидок и с учетом стоимости доставки. 
 * @param buyerItemsTotalBeforeDiscount Стоимость всех товаров в заказе в валюте покупателя без учета стоимости доставки и до применения скидок по:  * акциям; * купонам; * промокодам. 
 * @param buyerTotalBeforeDiscount {% note warning \"\" %}  Этот параметр устарел.  {% endnote %}  Стоимость всех товаров в заказе в валюте покупателя до применения скидок и с учетом стоимости доставки (`buyerItemsTotalBeforeDiscount` + стоимость доставки). 
 * @param paymentType 
 * @param paymentMethod 
 * @param fake Тип заказа:  * `false` — настоящий заказ покупателя.  * `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. 
 * @param subsidies Список субсидий по типам.
 * @param delivery 
 * @param buyer 
 * @param notes Комментарий к заказу.
 * @param taxSystem 
 * @param cancelRequested **Только для модели DBS**  Запрошена ли отмена. 
 * @param expiryDate 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class OrderDTO (
    /* Список товаров в заказе. */
    @SerializedName("items") private val _items: kotlin.Array<OrderItemDTO>?,
    /* Идентификатор заказа. */
    val id: kotlin.Long? = null,
    val status: OrderStatusType? = null,
    val substatus: OrderSubstatusType? = null,
    val creationDate: kotlin.String? = null,
    val updatedAt: kotlin.String? = null,
    val currency: CurrencyType? = null,
    /* Платеж покупателя.  */
    val itemsTotal: java.math.BigDecimal? = null,
    /* Стоимость доставки.  */
    val deliveryTotal: java.math.BigDecimal? = null,
    /* {% note warning \"\" %}  Этот параметр устарел.  {% endnote %}  Стоимость всех товаров в заказе в валюте покупателя после применения скидок и без учета стоимости доставки.  */
    val buyerItemsTotal: java.math.BigDecimal? = null,
    /* {% note warning \"\" %}  Этот параметр устарел.  {% endnote %}  Стоимость всех товаров в заказе в валюте покупателя после применения скидок и с учетом стоимости доставки.  */
    val buyerTotal: java.math.BigDecimal? = null,
    /* Стоимость всех товаров в заказе в валюте покупателя без учета стоимости доставки и до применения скидок по:  * акциям; * купонам; * промокодам.  */
    val buyerItemsTotalBeforeDiscount: java.math.BigDecimal? = null,
    /* {% note warning \"\" %}  Этот параметр устарел.  {% endnote %}  Стоимость всех товаров в заказе в валюте покупателя до применения скидок и с учетом стоимости доставки (`buyerItemsTotalBeforeDiscount` + стоимость доставки).  */
    val buyerTotalBeforeDiscount: java.math.BigDecimal? = null,
    val paymentType: OrderPaymentType? = null,
    val paymentMethod: OrderPaymentMethodType? = null,
    /* Тип заказа:  * `false` — настоящий заказ покупателя.  * `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета.  */
    val fake: kotlin.Boolean? = null,
    /* Список субсидий по типам. */
    val subsidies: kotlin.Array<OrderSubsidyDTO>? = null,
    val delivery: OrderDeliveryDTO? = null,
    val buyer: OrderBuyerDTO? = null,
    /* Комментарий к заказу. */
    val notes: kotlin.String? = null,
    val taxSystem: OrderTaxSystemType? = null,
    /* **Только для модели DBS**  Запрошена ли отмена.  */
    val cancelRequested: kotlin.Boolean? = null,
    val expiryDate: kotlin.String? = null
) {

        val items get() = _items ?: throw IllegalArgumentException("items is required")
                    
}

