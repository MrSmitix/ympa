/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_kotlin_vertx_server.models


        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * Информация о ярлыке для коробки.
 * @param url Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label](../../reference/orders/generateOrderLabel.md). 
 * @param supplierName Юридическое название магазина.
 * @param deliveryServiceName Юридическое название службы доставки.
 * @param orderId Идентификатор заказа в системе Маркета.
 * @param orderNum Идентификатор заказа в информационной системе магазина.  Совпадает с `orderId`, если Маркету неизвестен номер заказа в системе магазина. 
 * @param recipientName Фамилия и инициалы получателя заказа.
 * @param boxId Идентификатор коробки.
 * @param fulfilmentId Идентификатор коробки в информационной системе магазина.  Возвращается в формате: `номер заказа на Маркете-номер коробки`. Например, `7206821‑1`, `7206821‑2` и т. д. 
 * @param place Номер коробки в заказе. Возвращается в формате: `номер места/общее количество мест`. 
 * @param weight {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Общая масса всех товаров в заказе. Возвращается в формате: `weight кг`. 
 * @param deliveryServiceId Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).
 * @param deliveryAddress Адрес получателя.
 * @param shipmentDate Дата отгрузки в формате `dd.MM.yyyy`.
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class ParcelBoxLabelDTO (
    /* Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label](../../reference/orders/generateOrderLabel.md).  */
    @SerializedName("url") private val _url: kotlin.String?,
    /* Юридическое название магазина. */
    @SerializedName("supplierName") private val _supplierName: kotlin.String?,
    /* Юридическое название службы доставки. */
    @SerializedName("deliveryServiceName") private val _deliveryServiceName: kotlin.String?,
    /* Идентификатор заказа в системе Маркета. */
    @SerializedName("orderId") private val _orderId: kotlin.Long?,
    /* Идентификатор заказа в информационной системе магазина.  Совпадает с `orderId`, если Маркету неизвестен номер заказа в системе магазина.  */
    @SerializedName("orderNum") private val _orderNum: kotlin.String?,
    /* Фамилия и инициалы получателя заказа. */
    @SerializedName("recipientName") private val _recipientName: kotlin.String?,
    /* Идентификатор коробки. */
    @SerializedName("boxId") private val _boxId: kotlin.Long?,
    /* Идентификатор коробки в информационной системе магазина.  Возвращается в формате: `номер заказа на Маркете-номер коробки`. Например, `7206821‑1`, `7206821‑2` и т. д.  */
    @SerializedName("fulfilmentId") private val _fulfilmentId: kotlin.String?,
    /* Номер коробки в заказе. Возвращается в формате: `номер места/общее количество мест`.  */
    @SerializedName("place") private val _place: kotlin.String?,
    /* {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Общая масса всех товаров в заказе. Возвращается в формате: `weight кг`.  */
    @SerializedName("weight") private val _weight: kotlin.String?,
    /* Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md). */
    @SerializedName("deliveryServiceId") private val _deliveryServiceId: kotlin.String?,
    /* Адрес получателя. */
    val deliveryAddress: kotlin.String? = null,
    /* Дата отгрузки в формате `dd.MM.yyyy`. */
    val shipmentDate: kotlin.String? = null
) {

        val url get() = _url ?: throw IllegalArgumentException("url is required")
                    
        val supplierName get() = _supplierName ?: throw IllegalArgumentException("supplierName is required")
                    
        val deliveryServiceName get() = _deliveryServiceName ?: throw IllegalArgumentException("deliveryServiceName is required")
                    
        val orderId get() = _orderId ?: throw IllegalArgumentException("orderId is required")
                    
        val orderNum get() = _orderNum ?: throw IllegalArgumentException("orderNum is required")
                    
        val recipientName get() = _recipientName ?: throw IllegalArgumentException("recipientName is required")
                    
        val boxId get() = _boxId ?: throw IllegalArgumentException("boxId is required")
                    
        val fulfilmentId get() = _fulfilmentId ?: throw IllegalArgumentException("fulfilmentId is required")
                    
        val place get() = _place ?: throw IllegalArgumentException("place is required")
                    
        val weight get() = _weight ?: throw IllegalArgumentException("weight is required")
                    
        val deliveryServiceId get() = _deliveryServiceId ?: throw IllegalArgumentException("deliveryServiceId is required")
                    
}

