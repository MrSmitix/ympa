/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_kotlin_vertx_server.models

import ympa_kotlin_vertx_server.models.ShowsSalesGroupingType

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * Данные, необходимые для генерации отчета.
 * @param dateFrom Начало периода, включительно.
 * @param dateTo Конец периода, включительно.
 * @param grouping 
 * @param businessId Идентификатор бизнеса.  Указывается, если нужно составить отчет по всем магазинам бизнеса. В запросе обязательно должен быть либо `businessID`, либо `campaignId`, но не оба сразу. 
 * @param campaignId Идентификатор кампании.  Указывается, если нужно составить отчет по конкретному магазину. В запросе обязательно должен быть либо `businessID`, либо `campaignId`, но не оба сразу. 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class GenerateShowsSalesReportRequest (
    /* Начало периода, включительно. */
    @SerializedName("dateFrom") private val _dateFrom: java.time.LocalDate?,
    /* Конец периода, включительно. */
    @SerializedName("dateTo") private val _dateTo: java.time.LocalDate?,
    @SerializedName("grouping") private val _grouping: ShowsSalesGroupingType?,
    /* Идентификатор бизнеса.  Указывается, если нужно составить отчет по всем магазинам бизнеса. В запросе обязательно должен быть либо `businessID`, либо `campaignId`, но не оба сразу.  */
    val businessId: kotlin.Long? = null,
    /* Идентификатор кампании.  Указывается, если нужно составить отчет по конкретному магазину. В запросе обязательно должен быть либо `businessID`, либо `campaignId`, но не оба сразу.  */
    val campaignId: kotlin.Long? = null
) {

        val dateFrom get() = _dateFrom ?: throw IllegalArgumentException("dateFrom is required")
                    
        val dateTo get() = _dateTo ?: throw IllegalArgumentException("dateTo is required")
                    
        val grouping get() = _grouping ?: throw IllegalArgumentException("grouping is required")
                    
}

