/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_kotlin_vertx_server.models

import ympa_kotlin_vertx_server.models.LogisticPickupPointDTO
import ympa_kotlin_vertx_server.models.RecipientType
import ympa_kotlin_vertx_server.models.RefundStatusType
import ympa_kotlin_vertx_server.models.ReturnItemDTO
import ympa_kotlin_vertx_server.models.ReturnShipmentStatusType
import ympa_kotlin_vertx_server.models.ReturnType

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * Возврат заказа.
 * @param items Список товаров в возврате.
 * @param id Идентификатор возврата.
 * @param orderId Номер заказа.
 * @param creationDate Дата создания возврата клиентом.
 * @param updateDate Дата обновления возврата.
 * @param refundStatus 
 * @param logisticPickupPoint 
 * @param shipmentRecipientType 
 * @param shipmentStatus 
 * @param refundAmount Сумма возврата.
 * @param returnType 
 * @param fastReturn Используется ли опция **Быстрый возврат денег за дешевый брак**. 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class ReturnDTO (
    /* Список товаров в возврате. */
    @SerializedName("items") private val _items: kotlin.Array<ReturnItemDTO>?,
    /* Идентификатор возврата. */
    val id: kotlin.Long? = null,
    /* Номер заказа. */
    val orderId: kotlin.Long? = null,
    /* Дата создания возврата клиентом. */
    val creationDate: java.time.OffsetDateTime? = null,
    /* Дата обновления возврата. */
    val updateDate: java.time.OffsetDateTime? = null,
    val refundStatus: RefundStatusType? = null,
    val logisticPickupPoint: LogisticPickupPointDTO? = null,
    val shipmentRecipientType: RecipientType? = null,
    val shipmentStatus: ReturnShipmentStatusType? = null,
    /* Сумма возврата. */
    val refundAmount: kotlin.Long? = null,
    val returnType: ReturnType? = null,
    /* Используется ли опция **Быстрый возврат денег за дешевый брак**.  */
    val fastReturn: kotlin.Boolean? = null
) {

        val items get() = _items ?: throw IllegalArgumentException("items is required")
                    
}

