/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_kotlin_vertx_server.models

import ympa_kotlin_vertx_server.models.GetMappingDTO
import ympa_kotlin_vertx_server.models.OfferCardRecommendationDTO
import ympa_kotlin_vertx_server.models.OfferCardStatusType
import ympa_kotlin_vertx_server.models.OfferErrorDTO
import ympa_kotlin_vertx_server.models.ParameterValueDTO

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * Информация о состоянии карточки товара.  Если поле `mapping` отсутствует в ответе, Маркет еще не успел обработать информацию о товаре. Чтобы определить категорию такого товара, повторите запрос через несколько минут. 
 * @param offerId Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
 * @param mapping 
 * @param parameterValues Список характеристик с их значениями. 
 * @param cardStatus 
 * @param contentRating Процент заполненности карточки.
 * @param recommendations Список рекомендаций к заполнению карточки.  Рекомендации Маркета помогают заполнять карточку так, чтобы покупателям было проще найти ваш товар и решиться на покупку. 
 * @param errors Ошибки в контенте, препятствующие размещению товара на витрине.
 * @param warnings Связанные с контентом предупреждения, не препятствующие размещению товара на витрине.
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class OfferCardDTO (
    /* Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)  */
    @SerializedName("offerId") private val _offerId: kotlin.String?,
    val mapping: GetMappingDTO? = null,
    /* Список характеристик с их значениями.  */
    val parameterValues: kotlin.Array<ParameterValueDTO>? = null,
    val cardStatus: OfferCardStatusType? = null,
    /* Процент заполненности карточки. */
    val contentRating: kotlin.Int? = null,
    /* Список рекомендаций к заполнению карточки.  Рекомендации Маркета помогают заполнять карточку так, чтобы покупателям было проще найти ваш товар и решиться на покупку.  */
    val recommendations: kotlin.Array<OfferCardRecommendationDTO>? = null,
    /* Ошибки в контенте, препятствующие размещению товара на витрине. */
    val errors: kotlin.Array<OfferErrorDTO>? = null,
    /* Связанные с контентом предупреждения, не препятствующие размещению товара на витрине. */
    val warnings: kotlin.Array<OfferErrorDTO>? = null
) {

        val offerId get() = _offerId ?: throw IllegalArgumentException("offerId is required")
                    
}

