/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_kotlin_vertx_server.models

import ympa_kotlin_vertx_server.models.ChannelType
import ympa_kotlin_vertx_server.models.GetPromoAssortmentInfoDTO
import ympa_kotlin_vertx_server.models.GetPromoBestsellerInfoDTO
import ympa_kotlin_vertx_server.models.GetPromoConstraintsDTO
import ympa_kotlin_vertx_server.models.GetPromoMechanicsInfoDTO
import ympa_kotlin_vertx_server.models.PromoPeriodDTO

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * Информация об акции.
 * @param id Идентификатор акции.
 * @param name Название акции.
 * @param period 
 * @param participating Участвует или участвовал ли продавец в этой акции.  Для текущих и будущих акций возвращается со значением `true`, если в акции есть товары, которые были добавлены вручную. Если товары не участвуют в акции или добавлены в нее автоматически, параметр возвращается со значением `false`.  Для прошедших акций всегда возвращается со значением `true`.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index). 
 * @param assortmentInfo 
 * @param mechanicsInfo 
 * @param bestsellerInfo 
 * @param channels Список каналов продвижения товаров.
 * @param constraints 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class GetPromoDTO (
    /* Идентификатор акции. */
    @SerializedName("id") private val _id: kotlin.String?,
    /* Название акции. */
    @SerializedName("name") private val _name: kotlin.String?,
    @SerializedName("period") private val _period: PromoPeriodDTO?,
    /* Участвует или участвовал ли продавец в этой акции.  Для текущих и будущих акций возвращается со значением `true`, если в акции есть товары, которые были добавлены вручную. Если товары не участвуют в акции или добавлены в нее автоматически, параметр возвращается со значением `false`.  Для прошедших акций всегда возвращается со значением `true`.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).  */
    @SerializedName("participating") private val _participating: kotlin.Boolean?,
    @SerializedName("assortmentInfo") private val _assortmentInfo: GetPromoAssortmentInfoDTO?,
    @SerializedName("mechanicsInfo") private val _mechanicsInfo: GetPromoMechanicsInfoDTO?,
    @SerializedName("bestsellerInfo") private val _bestsellerInfo: GetPromoBestsellerInfoDTO?,
    /* Список каналов продвижения товаров. */
    val channels: kotlin.Array<ChannelType>? = null,
    val constraints: GetPromoConstraintsDTO? = null
) {

        val id get() = _id ?: throw IllegalArgumentException("id is required")
                    
        val name get() = _name ?: throw IllegalArgumentException("name is required")
                    
        val period get() = _period ?: throw IllegalArgumentException("period is required")
                    
        val participating get() = _participating ?: throw IllegalArgumentException("participating is required")
                    
        val assortmentInfo get() = _assortmentInfo ?: throw IllegalArgumentException("assortmentInfo is required")
                    
        val mechanicsInfo get() = _mechanicsInfo ?: throw IllegalArgumentException("mechanicsInfo is required")
                    
        val bestsellerInfo get() = _bestsellerInfo ?: throw IllegalArgumentException("bestsellerInfo is required")
                    
}

