/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package ympa_kotlin_vertx_server.models

import ympa_kotlin_vertx_server.models.ParcelBoxLabelDTO

        
import com.google.gson.annotations.SerializedName
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
/**
 * Данные для печати ярлыка.
 * @param orderId Идентификатор заказа.
 * @param placesNumber Количество коробок в заказе.
 * @param url URL файла с ярлыками‑наклейками на все коробки в заказе.  Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/labels](../../reference/orders/generateOrderLabels.md). 
 * @param parcelBoxLabels Информация на ярлыке.
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
data class OrderLabelDTO (
    /* Идентификатор заказа. */
    @SerializedName("orderId") private val _orderId: kotlin.Long?,
    /* Количество коробок в заказе. */
    @SerializedName("placesNumber") private val _placesNumber: kotlin.Int?,
    /* URL файла с ярлыками‑наклейками на все коробки в заказе.  Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/labels](../../reference/orders/generateOrderLabels.md).  */
    @SerializedName("url") private val _url: kotlin.String?,
    /* Информация на ярлыке. */
    @SerializedName("parcelBoxLabels") private val _parcelBoxLabels: kotlin.Array<ParcelBoxLabelDTO>?
) {

        val orderId get() = _orderId ?: throw IllegalArgumentException("orderId is required")
                    
        val placesNumber get() = _placesNumber ?: throw IllegalArgumentException("placesNumber is required")
                    
        val url get() = _url ?: throw IllegalArgumentException("url is required")
                    
        val parcelBoxLabels get() = _parcelBoxLabels ?: throw IllegalArgumentException("parcelBoxLabels is required")
                    
}

