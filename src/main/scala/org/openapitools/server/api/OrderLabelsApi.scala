/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 */


package org.openapitools.server.api

import org.openapitools.server.model.ApiClientDataErrorResponse
import org.openapitools.server.model.ApiForbiddenErrorResponse
import org.openapitools.server.model.ApiLimitErrorResponse
import org.openapitools.server.model.ApiNotFoundErrorResponse
import org.openapitools.server.model.ApiServerErrorResponse
import org.openapitools.server.model.ApiUnauthorizedErrorResponse
import java.io.File
import org.openapitools.server.model.GetOrderLabelsDataResponse
import org.openapitools.server.model.PageFormatType

import java.io.File

import org.scalatra.ScalatraServlet
import org.scalatra.swagger._
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }
import org.scalatra.servlet.{ FileUploadSupport, MultipartConfig, SizeConstraintExceededException }

import scala.collection.JavaConverters._

class OrderLabelsApi(implicit val swagger: Swagger) extends ScalatraServlet
  with FileUploadSupport
  with JacksonJsonSupport
  with SwaggerSupport {
  protected implicit val jsonFormats: Formats = DefaultFormats

  protected val applicationDescription: String = "OrderLabelsApi"

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }
  

  val generateOrderLabelOperation = (apiOperation[File]("generateOrderLabel")
    summary "Готовый ярлык‑наклейка для коробки в заказе"
    parameters(pathParam[Long]("campaignId").description(""), pathParam[Long]("orderId").description(""), pathParam[Long]("shipmentId").description(""), pathParam[Long]("boxId").description(""), queryParam[PageFormatType]("format").description("").optional)
  )

  get("/campaigns/:campaignId/orders/:orderId/delivery/shipments/:shipmentId/boxes/:boxId/label", operation(generateOrderLabelOperation)) {
    val campaignId = params.getOrElse("campaignId", halt(400))
    //println("campaignId: " + campaignId)
    val orderId = params.getOrElse("orderId", halt(400))
    //println("orderId: " + orderId)
    val shipmentId = params.getOrElse("shipmentId", halt(400))
    //println("shipmentId: " + shipmentId)
    val boxId = params.getOrElse("boxId", halt(400))
    //println("boxId: " + boxId)
            val format = params.getAs[PageFormatType]("format")

    //println("format: " + format)
  }

  

  val generateOrderLabelsOperation = (apiOperation[File]("generateOrderLabels")
    summary "Готовые ярлыки‑наклейки на все коробки в одном заказе"
    parameters(pathParam[Long]("campaignId").description(""), pathParam[Long]("orderId").description(""), queryParam[PageFormatType]("format").description("").optional)
  )

  get("/campaigns/:campaignId/orders/:orderId/delivery/labels", operation(generateOrderLabelsOperation)) {
    val campaignId = params.getOrElse("campaignId", halt(400))
    //println("campaignId: " + campaignId)
    val orderId = params.getOrElse("orderId", halt(400))
    //println("orderId: " + orderId)
            val format = params.getAs[PageFormatType]("format")

    //println("format: " + format)
  }

  

  val getOrderLabelsDataOperation = (apiOperation[GetOrderLabelsDataResponse]("getOrderLabelsData")
    summary "Данные для самостоятельного изготовления ярлыков"
    parameters(pathParam[Long]("campaignId").description(""), pathParam[Long]("orderId").description(""))
  )

  get("/campaigns/:campaignId/orders/:orderId/delivery/labels/data", operation(getOrderLabelsDataOperation)) {
    val campaignId = params.getOrElse("campaignId", halt(400))
    //println("campaignId: " + campaignId)
    val orderId = params.getOrElse("orderId", halt(400))
    //println("orderId: " + orderId)
  }

}
