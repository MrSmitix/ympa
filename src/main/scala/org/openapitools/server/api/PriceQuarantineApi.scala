/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 */


package org.openapitools.server.api

import org.openapitools.server.model.ApiClientDataErrorResponse
import org.openapitools.server.model.ApiForbiddenErrorResponse
import org.openapitools.server.model.ApiLimitErrorResponse
import org.openapitools.server.model.ApiLockedErrorResponse
import org.openapitools.server.model.ApiNotFoundErrorResponse
import org.openapitools.server.model.ApiServerErrorResponse
import org.openapitools.server.model.ApiUnauthorizedErrorResponse
import org.openapitools.server.model.ConfirmPricesRequest
import org.openapitools.server.model.EmptyApiResponse
import org.openapitools.server.model.GetQuarantineOffersRequest
import org.openapitools.server.model.GetQuarantineOffersResponse

import java.io.File

import org.scalatra.ScalatraServlet
import org.scalatra.swagger._
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }
import org.scalatra.servlet.{ FileUploadSupport, MultipartConfig, SizeConstraintExceededException }

import scala.collection.JavaConverters._

class PriceQuarantineApi(implicit val swagger: Swagger) extends ScalatraServlet
  with FileUploadSupport
  with JacksonJsonSupport
  with SwaggerSupport {
  protected implicit val jsonFormats: Formats = DefaultFormats

  protected val applicationDescription: String = "PriceQuarantineApi"

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }
  

  val confirmBusinessPricesOperation = (apiOperation[EmptyApiResponse]("confirmBusinessPrices")
    summary "Удаление товара из карантина по цене в кабинете"
    parameters(pathParam[Long]("businessId").description(""), bodyParam[ConfirmPricesRequest]("confirmPricesRequest").description(""))
  )

  post("/businesses/:businessId/price-quarantine/confirm", operation(confirmBusinessPricesOperation)) {
    val businessId = params.getOrElse("businessId", halt(400))
    //println("businessId: " + businessId)
    //println("confirmPricesRequest: " + confirmPricesRequest)
  }

  

  val confirmCampaignPricesOperation = (apiOperation[EmptyApiResponse]("confirmCampaignPrices")
    summary "Удаление товара из карантина по цене в магазине"
    parameters(pathParam[Long]("campaignId").description(""), bodyParam[ConfirmPricesRequest]("confirmPricesRequest").description(""))
  )

  post("/campaigns/:campaignId/price-quarantine/confirm", operation(confirmCampaignPricesOperation)) {
    val campaignId = params.getOrElse("campaignId", halt(400))
    //println("campaignId: " + campaignId)
    //println("confirmPricesRequest: " + confirmPricesRequest)
  }

  

  val getBusinessQuarantineOffersOperation = (apiOperation[GetQuarantineOffersResponse]("getBusinessQuarantineOffers")
    summary "Список товаров, находящихся в карантине по цене в кабинете"
    parameters(pathParam[Long]("businessId").description(""), bodyParam[GetQuarantineOffersRequest]("getQuarantineOffersRequest").description(""), queryParam[String]("pageToken").description("").optional, queryParam[Int]("limit").description("").optional)
  )

  post("/businesses/:businessId/price-quarantine", operation(getBusinessQuarantineOffersOperation)) {
    val businessId = params.getOrElse("businessId", halt(400))
    //println("businessId: " + businessId)
    //println("getQuarantineOffersRequest: " + getQuarantineOffersRequest)
            val pageToken = params.getAs[String]("pageToken")

    //println("pageToken: " + pageToken)
            val limit = params.getAs[Int]("limit")

    //println("limit: " + limit)
  }

  

  val getCampaignQuarantineOffersOperation = (apiOperation[GetQuarantineOffersResponse]("getCampaignQuarantineOffers")
    summary "Список товаров, находящихся в карантине по цене в магазине"
    parameters(pathParam[Long]("campaignId").description(""), bodyParam[GetQuarantineOffersRequest]("getQuarantineOffersRequest").description(""), queryParam[String]("pageToken").description("").optional, queryParam[Int]("limit").description("").optional)
  )

  post("/campaigns/:campaignId/price-quarantine", operation(getCampaignQuarantineOffersOperation)) {
    val campaignId = params.getOrElse("campaignId", halt(400))
    //println("campaignId: " + campaignId)
    //println("getQuarantineOffersRequest: " + getQuarantineOffersRequest)
            val pageToken = params.getAs[String]("pageToken")

    //println("pageToken: " + pageToken)
            val limit = params.getAs[Int]("limit")

    //println("limit: " + limit)
  }

}
