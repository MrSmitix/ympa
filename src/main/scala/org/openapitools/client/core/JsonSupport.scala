/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.core

import org.openapitools.client.model._
import org.json4s._
import sttp.client4.json4s.SttpJson4sApi
import scala.reflect.ClassTag

object JsonSupport extends SttpJson4sApi {
  def enumSerializers: Seq[Serializer[_]] = Seq[Serializer[_]]() :+
    new EnumNameSerializer(AddOffersToArchiveErrorType) :+
    new EnumNameSerializer(AffectedOrderQualityRatingComponentType) :+
    new EnumNameSerializer(AgeUnitType) :+
    new EnumNameSerializer(ApiResponseStatusType) :+
    new EnumNameSerializer(CalculatedTariffType) :+
    new EnumNameSerializer(CampaignSettingsScheduleSourceType) :+
    new EnumNameSerializer(CategoryErrorType) :+
    new EnumNameSerializer(ChatMessageSenderType) :+
    new EnumNameSerializer(ChatStatusType) :+
    new EnumNameSerializer(ChatType) :+
    new EnumNameSerializer(CurrencyType) :+
    new EnumNameSerializer(DayOfWeekType) :+
    new EnumNameSerializer(EacVerificationStatusType) :+
    new EnumNameSerializer(FeedContentErrorType) :+
    new EnumNameSerializer(FeedDownloadErrorType) :+
    new EnumNameSerializer(FeedIndexLogsErrorType) :+
    new EnumNameSerializer(FeedIndexLogsIndexType) :+
    new EnumNameSerializer(FeedIndexLogsStatusType) :+
    new EnumNameSerializer(FeedStatusType) :+
    new EnumNameSerializer(FeedbackCommentAuthorType) :+
    new EnumNameSerializer(FeedbackDeliveryType) :+
    new EnumNameSerializer(FeedbackReactionStatusType) :+
    new EnumNameSerializer(FeedbackStateType) :+
    new EnumNameSerializer(FieldStateType) :+
    new EnumNameSerializer(GoodsFeedbackCommentAuthorType) :+
    new EnumNameSerializer(GoodsFeedbackCommentStatusType) :+
    new EnumNameSerializer(LanguageType) :+
    new EnumNameSerializer(LicenseCheckStatusType) :+
    new EnumNameSerializer(LicenseType) :+
    new EnumNameSerializer(LogisticPointType) :+
    new EnumNameSerializer(MechanicsType) :+
    new EnumNameSerializer(OfferAvailabilityStatusType) :+
    new EnumNameSerializer(OfferCampaignStatusType) :+
    new EnumNameSerializer(OfferCardRecommendationType) :+
    new EnumNameSerializer(OfferCardStatusType) :+
    new EnumNameSerializer(OfferConditionQualityType) :+
    new EnumNameSerializer(OfferConditionType) :+
    new EnumNameSerializer(OfferContentErrorType) :+
    new EnumNameSerializer(OfferMappingErrorType) :+
    new EnumNameSerializer(OfferMappingKindType) :+
    new EnumNameSerializer(OfferProcessingNoteType) :+
    new EnumNameSerializer(OfferProcessingStatusType) :+
    new EnumNameSerializer(OfferSellingProgramStatusType) :+
    new EnumNameSerializer(OfferType) :+
    new EnumNameSerializer(OrderBuyerType) :+
    new EnumNameSerializer(OrderCancellationReasonType) :+
    new EnumNameSerializer(OrderDeliveryDateReasonType) :+
    new EnumNameSerializer(OrderDeliveryDispatchType) :+
    new EnumNameSerializer(OrderDeliveryEacType) :+
    new EnumNameSerializer(OrderDeliveryPartnerType) :+
    new EnumNameSerializer(OrderDeliveryType) :+
    new EnumNameSerializer(OrderDocumentStatusType) :+
    new EnumNameSerializer(OrderItemInstanceType) :+
    new EnumNameSerializer(OrderItemStatusType) :+
    new EnumNameSerializer(OrderItemSubsidyType) :+
    new EnumNameSerializer(OrderItemsModificationRequestReasonType) :+
    new EnumNameSerializer(OrderLiftType) :+
    new EnumNameSerializer(OrderPaymentMethodType) :+
    new EnumNameSerializer(OrderPaymentType) :+
    new EnumNameSerializer(OrderPromoType) :+
    new EnumNameSerializer(OrderStatsStatusType) :+
    new EnumNameSerializer(OrderStatusType) :+
    new EnumNameSerializer(OrderSubsidyType) :+
    new EnumNameSerializer(OrderSubstatusType) :+
    new EnumNameSerializer(OrderTaxSystemType) :+
    new EnumNameSerializer(OrderUpdateStatusType) :+
    new EnumNameSerializer(OrderVatType) :+
    new EnumNameSerializer(OrdersStatsCommissionType) :+
    new EnumNameSerializer(OrdersStatsItemStatusType) :+
    new EnumNameSerializer(OrdersStatsOrderPaymentType) :+
    new EnumNameSerializer(OrdersStatsPaymentSourceType) :+
    new EnumNameSerializer(OrdersStatsPaymentType) :+
    new EnumNameSerializer(OrdersStatsPriceType) :+
    new EnumNameSerializer(OrdersStatsStockType) :+
    new EnumNameSerializer(OutletStatusType) :+
    new EnumNameSerializer(OutletType) :+
    new EnumNameSerializer(OutletVisibilityType) :+
    new EnumNameSerializer(PageFormatType) :+
    new EnumNameSerializer(ParameterType) :+
    new EnumNameSerializer(PaymentFrequencyType) :+
    new EnumNameSerializer(PlacementType) :+
    new EnumNameSerializer(PriceCompetitivenessType) :+
    new EnumNameSerializer(PriceQuarantineVerdictParamNameType) :+
    new EnumNameSerializer(PriceQuarantineVerdictType) :+
    new EnumNameSerializer(PriceSuggestType) :+
    new EnumNameSerializer(PromoOfferParticipationStatusFilterType) :+
    new EnumNameSerializer(PromoOfferParticipationStatusType) :+
    new EnumNameSerializer(PromoOfferUpdateWarningCodeType) :+
    new EnumNameSerializer(PromoParticipationType) :+
    new EnumNameSerializer(QualityRatingComponentType) :+
    new EnumNameSerializer(RecipientType) :+
    new EnumNameSerializer(RefundStatusType) :+
    new EnumNameSerializer(RegionType) :+
    new EnumNameSerializer(RejectedPromoOfferDeleteReasonType) :+
    new EnumNameSerializer(RejectedPromoOfferUpdateReasonType) :+
    new EnumNameSerializer(ReportFormatType) :+
    new EnumNameSerializer(ReportStatusType) :+
    new EnumNameSerializer(ReportSubStatusType) :+
    new EnumNameSerializer(ReturnDecisionReasonType) :+
    new EnumNameSerializer(ReturnDecisionSubreasonType) :+
    new EnumNameSerializer(ReturnDecisionType) :+
    new EnumNameSerializer(ReturnInstanceStatusType) :+
    new EnumNameSerializer(ReturnInstanceStockType) :+
    new EnumNameSerializer(ReturnRequestDecisionType) :+
    new EnumNameSerializer(ReturnShipmentStatusType) :+
    new EnumNameSerializer(ReturnType) :+
    new EnumNameSerializer(SellingProgramType) :+
    new EnumNameSerializer(ShelfsStatisticsAttributionType) :+
    new EnumNameSerializer(ShipmentActionType) :+
    new EnumNameSerializer(ShipmentPalletLabelPageFormatType) :+
    new EnumNameSerializer(ShipmentStatusType) :+
    new EnumNameSerializer(ShipmentType) :+
    new EnumNameSerializer(ShowsSalesGroupingType) :+
    new EnumNameSerializer(SortOrderType) :+
    new EnumNameSerializer(TariffType) :+
    new EnumNameSerializer(TimeUnitType) :+
    new EnumNameSerializer(TurnoverType) :+
    new EnumNameSerializer(WarehouseStockType)

  private class EnumNameSerializer[E <: Enumeration: ClassTag](enumeration: E) extends Serializer[E#Value] {
    import JsonDSL._
    val EnumerationClass: Class[E#Value] = classOf[E#Value]

    def deserialize(implicit format: Formats): PartialFunction[(TypeInfo, JValue), E#Value] = {
      case (t @ TypeInfo(EnumerationClass, _), json) if isValid(json) =>
        json match {
          case JString(value) => enumeration.withName(value)
          case value => throw new MappingException(s"Can't convert $value to $EnumerationClass")
        }
    }

    private[this] def isValid(json: JValue) = json match {
      case JString(value) if enumeration.values.exists(_.toString == value) => true
      case _ => false
    }

    def serialize(implicit format: Formats): PartialFunction[Any, JValue] = {
      case i: E#Value => i.toString
      }
    }

  implicit val format: Formats = DefaultFormats ++ enumSerializers ++ DateSerializers.all ++ AdditionalTypeSerializers.all
  implicit val serialization: org.json4s.Serialization = org.json4s.jackson.Serialization
}
