/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.ApiClientDataErrorResponse
import org.openapitools.client.model.ApiForbiddenErrorResponse
import org.openapitools.client.model.ApiLimitErrorResponse
import org.openapitools.client.model.ApiNotFoundErrorResponse
import org.openapitools.client.model.ApiServerErrorResponse
import org.openapitools.client.model.ApiUnauthorizedErrorResponse
import org.openapitools.client.model.GetCategoriesMaxSaleQuantumRequest
import org.openapitools.client.model.GetCategoriesMaxSaleQuantumResponse
import org.openapitools.client.model.GetCategoriesRequest
import org.openapitools.client.model.GetCategoriesResponse
import org.openapitools.client.core.JsonSupport._
import sttp.client3._
import sttp.model.Method

object CategoriesApi {
  def apply(baseUrl: String = "https://api.partner.market.yandex.ru") = new CategoriesApi(baseUrl)
}

class CategoriesApi(baseUrl: String) {

  /**
   * Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
   * 
   * Expected answers:
   *   code 200 : GetCategoriesMaxSaleQuantumResponse (Лимит на установку кванта и минимального количества товаров.)
   *   code 400 : ApiClientDataErrorResponse (Запрос содержит неправильные данные.)
   *   code 401 : ApiUnauthorizedErrorResponse (В запросе не указаны данные для авторизации.)
   *   code 403 : ApiForbiddenErrorResponse (Данные для авторизации неверны или доступ к ресурсу запрещен.)
   *   code 404 : ApiNotFoundErrorResponse (Запрашиваемый ресурс не найден.)
   *   code 420 : ApiLimitErrorResponse (Превышено ограничение на доступ к ресурсу.)
   *   code 500 : ApiServerErrorResponse (Внутренняя ошибка сервера.)
   * 
   * @param getCategoriesMaxSaleQuantumRequest 
   */
  def getCategoriesMaxSaleQuantum(getCategoriesMaxSaleQuantumRequest: GetCategoriesMaxSaleQuantumRequest
): Request[Either[ResponseException[String, Exception], GetCategoriesMaxSaleQuantumResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/categories/max-sale-quantum")
      .contentType("application/json")
      .body(getCategoriesMaxSaleQuantumRequest)
      .response(asJson[GetCategoriesMaxSaleQuantumResponse])

  /**
   * Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
   * 
   * Expected answers:
   *   code 200 : GetCategoriesResponse (Категории Маркета.)
   *   code 400 : ApiClientDataErrorResponse (Запрос содержит неправильные данные.)
   *   code 401 : ApiUnauthorizedErrorResponse (В запросе не указаны данные для авторизации.)
   *   code 403 : ApiForbiddenErrorResponse (Данные для авторизации неверны или доступ к ресурсу запрещен.)
   *   code 404 : ApiNotFoundErrorResponse (Запрашиваемый ресурс не найден.)
   *   code 420 : ApiLimitErrorResponse (Превышено ограничение на доступ к ресурсу.)
   *   code 500 : ApiServerErrorResponse (Внутренняя ошибка сервера.)
   * 
   * @param getCategoriesRequest 
   */
  def getCategoriesTree(getCategoriesRequest: Option[GetCategoriesRequest] = None
): Request[Either[ResponseException[String, Exception], GetCategoriesResponse], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/categories/tree")
      .contentType("application/json")
      .body(getCategoriesRequest)
      .response(asJson[GetCategoriesResponse])

}
