/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.swagger.client.api

import akka.{Done, NotUsed}
import com.lightbend.lagom.scaladsl.api.transport.Method
import com.lightbend.lagom.scaladsl.api.{Service, ServiceCall}
import play.api.libs.json._
import com.lightbend.lagom.scaladsl.api.deser.PathParamSerializer

import io.swagger.client.model.ApiClientDataErrorResponse
import io.swagger.client.model.ApiForbiddenErrorResponse
import io.swagger.client.model.ApiLimitErrorResponse
import io.swagger.client.model.ApiNotFoundErrorResponse
import io.swagger.client.model.ApiServerErrorResponse
import io.swagger.client.model.ApiUnauthorizedErrorResponse
import io.swagger.client.model.EmptyApiResponse
import java.io.File
import io.swagger.client.model.GetReturnResponse
import io.swagger.client.model.GetReturnsResponse
import java.time.LocalDate
import io.swagger.client.model.RefundStatusType
import io.swagger.client.model.ReturnType
import io.swagger.client.model.SetReturnDecisionRequest

trait ReturnsApi extends Service {


  final override def descriptor = {
    import Service._
    named("ReturnsApi").withCalls(
      restCall(Method.GET, "/campaigns/:campaignId/orders/:orderId/returns/:returnId", getReturn _), 
      restCall(Method.GET, "/campaigns/:campaignId/orders/:orderId/returns/:returnId/application", getReturnApplication _), 
      restCall(Method.GET, "/campaigns/:campaignId/orders/:orderId/returns/:returnId/decision/:itemId/image/:imageHash", getReturnPhoto _), 
      restCall(Method.GET, "/campaigns/:campaignId/returns?pageToken&limit&orderIds&statuses&`type`&fromDate&toDate&fromDate2&toDate2", getReturns _), 
      restCall(Method.POST, "/campaigns/:campaignId/orders/:orderId/returns/:returnId/decision", setReturnDecision _), 
      restCall(Method.POST, "/campaigns/:campaignId/orders/:orderId/returns/:returnId/decision/submit", submitReturnDecision _)
    ).withAutoAcl(true)
  }


  /**
    * Информация о невыкупе или возврате
    * Получает информацию по одному невыкупу или возврату.  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
    *  
    * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)   
    * @param orderId Идентификатор заказа.  
    * @param returnId Идентификатор возврата. 
    * @return GetReturnResponse
    */
  def getReturn(campaignId: Long, orderId: Long, returnId: Long): ServiceCall[NotUsed ,GetReturnResponse]
  
  /**
    * Получение заявления на возврат
    * Загружает заявление покупателя на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
    *  
    * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)   
    * @param orderId Идентификатор заказа.  
    * @param returnId Идентификатор возврата. 
    * @return File
    */
  def getReturnApplication(campaignId: Long, orderId: Long, returnId: Long): ServiceCall[NotUsed ,File]
  
  /**
    * Получение фотографии возврата
    * Получает фотографии, которые покупатель приложил к заявлению на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
    *  
    * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)   
    * @param orderId Идентификатор заказа.  
    * @param returnId Идентификатор возврата.  
    * @param itemId Идентификатор товара в возврате.  
    * @param imageHash Хеш ссылки изображения для загрузки. 
    * @return File
    */
  def getReturnPhoto(campaignId: Long, orderId: Long, returnId: Long, itemId: Long, imageHash: String): ServiceCall[NotUsed ,File]
        
  // orderIds:Seq[Long]  -- not yet supported Seq PathParamSerializers for multi value query parameters https://github.com/lagom/lagom/issues/643
      
  // statuses:Seq[RefundStatusType]  -- not yet supported Seq PathParamSerializers for multi value query parameters https://github.com/lagom/lagom/issues/643
      
  /**
    * Список невыкупов и возвратов
    * Получает список невыкупов и возвратов.  Чтобы получить информацию по одному возврату или невыкупу, выполните запрос [GET campaigns/{campaignId}/orders/{orderId}/returns/{returnId}](../../reference/orders/getReturn.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
    *  
    * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)   
    * @param pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.  (optional) 
    * @param limit Количество значений на одной странице.  (optional) 
    * @param orderIds Идентификаторы заказов — для фильтрации результатов.  Несколько идентификаторов перечисляются через запятую без пробела. Максимальное количество идентификаторов — 50.  (optional, default to new ListBuffer[Long]() ) 
    * @param statuses Статусы возвратов или невыкупов — для фильтрации результатов.  Несколько статусов перечисляются через запятую.  (optional, default to new ListBuffer[RefundStatusType]() ) 
    * @param `type` Тип заказа для фильтрации:  * &#x60;RETURN&#x60; — возврат.  * &#x60;UNREDEEMED&#x60; — невыкуп.  Если не указывать, в ответе будут и возвраты, и невыкупы.  (optional) 
    * @param fromDate Начальная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: &#x60;ГГГГ-ММ-ДД&#x60;.  (optional) 
    * @param toDate Конечная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: &#x60;ГГГГ-ММ-ДД&#x60;.  (optional) 
    * @param fromDate2 {% note warning \&quot;\&quot; %}  Этот параметр устарел. Вместо него используйте &#x60;fromDate&#x60;.  {% endnote %}  Начальная дата для фильтрации возвратов или невыкупов по дате обновления.  (optional) 
    * @param toDate2 {% note warning \&quot;\&quot; %}  Этот параметр устарел. Вместо него используйте &#x60;toDate&#x60;.  {% endnote %}  Конечная дата для фильтрации возвратов или невыкупов по дате обновления.  (optional)
    * @return GetReturnsResponse
    */
  def getReturns(pageToken:           Option[String] = None,limit:           Option[Int] = None,`type`:           Option[ReturnType] = None,fromDate:           Option[LocalDate] = None,toDate:           Option[LocalDate] = None,fromDate2:           Option[LocalDate] = None,toDate2:           Option[LocalDate] = NonecampaignId: Long): ServiceCall[NotUsed ,GetReturnsResponse]
  
  /**
    * Принятие или изменение решения по возврату
    * Выбирает решение по возврату от покупателя. После этого для подтверждения решения нужно выполнить запрос [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit](../../reference/orders/submitReturnDecision.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
    *  
    * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)   
    * @param orderId Идентификатор заказа.  
    * @param returnId Идентификатор возврата.  
    * @return EmptyApiResponse Body Parameter   
    */
  def setReturnDecision(campaignId: Long, orderId: Long, returnId: Long): ServiceCall[SetReturnDecisionRequest ,EmptyApiResponse]
  
  /**
    * Подтверждение решения по возврату
    * Подтверждает выбранное решение по возврату, отправленное в запросе [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision](../../reference/orders/setReturnDecision.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
    *  
    * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)   
    * @param orderId Идентификатор заказа.  
    * @param returnId Идентификатор возврата. 
    * @return EmptyApiResponse
    */
  def submitReturnDecision(campaignId: Long, orderId: Long, returnId: Long): ServiceCall[NotUsed ,EmptyApiResponse]
  

  }
