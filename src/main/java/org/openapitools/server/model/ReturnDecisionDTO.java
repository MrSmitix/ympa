/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.server.model;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.server.model.ReturnDecisionReasonType;
import org.openapitools.server.model.ReturnDecisionSubreasonType;
import org.openapitools.server.model.ReturnDecisionType;
import java.lang.reflect.Type;
import javax.json.bind.annotation.JsonbTypeDeserializer;
import javax.json.bind.annotation.JsonbTypeSerializer;
import javax.json.bind.serializer.DeserializationContext;
import javax.json.bind.serializer.JsonbDeserializer;
import javax.json.bind.serializer.JsonbSerializer;
import javax.json.bind.serializer.SerializationContext;
import javax.json.stream.JsonGenerator;
import javax.json.stream.JsonParser;
import javax.json.bind.annotation.JsonbProperty;

/**
  * Решения по возвратам.
  */

public class ReturnDecisionDTO  {
  
 /**
  * Идентификатор товара в возврате.
  */
  @JsonbProperty("returnItemId")
  private Long returnItemId;

 /**
  * Количество единиц товара.
  */
  @JsonbProperty("count")
  private Integer count;

 /**
  * Комментарий.
  */
  @JsonbProperty("comment")
  private String comment;

  @JsonbProperty("reasonType")
  private ReturnDecisionReasonType reasonType;

  @JsonbProperty("subreasonType")
  private ReturnDecisionSubreasonType subreasonType;

  @JsonbProperty("decisionType")
  private ReturnDecisionType decisionType;

 /**
  * Сумма возврата.
  */
  @JsonbProperty("refundAmount")
  private Long refundAmount;

 /**
  * Компенсация за обратную доставку.
  */
  @JsonbProperty("partnerCompensation")
  private Long partnerCompensation;

 /**
  * Список хеш-кодов фотографий товара от покупателя.
  */
  @JsonbProperty("images")
  private List<String> images = null;

  /**
   * Идентификатор товара в возврате.
   * @return returnItemId
   **/
  public Long getReturnItemId() {
    return returnItemId;
  }

  /**
   * Set returnItemId
   */
  public void setReturnItemId(Long returnItemId) {
    this.returnItemId = returnItemId;
  }

  public ReturnDecisionDTO returnItemId(Long returnItemId) {
    this.returnItemId = returnItemId;
    return this;
  }

  /**
   * Количество единиц товара.
   * @return count
   **/
  public Integer getCount() {
    return count;
  }

  /**
   * Set count
   */
  public void setCount(Integer count) {
    this.count = count;
  }

  public ReturnDecisionDTO count(Integer count) {
    this.count = count;
    return this;
  }

  /**
   * Комментарий.
   * @return comment
   **/
  public String getComment() {
    return comment;
  }

  /**
   * Set comment
   */
  public void setComment(String comment) {
    this.comment = comment;
  }

  public ReturnDecisionDTO comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get reasonType
   * @return reasonType
   **/
  public ReturnDecisionReasonType getReasonType() {
    return reasonType;
  }

  /**
   * Set reasonType
   */
  public void setReasonType(ReturnDecisionReasonType reasonType) {
    this.reasonType = reasonType;
  }

  public ReturnDecisionDTO reasonType(ReturnDecisionReasonType reasonType) {
    this.reasonType = reasonType;
    return this;
  }

  /**
   * Get subreasonType
   * @return subreasonType
   **/
  public ReturnDecisionSubreasonType getSubreasonType() {
    return subreasonType;
  }

  /**
   * Set subreasonType
   */
  public void setSubreasonType(ReturnDecisionSubreasonType subreasonType) {
    this.subreasonType = subreasonType;
  }

  public ReturnDecisionDTO subreasonType(ReturnDecisionSubreasonType subreasonType) {
    this.subreasonType = subreasonType;
    return this;
  }

  /**
   * Get decisionType
   * @return decisionType
   **/
  public ReturnDecisionType getDecisionType() {
    return decisionType;
  }

  /**
   * Set decisionType
   */
  public void setDecisionType(ReturnDecisionType decisionType) {
    this.decisionType = decisionType;
  }

  public ReturnDecisionDTO decisionType(ReturnDecisionType decisionType) {
    this.decisionType = decisionType;
    return this;
  }

  /**
   * Сумма возврата.
   * @return refundAmount
   **/
  public Long getRefundAmount() {
    return refundAmount;
  }

  /**
   * Set refundAmount
   */
  public void setRefundAmount(Long refundAmount) {
    this.refundAmount = refundAmount;
  }

  public ReturnDecisionDTO refundAmount(Long refundAmount) {
    this.refundAmount = refundAmount;
    return this;
  }

  /**
   * Компенсация за обратную доставку.
   * @return partnerCompensation
   **/
  public Long getPartnerCompensation() {
    return partnerCompensation;
  }

  /**
   * Set partnerCompensation
   */
  public void setPartnerCompensation(Long partnerCompensation) {
    this.partnerCompensation = partnerCompensation;
  }

  public ReturnDecisionDTO partnerCompensation(Long partnerCompensation) {
    this.partnerCompensation = partnerCompensation;
    return this;
  }

  /**
   * Список хеш-кодов фотографий товара от покупателя.
   * @return images
   **/
  public List<String> getImages() {
    return images;
  }

  /**
   * Set images
   */
  public void setImages(List<String> images) {
    this.images = images;
  }

  public ReturnDecisionDTO images(List<String> images) {
    this.images = images;
    return this;
  }

  public ReturnDecisionDTO addImagesItem(String imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<>();
    }
    this.images.add(imagesItem);
    return this;
  }


  /**
   * Create a string representation of this pojo.
   */
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReturnDecisionDTO {\n");
    
    sb.append("    returnItemId: ").append(toIndentedString(returnItemId)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    reasonType: ").append(toIndentedString(reasonType)).append("\n");
    sb.append("    subreasonType: ").append(toIndentedString(subreasonType)).append("\n");
    sb.append("    decisionType: ").append(toIndentedString(decisionType)).append("\n");
    sb.append("    refundAmount: ").append(toIndentedString(refundAmount)).append("\n");
    sb.append("    partnerCompensation: ").append(toIndentedString(partnerCompensation)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

