/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.server.model;

import org.openapitools.server.model.WarehouseAddressDTO;
import java.lang.reflect.Type;
import javax.json.bind.annotation.JsonbTypeDeserializer;
import javax.json.bind.annotation.JsonbTypeSerializer;
import javax.json.bind.serializer.DeserializationContext;
import javax.json.bind.serializer.JsonbDeserializer;
import javax.json.bind.serializer.JsonbSerializer;
import javax.json.bind.serializer.SerializationContext;
import javax.json.stream.JsonGenerator;
import javax.json.stream.JsonParser;
import javax.json.bind.annotation.JsonbProperty;

/**
  * Информация о складе.
  */

public class WarehouseDTO  {
  
 /**
  * Идентификатор склада.
  */
  @JsonbProperty("id")
  private Long id;

 /**
  * Название склада.
  */
  @JsonbProperty("name")
  private String name;

 /**
  * Идентификатор кампании в API и идентификатор магазина.
  */
  @JsonbProperty("campaignId")
  private Long campaignId;

 /**
  * Возможна ли доставка по модели Экспресс.
  */
  @JsonbProperty("express")
  private Boolean express;

  @JsonbProperty("address")
  private WarehouseAddressDTO address;

  /**
   * Идентификатор склада.
   * @return id
   **/
  public Long getId() {
    return id;
  }

  /**
   * Set id
   */
  public void setId(Long id) {
    this.id = id;
  }

  public WarehouseDTO id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Название склада.
   * @return name
   **/
  public String getName() {
    return name;
  }

  /**
   * Set name
   */
  public void setName(String name) {
    this.name = name;
  }

  public WarehouseDTO name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Идентификатор кампании в API и идентификатор магазина.
   * @return campaignId
   **/
  public Long getCampaignId() {
    return campaignId;
  }

  /**
   * Set campaignId
   */
  public void setCampaignId(Long campaignId) {
    this.campaignId = campaignId;
  }

  public WarehouseDTO campaignId(Long campaignId) {
    this.campaignId = campaignId;
    return this;
  }

  /**
   * Возможна ли доставка по модели Экспресс.
   * @return express
   **/
  public Boolean getExpress() {
    return express;
  }

  /**
   * Set express
   */
  public void setExpress(Boolean express) {
    this.express = express;
  }

  public WarehouseDTO express(Boolean express) {
    this.express = express;
    return this;
  }

  /**
   * Get address
   * @return address
   **/
  public WarehouseAddressDTO getAddress() {
    return address;
  }

  /**
   * Set address
   */
  public void setAddress(WarehouseAddressDTO address) {
    this.address = address;
  }

  public WarehouseDTO address(WarehouseAddressDTO address) {
    this.address = address;
    return this;
  }


  /**
   * Create a string representation of this pojo.
   */
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WarehouseDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    express: ").append(toIndentedString(express)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

