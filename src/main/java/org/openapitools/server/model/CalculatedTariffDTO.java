/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.server.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.server.model.CalculatedTariffType;
import org.openapitools.server.model.TariffParameterDTO;
import java.lang.reflect.Type;
import javax.json.bind.annotation.JsonbTypeDeserializer;
import javax.json.bind.annotation.JsonbTypeSerializer;
import javax.json.bind.serializer.DeserializationContext;
import javax.json.bind.serializer.JsonbDeserializer;
import javax.json.bind.serializer.JsonbSerializer;
import javax.json.bind.serializer.SerializationContext;
import javax.json.stream.JsonGenerator;
import javax.json.stream.JsonParser;
import javax.json.bind.annotation.JsonbProperty;

/**
  * Информация об услугах Маркета.
  */

public class CalculatedTariffDTO  {
  
  @JsonbProperty("type")
  private CalculatedTariffType type;

 /**
  * Стоимость услуги в рублях.
  */
  @JsonbProperty("amount")
  private BigDecimal amount;

 /**
  * Параметры расчета тарифа.
  */
  @JsonbProperty("parameters")
  private List<TariffParameterDTO> parameters = new ArrayList<>();

  /**
   * Get type
   * @return type
   **/
  public CalculatedTariffType getType() {
    return type;
  }

  /**
   * Set type
   */
  public void setType(CalculatedTariffType type) {
    this.type = type;
  }

  public CalculatedTariffDTO type(CalculatedTariffType type) {
    this.type = type;
    return this;
  }

  /**
   * Стоимость услуги в рублях.
   * @return amount
   **/
  public BigDecimal getAmount() {
    return amount;
  }

  /**
   * Set amount
   */
  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public CalculatedTariffDTO amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Параметры расчета тарифа.
   * @return parameters
   **/
  public List<TariffParameterDTO> getParameters() {
    return parameters;
  }

  /**
   * Set parameters
   */
  public void setParameters(List<TariffParameterDTO> parameters) {
    this.parameters = parameters;
  }

  public CalculatedTariffDTO parameters(List<TariffParameterDTO> parameters) {
    this.parameters = parameters;
    return this;
  }

  public CalculatedTariffDTO addParametersItem(TariffParameterDTO parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<>();
    }
    this.parameters.add(parametersItem);
    return this;
  }


  /**
   * Create a string representation of this pojo.
   */
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CalculatedTariffDTO {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

