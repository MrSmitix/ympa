/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.server.model;

import java.lang.reflect.Type;
import javax.json.bind.annotation.JsonbTypeDeserializer;
import javax.json.bind.annotation.JsonbTypeSerializer;
import javax.json.bind.serializer.DeserializationContext;
import javax.json.bind.serializer.JsonbDeserializer;
import javax.json.bind.serializer.JsonbSerializer;
import javax.json.bind.serializer.SerializationContext;
import javax.json.stream.JsonGenerator;
import javax.json.stream.JsonParser;
import javax.json.bind.annotation.JsonbProperty;

/**
  * Статистическая информация по отзыву.
  */

public class GoodsFeedbackStatisticsDTO  {
  
 /**
  * Оценка товара.
  */
  @JsonbProperty("rating")
  private Integer rating;

 /**
  * Количество комментариев к отзыву.  Учитываются только ответы на отзывы, а не дочерние комментарии. 
  */
  @JsonbProperty("commentsCount")
  private Long commentsCount;

 /**
  * Рекомендуют ли этот товар.
  */
  @JsonbProperty("recommended")
  private Boolean recommended;

 /**
  * Количество баллов Плюса, которое автор получил за отзыв.
  */
  @JsonbProperty("paidAmount")
  private Long paidAmount;

  /**
   * Оценка товара.
   * minimum: 1
   * maximum: 5
   * @return rating
   **/
  public Integer getRating() {
    return rating;
  }

  /**
   * Set rating
   */
  public void setRating(Integer rating) {
    this.rating = rating;
  }

  public GoodsFeedbackStatisticsDTO rating(Integer rating) {
    this.rating = rating;
    return this;
  }

  /**
   * Количество комментариев к отзыву.  Учитываются только ответы на отзывы, а не дочерние комментарии. 
   * @return commentsCount
   **/
  public Long getCommentsCount() {
    return commentsCount;
  }

  /**
   * Set commentsCount
   */
  public void setCommentsCount(Long commentsCount) {
    this.commentsCount = commentsCount;
  }

  public GoodsFeedbackStatisticsDTO commentsCount(Long commentsCount) {
    this.commentsCount = commentsCount;
    return this;
  }

  /**
   * Рекомендуют ли этот товар.
   * @return recommended
   **/
  public Boolean getRecommended() {
    return recommended;
  }

  /**
   * Set recommended
   */
  public void setRecommended(Boolean recommended) {
    this.recommended = recommended;
  }

  public GoodsFeedbackStatisticsDTO recommended(Boolean recommended) {
    this.recommended = recommended;
    return this;
  }

  /**
   * Количество баллов Плюса, которое автор получил за отзыв.
   * @return paidAmount
   **/
  public Long getPaidAmount() {
    return paidAmount;
  }

  /**
   * Set paidAmount
   */
  public void setPaidAmount(Long paidAmount) {
    this.paidAmount = paidAmount;
  }

  public GoodsFeedbackStatisticsDTO paidAmount(Long paidAmount) {
    this.paidAmount = paidAmount;
    return this;
  }


  /**
   * Create a string representation of this pojo.
   */
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoodsFeedbackStatisticsDTO {\n");
    
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    commentsCount: ").append(toIndentedString(commentsCount)).append("\n");
    sb.append("    recommended: ").append(toIndentedString(recommended)).append("\n");
    sb.append("    paidAmount: ").append(toIndentedString(paidAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

