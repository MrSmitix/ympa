/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.server.model;

import org.openapitools.server.model.OrderBuyerType;
import java.lang.reflect.Type;
import javax.json.bind.annotation.JsonbTypeDeserializer;
import javax.json.bind.annotation.JsonbTypeSerializer;
import javax.json.bind.serializer.DeserializationContext;
import javax.json.bind.serializer.JsonbDeserializer;
import javax.json.bind.serializer.JsonbSerializer;
import javax.json.bind.serializer.SerializationContext;
import javax.json.stream.JsonGenerator;
import javax.json.stream.JsonParser;
import javax.json.bind.annotation.JsonbProperty;

/**
  * Информация о покупателе.  Параметры `id`, `lastName`, `firstName` и `middleName` возвращаются, только если вы работаете по модели DBS. 
  */

public class OrderBuyerDTO  {
  
 /**
  * Идентификатор покупателя.
  */
  @JsonbProperty("id")
  private String id;

 /**
  * Фамилия покупателя.
  */
  @JsonbProperty("lastName")
  private String lastName;

 /**
  * Имя покупателя.
  */
  @JsonbProperty("firstName")
  private String firstName;

 /**
  * Отчество покупателя.
  */
  @JsonbProperty("middleName")
  private String middleName;

  @JsonbProperty("type")
  private OrderBuyerType type;

  /**
   * Идентификатор покупателя.
   * @return id
   **/
  public String getId() {
    return id;
  }

  /**
   * Set id
   */
  public void setId(String id) {
    this.id = id;
  }

  public OrderBuyerDTO id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Фамилия покупателя.
   * @return lastName
   **/
  public String getLastName() {
    return lastName;
  }

  /**
   * Set lastName
   */
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public OrderBuyerDTO lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Имя покупателя.
   * @return firstName
   **/
  public String getFirstName() {
    return firstName;
  }

  /**
   * Set firstName
   */
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public OrderBuyerDTO firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Отчество покупателя.
   * @return middleName
   **/
  public String getMiddleName() {
    return middleName;
  }

  /**
   * Set middleName
   */
  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  public OrderBuyerDTO middleName(String middleName) {
    this.middleName = middleName;
    return this;
  }

  /**
   * Get type
   * @return type
   **/
  public OrderBuyerType getType() {
    return type;
  }

  /**
   * Set type
   */
  public void setType(OrderBuyerType type) {
    this.type = type;
  }

  public OrderBuyerDTO type(OrderBuyerType type) {
    this.type = type;
    return this;
  }


  /**
   * Create a string representation of this pojo.
   */
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderBuyerDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

