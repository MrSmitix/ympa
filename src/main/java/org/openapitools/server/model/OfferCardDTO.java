/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.server.model;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.server.model.GetMappingDTO;
import org.openapitools.server.model.OfferCardRecommendationDTO;
import org.openapitools.server.model.OfferCardStatusType;
import org.openapitools.server.model.OfferErrorDTO;
import org.openapitools.server.model.ParameterValueDTO;
import java.lang.reflect.Type;
import javax.json.bind.annotation.JsonbTypeDeserializer;
import javax.json.bind.annotation.JsonbTypeSerializer;
import javax.json.bind.serializer.DeserializationContext;
import javax.json.bind.serializer.JsonbDeserializer;
import javax.json.bind.serializer.JsonbSerializer;
import javax.json.bind.serializer.SerializationContext;
import javax.json.stream.JsonGenerator;
import javax.json.stream.JsonParser;
import javax.json.bind.annotation.JsonbProperty;

/**
  * Информация о состоянии карточки товара.  Если поле `mapping` отсутствует в ответе, Маркет еще не успел обработать информацию о товаре. Чтобы определить категорию такого товара, повторите запрос через несколько минут. 
  */

public class OfferCardDTO  {
  
 /**
  * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
  */
  @JsonbProperty("offerId")
  private String offerId;

  @JsonbProperty("mapping")
  private GetMappingDTO mapping;

 /**
  * Список характеристик с их значениями. 
  */
  @JsonbProperty("parameterValues")
  private List<ParameterValueDTO> parameterValues = null;

  @JsonbProperty("cardStatus")
  private OfferCardStatusType cardStatus;

 /**
  * Процент заполненности карточки.
  */
  @JsonbProperty("contentRating")
  private Integer contentRating;

 /**
  * Список рекомендаций к заполнению карточки.  Рекомендации Маркета помогают заполнять карточку так, чтобы покупателям было проще найти ваш товар и решиться на покупку. 
  */
  @JsonbProperty("recommendations")
  private List<OfferCardRecommendationDTO> recommendations = null;

 /**
  * Ошибки в контенте, препятствующие размещению товара на витрине.
  */
  @JsonbProperty("errors")
  private List<OfferErrorDTO> errors = null;

 /**
  * Связанные с контентом предупреждения, не препятствующие размещению товара на витрине.
  */
  @JsonbProperty("warnings")
  private List<OfferErrorDTO> warnings = null;

  /**
   * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
   * @return offerId
   **/
  public String getOfferId() {
    return offerId;
  }

  /**
   * Set offerId
   */
  public void setOfferId(String offerId) {
    this.offerId = offerId;
  }

  public OfferCardDTO offerId(String offerId) {
    this.offerId = offerId;
    return this;
  }

  /**
   * Get mapping
   * @return mapping
   **/
  public GetMappingDTO getMapping() {
    return mapping;
  }

  /**
   * Set mapping
   */
  public void setMapping(GetMappingDTO mapping) {
    this.mapping = mapping;
  }

  public OfferCardDTO mapping(GetMappingDTO mapping) {
    this.mapping = mapping;
    return this;
  }

  /**
   * Список характеристик с их значениями. 
   * @return parameterValues
   **/
  public List<ParameterValueDTO> getParameterValues() {
    return parameterValues;
  }

  /**
   * Set parameterValues
   */
  public void setParameterValues(List<ParameterValueDTO> parameterValues) {
    this.parameterValues = parameterValues;
  }

  public OfferCardDTO parameterValues(List<ParameterValueDTO> parameterValues) {
    this.parameterValues = parameterValues;
    return this;
  }

  public OfferCardDTO addParameterValuesItem(ParameterValueDTO parameterValuesItem) {
    if (this.parameterValues == null) {
      this.parameterValues = new ArrayList<>();
    }
    this.parameterValues.add(parameterValuesItem);
    return this;
  }

  /**
   * Get cardStatus
   * @return cardStatus
   **/
  public OfferCardStatusType getCardStatus() {
    return cardStatus;
  }

  /**
   * Set cardStatus
   */
  public void setCardStatus(OfferCardStatusType cardStatus) {
    this.cardStatus = cardStatus;
  }

  public OfferCardDTO cardStatus(OfferCardStatusType cardStatus) {
    this.cardStatus = cardStatus;
    return this;
  }

  /**
   * Процент заполненности карточки.
   * @return contentRating
   **/
  public Integer getContentRating() {
    return contentRating;
  }

  /**
   * Set contentRating
   */
  public void setContentRating(Integer contentRating) {
    this.contentRating = contentRating;
  }

  public OfferCardDTO contentRating(Integer contentRating) {
    this.contentRating = contentRating;
    return this;
  }

  /**
   * Список рекомендаций к заполнению карточки.  Рекомендации Маркета помогают заполнять карточку так, чтобы покупателям было проще найти ваш товар и решиться на покупку. 
   * @return recommendations
   **/
  public List<OfferCardRecommendationDTO> getRecommendations() {
    return recommendations;
  }

  /**
   * Set recommendations
   */
  public void setRecommendations(List<OfferCardRecommendationDTO> recommendations) {
    this.recommendations = recommendations;
  }

  public OfferCardDTO recommendations(List<OfferCardRecommendationDTO> recommendations) {
    this.recommendations = recommendations;
    return this;
  }

  public OfferCardDTO addRecommendationsItem(OfferCardRecommendationDTO recommendationsItem) {
    if (this.recommendations == null) {
      this.recommendations = new ArrayList<>();
    }
    this.recommendations.add(recommendationsItem);
    return this;
  }

  /**
   * Ошибки в контенте, препятствующие размещению товара на витрине.
   * @return errors
   **/
  public List<OfferErrorDTO> getErrors() {
    return errors;
  }

  /**
   * Set errors
   */
  public void setErrors(List<OfferErrorDTO> errors) {
    this.errors = errors;
  }

  public OfferCardDTO errors(List<OfferErrorDTO> errors) {
    this.errors = errors;
    return this;
  }

  public OfferCardDTO addErrorsItem(OfferErrorDTO errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

  /**
   * Связанные с контентом предупреждения, не препятствующие размещению товара на витрине.
   * @return warnings
   **/
  public List<OfferErrorDTO> getWarnings() {
    return warnings;
  }

  /**
   * Set warnings
   */
  public void setWarnings(List<OfferErrorDTO> warnings) {
    this.warnings = warnings;
  }

  public OfferCardDTO warnings(List<OfferErrorDTO> warnings) {
    this.warnings = warnings;
    return this;
  }

  public OfferCardDTO addWarningsItem(OfferErrorDTO warningsItem) {
    if (this.warnings == null) {
      this.warnings = new ArrayList<>();
    }
    this.warnings.add(warningsItem);
    return this;
  }


  /**
   * Create a string representation of this pojo.
   */
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OfferCardDTO {\n");
    
    sb.append("    offerId: ").append(toIndentedString(offerId)).append("\n");
    sb.append("    mapping: ").append(toIndentedString(mapping)).append("\n");
    sb.append("    parameterValues: ").append(toIndentedString(parameterValues)).append("\n");
    sb.append("    cardStatus: ").append(toIndentedString(cardStatus)).append("\n");
    sb.append("    contentRating: ").append(toIndentedString(contentRating)).append("\n");
    sb.append("    recommendations: ").append(toIndentedString(recommendations)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

