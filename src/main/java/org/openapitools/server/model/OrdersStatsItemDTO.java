/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.server.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.server.model.OrdersStatsDetailsDTO;
import org.openapitools.server.model.OrdersStatsPriceDTO;
import org.openapitools.server.model.OrdersStatsWarehouseDTO;
import java.lang.reflect.Type;
import javax.json.bind.annotation.JsonbTypeDeserializer;
import javax.json.bind.annotation.JsonbTypeSerializer;
import javax.json.bind.serializer.DeserializationContext;
import javax.json.bind.serializer.JsonbDeserializer;
import javax.json.bind.serializer.JsonbSerializer;
import javax.json.bind.serializer.SerializationContext;
import javax.json.stream.JsonGenerator;
import javax.json.stream.JsonParser;
import javax.json.bind.annotation.JsonbProperty;

/**
  * Список товаров в заказе после возможных изменений.  В ходе обработки заказа Маркет может удалить из него единицы товаров — при проблемах на складе или по инициативе пользователя.  * Если из заказа удалены все единицы товара, его не будет в списке `items` — только в списке `initialItems`.  * Если в заказе осталась хотя бы одна единица товара, он будет и в списке `items` (с уменьшенным количеством единиц `count`), и в списке `initialItems` (с первоначальным количеством единиц `initialCount`). 
  */

public class OrdersStatsItemDTO  {
  
 /**
  * Название товара.
  */
  @JsonbProperty("offerName")
  private String offerName;

 /**
  * SKU на Маркете.
  */
  @JsonbProperty("marketSku")
  private Long marketSku;

 /**
  * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
  */
  @JsonbProperty("shopSku")
  private String shopSku;

 /**
  * Количество единиц товара с учетом удаленных единиц.  Если из заказа удалены все единицы товара, он попадет только в список `initialItems`. 
  */
  @JsonbProperty("count")
  private Integer count;

 /**
  * Цена или скидки на товар.
  */
  @JsonbProperty("prices")
  private List<OrdersStatsPriceDTO> prices = null;

  @JsonbProperty("warehouse")
  private OrdersStatsWarehouseDTO warehouse;

 /**
  * Информация об удалении товара из заказа.
  */
  @JsonbProperty("details")
  private List<OrdersStatsDetailsDTO> details = null;

 /**
  * Список кодов идентификации товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).
  */
  @JsonbProperty("cisList")
  private List<String> cisList = null;

 /**
  * Первоначальное количество единиц товара.
  */
  @JsonbProperty("initialCount")
  private Integer initialCount;

 /**
  * Списанная ставка ближайшего конкурента.  Указывается в процентах от стоимости товара и умножается на 100. Например, ставка 5% обозначается как 500. 
  */
  @JsonbProperty("bidFee")
  private Integer bidFee;

 /**
  * Порог для скидок с Маркетом на момент оформления заказа. [Что это такое?](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)  Указан в рублях. Точность — два знака после запятой. 
  */
  @JsonbProperty("cofinanceThreshold")
  private BigDecimal cofinanceThreshold;

 /**
  * Скидка с Маркетом. [Что это такое?](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)  Указана в рублях. Точность — два знака после запятой. 
  */
  @JsonbProperty("cofinanceValue")
  private BigDecimal cofinanceValue;

  /**
   * Название товара.
   * @return offerName
   **/
  public String getOfferName() {
    return offerName;
  }

  /**
   * Set offerName
   */
  public void setOfferName(String offerName) {
    this.offerName = offerName;
  }

  public OrdersStatsItemDTO offerName(String offerName) {
    this.offerName = offerName;
    return this;
  }

  /**
   * SKU на Маркете.
   * @return marketSku
   **/
  public Long getMarketSku() {
    return marketSku;
  }

  /**
   * Set marketSku
   */
  public void setMarketSku(Long marketSku) {
    this.marketSku = marketSku;
  }

  public OrdersStatsItemDTO marketSku(Long marketSku) {
    this.marketSku = marketSku;
    return this;
  }

  /**
   * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
   * @return shopSku
   **/
  public String getShopSku() {
    return shopSku;
  }

  /**
   * Set shopSku
   */
  public void setShopSku(String shopSku) {
    this.shopSku = shopSku;
  }

  public OrdersStatsItemDTO shopSku(String shopSku) {
    this.shopSku = shopSku;
    return this;
  }

  /**
   * Количество единиц товара с учетом удаленных единиц.  Если из заказа удалены все единицы товара, он попадет только в список &#x60;initialItems&#x60;. 
   * @return count
   **/
  public Integer getCount() {
    return count;
  }

  /**
   * Set count
   */
  public void setCount(Integer count) {
    this.count = count;
  }

  public OrdersStatsItemDTO count(Integer count) {
    this.count = count;
    return this;
  }

  /**
   * Цена или скидки на товар.
   * @return prices
   **/
  public List<OrdersStatsPriceDTO> getPrices() {
    return prices;
  }

  /**
   * Set prices
   */
  public void setPrices(List<OrdersStatsPriceDTO> prices) {
    this.prices = prices;
  }

  public OrdersStatsItemDTO prices(List<OrdersStatsPriceDTO> prices) {
    this.prices = prices;
    return this;
  }

  public OrdersStatsItemDTO addPricesItem(OrdersStatsPriceDTO pricesItem) {
    if (this.prices == null) {
      this.prices = new ArrayList<>();
    }
    this.prices.add(pricesItem);
    return this;
  }

  /**
   * Get warehouse
   * @return warehouse
   **/
  public OrdersStatsWarehouseDTO getWarehouse() {
    return warehouse;
  }

  /**
   * Set warehouse
   */
  public void setWarehouse(OrdersStatsWarehouseDTO warehouse) {
    this.warehouse = warehouse;
  }

  public OrdersStatsItemDTO warehouse(OrdersStatsWarehouseDTO warehouse) {
    this.warehouse = warehouse;
    return this;
  }

  /**
   * Информация об удалении товара из заказа.
   * @return details
   **/
  public List<OrdersStatsDetailsDTO> getDetails() {
    return details;
  }

  /**
   * Set details
   */
  public void setDetails(List<OrdersStatsDetailsDTO> details) {
    this.details = details;
  }

  public OrdersStatsItemDTO details(List<OrdersStatsDetailsDTO> details) {
    this.details = details;
    return this;
  }

  public OrdersStatsItemDTO addDetailsItem(OrdersStatsDetailsDTO detailsItem) {
    if (this.details == null) {
      this.details = new ArrayList<>();
    }
    this.details.add(detailsItem);
    return this;
  }

  /**
   * Список кодов идентификации товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).
   * @return cisList
   **/
  public List<String> getCisList() {
    return cisList;
  }

  /**
   * Set cisList
   */
  public void setCisList(List<String> cisList) {
    this.cisList = cisList;
  }

  public OrdersStatsItemDTO cisList(List<String> cisList) {
    this.cisList = cisList;
    return this;
  }

  public OrdersStatsItemDTO addCisListItem(String cisListItem) {
    if (this.cisList == null) {
      this.cisList = new ArrayList<>();
    }
    this.cisList.add(cisListItem);
    return this;
  }

  /**
   * Первоначальное количество единиц товара.
   * @return initialCount
   **/
  public Integer getInitialCount() {
    return initialCount;
  }

  /**
   * Set initialCount
   */
  public void setInitialCount(Integer initialCount) {
    this.initialCount = initialCount;
  }

  public OrdersStatsItemDTO initialCount(Integer initialCount) {
    this.initialCount = initialCount;
    return this;
  }

  /**
   * Списанная ставка ближайшего конкурента.  Указывается в процентах от стоимости товара и умножается на 100. Например, ставка 5% обозначается как 500. 
   * minimum: 0
   * maximum: 10000
   * @return bidFee
   **/
  public Integer getBidFee() {
    return bidFee;
  }

  /**
   * Set bidFee
   */
  public void setBidFee(Integer bidFee) {
    this.bidFee = bidFee;
  }

  public OrdersStatsItemDTO bidFee(Integer bidFee) {
    this.bidFee = bidFee;
    return this;
  }

  /**
   * Порог для скидок с Маркетом на момент оформления заказа. [Что это такое?](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)  Указан в рублях. Точность — два знака после запятой. 
   * @return cofinanceThreshold
   **/
  public BigDecimal getCofinanceThreshold() {
    return cofinanceThreshold;
  }

  /**
   * Set cofinanceThreshold
   */
  public void setCofinanceThreshold(BigDecimal cofinanceThreshold) {
    this.cofinanceThreshold = cofinanceThreshold;
  }

  public OrdersStatsItemDTO cofinanceThreshold(BigDecimal cofinanceThreshold) {
    this.cofinanceThreshold = cofinanceThreshold;
    return this;
  }

  /**
   * Скидка с Маркетом. [Что это такое?](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)  Указана в рублях. Точность — два знака после запятой. 
   * @return cofinanceValue
   **/
  public BigDecimal getCofinanceValue() {
    return cofinanceValue;
  }

  /**
   * Set cofinanceValue
   */
  public void setCofinanceValue(BigDecimal cofinanceValue) {
    this.cofinanceValue = cofinanceValue;
  }

  public OrdersStatsItemDTO cofinanceValue(BigDecimal cofinanceValue) {
    this.cofinanceValue = cofinanceValue;
    return this;
  }


  /**
   * Create a string representation of this pojo.
   */
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrdersStatsItemDTO {\n");
    
    sb.append("    offerName: ").append(toIndentedString(offerName)).append("\n");
    sb.append("    marketSku: ").append(toIndentedString(marketSku)).append("\n");
    sb.append("    shopSku: ").append(toIndentedString(shopSku)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    prices: ").append(toIndentedString(prices)).append("\n");
    sb.append("    warehouse: ").append(toIndentedString(warehouse)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    cisList: ").append(toIndentedString(cisList)).append("\n");
    sb.append("    initialCount: ").append(toIndentedString(initialCount)).append("\n");
    sb.append("    bidFee: ").append(toIndentedString(bidFee)).append("\n");
    sb.append("    cofinanceThreshold: ").append(toIndentedString(cofinanceThreshold)).append("\n");
    sb.append("    cofinanceValue: ").append(toIndentedString(cofinanceValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

