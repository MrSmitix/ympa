/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.server.model;

import java.util.Date;
import org.openapitools.server.model.ChatStatusType;
import org.openapitools.server.model.ChatType;
import java.lang.reflect.Type;
import javax.json.bind.annotation.JsonbTypeDeserializer;
import javax.json.bind.annotation.JsonbTypeSerializer;
import javax.json.bind.serializer.DeserializationContext;
import javax.json.bind.serializer.JsonbDeserializer;
import javax.json.bind.serializer.JsonbSerializer;
import javax.json.bind.serializer.SerializationContext;
import javax.json.stream.JsonGenerator;
import javax.json.stream.JsonParser;
import javax.json.bind.annotation.JsonbProperty;

/**
  * Информация о чатах.
  */

public class GetChatInfoDTO  {
  
 /**
  * Идентификатор чата.
  */
  @JsonbProperty("chatId")
  private Long chatId;

 /**
  * Идентификатор заказа.
  */
  @JsonbProperty("orderId")
  private Long orderId;

  @JsonbProperty("type")
  private ChatType type;

  @JsonbProperty("status")
  private ChatStatusType status;

 /**
  * Дата и время создания чата.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`. 
  */
  @JsonbProperty("createdAt")
  private Date createdAt;

 /**
  * Дата и время последнего сообщения в чате.
  */
  @JsonbProperty("updatedAt")
  private Date updatedAt;

  /**
   * Идентификатор чата.
   * @return chatId
   **/
  public Long getChatId() {
    return chatId;
  }

  /**
   * Set chatId
   */
  public void setChatId(Long chatId) {
    this.chatId = chatId;
  }

  public GetChatInfoDTO chatId(Long chatId) {
    this.chatId = chatId;
    return this;
  }

  /**
   * Идентификатор заказа.
   * @return orderId
   **/
  public Long getOrderId() {
    return orderId;
  }

  /**
   * Set orderId
   */
  public void setOrderId(Long orderId) {
    this.orderId = orderId;
  }

  public GetChatInfoDTO orderId(Long orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * Get type
   * @return type
   **/
  public ChatType getType() {
    return type;
  }

  /**
   * Set type
   */
  public void setType(ChatType type) {
    this.type = type;
  }

  public GetChatInfoDTO type(ChatType type) {
    this.type = type;
    return this;
  }

  /**
   * Get status
   * @return status
   **/
  public ChatStatusType getStatus() {
    return status;
  }

  /**
   * Set status
   */
  public void setStatus(ChatStatusType status) {
    this.status = status;
  }

  public GetChatInfoDTO status(ChatStatusType status) {
    this.status = status;
    return this;
  }

  /**
   * Дата и время создания чата.  Формат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-21T00:00:00+03:00&#x60;. 
   * @return createdAt
   **/
  public Date getCreatedAt() {
    return createdAt;
  }

  /**
   * Set createdAt
   */
  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  public GetChatInfoDTO createdAt(Date createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Дата и время последнего сообщения в чате.
   * @return updatedAt
   **/
  public Date getUpdatedAt() {
    return updatedAt;
  }

  /**
   * Set updatedAt
   */
  public void setUpdatedAt(Date updatedAt) {
    this.updatedAt = updatedAt;
  }

  public GetChatInfoDTO updatedAt(Date updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }


  /**
   * Create a string representation of this pojo.
   */
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetChatInfoDTO {\n");
    
    sb.append("    chatId: ").append(toIndentedString(chatId)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

