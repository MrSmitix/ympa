/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.server.model;

import java.lang.reflect.Type;
import javax.json.bind.annotation.JsonbTypeDeserializer;
import javax.json.bind.annotation.JsonbTypeSerializer;
import javax.json.bind.serializer.DeserializationContext;
import javax.json.bind.serializer.JsonbDeserializer;
import javax.json.bind.serializer.JsonbSerializer;
import javax.json.bind.serializer.SerializationContext;
import javax.json.stream.JsonGenerator;
import javax.json.stream.JsonParser;
import javax.json.bind.annotation.JsonbProperty;

/**
  * Информация о ярлыке для коробки.
  */

public class ParcelBoxLabelDTO  {
  
 /**
  * Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label](../../reference/orders/generateOrderLabel.md). 
  */
  @JsonbProperty("url")
  private String url;

 /**
  * Юридическое название магазина.
  */
  @JsonbProperty("supplierName")
  private String supplierName;

 /**
  * Юридическое название службы доставки.
  */
  @JsonbProperty("deliveryServiceName")
  private String deliveryServiceName;

 /**
  * Идентификатор заказа в системе Маркета.
  */
  @JsonbProperty("orderId")
  private Long orderId;

 /**
  * Идентификатор заказа в информационной системе магазина.  Совпадает с `orderId`, если Маркету неизвестен номер заказа в системе магазина. 
  */
  @JsonbProperty("orderNum")
  private String orderNum;

 /**
  * Фамилия и инициалы получателя заказа.
  */
  @JsonbProperty("recipientName")
  private String recipientName;

 /**
  * Идентификатор коробки.
  */
  @JsonbProperty("boxId")
  private Long boxId;

 /**
  * Идентификатор коробки в информационной системе магазина.  Возвращается в формате: `номер заказа на Маркете-номер коробки`. Например, `7206821‑1`, `7206821‑2` и т. д. 
  */
  @JsonbProperty("fulfilmentId")
  private String fulfilmentId;

 /**
  * Номер коробки в заказе. Возвращается в формате: `номер места/общее количество мест`. 
  */
  @JsonbProperty("place")
  private String place;

 /**
  * {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Общая масса всех товаров в заказе. Возвращается в формате: `weight кг`. 
  */
  @JsonbProperty("weight")
  private String weight;

 /**
  * Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).
  */
  @JsonbProperty("deliveryServiceId")
  private String deliveryServiceId;

 /**
  * Адрес получателя.
  */
  @JsonbProperty("deliveryAddress")
  private String deliveryAddress;

 /**
  * Дата отгрузки в формате `dd.MM.yyyy`.
  */
  @JsonbProperty("shipmentDate")
  private String shipmentDate;

  /**
   * Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label](../../reference/orders/generateOrderLabel.md). 
   * @return url
   **/
  public String getUrl() {
    return url;
  }

  /**
   * Set url
   */
  public void setUrl(String url) {
    this.url = url;
  }

  public ParcelBoxLabelDTO url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Юридическое название магазина.
   * @return supplierName
   **/
  public String getSupplierName() {
    return supplierName;
  }

  /**
   * Set supplierName
   */
  public void setSupplierName(String supplierName) {
    this.supplierName = supplierName;
  }

  public ParcelBoxLabelDTO supplierName(String supplierName) {
    this.supplierName = supplierName;
    return this;
  }

  /**
   * Юридическое название службы доставки.
   * @return deliveryServiceName
   **/
  public String getDeliveryServiceName() {
    return deliveryServiceName;
  }

  /**
   * Set deliveryServiceName
   */
  public void setDeliveryServiceName(String deliveryServiceName) {
    this.deliveryServiceName = deliveryServiceName;
  }

  public ParcelBoxLabelDTO deliveryServiceName(String deliveryServiceName) {
    this.deliveryServiceName = deliveryServiceName;
    return this;
  }

  /**
   * Идентификатор заказа в системе Маркета.
   * @return orderId
   **/
  public Long getOrderId() {
    return orderId;
  }

  /**
   * Set orderId
   */
  public void setOrderId(Long orderId) {
    this.orderId = orderId;
  }

  public ParcelBoxLabelDTO orderId(Long orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * Идентификатор заказа в информационной системе магазина.  Совпадает с &#x60;orderId&#x60;, если Маркету неизвестен номер заказа в системе магазина. 
   * @return orderNum
   **/
  public String getOrderNum() {
    return orderNum;
  }

  /**
   * Set orderNum
   */
  public void setOrderNum(String orderNum) {
    this.orderNum = orderNum;
  }

  public ParcelBoxLabelDTO orderNum(String orderNum) {
    this.orderNum = orderNum;
    return this;
  }

  /**
   * Фамилия и инициалы получателя заказа.
   * @return recipientName
   **/
  public String getRecipientName() {
    return recipientName;
  }

  /**
   * Set recipientName
   */
  public void setRecipientName(String recipientName) {
    this.recipientName = recipientName;
  }

  public ParcelBoxLabelDTO recipientName(String recipientName) {
    this.recipientName = recipientName;
    return this;
  }

  /**
   * Идентификатор коробки.
   * @return boxId
   **/
  public Long getBoxId() {
    return boxId;
  }

  /**
   * Set boxId
   */
  public void setBoxId(Long boxId) {
    this.boxId = boxId;
  }

  public ParcelBoxLabelDTO boxId(Long boxId) {
    this.boxId = boxId;
    return this;
  }

  /**
   * Идентификатор коробки в информационной системе магазина.  Возвращается в формате: &#x60;номер заказа на Маркете-номер коробки&#x60;. Например, &#x60;7206821‑1&#x60;, &#x60;7206821‑2&#x60; и т. д. 
   * @return fulfilmentId
   **/
  public String getFulfilmentId() {
    return fulfilmentId;
  }

  /**
   * Set fulfilmentId
   */
  public void setFulfilmentId(String fulfilmentId) {
    this.fulfilmentId = fulfilmentId;
  }

  public ParcelBoxLabelDTO fulfilmentId(String fulfilmentId) {
    this.fulfilmentId = fulfilmentId;
    return this;
  }

  /**
   * Номер коробки в заказе. Возвращается в формате: &#x60;номер места/общее количество мест&#x60;. 
   * @return place
   **/
  public String getPlace() {
    return place;
  }

  /**
   * Set place
   */
  public void setPlace(String place) {
    this.place = place;
  }

  public ParcelBoxLabelDTO place(String place) {
    this.place = place;
    return this;
  }

  /**
   * {% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Общая масса всех товаров в заказе. Возвращается в формате: &#x60;weight кг&#x60;. 
   * @return weight
   **/
  public String getWeight() {
    return weight;
  }

  /**
   * Set weight
   */
  public void setWeight(String weight) {
    this.weight = weight;
  }

  public ParcelBoxLabelDTO weight(String weight) {
    this.weight = weight;
    return this;
  }

  /**
   * Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).
   * @return deliveryServiceId
   **/
  public String getDeliveryServiceId() {
    return deliveryServiceId;
  }

  /**
   * Set deliveryServiceId
   */
  public void setDeliveryServiceId(String deliveryServiceId) {
    this.deliveryServiceId = deliveryServiceId;
  }

  public ParcelBoxLabelDTO deliveryServiceId(String deliveryServiceId) {
    this.deliveryServiceId = deliveryServiceId;
    return this;
  }

  /**
   * Адрес получателя.
   * @return deliveryAddress
   **/
  public String getDeliveryAddress() {
    return deliveryAddress;
  }

  /**
   * Set deliveryAddress
   */
  public void setDeliveryAddress(String deliveryAddress) {
    this.deliveryAddress = deliveryAddress;
  }

  public ParcelBoxLabelDTO deliveryAddress(String deliveryAddress) {
    this.deliveryAddress = deliveryAddress;
    return this;
  }

  /**
   * Дата отгрузки в формате &#x60;dd.MM.yyyy&#x60;.
   * @return shipmentDate
   **/
  public String getShipmentDate() {
    return shipmentDate;
  }

  /**
   * Set shipmentDate
   */
  public void setShipmentDate(String shipmentDate) {
    this.shipmentDate = shipmentDate;
  }

  public ParcelBoxLabelDTO shipmentDate(String shipmentDate) {
    this.shipmentDate = shipmentDate;
    return this;
  }


  /**
   * Create a string representation of this pojo.
   */
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParcelBoxLabelDTO {\n");
    
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    supplierName: ").append(toIndentedString(supplierName)).append("\n");
    sb.append("    deliveryServiceName: ").append(toIndentedString(deliveryServiceName)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    orderNum: ").append(toIndentedString(orderNum)).append("\n");
    sb.append("    recipientName: ").append(toIndentedString(recipientName)).append("\n");
    sb.append("    boxId: ").append(toIndentedString(boxId)).append("\n");
    sb.append("    fulfilmentId: ").append(toIndentedString(fulfilmentId)).append("\n");
    sb.append("    place: ").append(toIndentedString(place)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    deliveryServiceId: ").append(toIndentedString(deliveryServiceId)).append("\n");
    sb.append("    deliveryAddress: ").append(toIndentedString(deliveryAddress)).append("\n");
    sb.append("    shipmentDate: ").append(toIndentedString(shipmentDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

