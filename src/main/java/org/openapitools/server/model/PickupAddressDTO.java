/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.server.model;

import java.lang.reflect.Type;
import javax.json.bind.annotation.JsonbTypeDeserializer;
import javax.json.bind.annotation.JsonbTypeSerializer;
import javax.json.bind.serializer.DeserializationContext;
import javax.json.bind.serializer.JsonbDeserializer;
import javax.json.bind.serializer.JsonbSerializer;
import javax.json.bind.serializer.SerializationContext;
import javax.json.stream.JsonGenerator;
import javax.json.stream.JsonParser;
import javax.json.bind.annotation.JsonbProperty;

/**
  * Адрес доставки.
  */

public class PickupAddressDTO  {
  
 /**
  * Страна.
  */
  @JsonbProperty("country")
  private String country;

 /**
  * Город.
  */
  @JsonbProperty("city")
  private String city;

 /**
  * Улица.
  */
  @JsonbProperty("street")
  private String street;

 /**
  * Номер дома.
  */
  @JsonbProperty("house")
  private String house;

 /**
  * Почтовый индекс.
  */
  @JsonbProperty("postcode")
  private String postcode;

  /**
   * Страна.
   * @return country
   **/
  public String getCountry() {
    return country;
  }

  /**
   * Set country
   */
  public void setCountry(String country) {
    this.country = country;
  }

  public PickupAddressDTO country(String country) {
    this.country = country;
    return this;
  }

  /**
   * Город.
   * @return city
   **/
  public String getCity() {
    return city;
  }

  /**
   * Set city
   */
  public void setCity(String city) {
    this.city = city;
  }

  public PickupAddressDTO city(String city) {
    this.city = city;
    return this;
  }

  /**
   * Улица.
   * @return street
   **/
  public String getStreet() {
    return street;
  }

  /**
   * Set street
   */
  public void setStreet(String street) {
    this.street = street;
  }

  public PickupAddressDTO street(String street) {
    this.street = street;
    return this;
  }

  /**
   * Номер дома.
   * @return house
   **/
  public String getHouse() {
    return house;
  }

  /**
   * Set house
   */
  public void setHouse(String house) {
    this.house = house;
  }

  public PickupAddressDTO house(String house) {
    this.house = house;
    return this;
  }

  /**
   * Почтовый индекс.
   * @return postcode
   **/
  public String getPostcode() {
    return postcode;
  }

  /**
   * Set postcode
   */
  public void setPostcode(String postcode) {
    this.postcode = postcode;
  }

  public PickupAddressDTO postcode(String postcode) {
    this.postcode = postcode;
    return this;
  }


  /**
   * Create a string representation of this pojo.
   */
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PickupAddressDTO {\n");
    
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    street: ").append(toIndentedString(street)).append("\n");
    sb.append("    house: ").append(toIndentedString(house)).append("\n");
    sb.append("    postcode: ").append(toIndentedString(postcode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

