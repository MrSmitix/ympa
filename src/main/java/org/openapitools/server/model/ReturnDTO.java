/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.server.model;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.openapitools.server.model.LogisticPickupPointDTO;
import org.openapitools.server.model.RecipientType;
import org.openapitools.server.model.RefundStatusType;
import org.openapitools.server.model.ReturnItemDTO;
import org.openapitools.server.model.ReturnShipmentStatusType;
import org.openapitools.server.model.ReturnType;
import java.lang.reflect.Type;
import javax.json.bind.annotation.JsonbTypeDeserializer;
import javax.json.bind.annotation.JsonbTypeSerializer;
import javax.json.bind.serializer.DeserializationContext;
import javax.json.bind.serializer.JsonbDeserializer;
import javax.json.bind.serializer.JsonbSerializer;
import javax.json.bind.serializer.SerializationContext;
import javax.json.stream.JsonGenerator;
import javax.json.stream.JsonParser;
import javax.json.bind.annotation.JsonbProperty;

/**
  * Возврат заказа.
  */

public class ReturnDTO  {
  
 /**
  * Идентификатор возврата.
  */
  @JsonbProperty("id")
  private Long id;

 /**
  * Номер заказа.
  */
  @JsonbProperty("orderId")
  private Long orderId;

 /**
  * Дата создания возврата клиентом.
  */
  @JsonbProperty("creationDate")
  private Date creationDate;

 /**
  * Дата обновления возврата.
  */
  @JsonbProperty("updateDate")
  private Date updateDate;

  @JsonbProperty("refundStatus")
  private RefundStatusType refundStatus;

  @JsonbProperty("logisticPickupPoint")
  private LogisticPickupPointDTO logisticPickupPoint;

  @JsonbProperty("shipmentRecipientType")
  private RecipientType shipmentRecipientType;

  @JsonbProperty("shipmentStatus")
  private ReturnShipmentStatusType shipmentStatus;

 /**
  * Сумма возврата.
  */
  @JsonbProperty("refundAmount")
  private Long refundAmount;

 /**
  * Список товаров в возврате.
  */
  @JsonbProperty("items")
  private List<ReturnItemDTO> items = new ArrayList<>();

  @JsonbProperty("returnType")
  private ReturnType returnType;

 /**
  * Используется ли опция **Быстрый возврат денег за дешевый брак**. 
  */
  @JsonbProperty("fastReturn")
  private Boolean fastReturn;

  /**
   * Идентификатор возврата.
   * @return id
   **/
  public Long getId() {
    return id;
  }

  /**
   * Set id
   */
  public void setId(Long id) {
    this.id = id;
  }

  public ReturnDTO id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Номер заказа.
   * @return orderId
   **/
  public Long getOrderId() {
    return orderId;
  }

  /**
   * Set orderId
   */
  public void setOrderId(Long orderId) {
    this.orderId = orderId;
  }

  public ReturnDTO orderId(Long orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * Дата создания возврата клиентом.
   * @return creationDate
   **/
  public Date getCreationDate() {
    return creationDate;
  }

  /**
   * Set creationDate
   */
  public void setCreationDate(Date creationDate) {
    this.creationDate = creationDate;
  }

  public ReturnDTO creationDate(Date creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Дата обновления возврата.
   * @return updateDate
   **/
  public Date getUpdateDate() {
    return updateDate;
  }

  /**
   * Set updateDate
   */
  public void setUpdateDate(Date updateDate) {
    this.updateDate = updateDate;
  }

  public ReturnDTO updateDate(Date updateDate) {
    this.updateDate = updateDate;
    return this;
  }

  /**
   * Get refundStatus
   * @return refundStatus
   **/
  public RefundStatusType getRefundStatus() {
    return refundStatus;
  }

  /**
   * Set refundStatus
   */
  public void setRefundStatus(RefundStatusType refundStatus) {
    this.refundStatus = refundStatus;
  }

  public ReturnDTO refundStatus(RefundStatusType refundStatus) {
    this.refundStatus = refundStatus;
    return this;
  }

  /**
   * Get logisticPickupPoint
   * @return logisticPickupPoint
   **/
  public LogisticPickupPointDTO getLogisticPickupPoint() {
    return logisticPickupPoint;
  }

  /**
   * Set logisticPickupPoint
   */
  public void setLogisticPickupPoint(LogisticPickupPointDTO logisticPickupPoint) {
    this.logisticPickupPoint = logisticPickupPoint;
  }

  public ReturnDTO logisticPickupPoint(LogisticPickupPointDTO logisticPickupPoint) {
    this.logisticPickupPoint = logisticPickupPoint;
    return this;
  }

  /**
   * Get shipmentRecipientType
   * @return shipmentRecipientType
   **/
  public RecipientType getShipmentRecipientType() {
    return shipmentRecipientType;
  }

  /**
   * Set shipmentRecipientType
   */
  public void setShipmentRecipientType(RecipientType shipmentRecipientType) {
    this.shipmentRecipientType = shipmentRecipientType;
  }

  public ReturnDTO shipmentRecipientType(RecipientType shipmentRecipientType) {
    this.shipmentRecipientType = shipmentRecipientType;
    return this;
  }

  /**
   * Get shipmentStatus
   * @return shipmentStatus
   **/
  public ReturnShipmentStatusType getShipmentStatus() {
    return shipmentStatus;
  }

  /**
   * Set shipmentStatus
   */
  public void setShipmentStatus(ReturnShipmentStatusType shipmentStatus) {
    this.shipmentStatus = shipmentStatus;
  }

  public ReturnDTO shipmentStatus(ReturnShipmentStatusType shipmentStatus) {
    this.shipmentStatus = shipmentStatus;
    return this;
  }

  /**
   * Сумма возврата.
   * @return refundAmount
   **/
  public Long getRefundAmount() {
    return refundAmount;
  }

  /**
   * Set refundAmount
   */
  public void setRefundAmount(Long refundAmount) {
    this.refundAmount = refundAmount;
  }

  public ReturnDTO refundAmount(Long refundAmount) {
    this.refundAmount = refundAmount;
    return this;
  }

  /**
   * Список товаров в возврате.
   * @return items
   **/
  public List<ReturnItemDTO> getItems() {
    return items;
  }

  /**
   * Set items
   */
  public void setItems(List<ReturnItemDTO> items) {
    this.items = items;
  }

  public ReturnDTO items(List<ReturnItemDTO> items) {
    this.items = items;
    return this;
  }

  public ReturnDTO addItemsItem(ReturnItemDTO itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
   * Get returnType
   * @return returnType
   **/
  public ReturnType getReturnType() {
    return returnType;
  }

  /**
   * Set returnType
   */
  public void setReturnType(ReturnType returnType) {
    this.returnType = returnType;
  }

  public ReturnDTO returnType(ReturnType returnType) {
    this.returnType = returnType;
    return this;
  }

  /**
   * Используется ли опция **Быстрый возврат денег за дешевый брак**. 
   * @return fastReturn
   **/
  public Boolean getFastReturn() {
    return fastReturn;
  }

  /**
   * Set fastReturn
   */
  public void setFastReturn(Boolean fastReturn) {
    this.fastReturn = fastReturn;
  }

  public ReturnDTO fastReturn(Boolean fastReturn) {
    this.fastReturn = fastReturn;
    return this;
  }


  /**
   * Create a string representation of this pojo.
   */
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReturnDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    refundStatus: ").append(toIndentedString(refundStatus)).append("\n");
    sb.append("    logisticPickupPoint: ").append(toIndentedString(logisticPickupPoint)).append("\n");
    sb.append("    shipmentRecipientType: ").append(toIndentedString(shipmentRecipientType)).append("\n");
    sb.append("    shipmentStatus: ").append(toIndentedString(shipmentStatus)).append("\n");
    sb.append("    refundAmount: ").append(toIndentedString(refundAmount)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    returnType: ").append(toIndentedString(returnType)).append("\n");
    sb.append("    fastReturn: ").append(toIndentedString(fastReturn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

