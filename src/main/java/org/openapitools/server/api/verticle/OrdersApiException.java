package org.openapitools.server.api.verticle;

import org.openapitools.server.api.model.AcceptOrderCancellationRequest;
import org.openapitools.server.api.model.ApiClientDataErrorResponse;
import org.openapitools.server.api.model.ApiForbiddenErrorResponse;
import org.openapitools.server.api.model.ApiLimitErrorResponse;
import org.openapitools.server.api.model.ApiNotFoundErrorResponse;
import org.openapitools.server.api.model.ApiServerErrorResponse;
import org.openapitools.server.api.model.ApiUnauthorizedErrorResponse;
import org.openapitools.server.api.model.EmptyApiResponse;
import org.openapitools.server.api.model.GetOrderResponse;
import org.openapitools.server.api.model.GetOrdersResponse;
import java.time.LocalDate;
import org.openapitools.server.api.MainApiException;
import java.time.OffsetDateTime;
import org.openapitools.server.api.model.OrderBuyerType;
import org.openapitools.server.api.model.OrderDeliveryDispatchType;
import org.openapitools.server.api.model.OrderStatusType;
import org.openapitools.server.api.model.OrderSubstatusType;
import org.openapitools.server.api.model.ProvideOrderDigitalCodesRequest;
import org.openapitools.server.api.model.ProvideOrderItemIdentifiersRequest;
import org.openapitools.server.api.model.ProvideOrderItemIdentifiersResponse;
import java.util.Set;
import org.openapitools.server.api.model.SetOrderBoxLayoutRequest;
import org.openapitools.server.api.model.SetOrderBoxLayoutResponse;
import org.openapitools.server.api.model.SetOrderShipmentBoxesRequest;
import org.openapitools.server.api.model.SetOrderShipmentBoxesResponse;
import org.openapitools.server.api.model.UpdateOrderItemRequest;
import org.openapitools.server.api.model.UpdateOrderStatusRequest;
import org.openapitools.server.api.model.UpdateOrderStatusResponse;
import org.openapitools.server.api.model.UpdateOrderStatusesRequest;
import org.openapitools.server.api.model.UpdateOrderStatusesResponse;

public final class OrdersApiException extends MainApiException {
    public OrdersApiException(int statusCode, String statusMessage) {
        super(statusCode, statusMessage);
    }

    public static final OrdersApiException Orders_acceptOrderCancellation_200_Exception = new OrdersApiException(200, "Ответ на отмену заказа был успешно передан.");
    public static final OrdersApiException Orders_acceptOrderCancellation_400_Exception = new OrdersApiException(400, "Запрос содержит неправильные данные.");
    public static final OrdersApiException Orders_acceptOrderCancellation_401_Exception = new OrdersApiException(401, "В запросе не указаны данные для авторизации.");
    public static final OrdersApiException Orders_acceptOrderCancellation_403_Exception = new OrdersApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final OrdersApiException Orders_acceptOrderCancellation_404_Exception = new OrdersApiException(404, "Запрашиваемый ресурс не найден.");
    public static final OrdersApiException Orders_acceptOrderCancellation_420_Exception = new OrdersApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final OrdersApiException Orders_acceptOrderCancellation_500_Exception = new OrdersApiException(500, "Внутренняя ошибка сервера.");
    public static final OrdersApiException Orders_getOrder_200_Exception = new OrdersApiException(200, "Информация о заказе.");
    public static final OrdersApiException Orders_getOrder_400_Exception = new OrdersApiException(400, "Запрос содержит неправильные данные.");
    public static final OrdersApiException Orders_getOrder_401_Exception = new OrdersApiException(401, "В запросе не указаны данные для авторизации.");
    public static final OrdersApiException Orders_getOrder_403_Exception = new OrdersApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final OrdersApiException Orders_getOrder_404_Exception = new OrdersApiException(404, "Запрашиваемый ресурс не найден.");
    public static final OrdersApiException Orders_getOrder_420_Exception = new OrdersApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final OrdersApiException Orders_getOrder_500_Exception = new OrdersApiException(500, "Внутренняя ошибка сервера.");
    public static final OrdersApiException Orders_getOrders_200_Exception = new OrdersApiException(200, "Информация о заказах.");
    public static final OrdersApiException Orders_getOrders_400_Exception = new OrdersApiException(400, "Запрос содержит неправильные данные.");
    public static final OrdersApiException Orders_getOrders_401_Exception = new OrdersApiException(401, "В запросе не указаны данные для авторизации.");
    public static final OrdersApiException Orders_getOrders_403_Exception = new OrdersApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final OrdersApiException Orders_getOrders_404_Exception = new OrdersApiException(404, "Запрашиваемый ресурс не найден.");
    public static final OrdersApiException Orders_getOrders_420_Exception = new OrdersApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final OrdersApiException Orders_getOrders_500_Exception = new OrdersApiException(500, "Внутренняя ошибка сервера.");
    public static final OrdersApiException Orders_provideOrderDigitalCodes_200_Exception = new OrdersApiException(200, "Пустой ответ.");
    public static final OrdersApiException Orders_provideOrderDigitalCodes_400_Exception = new OrdersApiException(400, "Запрос содержит неправильные данные.");
    public static final OrdersApiException Orders_provideOrderDigitalCodes_401_Exception = new OrdersApiException(401, "В запросе не указаны данные для авторизации.");
    public static final OrdersApiException Orders_provideOrderDigitalCodes_403_Exception = new OrdersApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final OrdersApiException Orders_provideOrderDigitalCodes_404_Exception = new OrdersApiException(404, "Запрашиваемый ресурс не найден.");
    public static final OrdersApiException Orders_provideOrderDigitalCodes_420_Exception = new OrdersApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final OrdersApiException Orders_provideOrderDigitalCodes_500_Exception = new OrdersApiException(500, "Внутренняя ошибка сервера.");
    public static final OrdersApiException Orders_provideOrderItemIdentifiers_200_Exception = new OrdersApiException(200, "Ответ 200 обозначает, что коды успешно записались. Ответ содержит краткие сведения о промаркированных товарах.");
    public static final OrdersApiException Orders_provideOrderItemIdentifiers_400_Exception = new OrdersApiException(400, "Запрос содержит неправильные данные.");
    public static final OrdersApiException Orders_provideOrderItemIdentifiers_401_Exception = new OrdersApiException(401, "В запросе не указаны данные для авторизации.");
    public static final OrdersApiException Orders_provideOrderItemIdentifiers_403_Exception = new OrdersApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final OrdersApiException Orders_provideOrderItemIdentifiers_404_Exception = new OrdersApiException(404, "Запрашиваемый ресурс не найден.");
    public static final OrdersApiException Orders_provideOrderItemIdentifiers_420_Exception = new OrdersApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final OrdersApiException Orders_provideOrderItemIdentifiers_500_Exception = new OrdersApiException(500, "Внутренняя ошибка сервера.");
    public static final OrdersApiException Orders_setOrderBoxLayout_200_Exception = new OrdersApiException(200, "В ответ придет переданная раскладка с идентификаторами коробок — они понадобятся для запроса ярлыков. ");
    public static final OrdersApiException Orders_setOrderBoxLayout_400_Exception = new OrdersApiException(400, "Запрос содержит неправильные данные.");
    public static final OrdersApiException Orders_setOrderBoxLayout_401_Exception = new OrdersApiException(401, "В запросе не указаны данные для авторизации.");
    public static final OrdersApiException Orders_setOrderBoxLayout_403_Exception = new OrdersApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final OrdersApiException Orders_setOrderBoxLayout_404_Exception = new OrdersApiException(404, "Запрашиваемый ресурс не найден.");
    public static final OrdersApiException Orders_setOrderBoxLayout_420_Exception = new OrdersApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final OrdersApiException Orders_setOrderBoxLayout_500_Exception = new OrdersApiException(500, "Внутренняя ошибка сервера.");
    public static final OrdersApiException Orders_setOrderShipmentBoxes_200_Exception = new OrdersApiException(200, "Имеет значение только тип ответа. Если ответ `ОК`, количество грузомест записано.");
    public static final OrdersApiException Orders_setOrderShipmentBoxes_400_Exception = new OrdersApiException(400, "Запрос содержит неправильные данные.");
    public static final OrdersApiException Orders_setOrderShipmentBoxes_401_Exception = new OrdersApiException(401, "В запросе не указаны данные для авторизации.");
    public static final OrdersApiException Orders_setOrderShipmentBoxes_403_Exception = new OrdersApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final OrdersApiException Orders_setOrderShipmentBoxes_404_Exception = new OrdersApiException(404, "Запрашиваемый ресурс не найден.");
    public static final OrdersApiException Orders_setOrderShipmentBoxes_420_Exception = new OrdersApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final OrdersApiException Orders_setOrderShipmentBoxes_500_Exception = new OrdersApiException(500, "Внутренняя ошибка сервера.");
    public static final OrdersApiException Orders_updateOrderItems_200_Exception = new OrdersApiException(200, "Маркет успешно обработал ваш запрос. Выходные данные не ожидаются.");
    public static final OrdersApiException Orders_updateOrderItems_400_Exception = new OrdersApiException(400, "Запрос содержит неправильные данные.");
    public static final OrdersApiException Orders_updateOrderItems_401_Exception = new OrdersApiException(401, "В запросе не указаны данные для авторизации.");
    public static final OrdersApiException Orders_updateOrderItems_403_Exception = new OrdersApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final OrdersApiException Orders_updateOrderItems_404_Exception = new OrdersApiException(404, "Запрашиваемый ресурс не найден.");
    public static final OrdersApiException Orders_updateOrderItems_420_Exception = new OrdersApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final OrdersApiException Orders_updateOrderItems_500_Exception = new OrdersApiException(500, "Внутренняя ошибка сервера.");
    public static final OrdersApiException Orders_updateOrderStatus_200_Exception = new OrdersApiException(200, "В случае успешного изменения статуса заказа возвращается обновленная информация о заказе.");
    public static final OrdersApiException Orders_updateOrderStatus_400_Exception = new OrdersApiException(400, "Запрос содержит неправильные данные.");
    public static final OrdersApiException Orders_updateOrderStatus_401_Exception = new OrdersApiException(401, "В запросе не указаны данные для авторизации.");
    public static final OrdersApiException Orders_updateOrderStatus_403_Exception = new OrdersApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final OrdersApiException Orders_updateOrderStatus_404_Exception = new OrdersApiException(404, "Запрашиваемый ресурс не найден.");
    public static final OrdersApiException Orders_updateOrderStatus_420_Exception = new OrdersApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final OrdersApiException Orders_updateOrderStatus_500_Exception = new OrdersApiException(500, "Внутренняя ошибка сервера.");
    public static final OrdersApiException Orders_updateOrderStatuses_200_Exception = new OrdersApiException(200, "Возвращается информация об обновленных статусах заказов.");
    public static final OrdersApiException Orders_updateOrderStatuses_400_Exception = new OrdersApiException(400, "Запрос содержит неправильные данные.");
    public static final OrdersApiException Orders_updateOrderStatuses_401_Exception = new OrdersApiException(401, "В запросе не указаны данные для авторизации.");
    public static final OrdersApiException Orders_updateOrderStatuses_403_Exception = new OrdersApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final OrdersApiException Orders_updateOrderStatuses_404_Exception = new OrdersApiException(404, "Запрашиваемый ресурс не найден.");
    public static final OrdersApiException Orders_updateOrderStatuses_420_Exception = new OrdersApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final OrdersApiException Orders_updateOrderStatuses_500_Exception = new OrdersApiException(500, "Внутренняя ошибка сервера.");
    

}