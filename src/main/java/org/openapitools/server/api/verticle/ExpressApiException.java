package org.openapitools.server.api.verticle;

import org.openapitools.server.api.model.AddHiddenOffersRequest;
import org.openapitools.server.api.model.AddOffersToArchiveRequest;
import org.openapitools.server.api.model.AddOffersToArchiveResponse;
import org.openapitools.server.api.model.ApiClientDataErrorResponse;
import org.openapitools.server.api.model.ApiForbiddenErrorResponse;
import org.openapitools.server.api.model.ApiLimitErrorResponse;
import org.openapitools.server.api.model.ApiLockedErrorResponse;
import org.openapitools.server.api.model.ApiNotFoundErrorResponse;
import org.openapitools.server.api.model.ApiServerErrorResponse;
import org.openapitools.server.api.model.ApiUnauthorizedErrorResponse;
import org.openapitools.server.api.model.CalculateTariffsRequest;
import org.openapitools.server.api.model.CalculateTariffsResponse;
import org.openapitools.server.api.model.ConfirmPricesRequest;
import org.openapitools.server.api.model.CreateChatRequest;
import org.openapitools.server.api.model.CreateChatResponse;
import org.openapitools.server.api.model.CurrencyType;
import org.openapitools.server.api.model.DeleteCampaignOffersRequest;
import org.openapitools.server.api.model.DeleteCampaignOffersResponse;
import org.openapitools.server.api.model.DeleteGoodsFeedbackCommentRequest;
import org.openapitools.server.api.model.DeleteHiddenOffersRequest;
import org.openapitools.server.api.model.DeleteOffersFromArchiveRequest;
import org.openapitools.server.api.model.DeleteOffersFromArchiveResponse;
import org.openapitools.server.api.model.DeleteOffersRequest;
import org.openapitools.server.api.model.DeleteOffersResponse;
import org.openapitools.server.api.model.DeletePromoOffersRequest;
import org.openapitools.server.api.model.DeletePromoOffersResponse;
import org.openapitools.server.api.model.EmptyApiResponse;
import org.openapitools.server.api.model.FeedIndexLogsStatusType;
import java.io.File;
import org.openapitools.server.api.model.GenerateBoostConsolidatedRequest;
import org.openapitools.server.api.model.GenerateCompetitorsPositionReportRequest;
import org.openapitools.server.api.model.GenerateGoodsFeedbackRequest;
import org.openapitools.server.api.model.GenerateGoodsRealizationReportRequest;
import org.openapitools.server.api.model.GenerateMassOrderLabelsRequest;
import org.openapitools.server.api.model.GeneratePricesReportRequest;
import org.openapitools.server.api.model.GenerateReportResponse;
import org.openapitools.server.api.model.GenerateShelfsStatisticsRequest;
import org.openapitools.server.api.model.GenerateShowsSalesReportRequest;
import org.openapitools.server.api.model.GenerateStocksOnWarehousesReportRequest;
import org.openapitools.server.api.model.GenerateUnitedMarketplaceServicesReportRequest;
import org.openapitools.server.api.model.GenerateUnitedNettingReportRequest;
import org.openapitools.server.api.model.GenerateUnitedOrdersRequest;
import org.openapitools.server.api.model.GetAllOffersResponse;
import org.openapitools.server.api.model.GetBidsInfoRequest;
import org.openapitools.server.api.model.GetBidsInfoResponse;
import org.openapitools.server.api.model.GetBidsRecommendationsRequest;
import org.openapitools.server.api.model.GetBidsRecommendationsResponse;
import org.openapitools.server.api.model.GetBusinessBuyerInfoResponse;
import org.openapitools.server.api.model.GetBusinessDocumentsInfoResponse;
import org.openapitools.server.api.model.GetBusinessSettingsResponse;
import org.openapitools.server.api.model.GetCampaignLoginsResponse;
import org.openapitools.server.api.model.GetCampaignOffersRequest;
import org.openapitools.server.api.model.GetCampaignOffersResponse;
import org.openapitools.server.api.model.GetCampaignRegionResponse;
import org.openapitools.server.api.model.GetCampaignResponse;
import org.openapitools.server.api.model.GetCampaignSettingsResponse;
import org.openapitools.server.api.model.GetCampaignsResponse;
import org.openapitools.server.api.model.GetCategoriesMaxSaleQuantumRequest;
import org.openapitools.server.api.model.GetCategoriesMaxSaleQuantumResponse;
import org.openapitools.server.api.model.GetCategoriesRequest;
import org.openapitools.server.api.model.GetCategoriesResponse;
import org.openapitools.server.api.model.GetCategoryContentParametersResponse;
import org.openapitools.server.api.model.GetChatHistoryRequest;
import org.openapitools.server.api.model.GetChatHistoryResponse;
import org.openapitools.server.api.model.GetChatsRequest;
import org.openapitools.server.api.model.GetChatsResponse;
import org.openapitools.server.api.model.GetDeliveryServicesResponse;
import org.openapitools.server.api.model.GetFeedIndexLogsResponse;
import org.openapitools.server.api.model.GetFeedResponse;
import org.openapitools.server.api.model.GetFeedbackListResponse;
import org.openapitools.server.api.model.GetFeedsResponse;
import org.openapitools.server.api.model.GetGoodsFeedbackCommentsRequest;
import org.openapitools.server.api.model.GetGoodsFeedbackCommentsResponse;
import org.openapitools.server.api.model.GetGoodsFeedbackRequest;
import org.openapitools.server.api.model.GetGoodsFeedbackResponse;
import org.openapitools.server.api.model.GetGoodsStatsRequest;
import org.openapitools.server.api.model.GetGoodsStatsResponse;
import org.openapitools.server.api.model.GetHiddenOffersResponse;
import org.openapitools.server.api.model.GetOfferCardsContentStatusRequest;
import org.openapitools.server.api.model.GetOfferCardsContentStatusResponse;
import org.openapitools.server.api.model.GetOfferMappingEntriesResponse;
import org.openapitools.server.api.model.GetOfferMappingsRequest;
import org.openapitools.server.api.model.GetOfferMappingsResponse;
import org.openapitools.server.api.model.GetOfferRecommendationsRequest;
import org.openapitools.server.api.model.GetOfferRecommendationsResponse;
import org.openapitools.server.api.model.GetOffersResponse;
import org.openapitools.server.api.model.GetOrderLabelsDataResponse;
import org.openapitools.server.api.model.GetOrderResponse;
import org.openapitools.server.api.model.GetOrdersResponse;
import org.openapitools.server.api.model.GetOrdersStatsRequest;
import org.openapitools.server.api.model.GetOrdersStatsResponse;
import org.openapitools.server.api.model.GetPricesByOfferIdsRequest;
import org.openapitools.server.api.model.GetPricesByOfferIdsResponse;
import org.openapitools.server.api.model.GetPricesResponse;
import org.openapitools.server.api.model.GetPromoOffersRequest;
import org.openapitools.server.api.model.GetPromoOffersResponse;
import org.openapitools.server.api.model.GetPromosRequest;
import org.openapitools.server.api.model.GetPromosResponse;
import org.openapitools.server.api.model.GetQualityRatingDetailsResponse;
import org.openapitools.server.api.model.GetQualityRatingRequest;
import org.openapitools.server.api.model.GetQualityRatingResponse;
import org.openapitools.server.api.model.GetQuarantineOffersRequest;
import org.openapitools.server.api.model.GetQuarantineOffersResponse;
import org.openapitools.server.api.model.GetRegionWithChildrenResponse;
import org.openapitools.server.api.model.GetRegionsResponse;
import org.openapitools.server.api.model.GetReportInfoResponse;
import org.openapitools.server.api.model.GetReturnResponse;
import org.openapitools.server.api.model.GetReturnsResponse;
import org.openapitools.server.api.model.GetSuggestedOfferMappingEntriesRequest;
import org.openapitools.server.api.model.GetSuggestedOfferMappingEntriesResponse;
import org.openapitools.server.api.model.GetSuggestedOfferMappingsRequest;
import org.openapitools.server.api.model.GetSuggestedOfferMappingsResponse;
import org.openapitools.server.api.model.GetWarehouseStocksRequest;
import org.openapitools.server.api.model.GetWarehouseStocksResponse;
import org.openapitools.server.api.model.GetWarehousesResponse;
import java.time.LocalDate;
import org.openapitools.server.api.MainApiException;
import org.openapitools.server.api.model.OfferAvailabilityStatusType;
import org.openapitools.server.api.model.OfferMappingKindType;
import org.openapitools.server.api.model.OfferProcessingStatusType;
import java.time.OffsetDateTime;
import org.openapitools.server.api.model.OrderBuyerType;
import org.openapitools.server.api.model.OrderDeliveryDispatchType;
import org.openapitools.server.api.model.OrderStatusType;
import org.openapitools.server.api.model.OrderSubstatusType;
import org.openapitools.server.api.model.PageFormatType;
import org.openapitools.server.api.model.ProvideOrderItemIdentifiersRequest;
import org.openapitools.server.api.model.ProvideOrderItemIdentifiersResponse;
import org.openapitools.server.api.model.PutSkuBidsRequest;
import org.openapitools.server.api.model.RefundStatusType;
import org.openapitools.server.api.model.ReportFormatType;
import org.openapitools.server.api.model.ReturnType;
import org.openapitools.server.api.model.SendMessageToChatRequest;
import java.util.Set;
import org.openapitools.server.api.model.SetFeedParamsRequest;
import org.openapitools.server.api.model.SetOrderBoxLayoutRequest;
import org.openapitools.server.api.model.SetOrderBoxLayoutResponse;
import org.openapitools.server.api.model.SetOrderShipmentBoxesRequest;
import org.openapitools.server.api.model.SetOrderShipmentBoxesResponse;
import org.openapitools.server.api.model.SkipGoodsFeedbackReactionRequest;
import org.openapitools.server.api.model.SuggestPricesRequest;
import org.openapitools.server.api.model.SuggestPricesResponse;
import org.openapitools.server.api.model.UpdateBusinessPricesRequest;
import org.openapitools.server.api.model.UpdateCampaignOffersRequest;
import org.openapitools.server.api.model.UpdateGoodsFeedbackCommentRequest;
import org.openapitools.server.api.model.UpdateGoodsFeedbackCommentResponse;
import org.openapitools.server.api.model.UpdateOfferContentRequest;
import org.openapitools.server.api.model.UpdateOfferContentResponse;
import org.openapitools.server.api.model.UpdateOfferMappingEntryRequest;
import org.openapitools.server.api.model.UpdateOfferMappingsRequest;
import org.openapitools.server.api.model.UpdateOfferMappingsResponse;
import org.openapitools.server.api.model.UpdateOrderItemRequest;
import org.openapitools.server.api.model.UpdateOrderStatusRequest;
import org.openapitools.server.api.model.UpdateOrderStatusResponse;
import org.openapitools.server.api.model.UpdateOrderStatusesRequest;
import org.openapitools.server.api.model.UpdateOrderStatusesResponse;
import org.openapitools.server.api.model.UpdatePricesRequest;
import org.openapitools.server.api.model.UpdatePromoOffersRequest;
import org.openapitools.server.api.model.UpdatePromoOffersResponse;
import org.openapitools.server.api.model.UpdateStocksRequest;
import org.openapitools.server.api.model.VerifyOrderEacRequest;
import org.openapitools.server.api.model.VerifyOrderEacResponse;

public final class ExpressApiException extends MainApiException {
    public ExpressApiException(int statusCode, String statusMessage) {
        super(statusCode, statusMessage);
    }

    public static final ExpressApiException Express_addHiddenOffers_200_Exception = new ExpressApiException(200, "Настройки скрытия получены и скоро вступят в силу.");
    public static final ExpressApiException Express_addHiddenOffers_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_addHiddenOffers_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_addHiddenOffers_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_addHiddenOffers_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_addHiddenOffers_423_Exception = new ExpressApiException(423, "К ресурсу нельзя применить указанный метод.");
    public static final ExpressApiException Express_addHiddenOffers_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_addOffersToArchive_200_Exception = new ExpressApiException(200, "Если некоторые товары добавить в архив не удалось, в ответе 200 будет их список.  Список успешно добавленных товаров не возвращается. ");
    public static final ExpressApiException Express_addOffersToArchive_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_addOffersToArchive_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_addOffersToArchive_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_addOffersToArchive_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_addOffersToArchive_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_addOffersToArchive_423_Exception = new ExpressApiException(423, "К ресурсу нельзя применить указанный метод.");
    public static final ExpressApiException Express_addOffersToArchive_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_calculateTariffs_200_Exception = new ExpressApiException(200, "Стоимость услуг.");
    public static final ExpressApiException Express_calculateTariffs_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_calculateTariffs_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_calculateTariffs_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_calculateTariffs_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_calculateTariffs_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_calculateTariffs_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_confirmBusinessPrices_200_Exception = new ExpressApiException(200, "Ответ 200 обозначает, что цены подтверждены.");
    public static final ExpressApiException Express_confirmBusinessPrices_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_confirmBusinessPrices_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_confirmBusinessPrices_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_confirmBusinessPrices_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_confirmBusinessPrices_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_confirmBusinessPrices_423_Exception = new ExpressApiException(423, "К ресурсу нельзя применить указанный метод.");
    public static final ExpressApiException Express_confirmBusinessPrices_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_confirmCampaignPrices_200_Exception = new ExpressApiException(200, "Ответ 200 обозначает, что цены подтверждены.");
    public static final ExpressApiException Express_confirmCampaignPrices_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_confirmCampaignPrices_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_confirmCampaignPrices_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_confirmCampaignPrices_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_confirmCampaignPrices_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_confirmCampaignPrices_423_Exception = new ExpressApiException(423, "К ресурсу нельзя применить указанный метод.");
    public static final ExpressApiException Express_confirmCampaignPrices_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_createChat_200_Exception = new ExpressApiException(200, "Все получилось: чат создан. ");
    public static final ExpressApiException Express_createChat_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_createChat_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_createChat_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_createChat_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_createChat_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_createChat_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_deleteCampaignOffers_200_Exception = new ExpressApiException(200, "Если удалось удалить не все товары, с ответом 200 вернется список тех, что были в запросе, но остались в магазине.");
    public static final ExpressApiException Express_deleteCampaignOffers_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_deleteCampaignOffers_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_deleteCampaignOffers_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_deleteCampaignOffers_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_deleteCampaignOffers_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_deleteCampaignOffers_423_Exception = new ExpressApiException(423, "К ресурсу нельзя применить указанный метод.");
    public static final ExpressApiException Express_deleteCampaignOffers_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_deleteGoodsFeedbackComment_200_Exception = new ExpressApiException(200, "Пустой ответ.");
    public static final ExpressApiException Express_deleteGoodsFeedbackComment_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_deleteGoodsFeedbackComment_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_deleteGoodsFeedbackComment_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_deleteGoodsFeedbackComment_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_deleteGoodsFeedbackComment_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_deleteGoodsFeedbackComment_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_deleteHiddenOffers_200_Exception = new ExpressApiException(200, "Показ товаров возобновлен.");
    public static final ExpressApiException Express_deleteHiddenOffers_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_deleteHiddenOffers_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_deleteHiddenOffers_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_deleteHiddenOffers_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_deleteHiddenOffers_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_deleteHiddenOffers_423_Exception = new ExpressApiException(423, "К ресурсу нельзя применить указанный метод.");
    public static final ExpressApiException Express_deleteHiddenOffers_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_deleteOffers_200_Exception = new ExpressApiException(200, "Если удалось удалить не все товары, с ответом 200 вернется список тех, что были в запросе, но остались в магазине.");
    public static final ExpressApiException Express_deleteOffers_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_deleteOffers_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_deleteOffers_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_deleteOffers_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_deleteOffers_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_deleteOffers_423_Exception = new ExpressApiException(423, "К ресурсу нельзя применить указанный метод.");
    public static final ExpressApiException Express_deleteOffers_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_deleteOffersFromArchive_200_Exception = new ExpressApiException(200, "Если некоторые товары восстановить из архива не удалось, в ответе 200 будет их список.  Список успешно восстановленных товаров не возвращается. ");
    public static final ExpressApiException Express_deleteOffersFromArchive_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_deleteOffersFromArchive_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_deleteOffersFromArchive_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_deleteOffersFromArchive_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_deleteOffersFromArchive_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_deleteOffersFromArchive_423_Exception = new ExpressApiException(423, "К ресурсу нельзя применить указанный метод.");
    public static final ExpressApiException Express_deleteOffersFromArchive_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_deletePromoOffers_200_Exception = new ExpressApiException(200, "Результат удаления товаров из акции.");
    public static final ExpressApiException Express_deletePromoOffers_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_deletePromoOffers_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_deletePromoOffers_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_deletePromoOffers_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_deletePromoOffers_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_deletePromoOffers_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_generateBoostConsolidatedReport_200_Exception = new ExpressApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ExpressApiException Express_generateBoostConsolidatedReport_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_generateBoostConsolidatedReport_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_generateBoostConsolidatedReport_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_generateBoostConsolidatedReport_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_generateBoostConsolidatedReport_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_generateCompetitorsPositionReport_200_Exception = new ExpressApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ExpressApiException Express_generateCompetitorsPositionReport_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_generateCompetitorsPositionReport_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_generateCompetitorsPositionReport_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_generateCompetitorsPositionReport_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_generateCompetitorsPositionReport_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_generateGoodsFeedbackReport_200_Exception = new ExpressApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ExpressApiException Express_generateGoodsFeedbackReport_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_generateGoodsFeedbackReport_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_generateGoodsFeedbackReport_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_generateGoodsFeedbackReport_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_generateGoodsFeedbackReport_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_generateGoodsRealizationReport_200_Exception = new ExpressApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ExpressApiException Express_generateGoodsRealizationReport_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_generateGoodsRealizationReport_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_generateGoodsRealizationReport_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_generateGoodsRealizationReport_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_generateGoodsRealizationReport_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_generateMassOrderLabelsReport_200_Exception = new ExpressApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый файл.  Если при генерации не удалось найти часть заказов, в ответе на запрос получения готового файла вернется подстатус `RESOURCE_NOT_FOUND`. ");
    public static final ExpressApiException Express_generateMassOrderLabelsReport_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_generateMassOrderLabelsReport_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_generateMassOrderLabelsReport_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_generateMassOrderLabelsReport_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_generateMassOrderLabelsReport_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_generateOrderLabel_200_Exception = new ExpressApiException(200, "PDF‑файл с ярлыками для коробки. Файл содержит одну страницу с ярлыком.");
    public static final ExpressApiException Express_generateOrderLabel_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_generateOrderLabel_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_generateOrderLabel_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_generateOrderLabel_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_generateOrderLabel_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_generateOrderLabel_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_generateOrderLabels_200_Exception = new ExpressApiException(200, "PDF‑файл с ярлыками на все коробки.");
    public static final ExpressApiException Express_generateOrderLabels_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_generateOrderLabels_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_generateOrderLabels_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_generateOrderLabels_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_generateOrderLabels_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_generateOrderLabels_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_generatePricesReport_200_Exception = new ExpressApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ExpressApiException Express_generatePricesReport_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_generatePricesReport_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_generatePricesReport_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_generatePricesReport_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_generatePricesReport_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_generateShelfsStatisticsReport_200_Exception = new ExpressApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ExpressApiException Express_generateShelfsStatisticsReport_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_generateShelfsStatisticsReport_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_generateShelfsStatisticsReport_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_generateShelfsStatisticsReport_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_generateShelfsStatisticsReport_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_generateShowsSalesReport_200_Exception = new ExpressApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ExpressApiException Express_generateShowsSalesReport_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_generateShowsSalesReport_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_generateShowsSalesReport_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_generateShowsSalesReport_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_generateShowsSalesReport_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_generateStocksOnWarehousesReport_200_Exception = new ExpressApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ExpressApiException Express_generateStocksOnWarehousesReport_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_generateStocksOnWarehousesReport_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_generateStocksOnWarehousesReport_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_generateStocksOnWarehousesReport_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_generateStocksOnWarehousesReport_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_generateUnitedMarketplaceServicesReport_200_Exception = new ExpressApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ExpressApiException Express_generateUnitedMarketplaceServicesReport_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_generateUnitedMarketplaceServicesReport_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_generateUnitedMarketplaceServicesReport_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_generateUnitedMarketplaceServicesReport_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_generateUnitedMarketplaceServicesReport_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_generateUnitedNettingReport_200_Exception = new ExpressApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ExpressApiException Express_generateUnitedNettingReport_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_generateUnitedNettingReport_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_generateUnitedNettingReport_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_generateUnitedNettingReport_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_generateUnitedNettingReport_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_generateUnitedOrdersReport_200_Exception = new ExpressApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ExpressApiException Express_generateUnitedOrdersReport_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_generateUnitedOrdersReport_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_generateUnitedOrdersReport_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_generateUnitedOrdersReport_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_generateUnitedOrdersReport_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getAllOffers_200_Exception = new ExpressApiException(200, "Предложения магазина.");
    public static final ExpressApiException Express_getAllOffers_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getAllOffers_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getAllOffers_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getAllOffers_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getAllOffers_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getAllOffers_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getBidsInfoForBusiness_200_Exception = new ExpressApiException(200, "Значения ставок для заданных товаров. В ответ попадают только товары, на которые установлены ставки.");
    public static final ExpressApiException Express_getBidsInfoForBusiness_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getBidsInfoForBusiness_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getBidsInfoForBusiness_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getBidsInfoForBusiness_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getBidsInfoForBusiness_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getBidsInfoForBusiness_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getBidsRecommendations_200_Exception = new ExpressApiException(200, "Рекомендованные ставки для заданных товаров.");
    public static final ExpressApiException Express_getBidsRecommendations_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getBidsRecommendations_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getBidsRecommendations_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getBidsRecommendations_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getBidsRecommendations_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getBidsRecommendations_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getBusinessQuarantineOffers_200_Exception = new ExpressApiException(200, "Список товаров в карантине.");
    public static final ExpressApiException Express_getBusinessQuarantineOffers_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getBusinessQuarantineOffers_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getBusinessQuarantineOffers_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getBusinessQuarantineOffers_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getBusinessQuarantineOffers_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getBusinessQuarantineOffers_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getBusinessSettings_200_Exception = new ExpressApiException(200, "Настройки кабинета.");
    public static final ExpressApiException Express_getBusinessSettings_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getBusinessSettings_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getBusinessSettings_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getBusinessSettings_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getBusinessSettings_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getBusinessSettings_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getCampaign_200_Exception = new ExpressApiException(200, "Информация о магазине.");
    public static final ExpressApiException Express_getCampaign_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getCampaign_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getCampaign_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getCampaign_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getCampaign_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getCampaign_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getCampaignLogins_200_Exception = new ExpressApiException(200, "Список логинов, связанных с магазином.");
    public static final ExpressApiException Express_getCampaignLogins_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getCampaignLogins_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getCampaignLogins_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getCampaignLogins_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getCampaignLogins_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getCampaignLogins_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getCampaignOffers_200_Exception = new ExpressApiException(200, "Список товаров, размещенных в заданном магазине.");
    public static final ExpressApiException Express_getCampaignOffers_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getCampaignOffers_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getCampaignOffers_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getCampaignOffers_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getCampaignOffers_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getCampaignOffers_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getCampaignQuarantineOffers_200_Exception = new ExpressApiException(200, "Список товаров в карантине.");
    public static final ExpressApiException Express_getCampaignQuarantineOffers_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getCampaignQuarantineOffers_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getCampaignQuarantineOffers_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getCampaignQuarantineOffers_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getCampaignQuarantineOffers_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getCampaignQuarantineOffers_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getCampaignRegion_200_Exception = new ExpressApiException(200, "Возвращает регион, в котором находится магазин.  |**⚙️ Лимит:** 1000 запросов в час| |-| ");
    public static final ExpressApiException Express_getCampaignRegion_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getCampaignRegion_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getCampaignRegion_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getCampaignRegion_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getCampaignRegion_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getCampaignRegion_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getCampaignSettings_200_Exception = new ExpressApiException(200, "Настройки магазина.");
    public static final ExpressApiException Express_getCampaignSettings_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getCampaignSettings_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getCampaignSettings_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getCampaignSettings_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getCampaignSettings_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getCampaignSettings_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getCampaigns_200_Exception = new ExpressApiException(200, "Магазины пользователя.");
    public static final ExpressApiException Express_getCampaigns_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getCampaigns_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getCampaigns_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getCampaigns_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getCampaigns_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getCampaigns_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getCampaignsByLogin_200_Exception = new ExpressApiException(200, "Информация о магазинах.");
    public static final ExpressApiException Express_getCampaignsByLogin_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getCampaignsByLogin_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getCampaignsByLogin_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getCampaignsByLogin_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getCampaignsByLogin_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getCampaignsByLogin_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getCategoriesMaxSaleQuantum_200_Exception = new ExpressApiException(200, "Лимит на установку кванта и минимального количества товаров.");
    public static final ExpressApiException Express_getCategoriesMaxSaleQuantum_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getCategoriesMaxSaleQuantum_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getCategoriesMaxSaleQuantum_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getCategoriesMaxSaleQuantum_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getCategoriesMaxSaleQuantum_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getCategoriesMaxSaleQuantum_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getCategoriesTree_200_Exception = new ExpressApiException(200, "Категории Маркета.");
    public static final ExpressApiException Express_getCategoriesTree_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getCategoriesTree_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getCategoriesTree_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getCategoriesTree_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getCategoriesTree_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getCategoriesTree_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getCategoryContentParameters_200_Exception = new ExpressApiException(200, "Список характеристик товаров из заданной категории.");
    public static final ExpressApiException Express_getCategoryContentParameters_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getCategoryContentParameters_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getCategoryContentParameters_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getCategoryContentParameters_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getCategoryContentParameters_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getCategoryContentParameters_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getChatHistory_200_Exception = new ExpressApiException(200, "История сообщений успешно получена. ");
    public static final ExpressApiException Express_getChatHistory_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getChatHistory_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getChatHistory_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getChatHistory_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getChatHistory_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getChatHistory_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getChats_200_Exception = new ExpressApiException(200, "Список чатов. ");
    public static final ExpressApiException Express_getChats_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getChats_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getChats_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getChats_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getChats_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getChats_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getDeliveryServices_200_Exception = new ExpressApiException(200, "Информация о службах доставки.");
    public static final ExpressApiException Express_getDeliveryServices_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getDeliveryServices_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getDeliveryServices_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getDeliveryServices_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getDeliveryServices_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getDeliveryServices_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getFeed_200_Exception = new ExpressApiException(200, "Информация о прайс-листе.");
    public static final ExpressApiException Express_getFeed_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getFeed_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getFeed_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getFeed_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getFeed_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getFeed_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getFeedIndexLogs_200_Exception = new ExpressApiException(200, "Отчет по индексации прайс-листа.");
    public static final ExpressApiException Express_getFeedIndexLogs_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getFeedIndexLogs_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getFeedIndexLogs_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getFeedIndexLogs_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getFeedIndexLogs_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getFeedIndexLogs_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getFeedbackAndCommentUpdates_200_Exception = new ExpressApiException(200, "Список отзывов для магазина.");
    public static final ExpressApiException Express_getFeedbackAndCommentUpdates_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getFeedbackAndCommentUpdates_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getFeedbackAndCommentUpdates_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getFeedbackAndCommentUpdates_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getFeedbackAndCommentUpdates_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getFeedbackAndCommentUpdates_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getFeeds_200_Exception = new ExpressApiException(200, "Список прайс-листов.");
    public static final ExpressApiException Express_getFeeds_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getFeeds_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getFeeds_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getFeeds_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getFeeds_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getFeeds_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getGoodsFeedbackComments_200_Exception = new ExpressApiException(200, "Дерево комментариев к отзыву.");
    public static final ExpressApiException Express_getGoodsFeedbackComments_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getGoodsFeedbackComments_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getGoodsFeedbackComments_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getGoodsFeedbackComments_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getGoodsFeedbackComments_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getGoodsFeedbackComments_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getGoodsFeedbacks_200_Exception = new ExpressApiException(200, "Список отзывов.");
    public static final ExpressApiException Express_getGoodsFeedbacks_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getGoodsFeedbacks_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getGoodsFeedbacks_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getGoodsFeedbacks_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getGoodsFeedbacks_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getGoodsFeedbacks_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getGoodsStats_200_Exception = new ExpressApiException(200, "Отчет по товарам.");
    public static final ExpressApiException Express_getGoodsStats_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getGoodsStats_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getGoodsStats_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getGoodsStats_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getGoodsStats_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getGoodsStats_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getHiddenOffers_200_Exception = new ExpressApiException(200, "Информация о скрытых вами товарах.");
    public static final ExpressApiException Express_getHiddenOffers_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getHiddenOffers_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getHiddenOffers_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getHiddenOffers_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getHiddenOffers_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getOfferCardsContentStatus_200_Exception = new ExpressApiException(200, "Информация о карточках указанных товаров.");
    public static final ExpressApiException Express_getOfferCardsContentStatus_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getOfferCardsContentStatus_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getOfferCardsContentStatus_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getOfferCardsContentStatus_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getOfferCardsContentStatus_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getOfferCardsContentStatus_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getOfferMappingEntries_200_Exception = new ExpressApiException(200, "Информация о товарах в каталоге.");
    public static final ExpressApiException Express_getOfferMappingEntries_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getOfferMappingEntries_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getOfferMappingEntries_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getOfferMappingEntries_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getOfferMappingEntries_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getOfferMappingEntries_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getOfferMappings_200_Exception = new ExpressApiException(200, "Информация о товарах в каталоге.");
    public static final ExpressApiException Express_getOfferMappings_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getOfferMappings_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getOfferMappings_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getOfferMappings_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getOfferMappings_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getOfferMappings_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getOfferRecommendations_200_Exception = new ExpressApiException(200, "Список товаров с рекомендациями.");
    public static final ExpressApiException Express_getOfferRecommendations_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getOfferRecommendations_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getOfferRecommendations_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getOfferRecommendations_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getOfferRecommendations_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getOfferRecommendations_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getOffers_200_Exception = new ExpressApiException(200, "Предложения магазина.");
    public static final ExpressApiException Express_getOffers_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getOffers_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getOffers_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getOffers_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getOffers_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getOffers_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getOrder_200_Exception = new ExpressApiException(200, "Информация о заказе.");
    public static final ExpressApiException Express_getOrder_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getOrder_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getOrder_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getOrder_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getOrder_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getOrder_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getOrderBusinessBuyerInfo_200_Exception = new ExpressApiException(200, "Информация о покупателе.");
    public static final ExpressApiException Express_getOrderBusinessBuyerInfo_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getOrderBusinessBuyerInfo_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getOrderBusinessBuyerInfo_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getOrderBusinessBuyerInfo_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getOrderBusinessBuyerInfo_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getOrderBusinessBuyerInfo_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getOrderBusinessDocumentsInfo_200_Exception = new ExpressApiException(200, "Информация о документах.");
    public static final ExpressApiException Express_getOrderBusinessDocumentsInfo_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getOrderBusinessDocumentsInfo_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getOrderBusinessDocumentsInfo_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getOrderBusinessDocumentsInfo_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getOrderBusinessDocumentsInfo_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getOrderBusinessDocumentsInfo_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getOrderLabelsData_200_Exception = new ExpressApiException(200, "Информация для печати ярлыков.");
    public static final ExpressApiException Express_getOrderLabelsData_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getOrderLabelsData_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getOrderLabelsData_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getOrderLabelsData_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getOrderLabelsData_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getOrderLabelsData_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getOrders_200_Exception = new ExpressApiException(200, "Информация о заказах.");
    public static final ExpressApiException Express_getOrders_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getOrders_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getOrders_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getOrders_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getOrders_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getOrders_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getOrdersStats_200_Exception = new ExpressApiException(200, "Информация по заказам.");
    public static final ExpressApiException Express_getOrdersStats_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getOrdersStats_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getOrdersStats_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getOrdersStats_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getOrdersStats_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getOrdersStats_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getPrices_200_Exception = new ExpressApiException(200, "Список всех товаров с установленными ценами.");
    public static final ExpressApiException Express_getPrices_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getPrices_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getPrices_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getPrices_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getPrices_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getPrices_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getPricesByOfferIds_200_Exception = new ExpressApiException(200, "Список товаров с установленными для заданного магазина ценами.");
    public static final ExpressApiException Express_getPricesByOfferIds_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getPricesByOfferIds_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getPricesByOfferIds_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getPricesByOfferIds_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getPricesByOfferIds_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getPricesByOfferIds_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getPromoOffers_200_Exception = new ExpressApiException(200, "Список товаров, которые участвуют или могут участвовать в акции.");
    public static final ExpressApiException Express_getPromoOffers_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getPromoOffers_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getPromoOffers_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getPromoOffers_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getPromoOffers_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getPromoOffers_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getPromos_200_Exception = new ExpressApiException(200, "Список акций Маркета.");
    public static final ExpressApiException Express_getPromos_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getPromos_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getPromos_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getPromos_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getPromos_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getPromos_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getQualityRatingDetails_200_Exception = new ExpressApiException(200, "Информация о заказах, которые повлияли на индекс качества.");
    public static final ExpressApiException Express_getQualityRatingDetails_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getQualityRatingDetails_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getQualityRatingDetails_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getQualityRatingDetails_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getQualityRatingDetails_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getQualityRatingDetails_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getQualityRatings_200_Exception = new ExpressApiException(200, "Значение индекса качества магазинов и его составляющие.");
    public static final ExpressApiException Express_getQualityRatings_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getQualityRatings_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getQualityRatings_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getQualityRatings_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getQualityRatings_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getQualityRatings_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getReportInfo_200_Exception = new ExpressApiException(200, "Статус генерации отчета и ссылка, если она уже есть.  {% note tip %}  Если статус генерации отчета — `FAILED` или `NO_DATA`, проверьте корректность запроса на генерацию. Например, верно ли указан идентификатор магазина, период или номер платежного поручения.  {% endnote %}    ");
    public static final ExpressApiException Express_getReportInfo_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getReportInfo_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getReportInfo_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getReportInfo_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getReportInfo_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getReportInfo_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getReturn_200_Exception = new ExpressApiException(200, "Детали возврата.");
    public static final ExpressApiException Express_getReturn_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getReturn_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getReturn_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getReturn_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getReturn_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getReturn_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getReturnApplication_200_Exception = new ExpressApiException(200, "Заявление на возврат.");
    public static final ExpressApiException Express_getReturnApplication_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getReturnApplication_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getReturnApplication_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getReturnApplication_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getReturnApplication_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getReturnApplication_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getReturnPhoto_200_Exception = new ExpressApiException(200, "Фотография возврата.");
    public static final ExpressApiException Express_getReturnPhoto_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getReturnPhoto_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getReturnPhoto_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getReturnPhoto_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getReturnPhoto_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getReturnPhoto_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getReturns_200_Exception = new ExpressApiException(200, "Постраничные возвраты партнера.");
    public static final ExpressApiException Express_getReturns_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getReturns_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getReturns_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getReturns_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getReturns_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getReturns_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getStocks_200_Exception = new ExpressApiException(200, "Остатки товаров на складах.");
    public static final ExpressApiException Express_getStocks_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getStocks_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getStocks_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getStocks_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getStocks_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getSuggestedOfferMappingEntries_200_Exception = new ExpressApiException(200, "Информация о товарах в каталоге.");
    public static final ExpressApiException Express_getSuggestedOfferMappingEntries_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getSuggestedOfferMappingEntries_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getSuggestedOfferMappingEntries_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getSuggestedOfferMappingEntries_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getSuggestedOfferMappingEntries_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getSuggestedOfferMappingEntries_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getSuggestedOfferMappings_200_Exception = new ExpressApiException(200, "Подобранные карточки на Маркете.  По результатам проверки товара полученная через этот запрос карточка может быть заменена на другую. ");
    public static final ExpressApiException Express_getSuggestedOfferMappings_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getSuggestedOfferMappings_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getSuggestedOfferMappings_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getSuggestedOfferMappings_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getSuggestedOfferMappings_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getSuggestedOfferMappings_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getSuggestedPrices_200_Exception = new ExpressApiException(200, "Список цен для продвижения на Маркете.");
    public static final ExpressApiException Express_getSuggestedPrices_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getSuggestedPrices_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getSuggestedPrices_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getSuggestedPrices_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getSuggestedPrices_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getSuggestedPrices_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_getWarehouses_200_Exception = new ExpressApiException(200, "Список складов и групп складов.");
    public static final ExpressApiException Express_getWarehouses_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_getWarehouses_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_getWarehouses_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_getWarehouses_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_getWarehouses_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_getWarehouses_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_provideOrderItemIdentifiers_200_Exception = new ExpressApiException(200, "Ответ 200 обозначает, что коды успешно записались. Ответ содержит краткие сведения о промаркированных товарах.");
    public static final ExpressApiException Express_provideOrderItemIdentifiers_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_provideOrderItemIdentifiers_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_provideOrderItemIdentifiers_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_provideOrderItemIdentifiers_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_provideOrderItemIdentifiers_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_provideOrderItemIdentifiers_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_putBidsForBusiness_200_Exception = new ExpressApiException(200, "Все получилось: ставки установлены или обновлены. Если нужно, добавлены новые товары и запущена кампания. ");
    public static final ExpressApiException Express_putBidsForBusiness_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_putBidsForBusiness_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_putBidsForBusiness_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_putBidsForBusiness_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_putBidsForBusiness_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_putBidsForBusiness_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_putBidsForCampaign_200_Exception = new ExpressApiException(200, "Пустой ответ.");
    public static final ExpressApiException Express_putBidsForCampaign_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_putBidsForCampaign_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_putBidsForCampaign_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_putBidsForCampaign_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_putBidsForCampaign_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_putBidsForCampaign_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_refreshFeed_200_Exception = new ExpressApiException(200, "Пустой ответ.");
    public static final ExpressApiException Express_refreshFeed_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_refreshFeed_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_refreshFeed_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_refreshFeed_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_refreshFeed_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_refreshFeed_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_searchRegionChildren_200_Exception = new ExpressApiException(200, "Регионы, являющиеся дочерними к указанному в запросе.");
    public static final ExpressApiException Express_searchRegionChildren_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_searchRegionChildren_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_searchRegionChildren_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_searchRegionChildren_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_searchRegionChildren_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_searchRegionChildren_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_searchRegionsById_200_Exception = new ExpressApiException(200, "Найденный регион.");
    public static final ExpressApiException Express_searchRegionsById_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_searchRegionsById_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_searchRegionsById_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_searchRegionsById_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_searchRegionsById_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_searchRegionsByName_200_Exception = new ExpressApiException(200, "Список найденных регионов.");
    public static final ExpressApiException Express_searchRegionsByName_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_searchRegionsByName_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_searchRegionsByName_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_searchRegionsByName_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_sendFileToChat_200_Exception = new ExpressApiException(200, "Пустой ответ. Означает, что файл отправлен.");
    public static final ExpressApiException Express_sendFileToChat_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_sendFileToChat_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_sendFileToChat_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_sendFileToChat_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_sendFileToChat_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_sendFileToChat_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_sendMessageToChat_200_Exception = new ExpressApiException(200, "Пустой ответ. Означает, что сообщение отправлено.");
    public static final ExpressApiException Express_sendMessageToChat_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_sendMessageToChat_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_sendMessageToChat_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_sendMessageToChat_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_sendMessageToChat_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_sendMessageToChat_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_setFeedParams_200_Exception = new ExpressApiException(200, "Статус выполнения операции.");
    public static final ExpressApiException Express_setFeedParams_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_setFeedParams_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_setFeedParams_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_setFeedParams_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_setFeedParams_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_setFeedParams_423_Exception = new ExpressApiException(423, "К ресурсу нельзя применить указанный метод.");
    public static final ExpressApiException Express_setFeedParams_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_setOrderBoxLayout_200_Exception = new ExpressApiException(200, "В ответ придет переданная раскладка с идентификаторами коробок — они понадобятся для запроса ярлыков. ");
    public static final ExpressApiException Express_setOrderBoxLayout_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_setOrderBoxLayout_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_setOrderBoxLayout_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_setOrderBoxLayout_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_setOrderBoxLayout_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_setOrderBoxLayout_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_setOrderShipmentBoxes_200_Exception = new ExpressApiException(200, "Имеет значение только тип ответа. Если ответ `ОК`, количество грузомест записано.");
    public static final ExpressApiException Express_setOrderShipmentBoxes_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_setOrderShipmentBoxes_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_setOrderShipmentBoxes_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_setOrderShipmentBoxes_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_setOrderShipmentBoxes_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_setOrderShipmentBoxes_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_skipGoodsFeedbacksReaction_200_Exception = new ExpressApiException(200, "Пустой ответ.");
    public static final ExpressApiException Express_skipGoodsFeedbacksReaction_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_skipGoodsFeedbacksReaction_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_skipGoodsFeedbacksReaction_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_skipGoodsFeedbacksReaction_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_skipGoodsFeedbacksReaction_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_skipGoodsFeedbacksReaction_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_updateBusinessPrices_200_Exception = new ExpressApiException(200, "Маркет принял информацию о новых ценах.");
    public static final ExpressApiException Express_updateBusinessPrices_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_updateBusinessPrices_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_updateBusinessPrices_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_updateBusinessPrices_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_updateBusinessPrices_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_updateBusinessPrices_423_Exception = new ExpressApiException(423, "К ресурсу нельзя применить указанный метод.");
    public static final ExpressApiException Express_updateBusinessPrices_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_updateCampaignOffers_200_Exception = new ExpressApiException(200, "Ответ 200 обозначает, что новые параметры получены Маркетом и скоро вступят в силу.");
    public static final ExpressApiException Express_updateCampaignOffers_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_updateCampaignOffers_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_updateCampaignOffers_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_updateCampaignOffers_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_updateCampaignOffers_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_updateCampaignOffers_423_Exception = new ExpressApiException(423, "К ресурсу нельзя применить указанный метод.");
    public static final ExpressApiException Express_updateCampaignOffers_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_updateGoodsFeedbackComment_200_Exception = new ExpressApiException(200, "Информация о добавленном или измененном комментарии.");
    public static final ExpressApiException Express_updateGoodsFeedbackComment_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_updateGoodsFeedbackComment_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_updateGoodsFeedbackComment_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_updateGoodsFeedbackComment_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_updateGoodsFeedbackComment_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_updateGoodsFeedbackComment_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_updateOfferContent_200_Exception = new ExpressApiException(200, "Запрос выполнен корректно, данные обработаны.  {% note warning \"Ответ 200 сам по себе не значит, что переданные значения корректны\" %}  Обязательно посмотрите детали ответа: `status` и перечень ошибок, если он есть.  Даже если ошибка допущена в характеристиках всего одного товара, никакие изменения из запроса в каталог не попадут.  {% endnote %}  Если в `status` вернулось `ERROR`, убедитесь, что:  * все обязательные характеристики заполнены; * характеристики действительно существуют в указанных категориях; * значения соответствуют характеристикам; * ваши собственные значения имеют нужный тип данных.  Найти проблемы помогут поля `errors` и `warnings`. ");
    public static final ExpressApiException Express_updateOfferContent_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_updateOfferContent_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_updateOfferContent_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_updateOfferContent_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_updateOfferContent_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_updateOfferContent_423_Exception = new ExpressApiException(423, "К ресурсу нельзя применить указанный метод.");
    public static final ExpressApiException Express_updateOfferContent_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_updateOfferMappingEntries_200_Exception = new ExpressApiException(200, "Статус выполнения операции.");
    public static final ExpressApiException Express_updateOfferMappingEntries_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_updateOfferMappingEntries_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_updateOfferMappingEntries_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_updateOfferMappingEntries_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_updateOfferMappingEntries_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_updateOfferMappingEntries_423_Exception = new ExpressApiException(423, "К ресурсу нельзя применить указанный метод.");
    public static final ExpressApiException Express_updateOfferMappingEntries_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_updateOfferMappings_200_Exception = new ExpressApiException(200, "Все обязательные поля товаров заполнены, поэтому новые товары и внесенные изменения сохранены в каталоге. ");
    public static final ExpressApiException Express_updateOfferMappings_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_updateOfferMappings_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_updateOfferMappings_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_updateOfferMappings_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_updateOfferMappings_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_updateOfferMappings_423_Exception = new ExpressApiException(423, "К ресурсу нельзя применить указанный метод.");
    public static final ExpressApiException Express_updateOfferMappings_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_updateOrderItems_200_Exception = new ExpressApiException(200, "Маркет успешно обработал ваш запрос. Выходные данные не ожидаются.");
    public static final ExpressApiException Express_updateOrderItems_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_updateOrderItems_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_updateOrderItems_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_updateOrderItems_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_updateOrderItems_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_updateOrderItems_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_updateOrderStatus_200_Exception = new ExpressApiException(200, "В случае успешного изменения статуса заказа возвращается обновленная информация о заказе.");
    public static final ExpressApiException Express_updateOrderStatus_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_updateOrderStatus_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_updateOrderStatus_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_updateOrderStatus_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_updateOrderStatus_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_updateOrderStatus_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_updateOrderStatuses_200_Exception = new ExpressApiException(200, "Возвращается информация об обновленных статусах заказов.");
    public static final ExpressApiException Express_updateOrderStatuses_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_updateOrderStatuses_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_updateOrderStatuses_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_updateOrderStatuses_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_updateOrderStatuses_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_updateOrderStatuses_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_updatePrices_200_Exception = new ExpressApiException(200, "Маркет принял информацию о новых ценах.");
    public static final ExpressApiException Express_updatePrices_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_updatePrices_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_updatePrices_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_updatePrices_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_updatePrices_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_updatePrices_423_Exception = new ExpressApiException(423, "К ресурсу нельзя применить указанный метод.");
    public static final ExpressApiException Express_updatePrices_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_updatePromoOffers_200_Exception = new ExpressApiException(200, "Результат добавления товаров в акцию или обновления их цен.");
    public static final ExpressApiException Express_updatePromoOffers_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_updatePromoOffers_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_updatePromoOffers_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_updatePromoOffers_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_updatePromoOffers_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_updatePromoOffers_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_updateStocks_200_Exception = new ExpressApiException(200, "Пустой ответ.");
    public static final ExpressApiException Express_updateStocks_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_updateStocks_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_updateStocks_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_updateStocks_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_updateStocks_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_updateStocks_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    public static final ExpressApiException Express_verifyOrderEac_200_Exception = new ExpressApiException(200, "Проверка кода выполнена успешно.");
    public static final ExpressApiException Express_verifyOrderEac_400_Exception = new ExpressApiException(400, "Запрос содержит неправильные данные.");
    public static final ExpressApiException Express_verifyOrderEac_401_Exception = new ExpressApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ExpressApiException Express_verifyOrderEac_403_Exception = new ExpressApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ExpressApiException Express_verifyOrderEac_404_Exception = new ExpressApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ExpressApiException Express_verifyOrderEac_420_Exception = new ExpressApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ExpressApiException Express_verifyOrderEac_500_Exception = new ExpressApiException(500, "Внутренняя ошибка сервера.");
    

}