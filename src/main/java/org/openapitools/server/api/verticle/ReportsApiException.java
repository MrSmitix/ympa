package org.openapitools.server.api.verticle;

import org.openapitools.server.api.model.ApiClientDataErrorResponse;
import org.openapitools.server.api.model.ApiForbiddenErrorResponse;
import org.openapitools.server.api.model.ApiLimitErrorResponse;
import org.openapitools.server.api.model.ApiNotFoundErrorResponse;
import org.openapitools.server.api.model.ApiServerErrorResponse;
import org.openapitools.server.api.model.ApiUnauthorizedErrorResponse;
import org.openapitools.server.api.model.GenerateBoostConsolidatedRequest;
import org.openapitools.server.api.model.GenerateCompetitorsPositionReportRequest;
import org.openapitools.server.api.model.GenerateGoodsFeedbackRequest;
import org.openapitools.server.api.model.GenerateGoodsMovementReportRequest;
import org.openapitools.server.api.model.GenerateGoodsRealizationReportRequest;
import org.openapitools.server.api.model.GenerateGoodsTurnoverRequest;
import org.openapitools.server.api.model.GenerateMassOrderLabelsRequest;
import org.openapitools.server.api.model.GeneratePricesReportRequest;
import org.openapitools.server.api.model.GenerateReportResponse;
import org.openapitools.server.api.model.GenerateShelfsStatisticsRequest;
import org.openapitools.server.api.model.GenerateShipmentListDocumentReportRequest;
import org.openapitools.server.api.model.GenerateShowsSalesReportRequest;
import org.openapitools.server.api.model.GenerateStocksOnWarehousesReportRequest;
import org.openapitools.server.api.model.GenerateUnitedMarketplaceServicesReportRequest;
import org.openapitools.server.api.model.GenerateUnitedNettingReportRequest;
import org.openapitools.server.api.model.GenerateUnitedOrdersRequest;
import org.openapitools.server.api.model.GetReportInfoResponse;
import org.openapitools.server.api.MainApiException;
import org.openapitools.server.api.model.PageFormatType;
import org.openapitools.server.api.model.ReportFormatType;

public final class ReportsApiException extends MainApiException {
    public ReportsApiException(int statusCode, String statusMessage) {
        super(statusCode, statusMessage);
    }

    public static final ReportsApiException Reports_generateBoostConsolidatedReport_200_Exception = new ReportsApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ReportsApiException Reports_generateBoostConsolidatedReport_400_Exception = new ReportsApiException(400, "Запрос содержит неправильные данные.");
    public static final ReportsApiException Reports_generateBoostConsolidatedReport_401_Exception = new ReportsApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ReportsApiException Reports_generateBoostConsolidatedReport_403_Exception = new ReportsApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ReportsApiException Reports_generateBoostConsolidatedReport_420_Exception = new ReportsApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ReportsApiException Reports_generateBoostConsolidatedReport_500_Exception = new ReportsApiException(500, "Внутренняя ошибка сервера.");
    public static final ReportsApiException Reports_generateCompetitorsPositionReport_200_Exception = new ReportsApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ReportsApiException Reports_generateCompetitorsPositionReport_400_Exception = new ReportsApiException(400, "Запрос содержит неправильные данные.");
    public static final ReportsApiException Reports_generateCompetitorsPositionReport_401_Exception = new ReportsApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ReportsApiException Reports_generateCompetitorsPositionReport_403_Exception = new ReportsApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ReportsApiException Reports_generateCompetitorsPositionReport_420_Exception = new ReportsApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ReportsApiException Reports_generateCompetitorsPositionReport_500_Exception = new ReportsApiException(500, "Внутренняя ошибка сервера.");
    public static final ReportsApiException Reports_generateGoodsFeedbackReport_200_Exception = new ReportsApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ReportsApiException Reports_generateGoodsFeedbackReport_400_Exception = new ReportsApiException(400, "Запрос содержит неправильные данные.");
    public static final ReportsApiException Reports_generateGoodsFeedbackReport_401_Exception = new ReportsApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ReportsApiException Reports_generateGoodsFeedbackReport_403_Exception = new ReportsApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ReportsApiException Reports_generateGoodsFeedbackReport_420_Exception = new ReportsApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ReportsApiException Reports_generateGoodsFeedbackReport_500_Exception = new ReportsApiException(500, "Внутренняя ошибка сервера.");
    public static final ReportsApiException Reports_generateGoodsMovementReport_200_Exception = new ReportsApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ReportsApiException Reports_generateGoodsMovementReport_400_Exception = new ReportsApiException(400, "Запрос содержит неправильные данные.");
    public static final ReportsApiException Reports_generateGoodsMovementReport_401_Exception = new ReportsApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ReportsApiException Reports_generateGoodsMovementReport_403_Exception = new ReportsApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ReportsApiException Reports_generateGoodsMovementReport_420_Exception = new ReportsApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ReportsApiException Reports_generateGoodsMovementReport_500_Exception = new ReportsApiException(500, "Внутренняя ошибка сервера.");
    public static final ReportsApiException Reports_generateGoodsRealizationReport_200_Exception = new ReportsApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ReportsApiException Reports_generateGoodsRealizationReport_400_Exception = new ReportsApiException(400, "Запрос содержит неправильные данные.");
    public static final ReportsApiException Reports_generateGoodsRealizationReport_401_Exception = new ReportsApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ReportsApiException Reports_generateGoodsRealizationReport_403_Exception = new ReportsApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ReportsApiException Reports_generateGoodsRealizationReport_420_Exception = new ReportsApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ReportsApiException Reports_generateGoodsRealizationReport_500_Exception = new ReportsApiException(500, "Внутренняя ошибка сервера.");
    public static final ReportsApiException Reports_generateGoodsTurnoverReport_200_Exception = new ReportsApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ReportsApiException Reports_generateGoodsTurnoverReport_400_Exception = new ReportsApiException(400, "Запрос содержит неправильные данные.");
    public static final ReportsApiException Reports_generateGoodsTurnoverReport_401_Exception = new ReportsApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ReportsApiException Reports_generateGoodsTurnoverReport_403_Exception = new ReportsApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ReportsApiException Reports_generateGoodsTurnoverReport_420_Exception = new ReportsApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ReportsApiException Reports_generateGoodsTurnoverReport_500_Exception = new ReportsApiException(500, "Внутренняя ошибка сервера.");
    public static final ReportsApiException Reports_generateMassOrderLabelsReport_200_Exception = new ReportsApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый файл.  Если при генерации не удалось найти часть заказов, в ответе на запрос получения готового файла вернется подстатус `RESOURCE_NOT_FOUND`. ");
    public static final ReportsApiException Reports_generateMassOrderLabelsReport_400_Exception = new ReportsApiException(400, "Запрос содержит неправильные данные.");
    public static final ReportsApiException Reports_generateMassOrderLabelsReport_401_Exception = new ReportsApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ReportsApiException Reports_generateMassOrderLabelsReport_403_Exception = new ReportsApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ReportsApiException Reports_generateMassOrderLabelsReport_420_Exception = new ReportsApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ReportsApiException Reports_generateMassOrderLabelsReport_500_Exception = new ReportsApiException(500, "Внутренняя ошибка сервера.");
    public static final ReportsApiException Reports_generatePricesReport_200_Exception = new ReportsApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ReportsApiException Reports_generatePricesReport_400_Exception = new ReportsApiException(400, "Запрос содержит неправильные данные.");
    public static final ReportsApiException Reports_generatePricesReport_401_Exception = new ReportsApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ReportsApiException Reports_generatePricesReport_403_Exception = new ReportsApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ReportsApiException Reports_generatePricesReport_420_Exception = new ReportsApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ReportsApiException Reports_generatePricesReport_500_Exception = new ReportsApiException(500, "Внутренняя ошибка сервера.");
    public static final ReportsApiException Reports_generateShelfsStatisticsReport_200_Exception = new ReportsApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ReportsApiException Reports_generateShelfsStatisticsReport_400_Exception = new ReportsApiException(400, "Запрос содержит неправильные данные.");
    public static final ReportsApiException Reports_generateShelfsStatisticsReport_401_Exception = new ReportsApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ReportsApiException Reports_generateShelfsStatisticsReport_403_Exception = new ReportsApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ReportsApiException Reports_generateShelfsStatisticsReport_420_Exception = new ReportsApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ReportsApiException Reports_generateShelfsStatisticsReport_500_Exception = new ReportsApiException(500, "Внутренняя ошибка сервера.");
    public static final ReportsApiException Reports_generateShipmentListDocumentReport_200_Exception = new ReportsApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый документ.");
    public static final ReportsApiException Reports_generateShipmentListDocumentReport_400_Exception = new ReportsApiException(400, "Запрос содержит неправильные данные.");
    public static final ReportsApiException Reports_generateShipmentListDocumentReport_401_Exception = new ReportsApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ReportsApiException Reports_generateShipmentListDocumentReport_403_Exception = new ReportsApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ReportsApiException Reports_generateShipmentListDocumentReport_420_Exception = new ReportsApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ReportsApiException Reports_generateShipmentListDocumentReport_500_Exception = new ReportsApiException(500, "Внутренняя ошибка сервера.");
    public static final ReportsApiException Reports_generateShowsSalesReport_200_Exception = new ReportsApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ReportsApiException Reports_generateShowsSalesReport_400_Exception = new ReportsApiException(400, "Запрос содержит неправильные данные.");
    public static final ReportsApiException Reports_generateShowsSalesReport_401_Exception = new ReportsApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ReportsApiException Reports_generateShowsSalesReport_403_Exception = new ReportsApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ReportsApiException Reports_generateShowsSalesReport_420_Exception = new ReportsApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ReportsApiException Reports_generateShowsSalesReport_500_Exception = new ReportsApiException(500, "Внутренняя ошибка сервера.");
    public static final ReportsApiException Reports_generateStocksOnWarehousesReport_200_Exception = new ReportsApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ReportsApiException Reports_generateStocksOnWarehousesReport_400_Exception = new ReportsApiException(400, "Запрос содержит неправильные данные.");
    public static final ReportsApiException Reports_generateStocksOnWarehousesReport_401_Exception = new ReportsApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ReportsApiException Reports_generateStocksOnWarehousesReport_403_Exception = new ReportsApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ReportsApiException Reports_generateStocksOnWarehousesReport_420_Exception = new ReportsApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ReportsApiException Reports_generateStocksOnWarehousesReport_500_Exception = new ReportsApiException(500, "Внутренняя ошибка сервера.");
    public static final ReportsApiException Reports_generateUnitedMarketplaceServicesReport_200_Exception = new ReportsApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ReportsApiException Reports_generateUnitedMarketplaceServicesReport_400_Exception = new ReportsApiException(400, "Запрос содержит неправильные данные.");
    public static final ReportsApiException Reports_generateUnitedMarketplaceServicesReport_401_Exception = new ReportsApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ReportsApiException Reports_generateUnitedMarketplaceServicesReport_403_Exception = new ReportsApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ReportsApiException Reports_generateUnitedMarketplaceServicesReport_420_Exception = new ReportsApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ReportsApiException Reports_generateUnitedMarketplaceServicesReport_500_Exception = new ReportsApiException(500, "Внутренняя ошибка сервера.");
    public static final ReportsApiException Reports_generateUnitedNettingReport_200_Exception = new ReportsApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ReportsApiException Reports_generateUnitedNettingReport_400_Exception = new ReportsApiException(400, "Запрос содержит неправильные данные.");
    public static final ReportsApiException Reports_generateUnitedNettingReport_401_Exception = new ReportsApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ReportsApiException Reports_generateUnitedNettingReport_403_Exception = new ReportsApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ReportsApiException Reports_generateUnitedNettingReport_420_Exception = new ReportsApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ReportsApiException Reports_generateUnitedNettingReport_500_Exception = new ReportsApiException(500, "Внутренняя ошибка сервера.");
    public static final ReportsApiException Reports_generateUnitedOrdersReport_200_Exception = new ReportsApiException(200, "В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.");
    public static final ReportsApiException Reports_generateUnitedOrdersReport_400_Exception = new ReportsApiException(400, "Запрос содержит неправильные данные.");
    public static final ReportsApiException Reports_generateUnitedOrdersReport_401_Exception = new ReportsApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ReportsApiException Reports_generateUnitedOrdersReport_403_Exception = new ReportsApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ReportsApiException Reports_generateUnitedOrdersReport_420_Exception = new ReportsApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ReportsApiException Reports_generateUnitedOrdersReport_500_Exception = new ReportsApiException(500, "Внутренняя ошибка сервера.");
    public static final ReportsApiException Reports_getReportInfo_200_Exception = new ReportsApiException(200, "Статус генерации отчета и ссылка, если она уже есть.  {% note tip %}  Если статус генерации отчета — `FAILED` или `NO_DATA`, проверьте корректность запроса на генерацию. Например, верно ли указан идентификатор магазина, период или номер платежного поручения.  {% endnote %}    ");
    public static final ReportsApiException Reports_getReportInfo_400_Exception = new ReportsApiException(400, "Запрос содержит неправильные данные.");
    public static final ReportsApiException Reports_getReportInfo_401_Exception = new ReportsApiException(401, "В запросе не указаны данные для авторизации.");
    public static final ReportsApiException Reports_getReportInfo_403_Exception = new ReportsApiException(403, "Данные для авторизации неверны или доступ к ресурсу запрещен.");
    public static final ReportsApiException Reports_getReportInfo_404_Exception = new ReportsApiException(404, "Запрашиваемый ресурс не найден.");
    public static final ReportsApiException Reports_getReportInfo_420_Exception = new ReportsApiException(420, "Превышено ограничение на доступ к ресурсу.");
    public static final ReportsApiException Reports_getReportInfo_500_Exception = new ReportsApiException(500, "Внутренняя ошибка сервера.");
    

}