/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * OpenAPI document version: LATEST
 * 
 *
 * AUTO-GENERATED FILE, DO NOT MODIFY!
 */
package org.openapitools.handler;

import io.undertow.server.*;
import io.undertow.util.*;

import org.openapitools.model.*;

@SuppressWarnings("TooManyFunctions")
public interface PathHandlerInterface {

    /**
     * <p>Информация об установленных ставках</p>
     *
     * <p>Возвращает значения ставок для заданных товаров.  {% note warning \"\" %}  В ответе возвращаются значения только тех ставок, которые вы установили через запрос [PUT businesses/{businessId}/bids](../../reference/bids/putBidsForBusiness.md). Получить информацию по кампаниям, созданным в кабинете, не получится.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/bids/info" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetBidsInfoRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBidsInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Значения ставок для заданных товаров. В ответ попадают только товары, на которые установлены ставки.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBidsInfoForBusiness();

    /**
     * <p>Рекомендованные ставки для заданных товаров</p>
     *
     * <p>Возвращает рекомендованные ставки для заданных товаров — такие ставки обеспечивают вашим предложениям определенную долю показов, если цена не превышает рекомендованную.  Для одного товара может возвращаться одна рекомендованная ставка или несколько. Во втором случае разные ставки предназначены для достижения разной доли показов.  Если товар только добавлен в каталог, но пока не продается, рекомендованной ставки для него не будет.  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/bids/recommendations" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetBidsRecommendationsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBidsRecommendationsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Рекомендованные ставки для заданных товаров.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBidsRecommendations();

    /**
     * <p>Включение буста продаж и установка ставок</p>
     *
     * <p>Запускает буст продаж — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  {% cut \"Как в кабинете выглядит кампания, созданная через API\" %}  ![](../../_images/api-boost.png)  {% endcut %}  При первом использовании запроса Маркет: создаст единую на все магазины бизнес-аккаунта кампанию, добавит в нее товары с указанными ставками, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же созданной через API кампанией. Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. Другими кампаниями управлять через API не получится. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/businesses/{businessId}/bids" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link PutSkuBidsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Все получилось: ставки установлены или обновлены. Если нужно, добавлены новые товары и запущена кампания. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler putBidsForBusiness();

    /**
     * <p>Включение буста продаж и установка ставок для магазина</p>
     *
     * <p>Запускает буст продаж в указанном магазине — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  При первом использовании запроса Маркет: создаст кампанию, добавит в нее товары с указанными ставками для заданного магазина, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же кампанией, созданной через этот запрос или [PUT businesses/{businessId}/bids](/reference/bids/putBidsForBusiness). Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/bids" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link PutSkuBidsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler putBidsForCampaign();

    /**
     * <p>Добавление товаров в архив</p>
     *
     * <p>Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.  {% note warning \"В архив нельзя отправить товар, который хранится на складе Маркета\" %}  Вначале такой товар нужно распродать или вывезти.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/archive" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link AddOffersToArchiveRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link AddOffersToArchiveResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если некоторые товары добавить в архив не удалось, в ответе 200 будет их список.  Список успешно добавленных товаров не возвращается. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler addOffersToArchive();

    /**
     * <p>Удаление товаров из каталога</p>
     *
     * <p>Удаляет товары из каталога.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeleteOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если удалось удалить не все товары, с ответом 200 вернется список тех, что были в запросе, но остались в магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteOffers();

    /**
     * <p>Удаление товаров из архива</p>
     *
     * <p>Восстанавливает товары из архива.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/unarchive" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteOffersFromArchiveRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeleteOffersFromArchiveResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если некоторые товары восстановить из архива не удалось, в ответе 200 будет их список.  Список успешно восстановленных товаров не возвращается. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteOffersFromArchive();

    /**
     * <p>Информация о товарах в каталоге</p>
     *
     * <p>Возвращает список товаров в каталоге, их категории на Маркете и характеристики каждого товара.  Можно использовать тремя способами: * задать список интересующих SKU; * задать фильтр — в этом случае результаты возвращаются постранично; * не передавать тело запроса, чтобы получить список всех товаров в каталоге.  |**⚙️ Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOfferMappingsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferMappingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о товарах в каталоге.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOfferMappings();

    /**
     * <p>Просмотр карточек на Маркете, которые подходят вашим товарам</p>
     *
     * <p>Возвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.  Пользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточки по предоставленным вами данным.  **Как пользоваться запросом**  1. Передайте Маркету список товаров, которые нужно проверить. 2. В ответ вы получите список SKU на Маркете с расшифровкой: названием, идентификатором модели, категорией. 3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида `https://market.yandex.ru/product/<marketModelId>?sku=<marketSku>`. 4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать `marketSKU`, который ему подходит по вашему мнению.  {% note info \"𝓠 Как определить `marketSku` товара, найденного на Маркете?\" %}  𝓐 Он есть в адресе страницы товара — расположен после `sku=`.  Например, `https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016`  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/suggestions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetSuggestedOfferMappingsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetSuggestedOfferMappingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Подобранные карточки на Маркете.  По результатам проверки товара полученная через этот запрос карточка может быть заменена на другую. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getSuggestedOfferMappings();

    /**
     * <p>Добавление товаров в каталог и изменение информации о них</p>
     *
     * <p>Добавляет товары в каталог, передает их категории на Маркете и характеристики, необходимые для этих категории. Также редактирует информацию об уже имеющихся товарах.  Список категорий Маркета можно получить с помощью запроса [POST categories/tree](../../reference/categories/getCategoriesTree.md), а характеристики товаров по категориям с помощью [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).  Чтобы **добавить новый товар**, передайте его с новым идентификатором, который раньше никогда не использовался в каталоге. Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой. Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**SKU на Маркете**) в поле `marketSKU`.  Для **новых товаров** обязательно укажите параметры: `offerId`, `name`, `marketCategoryId` или `category`, `pictures`, `vendor`, `description`.  Чтобы **отредактировать информацию о товаре**, передайте новые данные, указав в `offerId` соответствующий **ваш SKU**. Поля, в которых ничего не меняется, можно не передавать.  Чтобы **удалить характеристики**, которые заданы в параметрах с типом `string`, передайте пустое значение.  Параметр `offerId` должен быть **уникальным** для всех товаров, которые вы передаете.  {% note warning \"Правила использования SKU\" %}  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOfferMappingsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateOfferMappingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Все обязательные поля товаров заполнены, поэтому новые товары и внесенные изменения сохранены в каталоге. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOfferMappings();

    /**
     * <p>Настройки кабинета</p>
     *
     * <p>Возвращает информацию о настройках кабинета, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/settings" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBusinessSettingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Настройки кабинета.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBusinessSettings();

    /**
     * <p>Информация о магазине</p>
     *
     * <p>Возвращает информацию о магазине. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaign();

    /**
     * <p>Логины, связанные с магазином</p>
     *
     * <p>Возвращает список логинов, у которых есть доступ к магазину. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/logins" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignLoginsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список логинов, связанных с магазином.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignLogins();

    /**
     * <p>Регион магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [GET campaigns/{campaignId}/settings](../../reference/campaigns/getCampaignSettings.md).  {% endnote %}  Возвращает регион, в котором находится магазин. |**⚙️ Лимит:** 5 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/region" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignRegionResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Возвращает регион, в котором находится магазин.  |**⚙️ Лимит:** 1000 запросов в час| |-| </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getCampaignRegion();

    /**
     * <p>Настройки магазина</p>
     *
     * <p>Возвращает информацию о настройках магазина, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/settings" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignSettingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Настройки магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignSettings();

    /**
     * <p>Список магазинов пользователя</p>
     *
     * <p>Возвращает список магазинов, к которым имеет доступ пользователь — владелец авторизационного токена, использованного в запросе. Для агентских пользователей список состоит из подагентских магазинов. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Магазины пользователя.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaigns();

    /**
     * <p>Магазины, доступные логину</p>
     *
     * <p>Возвращает список магазинов, к которым у пользователя с указанным логином есть доступ. |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/by_login/{login}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>login</b>"
     * <p>Логин пользователя.</p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о магазинах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignsByLogin();

    /**
     * <p>Лимит на установку кванта продажи и минимального количества товаров в заказе</p>
     *
     * <p>Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/categories/max-sale-quantum" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetCategoriesMaxSaleQuantumRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCategoriesMaxSaleQuantumResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Лимит на установку кванта и минимального количества товаров.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCategoriesMaxSaleQuantum();

    /**
     * <p>Дерево категорий</p>
     *
     * <p>Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/categories/tree" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetCategoriesRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCategoriesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Категории Маркета.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCategoriesTree();

    /**
     * <p>Создание нового чата с покупателем</p>
     *
     * <p>Создает новый чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/new" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link CreateChatRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link CreateChatResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Все получилось: чат создан. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler createChat();

    /**
     * <p>Получение истории сообщений в чате</p>
     *
     * <p>Возвращает историю сообщений в чате с покупателем.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/history" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chatId</b>"
     * <p>Идентификатор чата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetChatHistoryRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetChatHistoryResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: История сообщений успешно получена. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getChatHistory();

    /**
     * <p>Получение доступных чатов</p>
     *
     * <p>Возвращает ваши чаты с покупателями.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetChatsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetChatsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список чатов. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getChats();

    /**
     * <p>Отправка файла в чат</p>
     *
     * <p>Отправляет файл в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/file/send" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chatId</b>"
     * <p>Идентификатор чата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>file</b>"
     * <p>Содержимое файла. Максимальный размер файла — 5 Мбайт.</p>
     * <p>
     * - Parameter type: <b>BinaryFile</b><br/>
     * - Appears in: <b>{@link io.undertow.server.handlers.form.FormDataParser Form}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{mediaType=multipart/form-data}]</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ. Означает, что файл отправлен.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler sendFileToChat();

    /**
     * <p>Отправка сообщения в чат</p>
     *
     * <p>Отправляет сообщение в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/message" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chatId</b>"
     * <p>Идентификатор чата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SendMessageToChatRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ. Означает, что сообщение отправлено.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler sendMessageToChat();

    /**
     * <p>Списки характеристик товаров по категориям</p>
     *
     * <p>Возвращает список характеристик с допустимыми значениями для заданной категории.  |**⚙️ Лимит:** 50 категорий в минуту | |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/category/{categoryId}/parameters" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>categoryId</b>"
     * <p>Идентификатор категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится интересующий вас товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCategoryContentParametersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список характеристик товаров из заданной категории.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCategoryContentParameters();

    /**
     * <p>Получение информации о заполненности карточек магазина</p>
     *
     * <p>Возвращает сведения о состоянии контента для заданных товаров:  * создана ли карточка товара и в каком она статусе; * заполненность карточки в процентах; * переданные характеристики товаров; * есть ли ошибки или предупреждения, связанные с контентом; * рекомендации по заполнению карточки.  |**⚙️ Лимит:** 600 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-cards" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOfferCardsContentStatusRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferCardsContentStatusResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о карточках указанных товаров.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOfferCardsContentStatus();

    /**
     * <p>Редактирование категорийных характеристик товара</p>
     *
     * <p>Редактирует характеристики товара, которые специфичны для категории, к которой он относится.  {% note warning \"Здесь только то, что относится к конкретной категории\" %}  Если вам нужно изменить основные параметры товара (название, описание, изображения, видео, производитель, штрихкод), воспользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Чтобы удалить характеристики, которые заданы в параметрах с типом `string`, передайте пустое значение.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-cards/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOfferContentRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateOfferContentResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Запрос выполнен корректно, данные обработаны.  {% note warning \"Ответ 200 сам по себе не значит, что переданные значения корректны\" %}  Обязательно посмотрите детали ответа: `status` и перечень ошибок, если он есть.  Даже если ошибка допущена в характеристиках всего одного товара, никакие изменения из запроса в каталог не попадут.  {% endnote %}  Если в `status` вернулось `ERROR`, убедитесь, что:  * все обязательные характеристики заполнены; * характеристики действительно существуют в указанных категориях; * значения соответствуют характеристикам; * ваши собственные значения имеют нужный тип данных.  Найти проблемы помогут поля `errors` и `warnings`. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOfferContent();

    /**
     * <p>Отмена заказа покупателем</p>
     *
     * <p>Подтверждает или отклоняет запрос покупателя на отмену заказа, который передан службе доставки.  Покупатель может отменить заказ в течение его обработки или доставки. Если заказ еще обрабатывается (имеет статус PROCESSING), вам не нужно подтверждать отмену заказа — он будет отменен автоматически.  Если заказ уже передан службе доставки (принимает статус `DELIVERY` или `PICKUP`) и пользователь отменил его, вы можете предупредить службу об отмене в течение 48 часов. Если служба доставки узнала об отмене до передачи заказа покупателю, подтвердите отмену с помощью запроса [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation.md). Если заказ уже доставлен, отклоните отмену с помощью этого же запроса. Тогда у покупателя останется заказ, и деньги за него возвращаться не будут.  Чтобы узнать, какие заказы были отменены в статусе `DELIVERY` или `PICKUP`, отправьте запрос [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md). В его URL добавьте входной параметр `onlyWaitingForCancellationApprove=true`. Вы также можете узнать об отмененных заказах в кабинете или через почту — на нее придет уведомление об отмене.  Если в течение 48 часов вы не подтвердите или отклоните отмену, заказ будет отменен автоматически.  |**⚙️ Лимит:** 500 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/cancellation/accept" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link AcceptOrderCancellationRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ на отмену заказа был успешно передан.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler acceptOrderCancellation();

    /**
     * <p>Скрытие товаров и настройки скрытия</p>
     *
     * <p>Скрывает товары магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/hidden-offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link AddHiddenOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Настройки скрытия получены и скоро вступят в силу.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler addHiddenOffers();

    /**
     * <p>Добавление товаров в архив</p>
     *
     * <p>Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.  {% note warning \"В архив нельзя отправить товар, который хранится на складе Маркета\" %}  Вначале такой товар нужно распродать или вывезти.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/archive" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link AddOffersToArchiveRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link AddOffersToArchiveResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если некоторые товары добавить в архив не удалось, в ответе 200 будет их список.  Список успешно добавленных товаров не возвращается. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler addOffersToArchive();

    /**
     * <p>Калькулятор стоимости услуг</p>
     *
     * <p>Рассчитывает стоимость услуг Маркета для товаров с заданными параметрами. Порядок товаров в запросе и ответе сохраняется, чтобы определить, для какого товара рассчитана стоимость услуги.  Обратите внимание: калькулятор осуществляет примерные расчеты. Финальная стоимость для каждого заказа зависит от предоставленных услуг.  В запросе можно указать либо параметр `campaignId`, либо `sellingProgram`. Совместное использование параметров приведет к ошибке.  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/tariffs/calculate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link CalculateTariffsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link CalculateTariffsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Стоимость услуг.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler calculateTariffs();

    /**
     * <p>Удаление товара из карантина по цене в кабинете</p>
     *
     * <p>Подтверждает основную цену на товары, которые попали в карантин, и удаляет их из карантина.  Основная цена задается в каталоге и действует во всех магазинах кабинета.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/price-quarantine/confirm" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ConfirmPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что цены подтверждены.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler confirmBusinessPrices();

    /**
     * <p>Удаление товара из карантина по цене в магазине</p>
     *
     * <p>Подтверждает в заданном магазине цену на товары, которые попали в карантин, и удаляет их из карантина.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/price-quarantine/confirm" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ConfirmPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что цены подтверждены.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler confirmCampaignPrices();

    /**
     * <p>Создание нового чата с покупателем</p>
     *
     * <p>Создает новый чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/new" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link CreateChatRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link CreateChatResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Все получилось: чат создан. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler createChat();

    /**
     * <p>Создание точки продаж</p>
     *
     * <p>Создает точку продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/outlets" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ChangeOutletRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link CreateOutletResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о созданной точке продаж.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler createOutlet();

    /**
     * <p>Удаление товаров из ассортимента магазина</p>
     *
     * <p>Удаляет заданные товары из заданного магазина.  {% note warning \"Запрос удаляет товары именно из конкретного магазина\" %}  На продажи в других магазинах и на наличие товара в общем каталоге он не влияет.  {% endnote %}  Товар не получится удалить, если он хранится на складах Маркета.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteCampaignOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeleteCampaignOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если удалось удалить не все товары, с ответом 200 вернется список тех, что были в запросе, но остались в магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteCampaignOffers();

    /**
     * <p>Удаление комментария к отзыву</p>
     *
     * <p>Удаляет комментарий магазина.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/comments/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteGoodsFeedbackCommentRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteGoodsFeedbackComment();

    /**
     * <p>Возобновление показа товаров</p>
     *
     * <p>Возобновляет показ скрытых вами товаров магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/hidden-offers/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteHiddenOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Показ товаров возобновлен.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteHiddenOffers();

    /**
     * <p>Удаление товаров из каталога</p>
     *
     * <p>Удаляет товары из каталога.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeleteOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если удалось удалить не все товары, с ответом 200 вернется список тех, что были в запросе, но остались в магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteOffers();

    /**
     * <p>Удаление товаров из архива</p>
     *
     * <p>Восстанавливает товары из архива.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/unarchive" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteOffersFromArchiveRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeleteOffersFromArchiveResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если некоторые товары восстановить из архива не удалось, в ответе 200 будет их список.  Список успешно восстановленных товаров не возвращается. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteOffersFromArchive();

    /**
     * <p>Удаление точки продаж</p>
     *
     * <p>Удаляет точку продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#DELETE DELETE} "/campaigns/{campaignId}/outlets/{outletId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>outletId</b>"
     * <p>Идентификатор точки продаж.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteOutlet();

    /**
     * <p>Удаление лицензий для точек продаж</p>
     *
     * <p>Удаляет информацию о лицензиях для точек продаж.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#DELETE DELETE} "/campaigns/{campaignId}/outlets/licenses" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>ids</b>"
     * <p>Список идентификаторов лицензий.</p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link Set&lt;Long&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteOutletLicenses();

    /**
     * <p>Удаление товаров из акции</p>
     *
     * <p>Убирает товары из акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos/offers/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeletePromoOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeletePromoOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Результат удаления товаров из акции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deletePromoOffers();

    /**
     * <p>Отчет по бусту продаж</p>
     *
     * <p>Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/boost-consolidated/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateBoostConsolidatedRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateBoostConsolidatedReport();

    /**
     * <p>Отчет «Конкурентная позиция»</p>
     *
     * <p>Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \"Значение -1 в отчете\" %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/competitors-position/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateCompetitorsPositionReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateCompetitorsPositionReport();

    /**
     * <p>Отчет по отзывам о товарах</p>
     *
     * <p>Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/goods-feedback/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateGoodsFeedbackRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateGoodsFeedbackReport();

    /**
     * <p>Готовые ярлыки‑наклейки на все коробки в нескольких заказах</p>
     *
     * <p>Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/documents/labels/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7.</p>
     * <p>
     * - Parameter type: <b>{@link PageFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateMassOrderLabelsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый файл.  Если при генерации не удалось найти часть заказов, в ответе на запрос получения готового файла вернется подстатус `RESOURCE_NOT_FOUND`. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateMassOrderLabelsReport();

    /**
     * <p>Готовый ярлык‑наклейка для коробки в заказе</p>
     *
     * <p>Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор грузоместа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>boxId</b>"
     * <p>Идентификатор коробки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>format</b>"
     * <p>Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.</p>
     * <p>
     * - Parameter type: <b>{@link PageFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/pdf}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: PDF‑файл с ярлыками для коробки. Файл содержит одну страницу с ярлыком.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateOrderLabel();

    /**
     * <p>Готовые ярлыки‑наклейки на все коробки в одном заказе</p>
     *
     * <p>Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/delivery/labels" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>format</b>"
     * <p>Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.</p>
     * <p>
     * - Parameter type: <b>{@link PageFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/pdf}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: PDF‑файл с ярлыками на все коробки.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateOrderLabels();

    /**
     * <p>Отчет «Цены на рынке»</p>
     *
     * <p>Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/prices/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GeneratePricesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generatePricesReport();

    /**
     * <p>Отчет по полкам</p>
     *
     * <p>Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/shelf-statistics/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateShelfsStatisticsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateShelfsStatisticsReport();

    /**
     * <p>Отчет «Аналитика продаж»</p>
     *
     * <p>Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/shows-sales/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateShowsSalesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateShowsSalesReport();

    /**
     * <p>Отчет по остаткам на складах</p>
     *
     * <p>Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/stocks-on-warehouses/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateStocksOnWarehousesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateStocksOnWarehousesReport();

    /**
     * <p>Отчет по стоимости услуг</p>
     *
     * <p>Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |-----------------------------|---------------------------------| |По дате начисления услуги    |`dateFrom` и `dateTo`            | |По дате формирования акта    |`year` и `month`                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/united-marketplace-services/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateUnitedMarketplaceServicesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateUnitedMarketplaceServicesReport();

    /**
     * <p>Отчет по платежам</p>
     *
     * <p>Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |-------------------------|---------------------------------------| |О платежах за период     |`dateFrom` и `dateTo`                  | |О платежном поручении    |`bankOrderId` и `bankOrderDateTime`    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/united-netting/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateUnitedNettingReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateUnitedNettingReport();

    /**
     * <p>Отчет по заказам</p>
     *
     * <p>Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \"\" %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/united-orders/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateUnitedOrdersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateUnitedOrdersReport();

    /**
     * <p>Все предложения магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет максимально быстро получить информацию обо всех предложениях магазина, размещенных на Маркете. Возвращает результат в виде сегментов нефиксированного размера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Яндекс Маркета, с которой соотнесено предложение, а также аукционные ставки на него.  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — среднее количество таваров в каталоге за неделю * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offers/all" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chunk</b>"
     * <p>Номер сегмента с результатами.  Значение по умолчанию: `0`.  {% note info %}  Номера сегментов запрашиваются последовательно, пока не будет получен сегмент с пустым ответом. Пустой ответ означает, что все предложения магазина получены.  {% endnote %}  {% note alert %}  Нумерация начинается с 0. Чтобы запросить первую страницу, необходимо указать `chunk=0` и т. д.  {% endnote %} </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetAllOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Предложения магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getAllOffers();

    /**
     * <p>Информация об установленных ставках</p>
     *
     * <p>Возвращает значения ставок для заданных товаров.  {% note warning \"\" %}  В ответе возвращаются значения только тех ставок, которые вы установили через запрос [PUT businesses/{businessId}/bids](../../reference/bids/putBidsForBusiness.md). Получить информацию по кампаниям, созданным в кабинете, не получится.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/bids/info" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetBidsInfoRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBidsInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Значения ставок для заданных товаров. В ответ попадают только товары, на которые установлены ставки.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBidsInfoForBusiness();

    /**
     * <p>Рекомендованные ставки для заданных товаров</p>
     *
     * <p>Возвращает рекомендованные ставки для заданных товаров — такие ставки обеспечивают вашим предложениям определенную долю показов, если цена не превышает рекомендованную.  Для одного товара может возвращаться одна рекомендованная ставка или несколько. Во втором случае разные ставки предназначены для достижения разной доли показов.  Если товар только добавлен в каталог, но пока не продается, рекомендованной ставки для него не будет.  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/bids/recommendations" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetBidsRecommendationsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBidsRecommendationsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Рекомендованные ставки для заданных товаров.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBidsRecommendations();

    /**
     * <p>Список товаров, находящихся в карантине по цене в кабинете</p>
     *
     * <p>Возвращает список товаров, которые находятся в карантине по **основной цене**. Основная цена задается в каталоге и действует во всех магазинах кабинета.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/price-quarantine" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetQuarantineOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQuarantineOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров в карантине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBusinessQuarantineOffers();

    /**
     * <p>Настройки кабинета</p>
     *
     * <p>Возвращает информацию о настройках кабинета, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/settings" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBusinessSettingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Настройки кабинета.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBusinessSettings();

    /**
     * <p>Информация о магазине</p>
     *
     * <p>Возвращает информацию о магазине. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaign();

    /**
     * <p>Логины, связанные с магазином</p>
     *
     * <p>Возвращает список логинов, у которых есть доступ к магазину. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/logins" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignLoginsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список логинов, связанных с магазином.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignLogins();

    /**
     * <p>Информация о товарах, которые размещены в заданном магазине</p>
     *
     * <p>Возвращает список товаров, которые размещены в заданном магазине. Для каждого товара указываются параметры размещения.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetCampaignOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров, размещенных в заданном магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignOffers();

    /**
     * <p>Список товаров, находящихся в карантине по цене в магазине</p>
     *
     * <p>Возвращает список товаров, которые находятся в карантине по цене, установленной в заданном магазине.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/price-quarantine" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetQuarantineOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQuarantineOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров в карантине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignQuarantineOffers();

    /**
     * <p>Регион магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [GET campaigns/{campaignId}/settings](../../reference/campaigns/getCampaignSettings.md).  {% endnote %}  Возвращает регион, в котором находится магазин. |**⚙️ Лимит:** 5 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/region" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignRegionResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Возвращает регион, в котором находится магазин.  |**⚙️ Лимит:** 1000 запросов в час| |-| </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getCampaignRegion();

    /**
     * <p>Настройки магазина</p>
     *
     * <p>Возвращает информацию о настройках магазина, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/settings" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignSettingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Настройки магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignSettings();

    /**
     * <p>Список магазинов пользователя</p>
     *
     * <p>Возвращает список магазинов, к которым имеет доступ пользователь — владелец авторизационного токена, использованного в запросе. Для агентских пользователей список состоит из подагентских магазинов. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Магазины пользователя.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaigns();

    /**
     * <p>Магазины, доступные логину</p>
     *
     * <p>Возвращает список магазинов, к которым у пользователя с указанным логином есть доступ. |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/by_login/{login}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>login</b>"
     * <p>Логин пользователя.</p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о магазинах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignsByLogin();

    /**
     * <p>Лимит на установку кванта продажи и минимального количества товаров в заказе</p>
     *
     * <p>Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/categories/max-sale-quantum" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetCategoriesMaxSaleQuantumRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCategoriesMaxSaleQuantumResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Лимит на установку кванта и минимального количества товаров.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCategoriesMaxSaleQuantum();

    /**
     * <p>Дерево категорий</p>
     *
     * <p>Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/categories/tree" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetCategoriesRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCategoriesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Категории Маркета.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCategoriesTree();

    /**
     * <p>Списки характеристик товаров по категориям</p>
     *
     * <p>Возвращает список характеристик с допустимыми значениями для заданной категории.  |**⚙️ Лимит:** 50 категорий в минуту | |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/category/{categoryId}/parameters" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>categoryId</b>"
     * <p>Идентификатор категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится интересующий вас товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCategoryContentParametersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список характеристик товаров из заданной категории.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCategoryContentParameters();

    /**
     * <p>Получение истории сообщений в чате</p>
     *
     * <p>Возвращает историю сообщений в чате с покупателем.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/history" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chatId</b>"
     * <p>Идентификатор чата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetChatHistoryRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetChatHistoryResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: История сообщений успешно получена. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getChatHistory();

    /**
     * <p>Получение доступных чатов</p>
     *
     * <p>Возвращает ваши чаты с покупателями.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetChatsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetChatsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список чатов. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getChats();

    /**
     * <p>Справочник служб доставки</p>
     *
     * <p>Возвращает справочник служб доставки: идентификаторы и наименования. |**⚙️ Лимит:** 5 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/delivery/services" (<i>privileged: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetDeliveryServicesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о службах доставки.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getDeliveryServices();

    /**
     * <p>Информация о прайс-листе</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает информацию о прайс-листе, размещенном на Маркете для заданного магазина. Также ресурс возвращает результаты автоматических проверок прайс-листа. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feeds/{feedId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о прайс-листе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeed();

    /**
     * <p>Отчет по индексации прайс-листа</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает отчет по индексации прайс-листа для заданного магазина. Отчет позволяет получить статистику загрузки прайс-листа и результаты его автоматических проверок.  Данные в отчете возвращаются в порядке убывания значений параметра `generationId`.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feeds/{feedId}/index-logs" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>published_time_from</b>"
     * <p>Начальная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Значение по умолчанию: последние восемь дней со времени отправки запроса. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>published_time_to</b>"
     * <p>Конечная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-31T00:42:42+03:00`.  Значение по умолчанию: дата и время отправки запроса.  {% note info %}  Если во время переключения между страницами выходных данных на Яндекс Маркете появятся новые результаты индексации прайс-листа, вы не получите часть данных. Чтобы этого не произошло, зафиксируйте выходные данные с помощью входного параметра `published_time_to`. Значение параметра не должно быть датой из будущего.  {% endnote %} </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>status</b>"
     * <p>Статус индексации и проверки прайс-листа на соответствие техническим требованиям.  Возможные значения: * `ERROR` — произошли ошибки. * `OK` — обработан без ошибок. * `WARNING` — наблюдались некритичные проблемы. </p>
     * <p>
     * - Parameter type: <b>{@link FeedIndexLogsStatusType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedIndexLogsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Отчет по индексации прайс-листа.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeedIndexLogs();

    /**
     * <p>Новые и обновленные отзывы о магазине</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает новые и обновленные отзывы о магазине на Маркете.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов. Выходные данные содержат идентификатор следующей страницы.  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feedback/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>from_date</b>"
     * <p>Начальная дата обновления отзывов.  Если параметр указан, возвращаются отзывы, которые были написаны или обновлены с этой даты.  Формат даты: `ГГГГ-ММ-ДД`. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedbackListResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список отзывов для магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeedbackAndCommentUpdates();

    /**
     * <p>Список прайс-листов магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает список прайс-листов, размещенных на Маркете для магазина. Также ресурс возвращает результаты автоматических проверок прайс-листов. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feeds" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список прайс-листов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeeds();

    /**
     * <p>Получение комментариев к отзыву</p>
     *
     * <p>Возвращает комментарии к отзыву.  Результаты возвращаются постранично, одна страница содержит не более 20 комментариев.  Комментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/comments" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetGoodsFeedbackCommentsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetGoodsFeedbackCommentsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Дерево комментариев к отзыву.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getGoodsFeedbackComments();

    /**
     * <p>Получение отзывов о товарах продавца</p>
     *
     * <p>Возвращает все отзывы о товарах продавца по указанным фильтрам.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов.  Отзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetGoodsFeedbackRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetGoodsFeedbackResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список отзывов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getGoodsFeedbacks();

    /**
     * <p>Отчет по товарам</p>
     *
     * <p>Возвращает подробный отчет по товарам, которые вы разместили на Маркете. С помощью отчета вы можете узнать, например, об остатках на складе, об условиях хранения ваших товаров и т. д.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/stats/skus" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetGoodsStatsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetGoodsStatsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Отчет по товарам.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getGoodsStats();

    /**
     * <p>Информация о скрытых вами товарах</p>
     *
     * <p>Возвращает список скрытых вами товаров для заданного магазина.  В списке будут товары, скрытые любым способом — по API, с помощью YML-фида, в кабинете и так далее.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/hidden-offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>offer_id</b>"
     * <p>Идентификатор скрытого предложения. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>offset</b>"
     * <p>Позиция в списке, начиная с которой возвращаются результаты ответа.  Используется вместе с параметром `limit`.  Если задан `offset`, параметры `page_number` и `page_size` игнорируются.  `offset` игнорируется, если задан `page_token`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetHiddenOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о скрытых вами товарах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getHiddenOffers();

    /**
     * <p>Информация об одной модели</p>
     *
     * <p>Возвращает информацию о модели товара.  Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/models/{modelId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>modelId</b>"
     * <p>Идентификатор модели товара.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>currency</b>"
     * <p>Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). </p>
     * <p>
     * - Parameter type: <b>{@link CurrencyType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetModelsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о модели.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getModel();

    /**
     * <p>Список предложений для одной модели</p>
     *
     * <p>Возвращает информацию о первых десяти предложениях, расположенных на карточке модели.  Предложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.  Для групповых моделей метод не поддерживается. Идентификатор групповой модели игнорируется.  Для методов `GET models/{modelId}/offers` и `POST models/offers` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/models/{modelId}/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>modelId</b>"
     * <p>Идентификатор модели товара.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>currency</b>"
     * <p>Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). </p>
     * <p>
     * - Parameter type: <b>{@link CurrencyType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderByPrice</b>"
     * <p>Направление сортировки по цене.  Возможные значения: * `ASC` — сортировка по возрастанию. * `DESC` — сортировка по убыванию.  Значение по умолчанию: предложения выводятся в произвольном порядке. </p>
     * <p>
     * - Parameter type: <b>{@link SortOrderType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>count</b>"
     * <p>Количество предложений на странице ответа.</p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>10</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetModelsOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список предложений для модели.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getModelOffers();

    /**
     * <p>Информация о нескольких моделях</p>
     *
     * <p>Возвращает информацию о моделях товаров.  В одном запросе можно получить информацию не более чем о 100 моделях.  Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/models" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>currency</b>"
     * <p>Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). </p>
     * <p>
     * - Parameter type: <b>{@link CurrencyType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetModelsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetModelsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о моделях.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getModels();

    /**
     * <p>Список предложений для нескольких моделей</p>
     *
     * <p>Возвращает информацию о первых десяти предложениях, расположенных на карточках моделей, идентификаторы которых указаны в запросе.  Предложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.  Для групповых моделей выдача предложений не поддерживается. Идентификаторы групповых моделей игнорируются.  В одном запросе можно получить информацию о предложениях не более чем для 100 моделей.  Для методов `GET models/{modelId}/offers` и `POST models/offers` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/models/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>currency</b>"
     * <p>Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). </p>
     * <p>
     * - Parameter type: <b>{@link CurrencyType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderByPrice</b>"
     * <p>Направление сортировки по цене.  Возможные значения: * `ASC` — сортировка по возрастанию. * `DESC` — сортировка по убыванию.  Значение по умолчанию: предложения выводятся в произвольном порядке. </p>
     * <p>
     * - Parameter type: <b>{@link SortOrderType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetModelsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetModelsOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список предложений для моделей.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getModelsOffers();

    /**
     * <p>Получение информации о заполненности карточек магазина</p>
     *
     * <p>Возвращает сведения о состоянии контента для заданных товаров:  * создана ли карточка товара и в каком она статусе; * заполненность карточки в процентах; * переданные характеристики товаров; * есть ли ошибки или предупреждения, связанные с контентом; * рекомендации по заполнению карточки.  |**⚙️ Лимит:** 600 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-cards" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOfferCardsContentStatusRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferCardsContentStatusResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о карточках указанных товаров.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOfferCardsContentStatus();

    /**
     * <p>Список товаров в каталоге</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  Для каждого товара, который вы размещаете на Маркете, возвращается информация о карточках Маркета, к которым привязан этот товар:  * Идентификатор текущей карточки (marketSku), карточки, которая проходит модерацию и последней отклоненной карточки. * Описание товара, которое указано на карточке Маркета. Например, размер упаковки и вес товара.  Результаты возвращаются постранично. Выходные данные содержат идентификатор следующей страницы.  {% note info %}  Количество товаров в каталоге магазина считается по данным за последние семь дней (не включая сегодня).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров в каталоге магазина * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offer-mapping-entries" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>offer_id</b>"
     * <p>Идентификатор товара в каталоге.</p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shop_sku</b>"
     * <p>Ваш SKU товара.  Параметр может быть указан несколько раз, например:  ``` ...shop_sku=123&shop_sku=129&shop_sku=141... ```  В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>mapping_kind</b>"
     * <p>Тип маппинга.</p>
     * <p>
     * - Parameter type: <b>{@link OfferMappingKindType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>status</b>"
     * <p>Фильтрация по статусу публикации товара:  * `READY` — товар прошел модерацию. * `IN_WORK` — товар проходит модерацию. * `NEED_CONTENT` — для товара без SKU на Маркете marketSku нужно найти карточку самостоятельно или создать ее. * `NEED_INFO` — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. * `REJECTED` — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары. * `SUSPENDED` — товар не прошел модерацию, так как Маркет пока не размещает подобные товары. * `OTHER` — товар не прошел модерацию по другой причине.  Можно указать несколько статусов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...status=READY,IN_WORK... ...status=READY&status=IN_WORK... ```  В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;OfferProcessingStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>availability</b>"
     * <p>Фильтрация по планам поставок товара:  * `ACTIVE` — поставки будут. * `INACTIVE` — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять. * `DELISTED` — архив: товар закончился на складе, и его поставок больше не будет.  Можно указать несколько значений в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...availability=INACTIVE,DELISTED... ...availability=INACTIVE&availability=DELISTED... ```  В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;OfferAvailabilityStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>category_id</b>"
     * <p>Фильтрация по идентификатору категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).  Можно указать несколько идентификаторов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...category_id=14727164,14382343... ...category_id=14727164&category_id=14382343... ```  В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;Integer&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>vendor</b>"
     * <p>Фильтрация по бренду товара.  Можно указать несколько брендов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...vendor=Aqua%20Minerale,Borjomi... ...vendor=Aqua%20Minerale&vendor=Borjomi... ```  Чтобы товар попал в результаты фильтрации, его бренд должен точно совпадать с одним из указанных в запросе. Например, если указан бренд Schwarzkopf, то в результатах не будет товаров Schwarzkopf Professional.  Если в названии бренда есть символы, которые не входят в таблицу ASCII (в том числе кириллические символы), используйте для них URL-кодирование. Например, пробел — %20, апостроф «'» — %27 и т. д. Подробнее см. в разделе [Кодирование URL русскоязычной Википедии](https://ru.wikipedia.org/wiki/URL#Кодирование_URL).  В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferMappingEntriesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о товарах в каталоге.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getOfferMappingEntries();

    /**
     * <p>Информация о товарах в каталоге</p>
     *
     * <p>Возвращает список товаров в каталоге, их категории на Маркете и характеристики каждого товара.  Можно использовать тремя способами: * задать список интересующих SKU; * задать фильтр — в этом случае результаты возвращаются постранично; * не передавать тело запроса, чтобы получить список всех товаров в каталоге.  |**⚙️ Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOfferMappingsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferMappingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о товарах в каталоге.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOfferMappings();

    /**
     * <p>Рекомендации Маркета, касающиеся цен</p>
     *
     * <p>Метод возвращает рекомендации нескольких типов.  **1. Порог для привлекательной цены. Он нужен для участия в софинансировании скидок.**  Показывает, какие **цены для участия** нужно установить, чтобы получить максимальные шансы на срабатывание скидок, софинансируемых Маркетом. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)  **2. Оценка привлекательности цен на витрине.**  Привлекательность влияет на вероятность срабатывания скидок за счет Маркета. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#validation)  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offers/recommendations" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOfferRecommendationsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferRecommendationsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров с рекомендациями.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOfferRecommendations();

    /**
     * <p>Предложения магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет фильтровать информацию о предложениях магазина, размещенных на Маркете, и искать предложения по заданному поисковому запросу.  Поиск предложений, размещенных на Маркете, работает по поисковому запросу аналогично поиску Маркета. Результаты возвращаются с использованием пейджера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Маркета, с которой соотнесено предложение, и аукционные ставки на него.  {% note info %}  Из-за особенностей поиска Маркета иногда на последних страницах пейджера фактическое количество результатов оказывается меньше количества, указанного ранее на предыдущих страницах.  В связи с этим настоятельно рекомендуется анализировать содержимое параметра pager для каждой полученной страницы.  {% endnote %}  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лисит товаров — среднее количество таваров в каталоге за неделю * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>query</b>"
     * <p>Поисковый запрос.  Поддерживается язык запросов.  Значение по умолчанию: все предложения магазина, размещенные на Маркете. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shopCategoryId</b>"
     * <p>Идентификатор категории предложения, указанный магазином в прайс-листе.  Параметр выводится только для предложений, у которых указана категория в прайс-листе.  Параметр доступен начиная с версии 2.0 партнерского API. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>currency</b>"
     * <p>Валюта, в которой указана цена предложения.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна. </p>
     * <p>
     * - Parameter type: <b>{@link CurrencyType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>matched</b>"
     * <p>Фильтр по признаку соотнесения предложения и карточки модели.  Возможные значения:  * `0 / FALSE / NO` — поиск выполняется среди предложений, не соотнесенных ни с какой карточкой модели.  * `1 / TRUE / YES` — поиск выполняется среди предложений, соотнесенных с карточками моделей). </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Предложения магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getOffers();

    /**
     * <p>Информация об одном заказе</p>
     *
     * <p>Возвращает информацию о заказе.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrderResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о заказе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrder();

    /**
     * <p>Информация о покупателе — юридическом лице</p>
     *
     * <p>Возвращает информацию о покупателе по идентификатору заказа.  {% note info \"\" %}  Чтобы получить информацию о покупателе, который является физическим лицом, воспользуйтесь запросом [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  {% endnote %}  Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY`, `PICKUP` или `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/{orderId}/business-buyer" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBusinessBuyerInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о покупателе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrderBusinessBuyerInfo();

    /**
     * <p>Информация о документах</p>
     *
     * <p>Возвращает информацию о документах по идентификатору заказа.  Получить данные можно после того, как заказ перейдет в статус `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/{orderId}/documents" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBusinessDocumentsInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о документах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrderBusinessDocumentsInfo();

    /**
     * <p>Информация о покупателе — физическом лице</p>
     *
     * <p>Возвращает информацию о покупателе по идентификатору заказа.  {% note info \"\" %}  Чтобы получить информацию о покупателе, который является юридическим лицом, воспользуйтесь запросом [POST campaigns/{campaignId}/orders/{orderId}/business-buyer](../../reference/order-business-information/getOrderBusinessBuyerInfo.md).  {% endnote %}  Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY` или `PICKUP`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/buyer" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrderBuyerInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о покупателе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrderBuyerInfo();

    /**
     * <p>Данные для самостоятельного изготовления ярлыков</p>
     *
     * <p>Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/delivery/labels/data" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrderLabelsDataResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация для печати ярлыков.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrderLabelsData();

    /**
     * <p>Информация о нескольких заказах</p>
     *
     * <p>Возвращает информацию о заказах. Запрос можно использовать, чтобы узнать, нет ли новых заказов.  Доступна фильтрация по нескольким характеристикам заказов:  * дате оформления;  * статусу;  * идентификаторам заказов;  * этапу обработки или причине отмены;  * типу (настоящий или тестовый);  * дате отгрузки в службу доставки;  * дате и времени обновления заказа.  Информация о заказах, доставленных или отмененных больше 30 дней назад, не возвращается. Ее можно получить с помощью запроса информации об отдельном заказе [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) (если у вас есть идентификатор заказа) или запроса отчета по заказам [POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md).  Максимальный диапазон дат за один запрос к ресурсу — 30 дней. Максимальное количество заказов в выходных данных запроса — 50.  Результаты возвращаются постранично. Для навигации по страницам используйте параметры `page_token` и `limit`.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderIds</b>"
     * <p>Фильтрация заказов по идентификаторам. <br><br> ⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;Long&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>status</b>"
     * <p>Статус заказа:  * `CANCELLED` — заказ отменен.  * `DELIVERED` — заказ получен покупателем.  * `DELIVERY` — заказ передан в службу доставки.  * `PICKUP` — заказ доставлен в пункт самовывоза.  * `PROCESSING` — заказ находится в обработке.  * `UNPAID` — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).  Также могут возвращаться другие значения. Обрабатывать их не требуется. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link Set&lt;OrderStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>substatus</b>"
     * <p>Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).  Возможные значения для заказа в статусе `PROCESSING`:  * `STARTED` — заказ подтвержден, его можно начать обрабатывать. * `READY_TO_SHIP` — заказ собран и готов к отправке. * `SHIPPED` — заказ передан службе доставки.  Возможные значения для заказа в статусе `CANCELLED`:  * `DELIVERY_SERVICE_UNDELIVERED` — служба доставки не смогла доставить заказ.  * `PROCESSING_EXPIRED` — значение более не используется.  * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.  * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.  * `RESERVATION_FAILED` — Маркет не может продолжить дальнейшую обработку заказа.  * `SHOP_FAILED` — магазин не может выполнить заказ.  * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.  * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.  * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.  * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.  * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.  * `USER_UNREACHABLE` — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:    * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;   * перерыв между первым и третьим звонком не менее 90 минут;   * соединение не короче 5 секунд.    Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400. * `USER_WANTS_TO_CHANGE_DELIVERY_DATE` — покупатель хочет получить заказ в другой день. * `CANCELLED_COURIER_NOT_FOUND` — не удалось найти курьера.  Также могут возвращаться другие значения. Обрабатывать их не требуется. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link Set&lt;OrderSubstatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>fromDate</b>"
     * <p>Начальная дата для фильтрации заказов по дате оформления.  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной и конечной датой (параметр `toDate`) должно быть не больше 30 дней.  Значение по умолчанию: 30 дней назад от текущей даты. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>toDate</b>"
     * <p>Конечная дата для фильтрации заказов по дате оформления.  Показываются заказы, созданные до 00:00 указанного дня.  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной (параметр `fromDate`) и конечной датой должно быть не больше 30 дней.  Значение по умолчанию: текущая дата. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>supplierShipmentDateFrom</b>"
     * <p>Начальная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной и конечной датой (параметр `supplierShipmentDateTo`) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>supplierShipmentDateTo</b>"
     * <p>Конечная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной (параметр `supplierShipmentDateFrom`) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>updatedAtFrom</b>"
     * <p>Начальная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Между начальной и конечной датой (параметр `updatedAtTo`) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>updatedAtTo</b>"
     * <p>Конечная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Между начальной (параметр `updatedAtFrom`) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>dispatchType</b>"
     * <p>Способ отгрузки</p>
     * <p>
     * - Parameter type: <b>{@link OrderDeliveryDispatchType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>fake</b>"
     * <p>Фильтрация заказов по типам:  * `false` — настоящий заказ покупателя.  * `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>hasCis</b>"
     * <p>Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации [в системе «Честный ЗНАК»](https://честныйзнак.рф/):  * `true` — да.  * `false` — нет.  Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям. </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>onlyWaitingForCancellationApprove</b>"
     * <p>**Только для модели DBS**  Фильтрация заказов по наличию запросов покупателей на отмену.  При значение `true` возвращаются только заказы, которые находятся в статусе `DELIVERY` или `PICKUP` и которые пользователи решили отменить.  Чтобы подтвердить или отклонить отмену, отправьте запрос [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation). </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>onlyEstimatedDelivery</b>"
     * <p>Фильтрация заказов с долгой доставкой (31-60 дней) по подтвержденной дате доставки:  * `true` — возвращаются только заказы с неподтвержденной датой доставки. * `false` — фильтрация не применяется. </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>buyerType</b>"
     * <p>Фильтрация заказов по типу покупателя. </p>
     * <p>
     * - Parameter type: <b>{@link OrderBuyerType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrdersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о заказах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrders();

    /**
     * <p>Детальная информация по заказам</p>
     *
     * <p>Возвращает информацию по заказам на Маркете, в которых есть ваши товары. С помощью нее вы можете собрать статистику по вашим заказам и узнать, например, какие из товаров чаще всего возвращаются покупателями, какие, наоборот, пользуются большим спросом, какая комиссия начисляется за заказы и т. п.  {% note info \"\" %}  Раньше генерация детальной информации по заказам называлась **Отчет по заказам**. Сейчас это новый отчет. [Подробнее об отчете](../../reference/reports/generateUnitedOrdersReport.md)  {% endnote %}  В одном запросе можно получить информацию не более чем по 200 заказам.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/stats/orders" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOrdersStatsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrdersStatsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация по заказам.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrdersStats();

    /**
     * <p>Информация об одной точке продаж</p>
     *
     * <p>Возвращает информацию о точках продаж магазина.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/outlets/{outletId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>outletId</b>"
     * <p>Идентификатор точки продаж.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOutletResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о точке продаж.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOutlet();

    /**
     * <p>Информация о лицензиях для точек продаж</p>
     *
     * <p>Возвращает информацию о лицензиях для точек продаж.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/outlets/licenses" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>outletIds</b>"
     * <p>Список идентификаторов точек продаж, для которых нужно получить информацию о лицензиях. Идентификаторы указываются через запятую.  В запросе должен быть либо параметр `outletIds`, либо параметр `ids`. Запрос с обоими параметрами или без них приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link Set&lt;Long&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>ids</b>"
     * <p>Список идентификаторов лицензий.</p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link Set&lt;Long&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOutletLicensesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Найденные лицензии собственных точек продаж.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOutletLicenses();

    /**
     * <p>Информация о нескольких точках продаж</p>
     *
     * <p>Возвращает список точек продаж магазина.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/outlets" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>region_id</b>"
     * <p>Идентификатор региона. Если задать идентификатор родительского региона любого уровня, в выходных данных будут отображены точки продаж всех дочерних регионов. Идентификатор региона можно получить c помощью метода [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shop_outlet_code</b>"
     * <p>Идентификатор точки продаж, присвоенный магазином.</p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>{% note warning \"\" %}  Этот параметр устарел. Для указания региона используйте `region_id`.  {% endnote %} </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOutletsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о точках продаж.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOutlets();

    /**
     * <p>Список цен</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST campaigns/{campaignId}/offer-prices](../../reference/assortment/getPricesByOfferIds.md).  {% endnote %}  Возвращает список цен, установленных вами на товары любым способом: например, через партнерский API или в файле с каталогом.  {% note info %}  Общее количество товаров считается по данным за последние семь дней (не включая сегодня) и не может быть выше 2 миллионов.  {% endnote %}  Способы установки цен описаны [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/assortment/operations/prices.html).  |**⚙️ Лимит:** ```(количество товаров партнера на витрине) * 25``` товаров в сутки| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offer-prices" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>archived</b>"
     * <p>Фильтр по нахождению в архиве.</p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPricesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список всех товаров с установленными ценами.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getPrices();

    /**
     * <p>Просмотр цен на указанные товары в магазине</p>
     *
     * <p>Возвращает список цен на указанные товары в магазине.  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для просмотра базовых цен используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров на витрине * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-prices" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetPricesByOfferIdsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPricesByOfferIdsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров с установленными для заданного магазина ценами.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getPricesByOfferIds();

    /**
     * <p>Получение списка товаров, которые участвуют или могут участвовать в акции</p>
     *
     * <p>Возвращает список товаров, которые участвуют или могут участвовать в акции.  {% note warning %}  В параметре `limit` не передавайте значение больше 500.  {% endnote %}  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetPromoOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPromoOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров, которые участвуют или могут участвовать в акции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getPromoOffers();

    /**
     * <p>Получение списка акций</p>
     *
     * <p>Возвращает информацию об акциях Маркета.  По умолчанию возвращаются акции, в которых продавец участвует или может принять участие.  Чтобы получить текущие или завершенные акции, передайте параметр `participation`.  Типы акций, которые возвращаются в ответе:  * прямая скидка; * флеш-акция; * скидка по промокоду.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetPromosRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPromosResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список акций Маркета.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getPromos();

    /**
     * <p>Заказы, которые повлияли на индекс качества</p>
     *
     * <p>Возвращает список заказов, которые повлияли на индекс качества магазина. Чтобы узнать значение индекса качества, выполните запрос [POST businesses/{businessId}/ratings/quality](../../reference/ratings/getQualityRatings.md).  |**⚙️ Лимит:** 100000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/ratings/quality/details" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQualityRatingDetailsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о заказах, которые повлияли на индекс качества.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getQualityRatingDetails();

    /**
     * <p>Индекс качества магазинов</p>
     *
     * <p>Возвращает значение индекса качества магазинов и его составляющие.  Подробнее об индексе качества читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/score/).  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/ratings/quality" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetQualityRatingRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQualityRatingResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Значение индекса качества магазинов и его составляющие.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getQualityRatings();

    /**
     * <p>Получение заданного отчета</p>
     *
     * <p>Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/reports/info/{reportId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>reportId</b>"
     * <p>Идентификатор отчета, который вы получили после запуска генерации. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetReportInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Статус генерации отчета и ссылка, если она уже есть.  {% note tip %}  Если статус генерации отчета — `FAILED` или `NO_DATA`, проверьте корректность запроса на генерацию. Например, верно ли указан идентификатор магазина, период или номер платежного поручения.  {% endnote %}    </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReportInfo();

    /**
     * <p>Информация о невыкупе или возврате</p>
     *
     * <p>Получает информацию по одному невыкупу или возврату.  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>returnId</b>"
     * <p>Идентификатор возврата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetReturnResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Детали возврата.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturn();

    /**
     * <p>Получение заявления на возврат</p>
     *
     * <p>Загружает заявление покупателя на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>returnId</b>"
     * <p>Идентификатор возврата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/octet-stream}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Заявление на возврат.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturnApplication();

    /**
     * <p>Получение фотографии возврата</p>
     *
     * <p>Получает фотографии, которые покупатель приложил к заявлению на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>returnId</b>"
     * <p>Идентификатор возврата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>itemId</b>"
     * <p>Идентификатор товара в возврате.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>imageHash</b>"
     * <p>Хеш ссылки изображения для загрузки.</p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/octet-stream}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Фотография возврата.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturnPhoto();

    /**
     * <p>Список невыкупов и возвратов</p>
     *
     * <p>Получает список невыкупов и возвратов.  Чтобы получить информацию по одному возврату или невыкупу, выполните запрос [GET campaigns/{campaignId}/orders/{orderId}/returns/{returnId}](../../reference/orders/getReturn.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/returns" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderIds</b>"
     * <p>Идентификаторы заказов — для фильтрации результатов.  Несколько идентификаторов перечисляются через запятую без пробела. Максимальное количество идентификаторов — 50. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;Long&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>statuses</b>"
     * <p>Статусы возвратов или невыкупов — для фильтрации результатов.  Несколько статусов перечисляются через запятую. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;RefundStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>type</b>"
     * <p>Тип заказа для фильтрации:  * `RETURN` — возврат.  * `UNREDEEMED` — невыкуп.  Если не указывать, в ответе будут и возвраты, и невыкупы. </p>
     * <p>
     * - Parameter type: <b>{@link ReturnType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>fromDate</b>"
     * <p>Начальная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: `ГГГГ-ММ-ДД`. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>toDate</b>"
     * <p>Конечная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: `ГГГГ-ММ-ДД`. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>from_date</b>"
     * <p>{% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `fromDate`.  {% endnote %}  Начальная дата для фильтрации возвратов или невыкупов по дате обновления. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>to_date</b>"
     * <p>{% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `toDate`.  {% endnote %}  Конечная дата для фильтрации возвратов или невыкупов по дате обновления. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetReturnsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Постраничные возвраты партнера.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturns();

    /**
     * <p>Информация об остатках и оборачиваемости</p>
     *
     * <p>Возвращает данные об остатках товаров (для всех моделей) и об [оборачиваемости](*turnover) товаров (для модели FBY).  {% note info \"По умолчанию данные по оборачивамости не возращаются\" %}  Чтобы они были в ответе, передавайте `true` в поле `withTurnover`.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-|  [//]: <> (turnover: Среднее количество дней, за которое товар продается. Подробно об оборачиваемости рассказано в Справке Маркета для продавцов https://yandex.ru/support/marketplace/analytics/turnover.html.) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers/stocks" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetWarehouseStocksRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetWarehouseStocksResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Остатки товаров на складах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getStocks();

    /**
     * <p>Рекомендованные карточки для товаров</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/suggestions](../../reference/business-assortment/getSuggestedOfferMappings.md).  {% endnote %}  Возвращает идентификаторы карточек товаров на Маркете, рекомендованных для ваших товаров.  Каждому товару, который вы размещаете, должна соответствовать карточка товара на Маркете со своим идентификатором — SKU на Маркете. Он указывается в URL карточки товара, после «...sku=», например:  ##https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016…##  Чтобы получить для товаров рекомендованные SKU на Маркете, передайте в теле POST-запроса как можно больше информации о них: названия, производителей, штрихкоды, цены и т. д.  Полученные SKU можно передать вместе с информацией о ваших товарах с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/updates](../../reference/offer-mappings/updateOfferMappingEntries.md).  В одном запросе можно получить не более 500 рекомендаций.  |**⚙️ Лимит:** 100 000 рекомендаций в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-mapping-entries/suggestions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetSuggestedOfferMappingEntriesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetSuggestedOfferMappingEntriesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о товарах в каталоге.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getSuggestedOfferMappingEntries();

    /**
     * <p>Просмотр карточек на Маркете, которые подходят вашим товарам</p>
     *
     * <p>Возвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.  Пользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточки по предоставленным вами данным.  **Как пользоваться запросом**  1. Передайте Маркету список товаров, которые нужно проверить. 2. В ответ вы получите список SKU на Маркете с расшифровкой: названием, идентификатором модели, категорией. 3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида `https://market.yandex.ru/product/<marketModelId>?sku=<marketSku>`. 4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать `marketSKU`, который ему подходит по вашему мнению.  {% note info \"𝓠 Как определить `marketSku` товара, найденного на Маркете?\" %}  𝓐 Он есть в адресе страницы товара — расположен после `sku=`.  Например, `https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016`  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/suggestions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetSuggestedOfferMappingsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetSuggestedOfferMappingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Подобранные карточки на Маркете.  По результатам проверки товара полученная через этот запрос карточка может быть заменена на другую. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getSuggestedOfferMappings();

    /**
     * <p>Цены для продвижения товаров</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [отчет «Цены на рынке»](../../reference/reports/generatePricesReport.md).  {% endnote %}  {% note warning \"\" %}  Этот метод подходит только тем магазинам, которые устанавливают цены на товары в рублях.  {% endnote %}  Возвращает цены для продвижения товаров, которые вы размещаете на Маркете.  Товары, для которых нужно получить цены, передаются в теле POST-запроса.  Цены для продвижения зависят от цен, установленных на товары другими партнерами. Если один товар поставляют несколько партнеров, на Маркете сначала продается товар с более низкой ценой. Когда закончится товар по низкой цене, начнет продаваться товар по более высокой цене.  Выходные данные содержат для каждого товара несколько цен, соответствующих разным типам продвижения.  Установить цены на товары можно с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md) или другими способами: например, указать их в файле с каталогом. Также вы можете использовать стратегии для автоматической установки рекомендованных цен или минимальных цен на Маркете.  Подробно об автоматическом управлении ценами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/prices.html).  |**⚙️ Лимит:** 100 000 товаров в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-prices/suggestions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SuggestPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link SuggestPricesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список цен для продвижения на Маркете.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getSuggestedPrices();

    /**
     * <p>Список складов и групп складов</p>
     *
     * <p>Возвращает список складов и, если склады объединены, список групп складов. [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)  Среди прочего запрос позволяет определить идентификатор, который нужно использовать при передаче остатков для группы складов.  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/businesses/{businessId}/warehouses" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetWarehousesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список складов и групп складов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getWarehouses();

    /**
     * <p>Передача ключей цифровых товаров</p>
     *
     * <p>Передает ключи цифровых товаров, которые покупатель заказал и оплатил. После выполнения запроса Маркет отправит ему письмо с ключами и инструкциями по активации, а также переведет заказ в финальный статус `DELIVERED`.  Ключ нужно передать в течение 30 минут после перехода заказа в статус `PROCESSING`.  Если в один заказ входят несколько ключей, передавайте их все в одном запросе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/{orderId}/deliverDigitalGoods" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ProvideOrderDigitalCodesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler provideOrderDigitalCodes();

    /**
     * <p>Передача кодов маркировки единиц товара</p>
     *
     * <p>{% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Передает Маркету коды маркировки для единиц товара в указанном заказе.  Принимаются коды следующих типов:  * Коды «Честного знака». * УИН для ювелирных изделий. * РНПТ и ГТД для импортных прослеживаемых товаров.  {% note warning %}  Прежде чем работать с этим методом, обязательно прочтите [статью о работе с маркируемыми товарами](https://yandex.ru/support/marketplace/orders/cz.html).  {% endnote %}  Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/identifiers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ProvideOrderItemIdentifiersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link ProvideOrderItemIdentifiersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что коды успешно записались. Ответ содержит краткие сведения о промаркированных товарах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler provideOrderItemIdentifiers();

    /**
     * <p>Включение буста продаж и установка ставок</p>
     *
     * <p>Запускает буст продаж — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  {% cut \"Как в кабинете выглядит кампания, созданная через API\" %}  ![](../../_images/api-boost.png)  {% endcut %}  При первом использовании запроса Маркет: создаст единую на все магазины бизнес-аккаунта кампанию, добавит в нее товары с указанными ставками, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же созданной через API кампанией. Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. Другими кампаниями управлять через API не получится. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/businesses/{businessId}/bids" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link PutSkuBidsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Все получилось: ставки установлены или обновлены. Если нужно, добавлены новые товары и запущена кампания. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler putBidsForBusiness();

    /**
     * <p>Включение буста продаж и установка ставок для магазина</p>
     *
     * <p>Запускает буст продаж в указанном магазине — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  При первом использовании запроса Маркет: создаст кампанию, добавит в нее товары с указанными ставками для заданного магазина, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же кампанией, созданной через этот запрос или [PUT businesses/{businessId}/bids](/reference/bids/putBidsForBusiness). Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/bids" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link PutSkuBidsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler putBidsForCampaign();

    /**
     * <p>Сообщить, что прайс-лист обновился</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет сообщить, что магазин обновил прайс-лист. После этого Маркет начнет обновление данных на сервисе. 1. Магазин обновляет прайс-лист, ссылку на который он указал в кабинете. 2. Магазин отправляет Маркету запрос методом `POST campaigns/{campaignId}/feeds/{feedId}/refresh`. 3. Маркет начинает обновление данных магазина на сервисе.  {% note alert %}  Запрос работает только для включенных магазинов. Если магазин выключен, данные на Маркете не обновятся, даже если HTTP-код — `200 OK`. Проверить статус магазина можно с помощью базовых запросов или на странице бизнес-аккаунта.  {% endnote %}  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/feeds/{feedId}/refresh" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler refreshFeed();

    /**
     * <p>Поиск модели товара</p>
     *
     * <p>Возвращает информацию о моделях, удовлетворяющих заданным в запросе условиям поиска.  В одном запросе можно получить информацию не более чем о 100 моделях.  Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/models" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>query</b>"
     * <p>Поисковый запрос по названию модели товара.</p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>currency</b>"
     * <p>Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). </p>
     * <p>
     * - Parameter type: <b>{@link CurrencyType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link SearchModelsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о моделях.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchModels();

    /**
     * <p>Информация о дочерних регионах</p>
     *
     * <p>Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/regions/{regionId}/children" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetRegionWithChildrenResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Регионы, являющиеся дочерними к указанному в запросе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchRegionChildren();

    /**
     * <p>Информация о регионе</p>
     *
     * <p>Возвращает информацию о регионе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/regions/{regionId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetRegionsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Найденный регион.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchRegionsById();

    /**
     * <p>Поиск регионов по их имени</p>
     *
     * <p>Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.  Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/regions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>name</b>"
     * <p>Название региона.  Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, `Москва`. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetRegionsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список найденных регионов.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchRegionsByName();

    /**
     * <p>Отправка файла в чат</p>
     *
     * <p>Отправляет файл в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/file/send" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chatId</b>"
     * <p>Идентификатор чата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>file</b>"
     * <p>Содержимое файла. Максимальный размер файла — 5 Мбайт.</p>
     * <p>
     * - Parameter type: <b>BinaryFile</b><br/>
     * - Appears in: <b>{@link io.undertow.server.handlers.form.FormDataParser Form}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{mediaType=multipart/form-data}]</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ. Означает, что файл отправлен.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler sendFileToChat();

    /**
     * <p>Отправка сообщения в чат</p>
     *
     * <p>Отправляет сообщение в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/message" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chatId</b>"
     * <p>Идентификатор чата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SendMessageToChatRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ. Означает, что сообщение отправлено.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler sendMessageToChat();

    /**
     * <p>Изменение параметров прайс-листа</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет магазину изменить параметры прайс-листа.  Чтобы отредактировать параметр прайс-листа, передайте в теле запроса: `name` (название параметра) и `value` (значение параметра).  Чтобы отменить установленное значение, передайте в теле запроса: `name` (название параметра) и `delete=true` (удалить значение).  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/feeds/{feedId}/params" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetFeedParamsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Статус выполнения операции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler setFeedParams();

    /**
     * <p>Подготовка заказа</p>
     *
     * <p>{% note tip \"Подходит и для DBS\" %}  Запрос предназначен для работы с FBS-заказами, но вы можете использовать его для обработки DBS-заказов, если это удобно.  {% endnote %}  Позволяет выполнить три операции:  * передать Маркету информацию о распределении товаров по коробкам; * передать Маркету коды маркировки для товаров; * удалить товар из заказа, если его не оказалось на складе.  Если нужно что-то поправить в переданных данных, просто повторите запрос — это можно делать сколько угодно раз до перевода заказа в статус **Готов к отгрузке**. ⚠️ Если вы меняете раскладку уже после печати и расклейки ярлыков, не забудье перепечатать их и наклеить заново.  ## Как передать информацию о распределении товаров  В этом запросе вам нужно передать Маркету список коробок и указать, какие именно товары лежат в каждой из них. Коробки могут быть двух типов:  * **Содержащие товары целиком.** Такая коробка может содержать сколько угодно единиц любых товаров.  * **Содержащие часть товара.** Такие коробки содержат по одной части одного товара. Например, одна содержит внешний блок кондиционера, а другая — внутренний блок.  ⚠️ Одна коробка не может содержать и товары целиком, и части товаров.  ## Как передавать коды маркировки  Если в заказе есть товары, подлежащие маркировке, в запросе нужно передать соответствующие уникальные коды. [Что такое маркировка?](https://yandex.ru/support/marketplace/orders/cz.html)  Принимаются коды следующих типов:  * Коды «Честного знака». * УИН для ювелирных изделий. * РНПТ и ГТД для импортных прослеживаемых товаров.  Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.  Если товар едет в нескольких коробках, код маркировки нужно передать для каждой из них.  ## Как удалить товар из заказа  Чтобы удалить товар из заказа:  1. Добавьте в запрос `allowRemove: true`. 2. Передайте распределение по коробкам без товара, который нужно удалить.  {% note warning \"Удаление нельзя отменить\" %}  Эта операция необратима: покупатель сразу получит уведомление, а состав заказа изменится.  {% endnote %}  Чтобы удалить позицию целиком, не передавайте соответствующий `OrderBoxLayoutItemDTO`. Чтобы уменьшить количество товара, передайте уменьшенное значение в поле `fullCount`.  Нельзя удалить или уменьшить количество товара, если он:  * добавлен по акции; * составляет 99% стоимости заказа; * единственный товар в заказе.  Если вы не можете отгрузить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.  {% note info \"Увеличить заказ нельзя\" %}  С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.  {% endnote %}  ## Примеры  {% cut \"Товар умещается в коробку\" %}  Вот как будет выглядеть запрос, если в одной коробке едут:    * три единицы одного товара, требующего маркировки;   * одна единица другого товара, не требущего маркировки.    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"fullCount\": 3,                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           },                           {                               \"cis\": \"010304109478gftJ14545762!\\u001dhGt264\"                           },                           {                               \"cis\": \"010304109478fRs28323ks23!\\u001dhet201\"                           }                       ]                   },                   {                       \"id\": 654321,                       \"fullCount\": 1                   }               ]           }       ]   }   ```  {% endcut %}  {% cut \"Товар едет в разных коробках\" %}  Вот как будет выглядеть запрос, если товар едет в двух коробках:    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           }       ]   }   ```  {% endcut %}  {% cut \"Одинаковые товары, где каждый едет в нескольких коробках\" %}  Вот как будет выглядеть запрос, если каждый из двух одинаковых товаров едет в двух коробках:    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           }       ]   }   ```  {% endcut %}  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/boxes" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetOrderBoxLayoutRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link SetOrderBoxLayoutResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ придет переданная раскладка с идентификаторами коробок — они понадобятся для запроса ярлыков. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler setOrderBoxLayout();

    /**
     * <p>Изменение даты доставки заказа</p>
     *
     * <p>Метод изменяет дату доставки заказа в статусе `PROCESSING` или `DELIVERY`. Для заказов с другими статусами дату доставки изменить нельзя.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/delivery/date" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetOrderDeliveryDateRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Успешное изменение даты доставки.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler setOrderDeliveryDate();

    /**
     * <p>Передача трек‑номера посылки</p>
     *
     * <p>{% note warning \"Этот запрос только для DBS\" %}  Вы можете использовать запрос, чтобы повысить лояльность покупателей. Если они могут узнать, на каком этапе доставки находятся их заказы, доверие покупателей к вашему магазину может возрасти.  {% endnote %}  Передает Маркету трек‑номер, по которому покупатель может отследить посылку со своим заказом через службу доставки.  Передать трек‑номер можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY` или `PICKUP`.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/{orderId}/delivery/track" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetOrderDeliveryTrackCodeRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Трек‑номер посылки и идентификатор службы доставки были успешно переданы.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler setOrderDeliveryTrackCode();

    /**
     * <p>Передача количества грузовых мест в заказе</p>
     *
     * <p>{% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Отгружаемый Маркету заказ может не влезть в одну коробку или упаковку — в этом случае получается, что он занимает несколько грузовых мест.  Количество грузовых мест нужно обязательно передавать Маркету, если оно не равно 1. Это делается перед переводом его в статус **Готов к отгрузке**. Подробно о том, что в какой момент нужно передавать, рассказано в [пошаговой инструкции](../../step-by-step/fbs.md).  Метод устроен немного нестандартно: количество задается длиной массива пустых объектов.  Раньше метод требовал передачи большего количества данных. Запросы, оформленные по старому образцу, работают, но лучше делать по-новому.  {% cut \"Как было раньше\" %}  Структура тела PUT-запроса:  ``` {   \"boxes\":   [     {       \"fulfilmentId\": \"{string}\",       \"weight\": {int64},       \"width\": {int64},       \"height\": {int64},       \"depth\": {int64},       \"items\":       [         {           \"id\": {int64},           \"count\": {int32}         },         ...       ]     },     ...   ] } ``` | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `boxes`       |           | Список грузовых мест.       |  **Параметры, вложенные в `boxes`** | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `fulfilmentId`       |  String   | Идентификатор грузового места в информационной системе магазина. Сформируйте идентификатор по шаблону: `номер заказа на Маркете-номер грузового места`. Например, `7206821‑1, 7206821‑2` и т. д. | | `weight`       | Int64        | Масса брутто грузового места (суммарная масса упаковки и содержимого) в граммах. | | `width`       | Int64   | Ширина грузового места в сантиметрах.       | | `height`       | Int64   | Высота грузового места в сантиметрах.       | | `depth`       | Int64   | Глубина грузового места в сантиметрах.        | | `items`       | Int64   | Список товаров в грузовом месте.       |  **Параметры, вложенные в `items`** | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `id`       | Int64     | Идентификатор товара в рамках заказа.   | | `count`    | Int32     | Количество единиц товара в грузовом месте.       |  {% endcut %}  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Параметр больше не используется. Вставьте любое число — просто чтобы получился корректный URL. </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetOrderShipmentBoxesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link SetOrderShipmentBoxesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Имеет значение только тип ответа. Если ответ `ОК`, количество грузомест записано.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler setOrderShipmentBoxes();

    /**
     * <p>Принятие или изменение решения по возврату</p>
     *
     * <p>Выбирает решение по возврату от покупателя. После этого для подтверждения решения нужно выполнить запрос [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit](../../reference/orders/submitReturnDecision.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>returnId</b>"
     * <p>Идентификатор возврата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetReturnDecisionRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Детали возврата.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler setReturnDecision();

    /**
     * <p>Отказ от ответа на отзывы</p>
     *
     * <p>Пропускает отзывы — они больше не будут возвращаться в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/skip-reaction" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SkipGoodsFeedbackReactionRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler skipGoodsFeedbacksReaction();

    /**
     * <p>Подтверждение решения по возврату</p>
     *
     * <p>Подтверждает выбранное решение по возврату, отправленное в запросе [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision](../../reference/orders/setReturnDecision.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>returnId</b>"
     * <p>Идентификатор возврата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Статус выполнения операции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler submitReturnDecision();

    /**
     * <p>Установка цен на товары во всех магазинах</p>
     *
     * <p>Устанавливает [базовые цены](*default-price). Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-prices/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateBusinessPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Маркет принял информацию о новых ценах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateBusinessPrices();

    /**
     * <p>Изменение условий продажи товаров в магазине</p>
     *
     * <p>Изменяет параметры продажи товаров в конкретном магазине: доступность товара, условия доставки и самовывоза, применяемую ставку НДС.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateCampaignOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что новые параметры получены Маркетом и скоро вступят в силу.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateCampaignOffers();

    /**
     * <p>Добавление нового или изменение созданного комментария</p>
     *
     * <p>Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.  Для создания комментария к отзыву передайте только идентификатор отзыва `feedbackId`.  Чтобы добавить комментарий к другому комментарию, передайте:  * `feedbackId` — идентификатор отзыва; * `comment.parentId` — идентификатор родительского комментария.  Чтобы изменить комментарий, передайте:  * `feedbackId`— идентификатор отзыва; * `comment.id` — идентификатор комментария, который нужно изменить.  Если передать одновременно `comment.parentId` и `comment.id`, будет изменен существующий комментарий.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/comments/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateGoodsFeedbackCommentRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateGoodsFeedbackCommentResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о добавленном или измененном комментарии.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateGoodsFeedbackComment();

    /**
     * <p>Редактирование категорийных характеристик товара</p>
     *
     * <p>Редактирует характеристики товара, которые специфичны для категории, к которой он относится.  {% note warning \"Здесь только то, что относится к конкретной категории\" %}  Если вам нужно изменить основные параметры товара (название, описание, изображения, видео, производитель, штрихкод), воспользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Чтобы удалить характеристики, которые заданы в параметрах с типом `string`, передайте пустое значение.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-cards/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOfferContentRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateOfferContentResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Запрос выполнен корректно, данные обработаны.  {% note warning \"Ответ 200 сам по себе не значит, что переданные значения корректны\" %}  Обязательно посмотрите детали ответа: `status` и перечень ошибок, если он есть.  Даже если ошибка допущена в характеристиках всего одного товара, никакие изменения из запроса в каталог не попадут.  {% endnote %}  Если в `status` вернулось `ERROR`, убедитесь, что:  * все обязательные характеристики заполнены; * характеристики действительно существуют в указанных категориях; * значения соответствуют характеристикам; * ваши собственные значения имеют нужный тип данных.  Найти проблемы помогут поля `errors` и `warnings`. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOfferContent();

    /**
     * <p>Добавление и редактирование товаров в каталоге</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Добавляет товары, указанные в запросе, в ваш каталог товаров и редактирует уже имеющиеся товары.  Информацию о товарах нужно передать в теле POST-запроса.  У каждого товара должен быть ваш SKU — уникальный код, который вы используете для идентификации товара:  * Чтобы добавить в каталог новый товар, укажите в параметре `shopSku` ваш SKU, которого еще нет в каталоге. * Чтобы отредактировать товар из каталога, укажите в параметре `shopSku` ваш SKU этого товара в каталоге.  В обоих случаях в запросе нужно передать полное описание товара, даже если вы хотите изменить только несколько характеристик.  Если вы знаете, какой карточке товара на Маркете соответствует ваш товар, укажите ее идентификатор (SKU на Маркете) во входном параметре mapping. Получить SKU на Маркете рекомендованной карточки товара можно с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/suggestions](../../reference/offer-mappings/getSuggestedOfferMappingEntries.md) или через кабинет. Если SKU на Маркете не указан, сотрудники Маркета сами подберут или создадут подходящую карточку товара, либо у него появится статус `NEED_CONTENT` (нужно найти карточку или создать ее самостоятельно) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  Перед публикацией товары проходят модерацию. Если в одном из отправленных товаров найдена ошибка, ответ на запрос будет иметь HTTP-код 400 Bad Request, и ни один из товаров не отправится на модерацию. При этом если вы не передадите все обязательные параметры для какого‑либо товара, после модерации у него появится статус `NEED_INFO` (в описании товара не хватает информации) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  В одном запросе можно добавить не более 500 товаров.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5 000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-mapping-entries/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOfferMappingEntryRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Статус выполнения операции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler updateOfferMappingEntries();

    /**
     * <p>Добавление товаров в каталог и изменение информации о них</p>
     *
     * <p>Добавляет товары в каталог, передает их категории на Маркете и характеристики, необходимые для этих категории. Также редактирует информацию об уже имеющихся товарах.  Список категорий Маркета можно получить с помощью запроса [POST categories/tree](../../reference/categories/getCategoriesTree.md), а характеристики товаров по категориям с помощью [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).  Чтобы **добавить новый товар**, передайте его с новым идентификатором, который раньше никогда не использовался в каталоге. Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой. Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**SKU на Маркете**) в поле `marketSKU`.  Для **новых товаров** обязательно укажите параметры: `offerId`, `name`, `marketCategoryId` или `category`, `pictures`, `vendor`, `description`.  Чтобы **отредактировать информацию о товаре**, передайте новые данные, указав в `offerId` соответствующий **ваш SKU**. Поля, в которых ничего не меняется, можно не передавать.  Чтобы **удалить характеристики**, которые заданы в параметрах с типом `string`, передайте пустое значение.  Параметр `offerId` должен быть **уникальным** для всех товаров, которые вы передаете.  {% note warning \"Правила использования SKU\" %}  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOfferMappingsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateOfferMappingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Все обязательные поля товаров заполнены, поэтому новые товары и внесенные изменения сохранены в каталоге. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOfferMappings();

    /**
     * <p>Удаление товара из заказа или уменьшение числа единиц</p>
     *
     * <p>{% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Изменяет состав заказа, если позволяет выбранная служба доставки, в случаях:  * покупатель уменьшил количество товара; * магазин не может поставить все товары в заказе.  Для этого заказ должен находится в статусе `\"status\": \"PROCESSING\"` этапа обработки `\"substatus\": \"STARTED\"`. После передачи статуса `\"substatus\": \"READY_TO_SHIP\"` изменить состав невозможно.  Если одинаковых товаров несколько, для уменьшения количества передайте обновленное значение в атрибуте `count` параметра `item`.  Чтобы полностью удалить товар из заказа:  * передайте значение `0`; или * не передавайте параметр `item`.  Нельзя удалить или уменьшить количество товара, если он:  * добавлен по акции; * составляет 99% стоимости заказа; * единственный товар в заказе.  Если необходимо удалить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.  {% note info \"Увеличить заказ нельзя\" %}  С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.  {% endnote %}  **Возврат денег покупателю**  Если покупатель оплатил товар при оформлении, Маркет вернет ему деньги за удаленные из заказа товары в течение двух дней:  * при оплате банковской картой — с момента, когда магазин переведет заказ в статус `SHIPPED`;  * при оплате через Apple Pay или Google Pay — с момента, когда магазин удалит товар из заказа.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/items" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOrderItemRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Маркет успешно обработал ваш запрос. Выходные данные не ожидаются.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOrderItems();

    /**
     * <p>Изменение статуса одного заказа</p>
     *
     * <p>Изменяет статус заказа. Возможные изменения статусов:  * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`. * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`. * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/status" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOrderStatusRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateOrderStatusResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В случае успешного изменения статуса заказа возвращается обновленная информация о заказе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOrderStatus();

    /**
     * <p>Изменение статусов нескольких заказов</p>
     *
     * <p>Изменяет статусы нескольких заказов.  Возможные изменения статусов:  * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"`и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`. * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`. * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.  Максимальное количество заказов, у которых можно изменить статус в одном запросе, — 30.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/status-update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOrderStatusesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateOrderStatusesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Возвращается информация об обновленных статусах заказов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOrderStatuses();

    /**
     * <p>Продление срока хранения заказа</p>
     *
     * <p>Продлевает срок хранения заказа в пункте выдачи продавца.  Заказ должен быть в статусе `PICKUP`. Продлить срок можно только один раз, не больше чем на 30 дней.  Новый срок хранения можно получить в параметре `outletStorageLimitDate` запроса [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/delivery/storage-limit" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOrderStorageLimitRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOrderStorageLimit();

    /**
     * <p>Изменение информации о точке продаж</p>
     *
     * <p>Изменяет информацию о точке продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/outlets/{outletId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>outletId</b>"
     * <p>Идентификатор точки продаж.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ChangeOutletRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOutlet();

    /**
     * <p>Создание и изменение лицензий для точек продаж</p>
     *
     * <p>Передает информацию о новых и существующих лицензиях для точек продаж. Поддерживаются только лицензии на розничную продажу алкоголя.  Чтобы размещать алкогольную продукцию на Маркете, надо также прислать гарантийное письмо (если вы еще не делали этого раньше) и правильно оформить предложения в прайс-листе. Далее информация о лицензиях проходит проверку.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/outlets/licenses" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOutletLicenseRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOutletLicenses();

    /**
     * <p>Установка цен на товары в конкретном магазине</p>
     *
     * <p>Устанавливает цены на товары в магазине. Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для управления базовыми ценами используйте [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-prices/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdatePricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Маркет принял информацию о новых ценах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updatePrices();

    /**
     * <p>Добавление товаров в акцию или изменение их цен</p>
     *
     * <p>Добавляет товары в акцию или изменяет цены на товары, которые участвуют в акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos/offers/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdatePromoOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdatePromoOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Результат добавления товаров в акцию или обновления их цен.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updatePromoOffers();

    /**
     * <p>Передача информации об остатках</p>
     *
     * <p>Передает данные об остатках товаров на витрине.  Обязательно указывайте SKU **в точности** так, как он указан в каталоге. Например, _557722_ и _0557722_ — это два разных SKU.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/offers/stocks" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateStocksRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateStocks();

    /**
     * <p>Справочник служб доставки</p>
     *
     * <p>Возвращает справочник служб доставки: идентификаторы и наименования. |**⚙️ Лимит:** 5 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/delivery/services" (<i>privileged: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetDeliveryServicesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о службах доставки.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getDeliveryServices();

    /**
     * <p>Скрытие товаров и настройки скрытия</p>
     *
     * <p>Скрывает товары магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/hidden-offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link AddHiddenOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Настройки скрытия получены и скоро вступят в силу.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler addHiddenOffers();

    /**
     * <p>Добавление товаров в архив</p>
     *
     * <p>Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.  {% note warning \"В архив нельзя отправить товар, который хранится на складе Маркета\" %}  Вначале такой товар нужно распродать или вывезти.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/archive" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link AddOffersToArchiveRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link AddOffersToArchiveResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если некоторые товары добавить в архив не удалось, в ответе 200 будет их список.  Список успешно добавленных товаров не возвращается. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler addOffersToArchive();

    /**
     * <p>Калькулятор стоимости услуг</p>
     *
     * <p>Рассчитывает стоимость услуг Маркета для товаров с заданными параметрами. Порядок товаров в запросе и ответе сохраняется, чтобы определить, для какого товара рассчитана стоимость услуги.  Обратите внимание: калькулятор осуществляет примерные расчеты. Финальная стоимость для каждого заказа зависит от предоставленных услуг.  В запросе можно указать либо параметр `campaignId`, либо `sellingProgram`. Совместное использование параметров приведет к ошибке.  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/tariffs/calculate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link CalculateTariffsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link CalculateTariffsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Стоимость услуг.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler calculateTariffs();

    /**
     * <p>Удаление товара из карантина по цене в кабинете</p>
     *
     * <p>Подтверждает основную цену на товары, которые попали в карантин, и удаляет их из карантина.  Основная цена задается в каталоге и действует во всех магазинах кабинета.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/price-quarantine/confirm" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ConfirmPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что цены подтверждены.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler confirmBusinessPrices();

    /**
     * <p>Удаление товара из карантина по цене в магазине</p>
     *
     * <p>Подтверждает в заданном магазине цену на товары, которые попали в карантин, и удаляет их из карантина.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/price-quarantine/confirm" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ConfirmPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что цены подтверждены.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler confirmCampaignPrices();

    /**
     * <p>Создание нового чата с покупателем</p>
     *
     * <p>Создает новый чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/new" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link CreateChatRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link CreateChatResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Все получилось: чат создан. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler createChat();

    /**
     * <p>Удаление товаров из ассортимента магазина</p>
     *
     * <p>Удаляет заданные товары из заданного магазина.  {% note warning \"Запрос удаляет товары именно из конкретного магазина\" %}  На продажи в других магазинах и на наличие товара в общем каталоге он не влияет.  {% endnote %}  Товар не получится удалить, если он хранится на складах Маркета.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteCampaignOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeleteCampaignOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если удалось удалить не все товары, с ответом 200 вернется список тех, что были в запросе, но остались в магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteCampaignOffers();

    /**
     * <p>Удаление комментария к отзыву</p>
     *
     * <p>Удаляет комментарий магазина.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/comments/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteGoodsFeedbackCommentRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteGoodsFeedbackComment();

    /**
     * <p>Возобновление показа товаров</p>
     *
     * <p>Возобновляет показ скрытых вами товаров магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/hidden-offers/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteHiddenOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Показ товаров возобновлен.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteHiddenOffers();

    /**
     * <p>Удаление товаров из каталога</p>
     *
     * <p>Удаляет товары из каталога.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeleteOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если удалось удалить не все товары, с ответом 200 вернется список тех, что были в запросе, но остались в магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteOffers();

    /**
     * <p>Удаление товаров из архива</p>
     *
     * <p>Восстанавливает товары из архива.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/unarchive" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteOffersFromArchiveRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeleteOffersFromArchiveResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если некоторые товары восстановить из архива не удалось, в ответе 200 будет их список.  Список успешно восстановленных товаров не возвращается. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteOffersFromArchive();

    /**
     * <p>Удаление товаров из акции</p>
     *
     * <p>Убирает товары из акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos/offers/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeletePromoOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeletePromoOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Результат удаления товаров из акции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deletePromoOffers();

    /**
     * <p>Отчет по бусту продаж</p>
     *
     * <p>Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/boost-consolidated/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateBoostConsolidatedRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateBoostConsolidatedReport();

    /**
     * <p>Отчет «Конкурентная позиция»</p>
     *
     * <p>Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \"Значение -1 в отчете\" %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/competitors-position/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateCompetitorsPositionReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateCompetitorsPositionReport();

    /**
     * <p>Отчет по отзывам о товарах</p>
     *
     * <p>Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/goods-feedback/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateGoodsFeedbackRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateGoodsFeedbackReport();

    /**
     * <p>Отчет по реализации</p>
     *
     * <p>Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/goods-realization/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateGoodsRealizationReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateGoodsRealizationReport();

    /**
     * <p>Готовые ярлыки‑наклейки на все коробки в нескольких заказах</p>
     *
     * <p>Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/documents/labels/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7.</p>
     * <p>
     * - Parameter type: <b>{@link PageFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateMassOrderLabelsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый файл.  Если при генерации не удалось найти часть заказов, в ответе на запрос получения готового файла вернется подстатус `RESOURCE_NOT_FOUND`. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateMassOrderLabelsReport();

    /**
     * <p>Готовый ярлык‑наклейка для коробки в заказе</p>
     *
     * <p>Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор грузоместа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>boxId</b>"
     * <p>Идентификатор коробки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>format</b>"
     * <p>Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.</p>
     * <p>
     * - Parameter type: <b>{@link PageFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/pdf}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: PDF‑файл с ярлыками для коробки. Файл содержит одну страницу с ярлыком.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateOrderLabel();

    /**
     * <p>Готовые ярлыки‑наклейки на все коробки в одном заказе</p>
     *
     * <p>Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/delivery/labels" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>format</b>"
     * <p>Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.</p>
     * <p>
     * - Parameter type: <b>{@link PageFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/pdf}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: PDF‑файл с ярлыками на все коробки.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateOrderLabels();

    /**
     * <p>Отчет «Цены на рынке»</p>
     *
     * <p>Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/prices/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GeneratePricesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generatePricesReport();

    /**
     * <p>Отчет по полкам</p>
     *
     * <p>Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/shelf-statistics/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateShelfsStatisticsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateShelfsStatisticsReport();

    /**
     * <p>Отчет «Аналитика продаж»</p>
     *
     * <p>Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/shows-sales/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateShowsSalesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateShowsSalesReport();

    /**
     * <p>Отчет по остаткам на складах</p>
     *
     * <p>Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/stocks-on-warehouses/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateStocksOnWarehousesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateStocksOnWarehousesReport();

    /**
     * <p>Отчет по стоимости услуг</p>
     *
     * <p>Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |-----------------------------|---------------------------------| |По дате начисления услуги    |`dateFrom` и `dateTo`            | |По дате формирования акта    |`year` и `month`                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/united-marketplace-services/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateUnitedMarketplaceServicesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateUnitedMarketplaceServicesReport();

    /**
     * <p>Отчет по платежам</p>
     *
     * <p>Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |-------------------------|---------------------------------------| |О платежах за период     |`dateFrom` и `dateTo`                  | |О платежном поручении    |`bankOrderId` и `bankOrderDateTime`    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/united-netting/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateUnitedNettingReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateUnitedNettingReport();

    /**
     * <p>Отчет по заказам</p>
     *
     * <p>Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \"\" %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/united-orders/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateUnitedOrdersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateUnitedOrdersReport();

    /**
     * <p>Все предложения магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет максимально быстро получить информацию обо всех предложениях магазина, размещенных на Маркете. Возвращает результат в виде сегментов нефиксированного размера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Яндекс Маркета, с которой соотнесено предложение, а также аукционные ставки на него.  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — среднее количество таваров в каталоге за неделю * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offers/all" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chunk</b>"
     * <p>Номер сегмента с результатами.  Значение по умолчанию: `0`.  {% note info %}  Номера сегментов запрашиваются последовательно, пока не будет получен сегмент с пустым ответом. Пустой ответ означает, что все предложения магазина получены.  {% endnote %}  {% note alert %}  Нумерация начинается с 0. Чтобы запросить первую страницу, необходимо указать `chunk=0` и т. д.  {% endnote %} </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetAllOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Предложения магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getAllOffers();

    /**
     * <p>Информация об установленных ставках</p>
     *
     * <p>Возвращает значения ставок для заданных товаров.  {% note warning \"\" %}  В ответе возвращаются значения только тех ставок, которые вы установили через запрос [PUT businesses/{businessId}/bids](../../reference/bids/putBidsForBusiness.md). Получить информацию по кампаниям, созданным в кабинете, не получится.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/bids/info" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetBidsInfoRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBidsInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Значения ставок для заданных товаров. В ответ попадают только товары, на которые установлены ставки.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBidsInfoForBusiness();

    /**
     * <p>Рекомендованные ставки для заданных товаров</p>
     *
     * <p>Возвращает рекомендованные ставки для заданных товаров — такие ставки обеспечивают вашим предложениям определенную долю показов, если цена не превышает рекомендованную.  Для одного товара может возвращаться одна рекомендованная ставка или несколько. Во втором случае разные ставки предназначены для достижения разной доли показов.  Если товар только добавлен в каталог, но пока не продается, рекомендованной ставки для него не будет.  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/bids/recommendations" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetBidsRecommendationsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBidsRecommendationsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Рекомендованные ставки для заданных товаров.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBidsRecommendations();

    /**
     * <p>Список товаров, находящихся в карантине по цене в кабинете</p>
     *
     * <p>Возвращает список товаров, которые находятся в карантине по **основной цене**. Основная цена задается в каталоге и действует во всех магазинах кабинета.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/price-quarantine" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetQuarantineOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQuarantineOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров в карантине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBusinessQuarantineOffers();

    /**
     * <p>Настройки кабинета</p>
     *
     * <p>Возвращает информацию о настройках кабинета, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/settings" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBusinessSettingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Настройки кабинета.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBusinessSettings();

    /**
     * <p>Информация о магазине</p>
     *
     * <p>Возвращает информацию о магазине. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaign();

    /**
     * <p>Логины, связанные с магазином</p>
     *
     * <p>Возвращает список логинов, у которых есть доступ к магазину. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/logins" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignLoginsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список логинов, связанных с магазином.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignLogins();

    /**
     * <p>Информация о товарах, которые размещены в заданном магазине</p>
     *
     * <p>Возвращает список товаров, которые размещены в заданном магазине. Для каждого товара указываются параметры размещения.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetCampaignOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров, размещенных в заданном магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignOffers();

    /**
     * <p>Список товаров, находящихся в карантине по цене в магазине</p>
     *
     * <p>Возвращает список товаров, которые находятся в карантине по цене, установленной в заданном магазине.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/price-quarantine" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetQuarantineOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQuarantineOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров в карантине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignQuarantineOffers();

    /**
     * <p>Регион магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [GET campaigns/{campaignId}/settings](../../reference/campaigns/getCampaignSettings.md).  {% endnote %}  Возвращает регион, в котором находится магазин. |**⚙️ Лимит:** 5 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/region" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignRegionResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Возвращает регион, в котором находится магазин.  |**⚙️ Лимит:** 1000 запросов в час| |-| </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getCampaignRegion();

    /**
     * <p>Настройки магазина</p>
     *
     * <p>Возвращает информацию о настройках магазина, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/settings" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignSettingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Настройки магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignSettings();

    /**
     * <p>Список магазинов пользователя</p>
     *
     * <p>Возвращает список магазинов, к которым имеет доступ пользователь — владелец авторизационного токена, использованного в запросе. Для агентских пользователей список состоит из подагентских магазинов. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Магазины пользователя.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaigns();

    /**
     * <p>Магазины, доступные логину</p>
     *
     * <p>Возвращает список магазинов, к которым у пользователя с указанным логином есть доступ. |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/by_login/{login}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>login</b>"
     * <p>Логин пользователя.</p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о магазинах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignsByLogin();

    /**
     * <p>Лимит на установку кванта продажи и минимального количества товаров в заказе</p>
     *
     * <p>Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/categories/max-sale-quantum" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetCategoriesMaxSaleQuantumRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCategoriesMaxSaleQuantumResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Лимит на установку кванта и минимального количества товаров.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCategoriesMaxSaleQuantum();

    /**
     * <p>Дерево категорий</p>
     *
     * <p>Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/categories/tree" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetCategoriesRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCategoriesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Категории Маркета.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCategoriesTree();

    /**
     * <p>Списки характеристик товаров по категориям</p>
     *
     * <p>Возвращает список характеристик с допустимыми значениями для заданной категории.  |**⚙️ Лимит:** 50 категорий в минуту | |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/category/{categoryId}/parameters" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>categoryId</b>"
     * <p>Идентификатор категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится интересующий вас товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCategoryContentParametersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список характеристик товаров из заданной категории.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCategoryContentParameters();

    /**
     * <p>Получение истории сообщений в чате</p>
     *
     * <p>Возвращает историю сообщений в чате с покупателем.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/history" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chatId</b>"
     * <p>Идентификатор чата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetChatHistoryRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetChatHistoryResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: История сообщений успешно получена. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getChatHistory();

    /**
     * <p>Получение доступных чатов</p>
     *
     * <p>Возвращает ваши чаты с покупателями.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetChatsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetChatsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список чатов. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getChats();

    /**
     * <p>Справочник служб доставки</p>
     *
     * <p>Возвращает справочник служб доставки: идентификаторы и наименования. |**⚙️ Лимит:** 5 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/delivery/services" (<i>privileged: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetDeliveryServicesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о службах доставки.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getDeliveryServices();

    /**
     * <p>Информация о прайс-листе</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает информацию о прайс-листе, размещенном на Маркете для заданного магазина. Также ресурс возвращает результаты автоматических проверок прайс-листа. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feeds/{feedId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о прайс-листе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeed();

    /**
     * <p>Отчет по индексации прайс-листа</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает отчет по индексации прайс-листа для заданного магазина. Отчет позволяет получить статистику загрузки прайс-листа и результаты его автоматических проверок.  Данные в отчете возвращаются в порядке убывания значений параметра `generationId`.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feeds/{feedId}/index-logs" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>published_time_from</b>"
     * <p>Начальная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Значение по умолчанию: последние восемь дней со времени отправки запроса. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>published_time_to</b>"
     * <p>Конечная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-31T00:42:42+03:00`.  Значение по умолчанию: дата и время отправки запроса.  {% note info %}  Если во время переключения между страницами выходных данных на Яндекс Маркете появятся новые результаты индексации прайс-листа, вы не получите часть данных. Чтобы этого не произошло, зафиксируйте выходные данные с помощью входного параметра `published_time_to`. Значение параметра не должно быть датой из будущего.  {% endnote %} </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>status</b>"
     * <p>Статус индексации и проверки прайс-листа на соответствие техническим требованиям.  Возможные значения: * `ERROR` — произошли ошибки. * `OK` — обработан без ошибок. * `WARNING` — наблюдались некритичные проблемы. </p>
     * <p>
     * - Parameter type: <b>{@link FeedIndexLogsStatusType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedIndexLogsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Отчет по индексации прайс-листа.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeedIndexLogs();

    /**
     * <p>Новые и обновленные отзывы о магазине</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает новые и обновленные отзывы о магазине на Маркете.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов. Выходные данные содержат идентификатор следующей страницы.  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feedback/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>from_date</b>"
     * <p>Начальная дата обновления отзывов.  Если параметр указан, возвращаются отзывы, которые были написаны или обновлены с этой даты.  Формат даты: `ГГГГ-ММ-ДД`. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedbackListResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список отзывов для магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeedbackAndCommentUpdates();

    /**
     * <p>Список прайс-листов магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает список прайс-листов, размещенных на Маркете для магазина. Также ресурс возвращает результаты автоматических проверок прайс-листов. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feeds" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список прайс-листов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeeds();

    /**
     * <p>Получение комментариев к отзыву</p>
     *
     * <p>Возвращает комментарии к отзыву.  Результаты возвращаются постранично, одна страница содержит не более 20 комментариев.  Комментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/comments" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetGoodsFeedbackCommentsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetGoodsFeedbackCommentsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Дерево комментариев к отзыву.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getGoodsFeedbackComments();

    /**
     * <p>Получение отзывов о товарах продавца</p>
     *
     * <p>Возвращает все отзывы о товарах продавца по указанным фильтрам.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов.  Отзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetGoodsFeedbackRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetGoodsFeedbackResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список отзывов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getGoodsFeedbacks();

    /**
     * <p>Отчет по товарам</p>
     *
     * <p>Возвращает подробный отчет по товарам, которые вы разместили на Маркете. С помощью отчета вы можете узнать, например, об остатках на складе, об условиях хранения ваших товаров и т. д.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/stats/skus" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetGoodsStatsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetGoodsStatsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Отчет по товарам.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getGoodsStats();

    /**
     * <p>Информация о скрытых вами товарах</p>
     *
     * <p>Возвращает список скрытых вами товаров для заданного магазина.  В списке будут товары, скрытые любым способом — по API, с помощью YML-фида, в кабинете и так далее.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/hidden-offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>offer_id</b>"
     * <p>Идентификатор скрытого предложения. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>offset</b>"
     * <p>Позиция в списке, начиная с которой возвращаются результаты ответа.  Используется вместе с параметром `limit`.  Если задан `offset`, параметры `page_number` и `page_size` игнорируются.  `offset` игнорируется, если задан `page_token`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetHiddenOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о скрытых вами товарах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getHiddenOffers();

    /**
     * <p>Получение информации о заполненности карточек магазина</p>
     *
     * <p>Возвращает сведения о состоянии контента для заданных товаров:  * создана ли карточка товара и в каком она статусе; * заполненность карточки в процентах; * переданные характеристики товаров; * есть ли ошибки или предупреждения, связанные с контентом; * рекомендации по заполнению карточки.  |**⚙️ Лимит:** 600 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-cards" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOfferCardsContentStatusRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferCardsContentStatusResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о карточках указанных товаров.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOfferCardsContentStatus();

    /**
     * <p>Список товаров в каталоге</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  Для каждого товара, который вы размещаете на Маркете, возвращается информация о карточках Маркета, к которым привязан этот товар:  * Идентификатор текущей карточки (marketSku), карточки, которая проходит модерацию и последней отклоненной карточки. * Описание товара, которое указано на карточке Маркета. Например, размер упаковки и вес товара.  Результаты возвращаются постранично. Выходные данные содержат идентификатор следующей страницы.  {% note info %}  Количество товаров в каталоге магазина считается по данным за последние семь дней (не включая сегодня).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров в каталоге магазина * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offer-mapping-entries" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>offer_id</b>"
     * <p>Идентификатор товара в каталоге.</p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shop_sku</b>"
     * <p>Ваш SKU товара.  Параметр может быть указан несколько раз, например:  ``` ...shop_sku=123&shop_sku=129&shop_sku=141... ```  В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>mapping_kind</b>"
     * <p>Тип маппинга.</p>
     * <p>
     * - Parameter type: <b>{@link OfferMappingKindType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>status</b>"
     * <p>Фильтрация по статусу публикации товара:  * `READY` — товар прошел модерацию. * `IN_WORK` — товар проходит модерацию. * `NEED_CONTENT` — для товара без SKU на Маркете marketSku нужно найти карточку самостоятельно или создать ее. * `NEED_INFO` — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. * `REJECTED` — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары. * `SUSPENDED` — товар не прошел модерацию, так как Маркет пока не размещает подобные товары. * `OTHER` — товар не прошел модерацию по другой причине.  Можно указать несколько статусов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...status=READY,IN_WORK... ...status=READY&status=IN_WORK... ```  В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;OfferProcessingStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>availability</b>"
     * <p>Фильтрация по планам поставок товара:  * `ACTIVE` — поставки будут. * `INACTIVE` — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять. * `DELISTED` — архив: товар закончился на складе, и его поставок больше не будет.  Можно указать несколько значений в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...availability=INACTIVE,DELISTED... ...availability=INACTIVE&availability=DELISTED... ```  В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;OfferAvailabilityStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>category_id</b>"
     * <p>Фильтрация по идентификатору категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).  Можно указать несколько идентификаторов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...category_id=14727164,14382343... ...category_id=14727164&category_id=14382343... ```  В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;Integer&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>vendor</b>"
     * <p>Фильтрация по бренду товара.  Можно указать несколько брендов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...vendor=Aqua%20Minerale,Borjomi... ...vendor=Aqua%20Minerale&vendor=Borjomi... ```  Чтобы товар попал в результаты фильтрации, его бренд должен точно совпадать с одним из указанных в запросе. Например, если указан бренд Schwarzkopf, то в результатах не будет товаров Schwarzkopf Professional.  Если в названии бренда есть символы, которые не входят в таблицу ASCII (в том числе кириллические символы), используйте для них URL-кодирование. Например, пробел — %20, апостроф «'» — %27 и т. д. Подробнее см. в разделе [Кодирование URL русскоязычной Википедии](https://ru.wikipedia.org/wiki/URL#Кодирование_URL).  В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferMappingEntriesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о товарах в каталоге.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getOfferMappingEntries();

    /**
     * <p>Информация о товарах в каталоге</p>
     *
     * <p>Возвращает список товаров в каталоге, их категории на Маркете и характеристики каждого товара.  Можно использовать тремя способами: * задать список интересующих SKU; * задать фильтр — в этом случае результаты возвращаются постранично; * не передавать тело запроса, чтобы получить список всех товаров в каталоге.  |**⚙️ Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOfferMappingsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferMappingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о товарах в каталоге.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOfferMappings();

    /**
     * <p>Рекомендации Маркета, касающиеся цен</p>
     *
     * <p>Метод возвращает рекомендации нескольких типов.  **1. Порог для привлекательной цены. Он нужен для участия в софинансировании скидок.**  Показывает, какие **цены для участия** нужно установить, чтобы получить максимальные шансы на срабатывание скидок, софинансируемых Маркетом. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)  **2. Оценка привлекательности цен на витрине.**  Привлекательность влияет на вероятность срабатывания скидок за счет Маркета. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#validation)  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offers/recommendations" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOfferRecommendationsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferRecommendationsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров с рекомендациями.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOfferRecommendations();

    /**
     * <p>Предложения магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет фильтровать информацию о предложениях магазина, размещенных на Маркете, и искать предложения по заданному поисковому запросу.  Поиск предложений, размещенных на Маркете, работает по поисковому запросу аналогично поиску Маркета. Результаты возвращаются с использованием пейджера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Маркета, с которой соотнесено предложение, и аукционные ставки на него.  {% note info %}  Из-за особенностей поиска Маркета иногда на последних страницах пейджера фактическое количество результатов оказывается меньше количества, указанного ранее на предыдущих страницах.  В связи с этим настоятельно рекомендуется анализировать содержимое параметра pager для каждой полученной страницы.  {% endnote %}  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лисит товаров — среднее количество таваров в каталоге за неделю * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>query</b>"
     * <p>Поисковый запрос.  Поддерживается язык запросов.  Значение по умолчанию: все предложения магазина, размещенные на Маркете. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shopCategoryId</b>"
     * <p>Идентификатор категории предложения, указанный магазином в прайс-листе.  Параметр выводится только для предложений, у которых указана категория в прайс-листе.  Параметр доступен начиная с версии 2.0 партнерского API. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>currency</b>"
     * <p>Валюта, в которой указана цена предложения.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна. </p>
     * <p>
     * - Parameter type: <b>{@link CurrencyType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>matched</b>"
     * <p>Фильтр по признаку соотнесения предложения и карточки модели.  Возможные значения:  * `0 / FALSE / NO` — поиск выполняется среди предложений, не соотнесенных ни с какой карточкой модели.  * `1 / TRUE / YES` — поиск выполняется среди предложений, соотнесенных с карточками моделей). </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Предложения магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getOffers();

    /**
     * <p>Информация об одном заказе</p>
     *
     * <p>Возвращает информацию о заказе.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrderResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о заказе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrder();

    /**
     * <p>Информация о покупателе — юридическом лице</p>
     *
     * <p>Возвращает информацию о покупателе по идентификатору заказа.  {% note info \"\" %}  Чтобы получить информацию о покупателе, который является физическим лицом, воспользуйтесь запросом [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  {% endnote %}  Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY`, `PICKUP` или `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/{orderId}/business-buyer" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBusinessBuyerInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о покупателе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrderBusinessBuyerInfo();

    /**
     * <p>Информация о документах</p>
     *
     * <p>Возвращает информацию о документах по идентификатору заказа.  Получить данные можно после того, как заказ перейдет в статус `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/{orderId}/documents" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBusinessDocumentsInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о документах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrderBusinessDocumentsInfo();

    /**
     * <p>Данные для самостоятельного изготовления ярлыков</p>
     *
     * <p>Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/delivery/labels/data" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrderLabelsDataResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация для печати ярлыков.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrderLabelsData();

    /**
     * <p>Информация о нескольких заказах</p>
     *
     * <p>Возвращает информацию о заказах. Запрос можно использовать, чтобы узнать, нет ли новых заказов.  Доступна фильтрация по нескольким характеристикам заказов:  * дате оформления;  * статусу;  * идентификаторам заказов;  * этапу обработки или причине отмены;  * типу (настоящий или тестовый);  * дате отгрузки в службу доставки;  * дате и времени обновления заказа.  Информация о заказах, доставленных или отмененных больше 30 дней назад, не возвращается. Ее можно получить с помощью запроса информации об отдельном заказе [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) (если у вас есть идентификатор заказа) или запроса отчета по заказам [POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md).  Максимальный диапазон дат за один запрос к ресурсу — 30 дней. Максимальное количество заказов в выходных данных запроса — 50.  Результаты возвращаются постранично. Для навигации по страницам используйте параметры `page_token` и `limit`.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderIds</b>"
     * <p>Фильтрация заказов по идентификаторам. <br><br> ⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;Long&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>status</b>"
     * <p>Статус заказа:  * `CANCELLED` — заказ отменен.  * `DELIVERED` — заказ получен покупателем.  * `DELIVERY` — заказ передан в службу доставки.  * `PICKUP` — заказ доставлен в пункт самовывоза.  * `PROCESSING` — заказ находится в обработке.  * `UNPAID` — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).  Также могут возвращаться другие значения. Обрабатывать их не требуется. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link Set&lt;OrderStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>substatus</b>"
     * <p>Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).  Возможные значения для заказа в статусе `PROCESSING`:  * `STARTED` — заказ подтвержден, его можно начать обрабатывать. * `READY_TO_SHIP` — заказ собран и готов к отправке. * `SHIPPED` — заказ передан службе доставки.  Возможные значения для заказа в статусе `CANCELLED`:  * `DELIVERY_SERVICE_UNDELIVERED` — служба доставки не смогла доставить заказ.  * `PROCESSING_EXPIRED` — значение более не используется.  * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.  * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.  * `RESERVATION_FAILED` — Маркет не может продолжить дальнейшую обработку заказа.  * `SHOP_FAILED` — магазин не может выполнить заказ.  * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.  * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.  * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.  * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.  * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.  * `USER_UNREACHABLE` — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:    * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;   * перерыв между первым и третьим звонком не менее 90 минут;   * соединение не короче 5 секунд.    Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400. * `USER_WANTS_TO_CHANGE_DELIVERY_DATE` — покупатель хочет получить заказ в другой день. * `CANCELLED_COURIER_NOT_FOUND` — не удалось найти курьера.  Также могут возвращаться другие значения. Обрабатывать их не требуется. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link Set&lt;OrderSubstatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>fromDate</b>"
     * <p>Начальная дата для фильтрации заказов по дате оформления.  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной и конечной датой (параметр `toDate`) должно быть не больше 30 дней.  Значение по умолчанию: 30 дней назад от текущей даты. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>toDate</b>"
     * <p>Конечная дата для фильтрации заказов по дате оформления.  Показываются заказы, созданные до 00:00 указанного дня.  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной (параметр `fromDate`) и конечной датой должно быть не больше 30 дней.  Значение по умолчанию: текущая дата. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>supplierShipmentDateFrom</b>"
     * <p>Начальная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной и конечной датой (параметр `supplierShipmentDateTo`) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>supplierShipmentDateTo</b>"
     * <p>Конечная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной (параметр `supplierShipmentDateFrom`) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>updatedAtFrom</b>"
     * <p>Начальная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Между начальной и конечной датой (параметр `updatedAtTo`) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>updatedAtTo</b>"
     * <p>Конечная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Между начальной (параметр `updatedAtFrom`) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>dispatchType</b>"
     * <p>Способ отгрузки</p>
     * <p>
     * - Parameter type: <b>{@link OrderDeliveryDispatchType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>fake</b>"
     * <p>Фильтрация заказов по типам:  * `false` — настоящий заказ покупателя.  * `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>hasCis</b>"
     * <p>Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации [в системе «Честный ЗНАК»](https://честныйзнак.рф/):  * `true` — да.  * `false` — нет.  Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям. </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>onlyWaitingForCancellationApprove</b>"
     * <p>**Только для модели DBS**  Фильтрация заказов по наличию запросов покупателей на отмену.  При значение `true` возвращаются только заказы, которые находятся в статусе `DELIVERY` или `PICKUP` и которые пользователи решили отменить.  Чтобы подтвердить или отклонить отмену, отправьте запрос [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation). </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>onlyEstimatedDelivery</b>"
     * <p>Фильтрация заказов с долгой доставкой (31-60 дней) по подтвержденной дате доставки:  * `true` — возвращаются только заказы с неподтвержденной датой доставки. * `false` — фильтрация не применяется. </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>buyerType</b>"
     * <p>Фильтрация заказов по типу покупателя. </p>
     * <p>
     * - Parameter type: <b>{@link OrderBuyerType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrdersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о заказах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrders();

    /**
     * <p>Детальная информация по заказам</p>
     *
     * <p>Возвращает информацию по заказам на Маркете, в которых есть ваши товары. С помощью нее вы можете собрать статистику по вашим заказам и узнать, например, какие из товаров чаще всего возвращаются покупателями, какие, наоборот, пользуются большим спросом, какая комиссия начисляется за заказы и т. п.  {% note info \"\" %}  Раньше генерация детальной информации по заказам называлась **Отчет по заказам**. Сейчас это новый отчет. [Подробнее об отчете](../../reference/reports/generateUnitedOrdersReport.md)  {% endnote %}  В одном запросе можно получить информацию не более чем по 200 заказам.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/stats/orders" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOrdersStatsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrdersStatsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация по заказам.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrdersStats();

    /**
     * <p>Список цен</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST campaigns/{campaignId}/offer-prices](../../reference/assortment/getPricesByOfferIds.md).  {% endnote %}  Возвращает список цен, установленных вами на товары любым способом: например, через партнерский API или в файле с каталогом.  {% note info %}  Общее количество товаров считается по данным за последние семь дней (не включая сегодня) и не может быть выше 2 миллионов.  {% endnote %}  Способы установки цен описаны [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/assortment/operations/prices.html).  |**⚙️ Лимит:** ```(количество товаров партнера на витрине) * 25``` товаров в сутки| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offer-prices" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>archived</b>"
     * <p>Фильтр по нахождению в архиве.</p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPricesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список всех товаров с установленными ценами.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getPrices();

    /**
     * <p>Просмотр цен на указанные товары в магазине</p>
     *
     * <p>Возвращает список цен на указанные товары в магазине.  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для просмотра базовых цен используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров на витрине * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-prices" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetPricesByOfferIdsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPricesByOfferIdsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров с установленными для заданного магазина ценами.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getPricesByOfferIds();

    /**
     * <p>Получение списка товаров, которые участвуют или могут участвовать в акции</p>
     *
     * <p>Возвращает список товаров, которые участвуют или могут участвовать в акции.  {% note warning %}  В параметре `limit` не передавайте значение больше 500.  {% endnote %}  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetPromoOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPromoOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров, которые участвуют или могут участвовать в акции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getPromoOffers();

    /**
     * <p>Получение списка акций</p>
     *
     * <p>Возвращает информацию об акциях Маркета.  По умолчанию возвращаются акции, в которых продавец участвует или может принять участие.  Чтобы получить текущие или завершенные акции, передайте параметр `participation`.  Типы акций, которые возвращаются в ответе:  * прямая скидка; * флеш-акция; * скидка по промокоду.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetPromosRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPromosResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список акций Маркета.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getPromos();

    /**
     * <p>Заказы, которые повлияли на индекс качества</p>
     *
     * <p>Возвращает список заказов, которые повлияли на индекс качества магазина. Чтобы узнать значение индекса качества, выполните запрос [POST businesses/{businessId}/ratings/quality](../../reference/ratings/getQualityRatings.md).  |**⚙️ Лимит:** 100000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/ratings/quality/details" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQualityRatingDetailsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о заказах, которые повлияли на индекс качества.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getQualityRatingDetails();

    /**
     * <p>Индекс качества магазинов</p>
     *
     * <p>Возвращает значение индекса качества магазинов и его составляющие.  Подробнее об индексе качества читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/score/).  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/ratings/quality" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetQualityRatingRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQualityRatingResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Значение индекса качества магазинов и его составляющие.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getQualityRatings();

    /**
     * <p>Получение заданного отчета</p>
     *
     * <p>Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/reports/info/{reportId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>reportId</b>"
     * <p>Идентификатор отчета, который вы получили после запуска генерации. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetReportInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Статус генерации отчета и ссылка, если она уже есть.  {% note tip %}  Если статус генерации отчета — `FAILED` или `NO_DATA`, проверьте корректность запроса на генерацию. Например, верно ли указан идентификатор магазина, период или номер платежного поручения.  {% endnote %}    </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReportInfo();

    /**
     * <p>Информация о невыкупе или возврате</p>
     *
     * <p>Получает информацию по одному невыкупу или возврату.  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>returnId</b>"
     * <p>Идентификатор возврата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetReturnResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Детали возврата.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturn();

    /**
     * <p>Получение заявления на возврат</p>
     *
     * <p>Загружает заявление покупателя на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>returnId</b>"
     * <p>Идентификатор возврата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/octet-stream}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Заявление на возврат.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturnApplication();

    /**
     * <p>Получение фотографии возврата</p>
     *
     * <p>Получает фотографии, которые покупатель приложил к заявлению на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>returnId</b>"
     * <p>Идентификатор возврата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>itemId</b>"
     * <p>Идентификатор товара в возврате.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>imageHash</b>"
     * <p>Хеш ссылки изображения для загрузки.</p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/octet-stream}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Фотография возврата.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturnPhoto();

    /**
     * <p>Список невыкупов и возвратов</p>
     *
     * <p>Получает список невыкупов и возвратов.  Чтобы получить информацию по одному возврату или невыкупу, выполните запрос [GET campaigns/{campaignId}/orders/{orderId}/returns/{returnId}](../../reference/orders/getReturn.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/returns" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderIds</b>"
     * <p>Идентификаторы заказов — для фильтрации результатов.  Несколько идентификаторов перечисляются через запятую без пробела. Максимальное количество идентификаторов — 50. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;Long&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>statuses</b>"
     * <p>Статусы возвратов или невыкупов — для фильтрации результатов.  Несколько статусов перечисляются через запятую. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;RefundStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>type</b>"
     * <p>Тип заказа для фильтрации:  * `RETURN` — возврат.  * `UNREDEEMED` — невыкуп.  Если не указывать, в ответе будут и возвраты, и невыкупы. </p>
     * <p>
     * - Parameter type: <b>{@link ReturnType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>fromDate</b>"
     * <p>Начальная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: `ГГГГ-ММ-ДД`. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>toDate</b>"
     * <p>Конечная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: `ГГГГ-ММ-ДД`. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>from_date</b>"
     * <p>{% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `fromDate`.  {% endnote %}  Начальная дата для фильтрации возвратов или невыкупов по дате обновления. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>to_date</b>"
     * <p>{% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `toDate`.  {% endnote %}  Конечная дата для фильтрации возвратов или невыкупов по дате обновления. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetReturnsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Постраничные возвраты партнера.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturns();

    /**
     * <p>Информация об остатках и оборачиваемости</p>
     *
     * <p>Возвращает данные об остатках товаров (для всех моделей) и об [оборачиваемости](*turnover) товаров (для модели FBY).  {% note info \"По умолчанию данные по оборачивамости не возращаются\" %}  Чтобы они были в ответе, передавайте `true` в поле `withTurnover`.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-|  [//]: <> (turnover: Среднее количество дней, за которое товар продается. Подробно об оборачиваемости рассказано в Справке Маркета для продавцов https://yandex.ru/support/marketplace/analytics/turnover.html.) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers/stocks" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetWarehouseStocksRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetWarehouseStocksResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Остатки товаров на складах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getStocks();

    /**
     * <p>Рекомендованные карточки для товаров</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/suggestions](../../reference/business-assortment/getSuggestedOfferMappings.md).  {% endnote %}  Возвращает идентификаторы карточек товаров на Маркете, рекомендованных для ваших товаров.  Каждому товару, который вы размещаете, должна соответствовать карточка товара на Маркете со своим идентификатором — SKU на Маркете. Он указывается в URL карточки товара, после «...sku=», например:  ##https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016…##  Чтобы получить для товаров рекомендованные SKU на Маркете, передайте в теле POST-запроса как можно больше информации о них: названия, производителей, штрихкоды, цены и т. д.  Полученные SKU можно передать вместе с информацией о ваших товарах с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/updates](../../reference/offer-mappings/updateOfferMappingEntries.md).  В одном запросе можно получить не более 500 рекомендаций.  |**⚙️ Лимит:** 100 000 рекомендаций в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-mapping-entries/suggestions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetSuggestedOfferMappingEntriesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetSuggestedOfferMappingEntriesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о товарах в каталоге.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getSuggestedOfferMappingEntries();

    /**
     * <p>Просмотр карточек на Маркете, которые подходят вашим товарам</p>
     *
     * <p>Возвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.  Пользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточки по предоставленным вами данным.  **Как пользоваться запросом**  1. Передайте Маркету список товаров, которые нужно проверить. 2. В ответ вы получите список SKU на Маркете с расшифровкой: названием, идентификатором модели, категорией. 3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида `https://market.yandex.ru/product/<marketModelId>?sku=<marketSku>`. 4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать `marketSKU`, который ему подходит по вашему мнению.  {% note info \"𝓠 Как определить `marketSku` товара, найденного на Маркете?\" %}  𝓐 Он есть в адресе страницы товара — расположен после `sku=`.  Например, `https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016`  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/suggestions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetSuggestedOfferMappingsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetSuggestedOfferMappingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Подобранные карточки на Маркете.  По результатам проверки товара полученная через этот запрос карточка может быть заменена на другую. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getSuggestedOfferMappings();

    /**
     * <p>Цены для продвижения товаров</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [отчет «Цены на рынке»](../../reference/reports/generatePricesReport.md).  {% endnote %}  {% note warning \"\" %}  Этот метод подходит только тем магазинам, которые устанавливают цены на товары в рублях.  {% endnote %}  Возвращает цены для продвижения товаров, которые вы размещаете на Маркете.  Товары, для которых нужно получить цены, передаются в теле POST-запроса.  Цены для продвижения зависят от цен, установленных на товары другими партнерами. Если один товар поставляют несколько партнеров, на Маркете сначала продается товар с более низкой ценой. Когда закончится товар по низкой цене, начнет продаваться товар по более высокой цене.  Выходные данные содержат для каждого товара несколько цен, соответствующих разным типам продвижения.  Установить цены на товары можно с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md) или другими способами: например, указать их в файле с каталогом. Также вы можете использовать стратегии для автоматической установки рекомендованных цен или минимальных цен на Маркете.  Подробно об автоматическом управлении ценами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/prices.html).  |**⚙️ Лимит:** 100 000 товаров в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-prices/suggestions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SuggestPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link SuggestPricesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список цен для продвижения на Маркете.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getSuggestedPrices();

    /**
     * <p>Список складов и групп складов</p>
     *
     * <p>Возвращает список складов и, если склады объединены, список групп складов. [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)  Среди прочего запрос позволяет определить идентификатор, который нужно использовать при передаче остатков для группы складов.  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/businesses/{businessId}/warehouses" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetWarehousesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список складов и групп складов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getWarehouses();

    /**
     * <p>Передача кодов маркировки единиц товара</p>
     *
     * <p>{% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Передает Маркету коды маркировки для единиц товара в указанном заказе.  Принимаются коды следующих типов:  * Коды «Честного знака». * УИН для ювелирных изделий. * РНПТ и ГТД для импортных прослеживаемых товаров.  {% note warning %}  Прежде чем работать с этим методом, обязательно прочтите [статью о работе с маркируемыми товарами](https://yandex.ru/support/marketplace/orders/cz.html).  {% endnote %}  Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/identifiers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ProvideOrderItemIdentifiersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link ProvideOrderItemIdentifiersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что коды успешно записались. Ответ содержит краткие сведения о промаркированных товарах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler provideOrderItemIdentifiers();

    /**
     * <p>Включение буста продаж и установка ставок</p>
     *
     * <p>Запускает буст продаж — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  {% cut \"Как в кабинете выглядит кампания, созданная через API\" %}  ![](../../_images/api-boost.png)  {% endcut %}  При первом использовании запроса Маркет: создаст единую на все магазины бизнес-аккаунта кампанию, добавит в нее товары с указанными ставками, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же созданной через API кампанией. Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. Другими кампаниями управлять через API не получится. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/businesses/{businessId}/bids" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link PutSkuBidsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Все получилось: ставки установлены или обновлены. Если нужно, добавлены новые товары и запущена кампания. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler putBidsForBusiness();

    /**
     * <p>Включение буста продаж и установка ставок для магазина</p>
     *
     * <p>Запускает буст продаж в указанном магазине — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  При первом использовании запроса Маркет: создаст кампанию, добавит в нее товары с указанными ставками для заданного магазина, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же кампанией, созданной через этот запрос или [PUT businesses/{businessId}/bids](/reference/bids/putBidsForBusiness). Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/bids" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link PutSkuBidsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler putBidsForCampaign();

    /**
     * <p>Сообщить, что прайс-лист обновился</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет сообщить, что магазин обновил прайс-лист. После этого Маркет начнет обновление данных на сервисе. 1. Магазин обновляет прайс-лист, ссылку на который он указал в кабинете. 2. Магазин отправляет Маркету запрос методом `POST campaigns/{campaignId}/feeds/{feedId}/refresh`. 3. Маркет начинает обновление данных магазина на сервисе.  {% note alert %}  Запрос работает только для включенных магазинов. Если магазин выключен, данные на Маркете не обновятся, даже если HTTP-код — `200 OK`. Проверить статус магазина можно с помощью базовых запросов или на странице бизнес-аккаунта.  {% endnote %}  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/feeds/{feedId}/refresh" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler refreshFeed();

    /**
     * <p>Информация о дочерних регионах</p>
     *
     * <p>Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/regions/{regionId}/children" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetRegionWithChildrenResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Регионы, являющиеся дочерними к указанному в запросе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchRegionChildren();

    /**
     * <p>Информация о регионе</p>
     *
     * <p>Возвращает информацию о регионе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/regions/{regionId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetRegionsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Найденный регион.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchRegionsById();

    /**
     * <p>Поиск регионов по их имени</p>
     *
     * <p>Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.  Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/regions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>name</b>"
     * <p>Название региона.  Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, `Москва`. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetRegionsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список найденных регионов.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchRegionsByName();

    /**
     * <p>Отправка файла в чат</p>
     *
     * <p>Отправляет файл в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/file/send" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chatId</b>"
     * <p>Идентификатор чата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>file</b>"
     * <p>Содержимое файла. Максимальный размер файла — 5 Мбайт.</p>
     * <p>
     * - Parameter type: <b>BinaryFile</b><br/>
     * - Appears in: <b>{@link io.undertow.server.handlers.form.FormDataParser Form}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{mediaType=multipart/form-data}]</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ. Означает, что файл отправлен.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler sendFileToChat();

    /**
     * <p>Отправка сообщения в чат</p>
     *
     * <p>Отправляет сообщение в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/message" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chatId</b>"
     * <p>Идентификатор чата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SendMessageToChatRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ. Означает, что сообщение отправлено.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler sendMessageToChat();

    /**
     * <p>Изменение параметров прайс-листа</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет магазину изменить параметры прайс-листа.  Чтобы отредактировать параметр прайс-листа, передайте в теле запроса: `name` (название параметра) и `value` (значение параметра).  Чтобы отменить установленное значение, передайте в теле запроса: `name` (название параметра) и `delete=true` (удалить значение).  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/feeds/{feedId}/params" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetFeedParamsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Статус выполнения операции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler setFeedParams();

    /**
     * <p>Подготовка заказа</p>
     *
     * <p>{% note tip \"Подходит и для DBS\" %}  Запрос предназначен для работы с FBS-заказами, но вы можете использовать его для обработки DBS-заказов, если это удобно.  {% endnote %}  Позволяет выполнить три операции:  * передать Маркету информацию о распределении товаров по коробкам; * передать Маркету коды маркировки для товаров; * удалить товар из заказа, если его не оказалось на складе.  Если нужно что-то поправить в переданных данных, просто повторите запрос — это можно делать сколько угодно раз до перевода заказа в статус **Готов к отгрузке**. ⚠️ Если вы меняете раскладку уже после печати и расклейки ярлыков, не забудье перепечатать их и наклеить заново.  ## Как передать информацию о распределении товаров  В этом запросе вам нужно передать Маркету список коробок и указать, какие именно товары лежат в каждой из них. Коробки могут быть двух типов:  * **Содержащие товары целиком.** Такая коробка может содержать сколько угодно единиц любых товаров.  * **Содержащие часть товара.** Такие коробки содержат по одной части одного товара. Например, одна содержит внешний блок кондиционера, а другая — внутренний блок.  ⚠️ Одна коробка не может содержать и товары целиком, и части товаров.  ## Как передавать коды маркировки  Если в заказе есть товары, подлежащие маркировке, в запросе нужно передать соответствующие уникальные коды. [Что такое маркировка?](https://yandex.ru/support/marketplace/orders/cz.html)  Принимаются коды следующих типов:  * Коды «Честного знака». * УИН для ювелирных изделий. * РНПТ и ГТД для импортных прослеживаемых товаров.  Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.  Если товар едет в нескольких коробках, код маркировки нужно передать для каждой из них.  ## Как удалить товар из заказа  Чтобы удалить товар из заказа:  1. Добавьте в запрос `allowRemove: true`. 2. Передайте распределение по коробкам без товара, который нужно удалить.  {% note warning \"Удаление нельзя отменить\" %}  Эта операция необратима: покупатель сразу получит уведомление, а состав заказа изменится.  {% endnote %}  Чтобы удалить позицию целиком, не передавайте соответствующий `OrderBoxLayoutItemDTO`. Чтобы уменьшить количество товара, передайте уменьшенное значение в поле `fullCount`.  Нельзя удалить или уменьшить количество товара, если он:  * добавлен по акции; * составляет 99% стоимости заказа; * единственный товар в заказе.  Если вы не можете отгрузить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.  {% note info \"Увеличить заказ нельзя\" %}  С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.  {% endnote %}  ## Примеры  {% cut \"Товар умещается в коробку\" %}  Вот как будет выглядеть запрос, если в одной коробке едут:    * три единицы одного товара, требующего маркировки;   * одна единица другого товара, не требущего маркировки.    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"fullCount\": 3,                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           },                           {                               \"cis\": \"010304109478gftJ14545762!\\u001dhGt264\"                           },                           {                               \"cis\": \"010304109478fRs28323ks23!\\u001dhet201\"                           }                       ]                   },                   {                       \"id\": 654321,                       \"fullCount\": 1                   }               ]           }       ]   }   ```  {% endcut %}  {% cut \"Товар едет в разных коробках\" %}  Вот как будет выглядеть запрос, если товар едет в двух коробках:    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           }       ]   }   ```  {% endcut %}  {% cut \"Одинаковые товары, где каждый едет в нескольких коробках\" %}  Вот как будет выглядеть запрос, если каждый из двух одинаковых товаров едет в двух коробках:    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           }       ]   }   ```  {% endcut %}  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/boxes" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetOrderBoxLayoutRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link SetOrderBoxLayoutResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ придет переданная раскладка с идентификаторами коробок — они понадобятся для запроса ярлыков. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler setOrderBoxLayout();

    /**
     * <p>Передача количества грузовых мест в заказе</p>
     *
     * <p>{% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Отгружаемый Маркету заказ может не влезть в одну коробку или упаковку — в этом случае получается, что он занимает несколько грузовых мест.  Количество грузовых мест нужно обязательно передавать Маркету, если оно не равно 1. Это делается перед переводом его в статус **Готов к отгрузке**. Подробно о том, что в какой момент нужно передавать, рассказано в [пошаговой инструкции](../../step-by-step/fbs.md).  Метод устроен немного нестандартно: количество задается длиной массива пустых объектов.  Раньше метод требовал передачи большего количества данных. Запросы, оформленные по старому образцу, работают, но лучше делать по-новому.  {% cut \"Как было раньше\" %}  Структура тела PUT-запроса:  ``` {   \"boxes\":   [     {       \"fulfilmentId\": \"{string}\",       \"weight\": {int64},       \"width\": {int64},       \"height\": {int64},       \"depth\": {int64},       \"items\":       [         {           \"id\": {int64},           \"count\": {int32}         },         ...       ]     },     ...   ] } ``` | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `boxes`       |           | Список грузовых мест.       |  **Параметры, вложенные в `boxes`** | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `fulfilmentId`       |  String   | Идентификатор грузового места в информационной системе магазина. Сформируйте идентификатор по шаблону: `номер заказа на Маркете-номер грузового места`. Например, `7206821‑1, 7206821‑2` и т. д. | | `weight`       | Int64        | Масса брутто грузового места (суммарная масса упаковки и содержимого) в граммах. | | `width`       | Int64   | Ширина грузового места в сантиметрах.       | | `height`       | Int64   | Высота грузового места в сантиметрах.       | | `depth`       | Int64   | Глубина грузового места в сантиметрах.        | | `items`       | Int64   | Список товаров в грузовом месте.       |  **Параметры, вложенные в `items`** | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `id`       | Int64     | Идентификатор товара в рамках заказа.   | | `count`    | Int32     | Количество единиц товара в грузовом месте.       |  {% endcut %}  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Параметр больше не используется. Вставьте любое число — просто чтобы получился корректный URL. </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetOrderShipmentBoxesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link SetOrderShipmentBoxesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Имеет значение только тип ответа. Если ответ `ОК`, количество грузомест записано.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler setOrderShipmentBoxes();

    /**
     * <p>Отказ от ответа на отзывы</p>
     *
     * <p>Пропускает отзывы — они больше не будут возвращаться в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/skip-reaction" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SkipGoodsFeedbackReactionRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler skipGoodsFeedbacksReaction();

    /**
     * <p>Установка цен на товары во всех магазинах</p>
     *
     * <p>Устанавливает [базовые цены](*default-price). Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-prices/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateBusinessPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Маркет принял информацию о новых ценах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateBusinessPrices();

    /**
     * <p>Изменение условий продажи товаров в магазине</p>
     *
     * <p>Изменяет параметры продажи товаров в конкретном магазине: доступность товара, условия доставки и самовывоза, применяемую ставку НДС.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateCampaignOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что новые параметры получены Маркетом и скоро вступят в силу.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateCampaignOffers();

    /**
     * <p>Добавление нового или изменение созданного комментария</p>
     *
     * <p>Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.  Для создания комментария к отзыву передайте только идентификатор отзыва `feedbackId`.  Чтобы добавить комментарий к другому комментарию, передайте:  * `feedbackId` — идентификатор отзыва; * `comment.parentId` — идентификатор родительского комментария.  Чтобы изменить комментарий, передайте:  * `feedbackId`— идентификатор отзыва; * `comment.id` — идентификатор комментария, который нужно изменить.  Если передать одновременно `comment.parentId` и `comment.id`, будет изменен существующий комментарий.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/comments/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateGoodsFeedbackCommentRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateGoodsFeedbackCommentResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о добавленном или измененном комментарии.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateGoodsFeedbackComment();

    /**
     * <p>Редактирование категорийных характеристик товара</p>
     *
     * <p>Редактирует характеристики товара, которые специфичны для категории, к которой он относится.  {% note warning \"Здесь только то, что относится к конкретной категории\" %}  Если вам нужно изменить основные параметры товара (название, описание, изображения, видео, производитель, штрихкод), воспользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Чтобы удалить характеристики, которые заданы в параметрах с типом `string`, передайте пустое значение.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-cards/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOfferContentRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateOfferContentResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Запрос выполнен корректно, данные обработаны.  {% note warning \"Ответ 200 сам по себе не значит, что переданные значения корректны\" %}  Обязательно посмотрите детали ответа: `status` и перечень ошибок, если он есть.  Даже если ошибка допущена в характеристиках всего одного товара, никакие изменения из запроса в каталог не попадут.  {% endnote %}  Если в `status` вернулось `ERROR`, убедитесь, что:  * все обязательные характеристики заполнены; * характеристики действительно существуют в указанных категориях; * значения соответствуют характеристикам; * ваши собственные значения имеют нужный тип данных.  Найти проблемы помогут поля `errors` и `warnings`. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOfferContent();

    /**
     * <p>Добавление и редактирование товаров в каталоге</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Добавляет товары, указанные в запросе, в ваш каталог товаров и редактирует уже имеющиеся товары.  Информацию о товарах нужно передать в теле POST-запроса.  У каждого товара должен быть ваш SKU — уникальный код, который вы используете для идентификации товара:  * Чтобы добавить в каталог новый товар, укажите в параметре `shopSku` ваш SKU, которого еще нет в каталоге. * Чтобы отредактировать товар из каталога, укажите в параметре `shopSku` ваш SKU этого товара в каталоге.  В обоих случаях в запросе нужно передать полное описание товара, даже если вы хотите изменить только несколько характеристик.  Если вы знаете, какой карточке товара на Маркете соответствует ваш товар, укажите ее идентификатор (SKU на Маркете) во входном параметре mapping. Получить SKU на Маркете рекомендованной карточки товара можно с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/suggestions](../../reference/offer-mappings/getSuggestedOfferMappingEntries.md) или через кабинет. Если SKU на Маркете не указан, сотрудники Маркета сами подберут или создадут подходящую карточку товара, либо у него появится статус `NEED_CONTENT` (нужно найти карточку или создать ее самостоятельно) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  Перед публикацией товары проходят модерацию. Если в одном из отправленных товаров найдена ошибка, ответ на запрос будет иметь HTTP-код 400 Bad Request, и ни один из товаров не отправится на модерацию. При этом если вы не передадите все обязательные параметры для какого‑либо товара, после модерации у него появится статус `NEED_INFO` (в описании товара не хватает информации) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  В одном запросе можно добавить не более 500 товаров.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5 000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-mapping-entries/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOfferMappingEntryRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Статус выполнения операции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler updateOfferMappingEntries();

    /**
     * <p>Добавление товаров в каталог и изменение информации о них</p>
     *
     * <p>Добавляет товары в каталог, передает их категории на Маркете и характеристики, необходимые для этих категории. Также редактирует информацию об уже имеющихся товарах.  Список категорий Маркета можно получить с помощью запроса [POST categories/tree](../../reference/categories/getCategoriesTree.md), а характеристики товаров по категориям с помощью [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).  Чтобы **добавить новый товар**, передайте его с новым идентификатором, который раньше никогда не использовался в каталоге. Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой. Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**SKU на Маркете**) в поле `marketSKU`.  Для **новых товаров** обязательно укажите параметры: `offerId`, `name`, `marketCategoryId` или `category`, `pictures`, `vendor`, `description`.  Чтобы **отредактировать информацию о товаре**, передайте новые данные, указав в `offerId` соответствующий **ваш SKU**. Поля, в которых ничего не меняется, можно не передавать.  Чтобы **удалить характеристики**, которые заданы в параметрах с типом `string`, передайте пустое значение.  Параметр `offerId` должен быть **уникальным** для всех товаров, которые вы передаете.  {% note warning \"Правила использования SKU\" %}  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOfferMappingsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateOfferMappingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Все обязательные поля товаров заполнены, поэтому новые товары и внесенные изменения сохранены в каталоге. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOfferMappings();

    /**
     * <p>Удаление товара из заказа или уменьшение числа единиц</p>
     *
     * <p>{% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Изменяет состав заказа, если позволяет выбранная служба доставки, в случаях:  * покупатель уменьшил количество товара; * магазин не может поставить все товары в заказе.  Для этого заказ должен находится в статусе `\"status\": \"PROCESSING\"` этапа обработки `\"substatus\": \"STARTED\"`. После передачи статуса `\"substatus\": \"READY_TO_SHIP\"` изменить состав невозможно.  Если одинаковых товаров несколько, для уменьшения количества передайте обновленное значение в атрибуте `count` параметра `item`.  Чтобы полностью удалить товар из заказа:  * передайте значение `0`; или * не передавайте параметр `item`.  Нельзя удалить или уменьшить количество товара, если он:  * добавлен по акции; * составляет 99% стоимости заказа; * единственный товар в заказе.  Если необходимо удалить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.  {% note info \"Увеличить заказ нельзя\" %}  С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.  {% endnote %}  **Возврат денег покупателю**  Если покупатель оплатил товар при оформлении, Маркет вернет ему деньги за удаленные из заказа товары в течение двух дней:  * при оплате банковской картой — с момента, когда магазин переведет заказ в статус `SHIPPED`;  * при оплате через Apple Pay или Google Pay — с момента, когда магазин удалит товар из заказа.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/items" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOrderItemRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Маркет успешно обработал ваш запрос. Выходные данные не ожидаются.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOrderItems();

    /**
     * <p>Изменение статуса одного заказа</p>
     *
     * <p>Изменяет статус заказа. Возможные изменения статусов:  * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`. * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`. * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/status" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOrderStatusRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateOrderStatusResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В случае успешного изменения статуса заказа возвращается обновленная информация о заказе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOrderStatus();

    /**
     * <p>Изменение статусов нескольких заказов</p>
     *
     * <p>Изменяет статусы нескольких заказов.  Возможные изменения статусов:  * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"`и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`. * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`. * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.  Максимальное количество заказов, у которых можно изменить статус в одном запросе, — 30.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/status-update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOrderStatusesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateOrderStatusesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Возвращается информация об обновленных статусах заказов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOrderStatuses();

    /**
     * <p>Установка цен на товары в конкретном магазине</p>
     *
     * <p>Устанавливает цены на товары в магазине. Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для управления базовыми ценами используйте [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-prices/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdatePricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Маркет принял информацию о новых ценах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updatePrices();

    /**
     * <p>Добавление товаров в акцию или изменение их цен</p>
     *
     * <p>Добавляет товары в акцию или изменяет цены на товары, которые участвуют в акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos/offers/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdatePromoOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdatePromoOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Результат добавления товаров в акцию или обновления их цен.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updatePromoOffers();

    /**
     * <p>Передача информации об остатках</p>
     *
     * <p>Передает данные об остатках товаров на витрине.  Обязательно указывайте SKU **в точности** так, как он указан в каталоге. Например, _557722_ и _0557722_ — это два разных SKU.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/offers/stocks" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateStocksRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateStocks();

    /**
     * <p>Передача кода подтверждения</p>
     *
     * <p>Отправляет Маркету код подтверждения для его проверки.  Код подтверждает передачу заказа или невыкупа:  * курьеру — курьер должен назвать магазину код; * магазину — магазин называет код курьеру.  Если магазин получает невыкупленный заказ, то ему нужно назвать курьеру код из кабинета или приложения.  Если у магазина настроена работа с кодами подтверждения, в запросах [POST order/status](../../pushapi/reference/postOrderStatus.md), [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md), [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md), [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) в параметре `delivery`, вложенном в `order` будет возвращаться параметр `eacType` с типом `Enum` — тип кода подтверждения для передачи заказа.  Возможные значения: `MERCHANT_TO_COURIER` — магазин называет код курьеру, `COURIER_TO_MERCHANT` — курьер называет код магазину.  Параметр `eacType` возвращается при статусах заказа `COURIER_FOUND`, `COURIER_ARRIVED_TO_SENDER` и `DELIVERY_SERVICE_UNDELIVERED`. Если заказ в других статусах, параметр может отсутствовать.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/verifyEac" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link VerifyOrderEacRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link VerifyOrderEacResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Проверка кода выполнена успешно.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler verifyOrderEac();

    /**
     * <p>Скрытие товаров и настройки скрытия</p>
     *
     * <p>Скрывает товары магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/hidden-offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link AddHiddenOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Настройки скрытия получены и скоро вступят в силу.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler addHiddenOffers();

    /**
     * <p>Добавление товаров в архив</p>
     *
     * <p>Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.  {% note warning \"В архив нельзя отправить товар, который хранится на складе Маркета\" %}  Вначале такой товар нужно распродать или вывезти.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/archive" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link AddOffersToArchiveRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link AddOffersToArchiveResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если некоторые товары добавить в архив не удалось, в ответе 200 будет их список.  Список успешно добавленных товаров не возвращается. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler addOffersToArchive();

    /**
     * <p>Калькулятор стоимости услуг</p>
     *
     * <p>Рассчитывает стоимость услуг Маркета для товаров с заданными параметрами. Порядок товаров в запросе и ответе сохраняется, чтобы определить, для какого товара рассчитана стоимость услуги.  Обратите внимание: калькулятор осуществляет примерные расчеты. Финальная стоимость для каждого заказа зависит от предоставленных услуг.  В запросе можно указать либо параметр `campaignId`, либо `sellingProgram`. Совместное использование параметров приведет к ошибке.  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/tariffs/calculate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link CalculateTariffsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link CalculateTariffsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Стоимость услуг.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler calculateTariffs();

    /**
     * <p>Удаление товара из карантина по цене в кабинете</p>
     *
     * <p>Подтверждает основную цену на товары, которые попали в карантин, и удаляет их из карантина.  Основная цена задается в каталоге и действует во всех магазинах кабинета.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/price-quarantine/confirm" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ConfirmPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что цены подтверждены.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler confirmBusinessPrices();

    /**
     * <p>Удаление товара из карантина по цене в магазине</p>
     *
     * <p>Подтверждает в заданном магазине цену на товары, которые попали в карантин, и удаляет их из карантина.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/price-quarantine/confirm" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ConfirmPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что цены подтверждены.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler confirmCampaignPrices();

    /**
     * <p>Подтверждение отгрузки</p>
     *
     * <p>Подтверждает отгрузку товаров в сортировочный центр или пункт приема заказов. |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/confirm" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ConfirmShipmentRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler confirmShipment();

    /**
     * <p>Создание нового чата с покупателем</p>
     *
     * <p>Создает новый чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/new" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link CreateChatRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link CreateChatResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Все получилось: чат создан. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler createChat();

    /**
     * <p>Удаление товаров из ассортимента магазина</p>
     *
     * <p>Удаляет заданные товары из заданного магазина.  {% note warning \"Запрос удаляет товары именно из конкретного магазина\" %}  На продажи в других магазинах и на наличие товара в общем каталоге он не влияет.  {% endnote %}  Товар не получится удалить, если он хранится на складах Маркета.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteCampaignOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeleteCampaignOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если удалось удалить не все товары, с ответом 200 вернется список тех, что были в запросе, но остались в магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteCampaignOffers();

    /**
     * <p>Удаление комментария к отзыву</p>
     *
     * <p>Удаляет комментарий магазина.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/comments/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteGoodsFeedbackCommentRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteGoodsFeedbackComment();

    /**
     * <p>Возобновление показа товаров</p>
     *
     * <p>Возобновляет показ скрытых вами товаров магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/hidden-offers/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteHiddenOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Показ товаров возобновлен.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteHiddenOffers();

    /**
     * <p>Удаление товаров из каталога</p>
     *
     * <p>Удаляет товары из каталога.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeleteOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если удалось удалить не все товары, с ответом 200 вернется список тех, что были в запросе, но остались в магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteOffers();

    /**
     * <p>Удаление товаров из архива</p>
     *
     * <p>Восстанавливает товары из архива.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/unarchive" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteOffersFromArchiveRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeleteOffersFromArchiveResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если некоторые товары восстановить из архива не удалось, в ответе 200 будет их список.  Список успешно восстановленных товаров не возвращается. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteOffersFromArchive();

    /**
     * <p>Удаление товаров из акции</p>
     *
     * <p>Убирает товары из акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos/offers/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeletePromoOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeletePromoOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Результат удаления товаров из акции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deletePromoOffers();

    /**
     * <p>Получение акта приема-передачи</p>
     *
     * <p>{% note warning \"Экспресс‑доставка\" %}  Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам Яндекс Go, подготавливать акт приема‑передачи не нужно.  {% endnote %}  Запрос формирует акт приема-передачи заказов, входящих в отгрузку, и возвращает акт в формате PDF. В акте содержатся собранные и готовые к отправке заказы.  При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:  {% cut \"Данные, из которых Маркет формирует акт\" %}  | **Данные в акте**                                         | **Описание**                                                                                                                                                                                                                                                         | | --------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Дата                                                      | Дата запроса.                                                                                                                                                                                                                                                        | | Отправитель                                               | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         | | Исполнитель                                               | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                | | № отправления в системе заказчика                         | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              | | № отправления в системе исполнителя (субподрядчика)       | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             | | Объявленная ценность                                      | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       | | Вес                                                       | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). | | Количество мест                                           | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |  {% endcut %}  Остальные поля нужно заполнить самостоятельно в распечатанном акте. |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/act" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/pdf}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Акт приема-передачи для отгрузки в формате PDF.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler downloadShipmentAct();

    /**
     * <p>Получение акта расхождений</p>
     *
     * <p>Возвращает акт расхождений для заданной отгрузки. |**⚙️ Лимит:** 200 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/discrepancy-act" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/vnd.ms-excel}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Акт расхождений в формате XLSX.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler downloadShipmentDiscrepancyAct();

    /**
     * <p>Получение фактического акта приема-передачи</p>
     *
     * <p>Возвращает фактический акт приема-передачи для заданной отгрузки.  Такой акт становится доступен спустя несколько часов после завершения отгрузки. Он может понадобиться, если после отгрузки обнаружатся расхождения.  |**⚙️ Лимит:** 200 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/inbound-act" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/pdf}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Акт в формате PDF.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler downloadShipmentInboundAct();

    /**
     * <p>Ярлыки для доверительной приемки (FBS)</p>
     *
     * <p>PDF-файл с ярлыками на каждый короб или палету в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).  Распечатайте по несколько копий каждого ярлыка: на одну тару нужно наклеить минимум 2 ярлыка с разных сторон.  Количество упаковок в отгрузке задается в запросе [PUT campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets](../../reference/shipments/setShipmentPalletsCount.md). |**⚙️ Лимит:** 200 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат страниц PDF-файла с ярлыками:  * `A4` — по 16 ярлыков на странице. * `A8` — по одному ярлыку на странице. </p>
     * <p>
     * - Parameter type: <b>{@link ShipmentPalletLabelPageFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>A8</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/pdf}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: PDF‑файл с ярлыками на все упаковки в отгрузке.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler downloadShipmentPalletLabels();

    /**
     * <p>Подтверждение ближайшей отгрузки и получение акта приема-передачи для нее</p>
     *
     * <p>Запрос подтверждает ближайшую отгрузку и возвращает акт приема-передачи в формате PDF.  {% note warning \"Экспресс‑доставка\" %}  Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам [Яндекс Go](https://go.yandex/), подготавливать акт приема‑передачи не нужно.  {% endnote %}  В акт входят собранные и готовые к отправке заказы, которые отгружаются в сортировочный центр или пункт приема или курьерам Маркета.  При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:  {% cut \"Данные, из которых Маркет формирует акт\" %}  | **Данные в акте**                                   | **Описание**                                                                                                                                                                                                                                                         | | --------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Отправитель                                         | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         | | Исполнитель                                         | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                | | № отправления в системе заказчика                   | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              | | № отправления в системе исполнителя (субподрядчика) | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             | | Объявленная ценность                                | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       | | Стоимость всех товаров в заказе                     | Стоимость всех заказанных товаров.                                                                                                                                                                                                                                   | | Вес                                                 | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). | | Количество мест                                     | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |  {% endcut %}  Остальные поля нужно заполнить самостоятельно в распечатанном акте. |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/shipments/reception-transfer-act" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>warehouse_id</b>"
     * <p>Идентификатор склада.</p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/pdf}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Акт приема-передачи в формате PDF.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler downloadShipmentReceptionTransferAct();

    /**
     * <p>Получение транспортной накладной</p>
     *
     * <p>Возвращает транспортную накладную для заданной отгрузки.  Транспортная накладная понадобится, если вы отгружаете товары непосредственно со своего склада. [Подробно об этом способе отгрузки](https://yandex.ru/support/marketplace/orders/fbs/settings/shipment.html#at-your-warehouse)  |**⚙️ Лимит:** 200 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/transportation-waybill" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/vnd.ms-excel}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Транспортная накладная в формате XLSX.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler downloadShipmentTransportationWaybill();

    /**
     * <p>Отчет по бусту продаж</p>
     *
     * <p>Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/boost-consolidated/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateBoostConsolidatedRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateBoostConsolidatedReport();

    /**
     * <p>Отчет «Конкурентная позиция»</p>
     *
     * <p>Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \"Значение -1 в отчете\" %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/competitors-position/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateCompetitorsPositionReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateCompetitorsPositionReport();

    /**
     * <p>Отчет по отзывам о товарах</p>
     *
     * <p>Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/goods-feedback/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateGoodsFeedbackRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateGoodsFeedbackReport();

    /**
     * <p>Отчет по реализации</p>
     *
     * <p>Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/goods-realization/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateGoodsRealizationReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateGoodsRealizationReport();

    /**
     * <p>Готовые ярлыки‑наклейки на все коробки в нескольких заказах</p>
     *
     * <p>Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/documents/labels/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7.</p>
     * <p>
     * - Parameter type: <b>{@link PageFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateMassOrderLabelsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый файл.  Если при генерации не удалось найти часть заказов, в ответе на запрос получения готового файла вернется подстатус `RESOURCE_NOT_FOUND`. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateMassOrderLabelsReport();

    /**
     * <p>Готовый ярлык‑наклейка для коробки в заказе</p>
     *
     * <p>Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор грузоместа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>boxId</b>"
     * <p>Идентификатор коробки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>format</b>"
     * <p>Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.</p>
     * <p>
     * - Parameter type: <b>{@link PageFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/pdf}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: PDF‑файл с ярлыками для коробки. Файл содержит одну страницу с ярлыком.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateOrderLabel();

    /**
     * <p>Готовые ярлыки‑наклейки на все коробки в одном заказе</p>
     *
     * <p>Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/delivery/labels" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>format</b>"
     * <p>Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.</p>
     * <p>
     * - Parameter type: <b>{@link PageFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/pdf}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: PDF‑файл с ярлыками на все коробки.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateOrderLabels();

    /**
     * <p>Отчет «Цены на рынке»</p>
     *
     * <p>Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/prices/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GeneratePricesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generatePricesReport();

    /**
     * <p>Отчет по полкам</p>
     *
     * <p>Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/shelf-statistics/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateShelfsStatisticsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateShelfsStatisticsReport();

    /**
     * <p>Получение листа сборки</p>
     *
     * <p>Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/documents/shipment-list/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateShipmentListDocumentReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый документ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateShipmentListDocumentReport();

    /**
     * <p>Отчет «Аналитика продаж»</p>
     *
     * <p>Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/shows-sales/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateShowsSalesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateShowsSalesReport();

    /**
     * <p>Отчет по остаткам на складах</p>
     *
     * <p>Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/stocks-on-warehouses/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateStocksOnWarehousesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateStocksOnWarehousesReport();

    /**
     * <p>Отчет по стоимости услуг</p>
     *
     * <p>Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |-----------------------------|---------------------------------| |По дате начисления услуги    |`dateFrom` и `dateTo`            | |По дате формирования акта    |`year` и `month`                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/united-marketplace-services/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateUnitedMarketplaceServicesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateUnitedMarketplaceServicesReport();

    /**
     * <p>Отчет по платежам</p>
     *
     * <p>Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |-------------------------|---------------------------------------| |О платежах за период     |`dateFrom` и `dateTo`                  | |О платежном поручении    |`bankOrderId` и `bankOrderDateTime`    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/united-netting/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateUnitedNettingReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateUnitedNettingReport();

    /**
     * <p>Отчет по заказам</p>
     *
     * <p>Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \"\" %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/united-orders/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateUnitedOrdersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateUnitedOrdersReport();

    /**
     * <p>Все предложения магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет максимально быстро получить информацию обо всех предложениях магазина, размещенных на Маркете. Возвращает результат в виде сегментов нефиксированного размера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Яндекс Маркета, с которой соотнесено предложение, а также аукционные ставки на него.  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — среднее количество таваров в каталоге за неделю * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offers/all" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chunk</b>"
     * <p>Номер сегмента с результатами.  Значение по умолчанию: `0`.  {% note info %}  Номера сегментов запрашиваются последовательно, пока не будет получен сегмент с пустым ответом. Пустой ответ означает, что все предложения магазина получены.  {% endnote %}  {% note alert %}  Нумерация начинается с 0. Чтобы запросить первую страницу, необходимо указать `chunk=0` и т. д.  {% endnote %} </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetAllOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Предложения магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getAllOffers();

    /**
     * <p>Информация об установленных ставках</p>
     *
     * <p>Возвращает значения ставок для заданных товаров.  {% note warning \"\" %}  В ответе возвращаются значения только тех ставок, которые вы установили через запрос [PUT businesses/{businessId}/bids](../../reference/bids/putBidsForBusiness.md). Получить информацию по кампаниям, созданным в кабинете, не получится.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/bids/info" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetBidsInfoRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBidsInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Значения ставок для заданных товаров. В ответ попадают только товары, на которые установлены ставки.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBidsInfoForBusiness();

    /**
     * <p>Рекомендованные ставки для заданных товаров</p>
     *
     * <p>Возвращает рекомендованные ставки для заданных товаров — такие ставки обеспечивают вашим предложениям определенную долю показов, если цена не превышает рекомендованную.  Для одного товара может возвращаться одна рекомендованная ставка или несколько. Во втором случае разные ставки предназначены для достижения разной доли показов.  Если товар только добавлен в каталог, но пока не продается, рекомендованной ставки для него не будет.  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/bids/recommendations" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetBidsRecommendationsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBidsRecommendationsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Рекомендованные ставки для заданных товаров.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBidsRecommendations();

    /**
     * <p>Список товаров, находящихся в карантине по цене в кабинете</p>
     *
     * <p>Возвращает список товаров, которые находятся в карантине по **основной цене**. Основная цена задается в каталоге и действует во всех магазинах кабинета.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/price-quarantine" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetQuarantineOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQuarantineOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров в карантине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBusinessQuarantineOffers();

    /**
     * <p>Настройки кабинета</p>
     *
     * <p>Возвращает информацию о настройках кабинета, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/settings" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBusinessSettingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Настройки кабинета.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBusinessSettings();

    /**
     * <p>Информация о магазине</p>
     *
     * <p>Возвращает информацию о магазине. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaign();

    /**
     * <p>Логины, связанные с магазином</p>
     *
     * <p>Возвращает список логинов, у которых есть доступ к магазину. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/logins" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignLoginsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список логинов, связанных с магазином.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignLogins();

    /**
     * <p>Информация о товарах, которые размещены в заданном магазине</p>
     *
     * <p>Возвращает список товаров, которые размещены в заданном магазине. Для каждого товара указываются параметры размещения.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetCampaignOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров, размещенных в заданном магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignOffers();

    /**
     * <p>Список товаров, находящихся в карантине по цене в магазине</p>
     *
     * <p>Возвращает список товаров, которые находятся в карантине по цене, установленной в заданном магазине.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/price-quarantine" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetQuarantineOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQuarantineOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров в карантине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignQuarantineOffers();

    /**
     * <p>Регион магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [GET campaigns/{campaignId}/settings](../../reference/campaigns/getCampaignSettings.md).  {% endnote %}  Возвращает регион, в котором находится магазин. |**⚙️ Лимит:** 5 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/region" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignRegionResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Возвращает регион, в котором находится магазин.  |**⚙️ Лимит:** 1000 запросов в час| |-| </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getCampaignRegion();

    /**
     * <p>Настройки магазина</p>
     *
     * <p>Возвращает информацию о настройках магазина, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/settings" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignSettingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Настройки магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignSettings();

    /**
     * <p>Список магазинов пользователя</p>
     *
     * <p>Возвращает список магазинов, к которым имеет доступ пользователь — владелец авторизационного токена, использованного в запросе. Для агентских пользователей список состоит из подагентских магазинов. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Магазины пользователя.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaigns();

    /**
     * <p>Магазины, доступные логину</p>
     *
     * <p>Возвращает список магазинов, к которым у пользователя с указанным логином есть доступ. |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/by_login/{login}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>login</b>"
     * <p>Логин пользователя.</p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о магазинах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignsByLogin();

    /**
     * <p>Лимит на установку кванта продажи и минимального количества товаров в заказе</p>
     *
     * <p>Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/categories/max-sale-quantum" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetCategoriesMaxSaleQuantumRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCategoriesMaxSaleQuantumResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Лимит на установку кванта и минимального количества товаров.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCategoriesMaxSaleQuantum();

    /**
     * <p>Дерево категорий</p>
     *
     * <p>Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/categories/tree" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetCategoriesRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCategoriesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Категории Маркета.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCategoriesTree();

    /**
     * <p>Списки характеристик товаров по категориям</p>
     *
     * <p>Возвращает список характеристик с допустимыми значениями для заданной категории.  |**⚙️ Лимит:** 50 категорий в минуту | |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/category/{categoryId}/parameters" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>categoryId</b>"
     * <p>Идентификатор категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится интересующий вас товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCategoryContentParametersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список характеристик товаров из заданной категории.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCategoryContentParameters();

    /**
     * <p>Получение истории сообщений в чате</p>
     *
     * <p>Возвращает историю сообщений в чате с покупателем.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/history" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chatId</b>"
     * <p>Идентификатор чата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetChatHistoryRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetChatHistoryResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: История сообщений успешно получена. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getChatHistory();

    /**
     * <p>Получение доступных чатов</p>
     *
     * <p>Возвращает ваши чаты с покупателями.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetChatsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetChatsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список чатов. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getChats();

    /**
     * <p>Справочник служб доставки</p>
     *
     * <p>Возвращает справочник служб доставки: идентификаторы и наименования. |**⚙️ Лимит:** 5 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/delivery/services" (<i>privileged: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetDeliveryServicesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о службах доставки.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getDeliveryServices();

    /**
     * <p>Информация о прайс-листе</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает информацию о прайс-листе, размещенном на Маркете для заданного магазина. Также ресурс возвращает результаты автоматических проверок прайс-листа. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feeds/{feedId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о прайс-листе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeed();

    /**
     * <p>Отчет по индексации прайс-листа</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает отчет по индексации прайс-листа для заданного магазина. Отчет позволяет получить статистику загрузки прайс-листа и результаты его автоматических проверок.  Данные в отчете возвращаются в порядке убывания значений параметра `generationId`.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feeds/{feedId}/index-logs" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>published_time_from</b>"
     * <p>Начальная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Значение по умолчанию: последние восемь дней со времени отправки запроса. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>published_time_to</b>"
     * <p>Конечная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-31T00:42:42+03:00`.  Значение по умолчанию: дата и время отправки запроса.  {% note info %}  Если во время переключения между страницами выходных данных на Яндекс Маркете появятся новые результаты индексации прайс-листа, вы не получите часть данных. Чтобы этого не произошло, зафиксируйте выходные данные с помощью входного параметра `published_time_to`. Значение параметра не должно быть датой из будущего.  {% endnote %} </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>status</b>"
     * <p>Статус индексации и проверки прайс-листа на соответствие техническим требованиям.  Возможные значения: * `ERROR` — произошли ошибки. * `OK` — обработан без ошибок. * `WARNING` — наблюдались некритичные проблемы. </p>
     * <p>
     * - Parameter type: <b>{@link FeedIndexLogsStatusType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedIndexLogsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Отчет по индексации прайс-листа.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeedIndexLogs();

    /**
     * <p>Новые и обновленные отзывы о магазине</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает новые и обновленные отзывы о магазине на Маркете.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов. Выходные данные содержат идентификатор следующей страницы.  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feedback/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>from_date</b>"
     * <p>Начальная дата обновления отзывов.  Если параметр указан, возвращаются отзывы, которые были написаны или обновлены с этой даты.  Формат даты: `ГГГГ-ММ-ДД`. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedbackListResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список отзывов для магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeedbackAndCommentUpdates();

    /**
     * <p>Список прайс-листов магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает список прайс-листов, размещенных на Маркете для магазина. Также ресурс возвращает результаты автоматических проверок прайс-листов. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feeds" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список прайс-листов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeeds();

    /**
     * <p>Получение комментариев к отзыву</p>
     *
     * <p>Возвращает комментарии к отзыву.  Результаты возвращаются постранично, одна страница содержит не более 20 комментариев.  Комментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/comments" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetGoodsFeedbackCommentsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetGoodsFeedbackCommentsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Дерево комментариев к отзыву.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getGoodsFeedbackComments();

    /**
     * <p>Получение отзывов о товарах продавца</p>
     *
     * <p>Возвращает все отзывы о товарах продавца по указанным фильтрам.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов.  Отзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetGoodsFeedbackRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetGoodsFeedbackResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список отзывов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getGoodsFeedbacks();

    /**
     * <p>Отчет по товарам</p>
     *
     * <p>Возвращает подробный отчет по товарам, которые вы разместили на Маркете. С помощью отчета вы можете узнать, например, об остатках на складе, об условиях хранения ваших товаров и т. д.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/stats/skus" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetGoodsStatsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetGoodsStatsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Отчет по товарам.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getGoodsStats();

    /**
     * <p>Информация о скрытых вами товарах</p>
     *
     * <p>Возвращает список скрытых вами товаров для заданного магазина.  В списке будут товары, скрытые любым способом — по API, с помощью YML-фида, в кабинете и так далее.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/hidden-offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>offer_id</b>"
     * <p>Идентификатор скрытого предложения. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>offset</b>"
     * <p>Позиция в списке, начиная с которой возвращаются результаты ответа.  Используется вместе с параметром `limit`.  Если задан `offset`, параметры `page_number` и `page_size` игнорируются.  `offset` игнорируется, если задан `page_token`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetHiddenOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о скрытых вами товарах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getHiddenOffers();

    /**
     * <p>Получение информации о заполненности карточек магазина</p>
     *
     * <p>Возвращает сведения о состоянии контента для заданных товаров:  * создана ли карточка товара и в каком она статусе; * заполненность карточки в процентах; * переданные характеристики товаров; * есть ли ошибки или предупреждения, связанные с контентом; * рекомендации по заполнению карточки.  |**⚙️ Лимит:** 600 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-cards" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOfferCardsContentStatusRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferCardsContentStatusResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о карточках указанных товаров.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOfferCardsContentStatus();

    /**
     * <p>Список товаров в каталоге</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  Для каждого товара, который вы размещаете на Маркете, возвращается информация о карточках Маркета, к которым привязан этот товар:  * Идентификатор текущей карточки (marketSku), карточки, которая проходит модерацию и последней отклоненной карточки. * Описание товара, которое указано на карточке Маркета. Например, размер упаковки и вес товара.  Результаты возвращаются постранично. Выходные данные содержат идентификатор следующей страницы.  {% note info %}  Количество товаров в каталоге магазина считается по данным за последние семь дней (не включая сегодня).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров в каталоге магазина * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offer-mapping-entries" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>offer_id</b>"
     * <p>Идентификатор товара в каталоге.</p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shop_sku</b>"
     * <p>Ваш SKU товара.  Параметр может быть указан несколько раз, например:  ``` ...shop_sku=123&shop_sku=129&shop_sku=141... ```  В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>mapping_kind</b>"
     * <p>Тип маппинга.</p>
     * <p>
     * - Parameter type: <b>{@link OfferMappingKindType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>status</b>"
     * <p>Фильтрация по статусу публикации товара:  * `READY` — товар прошел модерацию. * `IN_WORK` — товар проходит модерацию. * `NEED_CONTENT` — для товара без SKU на Маркете marketSku нужно найти карточку самостоятельно или создать ее. * `NEED_INFO` — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. * `REJECTED` — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары. * `SUSPENDED` — товар не прошел модерацию, так как Маркет пока не размещает подобные товары. * `OTHER` — товар не прошел модерацию по другой причине.  Можно указать несколько статусов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...status=READY,IN_WORK... ...status=READY&status=IN_WORK... ```  В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;OfferProcessingStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>availability</b>"
     * <p>Фильтрация по планам поставок товара:  * `ACTIVE` — поставки будут. * `INACTIVE` — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять. * `DELISTED` — архив: товар закончился на складе, и его поставок больше не будет.  Можно указать несколько значений в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...availability=INACTIVE,DELISTED... ...availability=INACTIVE&availability=DELISTED... ```  В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;OfferAvailabilityStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>category_id</b>"
     * <p>Фильтрация по идентификатору категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).  Можно указать несколько идентификаторов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...category_id=14727164,14382343... ...category_id=14727164&category_id=14382343... ```  В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;Integer&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>vendor</b>"
     * <p>Фильтрация по бренду товара.  Можно указать несколько брендов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...vendor=Aqua%20Minerale,Borjomi... ...vendor=Aqua%20Minerale&vendor=Borjomi... ```  Чтобы товар попал в результаты фильтрации, его бренд должен точно совпадать с одним из указанных в запросе. Например, если указан бренд Schwarzkopf, то в результатах не будет товаров Schwarzkopf Professional.  Если в названии бренда есть символы, которые не входят в таблицу ASCII (в том числе кириллические символы), используйте для них URL-кодирование. Например, пробел — %20, апостроф «'» — %27 и т. д. Подробнее см. в разделе [Кодирование URL русскоязычной Википедии](https://ru.wikipedia.org/wiki/URL#Кодирование_URL).  В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferMappingEntriesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о товарах в каталоге.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getOfferMappingEntries();

    /**
     * <p>Информация о товарах в каталоге</p>
     *
     * <p>Возвращает список товаров в каталоге, их категории на Маркете и характеристики каждого товара.  Можно использовать тремя способами: * задать список интересующих SKU; * задать фильтр — в этом случае результаты возвращаются постранично; * не передавать тело запроса, чтобы получить список всех товаров в каталоге.  |**⚙️ Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOfferMappingsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferMappingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о товарах в каталоге.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOfferMappings();

    /**
     * <p>Рекомендации Маркета, касающиеся цен</p>
     *
     * <p>Метод возвращает рекомендации нескольких типов.  **1. Порог для привлекательной цены. Он нужен для участия в софинансировании скидок.**  Показывает, какие **цены для участия** нужно установить, чтобы получить максимальные шансы на срабатывание скидок, софинансируемых Маркетом. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)  **2. Оценка привлекательности цен на витрине.**  Привлекательность влияет на вероятность срабатывания скидок за счет Маркета. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#validation)  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offers/recommendations" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOfferRecommendationsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferRecommendationsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров с рекомендациями.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOfferRecommendations();

    /**
     * <p>Предложения магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет фильтровать информацию о предложениях магазина, размещенных на Маркете, и искать предложения по заданному поисковому запросу.  Поиск предложений, размещенных на Маркете, работает по поисковому запросу аналогично поиску Маркета. Результаты возвращаются с использованием пейджера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Маркета, с которой соотнесено предложение, и аукционные ставки на него.  {% note info %}  Из-за особенностей поиска Маркета иногда на последних страницах пейджера фактическое количество результатов оказывается меньше количества, указанного ранее на предыдущих страницах.  В связи с этим настоятельно рекомендуется анализировать содержимое параметра pager для каждой полученной страницы.  {% endnote %}  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лисит товаров — среднее количество таваров в каталоге за неделю * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>query</b>"
     * <p>Поисковый запрос.  Поддерживается язык запросов.  Значение по умолчанию: все предложения магазина, размещенные на Маркете. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shopCategoryId</b>"
     * <p>Идентификатор категории предложения, указанный магазином в прайс-листе.  Параметр выводится только для предложений, у которых указана категория в прайс-листе.  Параметр доступен начиная с версии 2.0 партнерского API. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>currency</b>"
     * <p>Валюта, в которой указана цена предложения.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна. </p>
     * <p>
     * - Parameter type: <b>{@link CurrencyType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>matched</b>"
     * <p>Фильтр по признаку соотнесения предложения и карточки модели.  Возможные значения:  * `0 / FALSE / NO` — поиск выполняется среди предложений, не соотнесенных ни с какой карточкой модели.  * `1 / TRUE / YES` — поиск выполняется среди предложений, соотнесенных с карточками моделей). </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Предложения магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getOffers();

    /**
     * <p>Информация об одном заказе</p>
     *
     * <p>Возвращает информацию о заказе.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrderResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о заказе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrder();

    /**
     * <p>Информация о покупателе — юридическом лице</p>
     *
     * <p>Возвращает информацию о покупателе по идентификатору заказа.  {% note info \"\" %}  Чтобы получить информацию о покупателе, который является физическим лицом, воспользуйтесь запросом [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  {% endnote %}  Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY`, `PICKUP` или `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/{orderId}/business-buyer" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBusinessBuyerInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о покупателе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrderBusinessBuyerInfo();

    /**
     * <p>Информация о документах</p>
     *
     * <p>Возвращает информацию о документах по идентификатору заказа.  Получить данные можно после того, как заказ перейдет в статус `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/{orderId}/documents" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBusinessDocumentsInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о документах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrderBusinessDocumentsInfo();

    /**
     * <p>Данные для самостоятельного изготовления ярлыков</p>
     *
     * <p>Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/delivery/labels/data" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrderLabelsDataResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация для печати ярлыков.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrderLabelsData();

    /**
     * <p>Информация о нескольких заказах</p>
     *
     * <p>Возвращает информацию о заказах. Запрос можно использовать, чтобы узнать, нет ли новых заказов.  Доступна фильтрация по нескольким характеристикам заказов:  * дате оформления;  * статусу;  * идентификаторам заказов;  * этапу обработки или причине отмены;  * типу (настоящий или тестовый);  * дате отгрузки в службу доставки;  * дате и времени обновления заказа.  Информация о заказах, доставленных или отмененных больше 30 дней назад, не возвращается. Ее можно получить с помощью запроса информации об отдельном заказе [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) (если у вас есть идентификатор заказа) или запроса отчета по заказам [POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md).  Максимальный диапазон дат за один запрос к ресурсу — 30 дней. Максимальное количество заказов в выходных данных запроса — 50.  Результаты возвращаются постранично. Для навигации по страницам используйте параметры `page_token` и `limit`.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderIds</b>"
     * <p>Фильтрация заказов по идентификаторам. <br><br> ⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;Long&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>status</b>"
     * <p>Статус заказа:  * `CANCELLED` — заказ отменен.  * `DELIVERED` — заказ получен покупателем.  * `DELIVERY` — заказ передан в службу доставки.  * `PICKUP` — заказ доставлен в пункт самовывоза.  * `PROCESSING` — заказ находится в обработке.  * `UNPAID` — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).  Также могут возвращаться другие значения. Обрабатывать их не требуется. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link Set&lt;OrderStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>substatus</b>"
     * <p>Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).  Возможные значения для заказа в статусе `PROCESSING`:  * `STARTED` — заказ подтвержден, его можно начать обрабатывать. * `READY_TO_SHIP` — заказ собран и готов к отправке. * `SHIPPED` — заказ передан службе доставки.  Возможные значения для заказа в статусе `CANCELLED`:  * `DELIVERY_SERVICE_UNDELIVERED` — служба доставки не смогла доставить заказ.  * `PROCESSING_EXPIRED` — значение более не используется.  * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.  * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.  * `RESERVATION_FAILED` — Маркет не может продолжить дальнейшую обработку заказа.  * `SHOP_FAILED` — магазин не может выполнить заказ.  * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.  * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.  * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.  * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.  * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.  * `USER_UNREACHABLE` — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:    * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;   * перерыв между первым и третьим звонком не менее 90 минут;   * соединение не короче 5 секунд.    Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400. * `USER_WANTS_TO_CHANGE_DELIVERY_DATE` — покупатель хочет получить заказ в другой день. * `CANCELLED_COURIER_NOT_FOUND` — не удалось найти курьера.  Также могут возвращаться другие значения. Обрабатывать их не требуется. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link Set&lt;OrderSubstatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>fromDate</b>"
     * <p>Начальная дата для фильтрации заказов по дате оформления.  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной и конечной датой (параметр `toDate`) должно быть не больше 30 дней.  Значение по умолчанию: 30 дней назад от текущей даты. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>toDate</b>"
     * <p>Конечная дата для фильтрации заказов по дате оформления.  Показываются заказы, созданные до 00:00 указанного дня.  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной (параметр `fromDate`) и конечной датой должно быть не больше 30 дней.  Значение по умолчанию: текущая дата. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>supplierShipmentDateFrom</b>"
     * <p>Начальная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной и конечной датой (параметр `supplierShipmentDateTo`) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>supplierShipmentDateTo</b>"
     * <p>Конечная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной (параметр `supplierShipmentDateFrom`) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>updatedAtFrom</b>"
     * <p>Начальная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Между начальной и конечной датой (параметр `updatedAtTo`) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>updatedAtTo</b>"
     * <p>Конечная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Между начальной (параметр `updatedAtFrom`) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>dispatchType</b>"
     * <p>Способ отгрузки</p>
     * <p>
     * - Parameter type: <b>{@link OrderDeliveryDispatchType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>fake</b>"
     * <p>Фильтрация заказов по типам:  * `false` — настоящий заказ покупателя.  * `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>hasCis</b>"
     * <p>Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации [в системе «Честный ЗНАК»](https://честныйзнак.рф/):  * `true` — да.  * `false` — нет.  Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям. </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>onlyWaitingForCancellationApprove</b>"
     * <p>**Только для модели DBS**  Фильтрация заказов по наличию запросов покупателей на отмену.  При значение `true` возвращаются только заказы, которые находятся в статусе `DELIVERY` или `PICKUP` и которые пользователи решили отменить.  Чтобы подтвердить или отклонить отмену, отправьте запрос [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation). </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>onlyEstimatedDelivery</b>"
     * <p>Фильтрация заказов с долгой доставкой (31-60 дней) по подтвержденной дате доставки:  * `true` — возвращаются только заказы с неподтвержденной датой доставки. * `false` — фильтрация не применяется. </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>buyerType</b>"
     * <p>Фильтрация заказов по типу покупателя. </p>
     * <p>
     * - Parameter type: <b>{@link OrderBuyerType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrdersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о заказах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrders();

    /**
     * <p>Детальная информация по заказам</p>
     *
     * <p>Возвращает информацию по заказам на Маркете, в которых есть ваши товары. С помощью нее вы можете собрать статистику по вашим заказам и узнать, например, какие из товаров чаще всего возвращаются покупателями, какие, наоборот, пользуются большим спросом, какая комиссия начисляется за заказы и т. п.  {% note info \"\" %}  Раньше генерация детальной информации по заказам называлась **Отчет по заказам**. Сейчас это новый отчет. [Подробнее об отчете](../../reference/reports/generateUnitedOrdersReport.md)  {% endnote %}  В одном запросе можно получить информацию не более чем по 200 заказам.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/stats/orders" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOrdersStatsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrdersStatsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация по заказам.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrdersStats();

    /**
     * <p>Список цен</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST campaigns/{campaignId}/offer-prices](../../reference/assortment/getPricesByOfferIds.md).  {% endnote %}  Возвращает список цен, установленных вами на товары любым способом: например, через партнерский API или в файле с каталогом.  {% note info %}  Общее количество товаров считается по данным за последние семь дней (не включая сегодня) и не может быть выше 2 миллионов.  {% endnote %}  Способы установки цен описаны [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/assortment/operations/prices.html).  |**⚙️ Лимит:** ```(количество товаров партнера на витрине) * 25``` товаров в сутки| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offer-prices" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>archived</b>"
     * <p>Фильтр по нахождению в архиве.</p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPricesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список всех товаров с установленными ценами.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getPrices();

    /**
     * <p>Просмотр цен на указанные товары в магазине</p>
     *
     * <p>Возвращает список цен на указанные товары в магазине.  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для просмотра базовых цен используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров на витрине * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-prices" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetPricesByOfferIdsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPricesByOfferIdsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров с установленными для заданного магазина ценами.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getPricesByOfferIds();

    /**
     * <p>Получение списка товаров, которые участвуют или могут участвовать в акции</p>
     *
     * <p>Возвращает список товаров, которые участвуют или могут участвовать в акции.  {% note warning %}  В параметре `limit` не передавайте значение больше 500.  {% endnote %}  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetPromoOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPromoOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров, которые участвуют или могут участвовать в акции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getPromoOffers();

    /**
     * <p>Получение списка акций</p>
     *
     * <p>Возвращает информацию об акциях Маркета.  По умолчанию возвращаются акции, в которых продавец участвует или может принять участие.  Чтобы получить текущие или завершенные акции, передайте параметр `participation`.  Типы акций, которые возвращаются в ответе:  * прямая скидка; * флеш-акция; * скидка по промокоду.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetPromosRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPromosResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список акций Маркета.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getPromos();

    /**
     * <p>Заказы, которые повлияли на индекс качества</p>
     *
     * <p>Возвращает список заказов, которые повлияли на индекс качества магазина. Чтобы узнать значение индекса качества, выполните запрос [POST businesses/{businessId}/ratings/quality](../../reference/ratings/getQualityRatings.md).  |**⚙️ Лимит:** 100000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/ratings/quality/details" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQualityRatingDetailsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о заказах, которые повлияли на индекс качества.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getQualityRatingDetails();

    /**
     * <p>Индекс качества магазинов</p>
     *
     * <p>Возвращает значение индекса качества магазинов и его составляющие.  Подробнее об индексе качества читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/score/).  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/ratings/quality" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetQualityRatingRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQualityRatingResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Значение индекса качества магазинов и его составляющие.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getQualityRatings();

    /**
     * <p>Получение заданного отчета</p>
     *
     * <p>Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/reports/info/{reportId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>reportId</b>"
     * <p>Идентификатор отчета, который вы получили после запуска генерации. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetReportInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Статус генерации отчета и ссылка, если она уже есть.  {% note tip %}  Если статус генерации отчета — `FAILED` или `NO_DATA`, проверьте корректность запроса на генерацию. Например, верно ли указан идентификатор магазина, период или номер платежного поручения.  {% endnote %}    </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReportInfo();

    /**
     * <p>Информация о невыкупе или возврате</p>
     *
     * <p>Получает информацию по одному невыкупу или возврату.  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>returnId</b>"
     * <p>Идентификатор возврата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetReturnResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Детали возврата.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturn();

    /**
     * <p>Получение заявления на возврат</p>
     *
     * <p>Загружает заявление покупателя на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>returnId</b>"
     * <p>Идентификатор возврата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/octet-stream}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Заявление на возврат.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturnApplication();

    /**
     * <p>Получение фотографии возврата</p>
     *
     * <p>Получает фотографии, которые покупатель приложил к заявлению на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>returnId</b>"
     * <p>Идентификатор возврата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>itemId</b>"
     * <p>Идентификатор товара в возврате.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>imageHash</b>"
     * <p>Хеш ссылки изображения для загрузки.</p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/octet-stream}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Фотография возврата.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturnPhoto();

    /**
     * <p>Список невыкупов и возвратов</p>
     *
     * <p>Получает список невыкупов и возвратов.  Чтобы получить информацию по одному возврату или невыкупу, выполните запрос [GET campaigns/{campaignId}/orders/{orderId}/returns/{returnId}](../../reference/orders/getReturn.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/returns" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderIds</b>"
     * <p>Идентификаторы заказов — для фильтрации результатов.  Несколько идентификаторов перечисляются через запятую без пробела. Максимальное количество идентификаторов — 50. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;Long&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>statuses</b>"
     * <p>Статусы возвратов или невыкупов — для фильтрации результатов.  Несколько статусов перечисляются через запятую. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;RefundStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>type</b>"
     * <p>Тип заказа для фильтрации:  * `RETURN` — возврат.  * `UNREDEEMED` — невыкуп.  Если не указывать, в ответе будут и возвраты, и невыкупы. </p>
     * <p>
     * - Parameter type: <b>{@link ReturnType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>fromDate</b>"
     * <p>Начальная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: `ГГГГ-ММ-ДД`. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>toDate</b>"
     * <p>Конечная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: `ГГГГ-ММ-ДД`. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>from_date</b>"
     * <p>{% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `fromDate`.  {% endnote %}  Начальная дата для фильтрации возвратов или невыкупов по дате обновления. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>to_date</b>"
     * <p>{% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `toDate`.  {% endnote %}  Конечная дата для фильтрации возвратов или невыкупов по дате обновления. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetReturnsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Постраничные возвраты партнера.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturns();

    /**
     * <p>Получение информации об одной отгрузке</p>
     *
     * <p>Возвращает информацию об отгрузке по ее идентификатору. |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>cancelledOrders</b>"
     * <p>Возвращать ли отмененные заказы.  Значение по умолчанию — `true`. Если возвращать отмененные заказы не нужно, передайте значение `false`. </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>true</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetShipmentResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Найденная отгрузка.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getShipment();

    /**
     * <p>Получение информации о возможности печати ярлыков (FBS)</p>
     *
     * <p>Возвращает информацию о возможности печати ярлыков-наклеек для заказов в отгрузке. |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/info" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetShipmentOrdersInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация по годным/негодным для печати ярлыков заказам в отгрузке.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getShipmentOrdersInfo();

    /**
     * <p>Информация об остатках и оборачиваемости</p>
     *
     * <p>Возвращает данные об остатках товаров (для всех моделей) и об [оборачиваемости](*turnover) товаров (для модели FBY).  {% note info \"По умолчанию данные по оборачивамости не возращаются\" %}  Чтобы они были в ответе, передавайте `true` в поле `withTurnover`.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-|  [//]: <> (turnover: Среднее количество дней, за которое товар продается. Подробно об оборачиваемости рассказано в Справке Маркета для продавцов https://yandex.ru/support/marketplace/analytics/turnover.html.) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers/stocks" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetWarehouseStocksRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetWarehouseStocksResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Остатки товаров на складах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getStocks();

    /**
     * <p>Рекомендованные карточки для товаров</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/suggestions](../../reference/business-assortment/getSuggestedOfferMappings.md).  {% endnote %}  Возвращает идентификаторы карточек товаров на Маркете, рекомендованных для ваших товаров.  Каждому товару, который вы размещаете, должна соответствовать карточка товара на Маркете со своим идентификатором — SKU на Маркете. Он указывается в URL карточки товара, после «...sku=», например:  ##https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016…##  Чтобы получить для товаров рекомендованные SKU на Маркете, передайте в теле POST-запроса как можно больше информации о них: названия, производителей, штрихкоды, цены и т. д.  Полученные SKU можно передать вместе с информацией о ваших товарах с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/updates](../../reference/offer-mappings/updateOfferMappingEntries.md).  В одном запросе можно получить не более 500 рекомендаций.  |**⚙️ Лимит:** 100 000 рекомендаций в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-mapping-entries/suggestions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetSuggestedOfferMappingEntriesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetSuggestedOfferMappingEntriesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о товарах в каталоге.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getSuggestedOfferMappingEntries();

    /**
     * <p>Просмотр карточек на Маркете, которые подходят вашим товарам</p>
     *
     * <p>Возвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.  Пользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточки по предоставленным вами данным.  **Как пользоваться запросом**  1. Передайте Маркету список товаров, которые нужно проверить. 2. В ответ вы получите список SKU на Маркете с расшифровкой: названием, идентификатором модели, категорией. 3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида `https://market.yandex.ru/product/<marketModelId>?sku=<marketSku>`. 4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать `marketSKU`, который ему подходит по вашему мнению.  {% note info \"𝓠 Как определить `marketSku` товара, найденного на Маркете?\" %}  𝓐 Он есть в адресе страницы товара — расположен после `sku=`.  Например, `https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016`  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/suggestions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetSuggestedOfferMappingsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetSuggestedOfferMappingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Подобранные карточки на Маркете.  По результатам проверки товара полученная через этот запрос карточка может быть заменена на другую. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getSuggestedOfferMappings();

    /**
     * <p>Цены для продвижения товаров</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [отчет «Цены на рынке»](../../reference/reports/generatePricesReport.md).  {% endnote %}  {% note warning \"\" %}  Этот метод подходит только тем магазинам, которые устанавливают цены на товары в рублях.  {% endnote %}  Возвращает цены для продвижения товаров, которые вы размещаете на Маркете.  Товары, для которых нужно получить цены, передаются в теле POST-запроса.  Цены для продвижения зависят от цен, установленных на товары другими партнерами. Если один товар поставляют несколько партнеров, на Маркете сначала продается товар с более низкой ценой. Когда закончится товар по низкой цене, начнет продаваться товар по более высокой цене.  Выходные данные содержат для каждого товара несколько цен, соответствующих разным типам продвижения.  Установить цены на товары можно с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md) или другими способами: например, указать их в файле с каталогом. Также вы можете использовать стратегии для автоматической установки рекомендованных цен или минимальных цен на Маркете.  Подробно об автоматическом управлении ценами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/prices.html).  |**⚙️ Лимит:** 100 000 товаров в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-prices/suggestions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SuggestPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link SuggestPricesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список цен для продвижения на Маркете.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getSuggestedPrices();

    /**
     * <p>Список складов и групп складов</p>
     *
     * <p>Возвращает список складов и, если склады объединены, список групп складов. [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)  Среди прочего запрос позволяет определить идентификатор, который нужно использовать при передаче остатков для группы складов.  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/businesses/{businessId}/warehouses" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetWarehousesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список складов и групп складов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getWarehouses();

    /**
     * <p>Передача кодов маркировки единиц товара</p>
     *
     * <p>{% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Передает Маркету коды маркировки для единиц товара в указанном заказе.  Принимаются коды следующих типов:  * Коды «Честного знака». * УИН для ювелирных изделий. * РНПТ и ГТД для импортных прослеживаемых товаров.  {% note warning %}  Прежде чем работать с этим методом, обязательно прочтите [статью о работе с маркируемыми товарами](https://yandex.ru/support/marketplace/orders/cz.html).  {% endnote %}  Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/identifiers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ProvideOrderItemIdentifiersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link ProvideOrderItemIdentifiersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что коды успешно записались. Ответ содержит краткие сведения о промаркированных товарах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler provideOrderItemIdentifiers();

    /**
     * <p>Включение буста продаж и установка ставок</p>
     *
     * <p>Запускает буст продаж — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  {% cut \"Как в кабинете выглядит кампания, созданная через API\" %}  ![](../../_images/api-boost.png)  {% endcut %}  При первом использовании запроса Маркет: создаст единую на все магазины бизнес-аккаунта кампанию, добавит в нее товары с указанными ставками, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же созданной через API кампанией. Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. Другими кампаниями управлять через API не получится. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/businesses/{businessId}/bids" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link PutSkuBidsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Все получилось: ставки установлены или обновлены. Если нужно, добавлены новые товары и запущена кампания. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler putBidsForBusiness();

    /**
     * <p>Включение буста продаж и установка ставок для магазина</p>
     *
     * <p>Запускает буст продаж в указанном магазине — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  При первом использовании запроса Маркет: создаст кампанию, добавит в нее товары с указанными ставками для заданного магазина, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же кампанией, созданной через этот запрос или [PUT businesses/{businessId}/bids](/reference/bids/putBidsForBusiness). Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/bids" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link PutSkuBidsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler putBidsForCampaign();

    /**
     * <p>Сообщить, что прайс-лист обновился</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет сообщить, что магазин обновил прайс-лист. После этого Маркет начнет обновление данных на сервисе. 1. Магазин обновляет прайс-лист, ссылку на который он указал в кабинете. 2. Магазин отправляет Маркету запрос методом `POST campaigns/{campaignId}/feeds/{feedId}/refresh`. 3. Маркет начинает обновление данных магазина на сервисе.  {% note alert %}  Запрос работает только для включенных магазинов. Если магазин выключен, данные на Маркете не обновятся, даже если HTTP-код — `200 OK`. Проверить статус магазина можно с помощью базовых запросов или на странице бизнес-аккаунта.  {% endnote %}  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/feeds/{feedId}/refresh" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler refreshFeed();

    /**
     * <p>Информация о дочерних регионах</p>
     *
     * <p>Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/regions/{regionId}/children" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetRegionWithChildrenResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Регионы, являющиеся дочерними к указанному в запросе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchRegionChildren();

    /**
     * <p>Информация о регионе</p>
     *
     * <p>Возвращает информацию о регионе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/regions/{regionId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetRegionsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Найденный регион.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchRegionsById();

    /**
     * <p>Поиск регионов по их имени</p>
     *
     * <p>Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.  Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/regions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>name</b>"
     * <p>Название региона.  Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, `Москва`. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetRegionsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список найденных регионов.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchRegionsByName();

    /**
     * <p>Получение информации о нескольких отгрузках</p>
     *
     * <p>Возвращает информацию об отгрузках по заданным параметрам:  * дате; * статусу; * идентификаторам заказов.  Результаты возвращаются постранично. |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/first-mile/shipments" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SearchShipmentsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link SearchShipmentsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Найденные отгрузки.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchShipments();

    /**
     * <p>Отправка файла в чат</p>
     *
     * <p>Отправляет файл в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/file/send" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chatId</b>"
     * <p>Идентификатор чата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>file</b>"
     * <p>Содержимое файла. Максимальный размер файла — 5 Мбайт.</p>
     * <p>
     * - Parameter type: <b>BinaryFile</b><br/>
     * - Appears in: <b>{@link io.undertow.server.handlers.form.FormDataParser Form}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{mediaType=multipart/form-data}]</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ. Означает, что файл отправлен.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler sendFileToChat();

    /**
     * <p>Отправка сообщения в чат</p>
     *
     * <p>Отправляет сообщение в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/message" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chatId</b>"
     * <p>Идентификатор чата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SendMessageToChatRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ. Означает, что сообщение отправлено.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler sendMessageToChat();

    /**
     * <p>Изменение параметров прайс-листа</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет магазину изменить параметры прайс-листа.  Чтобы отредактировать параметр прайс-листа, передайте в теле запроса: `name` (название параметра) и `value` (значение параметра).  Чтобы отменить установленное значение, передайте в теле запроса: `name` (название параметра) и `delete=true` (удалить значение).  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/feeds/{feedId}/params" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetFeedParamsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Статус выполнения операции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler setFeedParams();

    /**
     * <p>Подготовка заказа</p>
     *
     * <p>{% note tip \"Подходит и для DBS\" %}  Запрос предназначен для работы с FBS-заказами, но вы можете использовать его для обработки DBS-заказов, если это удобно.  {% endnote %}  Позволяет выполнить три операции:  * передать Маркету информацию о распределении товаров по коробкам; * передать Маркету коды маркировки для товаров; * удалить товар из заказа, если его не оказалось на складе.  Если нужно что-то поправить в переданных данных, просто повторите запрос — это можно делать сколько угодно раз до перевода заказа в статус **Готов к отгрузке**. ⚠️ Если вы меняете раскладку уже после печати и расклейки ярлыков, не забудье перепечатать их и наклеить заново.  ## Как передать информацию о распределении товаров  В этом запросе вам нужно передать Маркету список коробок и указать, какие именно товары лежат в каждой из них. Коробки могут быть двух типов:  * **Содержащие товары целиком.** Такая коробка может содержать сколько угодно единиц любых товаров.  * **Содержащие часть товара.** Такие коробки содержат по одной части одного товара. Например, одна содержит внешний блок кондиционера, а другая — внутренний блок.  ⚠️ Одна коробка не может содержать и товары целиком, и части товаров.  ## Как передавать коды маркировки  Если в заказе есть товары, подлежащие маркировке, в запросе нужно передать соответствующие уникальные коды. [Что такое маркировка?](https://yandex.ru/support/marketplace/orders/cz.html)  Принимаются коды следующих типов:  * Коды «Честного знака». * УИН для ювелирных изделий. * РНПТ и ГТД для импортных прослеживаемых товаров.  Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.  Если товар едет в нескольких коробках, код маркировки нужно передать для каждой из них.  ## Как удалить товар из заказа  Чтобы удалить товар из заказа:  1. Добавьте в запрос `allowRemove: true`. 2. Передайте распределение по коробкам без товара, который нужно удалить.  {% note warning \"Удаление нельзя отменить\" %}  Эта операция необратима: покупатель сразу получит уведомление, а состав заказа изменится.  {% endnote %}  Чтобы удалить позицию целиком, не передавайте соответствующий `OrderBoxLayoutItemDTO`. Чтобы уменьшить количество товара, передайте уменьшенное значение в поле `fullCount`.  Нельзя удалить или уменьшить количество товара, если он:  * добавлен по акции; * составляет 99% стоимости заказа; * единственный товар в заказе.  Если вы не можете отгрузить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.  {% note info \"Увеличить заказ нельзя\" %}  С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.  {% endnote %}  ## Примеры  {% cut \"Товар умещается в коробку\" %}  Вот как будет выглядеть запрос, если в одной коробке едут:    * три единицы одного товара, требующего маркировки;   * одна единица другого товара, не требущего маркировки.    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"fullCount\": 3,                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           },                           {                               \"cis\": \"010304109478gftJ14545762!\\u001dhGt264\"                           },                           {                               \"cis\": \"010304109478fRs28323ks23!\\u001dhet201\"                           }                       ]                   },                   {                       \"id\": 654321,                       \"fullCount\": 1                   }               ]           }       ]   }   ```  {% endcut %}  {% cut \"Товар едет в разных коробках\" %}  Вот как будет выглядеть запрос, если товар едет в двух коробках:    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           }       ]   }   ```  {% endcut %}  {% cut \"Одинаковые товары, где каждый едет в нескольких коробках\" %}  Вот как будет выглядеть запрос, если каждый из двух одинаковых товаров едет в двух коробках:    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           }       ]   }   ```  {% endcut %}  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/boxes" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetOrderBoxLayoutRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link SetOrderBoxLayoutResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ придет переданная раскладка с идентификаторами коробок — они понадобятся для запроса ярлыков. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler setOrderBoxLayout();

    /**
     * <p>Передача количества грузовых мест в заказе</p>
     *
     * <p>{% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Отгружаемый Маркету заказ может не влезть в одну коробку или упаковку — в этом случае получается, что он занимает несколько грузовых мест.  Количество грузовых мест нужно обязательно передавать Маркету, если оно не равно 1. Это делается перед переводом его в статус **Готов к отгрузке**. Подробно о том, что в какой момент нужно передавать, рассказано в [пошаговой инструкции](../../step-by-step/fbs.md).  Метод устроен немного нестандартно: количество задается длиной массива пустых объектов.  Раньше метод требовал передачи большего количества данных. Запросы, оформленные по старому образцу, работают, но лучше делать по-новому.  {% cut \"Как было раньше\" %}  Структура тела PUT-запроса:  ``` {   \"boxes\":   [     {       \"fulfilmentId\": \"{string}\",       \"weight\": {int64},       \"width\": {int64},       \"height\": {int64},       \"depth\": {int64},       \"items\":       [         {           \"id\": {int64},           \"count\": {int32}         },         ...       ]     },     ...   ] } ``` | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `boxes`       |           | Список грузовых мест.       |  **Параметры, вложенные в `boxes`** | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `fulfilmentId`       |  String   | Идентификатор грузового места в информационной системе магазина. Сформируйте идентификатор по шаблону: `номер заказа на Маркете-номер грузового места`. Например, `7206821‑1, 7206821‑2` и т. д. | | `weight`       | Int64        | Масса брутто грузового места (суммарная масса упаковки и содержимого) в граммах. | | `width`       | Int64   | Ширина грузового места в сантиметрах.       | | `height`       | Int64   | Высота грузового места в сантиметрах.       | | `depth`       | Int64   | Глубина грузового места в сантиметрах.        | | `items`       | Int64   | Список товаров в грузовом месте.       |  **Параметры, вложенные в `items`** | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `id`       | Int64     | Идентификатор товара в рамках заказа.   | | `count`    | Int32     | Количество единиц товара в грузовом месте.       |  {% endcut %}  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Параметр больше не используется. Вставьте любое число — просто чтобы получился корректный URL. </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetOrderShipmentBoxesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link SetOrderShipmentBoxesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Имеет значение только тип ответа. Если ответ `ОК`, количество грузомест записано.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler setOrderShipmentBoxes();

    /**
     * <p>Передача количества упаковок в отгрузке</p>
     *
     * <p>Передает Маркету количество коробов или палет в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).  Получить PDF-файл с ярлыками для упаковок можно с помощью запроса [GET campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels](../../reference/shipments/downloadShipmentPalletLabels.md). |**⚙️ Лимит:** 200 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetShipmentPalletsCountRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Имеет значение только тип ответа. Если ответ `ОК`, количество упаковок записано.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler setShipmentPalletsCount();

    /**
     * <p>Отказ от ответа на отзывы</p>
     *
     * <p>Пропускает отзывы — они больше не будут возвращаться в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/skip-reaction" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SkipGoodsFeedbackReactionRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler skipGoodsFeedbacksReaction();

    /**
     * <p>Перенос заказов в следующую отгрузку</p>
     *
     * <p>Переносит указанные заказы из указанной отгрузки в следующую отгрузку. [Что такое отгрузка?](https://yandex.ru/support/marketplace/orders/fbs/process.html#ship)  Используйте этот запрос, если не успеваете собрать и упаковать заказы вовремя.  {% note warning \"Такие переносы снижают индекс качества магазина\" %}  Этот запрос предназначен для исключительных случаев. Если вы будете переносить заказы слишком часто, магазин столкнется с ограничениями. [Что за ограничения?](https://yandex.ru/support/marketplace/quality/score/fbs.html)  {% endnote %}  Переносить заказы можно, если до формирования отгрузки осталось больше получаса.  Перенос происходит не мгновенно, а занимает несколько минут.  |**⚙️ Лимит:** 200 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/transfer" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link TransferOrdersFromShipmentRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Запрос на перенос заказов проверен и принят, и они будут перенесены спустя несколько минут.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler transferOrdersFromShipment();

    /**
     * <p>Установка цен на товары во всех магазинах</p>
     *
     * <p>Устанавливает [базовые цены](*default-price). Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-prices/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateBusinessPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Маркет принял информацию о новых ценах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateBusinessPrices();

    /**
     * <p>Изменение условий продажи товаров в магазине</p>
     *
     * <p>Изменяет параметры продажи товаров в конкретном магазине: доступность товара, условия доставки и самовывоза, применяемую ставку НДС.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateCampaignOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что новые параметры получены Маркетом и скоро вступят в силу.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateCampaignOffers();

    /**
     * <p>Добавление нового или изменение созданного комментария</p>
     *
     * <p>Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.  Для создания комментария к отзыву передайте только идентификатор отзыва `feedbackId`.  Чтобы добавить комментарий к другому комментарию, передайте:  * `feedbackId` — идентификатор отзыва; * `comment.parentId` — идентификатор родительского комментария.  Чтобы изменить комментарий, передайте:  * `feedbackId`— идентификатор отзыва; * `comment.id` — идентификатор комментария, который нужно изменить.  Если передать одновременно `comment.parentId` и `comment.id`, будет изменен существующий комментарий.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/comments/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateGoodsFeedbackCommentRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateGoodsFeedbackCommentResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о добавленном или измененном комментарии.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateGoodsFeedbackComment();

    /**
     * <p>Редактирование категорийных характеристик товара</p>
     *
     * <p>Редактирует характеристики товара, которые специфичны для категории, к которой он относится.  {% note warning \"Здесь только то, что относится к конкретной категории\" %}  Если вам нужно изменить основные параметры товара (название, описание, изображения, видео, производитель, штрихкод), воспользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Чтобы удалить характеристики, которые заданы в параметрах с типом `string`, передайте пустое значение.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-cards/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOfferContentRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateOfferContentResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Запрос выполнен корректно, данные обработаны.  {% note warning \"Ответ 200 сам по себе не значит, что переданные значения корректны\" %}  Обязательно посмотрите детали ответа: `status` и перечень ошибок, если он есть.  Даже если ошибка допущена в характеристиках всего одного товара, никакие изменения из запроса в каталог не попадут.  {% endnote %}  Если в `status` вернулось `ERROR`, убедитесь, что:  * все обязательные характеристики заполнены; * характеристики действительно существуют в указанных категориях; * значения соответствуют характеристикам; * ваши собственные значения имеют нужный тип данных.  Найти проблемы помогут поля `errors` и `warnings`. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOfferContent();

    /**
     * <p>Добавление и редактирование товаров в каталоге</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Добавляет товары, указанные в запросе, в ваш каталог товаров и редактирует уже имеющиеся товары.  Информацию о товарах нужно передать в теле POST-запроса.  У каждого товара должен быть ваш SKU — уникальный код, который вы используете для идентификации товара:  * Чтобы добавить в каталог новый товар, укажите в параметре `shopSku` ваш SKU, которого еще нет в каталоге. * Чтобы отредактировать товар из каталога, укажите в параметре `shopSku` ваш SKU этого товара в каталоге.  В обоих случаях в запросе нужно передать полное описание товара, даже если вы хотите изменить только несколько характеристик.  Если вы знаете, какой карточке товара на Маркете соответствует ваш товар, укажите ее идентификатор (SKU на Маркете) во входном параметре mapping. Получить SKU на Маркете рекомендованной карточки товара можно с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/suggestions](../../reference/offer-mappings/getSuggestedOfferMappingEntries.md) или через кабинет. Если SKU на Маркете не указан, сотрудники Маркета сами подберут или создадут подходящую карточку товара, либо у него появится статус `NEED_CONTENT` (нужно найти карточку или создать ее самостоятельно) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  Перед публикацией товары проходят модерацию. Если в одном из отправленных товаров найдена ошибка, ответ на запрос будет иметь HTTP-код 400 Bad Request, и ни один из товаров не отправится на модерацию. При этом если вы не передадите все обязательные параметры для какого‑либо товара, после модерации у него появится статус `NEED_INFO` (в описании товара не хватает информации) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  В одном запросе можно добавить не более 500 товаров.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5 000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-mapping-entries/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOfferMappingEntryRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Статус выполнения операции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler updateOfferMappingEntries();

    /**
     * <p>Добавление товаров в каталог и изменение информации о них</p>
     *
     * <p>Добавляет товары в каталог, передает их категории на Маркете и характеристики, необходимые для этих категории. Также редактирует информацию об уже имеющихся товарах.  Список категорий Маркета можно получить с помощью запроса [POST categories/tree](../../reference/categories/getCategoriesTree.md), а характеристики товаров по категориям с помощью [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).  Чтобы **добавить новый товар**, передайте его с новым идентификатором, который раньше никогда не использовался в каталоге. Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой. Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**SKU на Маркете**) в поле `marketSKU`.  Для **новых товаров** обязательно укажите параметры: `offerId`, `name`, `marketCategoryId` или `category`, `pictures`, `vendor`, `description`.  Чтобы **отредактировать информацию о товаре**, передайте новые данные, указав в `offerId` соответствующий **ваш SKU**. Поля, в которых ничего не меняется, можно не передавать.  Чтобы **удалить характеристики**, которые заданы в параметрах с типом `string`, передайте пустое значение.  Параметр `offerId` должен быть **уникальным** для всех товаров, которые вы передаете.  {% note warning \"Правила использования SKU\" %}  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOfferMappingsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateOfferMappingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Все обязательные поля товаров заполнены, поэтому новые товары и внесенные изменения сохранены в каталоге. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOfferMappings();

    /**
     * <p>Удаление товара из заказа или уменьшение числа единиц</p>
     *
     * <p>{% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Изменяет состав заказа, если позволяет выбранная служба доставки, в случаях:  * покупатель уменьшил количество товара; * магазин не может поставить все товары в заказе.  Для этого заказ должен находится в статусе `\"status\": \"PROCESSING\"` этапа обработки `\"substatus\": \"STARTED\"`. После передачи статуса `\"substatus\": \"READY_TO_SHIP\"` изменить состав невозможно.  Если одинаковых товаров несколько, для уменьшения количества передайте обновленное значение в атрибуте `count` параметра `item`.  Чтобы полностью удалить товар из заказа:  * передайте значение `0`; или * не передавайте параметр `item`.  Нельзя удалить или уменьшить количество товара, если он:  * добавлен по акции; * составляет 99% стоимости заказа; * единственный товар в заказе.  Если необходимо удалить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.  {% note info \"Увеличить заказ нельзя\" %}  С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.  {% endnote %}  **Возврат денег покупателю**  Если покупатель оплатил товар при оформлении, Маркет вернет ему деньги за удаленные из заказа товары в течение двух дней:  * при оплате банковской картой — с момента, когда магазин переведет заказ в статус `SHIPPED`;  * при оплате через Apple Pay или Google Pay — с момента, когда магазин удалит товар из заказа.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/items" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOrderItemRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Маркет успешно обработал ваш запрос. Выходные данные не ожидаются.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOrderItems();

    /**
     * <p>Изменение статуса одного заказа</p>
     *
     * <p>Изменяет статус заказа. Возможные изменения статусов:  * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`. * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`. * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/status" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOrderStatusRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateOrderStatusResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В случае успешного изменения статуса заказа возвращается обновленная информация о заказе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOrderStatus();

    /**
     * <p>Изменение статусов нескольких заказов</p>
     *
     * <p>Изменяет статусы нескольких заказов.  Возможные изменения статусов:  * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"`и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`. * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`. * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.  Максимальное количество заказов, у которых можно изменить статус в одном запросе, — 30.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/status-update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOrderStatusesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateOrderStatusesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Возвращается информация об обновленных статусах заказов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOrderStatuses();

    /**
     * <p>Установка цен на товары в конкретном магазине</p>
     *
     * <p>Устанавливает цены на товары в магазине. Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для управления базовыми ценами используйте [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-prices/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdatePricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Маркет принял информацию о новых ценах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updatePrices();

    /**
     * <p>Добавление товаров в акцию или изменение их цен</p>
     *
     * <p>Добавляет товары в акцию или изменяет цены на товары, которые участвуют в акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos/offers/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdatePromoOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdatePromoOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Результат добавления товаров в акцию или обновления их цен.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updatePromoOffers();

    /**
     * <p>Передача информации об остатках</p>
     *
     * <p>Передает данные об остатках товаров на витрине.  Обязательно указывайте SKU **в точности** так, как он указан в каталоге. Например, _557722_ и _0557722_ — это два разных SKU.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/offers/stocks" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateStocksRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateStocks();

    /**
     * <p>Скрытие товаров и настройки скрытия</p>
     *
     * <p>Скрывает товары магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/hidden-offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link AddHiddenOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Настройки скрытия получены и скоро вступят в силу.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler addHiddenOffers();

    /**
     * <p>Добавление товаров в архив</p>
     *
     * <p>Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.  {% note warning \"В архив нельзя отправить товар, который хранится на складе Маркета\" %}  Вначале такой товар нужно распродать или вывезти.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/archive" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link AddOffersToArchiveRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link AddOffersToArchiveResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если некоторые товары добавить в архив не удалось, в ответе 200 будет их список.  Список успешно добавленных товаров не возвращается. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler addOffersToArchive();

    /**
     * <p>Калькулятор стоимости услуг</p>
     *
     * <p>Рассчитывает стоимость услуг Маркета для товаров с заданными параметрами. Порядок товаров в запросе и ответе сохраняется, чтобы определить, для какого товара рассчитана стоимость услуги.  Обратите внимание: калькулятор осуществляет примерные расчеты. Финальная стоимость для каждого заказа зависит от предоставленных услуг.  В запросе можно указать либо параметр `campaignId`, либо `sellingProgram`. Совместное использование параметров приведет к ошибке.  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/tariffs/calculate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link CalculateTariffsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link CalculateTariffsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Стоимость услуг.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler calculateTariffs();

    /**
     * <p>Удаление товара из карантина по цене в кабинете</p>
     *
     * <p>Подтверждает основную цену на товары, которые попали в карантин, и удаляет их из карантина.  Основная цена задается в каталоге и действует во всех магазинах кабинета.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/price-quarantine/confirm" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ConfirmPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что цены подтверждены.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler confirmBusinessPrices();

    /**
     * <p>Удаление товара из карантина по цене в магазине</p>
     *
     * <p>Подтверждает в заданном магазине цену на товары, которые попали в карантин, и удаляет их из карантина.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/price-quarantine/confirm" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ConfirmPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что цены подтверждены.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler confirmCampaignPrices();

    /**
     * <p>Создание нового чата с покупателем</p>
     *
     * <p>Создает новый чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/new" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link CreateChatRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link CreateChatResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Все получилось: чат создан. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler createChat();

    /**
     * <p>Удаление товаров из ассортимента магазина</p>
     *
     * <p>Удаляет заданные товары из заданного магазина.  {% note warning \"Запрос удаляет товары именно из конкретного магазина\" %}  На продажи в других магазинах и на наличие товара в общем каталоге он не влияет.  {% endnote %}  Товар не получится удалить, если он хранится на складах Маркета.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteCampaignOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeleteCampaignOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если удалось удалить не все товары, с ответом 200 вернется список тех, что были в запросе, но остались в магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteCampaignOffers();

    /**
     * <p>Удаление комментария к отзыву</p>
     *
     * <p>Удаляет комментарий магазина.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/comments/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteGoodsFeedbackCommentRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteGoodsFeedbackComment();

    /**
     * <p>Возобновление показа товаров</p>
     *
     * <p>Возобновляет показ скрытых вами товаров магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/hidden-offers/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteHiddenOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Показ товаров возобновлен.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteHiddenOffers();

    /**
     * <p>Удаление товаров из каталога</p>
     *
     * <p>Удаляет товары из каталога.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeleteOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если удалось удалить не все товары, с ответом 200 вернется список тех, что были в запросе, но остались в магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteOffers();

    /**
     * <p>Удаление товаров из архива</p>
     *
     * <p>Восстанавливает товары из архива.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/unarchive" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteOffersFromArchiveRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeleteOffersFromArchiveResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если некоторые товары восстановить из архива не удалось, в ответе 200 будет их список.  Список успешно восстановленных товаров не возвращается. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteOffersFromArchive();

    /**
     * <p>Удаление товаров из акции</p>
     *
     * <p>Убирает товары из акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos/offers/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeletePromoOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeletePromoOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Результат удаления товаров из акции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deletePromoOffers();

    /**
     * <p>Отчет по бусту продаж</p>
     *
     * <p>Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/boost-consolidated/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateBoostConsolidatedRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateBoostConsolidatedReport();

    /**
     * <p>Отчет «Конкурентная позиция»</p>
     *
     * <p>Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \"Значение -1 в отчете\" %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/competitors-position/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateCompetitorsPositionReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateCompetitorsPositionReport();

    /**
     * <p>Отчет по отзывам о товарах</p>
     *
     * <p>Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/goods-feedback/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateGoodsFeedbackRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateGoodsFeedbackReport();

    /**
     * <p>Отчет по движению товаров</p>
     *
     * <p>Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/goods-movement/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateGoodsMovementReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateGoodsMovementReport();

    /**
     * <p>Отчет по реализации</p>
     *
     * <p>Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/goods-realization/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateGoodsRealizationReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateGoodsRealizationReport();

    /**
     * <p>Отчет по оборачиваемости</p>
     *
     * <p>Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/goods-turnover/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateGoodsTurnoverRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateGoodsTurnoverReport();

    /**
     * <p>Отчет «Цены на рынке»</p>
     *
     * <p>Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/prices/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GeneratePricesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generatePricesReport();

    /**
     * <p>Отчет по полкам</p>
     *
     * <p>Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/shelf-statistics/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateShelfsStatisticsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateShelfsStatisticsReport();

    /**
     * <p>Отчет «Аналитика продаж»</p>
     *
     * <p>Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/shows-sales/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateShowsSalesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateShowsSalesReport();

    /**
     * <p>Отчет по остаткам на складах</p>
     *
     * <p>Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/stocks-on-warehouses/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateStocksOnWarehousesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateStocksOnWarehousesReport();

    /**
     * <p>Отчет по стоимости услуг</p>
     *
     * <p>Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |-----------------------------|---------------------------------| |По дате начисления услуги    |`dateFrom` и `dateTo`            | |По дате формирования акта    |`year` и `month`                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/united-marketplace-services/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateUnitedMarketplaceServicesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateUnitedMarketplaceServicesReport();

    /**
     * <p>Отчет по платежам</p>
     *
     * <p>Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |-------------------------|---------------------------------------| |О платежах за период     |`dateFrom` и `dateTo`                  | |О платежном поручении    |`bankOrderId` и `bankOrderDateTime`    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/united-netting/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateUnitedNettingReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateUnitedNettingReport();

    /**
     * <p>Отчет по заказам</p>
     *
     * <p>Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \"\" %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/united-orders/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateUnitedOrdersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateUnitedOrdersReport();

    /**
     * <p>Все предложения магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет максимально быстро получить информацию обо всех предложениях магазина, размещенных на Маркете. Возвращает результат в виде сегментов нефиксированного размера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Яндекс Маркета, с которой соотнесено предложение, а также аукционные ставки на него.  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — среднее количество таваров в каталоге за неделю * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offers/all" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chunk</b>"
     * <p>Номер сегмента с результатами.  Значение по умолчанию: `0`.  {% note info %}  Номера сегментов запрашиваются последовательно, пока не будет получен сегмент с пустым ответом. Пустой ответ означает, что все предложения магазина получены.  {% endnote %}  {% note alert %}  Нумерация начинается с 0. Чтобы запросить первую страницу, необходимо указать `chunk=0` и т. д.  {% endnote %} </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetAllOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Предложения магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getAllOffers();

    /**
     * <p>Информация об установленных ставках</p>
     *
     * <p>Возвращает значения ставок для заданных товаров.  {% note warning \"\" %}  В ответе возвращаются значения только тех ставок, которые вы установили через запрос [PUT businesses/{businessId}/bids](../../reference/bids/putBidsForBusiness.md). Получить информацию по кампаниям, созданным в кабинете, не получится.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/bids/info" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetBidsInfoRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBidsInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Значения ставок для заданных товаров. В ответ попадают только товары, на которые установлены ставки.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBidsInfoForBusiness();

    /**
     * <p>Рекомендованные ставки для заданных товаров</p>
     *
     * <p>Возвращает рекомендованные ставки для заданных товаров — такие ставки обеспечивают вашим предложениям определенную долю показов, если цена не превышает рекомендованную.  Для одного товара может возвращаться одна рекомендованная ставка или несколько. Во втором случае разные ставки предназначены для достижения разной доли показов.  Если товар только добавлен в каталог, но пока не продается, рекомендованной ставки для него не будет.  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/bids/recommendations" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetBidsRecommendationsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBidsRecommendationsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Рекомендованные ставки для заданных товаров.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBidsRecommendations();

    /**
     * <p>Список товаров, находящихся в карантине по цене в кабинете</p>
     *
     * <p>Возвращает список товаров, которые находятся в карантине по **основной цене**. Основная цена задается в каталоге и действует во всех магазинах кабинета.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/price-quarantine" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetQuarantineOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQuarantineOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров в карантине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBusinessQuarantineOffers();

    /**
     * <p>Настройки кабинета</p>
     *
     * <p>Возвращает информацию о настройках кабинета, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/settings" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBusinessSettingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Настройки кабинета.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBusinessSettings();

    /**
     * <p>Информация о магазине</p>
     *
     * <p>Возвращает информацию о магазине. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaign();

    /**
     * <p>Логины, связанные с магазином</p>
     *
     * <p>Возвращает список логинов, у которых есть доступ к магазину. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/logins" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignLoginsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список логинов, связанных с магазином.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignLogins();

    /**
     * <p>Информация о товарах, которые размещены в заданном магазине</p>
     *
     * <p>Возвращает список товаров, которые размещены в заданном магазине. Для каждого товара указываются параметры размещения.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetCampaignOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров, размещенных в заданном магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignOffers();

    /**
     * <p>Список товаров, находящихся в карантине по цене в магазине</p>
     *
     * <p>Возвращает список товаров, которые находятся в карантине по цене, установленной в заданном магазине.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/price-quarantine" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetQuarantineOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQuarantineOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров в карантине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignQuarantineOffers();

    /**
     * <p>Регион магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [GET campaigns/{campaignId}/settings](../../reference/campaigns/getCampaignSettings.md).  {% endnote %}  Возвращает регион, в котором находится магазин. |**⚙️ Лимит:** 5 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/region" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignRegionResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Возвращает регион, в котором находится магазин.  |**⚙️ Лимит:** 1000 запросов в час| |-| </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getCampaignRegion();

    /**
     * <p>Настройки магазина</p>
     *
     * <p>Возвращает информацию о настройках магазина, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/settings" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignSettingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Настройки магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignSettings();

    /**
     * <p>Список магазинов пользователя</p>
     *
     * <p>Возвращает список магазинов, к которым имеет доступ пользователь — владелец авторизационного токена, использованного в запросе. Для агентских пользователей список состоит из подагентских магазинов. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Магазины пользователя.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaigns();

    /**
     * <p>Магазины, доступные логину</p>
     *
     * <p>Возвращает список магазинов, к которым у пользователя с указанным логином есть доступ. |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/by_login/{login}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>login</b>"
     * <p>Логин пользователя.</p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о магазинах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignsByLogin();

    /**
     * <p>Лимит на установку кванта продажи и минимального количества товаров в заказе</p>
     *
     * <p>Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/categories/max-sale-quantum" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetCategoriesMaxSaleQuantumRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCategoriesMaxSaleQuantumResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Лимит на установку кванта и минимального количества товаров.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCategoriesMaxSaleQuantum();

    /**
     * <p>Дерево категорий</p>
     *
     * <p>Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/categories/tree" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetCategoriesRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCategoriesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Категории Маркета.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCategoriesTree();

    /**
     * <p>Списки характеристик товаров по категориям</p>
     *
     * <p>Возвращает список характеристик с допустимыми значениями для заданной категории.  |**⚙️ Лимит:** 50 категорий в минуту | |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/category/{categoryId}/parameters" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>categoryId</b>"
     * <p>Идентификатор категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится интересующий вас товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCategoryContentParametersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список характеристик товаров из заданной категории.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCategoryContentParameters();

    /**
     * <p>Получение истории сообщений в чате</p>
     *
     * <p>Возвращает историю сообщений в чате с покупателем.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/history" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chatId</b>"
     * <p>Идентификатор чата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetChatHistoryRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetChatHistoryResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: История сообщений успешно получена. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getChatHistory();

    /**
     * <p>Получение доступных чатов</p>
     *
     * <p>Возвращает ваши чаты с покупателями.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetChatsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetChatsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список чатов. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getChats();

    /**
     * <p>Информация о прайс-листе</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает информацию о прайс-листе, размещенном на Маркете для заданного магазина. Также ресурс возвращает результаты автоматических проверок прайс-листа. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feeds/{feedId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о прайс-листе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeed();

    /**
     * <p>Отчет по индексации прайс-листа</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает отчет по индексации прайс-листа для заданного магазина. Отчет позволяет получить статистику загрузки прайс-листа и результаты его автоматических проверок.  Данные в отчете возвращаются в порядке убывания значений параметра `generationId`.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feeds/{feedId}/index-logs" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>published_time_from</b>"
     * <p>Начальная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Значение по умолчанию: последние восемь дней со времени отправки запроса. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>published_time_to</b>"
     * <p>Конечная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-31T00:42:42+03:00`.  Значение по умолчанию: дата и время отправки запроса.  {% note info %}  Если во время переключения между страницами выходных данных на Яндекс Маркете появятся новые результаты индексации прайс-листа, вы не получите часть данных. Чтобы этого не произошло, зафиксируйте выходные данные с помощью входного параметра `published_time_to`. Значение параметра не должно быть датой из будущего.  {% endnote %} </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>status</b>"
     * <p>Статус индексации и проверки прайс-листа на соответствие техническим требованиям.  Возможные значения: * `ERROR` — произошли ошибки. * `OK` — обработан без ошибок. * `WARNING` — наблюдались некритичные проблемы. </p>
     * <p>
     * - Parameter type: <b>{@link FeedIndexLogsStatusType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedIndexLogsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Отчет по индексации прайс-листа.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeedIndexLogs();

    /**
     * <p>Новые и обновленные отзывы о магазине</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает новые и обновленные отзывы о магазине на Маркете.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов. Выходные данные содержат идентификатор следующей страницы.  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feedback/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>from_date</b>"
     * <p>Начальная дата обновления отзывов.  Если параметр указан, возвращаются отзывы, которые были написаны или обновлены с этой даты.  Формат даты: `ГГГГ-ММ-ДД`. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedbackListResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список отзывов для магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeedbackAndCommentUpdates();

    /**
     * <p>Список прайс-листов магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает список прайс-листов, размещенных на Маркете для магазина. Также ресурс возвращает результаты автоматических проверок прайс-листов. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feeds" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список прайс-листов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeeds();

    /**
     * <p>Идентификаторы складов Маркета (FBY)</p>
     *
     * <p>Возвращает список складов Маркета с их идентификаторами.  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/warehouses" (<i>privileged: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFulfillmentWarehousesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список складов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getFulfillmentWarehouses();

    /**
     * <p>Получение комментариев к отзыву</p>
     *
     * <p>Возвращает комментарии к отзыву.  Результаты возвращаются постранично, одна страница содержит не более 20 комментариев.  Комментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/comments" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetGoodsFeedbackCommentsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetGoodsFeedbackCommentsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Дерево комментариев к отзыву.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getGoodsFeedbackComments();

    /**
     * <p>Получение отзывов о товарах продавца</p>
     *
     * <p>Возвращает все отзывы о товарах продавца по указанным фильтрам.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов.  Отзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetGoodsFeedbackRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetGoodsFeedbackResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список отзывов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getGoodsFeedbacks();

    /**
     * <p>Отчет по товарам</p>
     *
     * <p>Возвращает подробный отчет по товарам, которые вы разместили на Маркете. С помощью отчета вы можете узнать, например, об остатках на складе, об условиях хранения ваших товаров и т. д.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/stats/skus" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetGoodsStatsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetGoodsStatsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Отчет по товарам.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getGoodsStats();

    /**
     * <p>Информация о скрытых вами товарах</p>
     *
     * <p>Возвращает список скрытых вами товаров для заданного магазина.  В списке будут товары, скрытые любым способом — по API, с помощью YML-фида, в кабинете и так далее.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/hidden-offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>offer_id</b>"
     * <p>Идентификатор скрытого предложения. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>offset</b>"
     * <p>Позиция в списке, начиная с которой возвращаются результаты ответа.  Используется вместе с параметром `limit`.  Если задан `offset`, параметры `page_number` и `page_size` игнорируются.  `offset` игнорируется, если задан `page_token`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetHiddenOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о скрытых вами товарах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getHiddenOffers();

    /**
     * <p>Получение информации о заполненности карточек магазина</p>
     *
     * <p>Возвращает сведения о состоянии контента для заданных товаров:  * создана ли карточка товара и в каком она статусе; * заполненность карточки в процентах; * переданные характеристики товаров; * есть ли ошибки или предупреждения, связанные с контентом; * рекомендации по заполнению карточки.  |**⚙️ Лимит:** 600 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-cards" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOfferCardsContentStatusRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferCardsContentStatusResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о карточках указанных товаров.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOfferCardsContentStatus();

    /**
     * <p>Список товаров в каталоге</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  Для каждого товара, который вы размещаете на Маркете, возвращается информация о карточках Маркета, к которым привязан этот товар:  * Идентификатор текущей карточки (marketSku), карточки, которая проходит модерацию и последней отклоненной карточки. * Описание товара, которое указано на карточке Маркета. Например, размер упаковки и вес товара.  Результаты возвращаются постранично. Выходные данные содержат идентификатор следующей страницы.  {% note info %}  Количество товаров в каталоге магазина считается по данным за последние семь дней (не включая сегодня).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров в каталоге магазина * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offer-mapping-entries" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>offer_id</b>"
     * <p>Идентификатор товара в каталоге.</p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shop_sku</b>"
     * <p>Ваш SKU товара.  Параметр может быть указан несколько раз, например:  ``` ...shop_sku=123&shop_sku=129&shop_sku=141... ```  В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>mapping_kind</b>"
     * <p>Тип маппинга.</p>
     * <p>
     * - Parameter type: <b>{@link OfferMappingKindType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>status</b>"
     * <p>Фильтрация по статусу публикации товара:  * `READY` — товар прошел модерацию. * `IN_WORK` — товар проходит модерацию. * `NEED_CONTENT` — для товара без SKU на Маркете marketSku нужно найти карточку самостоятельно или создать ее. * `NEED_INFO` — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. * `REJECTED` — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары. * `SUSPENDED` — товар не прошел модерацию, так как Маркет пока не размещает подобные товары. * `OTHER` — товар не прошел модерацию по другой причине.  Можно указать несколько статусов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...status=READY,IN_WORK... ...status=READY&status=IN_WORK... ```  В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;OfferProcessingStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>availability</b>"
     * <p>Фильтрация по планам поставок товара:  * `ACTIVE` — поставки будут. * `INACTIVE` — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять. * `DELISTED` — архив: товар закончился на складе, и его поставок больше не будет.  Можно указать несколько значений в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...availability=INACTIVE,DELISTED... ...availability=INACTIVE&availability=DELISTED... ```  В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;OfferAvailabilityStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>category_id</b>"
     * <p>Фильтрация по идентификатору категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).  Можно указать несколько идентификаторов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...category_id=14727164,14382343... ...category_id=14727164&category_id=14382343... ```  В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;Integer&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>vendor</b>"
     * <p>Фильтрация по бренду товара.  Можно указать несколько брендов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...vendor=Aqua%20Minerale,Borjomi... ...vendor=Aqua%20Minerale&vendor=Borjomi... ```  Чтобы товар попал в результаты фильтрации, его бренд должен точно совпадать с одним из указанных в запросе. Например, если указан бренд Schwarzkopf, то в результатах не будет товаров Schwarzkopf Professional.  Если в названии бренда есть символы, которые не входят в таблицу ASCII (в том числе кириллические символы), используйте для них URL-кодирование. Например, пробел — %20, апостроф «'» — %27 и т. д. Подробнее см. в разделе [Кодирование URL русскоязычной Википедии](https://ru.wikipedia.org/wiki/URL#Кодирование_URL).  В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferMappingEntriesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о товарах в каталоге.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getOfferMappingEntries();

    /**
     * <p>Информация о товарах в каталоге</p>
     *
     * <p>Возвращает список товаров в каталоге, их категории на Маркете и характеристики каждого товара.  Можно использовать тремя способами: * задать список интересующих SKU; * задать фильтр — в этом случае результаты возвращаются постранично; * не передавать тело запроса, чтобы получить список всех товаров в каталоге.  |**⚙️ Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOfferMappingsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferMappingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о товарах в каталоге.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOfferMappings();

    /**
     * <p>Рекомендации Маркета, касающиеся цен</p>
     *
     * <p>Метод возвращает рекомендации нескольких типов.  **1. Порог для привлекательной цены. Он нужен для участия в софинансировании скидок.**  Показывает, какие **цены для участия** нужно установить, чтобы получить максимальные шансы на срабатывание скидок, софинансируемых Маркетом. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)  **2. Оценка привлекательности цен на витрине.**  Привлекательность влияет на вероятность срабатывания скидок за счет Маркета. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#validation)  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offers/recommendations" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOfferRecommendationsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferRecommendationsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров с рекомендациями.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOfferRecommendations();

    /**
     * <p>Предложения магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет фильтровать информацию о предложениях магазина, размещенных на Маркете, и искать предложения по заданному поисковому запросу.  Поиск предложений, размещенных на Маркете, работает по поисковому запросу аналогично поиску Маркета. Результаты возвращаются с использованием пейджера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Маркета, с которой соотнесено предложение, и аукционные ставки на него.  {% note info %}  Из-за особенностей поиска Маркета иногда на последних страницах пейджера фактическое количество результатов оказывается меньше количества, указанного ранее на предыдущих страницах.  В связи с этим настоятельно рекомендуется анализировать содержимое параметра pager для каждой полученной страницы.  {% endnote %}  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лисит товаров — среднее количество таваров в каталоге за неделю * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>query</b>"
     * <p>Поисковый запрос.  Поддерживается язык запросов.  Значение по умолчанию: все предложения магазина, размещенные на Маркете. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shopCategoryId</b>"
     * <p>Идентификатор категории предложения, указанный магазином в прайс-листе.  Параметр выводится только для предложений, у которых указана категория в прайс-листе.  Параметр доступен начиная с версии 2.0 партнерского API. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>currency</b>"
     * <p>Валюта, в которой указана цена предложения.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна. </p>
     * <p>
     * - Parameter type: <b>{@link CurrencyType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>matched</b>"
     * <p>Фильтр по признаку соотнесения предложения и карточки модели.  Возможные значения:  * `0 / FALSE / NO` — поиск выполняется среди предложений, не соотнесенных ни с какой карточкой модели.  * `1 / TRUE / YES` — поиск выполняется среди предложений, соотнесенных с карточками моделей). </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Предложения магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getOffers();

    /**
     * <p>Информация об одном заказе</p>
     *
     * <p>Возвращает информацию о заказе.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrderResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о заказе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrder();

    /**
     * <p>Информация о покупателе — юридическом лице</p>
     *
     * <p>Возвращает информацию о покупателе по идентификатору заказа.  {% note info \"\" %}  Чтобы получить информацию о покупателе, который является физическим лицом, воспользуйтесь запросом [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  {% endnote %}  Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY`, `PICKUP` или `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/{orderId}/business-buyer" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBusinessBuyerInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о покупателе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrderBusinessBuyerInfo();

    /**
     * <p>Информация о документах</p>
     *
     * <p>Возвращает информацию о документах по идентификатору заказа.  Получить данные можно после того, как заказ перейдет в статус `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/{orderId}/documents" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBusinessDocumentsInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о документах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrderBusinessDocumentsInfo();

    /**
     * <p>Информация о нескольких заказах</p>
     *
     * <p>Возвращает информацию о заказах. Запрос можно использовать, чтобы узнать, нет ли новых заказов.  Доступна фильтрация по нескольким характеристикам заказов:  * дате оформления;  * статусу;  * идентификаторам заказов;  * этапу обработки или причине отмены;  * типу (настоящий или тестовый);  * дате отгрузки в службу доставки;  * дате и времени обновления заказа.  Информация о заказах, доставленных или отмененных больше 30 дней назад, не возвращается. Ее можно получить с помощью запроса информации об отдельном заказе [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) (если у вас есть идентификатор заказа) или запроса отчета по заказам [POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md).  Максимальный диапазон дат за один запрос к ресурсу — 30 дней. Максимальное количество заказов в выходных данных запроса — 50.  Результаты возвращаются постранично. Для навигации по страницам используйте параметры `page_token` и `limit`.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderIds</b>"
     * <p>Фильтрация заказов по идентификаторам. <br><br> ⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;Long&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>status</b>"
     * <p>Статус заказа:  * `CANCELLED` — заказ отменен.  * `DELIVERED` — заказ получен покупателем.  * `DELIVERY` — заказ передан в службу доставки.  * `PICKUP` — заказ доставлен в пункт самовывоза.  * `PROCESSING` — заказ находится в обработке.  * `UNPAID` — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).  Также могут возвращаться другие значения. Обрабатывать их не требуется. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link Set&lt;OrderStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>substatus</b>"
     * <p>Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).  Возможные значения для заказа в статусе `PROCESSING`:  * `STARTED` — заказ подтвержден, его можно начать обрабатывать. * `READY_TO_SHIP` — заказ собран и готов к отправке. * `SHIPPED` — заказ передан службе доставки.  Возможные значения для заказа в статусе `CANCELLED`:  * `DELIVERY_SERVICE_UNDELIVERED` — служба доставки не смогла доставить заказ.  * `PROCESSING_EXPIRED` — значение более не используется.  * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.  * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.  * `RESERVATION_FAILED` — Маркет не может продолжить дальнейшую обработку заказа.  * `SHOP_FAILED` — магазин не может выполнить заказ.  * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.  * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.  * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.  * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.  * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.  * `USER_UNREACHABLE` — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:    * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;   * перерыв между первым и третьим звонком не менее 90 минут;   * соединение не короче 5 секунд.    Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400. * `USER_WANTS_TO_CHANGE_DELIVERY_DATE` — покупатель хочет получить заказ в другой день. * `CANCELLED_COURIER_NOT_FOUND` — не удалось найти курьера.  Также могут возвращаться другие значения. Обрабатывать их не требуется. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link Set&lt;OrderSubstatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>fromDate</b>"
     * <p>Начальная дата для фильтрации заказов по дате оформления.  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной и конечной датой (параметр `toDate`) должно быть не больше 30 дней.  Значение по умолчанию: 30 дней назад от текущей даты. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>toDate</b>"
     * <p>Конечная дата для фильтрации заказов по дате оформления.  Показываются заказы, созданные до 00:00 указанного дня.  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной (параметр `fromDate`) и конечной датой должно быть не больше 30 дней.  Значение по умолчанию: текущая дата. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>supplierShipmentDateFrom</b>"
     * <p>Начальная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной и конечной датой (параметр `supplierShipmentDateTo`) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>supplierShipmentDateTo</b>"
     * <p>Конечная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной (параметр `supplierShipmentDateFrom`) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>updatedAtFrom</b>"
     * <p>Начальная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Между начальной и конечной датой (параметр `updatedAtTo`) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>updatedAtTo</b>"
     * <p>Конечная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Между начальной (параметр `updatedAtFrom`) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>dispatchType</b>"
     * <p>Способ отгрузки</p>
     * <p>
     * - Parameter type: <b>{@link OrderDeliveryDispatchType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>fake</b>"
     * <p>Фильтрация заказов по типам:  * `false` — настоящий заказ покупателя.  * `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>hasCis</b>"
     * <p>Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации [в системе «Честный ЗНАК»](https://честныйзнак.рф/):  * `true` — да.  * `false` — нет.  Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям. </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>onlyWaitingForCancellationApprove</b>"
     * <p>**Только для модели DBS**  Фильтрация заказов по наличию запросов покупателей на отмену.  При значение `true` возвращаются только заказы, которые находятся в статусе `DELIVERY` или `PICKUP` и которые пользователи решили отменить.  Чтобы подтвердить или отклонить отмену, отправьте запрос [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation). </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>onlyEstimatedDelivery</b>"
     * <p>Фильтрация заказов с долгой доставкой (31-60 дней) по подтвержденной дате доставки:  * `true` — возвращаются только заказы с неподтвержденной датой доставки. * `false` — фильтрация не применяется. </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>buyerType</b>"
     * <p>Фильтрация заказов по типу покупателя. </p>
     * <p>
     * - Parameter type: <b>{@link OrderBuyerType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrdersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о заказах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrders();

    /**
     * <p>Детальная информация по заказам</p>
     *
     * <p>Возвращает информацию по заказам на Маркете, в которых есть ваши товары. С помощью нее вы можете собрать статистику по вашим заказам и узнать, например, какие из товаров чаще всего возвращаются покупателями, какие, наоборот, пользуются большим спросом, какая комиссия начисляется за заказы и т. п.  {% note info \"\" %}  Раньше генерация детальной информации по заказам называлась **Отчет по заказам**. Сейчас это новый отчет. [Подробнее об отчете](../../reference/reports/generateUnitedOrdersReport.md)  {% endnote %}  В одном запросе можно получить информацию не более чем по 200 заказам.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/stats/orders" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOrdersStatsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrdersStatsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация по заказам.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrdersStats();

    /**
     * <p>Список цен</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST campaigns/{campaignId}/offer-prices](../../reference/assortment/getPricesByOfferIds.md).  {% endnote %}  Возвращает список цен, установленных вами на товары любым способом: например, через партнерский API или в файле с каталогом.  {% note info %}  Общее количество товаров считается по данным за последние семь дней (не включая сегодня) и не может быть выше 2 миллионов.  {% endnote %}  Способы установки цен описаны [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/assortment/operations/prices.html).  |**⚙️ Лимит:** ```(количество товаров партнера на витрине) * 25``` товаров в сутки| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offer-prices" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>archived</b>"
     * <p>Фильтр по нахождению в архиве.</p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPricesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список всех товаров с установленными ценами.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getPrices();

    /**
     * <p>Просмотр цен на указанные товары в магазине</p>
     *
     * <p>Возвращает список цен на указанные товары в магазине.  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для просмотра базовых цен используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров на витрине * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-prices" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetPricesByOfferIdsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPricesByOfferIdsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров с установленными для заданного магазина ценами.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getPricesByOfferIds();

    /**
     * <p>Получение списка товаров, которые участвуют или могут участвовать в акции</p>
     *
     * <p>Возвращает список товаров, которые участвуют или могут участвовать в акции.  {% note warning %}  В параметре `limit` не передавайте значение больше 500.  {% endnote %}  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetPromoOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPromoOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров, которые участвуют или могут участвовать в акции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getPromoOffers();

    /**
     * <p>Получение списка акций</p>
     *
     * <p>Возвращает информацию об акциях Маркета.  По умолчанию возвращаются акции, в которых продавец участвует или может принять участие.  Чтобы получить текущие или завершенные акции, передайте параметр `participation`.  Типы акций, которые возвращаются в ответе:  * прямая скидка; * флеш-акция; * скидка по промокоду.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetPromosRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPromosResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список акций Маркета.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getPromos();

    /**
     * <p>Индекс качества магазинов</p>
     *
     * <p>Возвращает значение индекса качества магазинов и его составляющие.  Подробнее об индексе качества читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/score/).  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/ratings/quality" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetQualityRatingRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQualityRatingResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Значение индекса качества магазинов и его составляющие.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getQualityRatings();

    /**
     * <p>Получение заданного отчета</p>
     *
     * <p>Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/reports/info/{reportId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>reportId</b>"
     * <p>Идентификатор отчета, который вы получили после запуска генерации. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetReportInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Статус генерации отчета и ссылка, если она уже есть.  {% note tip %}  Если статус генерации отчета — `FAILED` или `NO_DATA`, проверьте корректность запроса на генерацию. Например, верно ли указан идентификатор магазина, период или номер платежного поручения.  {% endnote %}    </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReportInfo();

    /**
     * <p>Информация о невыкупе или возврате</p>
     *
     * <p>Получает информацию по одному невыкупу или возврату.  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>returnId</b>"
     * <p>Идентификатор возврата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetReturnResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Детали возврата.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturn();

    /**
     * <p>Получение фотографии возврата</p>
     *
     * <p>Получает фотографии, которые покупатель приложил к заявлению на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>returnId</b>"
     * <p>Идентификатор возврата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>itemId</b>"
     * <p>Идентификатор товара в возврате.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>imageHash</b>"
     * <p>Хеш ссылки изображения для загрузки.</p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/octet-stream}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Фотография возврата.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturnPhoto();

    /**
     * <p>Список невыкупов и возвратов</p>
     *
     * <p>Получает список невыкупов и возвратов.  Чтобы получить информацию по одному возврату или невыкупу, выполните запрос [GET campaigns/{campaignId}/orders/{orderId}/returns/{returnId}](../../reference/orders/getReturn.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/returns" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderIds</b>"
     * <p>Идентификаторы заказов — для фильтрации результатов.  Несколько идентификаторов перечисляются через запятую без пробела. Максимальное количество идентификаторов — 50. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;Long&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>statuses</b>"
     * <p>Статусы возвратов или невыкупов — для фильтрации результатов.  Несколько статусов перечисляются через запятую. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;RefundStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>type</b>"
     * <p>Тип заказа для фильтрации:  * `RETURN` — возврат.  * `UNREDEEMED` — невыкуп.  Если не указывать, в ответе будут и возвраты, и невыкупы. </p>
     * <p>
     * - Parameter type: <b>{@link ReturnType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>fromDate</b>"
     * <p>Начальная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: `ГГГГ-ММ-ДД`. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>toDate</b>"
     * <p>Конечная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: `ГГГГ-ММ-ДД`. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>from_date</b>"
     * <p>{% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `fromDate`.  {% endnote %}  Начальная дата для фильтрации возвратов или невыкупов по дате обновления. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>to_date</b>"
     * <p>{% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `toDate`.  {% endnote %}  Конечная дата для фильтрации возвратов или невыкупов по дате обновления. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetReturnsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Постраничные возвраты партнера.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturns();

    /**
     * <p>Информация об остатках и оборачиваемости</p>
     *
     * <p>Возвращает данные об остатках товаров (для всех моделей) и об [оборачиваемости](*turnover) товаров (для модели FBY).  {% note info \"По умолчанию данные по оборачивамости не возращаются\" %}  Чтобы они были в ответе, передавайте `true` в поле `withTurnover`.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-|  [//]: <> (turnover: Среднее количество дней, за которое товар продается. Подробно об оборачиваемости рассказано в Справке Маркета для продавцов https://yandex.ru/support/marketplace/analytics/turnover.html.) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers/stocks" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetWarehouseStocksRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetWarehouseStocksResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Остатки товаров на складах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getStocks();

    /**
     * <p>Рекомендованные карточки для товаров</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/suggestions](../../reference/business-assortment/getSuggestedOfferMappings.md).  {% endnote %}  Возвращает идентификаторы карточек товаров на Маркете, рекомендованных для ваших товаров.  Каждому товару, который вы размещаете, должна соответствовать карточка товара на Маркете со своим идентификатором — SKU на Маркете. Он указывается в URL карточки товара, после «...sku=», например:  ##https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016…##  Чтобы получить для товаров рекомендованные SKU на Маркете, передайте в теле POST-запроса как можно больше информации о них: названия, производителей, штрихкоды, цены и т. д.  Полученные SKU можно передать вместе с информацией о ваших товарах с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/updates](../../reference/offer-mappings/updateOfferMappingEntries.md).  В одном запросе можно получить не более 500 рекомендаций.  |**⚙️ Лимит:** 100 000 рекомендаций в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-mapping-entries/suggestions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetSuggestedOfferMappingEntriesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetSuggestedOfferMappingEntriesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о товарах в каталоге.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getSuggestedOfferMappingEntries();

    /**
     * <p>Просмотр карточек на Маркете, которые подходят вашим товарам</p>
     *
     * <p>Возвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.  Пользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточки по предоставленным вами данным.  **Как пользоваться запросом**  1. Передайте Маркету список товаров, которые нужно проверить. 2. В ответ вы получите список SKU на Маркете с расшифровкой: названием, идентификатором модели, категорией. 3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида `https://market.yandex.ru/product/<marketModelId>?sku=<marketSku>`. 4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать `marketSKU`, который ему подходит по вашему мнению.  {% note info \"𝓠 Как определить `marketSku` товара, найденного на Маркете?\" %}  𝓐 Он есть в адресе страницы товара — расположен после `sku=`.  Например, `https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016`  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/suggestions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetSuggestedOfferMappingsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetSuggestedOfferMappingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Подобранные карточки на Маркете.  По результатам проверки товара полученная через этот запрос карточка может быть заменена на другую. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getSuggestedOfferMappings();

    /**
     * <p>Цены для продвижения товаров</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [отчет «Цены на рынке»](../../reference/reports/generatePricesReport.md).  {% endnote %}  {% note warning \"\" %}  Этот метод подходит только тем магазинам, которые устанавливают цены на товары в рублях.  {% endnote %}  Возвращает цены для продвижения товаров, которые вы размещаете на Маркете.  Товары, для которых нужно получить цены, передаются в теле POST-запроса.  Цены для продвижения зависят от цен, установленных на товары другими партнерами. Если один товар поставляют несколько партнеров, на Маркете сначала продается товар с более низкой ценой. Когда закончится товар по низкой цене, начнет продаваться товар по более высокой цене.  Выходные данные содержат для каждого товара несколько цен, соответствующих разным типам продвижения.  Установить цены на товары можно с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md) или другими способами: например, указать их в файле с каталогом. Также вы можете использовать стратегии для автоматической установки рекомендованных цен или минимальных цен на Маркете.  Подробно об автоматическом управлении ценами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/prices.html).  |**⚙️ Лимит:** 100 000 товаров в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-prices/suggestions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SuggestPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link SuggestPricesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список цен для продвижения на Маркете.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getSuggestedPrices();

    /**
     * <p>Включение буста продаж и установка ставок</p>
     *
     * <p>Запускает буст продаж — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  {% cut \"Как в кабинете выглядит кампания, созданная через API\" %}  ![](../../_images/api-boost.png)  {% endcut %}  При первом использовании запроса Маркет: создаст единую на все магазины бизнес-аккаунта кампанию, добавит в нее товары с указанными ставками, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же созданной через API кампанией. Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. Другими кампаниями управлять через API не получится. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/businesses/{businessId}/bids" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link PutSkuBidsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Все получилось: ставки установлены или обновлены. Если нужно, добавлены новые товары и запущена кампания. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler putBidsForBusiness();

    /**
     * <p>Включение буста продаж и установка ставок для магазина</p>
     *
     * <p>Запускает буст продаж в указанном магазине — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  При первом использовании запроса Маркет: создаст кампанию, добавит в нее товары с указанными ставками для заданного магазина, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же кампанией, созданной через этот запрос или [PUT businesses/{businessId}/bids](/reference/bids/putBidsForBusiness). Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/bids" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link PutSkuBidsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler putBidsForCampaign();

    /**
     * <p>Сообщить, что прайс-лист обновился</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет сообщить, что магазин обновил прайс-лист. После этого Маркет начнет обновление данных на сервисе. 1. Магазин обновляет прайс-лист, ссылку на который он указал в кабинете. 2. Магазин отправляет Маркету запрос методом `POST campaigns/{campaignId}/feeds/{feedId}/refresh`. 3. Маркет начинает обновление данных магазина на сервисе.  {% note alert %}  Запрос работает только для включенных магазинов. Если магазин выключен, данные на Маркете не обновятся, даже если HTTP-код — `200 OK`. Проверить статус магазина можно с помощью базовых запросов или на странице бизнес-аккаунта.  {% endnote %}  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/feeds/{feedId}/refresh" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler refreshFeed();

    /**
     * <p>Информация о дочерних регионах</p>
     *
     * <p>Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/regions/{regionId}/children" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetRegionWithChildrenResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Регионы, являющиеся дочерними к указанному в запросе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchRegionChildren();

    /**
     * <p>Информация о регионе</p>
     *
     * <p>Возвращает информацию о регионе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/regions/{regionId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetRegionsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Найденный регион.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchRegionsById();

    /**
     * <p>Поиск регионов по их имени</p>
     *
     * <p>Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.  Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/regions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>name</b>"
     * <p>Название региона.  Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, `Москва`. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetRegionsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список найденных регионов.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchRegionsByName();

    /**
     * <p>Отправка файла в чат</p>
     *
     * <p>Отправляет файл в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/file/send" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chatId</b>"
     * <p>Идентификатор чата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>file</b>"
     * <p>Содержимое файла. Максимальный размер файла — 5 Мбайт.</p>
     * <p>
     * - Parameter type: <b>BinaryFile</b><br/>
     * - Appears in: <b>{@link io.undertow.server.handlers.form.FormDataParser Form}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{mediaType=multipart/form-data}]</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ. Означает, что файл отправлен.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler sendFileToChat();

    /**
     * <p>Отправка сообщения в чат</p>
     *
     * <p>Отправляет сообщение в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/chats/message" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chatId</b>"
     * <p>Идентификатор чата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SendMessageToChatRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ. Означает, что сообщение отправлено.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler sendMessageToChat();

    /**
     * <p>Изменение параметров прайс-листа</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет магазину изменить параметры прайс-листа.  Чтобы отредактировать параметр прайс-листа, передайте в теле запроса: `name` (название параметра) и `value` (значение параметра).  Чтобы отменить установленное значение, передайте в теле запроса: `name` (название параметра) и `delete=true` (удалить значение).  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/feeds/{feedId}/params" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetFeedParamsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Статус выполнения операции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler setFeedParams();

    /**
     * <p>Отказ от ответа на отзывы</p>
     *
     * <p>Пропускает отзывы — они больше не будут возвращаться в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/skip-reaction" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SkipGoodsFeedbackReactionRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler skipGoodsFeedbacksReaction();

    /**
     * <p>Установка цен на товары во всех магазинах</p>
     *
     * <p>Устанавливает [базовые цены](*default-price). Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-prices/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateBusinessPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Маркет принял информацию о новых ценах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateBusinessPrices();

    /**
     * <p>Изменение условий продажи товаров в магазине</p>
     *
     * <p>Изменяет параметры продажи товаров в конкретном магазине: доступность товара, условия доставки и самовывоза, применяемую ставку НДС.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateCampaignOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что новые параметры получены Маркетом и скоро вступят в силу.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateCampaignOffers();

    /**
     * <p>Добавление нового или изменение созданного комментария</p>
     *
     * <p>Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.  Для создания комментария к отзыву передайте только идентификатор отзыва `feedbackId`.  Чтобы добавить комментарий к другому комментарию, передайте:  * `feedbackId` — идентификатор отзыва; * `comment.parentId` — идентификатор родительского комментария.  Чтобы изменить комментарий, передайте:  * `feedbackId`— идентификатор отзыва; * `comment.id` — идентификатор комментария, который нужно изменить.  Если передать одновременно `comment.parentId` и `comment.id`, будет изменен существующий комментарий.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/comments/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateGoodsFeedbackCommentRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateGoodsFeedbackCommentResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о добавленном или измененном комментарии.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateGoodsFeedbackComment();

    /**
     * <p>Редактирование категорийных характеристик товара</p>
     *
     * <p>Редактирует характеристики товара, которые специфичны для категории, к которой он относится.  {% note warning \"Здесь только то, что относится к конкретной категории\" %}  Если вам нужно изменить основные параметры товара (название, описание, изображения, видео, производитель, штрихкод), воспользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Чтобы удалить характеристики, которые заданы в параметрах с типом `string`, передайте пустое значение.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-cards/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOfferContentRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateOfferContentResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Запрос выполнен корректно, данные обработаны.  {% note warning \"Ответ 200 сам по себе не значит, что переданные значения корректны\" %}  Обязательно посмотрите детали ответа: `status` и перечень ошибок, если он есть.  Даже если ошибка допущена в характеристиках всего одного товара, никакие изменения из запроса в каталог не попадут.  {% endnote %}  Если в `status` вернулось `ERROR`, убедитесь, что:  * все обязательные характеристики заполнены; * характеристики действительно существуют в указанных категориях; * значения соответствуют характеристикам; * ваши собственные значения имеют нужный тип данных.  Найти проблемы помогут поля `errors` и `warnings`. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOfferContent();

    /**
     * <p>Добавление и редактирование товаров в каталоге</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Добавляет товары, указанные в запросе, в ваш каталог товаров и редактирует уже имеющиеся товары.  Информацию о товарах нужно передать в теле POST-запроса.  У каждого товара должен быть ваш SKU — уникальный код, который вы используете для идентификации товара:  * Чтобы добавить в каталог новый товар, укажите в параметре `shopSku` ваш SKU, которого еще нет в каталоге. * Чтобы отредактировать товар из каталога, укажите в параметре `shopSku` ваш SKU этого товара в каталоге.  В обоих случаях в запросе нужно передать полное описание товара, даже если вы хотите изменить только несколько характеристик.  Если вы знаете, какой карточке товара на Маркете соответствует ваш товар, укажите ее идентификатор (SKU на Маркете) во входном параметре mapping. Получить SKU на Маркете рекомендованной карточки товара можно с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/suggestions](../../reference/offer-mappings/getSuggestedOfferMappingEntries.md) или через кабинет. Если SKU на Маркете не указан, сотрудники Маркета сами подберут или создадут подходящую карточку товара, либо у него появится статус `NEED_CONTENT` (нужно найти карточку или создать ее самостоятельно) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  Перед публикацией товары проходят модерацию. Если в одном из отправленных товаров найдена ошибка, ответ на запрос будет иметь HTTP-код 400 Bad Request, и ни один из товаров не отправится на модерацию. При этом если вы не передадите все обязательные параметры для какого‑либо товара, после модерации у него появится статус `NEED_INFO` (в описании товара не хватает информации) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  В одном запросе можно добавить не более 500 товаров.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5 000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-mapping-entries/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOfferMappingEntryRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Статус выполнения операции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler updateOfferMappingEntries();

    /**
     * <p>Добавление товаров в каталог и изменение информации о них</p>
     *
     * <p>Добавляет товары в каталог, передает их категории на Маркете и характеристики, необходимые для этих категории. Также редактирует информацию об уже имеющихся товарах.  Список категорий Маркета можно получить с помощью запроса [POST categories/tree](../../reference/categories/getCategoriesTree.md), а характеристики товаров по категориям с помощью [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).  Чтобы **добавить новый товар**, передайте его с новым идентификатором, который раньше никогда не использовался в каталоге. Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой. Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**SKU на Маркете**) в поле `marketSKU`.  Для **новых товаров** обязательно укажите параметры: `offerId`, `name`, `marketCategoryId` или `category`, `pictures`, `vendor`, `description`.  Чтобы **отредактировать информацию о товаре**, передайте новые данные, указав в `offerId` соответствующий **ваш SKU**. Поля, в которых ничего не меняется, можно не передавать.  Чтобы **удалить характеристики**, которые заданы в параметрах с типом `string`, передайте пустое значение.  Параметр `offerId` должен быть **уникальным** для всех товаров, которые вы передаете.  {% note warning \"Правила использования SKU\" %}  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-mappings/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOfferMappingsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateOfferMappingsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Все обязательные поля товаров заполнены, поэтому новые товары и внесенные изменения сохранены в каталоге. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOfferMappings();

    /**
     * <p>Установка цен на товары в конкретном магазине</p>
     *
     * <p>Устанавливает цены на товары в магазине. Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для управления базовыми ценами используйте [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-prices/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdatePricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Маркет принял информацию о новых ценах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updatePrices();

    /**
     * <p>Добавление товаров в акцию или изменение их цен</p>
     *
     * <p>Добавляет товары в акцию или изменяет цены на товары, которые участвуют в акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos/offers/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdatePromoOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdatePromoOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Результат добавления товаров в акцию или обновления их цен.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updatePromoOffers();

    /**
     * <p>Новые и обновленные отзывы о магазине</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает новые и обновленные отзывы о магазине на Маркете.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов. Выходные данные содержат идентификатор следующей страницы.  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feedback/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>from_date</b>"
     * <p>Начальная дата обновления отзывов.  Если параметр указан, возвращаются отзывы, которые были написаны или обновлены с этой даты.  Формат даты: `ГГГГ-ММ-ДД`. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedbackListResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список отзывов для магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeedbackAndCommentUpdates();

    /**
     * <p>Информация о прайс-листе</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает информацию о прайс-листе, размещенном на Маркете для заданного магазина. Также ресурс возвращает результаты автоматических проверок прайс-листа. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feeds/{feedId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о прайс-листе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeed();

    /**
     * <p>Отчет по индексации прайс-листа</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает отчет по индексации прайс-листа для заданного магазина. Отчет позволяет получить статистику загрузки прайс-листа и результаты его автоматических проверок.  Данные в отчете возвращаются в порядке убывания значений параметра `generationId`.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feeds/{feedId}/index-logs" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>published_time_from</b>"
     * <p>Начальная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Значение по умолчанию: последние восемь дней со времени отправки запроса. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>published_time_to</b>"
     * <p>Конечная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-31T00:42:42+03:00`.  Значение по умолчанию: дата и время отправки запроса.  {% note info %}  Если во время переключения между страницами выходных данных на Яндекс Маркете появятся новые результаты индексации прайс-листа, вы не получите часть данных. Чтобы этого не произошло, зафиксируйте выходные данные с помощью входного параметра `published_time_to`. Значение параметра не должно быть датой из будущего.  {% endnote %} </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>status</b>"
     * <p>Статус индексации и проверки прайс-листа на соответствие техническим требованиям.  Возможные значения: * `ERROR` — произошли ошибки. * `OK` — обработан без ошибок. * `WARNING` — наблюдались некритичные проблемы. </p>
     * <p>
     * - Parameter type: <b>{@link FeedIndexLogsStatusType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedIndexLogsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Отчет по индексации прайс-листа.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeedIndexLogs();

    /**
     * <p>Список прайс-листов магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает список прайс-листов, размещенных на Маркете для магазина. Также ресурс возвращает результаты автоматических проверок прайс-листов. |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/feeds" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFeedsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список прайс-листов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getFeeds();

    /**
     * <p>Сообщить, что прайс-лист обновился</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет сообщить, что магазин обновил прайс-лист. После этого Маркет начнет обновление данных на сервисе. 1. Магазин обновляет прайс-лист, ссылку на который он указал в кабинете. 2. Магазин отправляет Маркету запрос методом `POST campaigns/{campaignId}/feeds/{feedId}/refresh`. 3. Маркет начинает обновление данных магазина на сервисе.  {% note alert %}  Запрос работает только для включенных магазинов. Если магазин выключен, данные на Маркете не обновятся, даже если HTTP-код — `200 OK`. Проверить статус магазина можно с помощью базовых запросов или на странице бизнес-аккаунта.  {% endnote %}  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/feeds/{feedId}/refresh" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler refreshFeed();

    /**
     * <p>Изменение параметров прайс-листа</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет магазину изменить параметры прайс-листа.  Чтобы отредактировать параметр прайс-листа, передайте в теле запроса: `name` (название параметра) и `value` (значение параметра).  Чтобы отменить установленное значение, передайте в теле запроса: `name` (название параметра) и `delete=true` (удалить значение).  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/feeds/{feedId}/params" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetFeedParamsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Статус выполнения операции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler setFeedParams();

    /**
     * <p>Удаление комментария к отзыву</p>
     *
     * <p>Удаляет комментарий магазина.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/comments/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteGoodsFeedbackCommentRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteGoodsFeedbackComment();

    /**
     * <p>Получение комментариев к отзыву</p>
     *
     * <p>Возвращает комментарии к отзыву.  Результаты возвращаются постранично, одна страница содержит не более 20 комментариев.  Комментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/comments" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetGoodsFeedbackCommentsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetGoodsFeedbackCommentsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Дерево комментариев к отзыву.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getGoodsFeedbackComments();

    /**
     * <p>Получение отзывов о товарах продавца</p>
     *
     * <p>Возвращает все отзывы о товарах продавца по указанным фильтрам.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов.  Отзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetGoodsFeedbackRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetGoodsFeedbackResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список отзывов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getGoodsFeedbacks();

    /**
     * <p>Отказ от ответа на отзывы</p>
     *
     * <p>Пропускает отзывы — они больше не будут возвращаться в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/skip-reaction" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SkipGoodsFeedbackReactionRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler skipGoodsFeedbacksReaction();

    /**
     * <p>Добавление нового или изменение созданного комментария</p>
     *
     * <p>Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.  Для создания комментария к отзыву передайте только идентификатор отзыва `feedbackId`.  Чтобы добавить комментарий к другому комментарию, передайте:  * `feedbackId` — идентификатор отзыва; * `comment.parentId` — идентификатор родительского комментария.  Чтобы изменить комментарий, передайте:  * `feedbackId`— идентификатор отзыва; * `comment.id` — идентификатор комментария, который нужно изменить.  Если передать одновременно `comment.parentId` и `comment.id`, будет изменен существующий комментарий.  |**⚙️ Лимит:** 1 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/goods-feedback/comments/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateGoodsFeedbackCommentRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateGoodsFeedbackCommentResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о добавленном или измененном комментарии.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateGoodsFeedbackComment();

    /**
     * <p>Отчет по товарам</p>
     *
     * <p>Возвращает подробный отчет по товарам, которые вы разместили на Маркете. С помощью отчета вы можете узнать, например, об остатках на складе, об условиях хранения ваших товаров и т. д.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/stats/skus" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetGoodsStatsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetGoodsStatsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Отчет по товарам.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getGoodsStats();

    /**
     * <p>Скрытие товаров и настройки скрытия</p>
     *
     * <p>Скрывает товары магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/hidden-offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link AddHiddenOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Настройки скрытия получены и скоро вступят в силу.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler addHiddenOffers();

    /**
     * <p>Возобновление показа товаров</p>
     *
     * <p>Возобновляет показ скрытых вами товаров магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/hidden-offers/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteHiddenOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Показ товаров возобновлен.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteHiddenOffers();

    /**
     * <p>Информация о скрытых вами товарах</p>
     *
     * <p>Возвращает список скрытых вами товаров для заданного магазина.  В списке будут товары, скрытые любым способом — по API, с помощью YML-фида, в кабинете и так далее.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/hidden-offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>offer_id</b>"
     * <p>Идентификатор скрытого предложения. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>offset</b>"
     * <p>Позиция в списке, начиная с которой возвращаются результаты ответа.  Используется вместе с параметром `limit`.  Если задан `offset`, параметры `page_number` и `page_size` игнорируются.  `offset` игнорируется, если задан `page_token`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetHiddenOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о скрытых вами товарах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getHiddenOffers();

    /**
     * <p>Информация об одной модели</p>
     *
     * <p>Возвращает информацию о модели товара.  Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/models/{modelId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>modelId</b>"
     * <p>Идентификатор модели товара.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>currency</b>"
     * <p>Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). </p>
     * <p>
     * - Parameter type: <b>{@link CurrencyType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetModelsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о модели.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getModel();

    /**
     * <p>Список предложений для одной модели</p>
     *
     * <p>Возвращает информацию о первых десяти предложениях, расположенных на карточке модели.  Предложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.  Для групповых моделей метод не поддерживается. Идентификатор групповой модели игнорируется.  Для методов `GET models/{modelId}/offers` и `POST models/offers` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/models/{modelId}/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>modelId</b>"
     * <p>Идентификатор модели товара.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>currency</b>"
     * <p>Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). </p>
     * <p>
     * - Parameter type: <b>{@link CurrencyType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderByPrice</b>"
     * <p>Направление сортировки по цене.  Возможные значения: * `ASC` — сортировка по возрастанию. * `DESC` — сортировка по убыванию.  Значение по умолчанию: предложения выводятся в произвольном порядке. </p>
     * <p>
     * - Parameter type: <b>{@link SortOrderType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>count</b>"
     * <p>Количество предложений на странице ответа.</p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>10</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetModelsOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список предложений для модели.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getModelOffers();

    /**
     * <p>Информация о нескольких моделях</p>
     *
     * <p>Возвращает информацию о моделях товаров.  В одном запросе можно получить информацию не более чем о 100 моделях.  Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/models" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>currency</b>"
     * <p>Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). </p>
     * <p>
     * - Parameter type: <b>{@link CurrencyType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetModelsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetModelsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о моделях.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getModels();

    /**
     * <p>Список предложений для нескольких моделей</p>
     *
     * <p>Возвращает информацию о первых десяти предложениях, расположенных на карточках моделей, идентификаторы которых указаны в запросе.  Предложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.  Для групповых моделей выдача предложений не поддерживается. Идентификаторы групповых моделей игнорируются.  В одном запросе можно получить информацию о предложениях не более чем для 100 моделей.  Для методов `GET models/{modelId}/offers` и `POST models/offers` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/models/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>currency</b>"
     * <p>Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). </p>
     * <p>
     * - Parameter type: <b>{@link CurrencyType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderByPrice</b>"
     * <p>Направление сортировки по цене.  Возможные значения: * `ASC` — сортировка по возрастанию. * `DESC` — сортировка по убыванию.  Значение по умолчанию: предложения выводятся в произвольном порядке. </p>
     * <p>
     * - Parameter type: <b>{@link SortOrderType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetModelsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetModelsOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список предложений для моделей.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getModelsOffers();

    /**
     * <p>Поиск модели товара</p>
     *
     * <p>Возвращает информацию о моделях, удовлетворяющих заданным в запросе условиям поиска.  В одном запросе можно получить информацию не более чем о 100 моделях.  Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.  |**⚙️ Лимит:** [рассчитывается индивидуально](*rule)| |-|  [//]: <> (rule: Суточный лимит зависит от количества предложений на карточках моделей и активных магазинов клиента. Количество предложений считается по данным за последние семь дней, не включая сегодня. Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений. Для клиентов с несколькими магазинами ограничение рассчитывается с учетом количества предложений, являющегося максимальным среди всех магазинов клиента. Для агентств ограничение суммируется по всем субклиентам агентства.) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/models" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>query</b>"
     * <p>Поисковый запрос по названию модели товара.</p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>currency</b>"
     * <p>Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). </p>
     * <p>
     * - Parameter type: <b>{@link CurrencyType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link SearchModelsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о моделях.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchModels();

    /**
     * <p>Список товаров в каталоге</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  Для каждого товара, который вы размещаете на Маркете, возвращается информация о карточках Маркета, к которым привязан этот товар:  * Идентификатор текущей карточки (marketSku), карточки, которая проходит модерацию и последней отклоненной карточки. * Описание товара, которое указано на карточке Маркета. Например, размер упаковки и вес товара.  Результаты возвращаются постранично. Выходные данные содержат идентификатор следующей страницы.  {% note info %}  Количество товаров в каталоге магазина считается по данным за последние семь дней (не включая сегодня).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров в каталоге магазина * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offer-mapping-entries" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>offer_id</b>"
     * <p>Идентификатор товара в каталоге.</p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shop_sku</b>"
     * <p>Ваш SKU товара.  Параметр может быть указан несколько раз, например:  ``` ...shop_sku=123&shop_sku=129&shop_sku=141... ```  В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>mapping_kind</b>"
     * <p>Тип маппинга.</p>
     * <p>
     * - Parameter type: <b>{@link OfferMappingKindType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>status</b>"
     * <p>Фильтрация по статусу публикации товара:  * `READY` — товар прошел модерацию. * `IN_WORK` — товар проходит модерацию. * `NEED_CONTENT` — для товара без SKU на Маркете marketSku нужно найти карточку самостоятельно или создать ее. * `NEED_INFO` — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. * `REJECTED` — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары. * `SUSPENDED` — товар не прошел модерацию, так как Маркет пока не размещает подобные товары. * `OTHER` — товар не прошел модерацию по другой причине.  Можно указать несколько статусов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...status=READY,IN_WORK... ...status=READY&status=IN_WORK... ```  В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;OfferProcessingStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>availability</b>"
     * <p>Фильтрация по планам поставок товара:  * `ACTIVE` — поставки будут. * `INACTIVE` — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять. * `DELISTED` — архив: товар закончился на складе, и его поставок больше не будет.  Можно указать несколько значений в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...availability=INACTIVE,DELISTED... ...availability=INACTIVE&availability=DELISTED... ```  В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;OfferAvailabilityStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>category_id</b>"
     * <p>Фильтрация по идентификатору категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).  Можно указать несколько идентификаторов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...category_id=14727164,14382343... ...category_id=14727164&category_id=14382343... ```  В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;Integer&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>vendor</b>"
     * <p>Фильтрация по бренду товара.  Можно указать несколько брендов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...vendor=Aqua%20Minerale,Borjomi... ...vendor=Aqua%20Minerale&vendor=Borjomi... ```  Чтобы товар попал в результаты фильтрации, его бренд должен точно совпадать с одним из указанных в запросе. Например, если указан бренд Schwarzkopf, то в результатах не будет товаров Schwarzkopf Professional.  Если в названии бренда есть символы, которые не входят в таблицу ASCII (в том числе кириллические символы), используйте для них URL-кодирование. Например, пробел — %20, апостроф «'» — %27 и т. д. Подробнее см. в разделе [Кодирование URL русскоязычной Википедии](https://ru.wikipedia.org/wiki/URL#Кодирование_URL).  В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;String&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferMappingEntriesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о товарах в каталоге.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getOfferMappingEntries();

    /**
     * <p>Рекомендованные карточки для товаров</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/suggestions](../../reference/business-assortment/getSuggestedOfferMappings.md).  {% endnote %}  Возвращает идентификаторы карточек товаров на Маркете, рекомендованных для ваших товаров.  Каждому товару, который вы размещаете, должна соответствовать карточка товара на Маркете со своим идентификатором — SKU на Маркете. Он указывается в URL карточки товара, после «...sku=», например:  ##https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016…##  Чтобы получить для товаров рекомендованные SKU на Маркете, передайте в теле POST-запроса как можно больше информации о них: названия, производителей, штрихкоды, цены и т. д.  Полученные SKU можно передать вместе с информацией о ваших товарах с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/updates](../../reference/offer-mappings/updateOfferMappingEntries.md).  В одном запросе можно получить не более 500 рекомендаций.  |**⚙️ Лимит:** 100 000 рекомендаций в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-mapping-entries/suggestions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetSuggestedOfferMappingEntriesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetSuggestedOfferMappingEntriesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о товарах в каталоге.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getSuggestedOfferMappingEntries();

    /**
     * <p>Добавление и редактирование товаров в каталоге</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Добавляет товары, указанные в запросе, в ваш каталог товаров и редактирует уже имеющиеся товары.  Информацию о товарах нужно передать в теле POST-запроса.  У каждого товара должен быть ваш SKU — уникальный код, который вы используете для идентификации товара:  * Чтобы добавить в каталог новый товар, укажите в параметре `shopSku` ваш SKU, которого еще нет в каталоге. * Чтобы отредактировать товар из каталога, укажите в параметре `shopSku` ваш SKU этого товара в каталоге.  В обоих случаях в запросе нужно передать полное описание товара, даже если вы хотите изменить только несколько характеристик.  Если вы знаете, какой карточке товара на Маркете соответствует ваш товар, укажите ее идентификатор (SKU на Маркете) во входном параметре mapping. Получить SKU на Маркете рекомендованной карточки товара можно с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/suggestions](../../reference/offer-mappings/getSuggestedOfferMappingEntries.md) или через кабинет. Если SKU на Маркете не указан, сотрудники Маркета сами подберут или создадут подходящую карточку товара, либо у него появится статус `NEED_CONTENT` (нужно найти карточку или создать ее самостоятельно) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  Перед публикацией товары проходят модерацию. Если в одном из отправленных товаров найдена ошибка, ответ на запрос будет иметь HTTP-код 400 Bad Request, и ни один из товаров не отправится на модерацию. При этом если вы не передадите все обязательные параметры для какого‑либо товара, после модерации у него появится статус `NEED_INFO` (в описании товара не хватает информации) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  В одном запросе можно добавить не более 500 товаров.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5 000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-mapping-entries/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOfferMappingEntryRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Статус выполнения операции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler updateOfferMappingEntries();

    /**
     * <p>Удаление товаров из ассортимента магазина</p>
     *
     * <p>Удаляет заданные товары из заданного магазина.  {% note warning \"Запрос удаляет товары именно из конкретного магазина\" %}  На продажи в других магазинах и на наличие товара в общем каталоге он не влияет.  {% endnote %}  Товар не получится удалить, если он хранится на складах Маркета.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeleteCampaignOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeleteCampaignOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Если удалось удалить не все товары, с ответом 200 вернется список тех, что были в запросе, но остались в магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteCampaignOffers();

    /**
     * <p>Все предложения магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет максимально быстро получить информацию обо всех предложениях магазина, размещенных на Маркете. Возвращает результат в виде сегментов нефиксированного размера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Яндекс Маркета, с которой соотнесено предложение, а также аукционные ставки на него.  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — среднее количество таваров в каталоге за неделю * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offers/all" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>chunk</b>"
     * <p>Номер сегмента с результатами.  Значение по умолчанию: `0`.  {% note info %}  Номера сегментов запрашиваются последовательно, пока не будет получен сегмент с пустым ответом. Пустой ответ означает, что все предложения магазина получены.  {% endnote %}  {% note alert %}  Нумерация начинается с 0. Чтобы запросить первую страницу, необходимо указать `chunk=0` и т. д.  {% endnote %} </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetAllOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Предложения магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getAllOffers();

    /**
     * <p>Информация о товарах, которые размещены в заданном магазине</p>
     *
     * <p>Возвращает список товаров, которые размещены в заданном магазине. Для каждого товара указываются параметры размещения.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetCampaignOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetCampaignOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров, размещенных в заданном магазине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignOffers();

    /**
     * <p>Рекомендации Маркета, касающиеся цен</p>
     *
     * <p>Метод возвращает рекомендации нескольких типов.  **1. Порог для привлекательной цены. Он нужен для участия в софинансировании скидок.**  Показывает, какие **цены для участия** нужно установить, чтобы получить максимальные шансы на срабатывание скидок, софинансируемых Маркетом. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)  **2. Оценка привлекательности цен на витрине.**  Привлекательность влияет на вероятность срабатывания скидок за счет Маркета. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#validation)  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offers/recommendations" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOfferRecommendationsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOfferRecommendationsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров с рекомендациями.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOfferRecommendations();

    /**
     * <p>Предложения магазина</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет фильтровать информацию о предложениях магазина, размещенных на Маркете, и искать предложения по заданному поисковому запросу.  Поиск предложений, размещенных на Маркете, работает по поисковому запросу аналогично поиску Маркета. Результаты возвращаются с использованием пейджера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Маркета, с которой соотнесено предложение, и аукционные ставки на него.  {% note info %}  Из-за особенностей поиска Маркета иногда на последних страницах пейджера фактическое количество результатов оказывается меньше количества, указанного ранее на предыдущих страницах.  В связи с этим настоятельно рекомендуется анализировать содержимое параметра pager для каждой полученной страницы.  {% endnote %}  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лисит товаров — среднее количество таваров в каталоге за неделю * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>query</b>"
     * <p>Поисковый запрос.  Поддерживается язык запросов.  Значение по умолчанию: все предложения магазина, размещенные на Маркете. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>feedId</b>"
     * <p>Идентификатор прайс-листа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shopCategoryId</b>"
     * <p>Идентификатор категории предложения, указанный магазином в прайс-листе.  Параметр выводится только для предложений, у которых указана категория в прайс-листе.  Параметр доступен начиная с версии 2.0 партнерского API. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>currency</b>"
     * <p>Валюта, в которой указана цена предложения.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна. </p>
     * <p>
     * - Parameter type: <b>{@link CurrencyType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>matched</b>"
     * <p>Фильтр по признаку соотнесения предложения и карточки модели.  Возможные значения:  * `0 / FALSE / NO` — поиск выполняется среди предложений, не соотнесенных ни с какой карточкой модели.  * `1 / TRUE / YES` — поиск выполняется среди предложений, соотнесенных с карточками моделей). </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Предложения магазина.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getOffers();

    /**
     * <p>Изменение условий продажи товаров в магазине</p>
     *
     * <p>Изменяет параметры продажи товаров в конкретном магазине: доступность товара, условия доставки и самовывоза, применяемую ставку НДС.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateCampaignOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что новые параметры получены Маркетом и скоро вступят в силу.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateCampaignOffers();

    /**
     * <p>Информация о покупателе — юридическом лице</p>
     *
     * <p>Возвращает информацию о покупателе по идентификатору заказа.  {% note info \"\" %}  Чтобы получить информацию о покупателе, который является физическим лицом, воспользуйтесь запросом [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  {% endnote %}  Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY`, `PICKUP` или `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/{orderId}/business-buyer" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBusinessBuyerInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о покупателе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrderBusinessBuyerInfo();

    /**
     * <p>Информация о документах</p>
     *
     * <p>Возвращает информацию о документах по идентификатору заказа.  Получить данные можно после того, как заказ перейдет в статус `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/{orderId}/documents" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetBusinessDocumentsInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о документах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrderBusinessDocumentsInfo();

    /**
     * <p>Информация о покупателе — физическом лице</p>
     *
     * <p>Возвращает информацию о покупателе по идентификатору заказа.  {% note info \"\" %}  Чтобы получить информацию о покупателе, который является юридическим лицом, воспользуйтесь запросом [POST campaigns/{campaignId}/orders/{orderId}/business-buyer](../../reference/order-business-information/getOrderBusinessBuyerInfo.md).  {% endnote %}  Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY` или `PICKUP`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/buyer" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrderBuyerInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о покупателе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrderBuyerInfo();

    /**
     * <p>Изменение даты доставки заказа</p>
     *
     * <p>Метод изменяет дату доставки заказа в статусе `PROCESSING` или `DELIVERY`. Для заказов с другими статусами дату доставки изменить нельзя.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/delivery/date" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetOrderDeliveryDateRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Успешное изменение даты доставки.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler setOrderDeliveryDate();

    /**
     * <p>Передача трек‑номера посылки</p>
     *
     * <p>{% note warning \"Этот запрос только для DBS\" %}  Вы можете использовать запрос, чтобы повысить лояльность покупателей. Если они могут узнать, на каком этапе доставки находятся их заказы, доверие покупателей к вашему магазину может возрасти.  {% endnote %}  Передает Маркету трек‑номер, по которому покупатель может отследить посылку со своим заказом через службу доставки.  Передать трек‑номер можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY` или `PICKUP`.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/{orderId}/delivery/track" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetOrderDeliveryTrackCodeRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Трек‑номер посылки и идентификатор службы доставки были успешно переданы.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler setOrderDeliveryTrackCode();

    /**
     * <p>Продление срока хранения заказа</p>
     *
     * <p>Продлевает срок хранения заказа в пункте выдачи продавца.  Заказ должен быть в статусе `PICKUP`. Продлить срок можно только один раз, не больше чем на 30 дней.  Новый срок хранения можно получить в параметре `outletStorageLimitDate` запроса [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/delivery/storage-limit" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOrderStorageLimitRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOrderStorageLimit();

    /**
     * <p>Передача кода подтверждения</p>
     *
     * <p>Отправляет Маркету код подтверждения для его проверки.  Код подтверждает передачу заказа или невыкупа:  * курьеру — курьер должен назвать магазину код; * магазину — магазин называет код курьеру.  Если магазин получает невыкупленный заказ, то ему нужно назвать курьеру код из кабинета или приложения.  Если у магазина настроена работа с кодами подтверждения, в запросах [POST order/status](../../pushapi/reference/postOrderStatus.md), [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md), [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md), [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) в параметре `delivery`, вложенном в `order` будет возвращаться параметр `eacType` с типом `Enum` — тип кода подтверждения для передачи заказа.  Возможные значения: `MERCHANT_TO_COURIER` — магазин называет код курьеру, `COURIER_TO_MERCHANT` — курьер называет код магазину.  Параметр `eacType` возвращается при статусах заказа `COURIER_FOUND`, `COURIER_ARRIVED_TO_SENDER` и `DELIVERY_SERVICE_UNDELIVERED`. Если заказ в других статусах, параметр может отсутствовать.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/verifyEac" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link VerifyOrderEacRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link VerifyOrderEacResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Проверка кода выполнена успешно.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler verifyOrderEac();

    /**
     * <p>Готовый ярлык‑наклейка для коробки в заказе</p>
     *
     * <p>Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор грузоместа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>boxId</b>"
     * <p>Идентификатор коробки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>format</b>"
     * <p>Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.</p>
     * <p>
     * - Parameter type: <b>{@link PageFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/pdf}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: PDF‑файл с ярлыками для коробки. Файл содержит одну страницу с ярлыком.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateOrderLabel();

    /**
     * <p>Готовые ярлыки‑наклейки на все коробки в одном заказе</p>
     *
     * <p>Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/delivery/labels" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>format</b>"
     * <p>Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.</p>
     * <p>
     * - Parameter type: <b>{@link PageFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/pdf}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: PDF‑файл с ярлыками на все коробки.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateOrderLabels();

    /**
     * <p>Данные для самостоятельного изготовления ярлыков</p>
     *
     * <p>Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/delivery/labels/data" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrderLabelsDataResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация для печати ярлыков.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrderLabelsData();

    /**
     * <p>Отмена заказа покупателем</p>
     *
     * <p>Подтверждает или отклоняет запрос покупателя на отмену заказа, который передан службе доставки.  Покупатель может отменить заказ в течение его обработки или доставки. Если заказ еще обрабатывается (имеет статус PROCESSING), вам не нужно подтверждать отмену заказа — он будет отменен автоматически.  Если заказ уже передан службе доставки (принимает статус `DELIVERY` или `PICKUP`) и пользователь отменил его, вы можете предупредить службу об отмене в течение 48 часов. Если служба доставки узнала об отмене до передачи заказа покупателю, подтвердите отмену с помощью запроса [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation.md). Если заказ уже доставлен, отклоните отмену с помощью этого же запроса. Тогда у покупателя останется заказ, и деньги за него возвращаться не будут.  Чтобы узнать, какие заказы были отменены в статусе `DELIVERY` или `PICKUP`, отправьте запрос [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md). В его URL добавьте входной параметр `onlyWaitingForCancellationApprove=true`. Вы также можете узнать об отмененных заказах в кабинете или через почту — на нее придет уведомление об отмене.  Если в течение 48 часов вы не подтвердите или отклоните отмену, заказ будет отменен автоматически.  |**⚙️ Лимит:** 500 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/cancellation/accept" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link AcceptOrderCancellationRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ на отмену заказа был успешно передан.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler acceptOrderCancellation();

    /**
     * <p>Информация об одном заказе</p>
     *
     * <p>Возвращает информацию о заказе.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrderResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о заказе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrder();

    /**
     * <p>Информация о нескольких заказах</p>
     *
     * <p>Возвращает информацию о заказах. Запрос можно использовать, чтобы узнать, нет ли новых заказов.  Доступна фильтрация по нескольким характеристикам заказов:  * дате оформления;  * статусу;  * идентификаторам заказов;  * этапу обработки или причине отмены;  * типу (настоящий или тестовый);  * дате отгрузки в службу доставки;  * дате и времени обновления заказа.  Информация о заказах, доставленных или отмененных больше 30 дней назад, не возвращается. Ее можно получить с помощью запроса информации об отдельном заказе [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) (если у вас есть идентификатор заказа) или запроса отчета по заказам [POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md).  Максимальный диапазон дат за один запрос к ресурсу — 30 дней. Максимальное количество заказов в выходных данных запроса — 50.  Результаты возвращаются постранично. Для навигации по страницам используйте параметры `page_token` и `limit`.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderIds</b>"
     * <p>Фильтрация заказов по идентификаторам. <br><br> ⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;Long&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>status</b>"
     * <p>Статус заказа:  * `CANCELLED` — заказ отменен.  * `DELIVERED` — заказ получен покупателем.  * `DELIVERY` — заказ передан в службу доставки.  * `PICKUP` — заказ доставлен в пункт самовывоза.  * `PROCESSING` — заказ находится в обработке.  * `UNPAID` — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).  Также могут возвращаться другие значения. Обрабатывать их не требуется. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link Set&lt;OrderStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>substatus</b>"
     * <p>Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).  Возможные значения для заказа в статусе `PROCESSING`:  * `STARTED` — заказ подтвержден, его можно начать обрабатывать. * `READY_TO_SHIP` — заказ собран и готов к отправке. * `SHIPPED` — заказ передан службе доставки.  Возможные значения для заказа в статусе `CANCELLED`:  * `DELIVERY_SERVICE_UNDELIVERED` — служба доставки не смогла доставить заказ.  * `PROCESSING_EXPIRED` — значение более не используется.  * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.  * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.  * `RESERVATION_FAILED` — Маркет не может продолжить дальнейшую обработку заказа.  * `SHOP_FAILED` — магазин не может выполнить заказ.  * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.  * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.  * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.  * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.  * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.  * `USER_UNREACHABLE` — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:    * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;   * перерыв между первым и третьим звонком не менее 90 минут;   * соединение не короче 5 секунд.    Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400. * `USER_WANTS_TO_CHANGE_DELIVERY_DATE` — покупатель хочет получить заказ в другой день. * `CANCELLED_COURIER_NOT_FOUND` — не удалось найти курьера.  Также могут возвращаться другие значения. Обрабатывать их не требуется. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link Set&lt;OrderSubstatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>fromDate</b>"
     * <p>Начальная дата для фильтрации заказов по дате оформления.  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной и конечной датой (параметр `toDate`) должно быть не больше 30 дней.  Значение по умолчанию: 30 дней назад от текущей даты. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>toDate</b>"
     * <p>Конечная дата для фильтрации заказов по дате оформления.  Показываются заказы, созданные до 00:00 указанного дня.  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной (параметр `fromDate`) и конечной датой должно быть не больше 30 дней.  Значение по умолчанию: текущая дата. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>supplierShipmentDateFrom</b>"
     * <p>Начальная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной и конечной датой (параметр `supplierShipmentDateTo`) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>supplierShipmentDateTo</b>"
     * <p>Конечная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной (параметр `supplierShipmentDateFrom`) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>updatedAtFrom</b>"
     * <p>Начальная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Между начальной и конечной датой (параметр `updatedAtTo`) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>updatedAtTo</b>"
     * <p>Конечная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Между начальной (параметр `updatedAtFrom`) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>dispatchType</b>"
     * <p>Способ отгрузки</p>
     * <p>
     * - Parameter type: <b>{@link OrderDeliveryDispatchType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>fake</b>"
     * <p>Фильтрация заказов по типам:  * `false` — настоящий заказ покупателя.  * `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>hasCis</b>"
     * <p>Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации [в системе «Честный ЗНАК»](https://честныйзнак.рф/):  * `true` — да.  * `false` — нет.  Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям. </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>onlyWaitingForCancellationApprove</b>"
     * <p>**Только для модели DBS**  Фильтрация заказов по наличию запросов покупателей на отмену.  При значение `true` возвращаются только заказы, которые находятся в статусе `DELIVERY` или `PICKUP` и которые пользователи решили отменить.  Чтобы подтвердить или отклонить отмену, отправьте запрос [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation). </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>onlyEstimatedDelivery</b>"
     * <p>Фильтрация заказов с долгой доставкой (31-60 дней) по подтвержденной дате доставки:  * `true` — возвращаются только заказы с неподтвержденной датой доставки. * `false` — фильтрация не применяется. </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>buyerType</b>"
     * <p>Фильтрация заказов по типу покупателя. </p>
     * <p>
     * - Parameter type: <b>{@link OrderBuyerType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrdersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о заказах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrders();

    /**
     * <p>Передача ключей цифровых товаров</p>
     *
     * <p>Передает ключи цифровых товаров, которые покупатель заказал и оплатил. После выполнения запроса Маркет отправит ему письмо с ключами и инструкциями по активации, а также переведет заказ в финальный статус `DELIVERED`.  Ключ нужно передать в течение 30 минут после перехода заказа в статус `PROCESSING`.  Если в один заказ входят несколько ключей, передавайте их все в одном запросе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/{orderId}/deliverDigitalGoods" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ProvideOrderDigitalCodesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler provideOrderDigitalCodes();

    /**
     * <p>Передача кодов маркировки единиц товара</p>
     *
     * <p>{% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Передает Маркету коды маркировки для единиц товара в указанном заказе.  Принимаются коды следующих типов:  * Коды «Честного знака». * УИН для ювелирных изделий. * РНПТ и ГТД для импортных прослеживаемых товаров.  {% note warning %}  Прежде чем работать с этим методом, обязательно прочтите [статью о работе с маркируемыми товарами](https://yandex.ru/support/marketplace/orders/cz.html).  {% endnote %}  Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/identifiers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ProvideOrderItemIdentifiersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link ProvideOrderItemIdentifiersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что коды успешно записались. Ответ содержит краткие сведения о промаркированных товарах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler provideOrderItemIdentifiers();

    /**
     * <p>Подготовка заказа</p>
     *
     * <p>{% note tip \"Подходит и для DBS\" %}  Запрос предназначен для работы с FBS-заказами, но вы можете использовать его для обработки DBS-заказов, если это удобно.  {% endnote %}  Позволяет выполнить три операции:  * передать Маркету информацию о распределении товаров по коробкам; * передать Маркету коды маркировки для товаров; * удалить товар из заказа, если его не оказалось на складе.  Если нужно что-то поправить в переданных данных, просто повторите запрос — это можно делать сколько угодно раз до перевода заказа в статус **Готов к отгрузке**. ⚠️ Если вы меняете раскладку уже после печати и расклейки ярлыков, не забудье перепечатать их и наклеить заново.  ## Как передать информацию о распределении товаров  В этом запросе вам нужно передать Маркету список коробок и указать, какие именно товары лежат в каждой из них. Коробки могут быть двух типов:  * **Содержащие товары целиком.** Такая коробка может содержать сколько угодно единиц любых товаров.  * **Содержащие часть товара.** Такие коробки содержат по одной части одного товара. Например, одна содержит внешний блок кондиционера, а другая — внутренний блок.  ⚠️ Одна коробка не может содержать и товары целиком, и части товаров.  ## Как передавать коды маркировки  Если в заказе есть товары, подлежащие маркировке, в запросе нужно передать соответствующие уникальные коды. [Что такое маркировка?](https://yandex.ru/support/marketplace/orders/cz.html)  Принимаются коды следующих типов:  * Коды «Честного знака». * УИН для ювелирных изделий. * РНПТ и ГТД для импортных прослеживаемых товаров.  Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.  Если товар едет в нескольких коробках, код маркировки нужно передать для каждой из них.  ## Как удалить товар из заказа  Чтобы удалить товар из заказа:  1. Добавьте в запрос `allowRemove: true`. 2. Передайте распределение по коробкам без товара, который нужно удалить.  {% note warning \"Удаление нельзя отменить\" %}  Эта операция необратима: покупатель сразу получит уведомление, а состав заказа изменится.  {% endnote %}  Чтобы удалить позицию целиком, не передавайте соответствующий `OrderBoxLayoutItemDTO`. Чтобы уменьшить количество товара, передайте уменьшенное значение в поле `fullCount`.  Нельзя удалить или уменьшить количество товара, если он:  * добавлен по акции; * составляет 99% стоимости заказа; * единственный товар в заказе.  Если вы не можете отгрузить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.  {% note info \"Увеличить заказ нельзя\" %}  С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.  {% endnote %}  ## Примеры  {% cut \"Товар умещается в коробку\" %}  Вот как будет выглядеть запрос, если в одной коробке едут:    * три единицы одного товара, требующего маркировки;   * одна единица другого товара, не требущего маркировки.    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"fullCount\": 3,                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           },                           {                               \"cis\": \"010304109478gftJ14545762!\\u001dhGt264\"                           },                           {                               \"cis\": \"010304109478fRs28323ks23!\\u001dhet201\"                           }                       ]                   },                   {                       \"id\": 654321,                       \"fullCount\": 1                   }               ]           }       ]   }   ```  {% endcut %}  {% cut \"Товар едет в разных коробках\" %}  Вот как будет выглядеть запрос, если товар едет в двух коробках:    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           }       ]   }   ```  {% endcut %}  {% cut \"Одинаковые товары, где каждый едет в нескольких коробках\" %}  Вот как будет выглядеть запрос, если каждый из двух одинаковых товаров едет в двух коробках:    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           }       ]   }   ```  {% endcut %}  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/boxes" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetOrderBoxLayoutRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link SetOrderBoxLayoutResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ придет переданная раскладка с идентификаторами коробок — они понадобятся для запроса ярлыков. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler setOrderBoxLayout();

    /**
     * <p>Передача количества грузовых мест в заказе</p>
     *
     * <p>{% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Отгружаемый Маркету заказ может не влезть в одну коробку или упаковку — в этом случае получается, что он занимает несколько грузовых мест.  Количество грузовых мест нужно обязательно передавать Маркету, если оно не равно 1. Это делается перед переводом его в статус **Готов к отгрузке**. Подробно о том, что в какой момент нужно передавать, рассказано в [пошаговой инструкции](../../step-by-step/fbs.md).  Метод устроен немного нестандартно: количество задается длиной массива пустых объектов.  Раньше метод требовал передачи большего количества данных. Запросы, оформленные по старому образцу, работают, но лучше делать по-новому.  {% cut \"Как было раньше\" %}  Структура тела PUT-запроса:  ``` {   \"boxes\":   [     {       \"fulfilmentId\": \"{string}\",       \"weight\": {int64},       \"width\": {int64},       \"height\": {int64},       \"depth\": {int64},       \"items\":       [         {           \"id\": {int64},           \"count\": {int32}         },         ...       ]     },     ...   ] } ``` | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `boxes`       |           | Список грузовых мест.       |  **Параметры, вложенные в `boxes`** | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `fulfilmentId`       |  String   | Идентификатор грузового места в информационной системе магазина. Сформируйте идентификатор по шаблону: `номер заказа на Маркете-номер грузового места`. Например, `7206821‑1, 7206821‑2` и т. д. | | `weight`       | Int64        | Масса брутто грузового места (суммарная масса упаковки и содержимого) в граммах. | | `width`       | Int64   | Ширина грузового места в сантиметрах.       | | `height`       | Int64   | Высота грузового места в сантиметрах.       | | `depth`       | Int64   | Глубина грузового места в сантиметрах.        | | `items`       | Int64   | Список товаров в грузовом месте.       |  **Параметры, вложенные в `items`** | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `id`       | Int64     | Идентификатор товара в рамках заказа.   | | `count`    | Int32     | Количество единиц товара в грузовом месте.       |  {% endcut %}  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Параметр больше не используется. Вставьте любое число — просто чтобы получился корректный URL. </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetOrderShipmentBoxesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link SetOrderShipmentBoxesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Имеет значение только тип ответа. Если ответ `ОК`, количество грузомест записано.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler setOrderShipmentBoxes();

    /**
     * <p>Удаление товара из заказа или уменьшение числа единиц</p>
     *
     * <p>{% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Изменяет состав заказа, если позволяет выбранная служба доставки, в случаях:  * покупатель уменьшил количество товара; * магазин не может поставить все товары в заказе.  Для этого заказ должен находится в статусе `\"status\": \"PROCESSING\"` этапа обработки `\"substatus\": \"STARTED\"`. После передачи статуса `\"substatus\": \"READY_TO_SHIP\"` изменить состав невозможно.  Если одинаковых товаров несколько, для уменьшения количества передайте обновленное значение в атрибуте `count` параметра `item`.  Чтобы полностью удалить товар из заказа:  * передайте значение `0`; или * не передавайте параметр `item`.  Нельзя удалить или уменьшить количество товара, если он:  * добавлен по акции; * составляет 99% стоимости заказа; * единственный товар в заказе.  Если необходимо удалить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.  {% note info \"Увеличить заказ нельзя\" %}  С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.  {% endnote %}  **Возврат денег покупателю**  Если покупатель оплатил товар при оформлении, Маркет вернет ему деньги за удаленные из заказа товары в течение двух дней:  * при оплате банковской картой — с момента, когда магазин переведет заказ в статус `SHIPPED`;  * при оплате через Apple Pay или Google Pay — с момента, когда магазин удалит товар из заказа.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/items" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOrderItemRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Маркет успешно обработал ваш запрос. Выходные данные не ожидаются.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOrderItems();

    /**
     * <p>Изменение статуса одного заказа</p>
     *
     * <p>Изменяет статус заказа. Возможные изменения статусов:  * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`. * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`. * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/orders/{orderId}/status" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOrderStatusRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateOrderStatusResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В случае успешного изменения статуса заказа возвращается обновленная информация о заказе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOrderStatus();

    /**
     * <p>Изменение статусов нескольких заказов</p>
     *
     * <p>Изменяет статусы нескольких заказов.  Возможные изменения статусов:  * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"`и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`. * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`. * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.  Максимальное количество заказов, у которых можно изменить статус в одном запросе, — 30.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/status-update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOrderStatusesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdateOrderStatusesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Возвращается информация об обновленных статусах заказов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOrderStatuses();

    /**
     * <p>Детальная информация по заказам</p>
     *
     * <p>Возвращает информацию по заказам на Маркете, в которых есть ваши товары. С помощью нее вы можете собрать статистику по вашим заказам и узнать, например, какие из товаров чаще всего возвращаются покупателями, какие, наоборот, пользуются большим спросом, какая комиссия начисляется за заказы и т. п.  {% note info \"\" %}  Раньше генерация детальной информации по заказам называлась **Отчет по заказам**. Сейчас это новый отчет. [Подробнее об отчете](../../reference/reports/generateUnitedOrdersReport.md)  {% endnote %}  В одном запросе можно получить информацию не более чем по 200 заказам.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/stats/orders" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetOrdersStatsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOrdersStatsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация по заказам.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOrdersStats();

    /**
     * <p>Удаление лицензий для точек продаж</p>
     *
     * <p>Удаляет информацию о лицензиях для точек продаж.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#DELETE DELETE} "/campaigns/{campaignId}/outlets/licenses" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>ids</b>"
     * <p>Список идентификаторов лицензий.</p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link Set&lt;Long&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteOutletLicenses();

    /**
     * <p>Информация о лицензиях для точек продаж</p>
     *
     * <p>Возвращает информацию о лицензиях для точек продаж.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/outlets/licenses" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>outletIds</b>"
     * <p>Список идентификаторов точек продаж, для которых нужно получить информацию о лицензиях. Идентификаторы указываются через запятую.  В запросе должен быть либо параметр `outletIds`, либо параметр `ids`. Запрос с обоими параметрами или без них приведет к ошибке. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link Set&lt;Long&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>ids</b>"
     * <p>Список идентификаторов лицензий.</p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link Set&lt;Long&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOutletLicensesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Найденные лицензии собственных точек продаж.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOutletLicenses();

    /**
     * <p>Создание и изменение лицензий для точек продаж</p>
     *
     * <p>Передает информацию о новых и существующих лицензиях для точек продаж. Поддерживаются только лицензии на розничную продажу алкоголя.  Чтобы размещать алкогольную продукцию на Маркете, надо также прислать гарантийное письмо (если вы еще не делали этого раньше) и правильно оформить предложения в прайс-листе. Далее информация о лицензиях проходит проверку.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/outlets/licenses" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateOutletLicenseRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOutletLicenses();

    /**
     * <p>Создание точки продаж</p>
     *
     * <p>Создает точку продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/outlets" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ChangeOutletRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link CreateOutletResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о созданной точке продаж.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler createOutlet();

    /**
     * <p>Удаление точки продаж</p>
     *
     * <p>Удаляет точку продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#DELETE DELETE} "/campaigns/{campaignId}/outlets/{outletId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>outletId</b>"
     * <p>Идентификатор точки продаж.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deleteOutlet();

    /**
     * <p>Информация об одной точке продаж</p>
     *
     * <p>Возвращает информацию о точках продаж магазина.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/outlets/{outletId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>outletId</b>"
     * <p>Идентификатор точки продаж.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOutletResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о точке продаж.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOutlet();

    /**
     * <p>Информация о нескольких точках продаж</p>
     *
     * <p>Возвращает список точек продаж магазина.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/outlets" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>region_id</b>"
     * <p>Идентификатор региона. Если задать идентификатор родительского региона любого уровня, в выходных данных будут отображены точки продаж всех дочерних регионов. Идентификатор региона можно получить c помощью метода [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shop_outlet_code</b>"
     * <p>Идентификатор точки продаж, присвоенный магазином.</p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>{% note warning \"\" %}  Этот параметр устарел. Для указания региона используйте `region_id`.  {% endnote %} </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetOutletsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о точках продаж.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getOutlets();

    /**
     * <p>Изменение информации о точке продаж</p>
     *
     * <p>Изменяет информацию о точке продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/outlets/{outletId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>outletId</b>"
     * <p>Идентификатор точки продаж.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ChangeOutletRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateOutlet();

    /**
     * <p>Удаление товара из карантина по цене в кабинете</p>
     *
     * <p>Подтверждает основную цену на товары, которые попали в карантин, и удаляет их из карантина.  Основная цена задается в каталоге и действует во всех магазинах кабинета.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/price-quarantine/confirm" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ConfirmPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что цены подтверждены.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler confirmBusinessPrices();

    /**
     * <p>Удаление товара из карантина по цене в магазине</p>
     *
     * <p>Подтверждает в заданном магазине цену на товары, которые попали в карантин, и удаляет их из карантина.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/price-quarantine/confirm" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ConfirmPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Ответ 200 обозначает, что цены подтверждены.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler confirmCampaignPrices();

    /**
     * <p>Список товаров, находящихся в карантине по цене в кабинете</p>
     *
     * <p>Возвращает список товаров, которые находятся в карантине по **основной цене**. Основная цена задается в каталоге и действует во всех магазинах кабинета.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/price-quarantine" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetQuarantineOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQuarantineOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров в карантине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getBusinessQuarantineOffers();

    /**
     * <p>Список товаров, находящихся в карантине по цене в магазине</p>
     *
     * <p>Возвращает список товаров, которые находятся в карантине по цене, установленной в заданном магазине.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/price-quarantine" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetQuarantineOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQuarantineOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров в карантине.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getCampaignQuarantineOffers();

    /**
     * <p>Список цен</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST campaigns/{campaignId}/offer-prices](../../reference/assortment/getPricesByOfferIds.md).  {% endnote %}  Возвращает список цен, установленных вами на товары любым способом: например, через партнерский API или в файле с каталогом.  {% note info %}  Общее количество товаров считается по данным за последние семь дней (не включая сегодня) и не может быть выше 2 миллионов.  {% endnote %}  Способы установки цен описаны [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/assortment/operations/prices.html).  |**⚙️ Лимит:** ```(количество товаров партнера на витрине) * 25``` товаров в сутки| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/offer-prices" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>archived</b>"
     * <p>Фильтр по нахождению в архиве.</p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>false</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPricesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список всех товаров с установленными ценами.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getPrices();

    /**
     * <p>Просмотр цен на указанные товары в магазине</p>
     *
     * <p>Возвращает список цен на указанные товары в магазине.  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для просмотра базовых цен используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров на витрине * 25) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-prices" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetPricesByOfferIdsRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPricesByOfferIdsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров с установленными для заданного магазина ценами.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getPricesByOfferIds();

    /**
     * <p>Цены для продвижения товаров</p>
     *
     * <p>{% note warning \"\" %}  Этот метод устарел. Вместо него используйте [отчет «Цены на рынке»](../../reference/reports/generatePricesReport.md).  {% endnote %}  {% note warning \"\" %}  Этот метод подходит только тем магазинам, которые устанавливают цены на товары в рублях.  {% endnote %}  Возвращает цены для продвижения товаров, которые вы размещаете на Маркете.  Товары, для которых нужно получить цены, передаются в теле POST-запроса.  Цены для продвижения зависят от цен, установленных на товары другими партнерами. Если один товар поставляют несколько партнеров, на Маркете сначала продается товар с более низкой ценой. Когда закончится товар по низкой цене, начнет продаваться товар по более высокой цене.  Выходные данные содержат для каждого товара несколько цен, соответствующих разным типам продвижения.  Установить цены на товары можно с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md) или другими способами: например, указать их в файле с каталогом. Также вы можете использовать стратегии для автоматической установки рекомендованных цен или минимальных цен на Маркете.  Подробно об автоматическом управлении ценами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/prices.html).  |**⚙️ Лимит:** 100 000 товаров в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-prices/suggestions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SuggestPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link SuggestPricesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список цен для продвижения на Маркете.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    @Deprecated
    HttpHandler getSuggestedPrices();

    /**
     * <p>Установка цен на товары во всех магазинах</p>
     *
     * <p>Устанавливает [базовые цены](*default-price). Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/offer-prices/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateBusinessPricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Маркет принял информацию о новых ценах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateBusinessPrices();

    /**
     * <p>Установка цен на товары в конкретном магазине</p>
     *
     * <p>Устанавливает цены на товары в магазине. Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для управления базовыми ценами используйте [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offer-prices/updates" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdatePricesRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Маркет принял информацию о новых ценах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>423 (client error)</b>: К ресурсу нельзя применить указанный метод.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updatePrices();

    /**
     * <p>Удаление товаров из акции</p>
     *
     * <p>Убирает товары из акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos/offers/delete" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link DeletePromoOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link DeletePromoOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Результат удаления товаров из акции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler deletePromoOffers();

    /**
     * <p>Получение списка товаров, которые участвуют или могут участвовать в акции</p>
     *
     * <p>Возвращает список товаров, которые участвуют или могут участвовать в акции.  {% note warning %}  В параметре `limit` не передавайте значение больше 500.  {% endnote %}  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos/offers" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetPromoOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPromoOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список товаров, которые участвуют или могут участвовать в акции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getPromoOffers();

    /**
     * <p>Получение списка акций</p>
     *
     * <p>Возвращает информацию об акциях Маркета.  По умолчанию возвращаются акции, в которых продавец участвует или может принять участие.  Чтобы получить текущие или завершенные акции, передайте параметр `participation`.  Типы акций, которые возвращаются в ответе:  * прямая скидка; * флеш-акция; * скидка по промокоду.  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetPromosRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetPromosResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список акций Маркета.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getPromos();

    /**
     * <p>Добавление товаров в акцию или изменение их цен</p>
     *
     * <p>Добавляет товары в акцию или изменяет цены на товары, которые участвуют в акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/promos/offers/update" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdatePromoOffersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link UpdatePromoOffersResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Результат добавления товаров в акцию или обновления их цен.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updatePromoOffers();

    /**
     * <p>Заказы, которые повлияли на индекс качества</p>
     *
     * <p>Возвращает список заказов, которые повлияли на индекс качества магазина. Чтобы узнать значение индекса качества, выполните запрос [POST businesses/{businessId}/ratings/quality](../../reference/ratings/getQualityRatings.md).  |**⚙️ Лимит:** 100000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/ratings/quality/details" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQualityRatingDetailsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация о заказах, которые повлияли на индекс качества.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getQualityRatingDetails();

    /**
     * <p>Индекс качества магазинов</p>
     *
     * <p>Возвращает значение индекса качества магазинов и его составляющие.  Подробнее об индексе качества читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/score/).  |**⚙️ Лимит:** 10000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/businesses/{businessId}/ratings/quality" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetQualityRatingRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetQualityRatingResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Значение индекса качества магазинов и его составляющие.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getQualityRatings();

    /**
     * <p>Информация о дочерних регионах</p>
     *
     * <p>Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/regions/{regionId}/children" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page</b>"
     * <p>Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>1</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>pageSize</b>"
     * <p>Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetRegionWithChildrenResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Регионы, являющиеся дочерними к указанному в запросе.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchRegionChildren();

    /**
     * <p>Информация о регионе</p>
     *
     * <p>Возвращает информацию о регионе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/regions/{regionId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>regionId</b>"
     * <p>Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetRegionsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Найденный регион.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchRegionsById();

    /**
     * <p>Поиск регионов по их имени</p>
     *
     * <p>Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.  Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/regions" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>name</b>"
     * <p>Название региона.  Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, `Москва`. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetRegionsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список найденных регионов.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchRegionsByName();

    /**
     * <p>Отчет по бусту продаж</p>
     *
     * <p>Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/boost-consolidated/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateBoostConsolidatedRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateBoostConsolidatedReport();

    /**
     * <p>Отчет «Конкурентная позиция»</p>
     *
     * <p>Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \"Значение -1 в отчете\" %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/competitors-position/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateCompetitorsPositionReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateCompetitorsPositionReport();

    /**
     * <p>Отчет по отзывам о товарах</p>
     *
     * <p>Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/goods-feedback/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateGoodsFeedbackRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateGoodsFeedbackReport();

    /**
     * <p>Отчет по движению товаров</p>
     *
     * <p>Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/goods-movement/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateGoodsMovementReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateGoodsMovementReport();

    /**
     * <p>Отчет по реализации</p>
     *
     * <p>Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/goods-realization/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateGoodsRealizationReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateGoodsRealizationReport();

    /**
     * <p>Отчет по оборачиваемости</p>
     *
     * <p>Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/goods-turnover/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateGoodsTurnoverRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateGoodsTurnoverReport();

    /**
     * <p>Готовые ярлыки‑наклейки на все коробки в нескольких заказах</p>
     *
     * <p>Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/documents/labels/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7.</p>
     * <p>
     * - Parameter type: <b>{@link PageFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateMassOrderLabelsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый файл.  Если при генерации не удалось найти часть заказов, в ответе на запрос получения готового файла вернется подстатус `RESOURCE_NOT_FOUND`. </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateMassOrderLabelsReport();

    /**
     * <p>Отчет «Цены на рынке»</p>
     *
     * <p>Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/prices/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GeneratePricesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generatePricesReport();

    /**
     * <p>Отчет по полкам</p>
     *
     * <p>Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/shelf-statistics/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateShelfsStatisticsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateShelfsStatisticsReport();

    /**
     * <p>Получение листа сборки</p>
     *
     * <p>Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/documents/shipment-list/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateShipmentListDocumentReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый документ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateShipmentListDocumentReport();

    /**
     * <p>Отчет «Аналитика продаж»</p>
     *
     * <p>Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/shows-sales/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateShowsSalesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateShowsSalesReport();

    /**
     * <p>Отчет по остаткам на складах</p>
     *
     * <p>Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/stocks-on-warehouses/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateStocksOnWarehousesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateStocksOnWarehousesReport();

    /**
     * <p>Отчет по стоимости услуг</p>
     *
     * <p>Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |-----------------------------|---------------------------------| |По дате начисления услуги    |`dateFrom` и `dateTo`            | |По дате формирования акта    |`year` и `month`                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/united-marketplace-services/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateUnitedMarketplaceServicesReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateUnitedMarketplaceServicesReport();

    /**
     * <p>Отчет по платежам</p>
     *
     * <p>Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |-------------------------|---------------------------------------| |О платежах за период     |`dateFrom` и `dateTo`                  | |О платежном поручении    |`bankOrderId` и `bankOrderDateTime`    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/united-netting/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateUnitedNettingReportRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateUnitedNettingReport();

    /**
     * <p>Отчет по заказам</p>
     *
     * <p>Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \"\" %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/reports/united-orders/generate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат отчета.</p>
     * <p>
     * - Parameter type: <b>{@link ReportFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GenerateUnitedOrdersRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GenerateReportResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler generateUnitedOrdersReport();

    /**
     * <p>Получение заданного отчета</p>
     *
     * <p>Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/reports/info/{reportId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>reportId</b>"
     * <p>Идентификатор отчета, который вы получили после запуска генерации. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetReportInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Статус генерации отчета и ссылка, если она уже есть.  {% note tip %}  Если статус генерации отчета — `FAILED` или `NO_DATA`, проверьте корректность запроса на генерацию. Например, верно ли указан идентификатор магазина, период или номер платежного поручения.  {% endnote %}    </li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReportInfo();

    /**
     * <p>Информация о невыкупе или возврате</p>
     *
     * <p>Получает информацию по одному невыкупу или возврату.  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>returnId</b>"
     * <p>Идентификатор возврата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetReturnResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Детали возврата.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturn();

    /**
     * <p>Получение заявления на возврат</p>
     *
     * <p>Загружает заявление покупателя на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>returnId</b>"
     * <p>Идентификатор возврата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/octet-stream}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Заявление на возврат.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturnApplication();

    /**
     * <p>Получение фотографии возврата</p>
     *
     * <p>Получает фотографии, которые покупатель приложил к заявлению на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>returnId</b>"
     * <p>Идентификатор возврата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>itemId</b>"
     * <p>Идентификатор товара в возврате.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>imageHash</b>"
     * <p>Хеш ссылки изображения для загрузки.</p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/octet-stream}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Фотография возврата.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturnPhoto();

    /**
     * <p>Список невыкупов и возвратов</p>
     *
     * <p>Получает список невыкупов и возвратов.  Чтобы получить информацию по одному возврату или невыкупу, выполните запрос [GET campaigns/{campaignId}/orders/{orderId}/returns/{returnId}](../../reference/orders/getReturn.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/returns" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderIds</b>"
     * <p>Идентификаторы заказов — для фильтрации результатов.  Несколько идентификаторов перечисляются через запятую без пробела. Максимальное количество идентификаторов — 50. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;Long&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>statuses</b>"
     * <p>Статусы возвратов или невыкупов — для фильтрации результатов.  Несколько статусов перечисляются через запятую. </p>
     * <p>
     * - Parameter type: <b>{@link java.util.List List} of {@link List&lt;RefundStatusType&gt;}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>type</b>"
     * <p>Тип заказа для фильтрации:  * `RETURN` — возврат.  * `UNREDEEMED` — невыкуп.  Если не указывать, в ответе будут и возвраты, и невыкупы. </p>
     * <p>
     * - Parameter type: <b>{@link ReturnType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>fromDate</b>"
     * <p>Начальная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: `ГГГГ-ММ-ДД`. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>toDate</b>"
     * <p>Конечная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: `ГГГГ-ММ-ДД`. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>from_date</b>"
     * <p>{% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `fromDate`.  {% endnote %}  Начальная дата для фильтрации возвратов или невыкупов по дате обновления. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>to_date</b>"
     * <p>{% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `toDate`.  {% endnote %}  Конечная дата для фильтрации возвратов или невыкупов по дате обновления. </p>
     * <p>
     * - Parameter type: <b>{@link Date}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetReturnsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Постраничные возвраты партнера.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getReturns();

    /**
     * <p>Принятие или изменение решения по возврату</p>
     *
     * <p>Выбирает решение по возврату от покупателя. После этого для подтверждения решения нужно выполнить запрос [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit](../../reference/orders/submitReturnDecision.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>returnId</b>"
     * <p>Идентификатор возврата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetReturnDecisionRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Детали возврата.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler setReturnDecision();

    /**
     * <p>Подтверждение решения по возврату</p>
     *
     * <p>Подтверждает выбранное решение по возврату, отправленное в запросе [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision](../../reference/orders/setReturnDecision.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>orderId</b>"
     * <p>Идентификатор заказа.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>returnId</b>"
     * <p>Идентификатор возврата.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Статус выполнения операции.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler submitReturnDecision();

    /**
     * <p>Подтверждение отгрузки</p>
     *
     * <p>Подтверждает отгрузку товаров в сортировочный центр или пункт приема заказов. |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/confirm" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link ConfirmShipmentRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler confirmShipment();

    /**
     * <p>Получение акта приема-передачи</p>
     *
     * <p>{% note warning \"Экспресс‑доставка\" %}  Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам Яндекс Go, подготавливать акт приема‑передачи не нужно.  {% endnote %}  Запрос формирует акт приема-передачи заказов, входящих в отгрузку, и возвращает акт в формате PDF. В акте содержатся собранные и готовые к отправке заказы.  При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:  {% cut \"Данные, из которых Маркет формирует акт\" %}  | **Данные в акте**                                         | **Описание**                                                                                                                                                                                                                                                         | | --------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Дата                                                      | Дата запроса.                                                                                                                                                                                                                                                        | | Отправитель                                               | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         | | Исполнитель                                               | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                | | № отправления в системе заказчика                         | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              | | № отправления в системе исполнителя (субподрядчика)       | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             | | Объявленная ценность                                      | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       | | Вес                                                       | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). | | Количество мест                                           | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |  {% endcut %}  Остальные поля нужно заполнить самостоятельно в распечатанном акте. |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/act" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/pdf}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Акт приема-передачи для отгрузки в формате PDF.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler downloadShipmentAct();

    /**
     * <p>Получение акта расхождений</p>
     *
     * <p>Возвращает акт расхождений для заданной отгрузки. |**⚙️ Лимит:** 200 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/discrepancy-act" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/vnd.ms-excel}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Акт расхождений в формате XLSX.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler downloadShipmentDiscrepancyAct();

    /**
     * <p>Получение фактического акта приема-передачи</p>
     *
     * <p>Возвращает фактический акт приема-передачи для заданной отгрузки.  Такой акт становится доступен спустя несколько часов после завершения отгрузки. Он может понадобиться, если после отгрузки обнаружатся расхождения.  |**⚙️ Лимит:** 200 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/inbound-act" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/pdf}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Акт в формате PDF.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler downloadShipmentInboundAct();

    /**
     * <p>Ярлыки для доверительной приемки (FBS)</p>
     *
     * <p>PDF-файл с ярлыками на каждый короб или палету в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).  Распечатайте по несколько копий каждого ярлыка: на одну тару нужно наклеить минимум 2 ярлыка с разных сторон.  Количество упаковок в отгрузке задается в запросе [PUT campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets](../../reference/shipments/setShipmentPalletsCount.md). |**⚙️ Лимит:** 200 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>format</b>"
     * <p>Формат страниц PDF-файла с ярлыками:  * `A4` — по 16 ярлыков на странице. * `A8` — по одному ярлыку на странице. </p>
     * <p>
     * - Parameter type: <b>{@link ShipmentPalletLabelPageFormatType}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>A8</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/pdf}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: PDF‑файл с ярлыками на все упаковки в отгрузке.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler downloadShipmentPalletLabels();

    /**
     * <p>Подтверждение ближайшей отгрузки и получение акта приема-передачи для нее</p>
     *
     * <p>Запрос подтверждает ближайшую отгрузку и возвращает акт приема-передачи в формате PDF.  {% note warning \"Экспресс‑доставка\" %}  Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам [Яндекс Go](https://go.yandex/), подготавливать акт приема‑передачи не нужно.  {% endnote %}  В акт входят собранные и готовые к отправке заказы, которые отгружаются в сортировочный центр или пункт приема или курьерам Маркета.  При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:  {% cut \"Данные, из которых Маркет формирует акт\" %}  | **Данные в акте**                                   | **Описание**                                                                                                                                                                                                                                                         | | --------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Отправитель                                         | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         | | Исполнитель                                         | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                | | № отправления в системе заказчика                   | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              | | № отправления в системе исполнителя (субподрядчика) | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             | | Объявленная ценность                                | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       | | Стоимость всех товаров в заказе                     | Стоимость всех заказанных товаров.                                                                                                                                                                                                                                   | | Вес                                                 | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). | | Количество мест                                     | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |  {% endcut %}  Остальные поля нужно заполнить самостоятельно в распечатанном акте. |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/shipments/reception-transfer-act" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>warehouse_id</b>"
     * <p>Идентификатор склада.</p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/pdf}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Акт приема-передачи в формате PDF.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler downloadShipmentReceptionTransferAct();

    /**
     * <p>Получение транспортной накладной</p>
     *
     * <p>Возвращает транспортную накладную для заданной отгрузки.  Транспортная накладная понадобится, если вы отгружаете товары непосредственно со своего склада. [Подробно об этом способе отгрузки](https://yandex.ru/support/marketplace/orders/fbs/settings/shipment.html#at-your-warehouse)  |**⚙️ Лимит:** 200 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/transportation-waybill" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{mediaType=application/vnd.ms-excel}, {isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link File}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Транспортная накладная в формате XLSX.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler downloadShipmentTransportationWaybill();

    /**
     * <p>Получение информации об одной отгрузке</p>
     *
     * <p>Возвращает информацию об отгрузке по ее идентификатору. |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>cancelledOrders</b>"
     * <p>Возвращать ли отмененные заказы.  Значение по умолчанию — `true`. Если возвращать отмененные заказы не нужно, передайте значение `false`. </p>
     * <p>
     * - Parameter type: <b>{@link Boolean}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Default value: <b>true</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetShipmentResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Найденная отгрузка.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getShipment();

    /**
     * <p>Получение информации о возможности печати ярлыков (FBS)</p>
     *
     * <p>Возвращает информацию о возможности печати ярлыков-наклеек для заказов в отгрузке. |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/info" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetShipmentOrdersInfoResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Информация по годным/негодным для печати ярлыков заказам в отгрузке.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getShipmentOrdersInfo();

    /**
     * <p>Получение информации о нескольких отгрузках</p>
     *
     * <p>Возвращает информацию об отгрузках по заданным параметрам:  * дате; * статусу; * идентификаторам заказов.  Результаты возвращаются постранично. |**⚙️ Лимит:** 100 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/first-mile/shipments" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SearchShipmentsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link SearchShipmentsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Найденные отгрузки.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler searchShipments();

    /**
     * <p>Передача количества упаковок в отгрузке</p>
     *
     * <p>Передает Маркету количество коробов или палет в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).  Получить PDF-файл с ярлыками для упаковок можно с помощью запроса [GET campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels](../../reference/shipments/downloadShipmentPalletLabels.md). |**⚙️ Лимит:** 200 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link SetShipmentPalletsCountRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Имеет значение только тип ответа. Если ответ `ОК`, количество упаковок записано.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler setShipmentPalletsCount();

    /**
     * <p>Перенос заказов в следующую отгрузку</p>
     *
     * <p>Переносит указанные заказы из указанной отгрузки в следующую отгрузку. [Что такое отгрузка?](https://yandex.ru/support/marketplace/orders/fbs/process.html#ship)  Используйте этот запрос, если не успеваете собрать и упаковать заказы вовремя.  {% note warning \"Такие переносы снижают индекс качества магазина\" %}  Этот запрос предназначен для исключительных случаев. Если вы будете переносить заказы слишком часто, магазин столкнется с ограничениями. [Что за ограничения?](https://yandex.ru/support/marketplace/quality/score/fbs.html)  {% endnote %}  Переносить заказы можно, если до формирования отгрузки осталось больше получаса.  Перенос происходит не мгновенно, а занимает несколько минут.  |**⚙️ Лимит:** 200 запросов в час| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/transfer" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>shipmentId</b>"
     * <p>Идентификатор отгрузки.</p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link TransferOrdersFromShipmentRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Запрос на перенос заказов проверен и принят, и они будут перенесены спустя несколько минут.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler transferOrdersFromShipment();

    /**
     * <p>Информация об остатках и оборачиваемости</p>
     *
     * <p>Возвращает данные об остатках товаров (для всех моделей) и об [оборачиваемости](*turnover) товаров (для модели FBY).  {% note info \"По умолчанию данные по оборачивамости не возращаются\" %}  Чтобы они были в ответе, передавайте `true` в поле `withTurnover`.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-|  [//]: <> (turnover: Среднее количество дней, за которое товар продается. Подробно об оборачиваемости рассказано в Справке Маркета для продавцов https://yandex.ru/support/marketplace/analytics/turnover.html.) </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/campaigns/{campaignId}/offers/stocks" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>page_token</b>"
     * <p>Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. </p>
     * <p>
     * - Parameter type: <b>{@link String}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * <li>
     * <p>"<b>limit</b>"
     * <p>Количество значений на одной странице. </p>
     * <p>
     * - Parameter type: <b>{@link Integer}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getQueryParameters Query}</b><br/>
     * - Required: <b>false</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link GetWarehouseStocksRequest} (<i>required: false</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetWarehouseStocksResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Остатки товаров на складах.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getStocks();

    /**
     * <p>Передача информации об остатках</p>
     *
     * <p>Передает данные об остатках товаров на витрине.  Обязательно указывайте SKU **в точности** так, как он указан в каталоге. Например, _557722_ и _0557722_ — это два разных SKU.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#PUT PUT} "/campaigns/{campaignId}/offers/stocks" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>campaignId</b>"
     * <p>Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link UpdateStocksRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link EmptyApiResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Пустой ответ.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler updateStocks();

    /**
     * <p>Калькулятор стоимости услуг</p>
     *
     * <p>Рассчитывает стоимость услуг Маркета для товаров с заданными параметрами. Порядок товаров в запросе и ответе сохраняется, чтобы определить, для какого товара рассчитана стоимость услуги.  Обратите внимание: калькулятор осуществляет примерные расчеты. Финальная стоимость для каждого заказа зависит от предоставленных услуг.  В запросе можно указать либо параметр `campaignId`, либо `sellingProgram`. Совместное использование параметров приведет к ошибке.  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#POST POST} "/tariffs/calculate" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * </ul>
     *
     * <p><b>Consumes</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Payload</b>: {@link CalculateTariffsRequest} (<i>required: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link CalculateTariffsResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Стоимость услуг.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler calculateTariffs();

    /**
     * <p>Идентификаторы складов Маркета (FBY)</p>
     *
     * <p>Возвращает список складов Маркета с их идентификаторами.  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/warehouses" (<i>privileged: true</i>)</p>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetFulfillmentWarehousesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список складов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getFulfillmentWarehouses();

    /**
     * <p>Список складов и групп складов</p>
     *
     * <p>Возвращает список складов и, если склады объединены, список групп складов. [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)  Среди прочего запрос позволяет определить идентификатор, который нужно использовать при передаче остатков для группы складов.  |**⚙️ Лимит:** 100 запросов в минуту| |-| </p>
     *
     * <p><b>Endpoint</b>: {@link Methods#GET GET} "/businesses/{businessId}/warehouses" (<i>privileged: true</i>)</p>
     *
     * <p><b>Request parameters</b>:</p>
     * <ul>
     * <li>
     * <p>"<b>businessId</b>"
     * <p>Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) </p>
     * <p>
     * - Parameter type: <b>{@link Long}</b><br/>
     * - Appears in: <b>{@link HttpServerExchange#getPathParameters Path}</b><br/>
     * - Required: <b>true</b>
     * </p>
     * </li>
     * </ul>
     *
     * <p><b>Produces</b>: [{isJson=true, mediaType=application/json}]</p>
     * <p><b>Returns</b>: {@link GetWarehousesResponse}</p>
     *
     * <p><b>Responses</b>:</p>
     * <ul>
     * <li><b>200 (success)</b>: Список складов и групп складов.</li>
     * <li><b>400 (client error)</b>: Запрос содержит неправильные данные.</li>
     * <li><b>401 (client error)</b>: В запросе не указаны данные для авторизации.</li>
     * <li><b>403 (client error)</b>: Данные для авторизации неверны или доступ к ресурсу запрещен.</li>
     * <li><b>404 (client error)</b>: Запрашиваемый ресурс не найден.</li>
     * <li><b>420 (client error)</b>: Превышено ограничение на доступ к ресурсу.</li>
     * <li><b>500 (server error)</b>: Внутренняя ошибка сервера.</li>
     * </ul>
     */
    @javax.annotation.Nonnull
    HttpHandler getWarehouses();
}
