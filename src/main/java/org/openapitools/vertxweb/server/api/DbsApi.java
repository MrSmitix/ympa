package org.openapitools.vertxweb.server.api;

import org.openapitools.vertxweb.server.model.AcceptOrderCancellationRequest;
import org.openapitools.vertxweb.server.model.AddHiddenOffersRequest;
import org.openapitools.vertxweb.server.model.AddOffersToArchiveRequest;
import org.openapitools.vertxweb.server.model.AddOffersToArchiveResponse;
import org.openapitools.vertxweb.server.model.ApiClientDataErrorResponse;
import org.openapitools.vertxweb.server.model.ApiForbiddenErrorResponse;
import org.openapitools.vertxweb.server.model.ApiLimitErrorResponse;
import org.openapitools.vertxweb.server.model.ApiLockedErrorResponse;
import org.openapitools.vertxweb.server.model.ApiNotFoundErrorResponse;
import org.openapitools.vertxweb.server.model.ApiServerErrorResponse;
import org.openapitools.vertxweb.server.model.ApiUnauthorizedErrorResponse;
import org.openapitools.vertxweb.server.model.CalculateTariffsRequest;
import org.openapitools.vertxweb.server.model.CalculateTariffsResponse;
import org.openapitools.vertxweb.server.model.ChangeOutletRequest;
import org.openapitools.vertxweb.server.model.ConfirmPricesRequest;
import org.openapitools.vertxweb.server.model.CreateChatRequest;
import org.openapitools.vertxweb.server.model.CreateChatResponse;
import org.openapitools.vertxweb.server.model.CreateOutletResponse;
import org.openapitools.vertxweb.server.model.CurrencyType;
import org.openapitools.vertxweb.server.model.DeleteCampaignOffersRequest;
import org.openapitools.vertxweb.server.model.DeleteCampaignOffersResponse;
import org.openapitools.vertxweb.server.model.DeleteGoodsFeedbackCommentRequest;
import org.openapitools.vertxweb.server.model.DeleteHiddenOffersRequest;
import org.openapitools.vertxweb.server.model.DeleteOffersFromArchiveRequest;
import org.openapitools.vertxweb.server.model.DeleteOffersFromArchiveResponse;
import org.openapitools.vertxweb.server.model.DeleteOffersRequest;
import org.openapitools.vertxweb.server.model.DeleteOffersResponse;
import org.openapitools.vertxweb.server.model.DeletePromoOffersRequest;
import org.openapitools.vertxweb.server.model.DeletePromoOffersResponse;
import org.openapitools.vertxweb.server.model.EmptyApiResponse;
import org.openapitools.vertxweb.server.model.FeedIndexLogsStatusType;
import io.vertx.ext.web.FileUpload;
import org.openapitools.vertxweb.server.model.GenerateBoostConsolidatedRequest;
import org.openapitools.vertxweb.server.model.GenerateCompetitorsPositionReportRequest;
import org.openapitools.vertxweb.server.model.GenerateGoodsFeedbackRequest;
import org.openapitools.vertxweb.server.model.GenerateMassOrderLabelsRequest;
import org.openapitools.vertxweb.server.model.GeneratePricesReportRequest;
import org.openapitools.vertxweb.server.model.GenerateReportResponse;
import org.openapitools.vertxweb.server.model.GenerateShelfsStatisticsRequest;
import org.openapitools.vertxweb.server.model.GenerateShowsSalesReportRequest;
import org.openapitools.vertxweb.server.model.GenerateStocksOnWarehousesReportRequest;
import org.openapitools.vertxweb.server.model.GenerateUnitedMarketplaceServicesReportRequest;
import org.openapitools.vertxweb.server.model.GenerateUnitedNettingReportRequest;
import org.openapitools.vertxweb.server.model.GenerateUnitedOrdersRequest;
import org.openapitools.vertxweb.server.model.GetAllOffersResponse;
import org.openapitools.vertxweb.server.model.GetBidsInfoRequest;
import org.openapitools.vertxweb.server.model.GetBidsInfoResponse;
import org.openapitools.vertxweb.server.model.GetBidsRecommendationsRequest;
import org.openapitools.vertxweb.server.model.GetBidsRecommendationsResponse;
import org.openapitools.vertxweb.server.model.GetBusinessBuyerInfoResponse;
import org.openapitools.vertxweb.server.model.GetBusinessDocumentsInfoResponse;
import org.openapitools.vertxweb.server.model.GetBusinessSettingsResponse;
import org.openapitools.vertxweb.server.model.GetCampaignLoginsResponse;
import org.openapitools.vertxweb.server.model.GetCampaignOffersRequest;
import org.openapitools.vertxweb.server.model.GetCampaignOffersResponse;
import org.openapitools.vertxweb.server.model.GetCampaignRegionResponse;
import org.openapitools.vertxweb.server.model.GetCampaignResponse;
import org.openapitools.vertxweb.server.model.GetCampaignSettingsResponse;
import org.openapitools.vertxweb.server.model.GetCampaignsResponse;
import org.openapitools.vertxweb.server.model.GetCategoriesMaxSaleQuantumRequest;
import org.openapitools.vertxweb.server.model.GetCategoriesMaxSaleQuantumResponse;
import org.openapitools.vertxweb.server.model.GetCategoriesRequest;
import org.openapitools.vertxweb.server.model.GetCategoriesResponse;
import org.openapitools.vertxweb.server.model.GetCategoryContentParametersResponse;
import org.openapitools.vertxweb.server.model.GetChatHistoryRequest;
import org.openapitools.vertxweb.server.model.GetChatHistoryResponse;
import org.openapitools.vertxweb.server.model.GetChatsRequest;
import org.openapitools.vertxweb.server.model.GetChatsResponse;
import org.openapitools.vertxweb.server.model.GetDeliveryServicesResponse;
import org.openapitools.vertxweb.server.model.GetFeedIndexLogsResponse;
import org.openapitools.vertxweb.server.model.GetFeedResponse;
import org.openapitools.vertxweb.server.model.GetFeedbackListResponse;
import org.openapitools.vertxweb.server.model.GetFeedsResponse;
import org.openapitools.vertxweb.server.model.GetGoodsFeedbackCommentsRequest;
import org.openapitools.vertxweb.server.model.GetGoodsFeedbackCommentsResponse;
import org.openapitools.vertxweb.server.model.GetGoodsFeedbackRequest;
import org.openapitools.vertxweb.server.model.GetGoodsFeedbackResponse;
import org.openapitools.vertxweb.server.model.GetGoodsStatsRequest;
import org.openapitools.vertxweb.server.model.GetGoodsStatsResponse;
import org.openapitools.vertxweb.server.model.GetHiddenOffersResponse;
import org.openapitools.vertxweb.server.model.GetModelsOffersResponse;
import org.openapitools.vertxweb.server.model.GetModelsRequest;
import org.openapitools.vertxweb.server.model.GetModelsResponse;
import org.openapitools.vertxweb.server.model.GetOfferCardsContentStatusRequest;
import org.openapitools.vertxweb.server.model.GetOfferCardsContentStatusResponse;
import org.openapitools.vertxweb.server.model.GetOfferMappingEntriesResponse;
import org.openapitools.vertxweb.server.model.GetOfferMappingsRequest;
import org.openapitools.vertxweb.server.model.GetOfferMappingsResponse;
import org.openapitools.vertxweb.server.model.GetOfferRecommendationsRequest;
import org.openapitools.vertxweb.server.model.GetOfferRecommendationsResponse;
import org.openapitools.vertxweb.server.model.GetOffersResponse;
import org.openapitools.vertxweb.server.model.GetOrderBuyerInfoResponse;
import org.openapitools.vertxweb.server.model.GetOrderLabelsDataResponse;
import org.openapitools.vertxweb.server.model.GetOrderResponse;
import org.openapitools.vertxweb.server.model.GetOrdersResponse;
import org.openapitools.vertxweb.server.model.GetOrdersStatsRequest;
import org.openapitools.vertxweb.server.model.GetOrdersStatsResponse;
import org.openapitools.vertxweb.server.model.GetOutletLicensesResponse;
import org.openapitools.vertxweb.server.model.GetOutletResponse;
import org.openapitools.vertxweb.server.model.GetOutletsResponse;
import org.openapitools.vertxweb.server.model.GetPricesByOfferIdsRequest;
import org.openapitools.vertxweb.server.model.GetPricesByOfferIdsResponse;
import org.openapitools.vertxweb.server.model.GetPricesResponse;
import org.openapitools.vertxweb.server.model.GetPromoOffersRequest;
import org.openapitools.vertxweb.server.model.GetPromoOffersResponse;
import org.openapitools.vertxweb.server.model.GetPromosRequest;
import org.openapitools.vertxweb.server.model.GetPromosResponse;
import org.openapitools.vertxweb.server.model.GetQualityRatingDetailsResponse;
import org.openapitools.vertxweb.server.model.GetQualityRatingRequest;
import org.openapitools.vertxweb.server.model.GetQualityRatingResponse;
import org.openapitools.vertxweb.server.model.GetQuarantineOffersRequest;
import org.openapitools.vertxweb.server.model.GetQuarantineOffersResponse;
import org.openapitools.vertxweb.server.model.GetRegionWithChildrenResponse;
import org.openapitools.vertxweb.server.model.GetRegionsResponse;
import org.openapitools.vertxweb.server.model.GetReportInfoResponse;
import org.openapitools.vertxweb.server.model.GetReturnResponse;
import org.openapitools.vertxweb.server.model.GetReturnsResponse;
import org.openapitools.vertxweb.server.model.GetSuggestedOfferMappingEntriesRequest;
import org.openapitools.vertxweb.server.model.GetSuggestedOfferMappingEntriesResponse;
import org.openapitools.vertxweb.server.model.GetSuggestedOfferMappingsRequest;
import org.openapitools.vertxweb.server.model.GetSuggestedOfferMappingsResponse;
import org.openapitools.vertxweb.server.model.GetWarehouseStocksRequest;
import org.openapitools.vertxweb.server.model.GetWarehouseStocksResponse;
import org.openapitools.vertxweb.server.model.GetWarehousesResponse;
import java.time.LocalDate;
import org.openapitools.vertxweb.server.model.OfferAvailabilityStatusType;
import org.openapitools.vertxweb.server.model.OfferMappingKindType;
import org.openapitools.vertxweb.server.model.OfferProcessingStatusType;
import java.time.OffsetDateTime;
import org.openapitools.vertxweb.server.model.OrderBuyerType;
import org.openapitools.vertxweb.server.model.OrderDeliveryDispatchType;
import org.openapitools.vertxweb.server.model.OrderStatusType;
import org.openapitools.vertxweb.server.model.OrderSubstatusType;
import org.openapitools.vertxweb.server.model.PageFormatType;
import org.openapitools.vertxweb.server.model.ProvideOrderDigitalCodesRequest;
import org.openapitools.vertxweb.server.model.ProvideOrderItemIdentifiersRequest;
import org.openapitools.vertxweb.server.model.ProvideOrderItemIdentifiersResponse;
import org.openapitools.vertxweb.server.model.PutSkuBidsRequest;
import org.openapitools.vertxweb.server.model.RefundStatusType;
import org.openapitools.vertxweb.server.model.ReportFormatType;
import org.openapitools.vertxweb.server.model.ReturnType;
import org.openapitools.vertxweb.server.model.SearchModelsResponse;
import org.openapitools.vertxweb.server.model.SendMessageToChatRequest;
import java.util.Set;
import org.openapitools.vertxweb.server.model.SetFeedParamsRequest;
import org.openapitools.vertxweb.server.model.SetOrderBoxLayoutRequest;
import org.openapitools.vertxweb.server.model.SetOrderBoxLayoutResponse;
import org.openapitools.vertxweb.server.model.SetOrderDeliveryDateRequest;
import org.openapitools.vertxweb.server.model.SetOrderDeliveryTrackCodeRequest;
import org.openapitools.vertxweb.server.model.SetOrderShipmentBoxesRequest;
import org.openapitools.vertxweb.server.model.SetOrderShipmentBoxesResponse;
import org.openapitools.vertxweb.server.model.SetReturnDecisionRequest;
import org.openapitools.vertxweb.server.model.SkipGoodsFeedbackReactionRequest;
import org.openapitools.vertxweb.server.model.SortOrderType;
import org.openapitools.vertxweb.server.model.SuggestPricesRequest;
import org.openapitools.vertxweb.server.model.SuggestPricesResponse;
import org.openapitools.vertxweb.server.model.UpdateBusinessPricesRequest;
import org.openapitools.vertxweb.server.model.UpdateCampaignOffersRequest;
import org.openapitools.vertxweb.server.model.UpdateGoodsFeedbackCommentRequest;
import org.openapitools.vertxweb.server.model.UpdateGoodsFeedbackCommentResponse;
import org.openapitools.vertxweb.server.model.UpdateOfferContentRequest;
import org.openapitools.vertxweb.server.model.UpdateOfferContentResponse;
import org.openapitools.vertxweb.server.model.UpdateOfferMappingEntryRequest;
import org.openapitools.vertxweb.server.model.UpdateOfferMappingsRequest;
import org.openapitools.vertxweb.server.model.UpdateOfferMappingsResponse;
import org.openapitools.vertxweb.server.model.UpdateOrderItemRequest;
import org.openapitools.vertxweb.server.model.UpdateOrderStatusRequest;
import org.openapitools.vertxweb.server.model.UpdateOrderStatusResponse;
import org.openapitools.vertxweb.server.model.UpdateOrderStatusesRequest;
import org.openapitools.vertxweb.server.model.UpdateOrderStatusesResponse;
import org.openapitools.vertxweb.server.model.UpdateOrderStorageLimitRequest;
import org.openapitools.vertxweb.server.model.UpdateOutletLicenseRequest;
import org.openapitools.vertxweb.server.model.UpdatePricesRequest;
import org.openapitools.vertxweb.server.model.UpdatePromoOffersRequest;
import org.openapitools.vertxweb.server.model.UpdatePromoOffersResponse;
import org.openapitools.vertxweb.server.model.UpdateStocksRequest;

import org.openapitools.vertxweb.server.ApiResponse;

import io.vertx.core.Future;
import io.vertx.core.json.JsonObject;

import java.util.List;
import java.util.Map;

public interface DbsApi  {
    Future<ApiResponse<EmptyApiResponse>> acceptOrderCancellation(Long campaignId, Long orderId, AcceptOrderCancellationRequest acceptOrderCancellationRequest);
    Future<ApiResponse<EmptyApiResponse>> addHiddenOffers(Long campaignId, AddHiddenOffersRequest addHiddenOffersRequest);
    Future<ApiResponse<AddOffersToArchiveResponse>> addOffersToArchive(Long businessId, AddOffersToArchiveRequest addOffersToArchiveRequest);
    Future<ApiResponse<CalculateTariffsResponse>> calculateTariffs(CalculateTariffsRequest calculateTariffsRequest);
    Future<ApiResponse<EmptyApiResponse>> confirmBusinessPrices(Long businessId, ConfirmPricesRequest confirmPricesRequest);
    Future<ApiResponse<EmptyApiResponse>> confirmCampaignPrices(Long campaignId, ConfirmPricesRequest confirmPricesRequest);
    Future<ApiResponse<CreateChatResponse>> createChat(Long businessId, CreateChatRequest createChatRequest);
    Future<ApiResponse<CreateOutletResponse>> createOutlet(Long campaignId, ChangeOutletRequest changeOutletRequest);
    Future<ApiResponse<DeleteCampaignOffersResponse>> deleteCampaignOffers(Long campaignId, DeleteCampaignOffersRequest deleteCampaignOffersRequest);
    Future<ApiResponse<EmptyApiResponse>> deleteGoodsFeedbackComment(Long businessId, DeleteGoodsFeedbackCommentRequest deleteGoodsFeedbackCommentRequest);
    Future<ApiResponse<EmptyApiResponse>> deleteHiddenOffers(Long campaignId, DeleteHiddenOffersRequest deleteHiddenOffersRequest);
    Future<ApiResponse<DeleteOffersResponse>> deleteOffers(Long businessId, DeleteOffersRequest deleteOffersRequest);
    Future<ApiResponse<DeleteOffersFromArchiveResponse>> deleteOffersFromArchive(Long businessId, DeleteOffersFromArchiveRequest deleteOffersFromArchiveRequest);
    Future<ApiResponse<EmptyApiResponse>> deleteOutlet(Long campaignId, Long outletId);
    Future<ApiResponse<EmptyApiResponse>> deleteOutletLicenses(Long campaignId, Set<Long> ids);
    Future<ApiResponse<DeletePromoOffersResponse>> deletePromoOffers(Long businessId, DeletePromoOffersRequest deletePromoOffersRequest);
    Future<ApiResponse<GenerateReportResponse>> generateBoostConsolidatedReport(GenerateBoostConsolidatedRequest generateBoostConsolidatedRequest, ReportFormatType format);
    Future<ApiResponse<GenerateReportResponse>> generateCompetitorsPositionReport(GenerateCompetitorsPositionReportRequest generateCompetitorsPositionReportRequest, ReportFormatType format);
    Future<ApiResponse<GenerateReportResponse>> generateGoodsFeedbackReport(GenerateGoodsFeedbackRequest generateGoodsFeedbackRequest, ReportFormatType format);
    Future<ApiResponse<GenerateReportResponse>> generateMassOrderLabelsReport(GenerateMassOrderLabelsRequest generateMassOrderLabelsRequest, PageFormatType format);
    Future<ApiResponse<FileUpload>> generateOrderLabel(Long campaignId, Long orderId, Long shipmentId, Long boxId, PageFormatType format);
    Future<ApiResponse<FileUpload>> generateOrderLabels(Long campaignId, Long orderId, PageFormatType format);
    Future<ApiResponse<GenerateReportResponse>> generatePricesReport(GeneratePricesReportRequest generatePricesReportRequest, ReportFormatType format);
    Future<ApiResponse<GenerateReportResponse>> generateShelfsStatisticsReport(GenerateShelfsStatisticsRequest generateShelfsStatisticsRequest, ReportFormatType format);
    Future<ApiResponse<GenerateReportResponse>> generateShowsSalesReport(GenerateShowsSalesReportRequest generateShowsSalesReportRequest, ReportFormatType format);
    Future<ApiResponse<GenerateReportResponse>> generateStocksOnWarehousesReport(GenerateStocksOnWarehousesReportRequest generateStocksOnWarehousesReportRequest, ReportFormatType format);
    Future<ApiResponse<GenerateReportResponse>> generateUnitedMarketplaceServicesReport(GenerateUnitedMarketplaceServicesReportRequest generateUnitedMarketplaceServicesReportRequest, ReportFormatType format);
    Future<ApiResponse<GenerateReportResponse>> generateUnitedNettingReport(GenerateUnitedNettingReportRequest generateUnitedNettingReportRequest, ReportFormatType format);
    Future<ApiResponse<GenerateReportResponse>> generateUnitedOrdersReport(GenerateUnitedOrdersRequest generateUnitedOrdersRequest, ReportFormatType format);
    Future<ApiResponse<GetAllOffersResponse>> getAllOffers(Long campaignId, Long feedId, Integer chunk);
    Future<ApiResponse<GetBidsInfoResponse>> getBidsInfoForBusiness(Long businessId, String pageToken, Integer limit, GetBidsInfoRequest getBidsInfoRequest);
    Future<ApiResponse<GetBidsRecommendationsResponse>> getBidsRecommendations(Long businessId, GetBidsRecommendationsRequest getBidsRecommendationsRequest);
    Future<ApiResponse<GetQuarantineOffersResponse>> getBusinessQuarantineOffers(Long businessId, GetQuarantineOffersRequest getQuarantineOffersRequest, String pageToken, Integer limit);
    Future<ApiResponse<GetBusinessSettingsResponse>> getBusinessSettings(Long businessId);
    Future<ApiResponse<GetCampaignResponse>> getCampaign(Long campaignId);
    Future<ApiResponse<GetCampaignLoginsResponse>> getCampaignLogins(Long campaignId);
    Future<ApiResponse<GetCampaignOffersResponse>> getCampaignOffers(Long campaignId, GetCampaignOffersRequest getCampaignOffersRequest, String pageToken, Integer limit);
    Future<ApiResponse<GetQuarantineOffersResponse>> getCampaignQuarantineOffers(Long campaignId, GetQuarantineOffersRequest getQuarantineOffersRequest, String pageToken, Integer limit);
    Future<ApiResponse<GetCampaignRegionResponse>> getCampaignRegion(Long campaignId);
    Future<ApiResponse<GetCampaignSettingsResponse>> getCampaignSettings(Long campaignId);
    Future<ApiResponse<GetCampaignsResponse>> getCampaigns(Integer page, Integer pageSize);
    Future<ApiResponse<GetCampaignsResponse>> getCampaignsByLogin(String login, Integer page, Integer pageSize);
    Future<ApiResponse<GetCategoriesMaxSaleQuantumResponse>> getCategoriesMaxSaleQuantum(GetCategoriesMaxSaleQuantumRequest getCategoriesMaxSaleQuantumRequest);
    Future<ApiResponse<GetCategoriesResponse>> getCategoriesTree(GetCategoriesRequest getCategoriesRequest);
    Future<ApiResponse<GetCategoryContentParametersResponse>> getCategoryContentParameters(Long categoryId);
    Future<ApiResponse<GetChatHistoryResponse>> getChatHistory(Long businessId, Long chatId, GetChatHistoryRequest getChatHistoryRequest, String pageToken, Integer limit);
    Future<ApiResponse<GetChatsResponse>> getChats(Long businessId, GetChatsRequest getChatsRequest, String pageToken, Integer limit);
    Future<ApiResponse<GetDeliveryServicesResponse>> getDeliveryServices();
    Future<ApiResponse<GetFeedResponse>> getFeed(Long campaignId, Long feedId);
    Future<ApiResponse<GetFeedIndexLogsResponse>> getFeedIndexLogs(Long campaignId, Long feedId, Integer limit, OffsetDateTime publishedTimeFrom, OffsetDateTime publishedTimeTo, FeedIndexLogsStatusType status);
    Future<ApiResponse<GetFeedbackListResponse>> getFeedbackAndCommentUpdates(Long campaignId, String pageToken, Integer limit, LocalDate fromDate);
    Future<ApiResponse<GetFeedsResponse>> getFeeds(Long campaignId);
    Future<ApiResponse<GetGoodsFeedbackCommentsResponse>> getGoodsFeedbackComments(Long businessId, GetGoodsFeedbackCommentsRequest getGoodsFeedbackCommentsRequest, String pageToken, Integer limit);
    Future<ApiResponse<GetGoodsFeedbackResponse>> getGoodsFeedbacks(Long businessId, String pageToken, Integer limit, GetGoodsFeedbackRequest getGoodsFeedbackRequest);
    Future<ApiResponse<GetGoodsStatsResponse>> getGoodsStats(Long campaignId, GetGoodsStatsRequest getGoodsStatsRequest);
    Future<ApiResponse<GetHiddenOffersResponse>> getHiddenOffers(Long campaignId, List<String> offerId, String pageToken, Integer limit, Integer offset, Integer page, Integer pageSize);
    Future<ApiResponse<GetModelsResponse>> getModel(Long modelId, Long regionId, CurrencyType currency);
    Future<ApiResponse<GetModelsOffersResponse>> getModelOffers(Long modelId, Long regionId, CurrencyType currency, SortOrderType orderByPrice, Integer count, Integer page);
    Future<ApiResponse<GetModelsResponse>> getModels(Long regionId, GetModelsRequest getModelsRequest, CurrencyType currency);
    Future<ApiResponse<GetModelsOffersResponse>> getModelsOffers(Long regionId, GetModelsRequest getModelsRequest, CurrencyType currency, SortOrderType orderByPrice);
    Future<ApiResponse<GetOfferCardsContentStatusResponse>> getOfferCardsContentStatus(Long businessId, String pageToken, Integer limit, GetOfferCardsContentStatusRequest getOfferCardsContentStatusRequest);
    Future<ApiResponse<GetOfferMappingEntriesResponse>> getOfferMappingEntries(Long campaignId, List<String> offerId, List<String> shopSku, OfferMappingKindType mappingKind, List<OfferProcessingStatusType> status, List<OfferAvailabilityStatusType> availability, List<Integer> categoryId, List<String> vendor, String pageToken, Integer limit);
    Future<ApiResponse<GetOfferMappingsResponse>> getOfferMappings(Long businessId, String pageToken, Integer limit, GetOfferMappingsRequest getOfferMappingsRequest);
    Future<ApiResponse<GetOfferRecommendationsResponse>> getOfferRecommendations(Long businessId, GetOfferRecommendationsRequest getOfferRecommendationsRequest, String pageToken, Integer limit);
    Future<ApiResponse<GetOffersResponse>> getOffers(Long campaignId, String query, Long feedId, String shopCategoryId, CurrencyType currency, Boolean matched, Integer page, Integer pageSize);
    Future<ApiResponse<GetOrderResponse>> getOrder(Long campaignId, Long orderId);
    Future<ApiResponse<GetBusinessBuyerInfoResponse>> getOrderBusinessBuyerInfo(Long campaignId, Long orderId);
    Future<ApiResponse<GetBusinessDocumentsInfoResponse>> getOrderBusinessDocumentsInfo(Long campaignId, Long orderId);
    Future<ApiResponse<GetOrderBuyerInfoResponse>> getOrderBuyerInfo(Long campaignId, Long orderId);
    Future<ApiResponse<GetOrderLabelsDataResponse>> getOrderLabelsData(Long campaignId, Long orderId);
    Future<ApiResponse<GetOrdersResponse>> getOrders(Long campaignId, List<Long> orderIds, Set<OrderStatusType> status, Set<OrderSubstatusType> substatus, LocalDate fromDate, LocalDate toDate, LocalDate supplierShipmentDateFrom, LocalDate supplierShipmentDateTo, OffsetDateTime updatedAtFrom, OffsetDateTime updatedAtTo, OrderDeliveryDispatchType dispatchType, Boolean fake, Boolean hasCis, Boolean onlyWaitingForCancellationApprove, Boolean onlyEstimatedDelivery, OrderBuyerType buyerType, Integer page, Integer pageSize, String pageToken, Integer limit);
    Future<ApiResponse<GetOrdersStatsResponse>> getOrdersStats(Long campaignId, String pageToken, Integer limit, GetOrdersStatsRequest getOrdersStatsRequest);
    Future<ApiResponse<GetOutletResponse>> getOutlet(Long campaignId, Long outletId);
    Future<ApiResponse<GetOutletLicensesResponse>> getOutletLicenses(Long campaignId, Set<Long> outletIds, Set<Long> ids);
    Future<ApiResponse<GetOutletsResponse>> getOutlets(Long campaignId, String pageToken, Long regionId, String shopOutletCode, Long regionId2);
    Future<ApiResponse<GetPricesResponse>> getPrices(Long campaignId, String pageToken, Integer limit, Boolean archived);
    Future<ApiResponse<GetPricesByOfferIdsResponse>> getPricesByOfferIds(Long campaignId, String pageToken, Integer limit, GetPricesByOfferIdsRequest getPricesByOfferIdsRequest);
    Future<ApiResponse<GetPromoOffersResponse>> getPromoOffers(Long businessId, GetPromoOffersRequest getPromoOffersRequest, String pageToken, Integer limit);
    Future<ApiResponse<GetPromosResponse>> getPromos(Long businessId, GetPromosRequest getPromosRequest);
    Future<ApiResponse<GetQualityRatingDetailsResponse>> getQualityRatingDetails(Long campaignId);
    Future<ApiResponse<GetQualityRatingResponse>> getQualityRatings(Long businessId, GetQualityRatingRequest getQualityRatingRequest);
    Future<ApiResponse<GetReportInfoResponse>> getReportInfo(String reportId);
    Future<ApiResponse<GetReturnResponse>> getReturn(Long campaignId, Long orderId, Long returnId);
    Future<ApiResponse<FileUpload>> getReturnApplication(Long campaignId, Long orderId, Long returnId);
    Future<ApiResponse<FileUpload>> getReturnPhoto(Long campaignId, Long orderId, Long returnId, Long itemId, String imageHash);
    Future<ApiResponse<GetReturnsResponse>> getReturns(Long campaignId, String pageToken, Integer limit, List<Long> orderIds, List<RefundStatusType> statuses, ReturnType type, LocalDate fromDate, LocalDate toDate, LocalDate fromDate2, LocalDate toDate2);
    Future<ApiResponse<GetWarehouseStocksResponse>> getStocks(Long campaignId, String pageToken, Integer limit, GetWarehouseStocksRequest getWarehouseStocksRequest);
    Future<ApiResponse<GetSuggestedOfferMappingEntriesResponse>> getSuggestedOfferMappingEntries(Long campaignId, GetSuggestedOfferMappingEntriesRequest getSuggestedOfferMappingEntriesRequest);
    Future<ApiResponse<GetSuggestedOfferMappingsResponse>> getSuggestedOfferMappings(Long businessId, GetSuggestedOfferMappingsRequest getSuggestedOfferMappingsRequest);
    Future<ApiResponse<SuggestPricesResponse>> getSuggestedPrices(Long campaignId, SuggestPricesRequest suggestPricesRequest);
    Future<ApiResponse<GetWarehousesResponse>> getWarehouses(Long businessId);
    Future<ApiResponse<EmptyApiResponse>> provideOrderDigitalCodes(Long campaignId, Long orderId, ProvideOrderDigitalCodesRequest provideOrderDigitalCodesRequest);
    Future<ApiResponse<ProvideOrderItemIdentifiersResponse>> provideOrderItemIdentifiers(Long campaignId, Long orderId, ProvideOrderItemIdentifiersRequest provideOrderItemIdentifiersRequest);
    Future<ApiResponse<EmptyApiResponse>> putBidsForBusiness(Long businessId, PutSkuBidsRequest putSkuBidsRequest);
    Future<ApiResponse<EmptyApiResponse>> putBidsForCampaign(Long campaignId, PutSkuBidsRequest putSkuBidsRequest);
    Future<ApiResponse<EmptyApiResponse>> refreshFeed(Long campaignId, Long feedId);
    Future<ApiResponse<SearchModelsResponse>> searchModels(String query, Long regionId, CurrencyType currency, Integer page, Integer pageSize);
    Future<ApiResponse<GetRegionWithChildrenResponse>> searchRegionChildren(Long regionId, Integer page, Integer pageSize);
    Future<ApiResponse<GetRegionsResponse>> searchRegionsById(Long regionId);
    Future<ApiResponse<GetRegionsResponse>> searchRegionsByName(String name, String pageToken, Integer limit);
    Future<ApiResponse<EmptyApiResponse>> sendFileToChat(Long businessId, Long chatId, FileUpload _file);
    Future<ApiResponse<EmptyApiResponse>> sendMessageToChat(Long businessId, Long chatId, SendMessageToChatRequest sendMessageToChatRequest);
    Future<ApiResponse<EmptyApiResponse>> setFeedParams(Long campaignId, Long feedId, SetFeedParamsRequest setFeedParamsRequest);
    Future<ApiResponse<SetOrderBoxLayoutResponse>> setOrderBoxLayout(Long campaignId, Long orderId, SetOrderBoxLayoutRequest setOrderBoxLayoutRequest);
    Future<ApiResponse<EmptyApiResponse>> setOrderDeliveryDate(Long campaignId, Long orderId, SetOrderDeliveryDateRequest setOrderDeliveryDateRequest);
    Future<ApiResponse<EmptyApiResponse>> setOrderDeliveryTrackCode(Long campaignId, Long orderId, SetOrderDeliveryTrackCodeRequest setOrderDeliveryTrackCodeRequest);
    Future<ApiResponse<SetOrderShipmentBoxesResponse>> setOrderShipmentBoxes(Long campaignId, Long orderId, Long shipmentId, SetOrderShipmentBoxesRequest setOrderShipmentBoxesRequest);
    Future<ApiResponse<EmptyApiResponse>> setReturnDecision(Long campaignId, Long orderId, Long returnId, SetReturnDecisionRequest setReturnDecisionRequest);
    Future<ApiResponse<EmptyApiResponse>> skipGoodsFeedbacksReaction(Long businessId, SkipGoodsFeedbackReactionRequest skipGoodsFeedbackReactionRequest);
    Future<ApiResponse<EmptyApiResponse>> submitReturnDecision(Long campaignId, Long orderId, Long returnId);
    Future<ApiResponse<EmptyApiResponse>> updateBusinessPrices(Long businessId, UpdateBusinessPricesRequest updateBusinessPricesRequest);
    Future<ApiResponse<EmptyApiResponse>> updateCampaignOffers(Long campaignId, UpdateCampaignOffersRequest updateCampaignOffersRequest);
    Future<ApiResponse<UpdateGoodsFeedbackCommentResponse>> updateGoodsFeedbackComment(Long businessId, UpdateGoodsFeedbackCommentRequest updateGoodsFeedbackCommentRequest);
    Future<ApiResponse<UpdateOfferContentResponse>> updateOfferContent(Long businessId, UpdateOfferContentRequest updateOfferContentRequest);
    Future<ApiResponse<EmptyApiResponse>> updateOfferMappingEntries(Long campaignId, UpdateOfferMappingEntryRequest updateOfferMappingEntryRequest);
    Future<ApiResponse<UpdateOfferMappingsResponse>> updateOfferMappings(Long businessId, UpdateOfferMappingsRequest updateOfferMappingsRequest);
    Future<ApiResponse<Void>> updateOrderItems(Long campaignId, Long orderId, UpdateOrderItemRequest updateOrderItemRequest);
    Future<ApiResponse<UpdateOrderStatusResponse>> updateOrderStatus(Long campaignId, Long orderId, UpdateOrderStatusRequest updateOrderStatusRequest);
    Future<ApiResponse<UpdateOrderStatusesResponse>> updateOrderStatuses(Long campaignId, UpdateOrderStatusesRequest updateOrderStatusesRequest);
    Future<ApiResponse<EmptyApiResponse>> updateOrderStorageLimit(Long campaignId, Long orderId, UpdateOrderStorageLimitRequest updateOrderStorageLimitRequest);
    Future<ApiResponse<EmptyApiResponse>> updateOutlet(Long campaignId, Long outletId, ChangeOutletRequest changeOutletRequest);
    Future<ApiResponse<EmptyApiResponse>> updateOutletLicenses(Long campaignId, UpdateOutletLicenseRequest updateOutletLicenseRequest);
    Future<ApiResponse<EmptyApiResponse>> updatePrices(Long campaignId, UpdatePricesRequest updatePricesRequest);
    Future<ApiResponse<UpdatePromoOffersResponse>> updatePromoOffers(Long businessId, UpdatePromoOffersRequest updatePromoOffersRequest);
    Future<ApiResponse<EmptyApiResponse>> updateStocks(Long campaignId, UpdateStocksRequest updateStocksRequest);
}
