/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.8.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.api;

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.rest.RestParamType;
import org.springframework.stereotype.Component;
import org.openapitools.model.*;
import org.apache.camel.model.rest.RestBindingMode;
import org.apache.camel.LoggingLevel;

@Component
public class HiddenOffersApi extends RouteBuilder {

    @Override
    public void configure() throws Exception {
        

        /**
        POST /campaigns/{campaignId}/hidden-offers : Скрытие товаров и настройки скрытия
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .post("/campaigns/{campaignId}/hidden-offers")
                .description("Скрытие товаров и настройки скрытия")
                .id("addHiddenOffersApi")
                .produces("application/json")
                .outType(EmptyApiResponse.class)
                .consumes("application/json")
                .type(AddHiddenOffersRequest.class)
                
                .param()
                    .name("campaignId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("addHiddenOffersRequest")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Запрос на скрытие оферов.")
                .endParam()
                .to("direct:addHiddenOffers");
        

        /**
        POST /campaigns/{campaignId}/hidden-offers/delete : Возобновление показа товаров
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .post("/campaigns/{campaignId}/hidden-offers/delete")
                .description("Возобновление показа товаров")
                .id("deleteHiddenOffersApi")
                .produces("application/json")
                .outType(EmptyApiResponse.class)
                .consumes("application/json")
                .type(DeleteHiddenOffersRequest.class)
                
                .param()
                    .name("campaignId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("deleteHiddenOffersRequest")
                    .type(RestParamType.body)
                    .required(true)
                    .description("Запрос на возобновление показа оферов.")
                .endParam()
                .to("direct:deleteHiddenOffers");
        

        /**
        GET /campaigns/{campaignId}/hidden-offers : Информация о скрытых вами товарах
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .get("/campaigns/{campaignId}/hidden-offers")
                .description("Информация о скрытых вами товарах")
                .id("getHiddenOffersApi")
                .produces("application/json")
                .outType(GetHiddenOffersResponse.class)
                .param()
                    .name("campaignId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("offerId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Идентификатор скрытого предложения. ")
                .endParam()
                .param()
                    .name("pageToken")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. ")
                .endParam()
                .param()
                    .name("limit")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Количество значений на одной странице. ")
                .endParam()
                .param()
                    .name("offset")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Позиция в списке, начиная с которой возвращаются результаты ответа.  Используется вместе с параметром `limit`.  Если задан `offset`, параметры `page_number` и `page_size` игнорируются.  `offset` игнорируется, если задан `page_token`. ")
                .endParam()
                .param()
                    .name("page")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. ")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. ")
                .endParam()
                .to("direct:getHiddenOffers");
        
    }
}
