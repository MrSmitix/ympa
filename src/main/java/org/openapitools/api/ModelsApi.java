/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.8.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.api;

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.rest.RestParamType;
import org.springframework.stereotype.Component;
import org.openapitools.model.*;
import org.apache.camel.model.rest.RestBindingMode;
import org.apache.camel.LoggingLevel;

@Component
public class ModelsApi extends RouteBuilder {

    @Override
    public void configure() throws Exception {
        

        /**
        GET /models/{modelId} : Информация об одной модели
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .get("/models/{modelId}")
                .description("Информация об одной модели")
                .id("getModelApi")
                .produces("application/json")
                .outType(GetModelsResponse.class)
                .param()
                    .name("modelId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор модели товара.")
                .endParam()
                .param()
                    .name("regionId")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). ")
                .endParam()
                .param()
                    .name("currency")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). ")
                .endParam()
                .to("direct:getModel");
        

        /**
        GET /models/{modelId}/offers : Список предложений для одной модели
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .get("/models/{modelId}/offers")
                .description("Список предложений для одной модели")
                .id("getModelOffersApi")
                .produces("application/json")
                .outType(GetModelsOffersResponse.class)
                .param()
                    .name("modelId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор модели товара.")
                .endParam()
                .param()
                    .name("regionId")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). ")
                .endParam()
                .param()
                    .name("currency")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). ")
                .endParam()
                .param()
                    .name("orderByPrice")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Направление сортировки по цене.  Возможные значения: * `ASC` — сортировка по возрастанию. * `DESC` — сортировка по убыванию.  Значение по умолчанию: предложения выводятся в произвольном порядке. ")
                .endParam()
                .param()
                    .name("count")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Количество предложений на странице ответа.")
                .endParam()
                .param()
                    .name("page")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. ")
                .endParam()
                .to("direct:getModelOffers");
        

        /**
        POST /models : Информация о нескольких моделях
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .post("/models")
                .description("Информация о нескольких моделях")
                .id("getModelsApi")
                .produces("application/json")
                .outType(GetModelsResponse.class)
                .consumes("application/json")
                .type(GetModelsRequest.class)
                
                .param()
                    .name("regionId")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). ")
                .endParam()
                .param()
                    .name("currency")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). ")
                .endParam()
                .param()
                    .name("getModelsRequest")
                    .type(RestParamType.body)
                    .required(true)
                .endParam()
                .to("direct:getModels");
        

        /**
        POST /models/offers : Список предложений для нескольких моделей
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .post("/models/offers")
                .description("Список предложений для нескольких моделей")
                .id("getModelsOffersApi")
                .produces("application/json")
                .outType(GetModelsOffersResponse.class)
                .consumes("application/json")
                .type(GetModelsRequest.class)
                
                .param()
                    .name("regionId")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). ")
                .endParam()
                .param()
                    .name("currency")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). ")
                .endParam()
                .param()
                    .name("orderByPrice")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Направление сортировки по цене.  Возможные значения: * `ASC` — сортировка по возрастанию. * `DESC` — сортировка по убыванию.  Значение по умолчанию: предложения выводятся в произвольном порядке. ")
                .endParam()
                .param()
                    .name("getModelsRequest")
                    .type(RestParamType.body)
                    .required(true)
                .endParam()
                .to("direct:getModelsOffers");
        

        /**
        GET /models : Поиск модели товара
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .get("/models")
                .description("Поиск модели товара")
                .id("searchModelsApi")
                .produces("application/json")
                .outType(SearchModelsResponse.class)
                .param()
                    .name("query")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Поисковый запрос по названию модели товара.")
                .endParam()
                .param()
                    .name("regionId")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). ")
                .endParam()
                .param()
                    .name("currency")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). ")
                .endParam()
                .param()
                    .name("page")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. ")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. ")
                .endParam()
                .to("direct:searchModels");
        
    }
}
