/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.8.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.api;

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.rest.RestParamType;
import org.springframework.stereotype.Component;
import org.openapitools.model.*;
import org.apache.camel.model.rest.RestBindingMode;
import org.apache.camel.LoggingLevel;

@Component
public class RegionsApi extends RouteBuilder {

    @Override
    public void configure() throws Exception {
        

        /**
        GET /regions/{regionId}/children : Информация о дочерних регионах
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .get("/regions/{regionId}/children")
                .description("Информация о дочерних регионах")
                .id("searchRegionChildrenApi")
                .produces("application/json")
                .outType(GetRegionWithChildrenResponse.class)
                .param()
                    .name("regionId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). ")
                .endParam()
                .param()
                    .name("page")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. ")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. ")
                .endParam()
                .to("direct:searchRegionChildren");
        

        /**
        GET /regions/{regionId} : Информация о регионе
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .get("/regions/{regionId}")
                .description("Информация о регионе")
                .id("searchRegionsByIdApi")
                .produces("application/json")
                .outType(GetRegionsResponse.class)
                .param()
                    .name("regionId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). ")
                .endParam()
                .to("direct:searchRegionsById");
        

        /**
        GET /regions : Поиск регионов по их имени
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .get("/regions")
                .description("Поиск регионов по их имени")
                .id("searchRegionsByNameApi")
                .produces("application/json")
                .outType(GetRegionsResponse.class)
                .param()
                    .name("name")
                    .type(RestParamType.query)
                    .required(true)
                    .description("Название региона.  Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, `Москва`. ")
                .endParam()
                .param()
                    .name("pageToken")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. ")
                .endParam()
                .param()
                    .name("limit")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Количество значений на одной странице. ")
                .endParam()
                .to("direct:searchRegionsByName");
        
    }
}
