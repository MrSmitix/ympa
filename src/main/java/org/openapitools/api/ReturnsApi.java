/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.api;

import io.micronaut.http.annotation.*;
import io.micronaut.core.annotation.*;
import io.micronaut.http.client.annotation.Client;
import io.micronaut.core.convert.format.Format;
import reactor.core.publisher.Mono;
import org.openapitools.model.ApiClientDataErrorResponse;
import org.openapitools.model.ApiForbiddenErrorResponse;
import org.openapitools.model.ApiLimitErrorResponse;
import org.openapitools.model.ApiNotFoundErrorResponse;
import org.openapitools.model.ApiServerErrorResponse;
import org.openapitools.model.ApiUnauthorizedErrorResponse;
import org.openapitools.model.EmptyApiResponse;
import java.io.File;
import org.openapitools.model.GetReturnResponse;
import org.openapitools.model.GetReturnsResponse;
import java.time.LocalDate;
import org.openapitools.model.RefundStatusType;
import org.openapitools.model.ReturnType;
import org.openapitools.model.SetReturnDecisionRequest;
import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import javax.validation.constraints.*;

@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Client("${openapi-micronaut-client-base-path}")
public interface ReturnsApi {
    /**
     * Информация о невыкупе или возврате
     * Получает информацию по одному невыкупу или возврату.  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
     *
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
     * @param orderId Идентификатор заказа. (required)
     * @param returnId Идентификатор возврата. (required)
     * @return GetReturnResponse
     */
    @Get(uri="/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}")
    @Consumes({"application/json"})
    Mono<GetReturnResponse> getReturn(
        @PathVariable(name="campaignId") @NotNull Long campaignId, 
        @PathVariable(name="orderId") @NotNull Long orderId, 
        @PathVariable(name="returnId") @NotNull Long returnId
    );

    /**
     * Получение заявления на возврат
     * Загружает заявление покупателя на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
     *
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
     * @param orderId Идентификатор заказа. (required)
     * @param returnId Идентификатор возврата. (required)
     * @return File
     */
    @Get(uri="/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application")
    @Consumes({"application/octet-stream", "application/json"})
    Mono<File> getReturnApplication(
        @PathVariable(name="campaignId") @NotNull Long campaignId, 
        @PathVariable(name="orderId") @NotNull Long orderId, 
        @PathVariable(name="returnId") @NotNull Long returnId
    );

    /**
     * Получение фотографии возврата
     * Получает фотографии, которые покупатель приложил к заявлению на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
     *
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
     * @param orderId Идентификатор заказа. (required)
     * @param returnId Идентификатор возврата. (required)
     * @param itemId Идентификатор товара в возврате. (required)
     * @param imageHash Хеш ссылки изображения для загрузки. (required)
     * @return File
     */
    @Get(uri="/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}")
    @Consumes({"application/octet-stream", "application/json"})
    Mono<File> getReturnPhoto(
        @PathVariable(name="campaignId") @NotNull Long campaignId, 
        @PathVariable(name="orderId") @NotNull Long orderId, 
        @PathVariable(name="returnId") @NotNull Long returnId, 
        @PathVariable(name="itemId") @NotNull Long itemId, 
        @PathVariable(name="imageHash") @NotNull String imageHash
    );

    /**
     * Список невыкупов и возвратов
     * Получает список невыкупов и возвратов.  Чтобы получить информацию по одному возврату или невыкупу, выполните запрос [GET campaigns/{campaignId}/orders/{orderId}/returns/{returnId}](../../reference/orders/getReturn.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
     *
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
     * @param pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.  (optional)
     * @param limit Количество значений на одной странице.  (optional)
     * @param orderIds Идентификаторы заказов — для фильтрации результатов.  Несколько идентификаторов перечисляются через запятую без пробела. Максимальное количество идентификаторов — 50.  (optional)
     * @param statuses Статусы возвратов или невыкупов — для фильтрации результатов.  Несколько статусов перечисляются через запятую.  (optional)
     * @param type Тип заказа для фильтрации:  * &#x60;RETURN&#x60; — возврат.  * &#x60;UNREDEEMED&#x60; — невыкуп.  Если не указывать, в ответе будут и возвраты, и невыкупы.  (optional)
     * @param fromDate Начальная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: &#x60;ГГГГ-ММ-ДД&#x60;.  (optional)
     * @param toDate Конечная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: &#x60;ГГГГ-ММ-ДД&#x60;.  (optional)
     * @param fromDate2 {% note warning \&quot;\&quot; %}  Этот параметр устарел. Вместо него используйте &#x60;fromDate&#x60;.  {% endnote %}  Начальная дата для фильтрации возвратов или невыкупов по дате обновления.  (optional)
     * @param toDate2 {% note warning \&quot;\&quot; %}  Этот параметр устарел. Вместо него используйте &#x60;toDate&#x60;.  {% endnote %}  Конечная дата для фильтрации возвратов или невыкупов по дате обновления.  (optional)
     * @return GetReturnsResponse
     */
    @Get(uri="/campaigns/{campaignId}/returns")
    @Consumes({"application/json"})
    Mono<GetReturnsResponse> getReturns(
        @PathVariable(name="campaignId") @NotNull Long campaignId, 
        @QueryValue(value="page_token") @Nullable String pageToken, 
        @QueryValue(value="limit") @Nullable Integer limit, 
        @QueryValue(value="orderIds") @Nullable @Size(max=50) List<Long> orderIds, 
        @QueryValue(value="statuses") @Nullable List<RefundStatusType> statuses, 
        @QueryValue(value="type") @Nullable ReturnType type, 
        @QueryValue(value="fromDate") @Nullable @Format("yyyy-MM-dd") LocalDate fromDate, 
        @QueryValue(value="toDate") @Nullable @Format("yyyy-MM-dd") LocalDate toDate, 
        @QueryValue(value="from_date") @Nullable @Format("yyyy-MM-dd") LocalDate fromDate2, 
        @QueryValue(value="to_date") @Nullable @Format("yyyy-MM-dd") LocalDate toDate2
    );

    /**
     * Принятие или изменение решения по возврату
     * Выбирает решение по возврату от покупателя. После этого для подтверждения решения нужно выполнить запрос [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit](../../reference/orders/submitReturnDecision.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
     *
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
     * @param orderId Идентификатор заказа. (required)
     * @param returnId Идентификатор возврата. (required)
     * @param setReturnDecisionRequest  (required)
     * @return EmptyApiResponse
     */
    @Post(uri="/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    Mono<EmptyApiResponse> setReturnDecision(
        @PathVariable(name="campaignId") @NotNull Long campaignId, 
        @PathVariable(name="orderId") @NotNull Long orderId, 
        @PathVariable(name="returnId") @NotNull Long returnId, 
        @Body @NotNull @Valid SetReturnDecisionRequest setReturnDecisionRequest
    );

    /**
     * Подтверждение решения по возврату
     * Подтверждает выбранное решение по возврату, отправленное в запросе [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision](../../reference/orders/setReturnDecision.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
     *
     * @param campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
     * @param orderId Идентификатор заказа. (required)
     * @param returnId Идентификатор возврата. (required)
     * @return EmptyApiResponse
     */
    @Post(uri="/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit")
    @Consumes({"application/json"})
    Mono<EmptyApiResponse> submitReturnDecision(
        @PathVariable(name="campaignId") @NotNull Long campaignId, 
        @PathVariable(name="orderId") @NotNull Long orderId, 
        @PathVariable(name="returnId") @NotNull Long returnId
    );

}
