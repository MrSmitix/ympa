/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.8.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.api;

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.rest.RestParamType;
import org.springframework.stereotype.Component;
import org.openapitools.model.*;
import org.apache.camel.model.rest.RestBindingMode;
import org.apache.camel.LoggingLevel;

@Component
public class OrdersApi extends RouteBuilder {

    @Override
    public void configure() throws Exception {
        

        /**
        PUT /campaigns/{campaignId}/orders/{orderId}/cancellation/accept : Отмена заказа покупателем
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .put("/campaigns/{campaignId}/orders/{orderId}/cancellation/accept")
                .description("Отмена заказа покупателем")
                .id("acceptOrderCancellationApi")
                .produces("application/json")
                .outType(EmptyApiResponse.class)
                .consumes("application/json")
                .type(AcceptOrderCancellationRequest.class)
                
                .param()
                    .name("campaignId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("orderId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор заказа.")
                .endParam()
                .param()
                    .name("acceptOrderCancellationRequest")
                    .type(RestParamType.body)
                    .required(true)
                .endParam()
                .to("direct:acceptOrderCancellation");
        

        /**
        GET /campaigns/{campaignId}/orders/{orderId} : Информация об одном заказе
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .get("/campaigns/{campaignId}/orders/{orderId}")
                .description("Информация об одном заказе")
                .id("getOrderApi")
                .produces("application/json")
                .outType(GetOrderResponse.class)
                .param()
                    .name("campaignId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("orderId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор заказа.")
                .endParam()
                .to("direct:getOrder");
        

        /**
        GET /campaigns/{campaignId}/orders : Информация о нескольких заказах
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .get("/campaigns/{campaignId}/orders")
                .description("Информация о нескольких заказах")
                .id("getOrdersApi")
                .produces("application/json")
                .outType(GetOrdersResponse.class)
                .param()
                    .name("campaignId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("orderIds")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Фильтрация заказов по идентификаторам. <br><br> ⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым. ")
                .endParam()
                .param()
                    .name("status")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Статус заказа:  * `CANCELLED` — заказ отменен.  * `DELIVERED` — заказ получен покупателем.  * `DELIVERY` — заказ передан в службу доставки.  * `PICKUP` — заказ доставлен в пункт самовывоза.  * `PROCESSING` — заказ находится в обработке.  * `UNPAID` — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).  Также могут возвращаться другие значения. Обрабатывать их не требуется. ")
                .endParam()
                .param()
                    .name("substatus")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).  Возможные значения для заказа в статусе `PROCESSING`:  * `STARTED` — заказ подтвержден, его можно начать обрабатывать. * `READY_TO_SHIP` — заказ собран и готов к отправке. * `SHIPPED` — заказ передан службе доставки.  Возможные значения для заказа в статусе `CANCELLED`:  * `DELIVERY_SERVICE_UNDELIVERED` — служба доставки не смогла доставить заказ.  * `PROCESSING_EXPIRED` — значение более не используется.  * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.  * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.  * `RESERVATION_FAILED` — Маркет не может продолжить дальнейшую обработку заказа.  * `SHOP_FAILED` — магазин не может выполнить заказ.  * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.  * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.  * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.  * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.  * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.  * `USER_UNREACHABLE` — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:    * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;   * перерыв между первым и третьим звонком не менее 90 минут;   * соединение не короче 5 секунд.    Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400. * `USER_WANTS_TO_CHANGE_DELIVERY_DATE` — покупатель хочет получить заказ в другой день. * `CANCELLED_COURIER_NOT_FOUND` — не удалось найти курьера.  Также могут возвращаться другие значения. Обрабатывать их не требуется. ")
                .endParam()
                .param()
                    .name("fromDate")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Начальная дата для фильтрации заказов по дате оформления.  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной и конечной датой (параметр `toDate`) должно быть не больше 30 дней.  Значение по умолчанию: 30 дней назад от текущей даты. ")
                .endParam()
                .param()
                    .name("toDate")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Конечная дата для фильтрации заказов по дате оформления.  Показываются заказы, созданные до 00:00 указанного дня.  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной (параметр `fromDate`) и конечной датой должно быть не больше 30 дней.  Значение по умолчанию: текущая дата. ")
                .endParam()
                .param()
                    .name("supplierShipmentDateFrom")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Начальная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной и конечной датой (параметр `supplierShipmentDateTo`) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. ")
                .endParam()
                .param()
                    .name("supplierShipmentDateTo")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Конечная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной (параметр `supplierShipmentDateFrom`) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. ")
                .endParam()
                .param()
                    .name("updatedAtFrom")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Начальная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Между начальной и конечной датой (параметр `updatedAtTo`) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. ")
                .endParam()
                .param()
                    .name("updatedAtTo")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Конечная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Между начальной (параметр `updatedAtFrom`) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. ")
                .endParam()
                .param()
                    .name("dispatchType")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Способ отгрузки")
                .endParam()
                .param()
                    .name("fake")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Фильтрация заказов по типам:  * `false` — настоящий заказ покупателя.  * `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. ")
                .endParam()
                .param()
                    .name("hasCis")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации [в системе «Честный ЗНАК»](https://честныйзнак.рф/):  * `true` — да.  * `false` — нет.  Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям. ")
                .endParam()
                .param()
                    .name("onlyWaitingForCancellationApprove")
                    .type(RestParamType.query)
                    .required(false)
                    .description("**Только для модели DBS**  Фильтрация заказов по наличию запросов покупателей на отмену.  При значение `true` возвращаются только заказы, которые находятся в статусе `DELIVERY` или `PICKUP` и которые пользователи решили отменить.  Чтобы подтвердить или отклонить отмену, отправьте запрос [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation). ")
                .endParam()
                .param()
                    .name("onlyEstimatedDelivery")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Фильтрация заказов с долгой доставкой (31-60 дней) по подтвержденной дате доставки:  * `true` — возвращаются только заказы с неподтвержденной датой доставки. * `false` — фильтрация не применяется. ")
                .endParam()
                .param()
                    .name("buyerType")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Фильтрация заказов по типу покупателя. ")
                .endParam()
                .param()
                    .name("page")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. ")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. ")
                .endParam()
                .param()
                    .name("pageToken")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. ")
                .endParam()
                .param()
                    .name("limit")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Количество значений на одной странице. ")
                .endParam()
                .to("direct:getOrders");
        

        /**
        POST /campaigns/{campaignId}/orders/{orderId}/deliverDigitalGoods : Передача ключей цифровых товаров
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .post("/campaigns/{campaignId}/orders/{orderId}/deliverDigitalGoods")
                .description("Передача ключей цифровых товаров")
                .id("provideOrderDigitalCodesApi")
                .produces("application/json")
                .outType(EmptyApiResponse.class)
                .consumes("application/json")
                .type(ProvideOrderDigitalCodesRequest.class)
                
                .param()
                    .name("campaignId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("orderId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор заказа.")
                .endParam()
                .param()
                    .name("provideOrderDigitalCodesRequest")
                    .type(RestParamType.body)
                    .required(true)
                .endParam()
                .to("direct:provideOrderDigitalCodes");
        

        /**
        PUT /campaigns/{campaignId}/orders/{orderId}/identifiers : Передача кодов маркировки единиц товара
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .put("/campaigns/{campaignId}/orders/{orderId}/identifiers")
                .description("Передача кодов маркировки единиц товара")
                .id("provideOrderItemIdentifiersApi")
                .produces("application/json")
                .outType(ProvideOrderItemIdentifiersResponse.class)
                .consumes("application/json")
                .type(ProvideOrderItemIdentifiersRequest.class)
                
                .param()
                    .name("campaignId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("orderId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор заказа.")
                .endParam()
                .param()
                    .name("provideOrderItemIdentifiersRequest")
                    .type(RestParamType.body)
                    .required(true)
                .endParam()
                .to("direct:provideOrderItemIdentifiers");
        

        /**
        PUT /campaigns/{campaignId}/orders/{orderId}/boxes : Подготовка заказа
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .put("/campaigns/{campaignId}/orders/{orderId}/boxes")
                .description("Подготовка заказа")
                .id("setOrderBoxLayoutApi")
                .produces("application/json")
                .outType(SetOrderBoxLayoutResponse.class)
                .consumes("application/json")
                .type(SetOrderBoxLayoutRequest.class)
                
                .param()
                    .name("campaignId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("orderId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор заказа.")
                .endParam()
                .param()
                    .name("setOrderBoxLayoutRequest")
                    .type(RestParamType.body)
                    .required(true)
                .endParam()
                .to("direct:setOrderBoxLayout");
        

        /**
        PUT /campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes : Передача количества грузовых мест в заказе
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .put("/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes")
                .description("Передача количества грузовых мест в заказе")
                .id("setOrderShipmentBoxesApi")
                .produces("application/json")
                .outType(SetOrderShipmentBoxesResponse.class)
                .consumes("application/json")
                .type(SetOrderShipmentBoxesRequest.class)
                
                .param()
                    .name("campaignId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("orderId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор заказа.")
                .endParam()
                .param()
                    .name("shipmentId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Параметр больше не используется. Вставьте любое число — просто чтобы получился корректный URL. ")
                .endParam()
                .param()
                    .name("setOrderShipmentBoxesRequest")
                    .type(RestParamType.body)
                    .required(true)
                .endParam()
                .to("direct:setOrderShipmentBoxes");
        

        /**
        PUT /campaigns/{campaignId}/orders/{orderId}/items : Удаление товара из заказа или уменьшение числа единиц
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .put("/campaigns/{campaignId}/orders/{orderId}/items")
                .description("Удаление товара из заказа или уменьшение числа единиц")
                .id("updateOrderItemsApi")
                .produces("application/json")
                .outType(Void.class)
                .consumes("application/json")
                .type(UpdateOrderItemRequest.class)
                
                .param()
                    .name("campaignId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("orderId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор заказа.")
                .endParam()
                .param()
                    .name("updateOrderItemRequest")
                    .type(RestParamType.body)
                    .required(true)
                .endParam()
                .to("direct:updateOrderItems");
        

        /**
        PUT /campaigns/{campaignId}/orders/{orderId}/status : Изменение статуса одного заказа
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .put("/campaigns/{campaignId}/orders/{orderId}/status")
                .description("Изменение статуса одного заказа")
                .id("updateOrderStatusApi")
                .produces("application/json")
                .outType(UpdateOrderStatusResponse.class)
                .consumes("application/json")
                .type(UpdateOrderStatusRequest.class)
                
                .param()
                    .name("campaignId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("orderId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор заказа.")
                .endParam()
                .param()
                    .name("updateOrderStatusRequest")
                    .type(RestParamType.body)
                    .required(true)
                .endParam()
                .to("direct:updateOrderStatus");
        

        /**
        POST /campaigns/{campaignId}/orders/status-update : Изменение статусов нескольких заказов
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .post("/campaigns/{campaignId}/orders/status-update")
                .description("Изменение статусов нескольких заказов")
                .id("updateOrderStatusesApi")
                .produces("application/json")
                .outType(UpdateOrderStatusesResponse.class)
                .consumes("application/json")
                .type(UpdateOrderStatusesRequest.class)
                
                .param()
                    .name("campaignId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("updateOrderStatusesRequest")
                    .type(RestParamType.body)
                    .required(true)
                .endParam()
                .to("direct:updateOrderStatuses");
        
    }
}
