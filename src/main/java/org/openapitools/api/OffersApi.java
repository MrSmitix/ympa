/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.8.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.api;

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.rest.RestParamType;
import org.springframework.stereotype.Component;
import org.openapitools.model.*;
import org.apache.camel.model.rest.RestBindingMode;
import org.apache.camel.LoggingLevel;

@Component
public class OffersApi extends RouteBuilder {

    @Override
    public void configure() throws Exception {
        

        /**
        POST /campaigns/{campaignId}/offers/delete : Удаление товаров из ассортимента магазина
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .post("/campaigns/{campaignId}/offers/delete")
                .description("Удаление товаров из ассортимента магазина")
                .id("deleteCampaignOffersApi")
                .produces("application/json")
                .outType(DeleteCampaignOffersResponse.class)
                .consumes("application/json")
                .type(DeleteCampaignOffersRequest.class)
                
                .param()
                    .name("campaignId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("deleteCampaignOffersRequest")
                    .type(RestParamType.body)
                    .required(true)
                .endParam()
                .to("direct:deleteCampaignOffers");
        

        /**
        GET /campaigns/{campaignId}/offers/all : Все предложения магазина
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .get("/campaigns/{campaignId}/offers/all")
                .description("Все предложения магазина")
                .id("getAllOffersApi")
                .produces("application/json")
                .outType(GetAllOffersResponse.class)
                .param()
                    .name("campaignId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("feedId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Идентификатор прайс-листа.")
                .endParam()
                .param()
                    .name("chunk")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Номер сегмента с результатами.  Значение по умолчанию: `0`.  {% note info %}  Номера сегментов запрашиваются последовательно, пока не будет получен сегмент с пустым ответом. Пустой ответ означает, что все предложения магазина получены.  {% endnote %}  {% note alert %}  Нумерация начинается с 0. Чтобы запросить первую страницу, необходимо указать `chunk=0` и т. д.  {% endnote %} ")
                .endParam()
                .to("direct:getAllOffers");
        

        /**
        POST /campaigns/{campaignId}/offers : Информация о товарах, которые размещены в заданном магазине
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .post("/campaigns/{campaignId}/offers")
                .description("Информация о товарах, которые размещены в заданном магазине")
                .id("getCampaignOffersApi")
                .produces("application/json")
                .outType(GetCampaignOffersResponse.class)
                .consumes("application/json")
                .type(GetCampaignOffersRequest.class)
                
                .param()
                    .name("campaignId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("pageToken")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. ")
                .endParam()
                .param()
                    .name("limit")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Количество значений на одной странице. ")
                .endParam()
                .param()
                    .name("getCampaignOffersRequest")
                    .type(RestParamType.body)
                    .required(true)
                .endParam()
                .to("direct:getCampaignOffers");
        

        /**
        POST /businesses/{businessId}/offers/recommendations : Рекомендации Маркета, касающиеся цен
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .post("/businesses/{businessId}/offers/recommendations")
                .description("Рекомендации Маркета, касающиеся цен")
                .id("getOfferRecommendationsApi")
                .produces("application/json")
                .outType(GetOfferRecommendationsResponse.class)
                .consumes("application/json")
                .type(GetOfferRecommendationsRequest.class)
                
                .param()
                    .name("businessId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("pageToken")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. ")
                .endParam()
                .param()
                    .name("limit")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Количество значений на одной странице. ")
                .endParam()
                .param()
                    .name("getOfferRecommendationsRequest")
                    .type(RestParamType.body)
                    .required(true)
                .endParam()
                .to("direct:getOfferRecommendations");
        

        /**
        GET /campaigns/{campaignId}/offers : Предложения магазина
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .get("/campaigns/{campaignId}/offers")
                .description("Предложения магазина")
                .id("getOffersApi")
                .produces("application/json")
                .outType(GetOffersResponse.class)
                .param()
                    .name("campaignId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("query")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Поисковый запрос.  Поддерживается язык запросов.  Значение по умолчанию: все предложения магазина, размещенные на Маркете. ")
                .endParam()
                .param()
                    .name("feedId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Идентификатор прайс-листа.")
                .endParam()
                .param()
                    .name("shopCategoryId")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Идентификатор категории предложения, указанный магазином в прайс-листе.  Параметр выводится только для предложений, у которых указана категория в прайс-листе.  Параметр доступен начиная с версии 2.0 партнерского API. ")
                .endParam()
                .param()
                    .name("currency")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Валюта, в которой указана цена предложения.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна. ")
                .endParam()
                .param()
                    .name("matched")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Фильтр по признаку соотнесения предложения и карточки модели.  Возможные значения:  * `0 / FALSE / NO` — поиск выполняется среди предложений, не соотнесенных ни с какой карточкой модели.  * `1 / TRUE / YES` — поиск выполняется среди предложений, соотнесенных с карточками моделей). ")
                .endParam()
                .param()
                    .name("page")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. ")
                .endParam()
                .param()
                    .name("pageSize")
                    .type(RestParamType.query)
                    .required(false)
                    .description("Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. ")
                .endParam()
                .to("direct:getOffers");
        

        /**
        POST /campaigns/{campaignId}/offers/update : Изменение условий продажи товаров в магазине
        **/
        rest()
            .securityDefinitions()
                .oauth2("OAuth")
                    .flow("implicit")
                    .authorizationUrl("https://oauth.yandex.ru/authorize")
                        .withScope("market:partner-api","API Яндекс.Маркета / Поиска по товарам для партнеров")
                
            .endSecurityDefinition()
            .post("/campaigns/{campaignId}/offers/update")
                .description("Изменение условий продажи товаров в магазине")
                .id("updateCampaignOffersApi")
                .produces("application/json")
                .outType(EmptyApiResponse.class)
                .consumes("application/json")
                .type(UpdateCampaignOffersRequest.class)
                
                .param()
                    .name("campaignId")
                    .type(RestParamType.path)
                    .required(true)
                    .description("Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) ")
                .endParam()
                .param()
                    .name("updateCampaignOffersRequest")
                    .type(RestParamType.body)
                    .required(true)
                .endParam()
                .to("direct:updateCampaignOffers");
        
    }
}
