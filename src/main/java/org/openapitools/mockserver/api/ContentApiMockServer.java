/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.8.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.mockserver.api;

import static com.github.tomakehurst.wiremock.client.WireMock.*;
import com.github.tomakehurst.wiremock.client.MappingBuilder;
import com.github.tomakehurst.wiremock.http.Fault;

public class ContentApiMockServer {

    public static MappingBuilder stubGetCategoryContentParameters200(@javax.annotation.Nonnull String categoryId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/category/{categoryId}/parameters"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("categoryId", equalTo(categoryId));

        return stub;
    }

    public static MappingBuilder stubGetCategoryContentParameters400(@javax.annotation.Nonnull String categoryId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/category/{categoryId}/parameters"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("categoryId", equalTo(categoryId));

        return stub;
    }

    public static MappingBuilder stubGetCategoryContentParameters401(@javax.annotation.Nonnull String categoryId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/category/{categoryId}/parameters"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("categoryId", equalTo(categoryId));

        return stub;
    }

    public static MappingBuilder stubGetCategoryContentParameters403(@javax.annotation.Nonnull String categoryId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/category/{categoryId}/parameters"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("categoryId", equalTo(categoryId));

        return stub;
    }

    public static MappingBuilder stubGetCategoryContentParameters404(@javax.annotation.Nonnull String categoryId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/category/{categoryId}/parameters"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(404)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("categoryId", equalTo(categoryId));

        return stub;
    }

    public static MappingBuilder stubGetCategoryContentParameters420(@javax.annotation.Nonnull String categoryId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/category/{categoryId}/parameters"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("categoryId", equalTo(categoryId));

        return stub;
    }

    public static MappingBuilder stubGetCategoryContentParameters500(@javax.annotation.Nonnull String categoryId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/category/{categoryId}/parameters"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("categoryId", equalTo(categoryId));

        return stub;
    }

    public static MappingBuilder stubGetCategoryContentParametersFault(@javax.annotation.Nonnull String categoryId, Fault fault) {
        MappingBuilder stub = post(urlPathTemplate("/category/{categoryId}/parameters"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withFault(fault)
            );

        stub = stub.withPathParam("categoryId", equalTo(categoryId));

        return stub;
    }

    public static String getCategoryContentParameters200ResponseSample1() {
        return "{ \"result\" : { \"parameters\" : [ { \"values\" : [ { \"description\" : \"description\", \"id\" : 5, \"value\" : \"value\" }, { \"description\" : \"description\", \"id\" : 5, \"value\" : \"value\" } ], \"recommendationTypes\" : [ \"HAS_VIDEO\", \"HAS_VIDEO\" ], \"description\" : \"description\", \"type\" : \"TEXT\", \"constraints\" : { \"minValue\" : 2.3021358869347655, \"maxValue\" : 7.061401241503109, \"maxLength\" : 9 }, \"required\" : true, \"multivalue\" : true, \"unit\" : { \"defaultUnitId\" : 1, \"units\" : [ { \"name\" : \"кг\", \"fullName\" : \"килограмм\", \"id\" : 5 }, { \"name\" : \"кг\", \"fullName\" : \"килограмм\", \"id\" : 5 } ] }, \"valueRestrictions\" : [ { \"limitedValues\" : [ { \"limitingOptionValueId\" : 2, \"optionValueIds\" : [ 4, 4 ] }, { \"limitingOptionValueId\" : 2, \"optionValueIds\" : [ 4, 4 ] } ], \"limitingParameterId\" : 3 }, { \"limitedValues\" : [ { \"limitingOptionValueId\" : 2, \"optionValueIds\" : [ 4, 4 ] }, { \"limitingOptionValueId\" : 2, \"optionValueIds\" : [ 4, 4 ] } ], \"limitingParameterId\" : 3 } ], \"distinctive\" : true, \"name\" : \"name\", \"id\" : 6, \"filtering\" : true, \"allowCustomValues\" : true }, { \"values\" : [ { \"description\" : \"description\", \"id\" : 5, \"value\" : \"value\" }, { \"description\" : \"description\", \"id\" : 5, \"value\" : \"value\" } ], \"recommendationTypes\" : [ \"HAS_VIDEO\", \"HAS_VIDEO\" ], \"description\" : \"description\", \"type\" : \"TEXT\", \"constraints\" : { \"minValue\" : 2.3021358869347655, \"maxValue\" : 7.061401241503109, \"maxLength\" : 9 }, \"required\" : true, \"multivalue\" : true, \"unit\" : { \"defaultUnitId\" : 1, \"units\" : [ { \"name\" : \"кг\", \"fullName\" : \"килограмм\", \"id\" : 5 }, { \"name\" : \"кг\", \"fullName\" : \"килограмм\", \"id\" : 5 } ] }, \"valueRestrictions\" : [ { \"limitedValues\" : [ { \"limitingOptionValueId\" : 2, \"optionValueIds\" : [ 4, 4 ] }, { \"limitingOptionValueId\" : 2, \"optionValueIds\" : [ 4, 4 ] } ], \"limitingParameterId\" : 3 }, { \"limitedValues\" : [ { \"limitingOptionValueId\" : 2, \"optionValueIds\" : [ 4, 4 ] }, { \"limitingOptionValueId\" : 2, \"optionValueIds\" : [ 4, 4 ] } ], \"limitingParameterId\" : 3 } ], \"distinctive\" : true, \"name\" : \"name\", \"id\" : 6, \"filtering\" : true, \"allowCustomValues\" : true } ], \"categoryId\" : 0 }, \"status\" : \"OK\" }";
    }
    public static String getCategoryContentParameters400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCategoryContentParameters401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCategoryContentParameters403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCategoryContentParameters404ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCategoryContentParameters420ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCategoryContentParameters500ResponseSample7() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }



    public static MappingBuilder stubGetOfferCardsContentStatus200(@javax.annotation.Nonnull String businessId, @javax.annotation.Nullable String pageToken, @javax.annotation.Nullable String limit, @javax.annotation.Nullable String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/businesses/{businessId}/offer-cards"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("businessId", equalTo(businessId));
        if(pageToken != null) {
            stub = stub.withQueryParam("pageToken", equalTo(pageToken));
        }
        if(limit != null) {
            stub = stub.withQueryParam("limit", equalTo(limit));
        }

        return stub;
    }

    public static MappingBuilder stubGetOfferCardsContentStatus400(@javax.annotation.Nonnull String businessId, @javax.annotation.Nullable String pageToken, @javax.annotation.Nullable String limit, @javax.annotation.Nullable String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/businesses/{businessId}/offer-cards"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("businessId", equalTo(businessId));
        if(pageToken != null) {
            stub = stub.withQueryParam("pageToken", equalTo(pageToken));
        }
        if(limit != null) {
            stub = stub.withQueryParam("limit", equalTo(limit));
        }

        return stub;
    }

    public static MappingBuilder stubGetOfferCardsContentStatus401(@javax.annotation.Nonnull String businessId, @javax.annotation.Nullable String pageToken, @javax.annotation.Nullable String limit, @javax.annotation.Nullable String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/businesses/{businessId}/offer-cards"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("businessId", equalTo(businessId));
        if(pageToken != null) {
            stub = stub.withQueryParam("pageToken", equalTo(pageToken));
        }
        if(limit != null) {
            stub = stub.withQueryParam("limit", equalTo(limit));
        }

        return stub;
    }

    public static MappingBuilder stubGetOfferCardsContentStatus403(@javax.annotation.Nonnull String businessId, @javax.annotation.Nullable String pageToken, @javax.annotation.Nullable String limit, @javax.annotation.Nullable String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/businesses/{businessId}/offer-cards"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("businessId", equalTo(businessId));
        if(pageToken != null) {
            stub = stub.withQueryParam("pageToken", equalTo(pageToken));
        }
        if(limit != null) {
            stub = stub.withQueryParam("limit", equalTo(limit));
        }

        return stub;
    }

    public static MappingBuilder stubGetOfferCardsContentStatus404(@javax.annotation.Nonnull String businessId, @javax.annotation.Nullable String pageToken, @javax.annotation.Nullable String limit, @javax.annotation.Nullable String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/businesses/{businessId}/offer-cards"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(404)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("businessId", equalTo(businessId));
        if(pageToken != null) {
            stub = stub.withQueryParam("pageToken", equalTo(pageToken));
        }
        if(limit != null) {
            stub = stub.withQueryParam("limit", equalTo(limit));
        }

        return stub;
    }

    public static MappingBuilder stubGetOfferCardsContentStatus420(@javax.annotation.Nonnull String businessId, @javax.annotation.Nullable String pageToken, @javax.annotation.Nullable String limit, @javax.annotation.Nullable String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/businesses/{businessId}/offer-cards"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("businessId", equalTo(businessId));
        if(pageToken != null) {
            stub = stub.withQueryParam("pageToken", equalTo(pageToken));
        }
        if(limit != null) {
            stub = stub.withQueryParam("limit", equalTo(limit));
        }

        return stub;
    }

    public static MappingBuilder stubGetOfferCardsContentStatus500(@javax.annotation.Nonnull String businessId, @javax.annotation.Nullable String pageToken, @javax.annotation.Nullable String limit, @javax.annotation.Nullable String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/businesses/{businessId}/offer-cards"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("businessId", equalTo(businessId));
        if(pageToken != null) {
            stub = stub.withQueryParam("pageToken", equalTo(pageToken));
        }
        if(limit != null) {
            stub = stub.withQueryParam("limit", equalTo(limit));
        }

        return stub;
    }

    public static MappingBuilder stubGetOfferCardsContentStatusFault(@javax.annotation.Nonnull String businessId, @javax.annotation.Nullable String pageToken, @javax.annotation.Nullable String limit, @javax.annotation.Nullable String body, Fault fault) {
        MappingBuilder stub = post(urlPathTemplate("/businesses/{businessId}/offer-cards"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withFault(fault)
            );

        stub = stub.withPathParam("businessId", equalTo(businessId));
        if(pageToken != null) {
            stub = stub.withQueryParam("pageToken", equalTo(pageToken));
        }
        if(limit != null) {
            stub = stub.withQueryParam("limit", equalTo(limit));
        }

        return stub;
    }

    public static String getOfferCardsContentStatus200ResponseSample1() {
        return "{ \"result\" : { \"offerCards\" : [ { \"mapping\" : { \"marketSkuName\" : \"marketSkuName\", \"marketCategoryName\" : \"marketCategoryName\", \"marketCategoryId\" : 4, \"marketSku\" : 3, \"marketModelId\" : 2, \"marketModelName\" : \"marketModelName\" }, \"warnings\" : [ { \"comment\" : \"comment\", \"message\" : \"message\" }, { \"comment\" : \"comment\", \"message\" : \"message\" } ], \"offerId\" : \"offerId\", \"contentRating\" : 0, \"recommendations\" : [ { \"type\" : \"HAS_VIDEO\", \"percent\" : 60 }, { \"type\" : \"HAS_VIDEO\", \"percent\" : 60 } ], \"cardStatus\" : \"HAS_CARD_CAN_NOT_UPDATE\", \"errors\" : [ { \"comment\" : \"comment\", \"message\" : \"message\" }, { \"comment\" : \"comment\", \"message\" : \"message\" } ], \"parameterValues\" : [ { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" } ] }, { \"mapping\" : { \"marketSkuName\" : \"marketSkuName\", \"marketCategoryName\" : \"marketCategoryName\", \"marketCategoryId\" : 4, \"marketSku\" : 3, \"marketModelId\" : 2, \"marketModelName\" : \"marketModelName\" }, \"warnings\" : [ { \"comment\" : \"comment\", \"message\" : \"message\" }, { \"comment\" : \"comment\", \"message\" : \"message\" } ], \"offerId\" : \"offerId\", \"contentRating\" : 0, \"recommendations\" : [ { \"type\" : \"HAS_VIDEO\", \"percent\" : 60 }, { \"type\" : \"HAS_VIDEO\", \"percent\" : 60 } ], \"cardStatus\" : \"HAS_CARD_CAN_NOT_UPDATE\", \"errors\" : [ { \"comment\" : \"comment\", \"message\" : \"message\" }, { \"comment\" : \"comment\", \"message\" : \"message\" } ], \"parameterValues\" : [ { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" } ] } ], \"paging\" : { \"nextPageToken\" : \"nextPageToken\" } }, \"status\" : \"OK\" }";
    }
    public static String getOfferCardsContentStatus400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOfferCardsContentStatus401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOfferCardsContentStatus403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOfferCardsContentStatus404ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOfferCardsContentStatus420ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOfferCardsContentStatus500ResponseSample7() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }

    public static String getOfferCardsContentStatusRequestSample1() {
        return "{ \"categoryIds\" : [ null, null, null, null, null ], \"offerIds\" : [ null, null, null, null, null ], \"cardStatuses\" : [ \"HAS_CARD_CAN_NOT_UPDATE\", \"HAS_CARD_CAN_NOT_UPDATE\" ] }";
    }


    public static MappingBuilder stubUpdateOfferContent200(@javax.annotation.Nonnull String businessId, @javax.annotation.Nonnull String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/businesses/{businessId}/offer-cards/update"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("businessId", equalTo(businessId));

        return stub;
    }

    public static MappingBuilder stubUpdateOfferContent400(@javax.annotation.Nonnull String businessId, @javax.annotation.Nonnull String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/businesses/{businessId}/offer-cards/update"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("businessId", equalTo(businessId));

        return stub;
    }

    public static MappingBuilder stubUpdateOfferContent401(@javax.annotation.Nonnull String businessId, @javax.annotation.Nonnull String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/businesses/{businessId}/offer-cards/update"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("businessId", equalTo(businessId));

        return stub;
    }

    public static MappingBuilder stubUpdateOfferContent403(@javax.annotation.Nonnull String businessId, @javax.annotation.Nonnull String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/businesses/{businessId}/offer-cards/update"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("businessId", equalTo(businessId));

        return stub;
    }

    public static MappingBuilder stubUpdateOfferContent404(@javax.annotation.Nonnull String businessId, @javax.annotation.Nonnull String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/businesses/{businessId}/offer-cards/update"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(404)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("businessId", equalTo(businessId));

        return stub;
    }

    public static MappingBuilder stubUpdateOfferContent420(@javax.annotation.Nonnull String businessId, @javax.annotation.Nonnull String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/businesses/{businessId}/offer-cards/update"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("businessId", equalTo(businessId));

        return stub;
    }

    public static MappingBuilder stubUpdateOfferContent423(@javax.annotation.Nonnull String businessId, @javax.annotation.Nonnull String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/businesses/{businessId}/offer-cards/update"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(423)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("businessId", equalTo(businessId));

        return stub;
    }

    public static MappingBuilder stubUpdateOfferContent500(@javax.annotation.Nonnull String businessId, @javax.annotation.Nonnull String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/businesses/{businessId}/offer-cards/update"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("businessId", equalTo(businessId));

        return stub;
    }

    public static MappingBuilder stubUpdateOfferContentFault(@javax.annotation.Nonnull String businessId, @javax.annotation.Nonnull String body, Fault fault) {
        MappingBuilder stub = post(urlPathTemplate("/businesses/{businessId}/offer-cards/update"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withFault(fault)
            );

        stub = stub.withPathParam("businessId", equalTo(businessId));

        return stub;
    }

    public static String updateOfferContent200ResponseSample1() {
        return "{ \"results\" : [ { \"warnings\" : [ { \"parameterId\" : 0, \"type\" : \"OFFER_NOT_FOUND\", \"message\" : \"message\" }, { \"parameterId\" : 0, \"type\" : \"OFFER_NOT_FOUND\", \"message\" : \"message\" } ], \"offerId\" : \"offerId\", \"errors\" : [ { \"parameterId\" : 0, \"type\" : \"OFFER_NOT_FOUND\", \"message\" : \"message\" }, { \"parameterId\" : 0, \"type\" : \"OFFER_NOT_FOUND\", \"message\" : \"message\" } ] }, { \"warnings\" : [ { \"parameterId\" : 0, \"type\" : \"OFFER_NOT_FOUND\", \"message\" : \"message\" }, { \"parameterId\" : 0, \"type\" : \"OFFER_NOT_FOUND\", \"message\" : \"message\" } ], \"offerId\" : \"offerId\", \"errors\" : [ { \"parameterId\" : 0, \"type\" : \"OFFER_NOT_FOUND\", \"message\" : \"message\" }, { \"parameterId\" : 0, \"type\" : \"OFFER_NOT_FOUND\", \"message\" : \"message\" } ] } ], \"status\" : \"OK\" }";
    }
    public static String updateOfferContent400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String updateOfferContent401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String updateOfferContent403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String updateOfferContent404ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String updateOfferContent420ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String updateOfferContent423ResponseSample7() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String updateOfferContent500ResponseSample8() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }

    public static String updateOfferContentRequestSample1() {
        return "{ \"offersContent\" : [ { \"offerId\" : \"offerId\", \"categoryId\" : 0, \"parameterValues\" : [ { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" } ] }, { \"offerId\" : \"offerId\", \"categoryId\" : 0, \"parameterValues\" : [ { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" } ] }, { \"offerId\" : \"offerId\", \"categoryId\" : 0, \"parameterValues\" : [ { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" } ] }, { \"offerId\" : \"offerId\", \"categoryId\" : 0, \"parameterValues\" : [ { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" } ] }, { \"offerId\" : \"offerId\", \"categoryId\" : 0, \"parameterValues\" : [ { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" }, { \"valueId\" : 5, \"parameterId\" : 1, \"unitId\" : 5, \"value\" : \"value\" } ] } ] }";
    }


}
