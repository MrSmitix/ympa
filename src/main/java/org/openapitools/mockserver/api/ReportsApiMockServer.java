/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.8.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.mockserver.api;

import static com.github.tomakehurst.wiremock.client.WireMock.*;
import com.github.tomakehurst.wiremock.client.MappingBuilder;
import com.github.tomakehurst.wiremock.http.Fault;

public class ReportsApiMockServer {

    public static MappingBuilder stubGenerateBoostConsolidatedReport200(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/boost-consolidated/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateBoostConsolidatedReport400(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/boost-consolidated/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateBoostConsolidatedReport401(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/boost-consolidated/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateBoostConsolidatedReport403(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/boost-consolidated/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateBoostConsolidatedReport420(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/boost-consolidated/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateBoostConsolidatedReport500(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/boost-consolidated/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateBoostConsolidatedReportFault(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, Fault fault) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/boost-consolidated/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withFault(fault)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static String generateBoostConsolidatedReport200ResponseSample1() {
        return "{ \"result\" : { \"reportId\" : \"reportId\", \"estimatedGenerationTime\" : 0 }, \"status\" : \"OK\" }";
    }
    public static String generateBoostConsolidatedReport400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateBoostConsolidatedReport401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateBoostConsolidatedReport403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateBoostConsolidatedReport420ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateBoostConsolidatedReport500ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }

    public static String generateBoostConsolidatedReportRequestSample1() {
        return "{ \"businessId\" : 0, \"dateTo\" : \"2000-01-23\", \"dateFrom\" : \"2000-01-23\" }";
    }


    public static MappingBuilder stubGenerateCompetitorsPositionReport200(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/competitors-position/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateCompetitorsPositionReport400(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/competitors-position/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateCompetitorsPositionReport401(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/competitors-position/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateCompetitorsPositionReport403(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/competitors-position/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateCompetitorsPositionReport420(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/competitors-position/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateCompetitorsPositionReport500(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/competitors-position/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateCompetitorsPositionReportFault(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, Fault fault) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/competitors-position/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withFault(fault)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static String generateCompetitorsPositionReport200ResponseSample1() {
        return "{ \"result\" : { \"reportId\" : \"reportId\", \"estimatedGenerationTime\" : 0 }, \"status\" : \"OK\" }";
    }
    public static String generateCompetitorsPositionReport400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateCompetitorsPositionReport401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateCompetitorsPositionReport403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateCompetitorsPositionReport420ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateCompetitorsPositionReport500ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }

    public static String generateCompetitorsPositionReportRequestSample1() {
        return "{ \"businessId\" : 0, \"dateTo\" : \"2000-01-23\", \"dateFrom\" : \"2000-01-23\", \"categoryId\" : 6 }";
    }


    public static MappingBuilder stubGenerateGoodsFeedbackReport200(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-feedback/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsFeedbackReport400(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-feedback/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsFeedbackReport401(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-feedback/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsFeedbackReport403(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-feedback/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsFeedbackReport420(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-feedback/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsFeedbackReport500(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-feedback/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsFeedbackReportFault(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, Fault fault) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-feedback/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withFault(fault)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static String generateGoodsFeedbackReport200ResponseSample1() {
        return "{ \"result\" : { \"reportId\" : \"reportId\", \"estimatedGenerationTime\" : 0 }, \"status\" : \"OK\" }";
    }
    public static String generateGoodsFeedbackReport400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateGoodsFeedbackReport401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateGoodsFeedbackReport403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateGoodsFeedbackReport420ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateGoodsFeedbackReport500ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }

    public static String generateGoodsFeedbackReportRequestSample1() {
        return "{ \"businessId\" : 0 }";
    }


    public static MappingBuilder stubGenerateGoodsMovementReport200(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-movement/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsMovementReport400(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-movement/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsMovementReport401(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-movement/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsMovementReport403(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-movement/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsMovementReport420(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-movement/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsMovementReport500(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-movement/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsMovementReportFault(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, Fault fault) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-movement/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withFault(fault)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static String generateGoodsMovementReport200ResponseSample1() {
        return "{ \"result\" : { \"reportId\" : \"reportId\", \"estimatedGenerationTime\" : 0 }, \"status\" : \"OK\" }";
    }
    public static String generateGoodsMovementReport400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateGoodsMovementReport401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateGoodsMovementReport403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateGoodsMovementReport420ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateGoodsMovementReport500ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }

    public static String generateGoodsMovementReportRequestSample1() {
        return "{ \"shopSku\" : \"shopSku\", \"campaignId\" : 0, \"dateTo\" : \"2000-01-23\", \"dateFrom\" : \"2000-01-23\" }";
    }


    public static MappingBuilder stubGenerateGoodsRealizationReport200(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-realization/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsRealizationReport400(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-realization/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsRealizationReport401(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-realization/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsRealizationReport403(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-realization/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsRealizationReport420(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-realization/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsRealizationReport500(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-realization/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsRealizationReportFault(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, Fault fault) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-realization/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withFault(fault)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static String generateGoodsRealizationReport200ResponseSample1() {
        return "{ \"result\" : { \"reportId\" : \"reportId\", \"estimatedGenerationTime\" : 0 }, \"status\" : \"OK\" }";
    }
    public static String generateGoodsRealizationReport400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateGoodsRealizationReport401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateGoodsRealizationReport403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateGoodsRealizationReport420ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateGoodsRealizationReport500ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }

    public static String generateGoodsRealizationReportRequestSample1() {
        return "{ \"month\" : 2, \"year\" : 6, \"campaignId\" : 0 }";
    }


    public static MappingBuilder stubGenerateGoodsTurnoverReport200(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-turnover/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsTurnoverReport400(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-turnover/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsTurnoverReport401(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-turnover/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsTurnoverReport403(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-turnover/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsTurnoverReport420(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-turnover/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsTurnoverReport500(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-turnover/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateGoodsTurnoverReportFault(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, Fault fault) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/goods-turnover/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withFault(fault)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static String generateGoodsTurnoverReport200ResponseSample1() {
        return "{ \"result\" : { \"reportId\" : \"reportId\", \"estimatedGenerationTime\" : 0 }, \"status\" : \"OK\" }";
    }
    public static String generateGoodsTurnoverReport400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateGoodsTurnoverReport401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateGoodsTurnoverReport403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateGoodsTurnoverReport420ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateGoodsTurnoverReport500ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }

    public static String generateGoodsTurnoverReportRequestSample1() {
        return "{ \"date\" : \"2000-01-23\", \"campaignId\" : 0 }";
    }


    public static MappingBuilder stubGenerateMassOrderLabelsReport200(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/documents/labels/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateMassOrderLabelsReport400(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/documents/labels/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateMassOrderLabelsReport401(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/documents/labels/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateMassOrderLabelsReport403(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/documents/labels/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateMassOrderLabelsReport420(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/documents/labels/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateMassOrderLabelsReport500(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/documents/labels/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateMassOrderLabelsReportFault(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, Fault fault) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/documents/labels/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withFault(fault)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static String generateMassOrderLabelsReport200ResponseSample1() {
        return "{ \"result\" : { \"reportId\" : \"reportId\", \"estimatedGenerationTime\" : 0 }, \"status\" : \"OK\" }";
    }
    public static String generateMassOrderLabelsReport400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateMassOrderLabelsReport401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateMassOrderLabelsReport403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateMassOrderLabelsReport420ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateMassOrderLabelsReport500ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }

    public static String generateMassOrderLabelsReportRequestSample1() {
        return "{ \"businessId\" : 0, \"orderIds\" : [ 6, 6, 6, 6, 6 ] }";
    }


    public static MappingBuilder stubGeneratePricesReport200(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/prices/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGeneratePricesReport400(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/prices/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGeneratePricesReport401(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/prices/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGeneratePricesReport403(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/prices/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGeneratePricesReport420(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/prices/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGeneratePricesReport500(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/prices/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGeneratePricesReportFault(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, Fault fault) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/prices/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withFault(fault)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static String generatePricesReport200ResponseSample1() {
        return "{ \"result\" : { \"reportId\" : \"reportId\", \"estimatedGenerationTime\" : 0 }, \"status\" : \"OK\" }";
    }
    public static String generatePricesReport400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generatePricesReport401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generatePricesReport403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generatePricesReport420ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generatePricesReport500ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }

    public static String generatePricesReportRequestSample1() {
        return "{ \"categoryIds\" : [ 1, 1 ], \"creationDateTo\" : \"2000-01-23\", \"campaignId\" : 6, \"businessId\" : 0, \"creationDateFrom\" : \"2000-01-23\" }";
    }


    public static MappingBuilder stubGenerateShelfsStatisticsReport200(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/shelf-statistics/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateShelfsStatisticsReport400(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/shelf-statistics/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateShelfsStatisticsReport401(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/shelf-statistics/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateShelfsStatisticsReport403(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/shelf-statistics/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateShelfsStatisticsReport420(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/shelf-statistics/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateShelfsStatisticsReport500(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/shelf-statistics/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateShelfsStatisticsReportFault(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, Fault fault) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/shelf-statistics/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withFault(fault)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static String generateShelfsStatisticsReport200ResponseSample1() {
        return "{ \"result\" : { \"reportId\" : \"reportId\", \"estimatedGenerationTime\" : 0 }, \"status\" : \"OK\" }";
    }
    public static String generateShelfsStatisticsReport400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateShelfsStatisticsReport401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateShelfsStatisticsReport403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateShelfsStatisticsReport420ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateShelfsStatisticsReport500ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }

    public static String generateShelfsStatisticsReportRequestSample1() {
        return "{ \"businessId\" : 0, \"dateTo\" : \"2000-01-23\", \"dateFrom\" : \"2000-01-23\", \"attributionType\" : \"CLICKS\" }";
    }


    public static MappingBuilder stubGenerateShipmentListDocumentReport200(@javax.annotation.Nonnull String body, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/documents/shipment-list/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );


        return stub;
    }

    public static MappingBuilder stubGenerateShipmentListDocumentReport400(@javax.annotation.Nonnull String body, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/documents/shipment-list/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );


        return stub;
    }

    public static MappingBuilder stubGenerateShipmentListDocumentReport401(@javax.annotation.Nonnull String body, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/documents/shipment-list/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );


        return stub;
    }

    public static MappingBuilder stubGenerateShipmentListDocumentReport403(@javax.annotation.Nonnull String body, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/documents/shipment-list/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );


        return stub;
    }

    public static MappingBuilder stubGenerateShipmentListDocumentReport420(@javax.annotation.Nonnull String body, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/documents/shipment-list/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );


        return stub;
    }

    public static MappingBuilder stubGenerateShipmentListDocumentReport500(@javax.annotation.Nonnull String body, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/documents/shipment-list/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );


        return stub;
    }

    public static MappingBuilder stubGenerateShipmentListDocumentReportFault(@javax.annotation.Nonnull String body, Fault fault) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/documents/shipment-list/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withFault(fault)
            );


        return stub;
    }

    public static String generateShipmentListDocumentReport200ResponseSample1() {
        return "{ \"result\" : { \"reportId\" : \"reportId\", \"estimatedGenerationTime\" : 0 }, \"status\" : \"OK\" }";
    }
    public static String generateShipmentListDocumentReport400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateShipmentListDocumentReport401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateShipmentListDocumentReport403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateShipmentListDocumentReport420ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateShipmentListDocumentReport500ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }

    public static String generateShipmentListDocumentReportRequestSample1() {
        return "{ \"campaignId\" : 0, \"shipmentId\" : 6, \"orderIds\" : [ 1, 1 ] }";
    }


    public static MappingBuilder stubGenerateShowsSalesReport200(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/shows-sales/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateShowsSalesReport400(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/shows-sales/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateShowsSalesReport401(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/shows-sales/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateShowsSalesReport403(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/shows-sales/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateShowsSalesReport420(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/shows-sales/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateShowsSalesReport500(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/shows-sales/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateShowsSalesReportFault(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, Fault fault) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/shows-sales/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withFault(fault)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static String generateShowsSalesReport200ResponseSample1() {
        return "{ \"result\" : { \"reportId\" : \"reportId\", \"estimatedGenerationTime\" : 0 }, \"status\" : \"OK\" }";
    }
    public static String generateShowsSalesReport400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateShowsSalesReport401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateShowsSalesReport403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateShowsSalesReport420ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateShowsSalesReport500ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }

    public static String generateShowsSalesReportRequestSample1() {
        return "{ \"campaignId\" : 6, \"businessId\" : 0, \"dateTo\" : \"2000-01-23\", \"dateFrom\" : \"2000-01-23\", \"grouping\" : \"CATEGORIES\" }";
    }


    public static MappingBuilder stubGenerateStocksOnWarehousesReport200(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/stocks-on-warehouses/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateStocksOnWarehousesReport400(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/stocks-on-warehouses/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateStocksOnWarehousesReport401(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/stocks-on-warehouses/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateStocksOnWarehousesReport403(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/stocks-on-warehouses/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateStocksOnWarehousesReport420(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/stocks-on-warehouses/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateStocksOnWarehousesReport500(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/stocks-on-warehouses/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateStocksOnWarehousesReportFault(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, Fault fault) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/stocks-on-warehouses/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withFault(fault)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static String generateStocksOnWarehousesReport200ResponseSample1() {
        return "{ \"result\" : { \"reportId\" : \"reportId\", \"estimatedGenerationTime\" : 0 }, \"status\" : \"OK\" }";
    }
    public static String generateStocksOnWarehousesReport400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateStocksOnWarehousesReport401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateStocksOnWarehousesReport403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateStocksOnWarehousesReport420ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateStocksOnWarehousesReport500ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }

    public static String generateStocksOnWarehousesReportRequestSample1() {
        return "{ \"categoryIds\" : [ 1, 1 ], \"hasStocks\" : true, \"reportDate\" : \"2000-01-23\", \"campaignId\" : 0, \"warehouseIds\" : [ 6, 6 ] }";
    }


    public static MappingBuilder stubGenerateUnitedMarketplaceServicesReport200(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-marketplace-services/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateUnitedMarketplaceServicesReport400(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-marketplace-services/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateUnitedMarketplaceServicesReport401(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-marketplace-services/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateUnitedMarketplaceServicesReport403(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-marketplace-services/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateUnitedMarketplaceServicesReport420(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-marketplace-services/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateUnitedMarketplaceServicesReport500(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-marketplace-services/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateUnitedMarketplaceServicesReportFault(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, Fault fault) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-marketplace-services/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withFault(fault)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static String generateUnitedMarketplaceServicesReport200ResponseSample1() {
        return "{ \"result\" : { \"reportId\" : \"reportId\", \"estimatedGenerationTime\" : 0 }, \"status\" : \"OK\" }";
    }
    public static String generateUnitedMarketplaceServicesReport400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateUnitedMarketplaceServicesReport401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateUnitedMarketplaceServicesReport403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateUnitedMarketplaceServicesReport420ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateUnitedMarketplaceServicesReport500ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }

    public static String generateUnitedMarketplaceServicesReportRequestSample1() {
        return "{ \"dateTimeFrom\" : \"2000-01-23T04:56:07.000+00:00\", \"yearFrom\" : 6, \"placementPrograms\" : [ \"FBS\", \"FBS\" ], \"businessId\" : 0, \"dateTo\" : \"2000-01-23\", \"monthFrom\" : 2, \"dateTimeTo\" : \"2000-01-23T04:56:07.000+00:00\", \"inns\" : [ \"inns\", \"inns\" ], \"campaignIds\" : [ 2, 2 ], \"dateFrom\" : \"2000-01-23\", \"monthTo\" : 7, \"yearTo\" : 5 }";
    }


    public static MappingBuilder stubGenerateUnitedNettingReport200(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-netting/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateUnitedNettingReport400(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-netting/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateUnitedNettingReport401(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-netting/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateUnitedNettingReport403(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-netting/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateUnitedNettingReport420(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-netting/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateUnitedNettingReport500(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-netting/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateUnitedNettingReportFault(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, Fault fault) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-netting/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withFault(fault)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static String generateUnitedNettingReport200ResponseSample1() {
        return "{ \"result\" : { \"reportId\" : \"reportId\", \"estimatedGenerationTime\" : 0 }, \"status\" : \"OK\" }";
    }
    public static String generateUnitedNettingReport400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateUnitedNettingReport401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateUnitedNettingReport403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateUnitedNettingReport420ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateUnitedNettingReport500ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }

    public static String generateUnitedNettingReportRequestSample1() {
        return "{ \"dateTimeFrom\" : \"2000-01-23T04:56:07.000+00:00\", \"bankOrderId\" : 6, \"placementPrograms\" : [ \"FBS\", \"FBS\" ], \"businessId\" : 0, \"dateTo\" : \"2000-01-23\", \"dateTimeTo\" : \"2000-01-23T04:56:07.000+00:00\", \"inns\" : [ \"inns\", \"inns\" ], \"campaignIds\" : [ 1, 1 ], \"dateFrom\" : \"2000-01-23\", \"bankOrderDateTime\" : \"2000-01-23T04:56:07.000+00:00\" }";
    }


    public static MappingBuilder stubGenerateUnitedOrdersReport200(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-orders/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateUnitedOrdersReport400(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-orders/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateUnitedOrdersReport401(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-orders/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateUnitedOrdersReport403(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-orders/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateUnitedOrdersReport420(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-orders/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateUnitedOrdersReport500(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, String response) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-orders/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static MappingBuilder stubGenerateUnitedOrdersReportFault(@javax.annotation.Nonnull String body, @javax.annotation.Nullable String format, Fault fault) {
        MappingBuilder stub = post(urlPathEqualTo("/reports/united-orders/generate"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withFault(fault)
            );

        if(format != null) {
            stub = stub.withQueryParam("format", equalTo(format));
        }

        return stub;
    }

    public static String generateUnitedOrdersReport200ResponseSample1() {
        return "{ \"result\" : { \"reportId\" : \"reportId\", \"estimatedGenerationTime\" : 0 }, \"status\" : \"OK\" }";
    }
    public static String generateUnitedOrdersReport400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateUnitedOrdersReport401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateUnitedOrdersReport403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateUnitedOrdersReport420ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String generateUnitedOrdersReport500ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }

    public static String generateUnitedOrdersReportRequestSample1() {
        return "{ \"businessId\" : 0, \"dateTo\" : \"2000-01-23\", \"campaignIds\" : [ 6, 6 ], \"promoId\" : \"promoId\", \"dateFrom\" : \"2000-01-23\" }";
    }


    public static MappingBuilder stubGetReportInfo200(@javax.annotation.Nonnull String reportId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/reports/info/{reportId}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("reportId", equalTo(reportId));

        return stub;
    }

    public static MappingBuilder stubGetReportInfo400(@javax.annotation.Nonnull String reportId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/reports/info/{reportId}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("reportId", equalTo(reportId));

        return stub;
    }

    public static MappingBuilder stubGetReportInfo401(@javax.annotation.Nonnull String reportId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/reports/info/{reportId}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("reportId", equalTo(reportId));

        return stub;
    }

    public static MappingBuilder stubGetReportInfo403(@javax.annotation.Nonnull String reportId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/reports/info/{reportId}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("reportId", equalTo(reportId));

        return stub;
    }

    public static MappingBuilder stubGetReportInfo404(@javax.annotation.Nonnull String reportId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/reports/info/{reportId}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(404)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("reportId", equalTo(reportId));

        return stub;
    }

    public static MappingBuilder stubGetReportInfo420(@javax.annotation.Nonnull String reportId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/reports/info/{reportId}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("reportId", equalTo(reportId));

        return stub;
    }

    public static MappingBuilder stubGetReportInfo500(@javax.annotation.Nonnull String reportId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/reports/info/{reportId}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("reportId", equalTo(reportId));

        return stub;
    }

    public static MappingBuilder stubGetReportInfoFault(@javax.annotation.Nonnull String reportId, Fault fault) {
        MappingBuilder stub = get(urlPathTemplate("/reports/info/{reportId}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withFault(fault)
            );

        stub = stub.withPathParam("reportId", equalTo(reportId));

        return stub;
    }

    public static String getReportInfo200ResponseSample1() {
        return "{ \"result\" : { \"generationRequestedAt\" : \"2000-01-23T04:56:07.000+00:00\", \"file\" : \"file\", \"generationFinishedAt\" : \"2000-01-23T04:56:07.000+00:00\", \"subStatus\" : \"NO_DATA\", \"status\" : \"PENDING\", \"estimatedGenerationTime\" : 0 }, \"status\" : \"OK\" }";
    }
    public static String getReportInfo400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getReportInfo401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getReportInfo403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getReportInfo404ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getReportInfo420ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getReportInfo500ResponseSample7() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }



}
