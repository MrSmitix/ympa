/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.8.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.mockserver.api;

import static com.github.tomakehurst.wiremock.client.WireMock.*;
import com.github.tomakehurst.wiremock.client.MappingBuilder;
import com.github.tomakehurst.wiremock.http.Fault;

public class CampaignsApiMockServer {

    public static MappingBuilder stubGetCampaign200(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaign400(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaign401(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaign403(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaign404(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(404)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaign420(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaign500(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaignFault(@javax.annotation.Nonnull String campaignId, Fault fault) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withFault(fault)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static String getCampaign200ResponseSample1() {
        return "{ \"campaign\" : { \"clientId\" : 6, \"business\" : { \"name\" : \"name\", \"id\" : 0 }, \"domain\" : \"domain\", \"placementType\" : \"FBS\", \"id\" : 0 } }";
    }
    public static String getCampaign400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaign401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaign403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaign404ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaign420ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaign500ResponseSample7() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }



    public static MappingBuilder stubGetCampaignLogins200(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/logins"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaignLogins400(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/logins"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaignLogins401(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/logins"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaignLogins403(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/logins"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaignLogins404(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/logins"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(404)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaignLogins420(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/logins"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaignLogins500(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/logins"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaignLoginsFault(@javax.annotation.Nonnull String campaignId, Fault fault) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/logins"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withFault(fault)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static String getCampaignLogins200ResponseSample1() {
        return "{ \"logins\" : [ \"logins\", \"logins\" ] }";
    }
    public static String getCampaignLogins400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignLogins401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignLogins403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignLogins404ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignLogins420ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignLogins500ResponseSample7() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }



    @Deprecated
    public static MappingBuilder stubGetCampaignRegion200(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/region"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    @Deprecated
    public static MappingBuilder stubGetCampaignRegion400(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/region"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    @Deprecated
    public static MappingBuilder stubGetCampaignRegion401(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/region"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    @Deprecated
    public static MappingBuilder stubGetCampaignRegion403(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/region"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    @Deprecated
    public static MappingBuilder stubGetCampaignRegion404(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/region"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(404)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    @Deprecated
    public static MappingBuilder stubGetCampaignRegion420(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/region"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    @Deprecated
    public static MappingBuilder stubGetCampaignRegion500(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/region"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaignRegionFault(@javax.annotation.Nonnull String campaignId, Fault fault) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/region"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withFault(fault)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static String getCampaignRegion200ResponseSample1() {
        return "{ \"region\" : { \"children\" : [ null, null ], \"name\" : \"name\", \"id\" : 0, \"type\" : \"OTHER\" } }";
    }
    public static String getCampaignRegion400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignRegion401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignRegion403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignRegion404ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignRegion420ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignRegion500ResponseSample7() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }



    public static MappingBuilder stubGetCampaignSettings200(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/settings"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaignSettings400(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/settings"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaignSettings401(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/settings"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaignSettings403(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/settings"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaignSettings404(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/settings"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(404)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaignSettings420(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/settings"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaignSettings500(@javax.annotation.Nonnull String campaignId, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/settings"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static MappingBuilder stubGetCampaignSettingsFault(@javax.annotation.Nonnull String campaignId, Fault fault) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/{campaignId}/settings"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withFault(fault)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));

        return stub;
    }

    public static String getCampaignSettings200ResponseSample1() {
        return "{ \"settings\" : { \"showInPremium\" : true, \"showInContext\" : true, \"localRegion\" : { \"delivery\" : { \"schedule\" : { \"customWorkingDays\" : [ \"23-09-2022\", \"23-09-2022\" ], \"period\" : { \"fromDate\" : \"23-09-2022\", \"toDate\" : \"23-09-2022\" }, \"customHolidays\" : [ \"23-09-2022\", \"23-09-2022\" ], \"weeklyHolidays\" : [ 1, 1 ], \"availableOnHolidays\" : true, \"totalHolidays\" : [ \"23-09-2022\", \"23-09-2022\" ] } }, \"name\" : \"name\", \"id\" : 6, \"type\" : \"OTHER\", \"deliveryOptionsSource\" : \"WEB\" }, \"countryRegion\" : 0, \"shopName\" : \"shopName\", \"useOpenStat\" : true } }";
    }
    public static String getCampaignSettings400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignSettings401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignSettings403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignSettings404ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignSettings420ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignSettings500ResponseSample7() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }



    public static MappingBuilder stubGetCampaigns200(@javax.annotation.Nullable String page, @javax.annotation.Nullable String pageSize, String response) {
        MappingBuilder stub = get(urlPathEqualTo("/campaigns"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(page != null) {
            stub = stub.withQueryParam("page", equalTo(page));
        }
        if(pageSize != null) {
            stub = stub.withQueryParam("pageSize", equalTo(pageSize));
        }

        return stub;
    }

    public static MappingBuilder stubGetCampaigns400(@javax.annotation.Nullable String page, @javax.annotation.Nullable String pageSize, String response) {
        MappingBuilder stub = get(urlPathEqualTo("/campaigns"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(page != null) {
            stub = stub.withQueryParam("page", equalTo(page));
        }
        if(pageSize != null) {
            stub = stub.withQueryParam("pageSize", equalTo(pageSize));
        }

        return stub;
    }

    public static MappingBuilder stubGetCampaigns401(@javax.annotation.Nullable String page, @javax.annotation.Nullable String pageSize, String response) {
        MappingBuilder stub = get(urlPathEqualTo("/campaigns"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(page != null) {
            stub = stub.withQueryParam("page", equalTo(page));
        }
        if(pageSize != null) {
            stub = stub.withQueryParam("pageSize", equalTo(pageSize));
        }

        return stub;
    }

    public static MappingBuilder stubGetCampaigns403(@javax.annotation.Nullable String page, @javax.annotation.Nullable String pageSize, String response) {
        MappingBuilder stub = get(urlPathEqualTo("/campaigns"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(page != null) {
            stub = stub.withQueryParam("page", equalTo(page));
        }
        if(pageSize != null) {
            stub = stub.withQueryParam("pageSize", equalTo(pageSize));
        }

        return stub;
    }

    public static MappingBuilder stubGetCampaigns404(@javax.annotation.Nullable String page, @javax.annotation.Nullable String pageSize, String response) {
        MappingBuilder stub = get(urlPathEqualTo("/campaigns"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(404)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(page != null) {
            stub = stub.withQueryParam("page", equalTo(page));
        }
        if(pageSize != null) {
            stub = stub.withQueryParam("pageSize", equalTo(pageSize));
        }

        return stub;
    }

    public static MappingBuilder stubGetCampaigns420(@javax.annotation.Nullable String page, @javax.annotation.Nullable String pageSize, String response) {
        MappingBuilder stub = get(urlPathEqualTo("/campaigns"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(page != null) {
            stub = stub.withQueryParam("page", equalTo(page));
        }
        if(pageSize != null) {
            stub = stub.withQueryParam("pageSize", equalTo(pageSize));
        }

        return stub;
    }

    public static MappingBuilder stubGetCampaigns500(@javax.annotation.Nullable String page, @javax.annotation.Nullable String pageSize, String response) {
        MappingBuilder stub = get(urlPathEqualTo("/campaigns"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        if(page != null) {
            stub = stub.withQueryParam("page", equalTo(page));
        }
        if(pageSize != null) {
            stub = stub.withQueryParam("pageSize", equalTo(pageSize));
        }

        return stub;
    }

    public static MappingBuilder stubGetCampaignsFault(@javax.annotation.Nullable String page, @javax.annotation.Nullable String pageSize, Fault fault) {
        MappingBuilder stub = get(urlPathEqualTo("/campaigns"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withFault(fault)
            );

        if(page != null) {
            stub = stub.withQueryParam("page", equalTo(page));
        }
        if(pageSize != null) {
            stub = stub.withQueryParam("pageSize", equalTo(pageSize));
        }

        return stub;
    }

    public static String getCampaigns200ResponseSample1() {
        return "{ \"campaigns\" : [ { \"clientId\" : 6, \"business\" : { \"name\" : \"name\", \"id\" : 0 }, \"domain\" : \"domain\", \"placementType\" : \"FBS\", \"id\" : 0 }, { \"clientId\" : 6, \"business\" : { \"name\" : \"name\", \"id\" : 0 }, \"domain\" : \"domain\", \"placementType\" : \"FBS\", \"id\" : 0 } ], \"pager\" : { \"total\" : 1, \"pagesCount\" : 7, \"pageSize\" : 9, \"from\" : 5, \"to\" : 5, \"currentPage\" : 2 } }";
    }
    public static String getCampaigns400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaigns401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaigns403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaigns404ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaigns420ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaigns500ResponseSample7() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }



    public static MappingBuilder stubGetCampaignsByLogin200(@javax.annotation.Nonnull String login, @javax.annotation.Nullable String page, @javax.annotation.Nullable String pageSize, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/by_login/{login}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("login", equalTo(login));
        if(page != null) {
            stub = stub.withQueryParam("page", equalTo(page));
        }
        if(pageSize != null) {
            stub = stub.withQueryParam("pageSize", equalTo(pageSize));
        }

        return stub;
    }

    public static MappingBuilder stubGetCampaignsByLogin400(@javax.annotation.Nonnull String login, @javax.annotation.Nullable String page, @javax.annotation.Nullable String pageSize, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/by_login/{login}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("login", equalTo(login));
        if(page != null) {
            stub = stub.withQueryParam("page", equalTo(page));
        }
        if(pageSize != null) {
            stub = stub.withQueryParam("pageSize", equalTo(pageSize));
        }

        return stub;
    }

    public static MappingBuilder stubGetCampaignsByLogin401(@javax.annotation.Nonnull String login, @javax.annotation.Nullable String page, @javax.annotation.Nullable String pageSize, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/by_login/{login}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("login", equalTo(login));
        if(page != null) {
            stub = stub.withQueryParam("page", equalTo(page));
        }
        if(pageSize != null) {
            stub = stub.withQueryParam("pageSize", equalTo(pageSize));
        }

        return stub;
    }

    public static MappingBuilder stubGetCampaignsByLogin403(@javax.annotation.Nonnull String login, @javax.annotation.Nullable String page, @javax.annotation.Nullable String pageSize, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/by_login/{login}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("login", equalTo(login));
        if(page != null) {
            stub = stub.withQueryParam("page", equalTo(page));
        }
        if(pageSize != null) {
            stub = stub.withQueryParam("pageSize", equalTo(pageSize));
        }

        return stub;
    }

    public static MappingBuilder stubGetCampaignsByLogin404(@javax.annotation.Nonnull String login, @javax.annotation.Nullable String page, @javax.annotation.Nullable String pageSize, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/by_login/{login}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(404)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("login", equalTo(login));
        if(page != null) {
            stub = stub.withQueryParam("page", equalTo(page));
        }
        if(pageSize != null) {
            stub = stub.withQueryParam("pageSize", equalTo(pageSize));
        }

        return stub;
    }

    public static MappingBuilder stubGetCampaignsByLogin420(@javax.annotation.Nonnull String login, @javax.annotation.Nullable String page, @javax.annotation.Nullable String pageSize, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/by_login/{login}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("login", equalTo(login));
        if(page != null) {
            stub = stub.withQueryParam("page", equalTo(page));
        }
        if(pageSize != null) {
            stub = stub.withQueryParam("pageSize", equalTo(pageSize));
        }

        return stub;
    }

    public static MappingBuilder stubGetCampaignsByLogin500(@javax.annotation.Nonnull String login, @javax.annotation.Nullable String page, @javax.annotation.Nullable String pageSize, String response) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/by_login/{login}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("login", equalTo(login));
        if(page != null) {
            stub = stub.withQueryParam("page", equalTo(page));
        }
        if(pageSize != null) {
            stub = stub.withQueryParam("pageSize", equalTo(pageSize));
        }

        return stub;
    }

    public static MappingBuilder stubGetCampaignsByLoginFault(@javax.annotation.Nonnull String login, @javax.annotation.Nullable String page, @javax.annotation.Nullable String pageSize, Fault fault) {
        MappingBuilder stub = get(urlPathTemplate("/campaigns/by_login/{login}"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withFault(fault)
            );

        stub = stub.withPathParam("login", equalTo(login));
        if(page != null) {
            stub = stub.withQueryParam("page", equalTo(page));
        }
        if(pageSize != null) {
            stub = stub.withQueryParam("pageSize", equalTo(pageSize));
        }

        return stub;
    }

    public static String getCampaignsByLogin200ResponseSample1() {
        return "{ \"campaigns\" : [ { \"clientId\" : 6, \"business\" : { \"name\" : \"name\", \"id\" : 0 }, \"domain\" : \"domain\", \"placementType\" : \"FBS\", \"id\" : 0 }, { \"clientId\" : 6, \"business\" : { \"name\" : \"name\", \"id\" : 0 }, \"domain\" : \"domain\", \"placementType\" : \"FBS\", \"id\" : 0 } ], \"pager\" : { \"total\" : 1, \"pagesCount\" : 7, \"pageSize\" : 9, \"from\" : 5, \"to\" : 5, \"currentPage\" : 2 } }";
    }
    public static String getCampaignsByLogin400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignsByLogin401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignsByLogin403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignsByLogin404ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignsByLogin420ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getCampaignsByLogin500ResponseSample7() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }



}
