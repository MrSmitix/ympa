/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.8.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.mockserver.api;

import static com.github.tomakehurst.wiremock.client.WireMock.*;
import com.github.tomakehurst.wiremock.client.MappingBuilder;
import com.github.tomakehurst.wiremock.http.Fault;

public class OrdersStatsApiMockServer {

    public static MappingBuilder stubGetOrdersStats200(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nullable String pageToken, @javax.annotation.Nullable String limit, @javax.annotation.Nullable String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/stats/orders"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        if(pageToken != null) {
            stub = stub.withQueryParam("pageToken", equalTo(pageToken));
        }
        if(limit != null) {
            stub = stub.withQueryParam("limit", equalTo(limit));
        }

        return stub;
    }

    public static MappingBuilder stubGetOrdersStats400(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nullable String pageToken, @javax.annotation.Nullable String limit, @javax.annotation.Nullable String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/stats/orders"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        if(pageToken != null) {
            stub = stub.withQueryParam("pageToken", equalTo(pageToken));
        }
        if(limit != null) {
            stub = stub.withQueryParam("limit", equalTo(limit));
        }

        return stub;
    }

    public static MappingBuilder stubGetOrdersStats401(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nullable String pageToken, @javax.annotation.Nullable String limit, @javax.annotation.Nullable String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/stats/orders"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        if(pageToken != null) {
            stub = stub.withQueryParam("pageToken", equalTo(pageToken));
        }
        if(limit != null) {
            stub = stub.withQueryParam("limit", equalTo(limit));
        }

        return stub;
    }

    public static MappingBuilder stubGetOrdersStats403(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nullable String pageToken, @javax.annotation.Nullable String limit, @javax.annotation.Nullable String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/stats/orders"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        if(pageToken != null) {
            stub = stub.withQueryParam("pageToken", equalTo(pageToken));
        }
        if(limit != null) {
            stub = stub.withQueryParam("limit", equalTo(limit));
        }

        return stub;
    }

    public static MappingBuilder stubGetOrdersStats404(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nullable String pageToken, @javax.annotation.Nullable String limit, @javax.annotation.Nullable String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/stats/orders"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(404)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        if(pageToken != null) {
            stub = stub.withQueryParam("pageToken", equalTo(pageToken));
        }
        if(limit != null) {
            stub = stub.withQueryParam("limit", equalTo(limit));
        }

        return stub;
    }

    public static MappingBuilder stubGetOrdersStats420(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nullable String pageToken, @javax.annotation.Nullable String limit, @javax.annotation.Nullable String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/stats/orders"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        if(pageToken != null) {
            stub = stub.withQueryParam("pageToken", equalTo(pageToken));
        }
        if(limit != null) {
            stub = stub.withQueryParam("limit", equalTo(limit));
        }

        return stub;
    }

    public static MappingBuilder stubGetOrdersStats500(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nullable String pageToken, @javax.annotation.Nullable String limit, @javax.annotation.Nullable String body, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/stats/orders"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        if(pageToken != null) {
            stub = stub.withQueryParam("pageToken", equalTo(pageToken));
        }
        if(limit != null) {
            stub = stub.withQueryParam("limit", equalTo(limit));
        }

        return stub;
    }

    public static MappingBuilder stubGetOrdersStatsFault(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nullable String pageToken, @javax.annotation.Nullable String limit, @javax.annotation.Nullable String body, Fault fault) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/stats/orders"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Content-Type", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .withRequestBody(equalToJson(body))
            .willReturn(aResponse()
                .withFault(fault)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        if(pageToken != null) {
            stub = stub.withQueryParam("pageToken", equalTo(pageToken));
        }
        if(limit != null) {
            stub = stub.withQueryParam("limit", equalTo(limit));
        }

        return stub;
    }

    public static String getOrdersStats200ResponseSample1() {
        return "{ \"result\" : { \"orders\" : [ { \"partnerOrderId\" : \"partnerOrderId\", \"commissions\" : [ { \"actual\" : 1.2315135367772556, \"type\" : \"FEE\" }, { \"actual\" : 1.2315135367772556, \"type\" : \"FEE\" } ], \"statusUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\", \"payments\" : [ { \"date\" : \"2000-01-23\", \"total\" : 7.386281948385884, \"paymentOrder\" : { \"date\" : \"2000-01-23\", \"id\" : \"id\" }, \"id\" : \"id\", \"source\" : \"BUYER\", \"type\" : \"PAYMENT\" }, { \"date\" : \"2000-01-23\", \"total\" : 7.386281948385884, \"paymentOrder\" : { \"date\" : \"2000-01-23\", \"id\" : \"id\" }, \"id\" : \"id\", \"source\" : \"BUYER\", \"type\" : \"PAYMENT\" } ], \"fake\" : true, \"deliveryRegion\" : { \"name\" : \"name\", \"id\" : 6 }, \"id\" : 0, \"creationDate\" : \"2000-01-23\", \"items\" : [ { \"cofinanceValue\" : 4.145608029883936, \"initialCount\" : 3, \"offerName\" : \"offerName\", \"shopSku\" : \"shopSku\", \"cisList\" : [ \"cisList\", \"cisList\" ], \"marketSku\" : 1, \"count\" : 5, \"bidFee\" : 570, \"cofinanceThreshold\" : 2.027123023002322, \"details\" : [ { \"updateDate\" : \"2000-01-23\", \"stockType\" : \"FIT\", \"itemStatus\" : \"REJECTED\", \"itemCount\" : 9 }, { \"updateDate\" : \"2000-01-23\", \"stockType\" : \"FIT\", \"itemStatus\" : \"REJECTED\", \"itemCount\" : 9 } ], \"prices\" : [ { \"total\" : 2.3021358869347655, \"costPerItem\" : 5.637376656633329, \"type\" : \"BUYER\" }, { \"total\" : 2.3021358869347655, \"costPerItem\" : 5.637376656633329, \"type\" : \"BUYER\" } ], \"warehouse\" : { \"name\" : \"name\", \"id\" : 7 } }, { \"cofinanceValue\" : 4.145608029883936, \"initialCount\" : 3, \"offerName\" : \"offerName\", \"shopSku\" : \"shopSku\", \"cisList\" : [ \"cisList\", \"cisList\" ], \"marketSku\" : 1, \"count\" : 5, \"bidFee\" : 570, \"cofinanceThreshold\" : 2.027123023002322, \"details\" : [ { \"updateDate\" : \"2000-01-23\", \"stockType\" : \"FIT\", \"itemStatus\" : \"REJECTED\", \"itemCount\" : 9 }, { \"updateDate\" : \"2000-01-23\", \"stockType\" : \"FIT\", \"itemStatus\" : \"REJECTED\", \"itemCount\" : 9 } ], \"prices\" : [ { \"total\" : 2.3021358869347655, \"costPerItem\" : 5.637376656633329, \"type\" : \"BUYER\" }, { \"total\" : 2.3021358869347655, \"costPerItem\" : 5.637376656633329, \"type\" : \"BUYER\" } ], \"warehouse\" : { \"name\" : \"name\", \"id\" : 7 } } ], \"initialItems\" : [ { \"cofinanceValue\" : 4.145608029883936, \"initialCount\" : 3, \"offerName\" : \"offerName\", \"shopSku\" : \"shopSku\", \"cisList\" : [ \"cisList\", \"cisList\" ], \"marketSku\" : 1, \"count\" : 5, \"bidFee\" : 570, \"cofinanceThreshold\" : 2.027123023002322, \"details\" : [ { \"updateDate\" : \"2000-01-23\", \"stockType\" : \"FIT\", \"itemStatus\" : \"REJECTED\", \"itemCount\" : 9 }, { \"updateDate\" : \"2000-01-23\", \"stockType\" : \"FIT\", \"itemStatus\" : \"REJECTED\", \"itemCount\" : 9 } ], \"prices\" : [ { \"total\" : 2.3021358869347655, \"costPerItem\" : 5.637376656633329, \"type\" : \"BUYER\" }, { \"total\" : 2.3021358869347655, \"costPerItem\" : 5.637376656633329, \"type\" : \"BUYER\" } ], \"warehouse\" : { \"name\" : \"name\", \"id\" : 7 } }, { \"cofinanceValue\" : 4.145608029883936, \"initialCount\" : 3, \"offerName\" : \"offerName\", \"shopSku\" : \"shopSku\", \"cisList\" : [ \"cisList\", \"cisList\" ], \"marketSku\" : 1, \"count\" : 5, \"bidFee\" : 570, \"cofinanceThreshold\" : 2.027123023002322, \"details\" : [ { \"updateDate\" : \"2000-01-23\", \"stockType\" : \"FIT\", \"itemStatus\" : \"REJECTED\", \"itemCount\" : 9 }, { \"updateDate\" : \"2000-01-23\", \"stockType\" : \"FIT\", \"itemStatus\" : \"REJECTED\", \"itemCount\" : 9 } ], \"prices\" : [ { \"total\" : 2.3021358869347655, \"costPerItem\" : 5.637376656633329, \"type\" : \"BUYER\" }, { \"total\" : 2.3021358869347655, \"costPerItem\" : 5.637376656633329, \"type\" : \"BUYER\" } ], \"warehouse\" : { \"name\" : \"name\", \"id\" : 7 } } ], \"status\" : \"CANCELLED_BEFORE_PROCESSING\", \"paymentType\" : \"CREDIT\" }, { \"partnerOrderId\" : \"partnerOrderId\", \"commissions\" : [ { \"actual\" : 1.2315135367772556, \"type\" : \"FEE\" }, { \"actual\" : 1.2315135367772556, \"type\" : \"FEE\" } ], \"statusUpdateDate\" : \"2000-01-23T04:56:07.000+00:00\", \"payments\" : [ { \"date\" : \"2000-01-23\", \"total\" : 7.386281948385884, \"paymentOrder\" : { \"date\" : \"2000-01-23\", \"id\" : \"id\" }, \"id\" : \"id\", \"source\" : \"BUYER\", \"type\" : \"PAYMENT\" }, { \"date\" : \"2000-01-23\", \"total\" : 7.386281948385884, \"paymentOrder\" : { \"date\" : \"2000-01-23\", \"id\" : \"id\" }, \"id\" : \"id\", \"source\" : \"BUYER\", \"type\" : \"PAYMENT\" } ], \"fake\" : true, \"deliveryRegion\" : { \"name\" : \"name\", \"id\" : 6 }, \"id\" : 0, \"creationDate\" : \"2000-01-23\", \"items\" : [ { \"cofinanceValue\" : 4.145608029883936, \"initialCount\" : 3, \"offerName\" : \"offerName\", \"shopSku\" : \"shopSku\", \"cisList\" : [ \"cisList\", \"cisList\" ], \"marketSku\" : 1, \"count\" : 5, \"bidFee\" : 570, \"cofinanceThreshold\" : 2.027123023002322, \"details\" : [ { \"updateDate\" : \"2000-01-23\", \"stockType\" : \"FIT\", \"itemStatus\" : \"REJECTED\", \"itemCount\" : 9 }, { \"updateDate\" : \"2000-01-23\", \"stockType\" : \"FIT\", \"itemStatus\" : \"REJECTED\", \"itemCount\" : 9 } ], \"prices\" : [ { \"total\" : 2.3021358869347655, \"costPerItem\" : 5.637376656633329, \"type\" : \"BUYER\" }, { \"total\" : 2.3021358869347655, \"costPerItem\" : 5.637376656633329, \"type\" : \"BUYER\" } ], \"warehouse\" : { \"name\" : \"name\", \"id\" : 7 } }, { \"cofinanceValue\" : 4.145608029883936, \"initialCount\" : 3, \"offerName\" : \"offerName\", \"shopSku\" : \"shopSku\", \"cisList\" : [ \"cisList\", \"cisList\" ], \"marketSku\" : 1, \"count\" : 5, \"bidFee\" : 570, \"cofinanceThreshold\" : 2.027123023002322, \"details\" : [ { \"updateDate\" : \"2000-01-23\", \"stockType\" : \"FIT\", \"itemStatus\" : \"REJECTED\", \"itemCount\" : 9 }, { \"updateDate\" : \"2000-01-23\", \"stockType\" : \"FIT\", \"itemStatus\" : \"REJECTED\", \"itemCount\" : 9 } ], \"prices\" : [ { \"total\" : 2.3021358869347655, \"costPerItem\" : 5.637376656633329, \"type\" : \"BUYER\" }, { \"total\" : 2.3021358869347655, \"costPerItem\" : 5.637376656633329, \"type\" : \"BUYER\" } ], \"warehouse\" : { \"name\" : \"name\", \"id\" : 7 } } ], \"initialItems\" : [ { \"cofinanceValue\" : 4.145608029883936, \"initialCount\" : 3, \"offerName\" : \"offerName\", \"shopSku\" : \"shopSku\", \"cisList\" : [ \"cisList\", \"cisList\" ], \"marketSku\" : 1, \"count\" : 5, \"bidFee\" : 570, \"cofinanceThreshold\" : 2.027123023002322, \"details\" : [ { \"updateDate\" : \"2000-01-23\", \"stockType\" : \"FIT\", \"itemStatus\" : \"REJECTED\", \"itemCount\" : 9 }, { \"updateDate\" : \"2000-01-23\", \"stockType\" : \"FIT\", \"itemStatus\" : \"REJECTED\", \"itemCount\" : 9 } ], \"prices\" : [ { \"total\" : 2.3021358869347655, \"costPerItem\" : 5.637376656633329, \"type\" : \"BUYER\" }, { \"total\" : 2.3021358869347655, \"costPerItem\" : 5.637376656633329, \"type\" : \"BUYER\" } ], \"warehouse\" : { \"name\" : \"name\", \"id\" : 7 } }, { \"cofinanceValue\" : 4.145608029883936, \"initialCount\" : 3, \"offerName\" : \"offerName\", \"shopSku\" : \"shopSku\", \"cisList\" : [ \"cisList\", \"cisList\" ], \"marketSku\" : 1, \"count\" : 5, \"bidFee\" : 570, \"cofinanceThreshold\" : 2.027123023002322, \"details\" : [ { \"updateDate\" : \"2000-01-23\", \"stockType\" : \"FIT\", \"itemStatus\" : \"REJECTED\", \"itemCount\" : 9 }, { \"updateDate\" : \"2000-01-23\", \"stockType\" : \"FIT\", \"itemStatus\" : \"REJECTED\", \"itemCount\" : 9 } ], \"prices\" : [ { \"total\" : 2.3021358869347655, \"costPerItem\" : 5.637376656633329, \"type\" : \"BUYER\" }, { \"total\" : 2.3021358869347655, \"costPerItem\" : 5.637376656633329, \"type\" : \"BUYER\" } ], \"warehouse\" : { \"name\" : \"name\", \"id\" : 7 } } ], \"status\" : \"CANCELLED_BEFORE_PROCESSING\", \"paymentType\" : \"CREDIT\" } ], \"paging\" : { \"nextPageToken\" : \"nextPageToken\" } }, \"status\" : \"OK\" }";
    }
    public static String getOrdersStats400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOrdersStats401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOrdersStats403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOrdersStats404ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOrdersStats420ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOrdersStats500ResponseSample7() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }

    public static String getOrdersStatsRequestSample1() {
        return "{ \"updateTo\" : \"2000-01-23\", \"updateFrom\" : \"2000-01-23\", \"hasCis\" : true, \"dateTo\" : \"2000-01-23\", \"statuses\" : [ \"CANCELLED_BEFORE_PROCESSING\", \"CANCELLED_BEFORE_PROCESSING\" ], \"orders\" : [ 0, 0 ], \"dateFrom\" : \"2000-01-23\" }";
    }


}
