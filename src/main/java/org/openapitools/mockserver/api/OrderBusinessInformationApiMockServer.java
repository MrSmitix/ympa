/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.8.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.mockserver.api;

import static com.github.tomakehurst.wiremock.client.WireMock.*;
import com.github.tomakehurst.wiremock.client.MappingBuilder;
import com.github.tomakehurst.wiremock.http.Fault;

public class OrderBusinessInformationApiMockServer {

    public static MappingBuilder stubGetOrderBusinessBuyerInfo200(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nonnull String orderId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/orders/{orderId}/business-buyer"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        stub = stub.withPathParam("orderId", equalTo(orderId));

        return stub;
    }

    public static MappingBuilder stubGetOrderBusinessBuyerInfo400(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nonnull String orderId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/orders/{orderId}/business-buyer"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        stub = stub.withPathParam("orderId", equalTo(orderId));

        return stub;
    }

    public static MappingBuilder stubGetOrderBusinessBuyerInfo401(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nonnull String orderId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/orders/{orderId}/business-buyer"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        stub = stub.withPathParam("orderId", equalTo(orderId));

        return stub;
    }

    public static MappingBuilder stubGetOrderBusinessBuyerInfo403(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nonnull String orderId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/orders/{orderId}/business-buyer"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        stub = stub.withPathParam("orderId", equalTo(orderId));

        return stub;
    }

    public static MappingBuilder stubGetOrderBusinessBuyerInfo404(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nonnull String orderId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/orders/{orderId}/business-buyer"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(404)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        stub = stub.withPathParam("orderId", equalTo(orderId));

        return stub;
    }

    public static MappingBuilder stubGetOrderBusinessBuyerInfo420(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nonnull String orderId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/orders/{orderId}/business-buyer"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        stub = stub.withPathParam("orderId", equalTo(orderId));

        return stub;
    }

    public static MappingBuilder stubGetOrderBusinessBuyerInfo500(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nonnull String orderId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/orders/{orderId}/business-buyer"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        stub = stub.withPathParam("orderId", equalTo(orderId));

        return stub;
    }

    public static MappingBuilder stubGetOrderBusinessBuyerInfoFault(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nonnull String orderId, Fault fault) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/orders/{orderId}/business-buyer"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withFault(fault)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        stub = stub.withPathParam("orderId", equalTo(orderId));

        return stub;
    }

    public static String getOrderBusinessBuyerInfo200ResponseSample1() {
        return "{ \"result\" : { \"organizationName\" : \"organizationName\", \"organizationJurAddress\" : \"organizationJurAddress\", \"inn\" : \"inn\", \"kpp\" : \"kpp\" }, \"status\" : \"OK\" }";
    }
    public static String getOrderBusinessBuyerInfo400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOrderBusinessBuyerInfo401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOrderBusinessBuyerInfo403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOrderBusinessBuyerInfo404ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOrderBusinessBuyerInfo420ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOrderBusinessBuyerInfo500ResponseSample7() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }



    public static MappingBuilder stubGetOrderBusinessDocumentsInfo200(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nonnull String orderId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/orders/{orderId}/documents"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(200)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        stub = stub.withPathParam("orderId", equalTo(orderId));

        return stub;
    }

    public static MappingBuilder stubGetOrderBusinessDocumentsInfo400(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nonnull String orderId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/orders/{orderId}/documents"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(400)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        stub = stub.withPathParam("orderId", equalTo(orderId));

        return stub;
    }

    public static MappingBuilder stubGetOrderBusinessDocumentsInfo401(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nonnull String orderId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/orders/{orderId}/documents"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(401)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        stub = stub.withPathParam("orderId", equalTo(orderId));

        return stub;
    }

    public static MappingBuilder stubGetOrderBusinessDocumentsInfo403(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nonnull String orderId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/orders/{orderId}/documents"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(403)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        stub = stub.withPathParam("orderId", equalTo(orderId));

        return stub;
    }

    public static MappingBuilder stubGetOrderBusinessDocumentsInfo404(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nonnull String orderId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/orders/{orderId}/documents"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(404)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        stub = stub.withPathParam("orderId", equalTo(orderId));

        return stub;
    }

    public static MappingBuilder stubGetOrderBusinessDocumentsInfo420(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nonnull String orderId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/orders/{orderId}/documents"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(420)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        stub = stub.withPathParam("orderId", equalTo(orderId));

        return stub;
    }

    public static MappingBuilder stubGetOrderBusinessDocumentsInfo500(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nonnull String orderId, String response) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/orders/{orderId}/documents"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withStatus(500)
                .withHeader("Content-Type", "application/json")
                .withBody(response)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        stub = stub.withPathParam("orderId", equalTo(orderId));

        return stub;
    }

    public static MappingBuilder stubGetOrderBusinessDocumentsInfoFault(@javax.annotation.Nonnull String campaignId, @javax.annotation.Nonnull String orderId, Fault fault) {
        MappingBuilder stub = post(urlPathTemplate("/campaigns/{campaignId}/orders/{orderId}/documents"))
            .withHeader("Accept", havingExactly("application/json"))
            .withHeader("Authorization", matching(".*"))
            .willReturn(aResponse()
                .withFault(fault)
            );

        stub = stub.withPathParam("campaignId", equalTo(campaignId));
        stub = stub.withPathParam("orderId", equalTo(orderId));

        return stub;
    }

    public static String getOrderBusinessDocumentsInfo200ResponseSample1() {
        return "{ \"result\" : { \"sf\" : { \"date\" : \"2000-01-23\", \"number\" : \"number\", \"status\" : \"READY\" }, \"torgTwelve\" : { \"date\" : \"2000-01-23\", \"number\" : \"number\", \"status\" : \"READY\" }, \"upd\" : { \"date\" : \"2000-01-23\", \"number\" : \"number\", \"status\" : \"READY\" }, \"ukd\" : { \"date\" : \"2000-01-23\", \"number\" : \"number\", \"status\" : \"READY\" }, \"ksf\" : { \"date\" : \"2000-01-23\", \"number\" : \"number\", \"status\" : \"READY\" } }, \"status\" : \"OK\" }";
    }
    public static String getOrderBusinessDocumentsInfo400ResponseSample2() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOrderBusinessDocumentsInfo401ResponseSample3() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOrderBusinessDocumentsInfo403ResponseSample4() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOrderBusinessDocumentsInfo404ResponseSample5() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOrderBusinessDocumentsInfo420ResponseSample6() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }
    public static String getOrderBusinessDocumentsInfo500ResponseSample7() {
        return "{ \"errors\" : [ { \"code\" : \"code\", \"message\" : \"message\" }, { \"code\" : \"code\", \"message\" : \"message\" } ], \"status\" : \"OK\" }";
    }



}
