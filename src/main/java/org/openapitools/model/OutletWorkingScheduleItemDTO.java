/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.DayOfWeekType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Расписание работы точки продаж.
 */
@Schema(name = "OutletWorkingScheduleItemDTO", description = "Расписание работы точки продаж.")
@JsonPropertyOrder({
  OutletWorkingScheduleItemDTO.JSON_PROPERTY_START_DAY,
  OutletWorkingScheduleItemDTO.JSON_PROPERTY_END_DAY,
  OutletWorkingScheduleItemDTO.JSON_PROPERTY_START_TIME,
  OutletWorkingScheduleItemDTO.JSON_PROPERTY_END_TIME
})
@JsonTypeName("OutletWorkingScheduleItemDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class OutletWorkingScheduleItemDTO {
    public static final String JSON_PROPERTY_START_DAY = "startDay";
    private DayOfWeekType startDay;

    public static final String JSON_PROPERTY_END_DAY = "endDay";
    private DayOfWeekType endDay;

    public static final String JSON_PROPERTY_START_TIME = "startTime";
    private String startTime;

    public static final String JSON_PROPERTY_END_TIME = "endTime";
    private String endTime;

    public OutletWorkingScheduleItemDTO(DayOfWeekType startDay, DayOfWeekType endDay, String startTime, String endTime) {
        this.startDay = startDay;
        this.endDay = endDay;
        this.startTime = startTime;
        this.endTime = endTime;
    }

    public OutletWorkingScheduleItemDTO startDay(DayOfWeekType startDay) {
        this.startDay = startDay;
        return this;
    }

    /**
     * Get startDay
     * @return startDay
     */
    @NotNull
    @Schema(name = "startDay", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_START_DAY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public DayOfWeekType getStartDay() {
        return startDay;
    }

    @JsonProperty(JSON_PROPERTY_START_DAY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStartDay(DayOfWeekType startDay) {
        this.startDay = startDay;
    }

    public OutletWorkingScheduleItemDTO endDay(DayOfWeekType endDay) {
        this.endDay = endDay;
        return this;
    }

    /**
     * Get endDay
     * @return endDay
     */
    @NotNull
    @Schema(name = "endDay", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_END_DAY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public DayOfWeekType getEndDay() {
        return endDay;
    }

    @JsonProperty(JSON_PROPERTY_END_DAY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEndDay(DayOfWeekType endDay) {
        this.endDay = endDay;
    }

    public OutletWorkingScheduleItemDTO startTime(String startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Точка продаж работает c указанного часа.  Формат: &#x60;ЧЧ:ММ&#x60;. 
     * @return startTime
     */
    @NotNull
    @Size(min=1)
    @Schema(name = "startTime", description = "Точка продаж работает c указанного часа.  Формат: `ЧЧ:ММ`. ", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_START_TIME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getStartTime() {
        return startTime;
    }

    @JsonProperty(JSON_PROPERTY_START_TIME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStartTime(String startTime) {
        this.startTime = startTime;
    }

    public OutletWorkingScheduleItemDTO endTime(String endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * Точка продаж работает до указанного часа.  Формат: &#x60;ЧЧ:ММ&#x60;. 
     * @return endTime
     */
    @NotNull
    @Size(min=1)
    @Schema(name = "endTime", description = "Точка продаж работает до указанного часа.  Формат: `ЧЧ:ММ`. ", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_END_TIME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getEndTime() {
        return endTime;
    }

    @JsonProperty(JSON_PROPERTY_END_TIME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEndTime(String endTime) {
        this.endTime = endTime;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OutletWorkingScheduleItemDTO outletWorkingScheduleItemDTO = (OutletWorkingScheduleItemDTO) o;
        return Objects.equals(this.startDay, outletWorkingScheduleItemDTO.startDay) &&
            Objects.equals(this.endDay, outletWorkingScheduleItemDTO.endDay) &&
            Objects.equals(this.startTime, outletWorkingScheduleItemDTO.startTime) &&
            Objects.equals(this.endTime, outletWorkingScheduleItemDTO.endTime);
    }

    @Override
    public int hashCode() {
        return Objects.hash(startDay, endDay, startTime, endTime);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OutletWorkingScheduleItemDTO {\n");
        sb.append("    startDay: ").append(toIndentedString(startDay)).append("\n");
        sb.append("    endDay: ").append(toIndentedString(endDay)).append("\n");
        sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
        sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

