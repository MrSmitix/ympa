/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.OrderStatusType;
import org.openapitools.model.OrderSubstatusType;
import org.openapitools.model.OrderUpdateStatusType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Список заказов.
 */
@Schema(name = "UpdateOrderStatusDTO", description = "Список заказов.")
@JsonPropertyOrder({
  UpdateOrderStatusDTO.JSON_PROPERTY_ID,
  UpdateOrderStatusDTO.JSON_PROPERTY_STATUS,
  UpdateOrderStatusDTO.JSON_PROPERTY_SUBSTATUS,
  UpdateOrderStatusDTO.JSON_PROPERTY_UPDATE_STATUS,
  UpdateOrderStatusDTO.JSON_PROPERTY_ERROR_DETAILS
})
@JsonTypeName("UpdateOrderStatusDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class UpdateOrderStatusDTO {
    public static final String JSON_PROPERTY_ID = "id";
    private Long id;

    public static final String JSON_PROPERTY_STATUS = "status";
    private OrderStatusType status;

    public static final String JSON_PROPERTY_SUBSTATUS = "substatus";
    private OrderSubstatusType substatus;

    public static final String JSON_PROPERTY_UPDATE_STATUS = "updateStatus";
    private OrderUpdateStatusType updateStatus;

    public static final String JSON_PROPERTY_ERROR_DETAILS = "errorDetails";
    private String errorDetails;

    public UpdateOrderStatusDTO() {
    }

    public UpdateOrderStatusDTO id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Идентификатор заказа.
     * @return id
     */
    @Nullable
    @Schema(name = "id", description = "Идентификатор заказа.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(Long id) {
        this.id = id;
    }

    public UpdateOrderStatusDTO status(OrderStatusType status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     * @return status
     */
    @Nullable
    @Schema(name = "status", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OrderStatusType getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStatus(OrderStatusType status) {
        this.status = status;
    }

    public UpdateOrderStatusDTO substatus(OrderSubstatusType substatus) {
        this.substatus = substatus;
        return this;
    }

    /**
     * Get substatus
     * @return substatus
     */
    @Nullable
    @Schema(name = "substatus", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_SUBSTATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OrderSubstatusType getSubstatus() {
        return substatus;
    }

    @JsonProperty(JSON_PROPERTY_SUBSTATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubstatus(OrderSubstatusType substatus) {
        this.substatus = substatus;
    }

    public UpdateOrderStatusDTO updateStatus(OrderUpdateStatusType updateStatus) {
        this.updateStatus = updateStatus;
        return this;
    }

    /**
     * Get updateStatus
     * @return updateStatus
     */
    @Nullable
    @Schema(name = "updateStatus", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_UPDATE_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OrderUpdateStatusType getUpdateStatus() {
        return updateStatus;
    }

    @JsonProperty(JSON_PROPERTY_UPDATE_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUpdateStatus(OrderUpdateStatusType updateStatus) {
        this.updateStatus = updateStatus;
    }

    public UpdateOrderStatusDTO errorDetails(String errorDetails) {
        this.errorDetails = errorDetails;
        return this;
    }

    /**
     * Ошибка при изменении статуса заказа. Содержит описание ошибки и идентификатор заказа.  Возвращается, если параметр &#x60;updateStatus&#x60; принимает значение &#x60;ERROR&#x60;. 
     * @return errorDetails
     */
    @Nullable
    @Schema(name = "errorDetails", description = "Ошибка при изменении статуса заказа. Содержит описание ошибки и идентификатор заказа.  Возвращается, если параметр `updateStatus` принимает значение `ERROR`. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ERROR_DETAILS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getErrorDetails() {
        return errorDetails;
    }

    @JsonProperty(JSON_PROPERTY_ERROR_DETAILS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setErrorDetails(String errorDetails) {
        this.errorDetails = errorDetails;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateOrderStatusDTO updateOrderStatusDTO = (UpdateOrderStatusDTO) o;
        return Objects.equals(this.id, updateOrderStatusDTO.id) &&
            Objects.equals(this.status, updateOrderStatusDTO.status) &&
            Objects.equals(this.substatus, updateOrderStatusDTO.substatus) &&
            Objects.equals(this.updateStatus, updateOrderStatusDTO.updateStatus) &&
            Objects.equals(this.errorDetails, updateOrderStatusDTO.errorDetails);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, status, substatus, updateStatus, errorDetails);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UpdateOrderStatusDTO {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    substatus: ").append(toIndentedString(substatus)).append("\n");
        sb.append("    updateStatus: ").append(toIndentedString(updateStatus)).append("\n");
        sb.append("    errorDetails: ").append(toIndentedString(errorDetails)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

