/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Информация об условиях доставки для данной точки продаж.
 */
@JsonPropertyOrder({
  OutletDeliveryRuleDTO.JSON_PROPERTY_MIN_DELIVERY_DAYS,
  OutletDeliveryRuleDTO.JSON_PROPERTY_MAX_DELIVERY_DAYS,
  OutletDeliveryRuleDTO.JSON_PROPERTY_DELIVERY_SERVICE_ID,
  OutletDeliveryRuleDTO.JSON_PROPERTY_ORDER_BEFORE,
  OutletDeliveryRuleDTO.JSON_PROPERTY_PRICE_FREE_PICKUP,
  OutletDeliveryRuleDTO.JSON_PROPERTY_UNSPECIFIED_DELIVERY_INTERVAL
})
@JsonTypeName("OutletDeliveryRuleDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class OutletDeliveryRuleDTO {
    public static final String JSON_PROPERTY_MIN_DELIVERY_DAYS = "minDeliveryDays";
    private Integer minDeliveryDays;

    public static final String JSON_PROPERTY_MAX_DELIVERY_DAYS = "maxDeliveryDays";
    private Integer maxDeliveryDays;

    public static final String JSON_PROPERTY_DELIVERY_SERVICE_ID = "deliveryServiceId";
    private Long deliveryServiceId;

    public static final String JSON_PROPERTY_ORDER_BEFORE = "orderBefore";
    private Integer orderBefore;

    public static final String JSON_PROPERTY_PRICE_FREE_PICKUP = "priceFreePickup";
    private BigDecimal priceFreePickup;

    public static final String JSON_PROPERTY_UNSPECIFIED_DELIVERY_INTERVAL = "unspecifiedDeliveryInterval";
    private Boolean unspecifiedDeliveryInterval;

    public OutletDeliveryRuleDTO() {
    }

    public OutletDeliveryRuleDTO minDeliveryDays(Integer minDeliveryDays) {
        this.minDeliveryDays = minDeliveryDays;
        return this;
    }

    /**
     * Минимальный срок доставки товаров в точку продаж. Указан в рабочих днях.  Минимальное значение: &#x60;0&#x60; — доставка в день заказа.  Максимальное значение: &#x60;60&#x60;.  Допустимые сроки доставки (разница между &#x60;minDeliveryDays&#x60; и &#x60;maxDeliveryDays&#x60;) зависят от региона.  Для доставки по своему региону разница не должна превышать двух дней. Например, если &#x60;minDeliveryDays&#x60; равно 1, то для &#x60;maxDeliveryDays&#x60; допускаются значения от 1 до 3.  Для доставки в другие регионы:  * Если &#x60;minDeliveryDays&#x60; до 18 дней, разница не должна превышать четырех дней. Например, если &#x60;minDeliveryDays&#x60; равно 10, то для &#x60;maxDeliveryDays&#x60; допускаются значения от 10 до 14. * Если &#x60;minDeliveryDays&#x60; больше 18 дней, разница должна быть не больше чем в два раза. Например, если &#x60;minDeliveryDays&#x60; равно 21, то для &#x60;maxDeliveryDays&#x60; допускаются значения от 21 до 42.  Обязательный параметр, если &#x60;type&#x3D;\&quot;DEPOT\&quot;&#x60; или &#x60;type&#x3D;\&quot;MIXED\&quot;&#x60;.  Взаимоисключающий с параметром &#x60;unspecifiedDeliveryInterval&#x60;. 
     * @return minDeliveryDays
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_MIN_DELIVERY_DAYS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getMinDeliveryDays() {
        return minDeliveryDays;
    }

    @JsonProperty(JSON_PROPERTY_MIN_DELIVERY_DAYS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMinDeliveryDays(Integer minDeliveryDays) {
        this.minDeliveryDays = minDeliveryDays;
    }

    public OutletDeliveryRuleDTO maxDeliveryDays(Integer maxDeliveryDays) {
        this.maxDeliveryDays = maxDeliveryDays;
        return this;
    }

    /**
     * Максимальный срок доставки товаров в точку продаж. Указан в рабочих днях.  Минимальное значение: &#x60;0&#x60; — доставка в день заказа.  Максимальное значение: &#x60;60&#x60;.  Допустимые сроки доставки (разница между &#x60;minDeliveryDays&#x60; и &#x60;maxDeliveryDays&#x60;) зависят от региона.  Для доставки по своему региону разница не должна превышать двух дней. Например, если &#x60;minDeliveryDays&#x60; равно 1, то для &#x60;maxDeliveryDays&#x60; допускаются значения от 1 до 3.  Для доставки в другие регионы:  * Если &#x60;minDeliveryDays&#x60; до 18 дней, разница не должна превышать четырех дней. Например, если &#x60;minDeliveryDays&#x60; равно 10, то для &#x60;maxDeliveryDays&#x60; допускаются значения от 10 до 14. * Если &#x60;minDeliveryDays&#x60; больше 18 дней, разница должна быть не больше чем в два раза. Например, если &#x60;minDeliveryDays&#x60; равно 21, то для &#x60;maxDeliveryDays&#x60; допускаются значения от 21 до 42.  Обязательный параметр, если &#x60;type&#x3D;\&quot;DEPOT\&quot;&#x60; или &#x60;type&#x3D;\&quot;MIXED\&quot;&#x60;.  Взаимоисключающий с параметром &#x60;unspecifiedDeliveryInterval&#x60;. 
     * @return maxDeliveryDays
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_MAX_DELIVERY_DAYS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getMaxDeliveryDays() {
        return maxDeliveryDays;
    }

    @JsonProperty(JSON_PROPERTY_MAX_DELIVERY_DAYS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaxDeliveryDays(Integer maxDeliveryDays) {
        this.maxDeliveryDays = maxDeliveryDays;
    }

    public OutletDeliveryRuleDTO deliveryServiceId(Long deliveryServiceId) {
        this.deliveryServiceId = deliveryServiceId;
        return this;
    }

    /**
     * Идентификатор службы доставки товаров в точку продаж.  Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md). 
     * @return deliveryServiceId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DELIVERY_SERVICE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getDeliveryServiceId() {
        return deliveryServiceId;
    }

    @JsonProperty(JSON_PROPERTY_DELIVERY_SERVICE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDeliveryServiceId(Long deliveryServiceId) {
        this.deliveryServiceId = deliveryServiceId;
    }

    public OutletDeliveryRuleDTO orderBefore(Integer orderBefore) {
        this.orderBefore = orderBefore;
        return this;
    }

    /**
     * Час, до которого покупателю нужно сделать заказ, чтобы он был доставлен в точку продаж в сроки от &#x60;minDeliveryDays&#x60; до &#x60;maxDeliveryDays&#x60;.  Если покупатель оформит заказ после указанного часа, он будет доставлен в сроки от &#x60;minDeliveryDays&#x60; + 1 рабочий день до &#x60;maxDeliveryDays&#x60; + 1 рабочий день.  Значение по умолчанию: &#x60;24&#x60;. 
     * minimum: 0
     * maximum: 24
     * @return orderBefore
     */
    @Nullable
    @Min(0)
    @Max(24)
    @JsonProperty(JSON_PROPERTY_ORDER_BEFORE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getOrderBefore() {
        return orderBefore;
    }

    @JsonProperty(JSON_PROPERTY_ORDER_BEFORE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOrderBefore(Integer orderBefore) {
        this.orderBefore = orderBefore;
    }

    public OutletDeliveryRuleDTO priceFreePickup(BigDecimal priceFreePickup) {
        this.priceFreePickup = priceFreePickup;
        return this;
    }

    /**
     * Цена на товар, начиная с которой действует бесплатный самовывоз товара из точки продаж.
     * @return priceFreePickup
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_PRICE_FREE_PICKUP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getPriceFreePickup() {
        return priceFreePickup;
    }

    @JsonProperty(JSON_PROPERTY_PRICE_FREE_PICKUP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPriceFreePickup(BigDecimal priceFreePickup) {
        this.priceFreePickup = priceFreePickup;
    }

    public OutletDeliveryRuleDTO unspecifiedDeliveryInterval(Boolean unspecifiedDeliveryInterval) {
        this.unspecifiedDeliveryInterval = unspecifiedDeliveryInterval;
        return this;
    }

    /**
     * Признак доставки товаров в точку продаж на заказ.  Признак выставлен, если:  * точный срок доставки в точку продаж заранее неизвестен (например, если магазин собирает несколько заказов для отправки в точку или населенный пункт); * все товары изготавливаются или поставляются на заказ.  Возможные значения: * &#x60;true&#x60; — товары доставляются в точку продаж на заказ.  Параметр указывается только со значением &#x60;true&#x60;.  Взаимоисключающий с параметрами &#x60;minDeliveryDays&#x60; и &#x60;maxDeliveryDays&#x60;. 
     * @return unspecifiedDeliveryInterval
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_UNSPECIFIED_DELIVERY_INTERVAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getUnspecifiedDeliveryInterval() {
        return unspecifiedDeliveryInterval;
    }

    @JsonProperty(JSON_PROPERTY_UNSPECIFIED_DELIVERY_INTERVAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUnspecifiedDeliveryInterval(Boolean unspecifiedDeliveryInterval) {
        this.unspecifiedDeliveryInterval = unspecifiedDeliveryInterval;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OutletDeliveryRuleDTO outletDeliveryRuleDTO = (OutletDeliveryRuleDTO) o;
        return Objects.equals(this.minDeliveryDays, outletDeliveryRuleDTO.minDeliveryDays) &&
            Objects.equals(this.maxDeliveryDays, outletDeliveryRuleDTO.maxDeliveryDays) &&
            Objects.equals(this.deliveryServiceId, outletDeliveryRuleDTO.deliveryServiceId) &&
            Objects.equals(this.orderBefore, outletDeliveryRuleDTO.orderBefore) &&
            Objects.equals(this.priceFreePickup, outletDeliveryRuleDTO.priceFreePickup) &&
            Objects.equals(this.unspecifiedDeliveryInterval, outletDeliveryRuleDTO.unspecifiedDeliveryInterval);
    }

    @Override
    public int hashCode() {
        return Objects.hash(minDeliveryDays, maxDeliveryDays, deliveryServiceId, orderBefore, priceFreePickup, unspecifiedDeliveryInterval);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OutletDeliveryRuleDTO {\n");
        sb.append("    minDeliveryDays: ").append(toIndentedString(minDeliveryDays)).append("\n");
        sb.append("    maxDeliveryDays: ").append(toIndentedString(maxDeliveryDays)).append("\n");
        sb.append("    deliveryServiceId: ").append(toIndentedString(deliveryServiceId)).append("\n");
        sb.append("    orderBefore: ").append(toIndentedString(orderBefore)).append("\n");
        sb.append("    priceFreePickup: ").append(toIndentedString(priceFreePickup)).append("\n");
        sb.append("    unspecifiedDeliveryInterval: ").append(toIndentedString(unspecifiedDeliveryInterval)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

