/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.FeedbackDeliveryType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Информация о заказе, указанная в отзыве.
 */
@JsonPropertyOrder({
  FeedbackOrderDTO.JSON_PROPERTY_SHOP_ORDER_ID,
  FeedbackOrderDTO.JSON_PROPERTY_DELIVERY
})
@JsonTypeName("FeedbackOrderDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class FeedbackOrderDTO {
    public static final String JSON_PROPERTY_SHOP_ORDER_ID = "shopOrderId";
    private String shopOrderId;

    public static final String JSON_PROPERTY_DELIVERY = "delivery";
    private FeedbackDeliveryType delivery;

    public FeedbackOrderDTO() {
    }

    public FeedbackOrderDTO shopOrderId(String shopOrderId) {
        this.shopOrderId = shopOrderId;
        return this;
    }

    /**
     * Номер заказа, указанный в отзыве.
     * @return shopOrderId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SHOP_ORDER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getShopOrderId() {
        return shopOrderId;
    }

    @JsonProperty(JSON_PROPERTY_SHOP_ORDER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setShopOrderId(String shopOrderId) {
        this.shopOrderId = shopOrderId;
    }

    public FeedbackOrderDTO delivery(FeedbackDeliveryType delivery) {
        this.delivery = delivery;
        return this;
    }

    /**
     * Get delivery
     * @return delivery
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DELIVERY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public FeedbackDeliveryType getDelivery() {
        return delivery;
    }

    @JsonProperty(JSON_PROPERTY_DELIVERY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDelivery(FeedbackDeliveryType delivery) {
        this.delivery = delivery;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FeedbackOrderDTO feedbackOrderDTO = (FeedbackOrderDTO) o;
        return Objects.equals(this.shopOrderId, feedbackOrderDTO.shopOrderId) &&
            Objects.equals(this.delivery, feedbackOrderDTO.delivery);
    }

    @Override
    public int hashCode() {
        return Objects.hash(shopOrderId, delivery);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class FeedbackOrderDTO {\n");
        sb.append("    shopOrderId: ").append(toIndentedString(shopOrderId)).append("\n");
        sb.append("    delivery: ").append(toIndentedString(delivery)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

