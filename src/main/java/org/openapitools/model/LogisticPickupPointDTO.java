/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.LogisticPointType;
import org.openapitools.model.PickupAddressDTO;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Описание пункта вывоза для возврата.
 */
@JsonPropertyOrder({
  LogisticPickupPointDTO.JSON_PROPERTY_ID,
  LogisticPickupPointDTO.JSON_PROPERTY_NAME,
  LogisticPickupPointDTO.JSON_PROPERTY_ADDRESS,
  LogisticPickupPointDTO.JSON_PROPERTY_INSTRUCTION,
  LogisticPickupPointDTO.JSON_PROPERTY_TYPE,
  LogisticPickupPointDTO.JSON_PROPERTY_LOGISTIC_PARTNER_ID
})
@JsonTypeName("LogisticPickupPointDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class LogisticPickupPointDTO {
    public static final String JSON_PROPERTY_ID = "id";
    private Long id;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_ADDRESS = "address";
    private PickupAddressDTO address;

    public static final String JSON_PROPERTY_INSTRUCTION = "instruction";
    private String instruction;

    public static final String JSON_PROPERTY_TYPE = "type";
    private LogisticPointType type;

    public static final String JSON_PROPERTY_LOGISTIC_PARTNER_ID = "logisticPartnerId";
    private Long logisticPartnerId;

    public LogisticPickupPointDTO() {
    }

    public LogisticPickupPointDTO id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Идентификатор пункта вывоза.
     * @return id
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(Long id) {
        this.id = id;
    }

    public LogisticPickupPointDTO name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Название пункта вывоза.
     * @return name
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(String name) {
        this.name = name;
    }

    public LogisticPickupPointDTO address(PickupAddressDTO address) {
        this.address = address;
        return this;
    }

    /**
     * Get address
     * @return address
     */
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public PickupAddressDTO getAddress() {
        return address;
    }

    @JsonProperty(JSON_PROPERTY_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAddress(PickupAddressDTO address) {
        this.address = address;
    }

    public LogisticPickupPointDTO instruction(String instruction) {
        this.instruction = instruction;
        return this;
    }

    /**
     * Дополнительные инструкции к вывозу.
     * @return instruction
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_INSTRUCTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getInstruction() {
        return instruction;
    }

    @JsonProperty(JSON_PROPERTY_INSTRUCTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInstruction(String instruction) {
        this.instruction = instruction;
    }

    public LogisticPickupPointDTO type(LogisticPointType type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     * @return type
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public LogisticPointType getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setType(LogisticPointType type) {
        this.type = type;
    }

    public LogisticPickupPointDTO logisticPartnerId(Long logisticPartnerId) {
        this.logisticPartnerId = logisticPartnerId;
        return this;
    }

    /**
     * Идентификатор логистического партнера, к которому относится логистическая точка.
     * @return logisticPartnerId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_LOGISTIC_PARTNER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getLogisticPartnerId() {
        return logisticPartnerId;
    }

    @JsonProperty(JSON_PROPERTY_LOGISTIC_PARTNER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLogisticPartnerId(Long logisticPartnerId) {
        this.logisticPartnerId = logisticPartnerId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LogisticPickupPointDTO logisticPickupPointDTO = (LogisticPickupPointDTO) o;
        return Objects.equals(this.id, logisticPickupPointDTO.id) &&
            Objects.equals(this.name, logisticPickupPointDTO.name) &&
            Objects.equals(this.address, logisticPickupPointDTO.address) &&
            Objects.equals(this.instruction, logisticPickupPointDTO.instruction) &&
            Objects.equals(this.type, logisticPickupPointDTO.type) &&
            Objects.equals(this.logisticPartnerId, logisticPickupPointDTO.logisticPartnerId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, address, instruction, type, logisticPartnerId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class LogisticPickupPointDTO {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    address: ").append(toIndentedString(address)).append("\n");
        sb.append("    instruction: ").append(toIndentedString(instruction)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    logisticPartnerId: ").append(toIndentedString(logisticPartnerId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

