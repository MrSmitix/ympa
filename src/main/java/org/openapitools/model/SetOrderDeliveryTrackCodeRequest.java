/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * SetOrderDeliveryTrackCodeRequest
 */
@JsonPropertyOrder({
  SetOrderDeliveryTrackCodeRequest.JSON_PROPERTY_TRACK_CODE,
  SetOrderDeliveryTrackCodeRequest.JSON_PROPERTY_DELIVERY_SERVICE_ID
})
@JsonTypeName("SetOrderDeliveryTrackCodeRequest")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class SetOrderDeliveryTrackCodeRequest {
    public static final String JSON_PROPERTY_TRACK_CODE = "trackCode";
    private String trackCode;

    public static final String JSON_PROPERTY_DELIVERY_SERVICE_ID = "deliveryServiceId";
    private Long deliveryServiceId;

    public SetOrderDeliveryTrackCodeRequest(String trackCode, Long deliveryServiceId) {
        this.trackCode = trackCode;
        this.deliveryServiceId = deliveryServiceId;
    }

    public SetOrderDeliveryTrackCodeRequest trackCode(String trackCode) {
        this.trackCode = trackCode;
        return this;
    }

    /**
     * Трек‑номер посылки.
     * @return trackCode
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_TRACK_CODE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getTrackCode() {
        return trackCode;
    }

    @JsonProperty(JSON_PROPERTY_TRACK_CODE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTrackCode(String trackCode) {
        this.trackCode = trackCode;
    }

    public SetOrderDeliveryTrackCodeRequest deliveryServiceId(Long deliveryServiceId) {
        this.deliveryServiceId = deliveryServiceId;
        return this;
    }

    /**
     * Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).
     * @return deliveryServiceId
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_DELIVERY_SERVICE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Long getDeliveryServiceId() {
        return deliveryServiceId;
    }

    @JsonProperty(JSON_PROPERTY_DELIVERY_SERVICE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDeliveryServiceId(Long deliveryServiceId) {
        this.deliveryServiceId = deliveryServiceId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SetOrderDeliveryTrackCodeRequest setOrderDeliveryTrackCodeRequest = (SetOrderDeliveryTrackCodeRequest) o;
        return Objects.equals(this.trackCode, setOrderDeliveryTrackCodeRequest.trackCode) &&
            Objects.equals(this.deliveryServiceId, setOrderDeliveryTrackCodeRequest.deliveryServiceId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(trackCode, deliveryServiceId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SetOrderDeliveryTrackCodeRequest {\n");
        sb.append("    trackCode: ").append(toIndentedString(trackCode)).append("\n");
        sb.append("    deliveryServiceId: ").append(toIndentedString(deliveryServiceId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

