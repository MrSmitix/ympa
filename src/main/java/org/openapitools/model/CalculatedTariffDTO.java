/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.CalculatedTariffType;
import org.openapitools.model.TariffParameterDTO;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Информация об услугах Маркета.
 */
@Schema(name = "CalculatedTariffDTO", description = "Информация об услугах Маркета.")
@JsonPropertyOrder({
  CalculatedTariffDTO.JSON_PROPERTY_TYPE,
  CalculatedTariffDTO.JSON_PROPERTY_AMOUNT,
  CalculatedTariffDTO.JSON_PROPERTY_PARAMETERS
})
@JsonTypeName("CalculatedTariffDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class CalculatedTariffDTO {
    public static final String JSON_PROPERTY_TYPE = "type";
    private CalculatedTariffType type;

    public static final String JSON_PROPERTY_AMOUNT = "amount";
    private BigDecimal amount;

    public static final String JSON_PROPERTY_PARAMETERS = "parameters";
    private List<@Valid TariffParameterDTO> parameters = new ArrayList<>();

    public CalculatedTariffDTO(CalculatedTariffType type, List<@Valid TariffParameterDTO> parameters) {
        this.type = type;
        this.parameters = parameters;
    }

    public CalculatedTariffDTO type(CalculatedTariffType type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     * @return type
     */
    @NotNull
    @Schema(name = "type", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public CalculatedTariffType getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setType(CalculatedTariffType type) {
        this.type = type;
    }

    public CalculatedTariffDTO amount(BigDecimal amount) {
        this.amount = amount;
        return this;
    }

    /**
     * Стоимость услуги в рублях.
     * @return amount
     */
    @Nullable
    @Schema(name = "amount", description = "Стоимость услуги в рублях.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getAmount() {
        return amount;
    }

    @JsonProperty(JSON_PROPERTY_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    public CalculatedTariffDTO parameters(List<@Valid TariffParameterDTO> parameters) {
        this.parameters = parameters;
        return this;
    }

    public CalculatedTariffDTO addParametersItem(TariffParameterDTO parametersItem) {
        this.parameters.add(parametersItem);
        return this;
    }

    /**
     * Параметры расчета тарифа.
     * @return parameters
     */
    @NotNull
    @Schema(name = "parameters", description = "Параметры расчета тарифа.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_PARAMETERS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<@Valid TariffParameterDTO> getParameters() {
        return parameters;
    }

    @JsonProperty(JSON_PROPERTY_PARAMETERS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setParameters(List<@Valid TariffParameterDTO> parameters) {
        this.parameters = parameters;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CalculatedTariffDTO calculatedTariffDTO = (CalculatedTariffDTO) o;
        return Objects.equals(this.type, calculatedTariffDTO.type) &&
            Objects.equals(this.amount, calculatedTariffDTO.amount) &&
            Objects.equals(this.parameters, calculatedTariffDTO.parameters);
    }

    @Override
    public int hashCode() {
        return Objects.hash(type, amount, parameters);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CalculatedTariffDTO {\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

