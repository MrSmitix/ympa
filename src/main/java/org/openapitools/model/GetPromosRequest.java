/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.MechanicsType;
import org.openapitools.model.PromoParticipationType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Фильтры для получения списка акций.
 */
@Schema(name = "GetPromosRequest", description = "Фильтры для получения списка акций.")
@JsonPropertyOrder({
  GetPromosRequest.JSON_PROPERTY_PARTICIPATION,
  GetPromosRequest.JSON_PROPERTY_MECHANICS
})
@JsonTypeName("GetPromosRequest")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class GetPromosRequest {
    public static final String JSON_PROPERTY_PARTICIPATION = "participation";
    private PromoParticipationType participation;

    public static final String JSON_PROPERTY_MECHANICS = "mechanics";
    private MechanicsType mechanics;

    public GetPromosRequest() {
    }

    public GetPromosRequest participation(PromoParticipationType participation) {
        this.participation = participation;
        return this;
    }

    /**
     * Get participation
     * @return participation
     */
    @Nullable
    @Schema(name = "participation", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PARTICIPATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public PromoParticipationType getParticipation() {
        return participation;
    }

    @JsonProperty(JSON_PROPERTY_PARTICIPATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setParticipation(PromoParticipationType participation) {
        this.participation = participation;
    }

    public GetPromosRequest mechanics(MechanicsType mechanics) {
        this.mechanics = mechanics;
        return this;
    }

    /**
     * Get mechanics
     * @return mechanics
     */
    @Nullable
    @Schema(name = "mechanics", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_MECHANICS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public MechanicsType getMechanics() {
        return mechanics;
    }

    @JsonProperty(JSON_PROPERTY_MECHANICS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMechanics(MechanicsType mechanics) {
        this.mechanics = mechanics;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetPromosRequest getPromosRequest = (GetPromosRequest) o;
        return Objects.equals(this.participation, getPromosRequest.participation) &&
            Objects.equals(this.mechanics, getPromosRequest.mechanics);
    }

    @Override
    public int hashCode() {
        return Objects.hash(participation, mechanics);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetPromosRequest {\n");
        sb.append("    participation: ").append(toIndentedString(participation)).append("\n");
        sb.append("    mechanics: ").append(toIndentedString(mechanics)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

