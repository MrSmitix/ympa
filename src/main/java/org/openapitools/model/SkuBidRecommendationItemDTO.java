/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.BidRecommendationItemDTO;
import org.openapitools.model.PriceRecommendationItemDTO;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Список товаров с рекомендованными ставками.
 */
@JsonPropertyOrder({
  SkuBidRecommendationItemDTO.JSON_PROPERTY_SKU,
  SkuBidRecommendationItemDTO.JSON_PROPERTY_BID,
  SkuBidRecommendationItemDTO.JSON_PROPERTY_BID_RECOMMENDATIONS,
  SkuBidRecommendationItemDTO.JSON_PROPERTY_PRICE_RECOMMENDATIONS
})
@JsonTypeName("SkuBidRecommendationItemDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class SkuBidRecommendationItemDTO {
    public static final String JSON_PROPERTY_SKU = "sku";
    private String sku;

    public static final String JSON_PROPERTY_BID = "bid";
    private Integer bid;

    public static final String JSON_PROPERTY_BID_RECOMMENDATIONS = "bidRecommendations";
    private List<@Valid BidRecommendationItemDTO> bidRecommendations = null;

    public static final String JSON_PROPERTY_PRICE_RECOMMENDATIONS = "priceRecommendations";
    private List<@Valid PriceRecommendationItemDTO> priceRecommendations = null;

    public SkuBidRecommendationItemDTO(String sku, Integer bid) {
        this.sku = sku;
        this.bid = bid;
    }

    public SkuBidRecommendationItemDTO sku(String sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
     * @return sku
     */
    @NotNull
    @Pattern(regexp="^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$")
    @Size(min=1, max=255)
    @JsonProperty(JSON_PROPERTY_SKU)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getSku() {
        return sku;
    }

    @JsonProperty(JSON_PROPERTY_SKU)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSku(String sku) {
        this.sku = sku;
    }

    public SkuBidRecommendationItemDTO bid(Integer bid) {
        this.bid = bid;
        return this;
    }

    /**
     * Значение ставки.
     * minimum: 0
     * maximum: 9999
     * @return bid
     */
    @NotNull
    @Min(0)
    @Max(9999)
    @JsonProperty(JSON_PROPERTY_BID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getBid() {
        return bid;
    }

    @JsonProperty(JSON_PROPERTY_BID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setBid(Integer bid) {
        this.bid = bid;
    }

    public SkuBidRecommendationItemDTO bidRecommendations(List<@Valid BidRecommendationItemDTO> bidRecommendations) {
        this.bidRecommendations = bidRecommendations;
        return this;
    }

    public SkuBidRecommendationItemDTO addBidRecommendationsItem(BidRecommendationItemDTO bidRecommendationsItem) {
        if (this.bidRecommendations == null) {
            this.bidRecommendations = new ArrayList<>();
        }
        this.bidRecommendations.add(bidRecommendationsItem);
        return this;
    }

    /**
     * Список рекомендованных ставок с соответствующими долями показов. Чем больше ставка, тем большую долю показов она помогает получить. 
     * @return bidRecommendations
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_BID_RECOMMENDATIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid BidRecommendationItemDTO> getBidRecommendations() {
        return bidRecommendations;
    }

    @JsonProperty(JSON_PROPERTY_BID_RECOMMENDATIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBidRecommendations(List<@Valid BidRecommendationItemDTO> bidRecommendations) {
        this.bidRecommendations = bidRecommendations;
    }

    public SkuBidRecommendationItemDTO priceRecommendations(List<@Valid PriceRecommendationItemDTO> priceRecommendations) {
        this.priceRecommendations = priceRecommendations;
        return this;
    }

    public SkuBidRecommendationItemDTO addPriceRecommendationsItem(PriceRecommendationItemDTO priceRecommendationsItem) {
        if (this.priceRecommendations == null) {
            this.priceRecommendations = new ArrayList<>();
        }
        this.priceRecommendations.add(priceRecommendationsItem);
        return this;
    }

    /**
     * Рекомендованные цены.
     * @return priceRecommendations
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_PRICE_RECOMMENDATIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid PriceRecommendationItemDTO> getPriceRecommendations() {
        return priceRecommendations;
    }

    @JsonProperty(JSON_PROPERTY_PRICE_RECOMMENDATIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPriceRecommendations(List<@Valid PriceRecommendationItemDTO> priceRecommendations) {
        this.priceRecommendations = priceRecommendations;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SkuBidRecommendationItemDTO skuBidRecommendationItemDTO = (SkuBidRecommendationItemDTO) o;
        return Objects.equals(this.sku, skuBidRecommendationItemDTO.sku) &&
            Objects.equals(this.bid, skuBidRecommendationItemDTO.bid) &&
            Objects.equals(this.bidRecommendations, skuBidRecommendationItemDTO.bidRecommendations) &&
            Objects.equals(this.priceRecommendations, skuBidRecommendationItemDTO.priceRecommendations);
    }

    @Override
    public int hashCode() {
        return Objects.hash(sku, bid, bidRecommendations, priceRecommendations);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SkuBidRecommendationItemDTO {\n");
        sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
        sb.append("    bid: ").append(toIndentedString(bid)).append("\n");
        sb.append("    bidRecommendations: ").append(toIndentedString(bidRecommendations)).append("\n");
        sb.append("    priceRecommendations: ").append(toIndentedString(priceRecommendations)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

