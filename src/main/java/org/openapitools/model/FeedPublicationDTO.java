/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.FeedPublicationFullDTO;
import org.openapitools.model.FeedPublicationPriceAndStockUpdateDTO;
import org.openapitools.model.FeedStatusType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Информация о последней публикации предложений из прайс-листа на Маркете.
 */
@Schema(name = "FeedPublicationDTO", description = "Информация о последней публикации предложений из прайс-листа на Маркете.")
@JsonPropertyOrder({
  FeedPublicationDTO.JSON_PROPERTY_STATUS,
  FeedPublicationDTO.JSON_PROPERTY_FULL,
  FeedPublicationDTO.JSON_PROPERTY_PRICE_AND_STOCK_UPDATE
})
@JsonTypeName("FeedPublicationDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class FeedPublicationDTO {
    public static final String JSON_PROPERTY_STATUS = "status";
    private FeedStatusType status;

    public static final String JSON_PROPERTY_FULL = "full";
    private FeedPublicationFullDTO full;

    public static final String JSON_PROPERTY_PRICE_AND_STOCK_UPDATE = "priceAndStockUpdate";
    private FeedPublicationPriceAndStockUpdateDTO priceAndStockUpdate;

    public FeedPublicationDTO() {
    }

    public FeedPublicationDTO status(FeedStatusType status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     * @return status
     */
    @Nullable
    @Schema(name = "status", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public FeedStatusType getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStatus(FeedStatusType status) {
        this.status = status;
    }

    public FeedPublicationDTO full(FeedPublicationFullDTO full) {
        this.full = full;
        return this;
    }

    /**
     * Get full
     * @return full
     */
    @Valid
    @Nullable
    @Schema(name = "full", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_FULL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public FeedPublicationFullDTO getFull() {
        return full;
    }

    @JsonProperty(JSON_PROPERTY_FULL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFull(FeedPublicationFullDTO full) {
        this.full = full;
    }

    public FeedPublicationDTO priceAndStockUpdate(FeedPublicationPriceAndStockUpdateDTO priceAndStockUpdate) {
        this.priceAndStockUpdate = priceAndStockUpdate;
        return this;
    }

    /**
     * Get priceAndStockUpdate
     * @return priceAndStockUpdate
     */
    @Valid
    @Nullable
    @Schema(name = "priceAndStockUpdate", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PRICE_AND_STOCK_UPDATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public FeedPublicationPriceAndStockUpdateDTO getPriceAndStockUpdate() {
        return priceAndStockUpdate;
    }

    @JsonProperty(JSON_PROPERTY_PRICE_AND_STOCK_UPDATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPriceAndStockUpdate(FeedPublicationPriceAndStockUpdateDTO priceAndStockUpdate) {
        this.priceAndStockUpdate = priceAndStockUpdate;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FeedPublicationDTO feedPublicationDTO = (FeedPublicationDTO) o;
        return Objects.equals(this.status, feedPublicationDTO.status) &&
            Objects.equals(this.full, feedPublicationDTO.full) &&
            Objects.equals(this.priceAndStockUpdate, feedPublicationDTO.priceAndStockUpdate);
    }

    @Override
    public int hashCode() {
        return Objects.hash(status, full, priceAndStockUpdate);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class FeedPublicationDTO {\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    full: ").append(toIndentedString(full)).append("\n");
        sb.append("    priceAndStockUpdate: ").append(toIndentedString(priceAndStockUpdate)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

