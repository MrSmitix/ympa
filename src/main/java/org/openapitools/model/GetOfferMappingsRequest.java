/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.OfferCardStatusType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * GetOfferMappingsRequest
 */
@JsonPropertyOrder({
  GetOfferMappingsRequest.JSON_PROPERTY_OFFER_IDS,
  GetOfferMappingsRequest.JSON_PROPERTY_CARD_STATUSES,
  GetOfferMappingsRequest.JSON_PROPERTY_CATEGORY_IDS,
  GetOfferMappingsRequest.JSON_PROPERTY_VENDOR_NAMES,
  GetOfferMappingsRequest.JSON_PROPERTY_TAGS,
  GetOfferMappingsRequest.JSON_PROPERTY_ARCHIVED
})
@JsonTypeName("GetOfferMappingsRequest")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class GetOfferMappingsRequest {
    public static final String JSON_PROPERTY_OFFER_IDS = "offerIds";
    private List<@Pattern(regexp = "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$")@Size(min = 1, max = 255)String> offerIds = null;

    public static final String JSON_PROPERTY_CARD_STATUSES = "cardStatuses";
    private List<OfferCardStatusType> cardStatuses = null;

    public static final String JSON_PROPERTY_CATEGORY_IDS = "categoryIds";
    private List<Integer> categoryIds = null;

    public static final String JSON_PROPERTY_VENDOR_NAMES = "vendorNames";
    private List<String> vendorNames = null;

    public static final String JSON_PROPERTY_TAGS = "tags";
    private List<String> tags = null;

    public static final String JSON_PROPERTY_ARCHIVED = "archived";
    private Boolean archived;

    public GetOfferMappingsRequest() {
    }

    public GetOfferMappingsRequest offerIds(List<@Pattern(regexp = "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$")@Size(min = 1, max = 255)String> offerIds) {
        this.offerIds = offerIds;
        return this;
    }

    public GetOfferMappingsRequest addOfferIdsItem(String offerIdsItem) {
        if (this.offerIds == null) {
            this.offerIds = new ArrayList<>();
        }
        this.offerIds.add(offerIdsItem);
        return this;
    }

    /**
     * Идентификаторы товаров, информация о которых нужна.  {% note warning \&quot;Такой список возвращается только целиком\&quot; %}  Если вы запрашиваете информацию по конкретным SKU, не заполняйте: * &#x60;page_token&#x60;; * &#x60;limit&#x60;; * &#x60;cardStatuses&#x60;; * &#x60;categoryIds&#x60;; * &#x60;vendorNames&#x60;; * &#x60;tags&#x60;; * &#x60;archived&#x60;.  {% endnote %}    
     * @return offerIds
     */
    @Nullable
    @Size(min=1, max=200)
    @Schema(name = "offerIds", description = "Идентификаторы товаров, информация о которых нужна.  {% note warning \"Такой список возвращается только целиком\" %}  Если вы запрашиваете информацию по конкретным SKU, не заполняйте: * `page_token`; * `limit`; * `cardStatuses`; * `categoryIds`; * `vendorNames`; * `tags`; * `archived`.  {% endnote %}    ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_OFFER_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Pattern(regexp = "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$")@Size(min = 1, max = 255)String> getOfferIds() {
        return offerIds;
    }

    @JsonProperty(JSON_PROPERTY_OFFER_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOfferIds(List<@Pattern(regexp = "^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$")@Size(min = 1, max = 255)String> offerIds) {
        this.offerIds = offerIds;
    }

    public GetOfferMappingsRequest cardStatuses(List<OfferCardStatusType> cardStatuses) {
        this.cardStatuses = cardStatuses;
        return this;
    }

    public GetOfferMappingsRequest addCardStatusesItem(OfferCardStatusType cardStatusesItem) {
        if (this.cardStatuses == null) {
            this.cardStatuses = new ArrayList<>();
        }
        this.cardStatuses.add(cardStatusesItem);
        return this;
    }

    /**
     * Фильтр по статусам карточек.  [Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html) 
     * @return cardStatuses
     */
    @Nullable
    @Size(min=1)
    @Schema(name = "cardStatuses", description = "Фильтр по статусам карточек.  [Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html) ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CARD_STATUSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<OfferCardStatusType> getCardStatuses() {
        return cardStatuses;
    }

    @JsonProperty(JSON_PROPERTY_CARD_STATUSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCardStatuses(List<OfferCardStatusType> cardStatuses) {
        this.cardStatuses = cardStatuses;
    }

    public GetOfferMappingsRequest categoryIds(List<Integer> categoryIds) {
        this.categoryIds = categoryIds;
        return this;
    }

    public GetOfferMappingsRequest addCategoryIdsItem(Integer categoryIdsItem) {
        if (this.categoryIds == null) {
            this.categoryIds = new ArrayList<>();
        }
        this.categoryIds.add(categoryIdsItem);
        return this;
    }

    /**
     * Фильтр по категориям на Маркете.
     * @return categoryIds
     */
    @Nullable
    @Size(min=1)
    @Schema(name = "categoryIds", description = "Фильтр по категориям на Маркете.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CATEGORY_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<Integer> getCategoryIds() {
        return categoryIds;
    }

    @JsonProperty(JSON_PROPERTY_CATEGORY_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCategoryIds(List<Integer> categoryIds) {
        this.categoryIds = categoryIds;
    }

    public GetOfferMappingsRequest vendorNames(List<String> vendorNames) {
        this.vendorNames = vendorNames;
        return this;
    }

    public GetOfferMappingsRequest addVendorNamesItem(String vendorNamesItem) {
        if (this.vendorNames == null) {
            this.vendorNames = new ArrayList<>();
        }
        this.vendorNames.add(vendorNamesItem);
        return this;
    }

    /**
     * Фильтр по брендам.
     * @return vendorNames
     */
    @Nullable
    @Size(min=1)
    @Schema(name = "vendorNames", description = "Фильтр по брендам.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_VENDOR_NAMES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getVendorNames() {
        return vendorNames;
    }

    @JsonProperty(JSON_PROPERTY_VENDOR_NAMES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVendorNames(List<String> vendorNames) {
        this.vendorNames = vendorNames;
    }

    public GetOfferMappingsRequest tags(List<String> tags) {
        this.tags = tags;
        return this;
    }

    public GetOfferMappingsRequest addTagsItem(String tagsItem) {
        if (this.tags == null) {
            this.tags = new ArrayList<>();
        }
        this.tags.add(tagsItem);
        return this;
    }

    /**
     * Фильтр по тегам.
     * @return tags
     */
    @Nullable
    @Size(min=1)
    @Schema(name = "tags", description = "Фильтр по тегам.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getTags() {
        return tags;
    }

    @JsonProperty(JSON_PROPERTY_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTags(List<String> tags) {
        this.tags = tags;
    }

    public GetOfferMappingsRequest archived(Boolean archived) {
        this.archived = archived;
        return this;
    }

    /**
     * Фильтр по нахождению в архиве.  Передайте &#x60;true&#x60;, чтобы получить товары, находящиеся в архиве. Если фильтр не заполнен или передано &#x60;false&#x60;, в ответе возвращаются товары, не находящиеся в архиве. 
     * @return archived
     */
    @Nullable
    @Schema(name = "archived", description = "Фильтр по нахождению в архиве.  Передайте `true`, чтобы получить товары, находящиеся в архиве. Если фильтр не заполнен или передано `false`, в ответе возвращаются товары, не находящиеся в архиве. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ARCHIVED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getArchived() {
        return archived;
    }

    @JsonProperty(JSON_PROPERTY_ARCHIVED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setArchived(Boolean archived) {
        this.archived = archived;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetOfferMappingsRequest getOfferMappingsRequest = (GetOfferMappingsRequest) o;
        return Objects.equals(this.offerIds, getOfferMappingsRequest.offerIds) &&
            Objects.equals(this.cardStatuses, getOfferMappingsRequest.cardStatuses) &&
            Objects.equals(this.categoryIds, getOfferMappingsRequest.categoryIds) &&
            Objects.equals(this.vendorNames, getOfferMappingsRequest.vendorNames) &&
            Objects.equals(this.tags, getOfferMappingsRequest.tags) &&
            Objects.equals(this.archived, getOfferMappingsRequest.archived);
    }

    @Override
    public int hashCode() {
        return Objects.hash(offerIds, cardStatuses, categoryIds, vendorNames, tags, archived);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetOfferMappingsRequest {\n");
        sb.append("    offerIds: ").append(toIndentedString(offerIds)).append("\n");
        sb.append("    cardStatuses: ").append(toIndentedString(cardStatuses)).append("\n");
        sb.append("    categoryIds: ").append(toIndentedString(categoryIds)).append("\n");
        sb.append("    vendorNames: ").append(toIndentedString(vendorNames)).append("\n");
        sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
        sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

