/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.OfferMappingEntryDTO;
import org.openapitools.model.ScrollingPagerDTO;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Информация о товарах в каталоге.
 */
@Schema(name = "OfferMappingEntriesDTO", description = "Информация о товарах в каталоге.")
@JsonPropertyOrder({
  OfferMappingEntriesDTO.JSON_PROPERTY_PAGING,
  OfferMappingEntriesDTO.JSON_PROPERTY_OFFER_MAPPING_ENTRIES
})
@JsonTypeName("OfferMappingEntriesDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class OfferMappingEntriesDTO {
    public static final String JSON_PROPERTY_PAGING = "paging";
    private ScrollingPagerDTO paging;

    public static final String JSON_PROPERTY_OFFER_MAPPING_ENTRIES = "offerMappingEntries";
    private List<@Valid OfferMappingEntryDTO> offerMappingEntries = new ArrayList<>();

    public OfferMappingEntriesDTO(List<@Valid OfferMappingEntryDTO> offerMappingEntries) {
        this.offerMappingEntries = offerMappingEntries;
    }

    public OfferMappingEntriesDTO paging(ScrollingPagerDTO paging) {
        this.paging = paging;
        return this;
    }

    /**
     * Get paging
     * @return paging
     */
    @Valid
    @Nullable
    @Schema(name = "paging", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PAGING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ScrollingPagerDTO getPaging() {
        return paging;
    }

    @JsonProperty(JSON_PROPERTY_PAGING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPaging(ScrollingPagerDTO paging) {
        this.paging = paging;
    }

    public OfferMappingEntriesDTO offerMappingEntries(List<@Valid OfferMappingEntryDTO> offerMappingEntries) {
        this.offerMappingEntries = offerMappingEntries;
        return this;
    }

    public OfferMappingEntriesDTO addOfferMappingEntriesItem(OfferMappingEntryDTO offerMappingEntriesItem) {
        this.offerMappingEntries.add(offerMappingEntriesItem);
        return this;
    }

    /**
     * Информация о товарах в каталоге.
     * @return offerMappingEntries
     */
    @NotNull
    @Schema(name = "offerMappingEntries", description = "Информация о товарах в каталоге.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_OFFER_MAPPING_ENTRIES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<@Valid OfferMappingEntryDTO> getOfferMappingEntries() {
        return offerMappingEntries;
    }

    @JsonProperty(JSON_PROPERTY_OFFER_MAPPING_ENTRIES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setOfferMappingEntries(List<@Valid OfferMappingEntryDTO> offerMappingEntries) {
        this.offerMappingEntries = offerMappingEntries;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OfferMappingEntriesDTO offerMappingEntriesDTO = (OfferMappingEntriesDTO) o;
        return Objects.equals(this.paging, offerMappingEntriesDTO.paging) &&
            Objects.equals(this.offerMappingEntries, offerMappingEntriesDTO.offerMappingEntries);
    }

    @Override
    public int hashCode() {
        return Objects.hash(paging, offerMappingEntries);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OfferMappingEntriesDTO {\n");
        sb.append("    paging: ").append(toIndentedString(paging)).append("\n");
        sb.append("    offerMappingEntries: ").append(toIndentedString(offerMappingEntries)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

