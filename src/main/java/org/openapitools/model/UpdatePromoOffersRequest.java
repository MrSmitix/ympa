/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.UpdatePromoOfferDTO;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Добавление товаров в акцию или обновление их параметров.  Чтобы добавить товары в акцию или обновить параметры каких-то товаров, передайте их в параметре &#x60;offers&#x60;. 
 */
@Schema(name = "UpdatePromoOffersRequest", description = "Добавление товаров в акцию или обновление их параметров.  Чтобы добавить товары в акцию или обновить параметры каких-то товаров, передайте их в параметре `offers`. ")
@JsonPropertyOrder({
  UpdatePromoOffersRequest.JSON_PROPERTY_PROMO_ID,
  UpdatePromoOffersRequest.JSON_PROPERTY_OFFERS
})
@JsonTypeName("UpdatePromoOffersRequest")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class UpdatePromoOffersRequest {
    public static final String JSON_PROPERTY_PROMO_ID = "promoId";
    private String promoId;

    public static final String JSON_PROPERTY_OFFERS = "offers";
    private List<@Valid UpdatePromoOfferDTO> offers = new ArrayList<>();

    public UpdatePromoOffersRequest(String promoId, List<@Valid UpdatePromoOfferDTO> offers) {
        this.promoId = promoId;
        this.offers = offers;
    }

    public UpdatePromoOffersRequest promoId(String promoId) {
        this.promoId = promoId;
        return this;
    }

    /**
     * Идентификатор акции.
     * @return promoId
     */
    @NotNull
    @Schema(name = "promoId", description = "Идентификатор акции.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_PROMO_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getPromoId() {
        return promoId;
    }

    @JsonProperty(JSON_PROPERTY_PROMO_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPromoId(String promoId) {
        this.promoId = promoId;
    }

    public UpdatePromoOffersRequest offers(List<@Valid UpdatePromoOfferDTO> offers) {
        this.offers = offers;
        return this;
    }

    public UpdatePromoOffersRequest addOffersItem(UpdatePromoOfferDTO offersItem) {
        this.offers.add(offersItem);
        return this;
    }

    /**
     * Товары, которые необходимо добавить в акцию или цены которых нужно изменить.
     * @return offers
     */
    @NotNull
    @Size(min=1, max=500)
    @Schema(name = "offers", description = "Товары, которые необходимо добавить в акцию или цены которых нужно изменить.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_OFFERS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<@Valid UpdatePromoOfferDTO> getOffers() {
        return offers;
    }

    @JsonProperty(JSON_PROPERTY_OFFERS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setOffers(List<@Valid UpdatePromoOfferDTO> offers) {
        this.offers = offers;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdatePromoOffersRequest updatePromoOffersRequest = (UpdatePromoOffersRequest) o;
        return Objects.equals(this.promoId, updatePromoOffersRequest.promoId) &&
            Objects.equals(this.offers, updatePromoOffersRequest.offers);
    }

    @Override
    public int hashCode() {
        return Objects.hash(promoId, offers);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UpdatePromoOffersRequest {\n");
        sb.append("    promoId: ").append(toIndentedString(promoId)).append("\n");
        sb.append("    offers: ").append(toIndentedString(offers)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

