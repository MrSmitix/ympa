/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.LogisticPickupPointDTO;
import org.openapitools.model.RecipientType;
import org.openapitools.model.RefundStatusType;
import org.openapitools.model.ReturnItemDTO;
import org.openapitools.model.ReturnShipmentStatusType;
import org.openapitools.model.ReturnType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Возврат заказа.
 */
@Schema(name = "ReturnDTO", description = "Возврат заказа.")
@JsonPropertyOrder({
  ReturnDTO.JSON_PROPERTY_ID,
  ReturnDTO.JSON_PROPERTY_ORDER_ID,
  ReturnDTO.JSON_PROPERTY_CREATION_DATE,
  ReturnDTO.JSON_PROPERTY_UPDATE_DATE,
  ReturnDTO.JSON_PROPERTY_REFUND_STATUS,
  ReturnDTO.JSON_PROPERTY_LOGISTIC_PICKUP_POINT,
  ReturnDTO.JSON_PROPERTY_SHIPMENT_RECIPIENT_TYPE,
  ReturnDTO.JSON_PROPERTY_SHIPMENT_STATUS,
  ReturnDTO.JSON_PROPERTY_REFUND_AMOUNT,
  ReturnDTO.JSON_PROPERTY_ITEMS,
  ReturnDTO.JSON_PROPERTY_RETURN_TYPE,
  ReturnDTO.JSON_PROPERTY_FAST_RETURN
})
@JsonTypeName("ReturnDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class ReturnDTO {
    public static final String JSON_PROPERTY_ID = "id";
    private Long id;

    public static final String JSON_PROPERTY_ORDER_ID = "orderId";
    private Long orderId;

    public static final String JSON_PROPERTY_CREATION_DATE = "creationDate";
    private OffsetDateTime creationDate;

    public static final String JSON_PROPERTY_UPDATE_DATE = "updateDate";
    private OffsetDateTime updateDate;

    public static final String JSON_PROPERTY_REFUND_STATUS = "refundStatus";
    private RefundStatusType refundStatus;

    public static final String JSON_PROPERTY_LOGISTIC_PICKUP_POINT = "logisticPickupPoint";
    private LogisticPickupPointDTO logisticPickupPoint;

    public static final String JSON_PROPERTY_SHIPMENT_RECIPIENT_TYPE = "shipmentRecipientType";
    private RecipientType shipmentRecipientType;

    public static final String JSON_PROPERTY_SHIPMENT_STATUS = "shipmentStatus";
    private ReturnShipmentStatusType shipmentStatus;

    public static final String JSON_PROPERTY_REFUND_AMOUNT = "refundAmount";
    private Long refundAmount;

    public static final String JSON_PROPERTY_ITEMS = "items";
    private List<@Valid ReturnItemDTO> items = new ArrayList<>();

    public static final String JSON_PROPERTY_RETURN_TYPE = "returnType";
    private ReturnType returnType;

    public static final String JSON_PROPERTY_FAST_RETURN = "fastReturn";
    private Boolean fastReturn;

    public ReturnDTO(List<@Valid ReturnItemDTO> items) {
        this.items = items;
    }

    public ReturnDTO id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Идентификатор возврата.
     * @return id
     */
    @Nullable
    @Schema(name = "id", description = "Идентификатор возврата.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(Long id) {
        this.id = id;
    }

    public ReturnDTO orderId(Long orderId) {
        this.orderId = orderId;
        return this;
    }

    /**
     * Номер заказа.
     * @return orderId
     */
    @Nullable
    @Schema(name = "orderId", description = "Номер заказа.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ORDER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getOrderId() {
        return orderId;
    }

    @JsonProperty(JSON_PROPERTY_ORDER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOrderId(Long orderId) {
        this.orderId = orderId;
    }

    public ReturnDTO creationDate(OffsetDateTime creationDate) {
        this.creationDate = creationDate;
        return this;
    }

    /**
     * Дата создания возврата клиентом.
     * @return creationDate
     */
    @Nullable
    @Schema(name = "creationDate", description = "Дата создания возврата клиентом.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CREATION_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getCreationDate() {
        return creationDate;
    }

    @JsonProperty(JSON_PROPERTY_CREATION_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setCreationDate(OffsetDateTime creationDate) {
        this.creationDate = creationDate;
    }

    public ReturnDTO updateDate(OffsetDateTime updateDate) {
        this.updateDate = updateDate;
        return this;
    }

    /**
     * Дата обновления возврата.
     * @return updateDate
     */
    @Nullable
    @Schema(name = "updateDate", description = "Дата обновления возврата.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_UPDATE_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getUpdateDate() {
        return updateDate;
    }

    @JsonProperty(JSON_PROPERTY_UPDATE_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setUpdateDate(OffsetDateTime updateDate) {
        this.updateDate = updateDate;
    }

    public ReturnDTO refundStatus(RefundStatusType refundStatus) {
        this.refundStatus = refundStatus;
        return this;
    }

    /**
     * Get refundStatus
     * @return refundStatus
     */
    @Nullable
    @Schema(name = "refundStatus", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_REFUND_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public RefundStatusType getRefundStatus() {
        return refundStatus;
    }

    @JsonProperty(JSON_PROPERTY_REFUND_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRefundStatus(RefundStatusType refundStatus) {
        this.refundStatus = refundStatus;
    }

    public ReturnDTO logisticPickupPoint(LogisticPickupPointDTO logisticPickupPoint) {
        this.logisticPickupPoint = logisticPickupPoint;
        return this;
    }

    /**
     * Get logisticPickupPoint
     * @return logisticPickupPoint
     */
    @Valid
    @Nullable
    @Schema(name = "logisticPickupPoint", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_LOGISTIC_PICKUP_POINT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public LogisticPickupPointDTO getLogisticPickupPoint() {
        return logisticPickupPoint;
    }

    @JsonProperty(JSON_PROPERTY_LOGISTIC_PICKUP_POINT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLogisticPickupPoint(LogisticPickupPointDTO logisticPickupPoint) {
        this.logisticPickupPoint = logisticPickupPoint;
    }

    public ReturnDTO shipmentRecipientType(RecipientType shipmentRecipientType) {
        this.shipmentRecipientType = shipmentRecipientType;
        return this;
    }

    /**
     * Get shipmentRecipientType
     * @return shipmentRecipientType
     */
    @Nullable
    @Schema(name = "shipmentRecipientType", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_SHIPMENT_RECIPIENT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public RecipientType getShipmentRecipientType() {
        return shipmentRecipientType;
    }

    @JsonProperty(JSON_PROPERTY_SHIPMENT_RECIPIENT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setShipmentRecipientType(RecipientType shipmentRecipientType) {
        this.shipmentRecipientType = shipmentRecipientType;
    }

    public ReturnDTO shipmentStatus(ReturnShipmentStatusType shipmentStatus) {
        this.shipmentStatus = shipmentStatus;
        return this;
    }

    /**
     * Get shipmentStatus
     * @return shipmentStatus
     */
    @Nullable
    @Schema(name = "shipmentStatus", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_SHIPMENT_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ReturnShipmentStatusType getShipmentStatus() {
        return shipmentStatus;
    }

    @JsonProperty(JSON_PROPERTY_SHIPMENT_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setShipmentStatus(ReturnShipmentStatusType shipmentStatus) {
        this.shipmentStatus = shipmentStatus;
    }

    public ReturnDTO refundAmount(Long refundAmount) {
        this.refundAmount = refundAmount;
        return this;
    }

    /**
     * Сумма возврата.
     * @return refundAmount
     */
    @Nullable
    @Schema(name = "refundAmount", description = "Сумма возврата.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_REFUND_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getRefundAmount() {
        return refundAmount;
    }

    @JsonProperty(JSON_PROPERTY_REFUND_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRefundAmount(Long refundAmount) {
        this.refundAmount = refundAmount;
    }

    public ReturnDTO items(List<@Valid ReturnItemDTO> items) {
        this.items = items;
        return this;
    }

    public ReturnDTO addItemsItem(ReturnItemDTO itemsItem) {
        this.items.add(itemsItem);
        return this;
    }

    /**
     * Список товаров в возврате.
     * @return items
     */
    @NotNull
    @Schema(name = "items", description = "Список товаров в возврате.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_ITEMS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<@Valid ReturnItemDTO> getItems() {
        return items;
    }

    @JsonProperty(JSON_PROPERTY_ITEMS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setItems(List<@Valid ReturnItemDTO> items) {
        this.items = items;
    }

    public ReturnDTO returnType(ReturnType returnType) {
        this.returnType = returnType;
        return this;
    }

    /**
     * Get returnType
     * @return returnType
     */
    @Nullable
    @Schema(name = "returnType", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_RETURN_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ReturnType getReturnType() {
        return returnType;
    }

    @JsonProperty(JSON_PROPERTY_RETURN_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReturnType(ReturnType returnType) {
        this.returnType = returnType;
    }

    public ReturnDTO fastReturn(Boolean fastReturn) {
        this.fastReturn = fastReturn;
        return this;
    }

    /**
     * Используется ли опция **Быстрый возврат денег за дешевый брак**. 
     * @return fastReturn
     */
    @Nullable
    @Schema(name = "fastReturn", description = "Используется ли опция **Быстрый возврат денег за дешевый брак**. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_FAST_RETURN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getFastReturn() {
        return fastReturn;
    }

    @JsonProperty(JSON_PROPERTY_FAST_RETURN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFastReturn(Boolean fastReturn) {
        this.fastReturn = fastReturn;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ReturnDTO returnDTO = (ReturnDTO) o;
        return Objects.equals(this.id, returnDTO.id) &&
            Objects.equals(this.orderId, returnDTO.orderId) &&
            Objects.equals(this.creationDate, returnDTO.creationDate) &&
            Objects.equals(this.updateDate, returnDTO.updateDate) &&
            Objects.equals(this.refundStatus, returnDTO.refundStatus) &&
            Objects.equals(this.logisticPickupPoint, returnDTO.logisticPickupPoint) &&
            Objects.equals(this.shipmentRecipientType, returnDTO.shipmentRecipientType) &&
            Objects.equals(this.shipmentStatus, returnDTO.shipmentStatus) &&
            Objects.equals(this.refundAmount, returnDTO.refundAmount) &&
            Objects.equals(this.items, returnDTO.items) &&
            Objects.equals(this.returnType, returnDTO.returnType) &&
            Objects.equals(this.fastReturn, returnDTO.fastReturn);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, orderId, creationDate, updateDate, refundStatus, logisticPickupPoint, shipmentRecipientType, shipmentStatus, refundAmount, items, returnType, fastReturn);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ReturnDTO {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
        sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
        sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
        sb.append("    refundStatus: ").append(toIndentedString(refundStatus)).append("\n");
        sb.append("    logisticPickupPoint: ").append(toIndentedString(logisticPickupPoint)).append("\n");
        sb.append("    shipmentRecipientType: ").append(toIndentedString(shipmentRecipientType)).append("\n");
        sb.append("    shipmentStatus: ").append(toIndentedString(shipmentStatus)).append("\n");
        sb.append("    refundAmount: ").append(toIndentedString(refundAmount)).append("\n");
        sb.append("    items: ").append(toIndentedString(items)).append("\n");
        sb.append("    returnType: ").append(toIndentedString(returnType)).append("\n");
        sb.append("    fastReturn: ").append(toIndentedString(fastReturn)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

