/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.time.LocalDate;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Ключ цифрового товара.
 */
@JsonPropertyOrder({
  OrderDigitalItemDTO.JSON_PROPERTY_ID,
  OrderDigitalItemDTO.JSON_PROPERTY_CODE,
  OrderDigitalItemDTO.JSON_PROPERTY_SLIP,
  OrderDigitalItemDTO.JSON_PROPERTY_ACTIVATE_TILL
})
@JsonTypeName("OrderDigitalItemDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class OrderDigitalItemDTO {
    public static final String JSON_PROPERTY_ID = "id";
    private Long id;

    public static final String JSON_PROPERTY_CODE = "code";
    private String code;

    public static final String JSON_PROPERTY_SLIP = "slip";
    private String slip;

    public static final String JSON_PROPERTY_ACTIVATE_TILL = "activate_till";
    private LocalDate activateTill;

    public OrderDigitalItemDTO(Long id, String code, String slip, LocalDate activateTill) {
        this.id = id;
        this.code = code;
        this.slip = slip;
        this.activateTill = activateTill;
    }

    public OrderDigitalItemDTO id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Идентификатор товара в заказе.  Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр &#x60;id&#x60; в &#x60;items&#x60;. 
     * @return id
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Long getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setId(Long id) {
        this.id = id;
    }

    public OrderDigitalItemDTO code(String code) {
        this.code = code;
        return this;
    }

    /**
     * Сам ключ.
     * @return code
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_CODE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getCode() {
        return code;
    }

    @JsonProperty(JSON_PROPERTY_CODE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCode(String code) {
        this.code = code;
    }

    public OrderDigitalItemDTO slip(String slip) {
        this.slip = slip;
        return this;
    }

    /**
     * Инструкция по активации.
     * @return slip
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_SLIP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getSlip() {
        return slip;
    }

    @JsonProperty(JSON_PROPERTY_SLIP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSlip(String slip) {
        this.slip = slip;
    }

    public OrderDigitalItemDTO activateTill(LocalDate activateTill) {
        this.activateTill = activateTill;
        return this;
    }

    /**
     * Дата, до которой нужно активировать ключ. Если ключ действует бессрочно, укажите любую дату в отдаленном будущем.  Формат даты: &#x60;ГГГГ-ММ-ДД&#x60;. 
     * @return activateTill
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_ACTIVATE_TILL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public LocalDate getActivateTill() {
        return activateTill;
    }

    @JsonProperty(JSON_PROPERTY_ACTIVATE_TILL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public void setActivateTill(LocalDate activateTill) {
        this.activateTill = activateTill;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OrderDigitalItemDTO orderDigitalItemDTO = (OrderDigitalItemDTO) o;
        return Objects.equals(this.id, orderDigitalItemDTO.id) &&
            Objects.equals(this.code, orderDigitalItemDTO.code) &&
            Objects.equals(this.slip, orderDigitalItemDTO.slip) &&
            Objects.equals(this.activateTill, orderDigitalItemDTO.activateTill);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, code, slip, activateTill);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OrderDigitalItemDTO {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    code: ").append(toIndentedString(code)).append("\n");
        sb.append("    slip: ").append(toIndentedString(slip)).append("\n");
        sb.append("    activateTill: ").append(toIndentedString(activateTill)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

