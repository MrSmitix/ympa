/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.PlacementType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Данные, необходимые для генерации отчета: идентификатор магазина, период, за который нужен отчет, а также фильтры. 
 */
@Schema(name = "GenerateUnitedNettingReportRequest", description = "Данные, необходимые для генерации отчета: идентификатор магазина, период, за который нужен отчет, а также фильтры. ")
@JsonPropertyOrder({
  GenerateUnitedNettingReportRequest.JSON_PROPERTY_BUSINESS_ID,
  GenerateUnitedNettingReportRequest.JSON_PROPERTY_DATE_TIME_FROM,
  GenerateUnitedNettingReportRequest.JSON_PROPERTY_DATE_TIME_TO,
  GenerateUnitedNettingReportRequest.JSON_PROPERTY_DATE_FROM,
  GenerateUnitedNettingReportRequest.JSON_PROPERTY_DATE_TO,
  GenerateUnitedNettingReportRequest.JSON_PROPERTY_BANK_ORDER_ID,
  GenerateUnitedNettingReportRequest.JSON_PROPERTY_BANK_ORDER_DATE_TIME,
  GenerateUnitedNettingReportRequest.JSON_PROPERTY_PLACEMENT_PROGRAMS,
  GenerateUnitedNettingReportRequest.JSON_PROPERTY_INNS,
  GenerateUnitedNettingReportRequest.JSON_PROPERTY_CAMPAIGN_IDS
})
@JsonTypeName("GenerateUnitedNettingReportRequest")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class GenerateUnitedNettingReportRequest {
    public static final String JSON_PROPERTY_BUSINESS_ID = "businessId";
    private Long businessId;

    public static final String JSON_PROPERTY_DATE_TIME_FROM = "dateTimeFrom";
    private OffsetDateTime dateTimeFrom;

    public static final String JSON_PROPERTY_DATE_TIME_TO = "dateTimeTo";
    private OffsetDateTime dateTimeTo;

    public static final String JSON_PROPERTY_DATE_FROM = "dateFrom";
    private LocalDate dateFrom;

    public static final String JSON_PROPERTY_DATE_TO = "dateTo";
    private LocalDate dateTo;

    public static final String JSON_PROPERTY_BANK_ORDER_ID = "bankOrderId";
    private Long bankOrderId;

    public static final String JSON_PROPERTY_BANK_ORDER_DATE_TIME = "bankOrderDateTime";
    private OffsetDateTime bankOrderDateTime;

    public static final String JSON_PROPERTY_PLACEMENT_PROGRAMS = "placementPrograms";
    private List<PlacementType> placementPrograms = null;

    public static final String JSON_PROPERTY_INNS = "inns";
    private List<String> inns = null;

    public static final String JSON_PROPERTY_CAMPAIGN_IDS = "campaignIds";
    private List<Long> campaignIds = null;

    public GenerateUnitedNettingReportRequest(Long businessId) {
        this.businessId = businessId;
    }

    public GenerateUnitedNettingReportRequest businessId(Long businessId) {
        this.businessId = businessId;
        return this;
    }

    /**
     * Идентификатор бизнеса.
     * @return businessId
     */
    @NotNull
    @Schema(name = "businessId", description = "Идентификатор бизнеса.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_BUSINESS_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Long getBusinessId() {
        return businessId;
    }

    @JsonProperty(JSON_PROPERTY_BUSINESS_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setBusinessId(Long businessId) {
        this.businessId = businessId;
    }

    public GenerateUnitedNettingReportRequest dateTimeFrom(OffsetDateTime dateTimeFrom) {
        this.dateTimeFrom = dateTimeFrom;
        return this;
    }

    /**
     * {% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Начало периода, включительно. 
     * @return dateTimeFrom
     */
    @Nullable
    @Schema(name = "dateTimeFrom", description = "{% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Начало периода, включительно. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DATE_TIME_FROM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getDateTimeFrom() {
        return dateTimeFrom;
    }

    @JsonProperty(JSON_PROPERTY_DATE_TIME_FROM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setDateTimeFrom(OffsetDateTime dateTimeFrom) {
        this.dateTimeFrom = dateTimeFrom;
    }

    public GenerateUnitedNettingReportRequest dateTimeTo(OffsetDateTime dateTimeTo) {
        this.dateTimeTo = dateTimeTo;
        return this;
    }

    /**
     * {% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Конец периода, включительно. Максимальный период — 1 год. 
     * @return dateTimeTo
     */
    @Nullable
    @Schema(name = "dateTimeTo", description = "{% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Конец периода, включительно. Максимальный период — 1 год. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DATE_TIME_TO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getDateTimeTo() {
        return dateTimeTo;
    }

    @JsonProperty(JSON_PROPERTY_DATE_TIME_TO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setDateTimeTo(OffsetDateTime dateTimeTo) {
        this.dateTimeTo = dateTimeTo;
    }

    public GenerateUnitedNettingReportRequest dateFrom(LocalDate dateFrom) {
        this.dateFrom = dateFrom;
        return this;
    }

    /**
     * Начало периода, включительно.
     * @return dateFrom
     */
    @Nullable
    @Schema(name = "dateFrom", description = "Начало периода, включительно.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DATE_FROM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public LocalDate getDateFrom() {
        return dateFrom;
    }

    @JsonProperty(JSON_PROPERTY_DATE_FROM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public void setDateFrom(LocalDate dateFrom) {
        this.dateFrom = dateFrom;
    }

    public GenerateUnitedNettingReportRequest dateTo(LocalDate dateTo) {
        this.dateTo = dateTo;
        return this;
    }

    /**
     * Конец периода, включительно. Максимальный период — 1 год.
     * @return dateTo
     */
    @Nullable
    @Schema(name = "dateTo", description = "Конец периода, включительно. Максимальный период — 1 год.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DATE_TO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public LocalDate getDateTo() {
        return dateTo;
    }

    @JsonProperty(JSON_PROPERTY_DATE_TO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public void setDateTo(LocalDate dateTo) {
        this.dateTo = dateTo;
    }

    public GenerateUnitedNettingReportRequest bankOrderId(Long bankOrderId) {
        this.bankOrderId = bankOrderId;
        return this;
    }

    /**
     * Номер платежного поручения.
     * @return bankOrderId
     */
    @Nullable
    @Schema(name = "bankOrderId", description = "Номер платежного поручения.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_BANK_ORDER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getBankOrderId() {
        return bankOrderId;
    }

    @JsonProperty(JSON_PROPERTY_BANK_ORDER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBankOrderId(Long bankOrderId) {
        this.bankOrderId = bankOrderId;
    }

    public GenerateUnitedNettingReportRequest bankOrderDateTime(OffsetDateTime bankOrderDateTime) {
        this.bankOrderDateTime = bankOrderDateTime;
        return this;
    }

    /**
     * Дата платежного поручения.
     * @return bankOrderDateTime
     */
    @Nullable
    @Schema(name = "bankOrderDateTime", description = "Дата платежного поручения.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_BANK_ORDER_DATE_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getBankOrderDateTime() {
        return bankOrderDateTime;
    }

    @JsonProperty(JSON_PROPERTY_BANK_ORDER_DATE_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setBankOrderDateTime(OffsetDateTime bankOrderDateTime) {
        this.bankOrderDateTime = bankOrderDateTime;
    }

    public GenerateUnitedNettingReportRequest placementPrograms(List<PlacementType> placementPrograms) {
        this.placementPrograms = placementPrograms;
        return this;
    }

    public GenerateUnitedNettingReportRequest addPlacementProgramsItem(PlacementType placementProgramsItem) {
        if (this.placementPrograms == null) {
            this.placementPrograms = new ArrayList<>();
        }
        this.placementPrograms.add(placementProgramsItem);
        return this;
    }

    /**
     * Список моделей, которые нужны в отчете. 
     * @return placementPrograms
     */
    @Nullable
    @Schema(name = "placementPrograms", description = "Список моделей, которые нужны в отчете. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PLACEMENT_PROGRAMS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<PlacementType> getPlacementPrograms() {
        return placementPrograms;
    }

    @JsonProperty(JSON_PROPERTY_PLACEMENT_PROGRAMS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPlacementPrograms(List<PlacementType> placementPrograms) {
        this.placementPrograms = placementPrograms;
    }

    public GenerateUnitedNettingReportRequest inns(List<String> inns) {
        this.inns = inns;
        return this;
    }

    public GenerateUnitedNettingReportRequest addInnsItem(String innsItem) {
        if (this.inns == null) {
            this.inns = new ArrayList<>();
        }
        this.inns.add(innsItem);
        return this;
    }

    /**
     * Список ИНН, которые нужны в отчете.
     * @return inns
     */
    @Nullable
    @Schema(name = "inns", description = "Список ИНН, которые нужны в отчете.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_INNS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getInns() {
        return inns;
    }

    @JsonProperty(JSON_PROPERTY_INNS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInns(List<String> inns) {
        this.inns = inns;
    }

    public GenerateUnitedNettingReportRequest campaignIds(List<Long> campaignIds) {
        this.campaignIds = campaignIds;
        return this;
    }

    public GenerateUnitedNettingReportRequest addCampaignIdsItem(Long campaignIdsItem) {
        if (this.campaignIds == null) {
            this.campaignIds = new ArrayList<>();
        }
        this.campaignIds.add(campaignIdsItem);
        return this;
    }

    /**
     * Список магазинов, которые нужны в отчете.
     * @return campaignIds
     */
    @Nullable
    @Schema(name = "campaignIds", description = "Список магазинов, которые нужны в отчете.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CAMPAIGN_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<Long> getCampaignIds() {
        return campaignIds;
    }

    @JsonProperty(JSON_PROPERTY_CAMPAIGN_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCampaignIds(List<Long> campaignIds) {
        this.campaignIds = campaignIds;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GenerateUnitedNettingReportRequest generateUnitedNettingReportRequest = (GenerateUnitedNettingReportRequest) o;
        return Objects.equals(this.businessId, generateUnitedNettingReportRequest.businessId) &&
            Objects.equals(this.dateTimeFrom, generateUnitedNettingReportRequest.dateTimeFrom) &&
            Objects.equals(this.dateTimeTo, generateUnitedNettingReportRequest.dateTimeTo) &&
            Objects.equals(this.dateFrom, generateUnitedNettingReportRequest.dateFrom) &&
            Objects.equals(this.dateTo, generateUnitedNettingReportRequest.dateTo) &&
            Objects.equals(this.bankOrderId, generateUnitedNettingReportRequest.bankOrderId) &&
            Objects.equals(this.bankOrderDateTime, generateUnitedNettingReportRequest.bankOrderDateTime) &&
            Objects.equals(this.placementPrograms, generateUnitedNettingReportRequest.placementPrograms) &&
            Objects.equals(this.inns, generateUnitedNettingReportRequest.inns) &&
            Objects.equals(this.campaignIds, generateUnitedNettingReportRequest.campaignIds);
    }

    @Override
    public int hashCode() {
        return Objects.hash(businessId, dateTimeFrom, dateTimeTo, dateFrom, dateTo, bankOrderId, bankOrderDateTime, placementPrograms, inns, campaignIds);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GenerateUnitedNettingReportRequest {\n");
        sb.append("    businessId: ").append(toIndentedString(businessId)).append("\n");
        sb.append("    dateTimeFrom: ").append(toIndentedString(dateTimeFrom)).append("\n");
        sb.append("    dateTimeTo: ").append(toIndentedString(dateTimeTo)).append("\n");
        sb.append("    dateFrom: ").append(toIndentedString(dateFrom)).append("\n");
        sb.append("    dateTo: ").append(toIndentedString(dateTo)).append("\n");
        sb.append("    bankOrderId: ").append(toIndentedString(bankOrderId)).append("\n");
        sb.append("    bankOrderDateTime: ").append(toIndentedString(bankOrderDateTime)).append("\n");
        sb.append("    placementPrograms: ").append(toIndentedString(placementPrograms)).append("\n");
        sb.append("    inns: ").append(toIndentedString(inns)).append("\n");
        sb.append("    campaignIds: ").append(toIndentedString(campaignIds)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

