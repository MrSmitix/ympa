/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.PromoOfferUpdateWarningCodeType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Предупреждение, которое появилось при добавлении товара в акцию или изменении его цен.
 */
@JsonPropertyOrder({
  PromoOfferUpdateWarningDTO.JSON_PROPERTY_CODE,
  PromoOfferUpdateWarningDTO.JSON_PROPERTY_CAMPAIGN_IDS
})
@JsonTypeName("PromoOfferUpdateWarningDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class PromoOfferUpdateWarningDTO {
    public static final String JSON_PROPERTY_CODE = "code";
    private PromoOfferUpdateWarningCodeType code;

    public static final String JSON_PROPERTY_CAMPAIGN_IDS = "campaignIds";
    private List<Long> campaignIds = null;

    public PromoOfferUpdateWarningDTO(PromoOfferUpdateWarningCodeType code) {
        this.code = code;
    }

    public PromoOfferUpdateWarningDTO code(PromoOfferUpdateWarningCodeType code) {
        this.code = code;
        return this;
    }

    /**
     * Get code
     * @return code
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_CODE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public PromoOfferUpdateWarningCodeType getCode() {
        return code;
    }

    @JsonProperty(JSON_PROPERTY_CODE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCode(PromoOfferUpdateWarningCodeType code) {
        this.code = code;
    }

    public PromoOfferUpdateWarningDTO campaignIds(List<Long> campaignIds) {
        this.campaignIds = campaignIds;
        return this;
    }

    public PromoOfferUpdateWarningDTO addCampaignIdsItem(Long campaignIdsItem) {
        if (this.campaignIds == null) {
            this.campaignIds = new ArrayList<>();
        }
        this.campaignIds.add(campaignIdsItem);
        return this;
    }

    /**
     * Идентификаторы магазинов в кабинете, для которых получены предупреждения.  Не возвращается, если предупреждения действуют для всех магазинов в кабинете. 
     * @return campaignIds
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_CAMPAIGN_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<Long> getCampaignIds() {
        return campaignIds;
    }

    @JsonProperty(JSON_PROPERTY_CAMPAIGN_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCampaignIds(List<Long> campaignIds) {
        this.campaignIds = campaignIds;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PromoOfferUpdateWarningDTO promoOfferUpdateWarningDTO = (PromoOfferUpdateWarningDTO) o;
        return Objects.equals(this.code, promoOfferUpdateWarningDTO.code) &&
            Objects.equals(this.campaignIds, promoOfferUpdateWarningDTO.campaignIds);
    }

    @Override
    public int hashCode() {
        return Objects.hash(code, campaignIds);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PromoOfferUpdateWarningDTO {\n");
        sb.append("    code: ").append(toIndentedString(code)).append("\n");
        sb.append("    campaignIds: ").append(toIndentedString(campaignIds)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

