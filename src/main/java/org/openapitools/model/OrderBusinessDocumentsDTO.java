/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.DocumentDTO;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Информация о документах. 
 */
@JsonPropertyOrder({
  OrderBusinessDocumentsDTO.JSON_PROPERTY_UPD,
  OrderBusinessDocumentsDTO.JSON_PROPERTY_UKD,
  OrderBusinessDocumentsDTO.JSON_PROPERTY_TORG_TWELVE,
  OrderBusinessDocumentsDTO.JSON_PROPERTY_SF,
  OrderBusinessDocumentsDTO.JSON_PROPERTY_KSF
})
@JsonTypeName("OrderBusinessDocumentsDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class OrderBusinessDocumentsDTO {
    public static final String JSON_PROPERTY_UPD = "upd";
    private DocumentDTO upd;

    public static final String JSON_PROPERTY_UKD = "ukd";
    private DocumentDTO ukd;

    public static final String JSON_PROPERTY_TORG_TWELVE = "torgTwelve";
    private DocumentDTO torgTwelve;

    public static final String JSON_PROPERTY_SF = "sf";
    private DocumentDTO sf;

    public static final String JSON_PROPERTY_KSF = "ksf";
    private DocumentDTO ksf;

    public OrderBusinessDocumentsDTO() {
    }

    public OrderBusinessDocumentsDTO upd(DocumentDTO upd) {
        this.upd = upd;
        return this;
    }

    /**
     * Get upd
     * @return upd
     */
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_UPD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public DocumentDTO getUpd() {
        return upd;
    }

    @JsonProperty(JSON_PROPERTY_UPD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUpd(DocumentDTO upd) {
        this.upd = upd;
    }

    public OrderBusinessDocumentsDTO ukd(DocumentDTO ukd) {
        this.ukd = ukd;
        return this;
    }

    /**
     * Get ukd
     * @return ukd
     */
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_UKD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public DocumentDTO getUkd() {
        return ukd;
    }

    @JsonProperty(JSON_PROPERTY_UKD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUkd(DocumentDTO ukd) {
        this.ukd = ukd;
    }

    public OrderBusinessDocumentsDTO torgTwelve(DocumentDTO torgTwelve) {
        this.torgTwelve = torgTwelve;
        return this;
    }

    /**
     * Get torgTwelve
     * @return torgTwelve
     */
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_TORG_TWELVE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public DocumentDTO getTorgTwelve() {
        return torgTwelve;
    }

    @JsonProperty(JSON_PROPERTY_TORG_TWELVE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTorgTwelve(DocumentDTO torgTwelve) {
        this.torgTwelve = torgTwelve;
    }

    public OrderBusinessDocumentsDTO sf(DocumentDTO sf) {
        this.sf = sf;
        return this;
    }

    /**
     * Get sf
     * @return sf
     */
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_SF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public DocumentDTO getSf() {
        return sf;
    }

    @JsonProperty(JSON_PROPERTY_SF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSf(DocumentDTO sf) {
        this.sf = sf;
    }

    public OrderBusinessDocumentsDTO ksf(DocumentDTO ksf) {
        this.ksf = ksf;
        return this;
    }

    /**
     * Get ksf
     * @return ksf
     */
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_KSF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public DocumentDTO getKsf() {
        return ksf;
    }

    @JsonProperty(JSON_PROPERTY_KSF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setKsf(DocumentDTO ksf) {
        this.ksf = ksf;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OrderBusinessDocumentsDTO orderBusinessDocumentsDTO = (OrderBusinessDocumentsDTO) o;
        return Objects.equals(this.upd, orderBusinessDocumentsDTO.upd) &&
            Objects.equals(this.ukd, orderBusinessDocumentsDTO.ukd) &&
            Objects.equals(this.torgTwelve, orderBusinessDocumentsDTO.torgTwelve) &&
            Objects.equals(this.sf, orderBusinessDocumentsDTO.sf) &&
            Objects.equals(this.ksf, orderBusinessDocumentsDTO.ksf);
    }

    @Override
    public int hashCode() {
        return Objects.hash(upd, ukd, torgTwelve, sf, ksf);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OrderBusinessDocumentsDTO {\n");
        sb.append("    upd: ").append(toIndentedString(upd)).append("\n");
        sb.append("    ukd: ").append(toIndentedString(ukd)).append("\n");
        sb.append("    torgTwelve: ").append(toIndentedString(torgTwelve)).append("\n");
        sb.append("    sf: ").append(toIndentedString(sf)).append("\n");
        sb.append("    ksf: ").append(toIndentedString(ksf)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

