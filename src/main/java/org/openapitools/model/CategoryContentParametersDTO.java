/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.CategoryParameterDTO;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Информация о параметрах категории.
 */
@JsonPropertyOrder({
  CategoryContentParametersDTO.JSON_PROPERTY_CATEGORY_ID,
  CategoryContentParametersDTO.JSON_PROPERTY_PARAMETERS
})
@JsonTypeName("CategoryContentParametersDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class CategoryContentParametersDTO {
    public static final String JSON_PROPERTY_CATEGORY_ID = "categoryId";
    private Integer categoryId;

    public static final String JSON_PROPERTY_PARAMETERS = "parameters";
    private List<@Valid CategoryParameterDTO> parameters = null;

    public CategoryContentParametersDTO(Integer categoryId) {
        this.categoryId = categoryId;
    }

    public CategoryContentParametersDTO categoryId(Integer categoryId) {
        this.categoryId = categoryId;
        return this;
    }

    /**
     * Идентификатор категории на Маркете. Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).
     * @return categoryId
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_CATEGORY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getCategoryId() {
        return categoryId;
    }

    @JsonProperty(JSON_PROPERTY_CATEGORY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCategoryId(Integer categoryId) {
        this.categoryId = categoryId;
    }

    public CategoryContentParametersDTO parameters(List<@Valid CategoryParameterDTO> parameters) {
        this.parameters = parameters;
        return this;
    }

    public CategoryContentParametersDTO addParametersItem(CategoryParameterDTO parametersItem) {
        if (this.parameters == null) {
            this.parameters = new ArrayList<>();
        }
        this.parameters.add(parametersItem);
        return this;
    }

    /**
     * Список характеристик.
     * @return parameters
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_PARAMETERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid CategoryParameterDTO> getParameters() {
        return parameters;
    }

    @JsonProperty(JSON_PROPERTY_PARAMETERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setParameters(List<@Valid CategoryParameterDTO> parameters) {
        this.parameters = parameters;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CategoryContentParametersDTO categoryContentParametersDTO = (CategoryContentParametersDTO) o;
        return Objects.equals(this.categoryId, categoryContentParametersDTO.categoryId) &&
            Objects.equals(this.parameters, categoryContentParametersDTO.parameters);
    }

    @Override
    public int hashCode() {
        return Objects.hash(categoryId, parameters);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CategoryContentParametersDTO {\n");
        sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
        sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

