/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.OfferCampaignStatusType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Статус товара в магазине.
 */
@Schema(name = "OfferCampaignStatusDTO", description = "Статус товара в магазине.")
@JsonPropertyOrder({
  OfferCampaignStatusDTO.JSON_PROPERTY_CAMPAIGN_ID,
  OfferCampaignStatusDTO.JSON_PROPERTY_STATUS
})
@JsonTypeName("OfferCampaignStatusDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class OfferCampaignStatusDTO {
    public static final String JSON_PROPERTY_CAMPAIGN_ID = "campaignId";
    private Long campaignId;

    public static final String JSON_PROPERTY_STATUS = "status";
    private OfferCampaignStatusType status;

    public OfferCampaignStatusDTO(Long campaignId, OfferCampaignStatusType status) {
        this.campaignId = campaignId;
        this.status = status;
    }

    public OfferCampaignStatusDTO campaignId(Long campaignId) {
        this.campaignId = campaignId;
        return this;
    }

    /**
     * Идентификатор кампании. 
     * @return campaignId
     */
    @NotNull
    @Schema(name = "campaignId", description = "Идентификатор кампании. ", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_CAMPAIGN_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Long getCampaignId() {
        return campaignId;
    }

    @JsonProperty(JSON_PROPERTY_CAMPAIGN_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCampaignId(Long campaignId) {
        this.campaignId = campaignId;
    }

    public OfferCampaignStatusDTO status(OfferCampaignStatusType status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     * @return status
     */
    @NotNull
    @Schema(name = "status", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public OfferCampaignStatusType getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStatus(OfferCampaignStatusType status) {
        this.status = status;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OfferCampaignStatusDTO offerCampaignStatusDTO = (OfferCampaignStatusDTO) o;
        return Objects.equals(this.campaignId, offerCampaignStatusDTO.campaignId) &&
            Objects.equals(this.status, offerCampaignStatusDTO.status);
    }

    @Override
    public int hashCode() {
        return Objects.hash(campaignId, status);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OfferCampaignStatusDTO {\n");
        sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

