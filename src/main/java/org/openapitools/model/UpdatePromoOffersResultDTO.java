/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.RejectedPromoOfferUpdateDTO;
import org.openapitools.model.WarningPromoOfferUpdateDTO;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Ошибки и предупреждения, которые появились при добавлении товаров в акцию.
 */
@Schema(name = "UpdatePromoOffersResultDTO", description = "Ошибки и предупреждения, которые появились при добавлении товаров в акцию.")
@JsonPropertyOrder({
  UpdatePromoOffersResultDTO.JSON_PROPERTY_REJECTED_OFFERS,
  UpdatePromoOffersResultDTO.JSON_PROPERTY_WARNING_OFFERS
})
@JsonTypeName("UpdatePromoOffersResultDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class UpdatePromoOffersResultDTO {
    public static final String JSON_PROPERTY_REJECTED_OFFERS = "rejectedOffers";
    private List<@Valid RejectedPromoOfferUpdateDTO> rejectedOffers = null;

    public static final String JSON_PROPERTY_WARNING_OFFERS = "warningOffers";
    private List<@Valid WarningPromoOfferUpdateDTO> warningOffers = null;

    public UpdatePromoOffersResultDTO() {
    }

    public UpdatePromoOffersResultDTO rejectedOffers(List<@Valid RejectedPromoOfferUpdateDTO> rejectedOffers) {
        this.rejectedOffers = rejectedOffers;
        return this;
    }

    public UpdatePromoOffersResultDTO addRejectedOffersItem(RejectedPromoOfferUpdateDTO rejectedOffersItem) {
        if (this.rejectedOffers == null) {
            this.rejectedOffers = new ArrayList<>();
        }
        this.rejectedOffers.add(rejectedOffersItem);
        return this;
    }

    /**
     * Изменения, которые были отклонены.  Возвращается, только если есть отклоненные изменения. 
     * @return rejectedOffers
     */
    @Nullable
    @Schema(name = "rejectedOffers", description = "Изменения, которые были отклонены.  Возвращается, только если есть отклоненные изменения. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_REJECTED_OFFERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid RejectedPromoOfferUpdateDTO> getRejectedOffers() {
        return rejectedOffers;
    }

    @JsonProperty(JSON_PROPERTY_REJECTED_OFFERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRejectedOffers(List<@Valid RejectedPromoOfferUpdateDTO> rejectedOffers) {
        this.rejectedOffers = rejectedOffers;
    }

    public UpdatePromoOffersResultDTO warningOffers(List<@Valid WarningPromoOfferUpdateDTO> warningOffers) {
        this.warningOffers = warningOffers;
        return this;
    }

    public UpdatePromoOffersResultDTO addWarningOffersItem(WarningPromoOfferUpdateDTO warningOffersItem) {
        if (this.warningOffers == null) {
            this.warningOffers = new ArrayList<>();
        }
        this.warningOffers.add(warningOffersItem);
        return this;
    }

    /**
     * Изменения, по которым есть предупреждения. Они информируют о возможных проблемах. Информация о товарах обновится.  Возвращается, только если есть предупреждения. 
     * @return warningOffers
     */
    @Nullable
    @Schema(name = "warningOffers", description = "Изменения, по которым есть предупреждения. Они информируют о возможных проблемах. Информация о товарах обновится.  Возвращается, только если есть предупреждения. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_WARNING_OFFERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid WarningPromoOfferUpdateDTO> getWarningOffers() {
        return warningOffers;
    }

    @JsonProperty(JSON_PROPERTY_WARNING_OFFERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWarningOffers(List<@Valid WarningPromoOfferUpdateDTO> warningOffers) {
        this.warningOffers = warningOffers;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdatePromoOffersResultDTO updatePromoOffersResultDTO = (UpdatePromoOffersResultDTO) o;
        return Objects.equals(this.rejectedOffers, updatePromoOffersResultDTO.rejectedOffers) &&
            Objects.equals(this.warningOffers, updatePromoOffersResultDTO.warningOffers);
    }

    @Override
    public int hashCode() {
        return Objects.hash(rejectedOffers, warningOffers);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UpdatePromoOffersResultDTO {\n");
        sb.append("    rejectedOffers: ").append(toIndentedString(rejectedOffers)).append("\n");
        sb.append("    warningOffers: ").append(toIndentedString(warningOffers)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

