/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.time.OffsetDateTime;
import org.openapitools.model.GoodsFeedbackDescriptionDTO;
import org.openapitools.model.GoodsFeedbackIdentifiersDTO;
import org.openapitools.model.GoodsFeedbackMediaDTO;
import org.openapitools.model.GoodsFeedbackStatisticsDTO;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Отзыв о товаре.
 */
@Schema(name = "GoodsFeedbackDTO", description = "Отзыв о товаре.")
@JsonPropertyOrder({
  GoodsFeedbackDTO.JSON_PROPERTY_FEEDBACK_ID,
  GoodsFeedbackDTO.JSON_PROPERTY_CREATED_AT,
  GoodsFeedbackDTO.JSON_PROPERTY_NEED_REACTION,
  GoodsFeedbackDTO.JSON_PROPERTY_IDENTIFIERS,
  GoodsFeedbackDTO.JSON_PROPERTY_AUTHOR,
  GoodsFeedbackDTO.JSON_PROPERTY_DESCRIPTION,
  GoodsFeedbackDTO.JSON_PROPERTY_MEDIA,
  GoodsFeedbackDTO.JSON_PROPERTY_STATISTICS
})
@JsonTypeName("GoodsFeedbackDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class GoodsFeedbackDTO {
    public static final String JSON_PROPERTY_FEEDBACK_ID = "feedbackId";
    private Long feedbackId;

    public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
    private OffsetDateTime createdAt;

    public static final String JSON_PROPERTY_NEED_REACTION = "needReaction";
    private Boolean needReaction;

    public static final String JSON_PROPERTY_IDENTIFIERS = "identifiers";
    private GoodsFeedbackIdentifiersDTO identifiers;

    public static final String JSON_PROPERTY_AUTHOR = "author";
    private String author;

    public static final String JSON_PROPERTY_DESCRIPTION = "description";
    private GoodsFeedbackDescriptionDTO description;

    public static final String JSON_PROPERTY_MEDIA = "media";
    private GoodsFeedbackMediaDTO media;

    public static final String JSON_PROPERTY_STATISTICS = "statistics";
    private GoodsFeedbackStatisticsDTO statistics;

    public GoodsFeedbackDTO(Long feedbackId, OffsetDateTime createdAt, Boolean needReaction, GoodsFeedbackIdentifiersDTO identifiers, GoodsFeedbackStatisticsDTO statistics) {
        this.feedbackId = feedbackId;
        this.createdAt = createdAt;
        this.needReaction = needReaction;
        this.identifiers = identifiers;
        this.statistics = statistics;
    }

    public GoodsFeedbackDTO feedbackId(Long feedbackId) {
        this.feedbackId = feedbackId;
        return this;
    }

    /**
     * Идентификатор отзыва. 
     * @return feedbackId
     */
    @NotNull
    @Schema(name = "feedbackId", description = "Идентификатор отзыва. ", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_FEEDBACK_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Long getFeedbackId() {
        return feedbackId;
    }

    @JsonProperty(JSON_PROPERTY_FEEDBACK_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setFeedbackId(Long feedbackId) {
        this.feedbackId = feedbackId;
    }

    public GoodsFeedbackDTO createdAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Дата и время создания отзыва.
     * @return createdAt
     */
    @NotNull
    @Schema(name = "createdAt", description = "Дата и время создания отзыва.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public GoodsFeedbackDTO needReaction(Boolean needReaction) {
        this.needReaction = needReaction;
        return this;
    }

    /**
     * Нужен ли ответ на отзыв.
     * @return needReaction
     */
    @NotNull
    @Schema(name = "needReaction", description = "Нужен ли ответ на отзыв.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_NEED_REACTION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getNeedReaction() {
        return needReaction;
    }

    @JsonProperty(JSON_PROPERTY_NEED_REACTION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNeedReaction(Boolean needReaction) {
        this.needReaction = needReaction;
    }

    public GoodsFeedbackDTO identifiers(GoodsFeedbackIdentifiersDTO identifiers) {
        this.identifiers = identifiers;
        return this;
    }

    /**
     * Get identifiers
     * @return identifiers
     */
    @Valid
    @NotNull
    @Schema(name = "identifiers", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_IDENTIFIERS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public GoodsFeedbackIdentifiersDTO getIdentifiers() {
        return identifiers;
    }

    @JsonProperty(JSON_PROPERTY_IDENTIFIERS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIdentifiers(GoodsFeedbackIdentifiersDTO identifiers) {
        this.identifiers = identifiers;
    }

    public GoodsFeedbackDTO author(String author) {
        this.author = author;
        return this;
    }

    /**
     * Имя автора отзыва.
     * @return author
     */
    @Nullable
    @Schema(name = "author", description = "Имя автора отзыва.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_AUTHOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAuthor() {
        return author;
    }

    @JsonProperty(JSON_PROPERTY_AUTHOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAuthor(String author) {
        this.author = author;
    }

    public GoodsFeedbackDTO description(GoodsFeedbackDescriptionDTO description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     * @return description
     */
    @Valid
    @Nullable
    @Schema(name = "description", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public GoodsFeedbackDescriptionDTO getDescription() {
        return description;
    }

    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDescription(GoodsFeedbackDescriptionDTO description) {
        this.description = description;
    }

    public GoodsFeedbackDTO media(GoodsFeedbackMediaDTO media) {
        this.media = media;
        return this;
    }

    /**
     * Get media
     * @return media
     */
    @Valid
    @Nullable
    @Schema(name = "media", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_MEDIA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public GoodsFeedbackMediaDTO getMedia() {
        return media;
    }

    @JsonProperty(JSON_PROPERTY_MEDIA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMedia(GoodsFeedbackMediaDTO media) {
        this.media = media;
    }

    public GoodsFeedbackDTO statistics(GoodsFeedbackStatisticsDTO statistics) {
        this.statistics = statistics;
        return this;
    }

    /**
     * Get statistics
     * @return statistics
     */
    @Valid
    @NotNull
    @Schema(name = "statistics", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_STATISTICS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public GoodsFeedbackStatisticsDTO getStatistics() {
        return statistics;
    }

    @JsonProperty(JSON_PROPERTY_STATISTICS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStatistics(GoodsFeedbackStatisticsDTO statistics) {
        this.statistics = statistics;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GoodsFeedbackDTO goodsFeedbackDTO = (GoodsFeedbackDTO) o;
        return Objects.equals(this.feedbackId, goodsFeedbackDTO.feedbackId) &&
            Objects.equals(this.createdAt, goodsFeedbackDTO.createdAt) &&
            Objects.equals(this.needReaction, goodsFeedbackDTO.needReaction) &&
            Objects.equals(this.identifiers, goodsFeedbackDTO.identifiers) &&
            Objects.equals(this.author, goodsFeedbackDTO.author) &&
            Objects.equals(this.description, goodsFeedbackDTO.description) &&
            Objects.equals(this.media, goodsFeedbackDTO.media) &&
            Objects.equals(this.statistics, goodsFeedbackDTO.statistics);
    }

    @Override
    public int hashCode() {
        return Objects.hash(feedbackId, createdAt, needReaction, identifiers, author, description, media, statistics);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GoodsFeedbackDTO {\n");
        sb.append("    feedbackId: ").append(toIndentedString(feedbackId)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    needReaction: ").append(toIndentedString(needReaction)).append("\n");
        sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
        sb.append("    author: ").append(toIndentedString(author)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    media: ").append(toIndentedString(media)).append("\n");
        sb.append("    statistics: ").append(toIndentedString(statistics)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

