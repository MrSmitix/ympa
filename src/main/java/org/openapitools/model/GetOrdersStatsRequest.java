/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.OrderStatsStatusType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Запрос информации по заказам.
 */
@JsonPropertyOrder({
  GetOrdersStatsRequest.JSON_PROPERTY_DATE_FROM,
  GetOrdersStatsRequest.JSON_PROPERTY_DATE_TO,
  GetOrdersStatsRequest.JSON_PROPERTY_UPDATE_FROM,
  GetOrdersStatsRequest.JSON_PROPERTY_UPDATE_TO,
  GetOrdersStatsRequest.JSON_PROPERTY_ORDERS,
  GetOrdersStatsRequest.JSON_PROPERTY_STATUSES,
  GetOrdersStatsRequest.JSON_PROPERTY_HAS_CIS
})
@JsonTypeName("GetOrdersStatsRequest")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class GetOrdersStatsRequest {
    public static final String JSON_PROPERTY_DATE_FROM = "dateFrom";
    private LocalDate dateFrom;

    public static final String JSON_PROPERTY_DATE_TO = "dateTo";
    private LocalDate dateTo;

    public static final String JSON_PROPERTY_UPDATE_FROM = "updateFrom";
    private LocalDate updateFrom;

    public static final String JSON_PROPERTY_UPDATE_TO = "updateTo";
    private LocalDate updateTo;

    public static final String JSON_PROPERTY_ORDERS = "orders";
    private List<Long> orders = null;

    public static final String JSON_PROPERTY_STATUSES = "statuses";
    private List<OrderStatsStatusType> statuses = null;

    public static final String JSON_PROPERTY_HAS_CIS = "hasCis";
    private Boolean hasCis;

    public GetOrdersStatsRequest() {
    }

    public GetOrdersStatsRequest dateFrom(LocalDate dateFrom) {
        this.dateFrom = dateFrom;
        return this;
    }

    /**
     * Начальная дата, когда заказ был сформирован.  Формат даты: &#x60;ГГГГ‑ММ‑ДД&#x60;.  Нельзя использовать вместе с параметрами &#x60;updateFrom&#x60; и &#x60;updateTo&#x60;. 
     * @return dateFrom
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DATE_FROM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public LocalDate getDateFrom() {
        return dateFrom;
    }

    @JsonProperty(JSON_PROPERTY_DATE_FROM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public void setDateFrom(LocalDate dateFrom) {
        this.dateFrom = dateFrom;
    }

    public GetOrdersStatsRequest dateTo(LocalDate dateTo) {
        this.dateTo = dateTo;
        return this;
    }

    /**
     * Конечная дата, когда заказ был сформирован.  Формат даты: &#x60;ГГГГ‑ММ‑ДД&#x60;.  Нельзя использовать вместе с параметрами &#x60;updateFrom&#x60; и &#x60;updateTo&#x60;. 
     * @return dateTo
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DATE_TO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public LocalDate getDateTo() {
        return dateTo;
    }

    @JsonProperty(JSON_PROPERTY_DATE_TO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public void setDateTo(LocalDate dateTo) {
        this.dateTo = dateTo;
    }

    public GetOrdersStatsRequest updateFrom(LocalDate updateFrom) {
        this.updateFrom = updateFrom;
        return this;
    }

    /**
     * Начальная дата периода, за который были изменения статуса заказа.  Формат даты: &#x60;ГГГГ‑ММ‑ДД&#x60;.  Нельзя использовать вместе с параметрами &#x60;dateFrom&#x60; и &#x60;dateTo&#x60;. 
     * @return updateFrom
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_UPDATE_FROM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public LocalDate getUpdateFrom() {
        return updateFrom;
    }

    @JsonProperty(JSON_PROPERTY_UPDATE_FROM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public void setUpdateFrom(LocalDate updateFrom) {
        this.updateFrom = updateFrom;
    }

    public GetOrdersStatsRequest updateTo(LocalDate updateTo) {
        this.updateTo = updateTo;
        return this;
    }

    /**
     * Конечная дата периода, за который были изменения статуса заказа.  Формат даты: &#x60;ГГГГ‑ММ‑ДД&#x60;.  Нельзя использовать вместе с параметрами &#x60;dateFrom&#x60; и &#x60;dateTo&#x60;. 
     * @return updateTo
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_UPDATE_TO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public LocalDate getUpdateTo() {
        return updateTo;
    }

    @JsonProperty(JSON_PROPERTY_UPDATE_TO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public void setUpdateTo(LocalDate updateTo) {
        this.updateTo = updateTo;
    }

    public GetOrdersStatsRequest orders(List<Long> orders) {
        this.orders = orders;
        return this;
    }

    public GetOrdersStatsRequest addOrdersItem(Long ordersItem) {
        if (this.orders == null) {
            this.orders = new ArrayList<>();
        }
        this.orders.add(ordersItem);
        return this;
    }

    /**
     * Список идентификаторов заказов.
     * @return orders
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_ORDERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<Long> getOrders() {
        return orders;
    }

    @JsonProperty(JSON_PROPERTY_ORDERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOrders(List<Long> orders) {
        this.orders = orders;
    }

    public GetOrdersStatsRequest statuses(List<OrderStatsStatusType> statuses) {
        this.statuses = statuses;
        return this;
    }

    public GetOrdersStatsRequest addStatusesItem(OrderStatsStatusType statusesItem) {
        if (this.statuses == null) {
            this.statuses = new ArrayList<>();
        }
        this.statuses.add(statusesItem);
        return this;
    }

    /**
     * Список статусов заказов.
     * @return statuses
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_STATUSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<OrderStatsStatusType> getStatuses() {
        return statuses;
    }

    @JsonProperty(JSON_PROPERTY_STATUSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStatuses(List<OrderStatsStatusType> statuses) {
        this.statuses = statuses;
    }

    public GetOrdersStatsRequest hasCis(Boolean hasCis) {
        this.hasCis = hasCis;
        return this;
    }

    /**
     * Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации [в системе «Честный ЗНАК»](https://честныйзнак.рф/):  * &#x60;true&#x60; — да. * &#x60;false&#x60; — нет. Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям. 
     * @return hasCis
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_HAS_CIS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getHasCis() {
        return hasCis;
    }

    @JsonProperty(JSON_PROPERTY_HAS_CIS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHasCis(Boolean hasCis) {
        this.hasCis = hasCis;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetOrdersStatsRequest getOrdersStatsRequest = (GetOrdersStatsRequest) o;
        return Objects.equals(this.dateFrom, getOrdersStatsRequest.dateFrom) &&
            Objects.equals(this.dateTo, getOrdersStatsRequest.dateTo) &&
            Objects.equals(this.updateFrom, getOrdersStatsRequest.updateFrom) &&
            Objects.equals(this.updateTo, getOrdersStatsRequest.updateTo) &&
            Objects.equals(this.orders, getOrdersStatsRequest.orders) &&
            Objects.equals(this.statuses, getOrdersStatsRequest.statuses) &&
            Objects.equals(this.hasCis, getOrdersStatsRequest.hasCis);
    }

    @Override
    public int hashCode() {
        return Objects.hash(dateFrom, dateTo, updateFrom, updateTo, orders, statuses, hasCis);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetOrdersStatsRequest {\n");
        sb.append("    dateFrom: ").append(toIndentedString(dateFrom)).append("\n");
        sb.append("    dateTo: ").append(toIndentedString(dateTo)).append("\n");
        sb.append("    updateFrom: ").append(toIndentedString(updateFrom)).append("\n");
        sb.append("    updateTo: ").append(toIndentedString(updateTo)).append("\n");
        sb.append("    orders: ").append(toIndentedString(orders)).append("\n");
        sb.append("    statuses: ").append(toIndentedString(statuses)).append("\n");
        sb.append("    hasCis: ").append(toIndentedString(hasCis)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

