/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Данные, необходимые для генерации отчета.
 */
@Schema(name = "GeneratePricesReportRequest", description = "Данные, необходимые для генерации отчета.")
@JsonPropertyOrder({
  GeneratePricesReportRequest.JSON_PROPERTY_BUSINESS_ID,
  GeneratePricesReportRequest.JSON_PROPERTY_CAMPAIGN_ID,
  GeneratePricesReportRequest.JSON_PROPERTY_CATEGORY_IDS,
  GeneratePricesReportRequest.JSON_PROPERTY_CREATION_DATE_FROM,
  GeneratePricesReportRequest.JSON_PROPERTY_CREATION_DATE_TO
})
@JsonTypeName("GeneratePricesReportRequest")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class GeneratePricesReportRequest {
    public static final String JSON_PROPERTY_BUSINESS_ID = "businessId";
    private Long businessId;

    public static final String JSON_PROPERTY_CAMPAIGN_ID = "campaignId";
    private Long campaignId;

    public static final String JSON_PROPERTY_CATEGORY_IDS = "categoryIds";
    private List<Long> categoryIds = null;

    public static final String JSON_PROPERTY_CREATION_DATE_FROM = "creationDateFrom";
    private LocalDate creationDateFrom;

    public static final String JSON_PROPERTY_CREATION_DATE_TO = "creationDateTo";
    private LocalDate creationDateTo;

    public GeneratePricesReportRequest() {
    }

    public GeneratePricesReportRequest businessId(Long businessId) {
        this.businessId = businessId;
        return this;
    }

    /**
     * Идентификатор бизнеса.  В большинстве случаев обязателен. Не указывается, если задан &#x60;campaignId&#x60;. 
     * @return businessId
     */
    @Nullable
    @Schema(name = "businessId", description = "Идентификатор бизнеса.  В большинстве случаев обязателен. Не указывается, если задан `campaignId`. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_BUSINESS_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getBusinessId() {
        return businessId;
    }

    @JsonProperty(JSON_PROPERTY_BUSINESS_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBusinessId(Long businessId) {
        this.businessId = businessId;
    }

    public GeneratePricesReportRequest campaignId(Long campaignId) {
        this.campaignId = campaignId;
        return this;
    }

    /**
     * Идентификатор кампании.  Как правило, не используется. Передавайте только если в кабинете есть магазины с уникальными ценами и вы хотите получить отчет для них. В этом случае передавать &#x60;businessId&#x60; не нужно. 
     * @return campaignId
     */
    @Nullable
    @Schema(name = "campaignId", description = "Идентификатор кампании.  Как правило, не используется. Передавайте только если в кабинете есть магазины с уникальными ценами и вы хотите получить отчет для них. В этом случае передавать `businessId` не нужно. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CAMPAIGN_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getCampaignId() {
        return campaignId;
    }

    @JsonProperty(JSON_PROPERTY_CAMPAIGN_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCampaignId(Long campaignId) {
        this.campaignId = campaignId;
    }

    public GeneratePricesReportRequest categoryIds(List<Long> categoryIds) {
        this.categoryIds = categoryIds;
        return this;
    }

    public GeneratePricesReportRequest addCategoryIdsItem(Long categoryIdsItem) {
        if (this.categoryIds == null) {
            this.categoryIds = new ArrayList<>();
        }
        this.categoryIds.add(categoryIdsItem);
        return this;
    }

    /**
     * Фильтр по категориям на Маркете.
     * @return categoryIds
     */
    @Nullable
    @Schema(name = "categoryIds", description = "Фильтр по категориям на Маркете.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CATEGORY_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<Long> getCategoryIds() {
        return categoryIds;
    }

    @JsonProperty(JSON_PROPERTY_CATEGORY_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCategoryIds(List<Long> categoryIds) {
        this.categoryIds = categoryIds;
    }

    public GeneratePricesReportRequest creationDateFrom(LocalDate creationDateFrom) {
        this.creationDateFrom = creationDateFrom;
        return this;
    }

    /**
     * Фильтр по времени появления предложения — начало периода.  Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;. 
     * @return creationDateFrom
     */
    @Nullable
    @Schema(name = "creationDateFrom", description = "Фильтр по времени появления предложения — начало периода.  Формат даты: `ДД-ММ-ГГГГ`. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CREATION_DATE_FROM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public LocalDate getCreationDateFrom() {
        return creationDateFrom;
    }

    @JsonProperty(JSON_PROPERTY_CREATION_DATE_FROM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public void setCreationDateFrom(LocalDate creationDateFrom) {
        this.creationDateFrom = creationDateFrom;
    }

    public GeneratePricesReportRequest creationDateTo(LocalDate creationDateTo) {
        this.creationDateTo = creationDateTo;
        return this;
    }

    /**
     * Фильтр по времени появления предложения — окончание периода.  Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;. 
     * @return creationDateTo
     */
    @Nullable
    @Schema(name = "creationDateTo", description = "Фильтр по времени появления предложения — окончание периода.  Формат даты: `ДД-ММ-ГГГГ`. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CREATION_DATE_TO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public LocalDate getCreationDateTo() {
        return creationDateTo;
    }

    @JsonProperty(JSON_PROPERTY_CREATION_DATE_TO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public void setCreationDateTo(LocalDate creationDateTo) {
        this.creationDateTo = creationDateTo;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GeneratePricesReportRequest generatePricesReportRequest = (GeneratePricesReportRequest) o;
        return Objects.equals(this.businessId, generatePricesReportRequest.businessId) &&
            Objects.equals(this.campaignId, generatePricesReportRequest.campaignId) &&
            Objects.equals(this.categoryIds, generatePricesReportRequest.categoryIds) &&
            Objects.equals(this.creationDateFrom, generatePricesReportRequest.creationDateFrom) &&
            Objects.equals(this.creationDateTo, generatePricesReportRequest.creationDateTo);
    }

    @Override
    public int hashCode() {
        return Objects.hash(businessId, campaignId, categoryIds, creationDateFrom, creationDateTo);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GeneratePricesReportRequest {\n");
        sb.append("    businessId: ").append(toIndentedString(businessId)).append("\n");
        sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
        sb.append("    categoryIds: ").append(toIndentedString(categoryIds)).append("\n");
        sb.append("    creationDateFrom: ").append(toIndentedString(creationDateFrom)).append("\n");
        sb.append("    creationDateTo: ").append(toIndentedString(creationDateTo)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

