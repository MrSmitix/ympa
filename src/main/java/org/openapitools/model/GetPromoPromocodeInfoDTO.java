/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Информация для типа &#x60;MARKET_PROMOCODE&#x60;.  Параметр заполняется только для этого типа акции. 
 */
@Schema(name = "GetPromoPromocodeInfoDTO", description = "Информация для типа `MARKET_PROMOCODE`.  Параметр заполняется только для этого типа акции. ")
@JsonPropertyOrder({
  GetPromoPromocodeInfoDTO.JSON_PROPERTY_PROMOCODE,
  GetPromoPromocodeInfoDTO.JSON_PROPERTY_DISCOUNT
})
@JsonTypeName("GetPromoPromocodeInfoDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class GetPromoPromocodeInfoDTO {
    public static final String JSON_PROPERTY_PROMOCODE = "promocode";
    private String promocode;

    public static final String JSON_PROPERTY_DISCOUNT = "discount";
    private Integer discount;

    public GetPromoPromocodeInfoDTO(String promocode, Integer discount) {
        this.promocode = promocode;
        this.discount = discount;
    }

    public GetPromoPromocodeInfoDTO promocode(String promocode) {
        this.promocode = promocode;
        return this;
    }

    /**
     * Промокод.
     * @return promocode
     */
    @NotNull
    @Schema(name = "promocode", description = "Промокод.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_PROMOCODE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getPromocode() {
        return promocode;
    }

    @JsonProperty(JSON_PROPERTY_PROMOCODE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPromocode(String promocode) {
        this.promocode = promocode;
    }

    public GetPromoPromocodeInfoDTO discount(Integer discount) {
        this.discount = discount;
        return this;
    }

    /**
     * Процент скидки по промокоду.
     * @return discount
     */
    @NotNull
    @Schema(name = "discount", description = "Процент скидки по промокоду.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_DISCOUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getDiscount() {
        return discount;
    }

    @JsonProperty(JSON_PROPERTY_DISCOUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDiscount(Integer discount) {
        this.discount = discount;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetPromoPromocodeInfoDTO getPromoPromocodeInfoDTO = (GetPromoPromocodeInfoDTO) o;
        return Objects.equals(this.promocode, getPromoPromocodeInfoDTO.promocode) &&
            Objects.equals(this.discount, getPromoPromocodeInfoDTO.discount);
    }

    @Override
    public int hashCode() {
        return Objects.hash(promocode, discount);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetPromoPromocodeInfoDTO {\n");
        sb.append("    promocode: ").append(toIndentedString(promocode)).append("\n");
        sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

