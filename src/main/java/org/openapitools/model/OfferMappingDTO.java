/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Информация о текущей карточке товара на Маркете.
 */
@Schema(name = "OfferMappingDTO", description = "Информация о текущей карточке товара на Маркете.")
@JsonPropertyOrder({
  OfferMappingDTO.JSON_PROPERTY_MARKET_SKU,
  OfferMappingDTO.JSON_PROPERTY_MODEL_ID,
  OfferMappingDTO.JSON_PROPERTY_CATEGORY_ID
})
@JsonTypeName("OfferMappingDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class OfferMappingDTO {
    public static final String JSON_PROPERTY_MARKET_SKU = "marketSku";
    private Long marketSku;

    public static final String JSON_PROPERTY_MODEL_ID = "modelId";
    private Long modelId;

    public static final String JSON_PROPERTY_CATEGORY_ID = "categoryId";
    private Long categoryId;

    public OfferMappingDTO() {
    }

    public OfferMappingDTO marketSku(Long marketSku) {
        this.marketSku = marketSku;
        return this;
    }

    /**
     * SKU на Маркете.
     * @return marketSku
     */
    @Nullable
    @Schema(name = "marketSku", description = "SKU на Маркете.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_MARKET_SKU)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getMarketSku() {
        return marketSku;
    }

    @JsonProperty(JSON_PROPERTY_MARKET_SKU)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMarketSku(Long marketSku) {
        this.marketSku = marketSku;
    }

    public OfferMappingDTO modelId(Long modelId) {
        this.modelId = modelId;
        return this;
    }

    /**
     * Идентификатор модели для текущей карточки товара на Маркете.  Например, две лопатки разных цветов имеют разные SKU на Маркете (параметр &#x60;marketSku&#x60;), но одинаковый идентификатор модели товара. 
     * @return modelId
     */
    @Nullable
    @Schema(name = "modelId", description = "Идентификатор модели для текущей карточки товара на Маркете.  Например, две лопатки разных цветов имеют разные SKU на Маркете (параметр `marketSku`), но одинаковый идентификатор модели товара. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_MODEL_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getModelId() {
        return modelId;
    }

    @JsonProperty(JSON_PROPERTY_MODEL_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setModelId(Long modelId) {
        this.modelId = modelId;
    }

    public OfferMappingDTO categoryId(Long categoryId) {
        this.categoryId = categoryId;
        return this;
    }

    /**
     * Идентификатор категории для текущей карточки товара на Маркете.
     * @return categoryId
     */
    @Nullable
    @Schema(name = "categoryId", description = "Идентификатор категории для текущей карточки товара на Маркете.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CATEGORY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getCategoryId() {
        return categoryId;
    }

    @JsonProperty(JSON_PROPERTY_CATEGORY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCategoryId(Long categoryId) {
        this.categoryId = categoryId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OfferMappingDTO offerMappingDTO = (OfferMappingDTO) o;
        return Objects.equals(this.marketSku, offerMappingDTO.marketSku) &&
            Objects.equals(this.modelId, offerMappingDTO.modelId) &&
            Objects.equals(this.categoryId, offerMappingDTO.categoryId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(marketSku, modelId, categoryId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OfferMappingDTO {\n");
        sb.append("    marketSku: ").append(toIndentedString(marketSku)).append("\n");
        sb.append("    modelId: ").append(toIndentedString(modelId)).append("\n");
        sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

