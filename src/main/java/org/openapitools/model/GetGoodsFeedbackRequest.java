/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.time.OffsetDateTime;
import java.util.LinkedHashSet;
import java.util.Set;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.FeedbackReactionStatusType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Фильтр запроса отзывов в кабинете. 
 */
@Schema(name = "GetGoodsFeedbackRequest", description = "Фильтр запроса отзывов в кабинете. ")
@JsonPropertyOrder({
  GetGoodsFeedbackRequest.JSON_PROPERTY_DATE_TIME_FROM,
  GetGoodsFeedbackRequest.JSON_PROPERTY_DATE_TIME_TO,
  GetGoodsFeedbackRequest.JSON_PROPERTY_REACTION_STATUS,
  GetGoodsFeedbackRequest.JSON_PROPERTY_RATING_VALUES,
  GetGoodsFeedbackRequest.JSON_PROPERTY_MODEL_IDS,
  GetGoodsFeedbackRequest.JSON_PROPERTY_PAID
})
@JsonTypeName("GetGoodsFeedbackRequest")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class GetGoodsFeedbackRequest {
    public static final String JSON_PROPERTY_DATE_TIME_FROM = "dateTimeFrom";
    private OffsetDateTime dateTimeFrom;

    public static final String JSON_PROPERTY_DATE_TIME_TO = "dateTimeTo";
    private OffsetDateTime dateTimeTo;

    public static final String JSON_PROPERTY_REACTION_STATUS = "reactionStatus";
    private FeedbackReactionStatusType reactionStatus;

    public static final String JSON_PROPERTY_RATING_VALUES = "ratingValues";
    private Set<Integer> ratingValues = null;

    public static final String JSON_PROPERTY_MODEL_IDS = "modelIds";
    private Set<Long> modelIds = null;

    public static final String JSON_PROPERTY_PAID = "paid";
    private Boolean paid;

    public GetGoodsFeedbackRequest() {
    }

    public GetGoodsFeedbackRequest dateTimeFrom(OffsetDateTime dateTimeFrom) {
        this.dateTimeFrom = dateTimeFrom;
        return this;
    }

    /**
     * Начало периода. Не включительно.  Если параметр не указан, возвращается информация за 6 месяцев до указанной в &#x60;dateTimeTo&#x60; даты. 
     * @return dateTimeFrom
     */
    @Nullable
    @Schema(name = "dateTimeFrom", description = "Начало периода. Не включительно.  Если параметр не указан, возвращается информация за 6 месяцев до указанной в `dateTimeTo` даты. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DATE_TIME_FROM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getDateTimeFrom() {
        return dateTimeFrom;
    }

    @JsonProperty(JSON_PROPERTY_DATE_TIME_FROM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setDateTimeFrom(OffsetDateTime dateTimeFrom) {
        this.dateTimeFrom = dateTimeFrom;
    }

    public GetGoodsFeedbackRequest dateTimeTo(OffsetDateTime dateTimeTo) {
        this.dateTimeTo = dateTimeTo;
        return this;
    }

    /**
     * Конец периода. Не включительно.  Если параметр не указан, используется текущая дата. 
     * @return dateTimeTo
     */
    @Nullable
    @Schema(name = "dateTimeTo", description = "Конец периода. Не включительно.  Если параметр не указан, используется текущая дата. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DATE_TIME_TO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getDateTimeTo() {
        return dateTimeTo;
    }

    @JsonProperty(JSON_PROPERTY_DATE_TIME_TO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setDateTimeTo(OffsetDateTime dateTimeTo) {
        this.dateTimeTo = dateTimeTo;
    }

    public GetGoodsFeedbackRequest reactionStatus(FeedbackReactionStatusType reactionStatus) {
        this.reactionStatus = reactionStatus;
        return this;
    }

    /**
     * Get reactionStatus
     * @return reactionStatus
     */
    @Nullable
    @Schema(name = "reactionStatus", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_REACTION_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public FeedbackReactionStatusType getReactionStatus() {
        return reactionStatus;
    }

    @JsonProperty(JSON_PROPERTY_REACTION_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReactionStatus(FeedbackReactionStatusType reactionStatus) {
        this.reactionStatus = reactionStatus;
    }

    public GetGoodsFeedbackRequest ratingValues(Set<Integer> ratingValues) {
        this.ratingValues = ratingValues;
        return this;
    }

    public GetGoodsFeedbackRequest addRatingValuesItem(Integer ratingValuesItem) {
        if (this.ratingValues == null) {
            this.ratingValues = new LinkedHashSet<>();
        }
        this.ratingValues.add(ratingValuesItem);
        return this;
    }

    /**
     * Оценка товара.
     * @return ratingValues
     */
    @Nullable
    @Size(max=5)
    @Schema(name = "ratingValues", description = "Оценка товара.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_RATING_VALUES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Set<Integer> getRatingValues() {
        return ratingValues;
    }

    @JsonProperty(JSON_PROPERTY_RATING_VALUES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRatingValues(Set<Integer> ratingValues) {
        this.ratingValues = ratingValues;
    }

    public GetGoodsFeedbackRequest modelIds(Set<Long> modelIds) {
        this.modelIds = modelIds;
        return this;
    }

    public GetGoodsFeedbackRequest addModelIdsItem(Long modelIdsItem) {
        if (this.modelIds == null) {
            this.modelIds = new LinkedHashSet<>();
        }
        this.modelIds.add(modelIdsItem);
        return this;
    }

    /**
     * Фильтр по идентификатору модели товара.  Получить идентификатор модели можно с помощью одного из запросов:  * [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md);  * [POST businesses/{businessId}/offer-cards](../../reference/content/getOfferCardsContentStatus.md);  * [POST models](../../reference/models/getModels.md). 
     * @return modelIds
     */
    @Nullable
    @Size(max=20)
    @Schema(name = "modelIds", description = "Фильтр по идентификатору модели товара.  Получить идентификатор модели можно с помощью одного из запросов:  * [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md);  * [POST businesses/{businessId}/offer-cards](../../reference/content/getOfferCardsContentStatus.md);  * [POST models](../../reference/models/getModels.md). ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_MODEL_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Set<Long> getModelIds() {
        return modelIds;
    }

    @JsonProperty(JSON_PROPERTY_MODEL_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setModelIds(Set<Long> modelIds) {
        this.modelIds = modelIds;
    }

    public GetGoodsFeedbackRequest paid(Boolean paid) {
        this.paid = paid;
        return this;
    }

    /**
     * Фильтр отзывов за баллы Плюса.
     * @return paid
     */
    @Nullable
    @Schema(name = "paid", description = "Фильтр отзывов за баллы Плюса.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PAID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getPaid() {
        return paid;
    }

    @JsonProperty(JSON_PROPERTY_PAID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPaid(Boolean paid) {
        this.paid = paid;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetGoodsFeedbackRequest getGoodsFeedbackRequest = (GetGoodsFeedbackRequest) o;
        return Objects.equals(this.dateTimeFrom, getGoodsFeedbackRequest.dateTimeFrom) &&
            Objects.equals(this.dateTimeTo, getGoodsFeedbackRequest.dateTimeTo) &&
            Objects.equals(this.reactionStatus, getGoodsFeedbackRequest.reactionStatus) &&
            Objects.equals(this.ratingValues, getGoodsFeedbackRequest.ratingValues) &&
            Objects.equals(this.modelIds, getGoodsFeedbackRequest.modelIds) &&
            Objects.equals(this.paid, getGoodsFeedbackRequest.paid);
    }

    @Override
    public int hashCode() {
        return Objects.hash(dateTimeFrom, dateTimeTo, reactionStatus, ratingValues, modelIds, paid);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetGoodsFeedbackRequest {\n");
        sb.append("    dateTimeFrom: ").append(toIndentedString(dateTimeFrom)).append("\n");
        sb.append("    dateTimeTo: ").append(toIndentedString(dateTimeTo)).append("\n");
        sb.append("    reactionStatus: ").append(toIndentedString(reactionStatus)).append("\n");
        sb.append("    ratingValues: ").append(toIndentedString(ratingValues)).append("\n");
        sb.append("    modelIds: ").append(toIndentedString(modelIds)).append("\n");
        sb.append("    paid: ").append(toIndentedString(paid)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

