/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.OfferConditionQualityType;
import org.openapitools.model.OfferConditionType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Состояние уцененного товара. 
 */
@Schema(name = "OfferConditionDTO", description = "Состояние уцененного товара. ")
@JsonPropertyOrder({
  OfferConditionDTO.JSON_PROPERTY_TYPE,
  OfferConditionDTO.JSON_PROPERTY_QUALITY,
  OfferConditionDTO.JSON_PROPERTY_REASON
})
@JsonTypeName("OfferConditionDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class OfferConditionDTO {
    public static final String JSON_PROPERTY_TYPE = "type";
    private OfferConditionType type;

    public static final String JSON_PROPERTY_QUALITY = "quality";
    private OfferConditionQualityType quality;

    public static final String JSON_PROPERTY_REASON = "reason";
    private String reason;

    public OfferConditionDTO() {
    }

    public OfferConditionDTO type(OfferConditionType type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     * @return type
     */
    @Nullable
    @Schema(name = "type", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OfferConditionType getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setType(OfferConditionType type) {
        this.type = type;
    }

    public OfferConditionDTO quality(OfferConditionQualityType quality) {
        this.quality = quality;
        return this;
    }

    /**
     * Get quality
     * @return quality
     */
    @Nullable
    @Schema(name = "quality", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_QUALITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OfferConditionQualityType getQuality() {
        return quality;
    }

    @JsonProperty(JSON_PROPERTY_QUALITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setQuality(OfferConditionQualityType quality) {
        this.quality = quality;
    }

    public OfferConditionDTO reason(String reason) {
        this.reason = reason;
        return this;
    }

    /**
     * Описание товара. Подробно опишите дефекты, насколько они заметны и где их искать. 
     * @return reason
     */
    @Nullable
    @Schema(name = "reason", description = "Описание товара. Подробно опишите дефекты, насколько они заметны и где их искать. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_REASON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getReason() {
        return reason;
    }

    @JsonProperty(JSON_PROPERTY_REASON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReason(String reason) {
        this.reason = reason;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OfferConditionDTO offerConditionDTO = (OfferConditionDTO) o;
        return Objects.equals(this.type, offerConditionDTO.type) &&
            Objects.equals(this.quality, offerConditionDTO.quality) &&
            Objects.equals(this.reason, offerConditionDTO.reason);
    }

    @Override
    public int hashCode() {
        return Objects.hash(type, quality, reason);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OfferConditionDTO {\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
        sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

