/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.LinkedHashSet;
import java.util.Set;
import org.openapitools.model.ShipmentActionType;
import org.openapitools.model.ShipmentStatusChangeDTO;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Информация об отгрузке.
 */
@Schema(name = "ExtensionShipmentDTO", description = "Информация об отгрузке.")
@JsonPropertyOrder({
  ExtensionShipmentDTO.JSON_PROPERTY_CURRENT_STATUS,
  ExtensionShipmentDTO.JSON_PROPERTY_AVAILABLE_ACTIONS
})
@JsonTypeName("ExtensionShipmentDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class ExtensionShipmentDTO {
    public static final String JSON_PROPERTY_CURRENT_STATUS = "currentStatus";
    private ShipmentStatusChangeDTO currentStatus;

    public static final String JSON_PROPERTY_AVAILABLE_ACTIONS = "availableActions";
    private Set<ShipmentActionType> availableActions = new LinkedHashSet<>();

    public ExtensionShipmentDTO(Set<ShipmentActionType> availableActions) {
        this.availableActions = availableActions;
    }

    public ExtensionShipmentDTO currentStatus(ShipmentStatusChangeDTO currentStatus) {
        this.currentStatus = currentStatus;
        return this;
    }

    /**
     * Get currentStatus
     * @return currentStatus
     */
    @Valid
    @Nullable
    @Schema(name = "currentStatus", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CURRENT_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ShipmentStatusChangeDTO getCurrentStatus() {
        return currentStatus;
    }

    @JsonProperty(JSON_PROPERTY_CURRENT_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCurrentStatus(ShipmentStatusChangeDTO currentStatus) {
        this.currentStatus = currentStatus;
    }

    public ExtensionShipmentDTO availableActions(Set<ShipmentActionType> availableActions) {
        this.availableActions = availableActions;
        return this;
    }

    public ExtensionShipmentDTO addAvailableActionsItem(ShipmentActionType availableActionsItem) {
        this.availableActions.add(availableActionsItem);
        return this;
    }

    /**
     * Доступные действия над отгрузкой.
     * @return availableActions
     */
    @NotNull
    @Schema(name = "availableActions", description = "Доступные действия над отгрузкой.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_AVAILABLE_ACTIONS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Set<ShipmentActionType> getAvailableActions() {
        return availableActions;
    }

    @JsonProperty(JSON_PROPERTY_AVAILABLE_ACTIONS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
       @JsonDeserialize(as = LinkedHashSet.class)
    public void setAvailableActions(Set<ShipmentActionType> availableActions) {
        this.availableActions = availableActions;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ExtensionShipmentDTO extensionShipmentDTO = (ExtensionShipmentDTO) o;
        return Objects.equals(this.currentStatus, extensionShipmentDTO.currentStatus) &&
            Objects.equals(this.availableActions, extensionShipmentDTO.availableActions);
    }

    @Override
    public int hashCode() {
        return Objects.hash(currentStatus, availableActions);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ExtensionShipmentDTO {\n");
        sb.append("    currentStatus: ").append(toIndentedString(currentStatus)).append("\n");
        sb.append("    availableActions: ").append(toIndentedString(availableActions)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

