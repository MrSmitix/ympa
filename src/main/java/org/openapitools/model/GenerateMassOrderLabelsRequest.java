/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.LinkedHashSet;
import java.util.Set;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Данные, необходимые для генерации файла. 
 */
@JsonPropertyOrder({
  GenerateMassOrderLabelsRequest.JSON_PROPERTY_BUSINESS_ID,
  GenerateMassOrderLabelsRequest.JSON_PROPERTY_ORDER_IDS
})
@JsonTypeName("GenerateMassOrderLabelsRequest")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class GenerateMassOrderLabelsRequest {
    public static final String JSON_PROPERTY_BUSINESS_ID = "businessId";
    private Long businessId;

    public static final String JSON_PROPERTY_ORDER_IDS = "orderIds";
    private Set<Long> orderIds = new LinkedHashSet<>();

    public GenerateMassOrderLabelsRequest(Long businessId, Set<Long> orderIds) {
        this.businessId = businessId;
        this.orderIds = orderIds;
    }

    public GenerateMassOrderLabelsRequest businessId(Long businessId) {
        this.businessId = businessId;
        return this;
    }

    /**
     * Идентификатор кабинета.
     * @return businessId
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_BUSINESS_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Long getBusinessId() {
        return businessId;
    }

    @JsonProperty(JSON_PROPERTY_BUSINESS_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setBusinessId(Long businessId) {
        this.businessId = businessId;
    }

    public GenerateMassOrderLabelsRequest orderIds(Set<Long> orderIds) {
        this.orderIds = orderIds;
        return this;
    }

    public GenerateMassOrderLabelsRequest addOrderIdsItem(Long orderIdsItem) {
        this.orderIds.add(orderIdsItem);
        return this;
    }

    /**
     * Список идентификаторов заказов.
     * @return orderIds
     */
    @NotNull
    @Size(min=1, max=1000)
    @JsonProperty(JSON_PROPERTY_ORDER_IDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Set<Long> getOrderIds() {
        return orderIds;
    }

    @JsonProperty(JSON_PROPERTY_ORDER_IDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
       @JsonDeserialize(as = LinkedHashSet.class)
    public void setOrderIds(Set<Long> orderIds) {
        this.orderIds = orderIds;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GenerateMassOrderLabelsRequest generateMassOrderLabelsRequest = (GenerateMassOrderLabelsRequest) o;
        return Objects.equals(this.businessId, generateMassOrderLabelsRequest.businessId) &&
            Objects.equals(this.orderIds, generateMassOrderLabelsRequest.orderIds);
    }

    @Override
    public int hashCode() {
        return Objects.hash(businessId, orderIds);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GenerateMassOrderLabelsRequest {\n");
        sb.append("    businessId: ").append(toIndentedString(businessId)).append("\n");
        sb.append("    orderIds: ").append(toIndentedString(orderIds)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

