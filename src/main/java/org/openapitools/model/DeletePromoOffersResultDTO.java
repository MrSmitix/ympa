/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.RejectedPromoOfferDeleteDTO;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Результат удаления товаров из акции.  Возвращается, только если в запросе был передан параметр &#x60;offerIds&#x60;. 
 */
@Schema(name = "DeletePromoOffersResultDTO", description = "Результат удаления товаров из акции.  Возвращается, только если в запросе был передан параметр `offerIds`. ")
@JsonPropertyOrder({
  DeletePromoOffersResultDTO.JSON_PROPERTY_REJECTED_OFFERS
})
@JsonTypeName("DeletePromoOffersResultDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class DeletePromoOffersResultDTO {
    public static final String JSON_PROPERTY_REJECTED_OFFERS = "rejectedOffers";
    private List<@Valid RejectedPromoOfferDeleteDTO> rejectedOffers = null;

    public DeletePromoOffersResultDTO() {
    }

    public DeletePromoOffersResultDTO rejectedOffers(List<@Valid RejectedPromoOfferDeleteDTO> rejectedOffers) {
        this.rejectedOffers = rejectedOffers;
        return this;
    }

    public DeletePromoOffersResultDTO addRejectedOffersItem(RejectedPromoOfferDeleteDTO rejectedOffersItem) {
        if (this.rejectedOffers == null) {
            this.rejectedOffers = new ArrayList<>();
        }
        this.rejectedOffers.add(rejectedOffersItem);
        return this;
    }

    /**
     * Товары, при удалении которых появились ошибки.  Возвращается, только если есть такие товары. 
     * @return rejectedOffers
     */
    @Nullable
    @Schema(name = "rejectedOffers", description = "Товары, при удалении которых появились ошибки.  Возвращается, только если есть такие товары. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_REJECTED_OFFERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid RejectedPromoOfferDeleteDTO> getRejectedOffers() {
        return rejectedOffers;
    }

    @JsonProperty(JSON_PROPERTY_REJECTED_OFFERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRejectedOffers(List<@Valid RejectedPromoOfferDeleteDTO> rejectedOffers) {
        this.rejectedOffers = rejectedOffers;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeletePromoOffersResultDTO deletePromoOffersResultDTO = (DeletePromoOffersResultDTO) o;
        return Objects.equals(this.rejectedOffers, deletePromoOffersResultDTO.rejectedOffers);
    }

    @Override
    public int hashCode() {
        return Objects.hash(rejectedOffers);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DeletePromoOffersResultDTO {\n");
        sb.append("    rejectedOffers: ").append(toIndentedString(rejectedOffers)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

