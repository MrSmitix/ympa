/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Ограничения на значения характеристик.
 */
@JsonPropertyOrder({
  ParameterValueConstraintsDTO.JSON_PROPERTY_MIN_VALUE,
  ParameterValueConstraintsDTO.JSON_PROPERTY_MAX_VALUE,
  ParameterValueConstraintsDTO.JSON_PROPERTY_MAX_LENGTH
})
@JsonTypeName("ParameterValueConstraintsDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class ParameterValueConstraintsDTO {
    public static final String JSON_PROPERTY_MIN_VALUE = "minValue";
    private Double minValue;

    public static final String JSON_PROPERTY_MAX_VALUE = "maxValue";
    private Double maxValue;

    public static final String JSON_PROPERTY_MAX_LENGTH = "maxLength";
    private Integer maxLength;

    public ParameterValueConstraintsDTO() {
    }

    public ParameterValueConstraintsDTO minValue(Double minValue) {
        this.minValue = minValue;
        return this;
    }

    /**
     * Минимальное число.
     * @return minValue
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_MIN_VALUE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Double getMinValue() {
        return minValue;
    }

    @JsonProperty(JSON_PROPERTY_MIN_VALUE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMinValue(Double minValue) {
        this.minValue = minValue;
    }

    public ParameterValueConstraintsDTO maxValue(Double maxValue) {
        this.maxValue = maxValue;
        return this;
    }

    /**
     * Максимальное число.
     * @return maxValue
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_MAX_VALUE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Double getMaxValue() {
        return maxValue;
    }

    @JsonProperty(JSON_PROPERTY_MAX_VALUE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaxValue(Double maxValue) {
        this.maxValue = maxValue;
    }

    public ParameterValueConstraintsDTO maxLength(Integer maxLength) {
        this.maxLength = maxLength;
        return this;
    }

    /**
     * Максимальная длина текста.
     * @return maxLength
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_MAX_LENGTH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getMaxLength() {
        return maxLength;
    }

    @JsonProperty(JSON_PROPERTY_MAX_LENGTH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaxLength(Integer maxLength) {
        this.maxLength = maxLength;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ParameterValueConstraintsDTO parameterValueConstraintsDTO = (ParameterValueConstraintsDTO) o;
        return Objects.equals(this.minValue, parameterValueConstraintsDTO.minValue) &&
            Objects.equals(this.maxValue, parameterValueConstraintsDTO.maxValue) &&
            Objects.equals(this.maxLength, parameterValueConstraintsDTO.maxLength);
    }

    @Override
    public int hashCode() {
        return Objects.hash(minValue, maxValue, maxLength);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ParameterValueConstraintsDTO {\n");
        sb.append("    minValue: ").append(toIndentedString(minValue)).append("\n");
        sb.append("    maxValue: ").append(toIndentedString(maxValue)).append("\n");
        sb.append("    maxLength: ").append(toIndentedString(maxLength)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

