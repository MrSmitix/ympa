/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.GpsDTO;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Адрес склада.
 */
@Schema(name = "WarehouseAddressDTO", description = "Адрес склада.")
@JsonPropertyOrder({
  WarehouseAddressDTO.JSON_PROPERTY_CITY,
  WarehouseAddressDTO.JSON_PROPERTY_STREET,
  WarehouseAddressDTO.JSON_PROPERTY_NUMBER,
  WarehouseAddressDTO.JSON_PROPERTY_BUILDING,
  WarehouseAddressDTO.JSON_PROPERTY_BLOCK,
  WarehouseAddressDTO.JSON_PROPERTY_GPS
})
@JsonTypeName("WarehouseAddressDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class WarehouseAddressDTO {
    public static final String JSON_PROPERTY_CITY = "city";
    private String city;

    public static final String JSON_PROPERTY_STREET = "street";
    private String street;

    public static final String JSON_PROPERTY_NUMBER = "number";
    private String number;

    public static final String JSON_PROPERTY_BUILDING = "building";
    private String building;

    public static final String JSON_PROPERTY_BLOCK = "block";
    private String block;

    public static final String JSON_PROPERTY_GPS = "gps";
    private GpsDTO gps;

    public WarehouseAddressDTO(String city, GpsDTO gps) {
        this.city = city;
        this.gps = gps;
    }

    public WarehouseAddressDTO city(String city) {
        this.city = city;
        return this;
    }

    /**
     * Город.
     * @return city
     */
    @NotNull
    @Size(max=200)
    @Schema(name = "city", description = "Город.", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_CITY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getCity() {
        return city;
    }

    @JsonProperty(JSON_PROPERTY_CITY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCity(String city) {
        this.city = city;
    }

    public WarehouseAddressDTO street(String street) {
        this.street = street;
        return this;
    }

    /**
     * Улица.
     * @return street
     */
    @Nullable
    @Size(max=512)
    @Schema(name = "street", description = "Улица.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_STREET)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getStreet() {
        return street;
    }

    @JsonProperty(JSON_PROPERTY_STREET)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStreet(String street) {
        this.street = street;
    }

    public WarehouseAddressDTO number(String number) {
        this.number = number;
        return this;
    }

    /**
     * Номер дома.
     * @return number
     */
    @Nullable
    @Size(max=256)
    @Schema(name = "number", description = "Номер дома.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_NUMBER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getNumber() {
        return number;
    }

    @JsonProperty(JSON_PROPERTY_NUMBER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNumber(String number) {
        this.number = number;
    }

    public WarehouseAddressDTO building(String building) {
        this.building = building;
        return this;
    }

    /**
     * Номер строения.
     * @return building
     */
    @Nullable
    @Size(max=16)
    @Schema(name = "building", description = "Номер строения.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_BUILDING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBuilding() {
        return building;
    }

    @JsonProperty(JSON_PROPERTY_BUILDING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBuilding(String building) {
        this.building = building;
    }

    public WarehouseAddressDTO block(String block) {
        this.block = block;
        return this;
    }

    /**
     * Номер корпуса.
     * @return block
     */
    @Nullable
    @Size(max=16)
    @Schema(name = "block", description = "Номер корпуса.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_BLOCK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBlock() {
        return block;
    }

    @JsonProperty(JSON_PROPERTY_BLOCK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBlock(String block) {
        this.block = block;
    }

    public WarehouseAddressDTO gps(GpsDTO gps) {
        this.gps = gps;
        return this;
    }

    /**
     * Get gps
     * @return gps
     */
    @Valid
    @NotNull
    @Schema(name = "gps", requiredMode = Schema.RequiredMode.REQUIRED)
    @JsonProperty(JSON_PROPERTY_GPS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public GpsDTO getGps() {
        return gps;
    }

    @JsonProperty(JSON_PROPERTY_GPS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setGps(GpsDTO gps) {
        this.gps = gps;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        WarehouseAddressDTO warehouseAddressDTO = (WarehouseAddressDTO) o;
        return Objects.equals(this.city, warehouseAddressDTO.city) &&
            Objects.equals(this.street, warehouseAddressDTO.street) &&
            Objects.equals(this.number, warehouseAddressDTO.number) &&
            Objects.equals(this.building, warehouseAddressDTO.building) &&
            Objects.equals(this.block, warehouseAddressDTO.block) &&
            Objects.equals(this.gps, warehouseAddressDTO.gps);
    }

    @Override
    public int hashCode() {
        return Objects.hash(city, street, number, building, block, gps);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class WarehouseAddressDTO {\n");
        sb.append("    city: ").append(toIndentedString(city)).append("\n");
        sb.append("    street: ").append(toIndentedString(street)).append("\n");
        sb.append("    number: ").append(toIndentedString(number)).append("\n");
        sb.append("    building: ").append(toIndentedString(building)).append("\n");
        sb.append("    block: ").append(toIndentedString(block)).append("\n");
        sb.append("    gps: ").append(toIndentedString(gps)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

