/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.ParcelBoxLabelDTO;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Данные для печати ярлыка.
 */
@JsonPropertyOrder({
  OrderLabelDTO.JSON_PROPERTY_ORDER_ID,
  OrderLabelDTO.JSON_PROPERTY_PLACES_NUMBER,
  OrderLabelDTO.JSON_PROPERTY_URL,
  OrderLabelDTO.JSON_PROPERTY_PARCEL_BOX_LABELS
})
@JsonTypeName("OrderLabelDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class OrderLabelDTO {
    public static final String JSON_PROPERTY_ORDER_ID = "orderId";
    private Long orderId;

    public static final String JSON_PROPERTY_PLACES_NUMBER = "placesNumber";
    private Integer placesNumber;

    public static final String JSON_PROPERTY_URL = "url";
    private String url;

    public static final String JSON_PROPERTY_PARCEL_BOX_LABELS = "parcelBoxLabels";
    private List<@Valid ParcelBoxLabelDTO> parcelBoxLabels = new ArrayList<>();

    public OrderLabelDTO(Long orderId, Integer placesNumber, String url, List<@Valid ParcelBoxLabelDTO> parcelBoxLabels) {
        this.orderId = orderId;
        this.placesNumber = placesNumber;
        this.url = url;
        this.parcelBoxLabels = parcelBoxLabels;
    }

    public OrderLabelDTO orderId(Long orderId) {
        this.orderId = orderId;
        return this;
    }

    /**
     * Идентификатор заказа.
     * @return orderId
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_ORDER_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Long getOrderId() {
        return orderId;
    }

    @JsonProperty(JSON_PROPERTY_ORDER_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setOrderId(Long orderId) {
        this.orderId = orderId;
    }

    public OrderLabelDTO placesNumber(Integer placesNumber) {
        this.placesNumber = placesNumber;
        return this;
    }

    /**
     * Количество коробок в заказе.
     * @return placesNumber
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_PLACES_NUMBER)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getPlacesNumber() {
        return placesNumber;
    }

    @JsonProperty(JSON_PROPERTY_PLACES_NUMBER)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPlacesNumber(Integer placesNumber) {
        this.placesNumber = placesNumber;
    }

    public OrderLabelDTO url(String url) {
        this.url = url;
        return this;
    }

    /**
     * URL файла с ярлыками‑наклейками на все коробки в заказе.  Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/labels](../../reference/orders/generateOrderLabels.md). 
     * @return url
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_URL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getUrl() {
        return url;
    }

    @JsonProperty(JSON_PROPERTY_URL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setUrl(String url) {
        this.url = url;
    }

    public OrderLabelDTO parcelBoxLabels(List<@Valid ParcelBoxLabelDTO> parcelBoxLabels) {
        this.parcelBoxLabels = parcelBoxLabels;
        return this;
    }

    public OrderLabelDTO addParcelBoxLabelsItem(ParcelBoxLabelDTO parcelBoxLabelsItem) {
        this.parcelBoxLabels.add(parcelBoxLabelsItem);
        return this;
    }

    /**
     * Информация на ярлыке.
     * @return parcelBoxLabels
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_PARCEL_BOX_LABELS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<@Valid ParcelBoxLabelDTO> getParcelBoxLabels() {
        return parcelBoxLabels;
    }

    @JsonProperty(JSON_PROPERTY_PARCEL_BOX_LABELS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setParcelBoxLabels(List<@Valid ParcelBoxLabelDTO> parcelBoxLabels) {
        this.parcelBoxLabels = parcelBoxLabels;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OrderLabelDTO orderLabelDTO = (OrderLabelDTO) o;
        return Objects.equals(this.orderId, orderLabelDTO.orderId) &&
            Objects.equals(this.placesNumber, orderLabelDTO.placesNumber) &&
            Objects.equals(this.url, orderLabelDTO.url) &&
            Objects.equals(this.parcelBoxLabels, orderLabelDTO.parcelBoxLabels);
    }

    @Override
    public int hashCode() {
        return Objects.hash(orderId, placesNumber, url, parcelBoxLabels);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OrderLabelDTO {\n");
        sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
        sb.append("    placesNumber: ").append(toIndentedString(placesNumber)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("    parcelBoxLabels: ").append(toIndentedString(parcelBoxLabels)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

