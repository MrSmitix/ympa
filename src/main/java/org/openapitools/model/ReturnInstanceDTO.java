/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.ReturnInstanceStatusType;
import org.openapitools.model.ReturnInstanceStockType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Логистическая информация по возврату.
 */
@Schema(name = "ReturnInstanceDTO", description = "Логистическая информация по возврату.")
@JsonPropertyOrder({
  ReturnInstanceDTO.JSON_PROPERTY_STOCK_TYPE,
  ReturnInstanceDTO.JSON_PROPERTY_STATUS,
  ReturnInstanceDTO.JSON_PROPERTY_CIS,
  ReturnInstanceDTO.JSON_PROPERTY_IMEI
})
@JsonTypeName("ReturnInstanceDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class ReturnInstanceDTO {
    public static final String JSON_PROPERTY_STOCK_TYPE = "stockType";
    private ReturnInstanceStockType stockType;

    public static final String JSON_PROPERTY_STATUS = "status";
    private ReturnInstanceStatusType status;

    public static final String JSON_PROPERTY_CIS = "cis";
    private String cis;

    public static final String JSON_PROPERTY_IMEI = "imei";
    private String imei;

    public ReturnInstanceDTO() {
    }

    public ReturnInstanceDTO stockType(ReturnInstanceStockType stockType) {
        this.stockType = stockType;
        return this;
    }

    /**
     * Get stockType
     * @return stockType
     */
    @Nullable
    @Schema(name = "stockType", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_STOCK_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ReturnInstanceStockType getStockType() {
        return stockType;
    }

    @JsonProperty(JSON_PROPERTY_STOCK_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStockType(ReturnInstanceStockType stockType) {
        this.stockType = stockType;
    }

    public ReturnInstanceDTO status(ReturnInstanceStatusType status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     * @return status
     */
    @Nullable
    @Schema(name = "status", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ReturnInstanceStatusType getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStatus(ReturnInstanceStatusType status) {
        this.status = status;
    }

    public ReturnInstanceDTO cis(String cis) {
        this.cis = cis;
        return this;
    }

    /**
     * Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).
     * @return cis
     */
    @Nullable
    @Schema(name = "cis", description = "Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CIS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCis() {
        return cis;
    }

    @JsonProperty(JSON_PROPERTY_CIS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCis(String cis) {
        this.cis = cis;
    }

    public ReturnInstanceDTO imei(String imei) {
        this.imei = imei;
        return this;
    }

    /**
     * Международный идентификатор мобильного оборудования.
     * @return imei
     */
    @Nullable
    @Schema(name = "imei", description = "Международный идентификатор мобильного оборудования.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_IMEI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getImei() {
        return imei;
    }

    @JsonProperty(JSON_PROPERTY_IMEI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setImei(String imei) {
        this.imei = imei;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ReturnInstanceDTO returnInstanceDTO = (ReturnInstanceDTO) o;
        return Objects.equals(this.stockType, returnInstanceDTO.stockType) &&
            Objects.equals(this.status, returnInstanceDTO.status) &&
            Objects.equals(this.cis, returnInstanceDTO.cis) &&
            Objects.equals(this.imei, returnInstanceDTO.imei);
    }

    @Override
    public int hashCode() {
        return Objects.hash(stockType, status, cis, imei);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ReturnInstanceDTO {\n");
        sb.append("    stockType: ").append(toIndentedString(stockType)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    cis: ").append(toIndentedString(cis)).append("\n");
        sb.append("    imei: ").append(toIndentedString(imei)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

