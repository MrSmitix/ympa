/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.TimeUnitType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Временной отрезок с комментарием. Требования к содержанию комментария зависят от контекста использования параметра и указаны в описании поля, которое его содержит.
 */
@JsonPropertyOrder({
  TimePeriodDTO.JSON_PROPERTY_TIME_PERIOD,
  TimePeriodDTO.JSON_PROPERTY_TIME_UNIT,
  TimePeriodDTO.JSON_PROPERTY_COMMENT
})
@JsonTypeName("TimePeriodDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class TimePeriodDTO {
    public static final String JSON_PROPERTY_TIME_PERIOD = "timePeriod";
    private Integer timePeriod;

    public static final String JSON_PROPERTY_TIME_UNIT = "timeUnit";
    private TimeUnitType timeUnit;

    public static final String JSON_PROPERTY_COMMENT = "comment";
    private String comment;

    public TimePeriodDTO(Integer timePeriod, TimeUnitType timeUnit) {
        this.timePeriod = timePeriod;
        this.timeUnit = timeUnit;
    }

    public TimePeriodDTO timePeriod(Integer timePeriod) {
        this.timePeriod = timePeriod;
        return this;
    }

    /**
     * Продолжительность в указанных единицах.
     * @return timePeriod
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_TIME_PERIOD)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getTimePeriod() {
        return timePeriod;
    }

    @JsonProperty(JSON_PROPERTY_TIME_PERIOD)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTimePeriod(Integer timePeriod) {
        this.timePeriod = timePeriod;
    }

    public TimePeriodDTO timeUnit(TimeUnitType timeUnit) {
        this.timeUnit = timeUnit;
        return this;
    }

    /**
     * Get timeUnit
     * @return timeUnit
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_TIME_UNIT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public TimeUnitType getTimeUnit() {
        return timeUnit;
    }

    @JsonProperty(JSON_PROPERTY_TIME_UNIT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTimeUnit(TimeUnitType timeUnit) {
        this.timeUnit = timeUnit;
    }

    public TimePeriodDTO comment(String comment) {
        this.comment = comment;
        return this;
    }

    /**
     * Комментарий.
     * @return comment
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_COMMENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getComment() {
        return comment;
    }

    @JsonProperty(JSON_PROPERTY_COMMENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setComment(String comment) {
        this.comment = comment;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TimePeriodDTO timePeriodDTO = (TimePeriodDTO) o;
        return Objects.equals(this.timePeriod, timePeriodDTO.timePeriod) &&
            Objects.equals(this.timeUnit, timePeriodDTO.timeUnit) &&
            Objects.equals(this.comment, timePeriodDTO.comment);
    }

    @Override
    public int hashCode() {
        return Objects.hash(timePeriod, timeUnit, comment);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TimePeriodDTO {\n");
        sb.append("    timePeriod: ").append(toIndentedString(timePeriod)).append("\n");
        sb.append("    timeUnit: ").append(toIndentedString(timeUnit)).append("\n");
        sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

