/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.time.LocalDate;
import java.util.LinkedHashSet;
import java.util.Set;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.ShipmentStatusType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Запрос информации об отгрузках.
 */
@JsonPropertyOrder({
  SearchShipmentsRequest.JSON_PROPERTY_DATE_FROM,
  SearchShipmentsRequest.JSON_PROPERTY_DATE_TO,
  SearchShipmentsRequest.JSON_PROPERTY_STATUSES,
  SearchShipmentsRequest.JSON_PROPERTY_ORDER_IDS,
  SearchShipmentsRequest.JSON_PROPERTY_CANCELLED_ORDERS
})
@JsonTypeName("SearchShipmentsRequest")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class SearchShipmentsRequest {
    public static final String JSON_PROPERTY_DATE_FROM = "dateFrom";
    private LocalDate dateFrom;

    public static final String JSON_PROPERTY_DATE_TO = "dateTo";
    private LocalDate dateTo;

    public static final String JSON_PROPERTY_STATUSES = "statuses";
    private Set<ShipmentStatusType> statuses = null;

    public static final String JSON_PROPERTY_ORDER_IDS = "orderIds";
    private Set<Long> orderIds = null;

    public static final String JSON_PROPERTY_CANCELLED_ORDERS = "cancelledOrders";
    private Boolean cancelledOrders = true;

    public SearchShipmentsRequest(LocalDate dateFrom, LocalDate dateTo) {
        this.dateFrom = dateFrom;
        this.dateTo = dateTo;
    }

    public SearchShipmentsRequest dateFrom(LocalDate dateFrom) {
        this.dateFrom = dateFrom;
        return this;
    }

    /**
     * Начальная дата для фильтрации по дате отгрузки (включительно).  Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;. 
     * @return dateFrom
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_DATE_FROM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public LocalDate getDateFrom() {
        return dateFrom;
    }

    @JsonProperty(JSON_PROPERTY_DATE_FROM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public void setDateFrom(LocalDate dateFrom) {
        this.dateFrom = dateFrom;
    }

    public SearchShipmentsRequest dateTo(LocalDate dateTo) {
        this.dateTo = dateTo;
        return this;
    }

    /**
     * Конечная дата для фильтрации по дате отгрузки (включительно).  Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;. 
     * @return dateTo
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_DATE_TO)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public LocalDate getDateTo() {
        return dateTo;
    }

    @JsonProperty(JSON_PROPERTY_DATE_TO)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    public void setDateTo(LocalDate dateTo) {
        this.dateTo = dateTo;
    }

    public SearchShipmentsRequest statuses(Set<ShipmentStatusType> statuses) {
        this.statuses = statuses;
        return this;
    }

    public SearchShipmentsRequest addStatusesItem(ShipmentStatusType statusesItem) {
        if (this.statuses == null) {
            this.statuses = new LinkedHashSet<>();
        }
        this.statuses.add(statusesItem);
        return this;
    }

    /**
     * Список статусов отгрузок.
     * @return statuses
     */
    @Nullable
    @Size(min=1)
    @JsonProperty(JSON_PROPERTY_STATUSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Set<ShipmentStatusType> getStatuses() {
        return statuses;
    }

    @JsonProperty(JSON_PROPERTY_STATUSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStatuses(Set<ShipmentStatusType> statuses) {
        this.statuses = statuses;
    }

    public SearchShipmentsRequest orderIds(Set<Long> orderIds) {
        this.orderIds = orderIds;
        return this;
    }

    public SearchShipmentsRequest addOrderIdsItem(Long orderIdsItem) {
        if (this.orderIds == null) {
            this.orderIds = new LinkedHashSet<>();
        }
        this.orderIds.add(orderIdsItem);
        return this;
    }

    /**
     * Список идентификаторов заказов из отгрузок.
     * @return orderIds
     */
    @Nullable
    @Size(min=1)
    @JsonProperty(JSON_PROPERTY_ORDER_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Set<Long> getOrderIds() {
        return orderIds;
    }

    @JsonProperty(JSON_PROPERTY_ORDER_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOrderIds(Set<Long> orderIds) {
        this.orderIds = orderIds;
    }

    public SearchShipmentsRequest cancelledOrders(Boolean cancelledOrders) {
        this.cancelledOrders = cancelledOrders;
        return this;
    }

    /**
     * Возвращать ли отмененные заказы.  Значение по умолчанию — &#x60;true&#x60;. Если возвращать отмененные заказы не нужно, передайте значение &#x60;false&#x60;. 
     * @return cancelledOrders
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_CANCELLED_ORDERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getCancelledOrders() {
        return cancelledOrders;
    }

    @JsonProperty(JSON_PROPERTY_CANCELLED_ORDERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCancelledOrders(Boolean cancelledOrders) {
        this.cancelledOrders = cancelledOrders;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SearchShipmentsRequest searchShipmentsRequest = (SearchShipmentsRequest) o;
        return Objects.equals(this.dateFrom, searchShipmentsRequest.dateFrom) &&
            Objects.equals(this.dateTo, searchShipmentsRequest.dateTo) &&
            Objects.equals(this.statuses, searchShipmentsRequest.statuses) &&
            Objects.equals(this.orderIds, searchShipmentsRequest.orderIds) &&
            Objects.equals(this.cancelledOrders, searchShipmentsRequest.cancelledOrders);
    }

    @Override
    public int hashCode() {
        return Objects.hash(dateFrom, dateTo, statuses, orderIds, cancelledOrders);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SearchShipmentsRequest {\n");
        sb.append("    dateFrom: ").append(toIndentedString(dateFrom)).append("\n");
        sb.append("    dateTo: ").append(toIndentedString(dateTo)).append("\n");
        sb.append("    statuses: ").append(toIndentedString(statuses)).append("\n");
        sb.append("    orderIds: ").append(toIndentedString(orderIds)).append("\n");
        sb.append("    cancelledOrders: ").append(toIndentedString(cancelledOrders)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

