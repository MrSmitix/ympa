/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.OrderItemStatusType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Детали по товару в заказе.
 */
@JsonPropertyOrder({
  OrderItemDetailDTO.JSON_PROPERTY_ITEM_COUNT,
  OrderItemDetailDTO.JSON_PROPERTY_ITEM_STATUS,
  OrderItemDetailDTO.JSON_PROPERTY_UPDATE_DATE
})
@JsonTypeName("OrderItemDetailDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class OrderItemDetailDTO {
    public static final String JSON_PROPERTY_ITEM_COUNT = "itemCount";
    private Long itemCount;

    public static final String JSON_PROPERTY_ITEM_STATUS = "itemStatus";
    private OrderItemStatusType itemStatus;

    public static final String JSON_PROPERTY_UPDATE_DATE = "updateDate";
    private String updateDate;

    public OrderItemDetailDTO() {
    }

    public OrderItemDetailDTO itemCount(Long itemCount) {
        this.itemCount = itemCount;
        return this;
    }

    /**
     * Количество единиц товара.
     * @return itemCount
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_ITEM_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getItemCount() {
        return itemCount;
    }

    @JsonProperty(JSON_PROPERTY_ITEM_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setItemCount(Long itemCount) {
        this.itemCount = itemCount;
    }

    public OrderItemDetailDTO itemStatus(OrderItemStatusType itemStatus) {
        this.itemStatus = itemStatus;
        return this;
    }

    /**
     * Get itemStatus
     * @return itemStatus
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_ITEM_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OrderItemStatusType getItemStatus() {
        return itemStatus;
    }

    @JsonProperty(JSON_PROPERTY_ITEM_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setItemStatus(OrderItemStatusType itemStatus) {
        this.itemStatus = itemStatus;
    }

    public OrderItemDetailDTO updateDate(String updateDate) {
        this.updateDate = updateDate;
        return this;
    }

    /**
     * Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;. 
     * @return updateDate
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_UPDATE_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getUpdateDate() {
        return updateDate;
    }

    @JsonProperty(JSON_PROPERTY_UPDATE_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUpdateDate(String updateDate) {
        this.updateDate = updateDate;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OrderItemDetailDTO orderItemDetailDTO = (OrderItemDetailDTO) o;
        return Objects.equals(this.itemCount, orderItemDetailDTO.itemCount) &&
            Objects.equals(this.itemStatus, orderItemDetailDTO.itemStatus) &&
            Objects.equals(this.updateDate, orderItemDetailDTO.updateDate);
    }

    @Override
    public int hashCode() {
        return Objects.hash(itemCount, itemStatus, updateDate);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OrderItemDetailDTO {\n");
        sb.append("    itemCount: ").append(toIndentedString(itemCount)).append("\n");
        sb.append("    itemStatus: ").append(toIndentedString(itemStatus)).append("\n");
        sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

