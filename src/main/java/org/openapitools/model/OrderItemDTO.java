/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.OrderItemDetailDTO;
import org.openapitools.model.OrderItemInstanceDTO;
import org.openapitools.model.OrderItemInstanceType;
import org.openapitools.model.OrderItemPromoDTO;
import org.openapitools.model.OrderItemSubsidyDTO;
import org.openapitools.model.OrderVatType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Список товаров в заказе.
 */
@Schema(name = "OrderItemDTO", description = "Список товаров в заказе.")
@JsonPropertyOrder({
  OrderItemDTO.JSON_PROPERTY_ID,
  OrderItemDTO.JSON_PROPERTY_OFFER_ID,
  OrderItemDTO.JSON_PROPERTY_OFFER_NAME,
  OrderItemDTO.JSON_PROPERTY_PRICE,
  OrderItemDTO.JSON_PROPERTY_BUYER_PRICE,
  OrderItemDTO.JSON_PROPERTY_BUYER_PRICE_BEFORE_DISCOUNT,
  OrderItemDTO.JSON_PROPERTY_PRICE_BEFORE_DISCOUNT,
  OrderItemDTO.JSON_PROPERTY_COUNT,
  OrderItemDTO.JSON_PROPERTY_VAT,
  OrderItemDTO.JSON_PROPERTY_SHOP_SKU,
  OrderItemDTO.JSON_PROPERTY_SUBSIDY,
  OrderItemDTO.JSON_PROPERTY_PARTNER_WAREHOUSE_ID,
  OrderItemDTO.JSON_PROPERTY_PROMOS,
  OrderItemDTO.JSON_PROPERTY_INSTANCES,
  OrderItemDTO.JSON_PROPERTY_DETAILS,
  OrderItemDTO.JSON_PROPERTY_SUBSIDIES,
  OrderItemDTO.JSON_PROPERTY_REQUIRED_INSTANCE_TYPES
})
@JsonTypeName("OrderItemDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class OrderItemDTO {
    public static final String JSON_PROPERTY_ID = "id";
    private Long id;

    public static final String JSON_PROPERTY_OFFER_ID = "offerId";
    private String offerId;

    public static final String JSON_PROPERTY_OFFER_NAME = "offerName";
    private String offerName;

    public static final String JSON_PROPERTY_PRICE = "price";
    private BigDecimal price;

    public static final String JSON_PROPERTY_BUYER_PRICE = "buyerPrice";
    private BigDecimal buyerPrice;

    public static final String JSON_PROPERTY_BUYER_PRICE_BEFORE_DISCOUNT = "buyerPriceBeforeDiscount";
    private BigDecimal buyerPriceBeforeDiscount;

    public static final String JSON_PROPERTY_PRICE_BEFORE_DISCOUNT = "priceBeforeDiscount";
    private BigDecimal priceBeforeDiscount;

    public static final String JSON_PROPERTY_COUNT = "count";
    private Integer count;

    public static final String JSON_PROPERTY_VAT = "vat";
    private OrderVatType vat;

    public static final String JSON_PROPERTY_SHOP_SKU = "shopSku";
    private String shopSku;

    public static final String JSON_PROPERTY_SUBSIDY = "subsidy";
    private BigDecimal subsidy;

    public static final String JSON_PROPERTY_PARTNER_WAREHOUSE_ID = "partnerWarehouseId";
    private String partnerWarehouseId;

    public static final String JSON_PROPERTY_PROMOS = "promos";
    private List<@Valid OrderItemPromoDTO> promos = null;

    public static final String JSON_PROPERTY_INSTANCES = "instances";
    private List<@Valid OrderItemInstanceDTO> instances = null;

    public static final String JSON_PROPERTY_DETAILS = "details";
    private List<@Valid OrderItemDetailDTO> details = null;

    public static final String JSON_PROPERTY_SUBSIDIES = "subsidies";
    private List<@Valid OrderItemSubsidyDTO> subsidies = null;

    public static final String JSON_PROPERTY_REQUIRED_INSTANCE_TYPES = "requiredInstanceTypes";
    private List<OrderItemInstanceType> requiredInstanceTypes = null;

    public OrderItemDTO() {
    }

    public OrderItemDTO id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Идентификатор товара в заказе.  Позволяет идентифицировать товар в рамках данного заказа. 
     * @return id
     */
    @Nullable
    @Schema(name = "id", description = "Идентификатор товара в заказе.  Позволяет идентифицировать товар в рамках данного заказа. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(Long id) {
        this.id = id;
    }

    public OrderItemDTO offerId(String offerId) {
        this.offerId = offerId;
        return this;
    }

    /**
     * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
     * @return offerId
     */
    @Nullable
    @Pattern(regexp="^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$")
    @Size(min=1, max=255)
    @Schema(name = "offerId", description = "Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_OFFER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getOfferId() {
        return offerId;
    }

    @JsonProperty(JSON_PROPERTY_OFFER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOfferId(String offerId) {
        this.offerId = offerId;
    }

    public OrderItemDTO offerName(String offerName) {
        this.offerName = offerName;
        return this;
    }

    /**
     * Название товара.
     * @return offerName
     */
    @Nullable
    @Schema(name = "offerName", description = "Название товара.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_OFFER_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getOfferName() {
        return offerName;
    }

    @JsonProperty(JSON_PROPERTY_OFFER_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOfferName(String offerName) {
        this.offerName = offerName;
    }

    public OrderItemDTO price(BigDecimal price) {
        this.price = price;
        return this;
    }

    /**
     * Цена на товар в валюте заказа без учета вознаграждения партнеру за скидки по промокодам, купонам и акциям (параметр &#x60;subsidies&#x60;). 
     * @return price
     */
    @Nullable
    @Schema(name = "price", description = "Цена на товар в валюте заказа без учета вознаграждения партнеру за скидки по промокодам, купонам и акциям (параметр `subsidies`). ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PRICE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getPrice() {
        return price;
    }

    @JsonProperty(JSON_PROPERTY_PRICE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    public OrderItemDTO buyerPrice(BigDecimal buyerPrice) {
        this.buyerPrice = buyerPrice;
        return this;
    }

    /**
     * Цена на товар в валюте покупателя. В цене уже учтены скидки по:  * акциям; * купонам; * промокодам. 
     * @return buyerPrice
     */
    @Nullable
    @Schema(name = "buyerPrice", description = "Цена на товар в валюте покупателя. В цене уже учтены скидки по:  * акциям; * купонам; * промокодам. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_BUYER_PRICE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getBuyerPrice() {
        return buyerPrice;
    }

    @JsonProperty(JSON_PROPERTY_BUYER_PRICE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBuyerPrice(BigDecimal buyerPrice) {
        this.buyerPrice = buyerPrice;
    }

    public OrderItemDTO buyerPriceBeforeDiscount(BigDecimal buyerPriceBeforeDiscount) {
        this.buyerPriceBeforeDiscount = buyerPriceBeforeDiscount;
        return this;
    }

    /**
     * Стоимость товара в валюте покупателя до применения скидок по:  * акциям; * купонам; * промокодам. 
     * @return buyerPriceBeforeDiscount
     */
    @Nullable
    @Schema(name = "buyerPriceBeforeDiscount", description = "Стоимость товара в валюте покупателя до применения скидок по:  * акциям; * купонам; * промокодам. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_BUYER_PRICE_BEFORE_DISCOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getBuyerPriceBeforeDiscount() {
        return buyerPriceBeforeDiscount;
    }

    @JsonProperty(JSON_PROPERTY_BUYER_PRICE_BEFORE_DISCOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBuyerPriceBeforeDiscount(BigDecimal buyerPriceBeforeDiscount) {
        this.buyerPriceBeforeDiscount = buyerPriceBeforeDiscount;
    }

    public OrderItemDTO priceBeforeDiscount(BigDecimal priceBeforeDiscount) {
        this.priceBeforeDiscount = priceBeforeDiscount;
        return this;
    }

    /**
     * {% note warning \&quot;\&quot; %}  Этот параметр устарел.  {% endnote %}  Стоимость товара в валюте магазина до применения скидок. 
     * @return priceBeforeDiscount
     */
    @Nullable
    @Schema(name = "priceBeforeDiscount", description = "{% note warning \"\" %}  Этот параметр устарел.  {% endnote %}  Стоимость товара в валюте магазина до применения скидок. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PRICE_BEFORE_DISCOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getPriceBeforeDiscount() {
        return priceBeforeDiscount;
    }

    @JsonProperty(JSON_PROPERTY_PRICE_BEFORE_DISCOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPriceBeforeDiscount(BigDecimal priceBeforeDiscount) {
        this.priceBeforeDiscount = priceBeforeDiscount;
    }

    public OrderItemDTO count(Integer count) {
        this.count = count;
        return this;
    }

    /**
     * Количество единиц товара.
     * @return count
     */
    @Nullable
    @Schema(name = "count", description = "Количество единиц товара.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getCount() {
        return count;
    }

    @JsonProperty(JSON_PROPERTY_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCount(Integer count) {
        this.count = count;
    }

    public OrderItemDTO vat(OrderVatType vat) {
        this.vat = vat;
        return this;
    }

    /**
     * Get vat
     * @return vat
     */
    @Nullable
    @Schema(name = "vat", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_VAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OrderVatType getVat() {
        return vat;
    }

    @JsonProperty(JSON_PROPERTY_VAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVat(OrderVatType vat) {
        this.vat = vat;
    }

    public OrderItemDTO shopSku(String shopSku) {
        this.shopSku = shopSku;
        return this;
    }

    /**
     * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
     * @return shopSku
     */
    @Nullable
    @Pattern(regexp="^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$")
    @Size(min=1, max=255)
    @Schema(name = "shopSku", description = "Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_SHOP_SKU)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getShopSku() {
        return shopSku;
    }

    @JsonProperty(JSON_PROPERTY_SHOP_SKU)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setShopSku(String shopSku) {
        this.shopSku = shopSku;
    }

    public OrderItemDTO subsidy(BigDecimal subsidy) {
        this.subsidy = subsidy;
        return this;
    }

    /**
     * {% note warning \&quot;\&quot; %}  Этот параметр устарел. Вместо него используйте &#x60;subsidies&#x60;.  {% endnote %}  Общее вознаграждение партнеру за DBS-доставку и все скидки на товар:  * по промокодам; * по купонам; * по баллам Плюса; * по акциям.  Передается в валюте заказа. 
     * @return subsidy
     */
    @Nullable
    @Schema(name = "subsidy", description = "{% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `subsidies`.  {% endnote %}  Общее вознаграждение партнеру за DBS-доставку и все скидки на товар:  * по промокодам; * по купонам; * по баллам Плюса; * по акциям.  Передается в валюте заказа. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_SUBSIDY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getSubsidy() {
        return subsidy;
    }

    @JsonProperty(JSON_PROPERTY_SUBSIDY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubsidy(BigDecimal subsidy) {
        this.subsidy = subsidy;
    }

    public OrderItemDTO partnerWarehouseId(String partnerWarehouseId) {
        this.partnerWarehouseId = partnerWarehouseId;
        return this;
    }

    /**
     * {% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Идентификатор склада в системе партнера, на который сформирован заказ. 
     * @return partnerWarehouseId
     */
    @Nullable
    @Schema(name = "partnerWarehouseId", description = "{% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Идентификатор склада в системе партнера, на который сформирован заказ. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PARTNER_WAREHOUSE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPartnerWarehouseId() {
        return partnerWarehouseId;
    }

    @JsonProperty(JSON_PROPERTY_PARTNER_WAREHOUSE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPartnerWarehouseId(String partnerWarehouseId) {
        this.partnerWarehouseId = partnerWarehouseId;
    }

    public OrderItemDTO promos(List<@Valid OrderItemPromoDTO> promos) {
        this.promos = promos;
        return this;
    }

    public OrderItemDTO addPromosItem(OrderItemPromoDTO promosItem) {
        if (this.promos == null) {
            this.promos = new ArrayList<>();
        }
        this.promos.add(promosItem);
        return this;
    }

    /**
     * Информация о вознаграждениях партнеру за скидки на товар по промокодам, купонам и акциям.
     * @return promos
     */
    @Nullable
    @Schema(name = "promos", description = "Информация о вознаграждениях партнеру за скидки на товар по промокодам, купонам и акциям.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PROMOS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid OrderItemPromoDTO> getPromos() {
        return promos;
    }

    @JsonProperty(JSON_PROPERTY_PROMOS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPromos(List<@Valid OrderItemPromoDTO> promos) {
        this.promos = promos;
    }

    public OrderItemDTO instances(List<@Valid OrderItemInstanceDTO> instances) {
        this.instances = instances;
        return this;
    }

    public OrderItemDTO addInstancesItem(OrderItemInstanceDTO instancesItem) {
        if (this.instances == null) {
            this.instances = new ArrayList<>();
        }
        this.instances.add(instancesItem);
        return this;
    }

    /**
     * Информация о маркировке единиц товара.  Возвращаются данные для маркировки, переданные в запросе [PUT campaigns/{campaignId}/orders/{orderId}/cis](../../reference/orders/provideOrderItemCis.md).  Если магазин еще не передавал коды для этого заказа, &#x60;instances&#x60; отсутствует. 
     * @return instances
     */
    @Nullable
    @Schema(name = "instances", description = "Информация о маркировке единиц товара.  Возвращаются данные для маркировки, переданные в запросе [PUT campaigns/{campaignId}/orders/{orderId}/cis](../../reference/orders/provideOrderItemCis.md).  Если магазин еще не передавал коды для этого заказа, `instances` отсутствует. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_INSTANCES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid OrderItemInstanceDTO> getInstances() {
        return instances;
    }

    @JsonProperty(JSON_PROPERTY_INSTANCES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInstances(List<@Valid OrderItemInstanceDTO> instances) {
        this.instances = instances;
    }

    public OrderItemDTO details(List<@Valid OrderItemDetailDTO> details) {
        this.details = details;
        return this;
    }

    public OrderItemDTO addDetailsItem(OrderItemDetailDTO detailsItem) {
        if (this.details == null) {
            this.details = new ArrayList<>();
        }
        this.details.add(detailsItem);
        return this;
    }

    /**
     * Информация об удалении товара из заказа. 
     * @return details
     */
    @Nullable
    @Schema(name = "details", description = "Информация об удалении товара из заказа. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DETAILS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid OrderItemDetailDTO> getDetails() {
        return details;
    }

    @JsonProperty(JSON_PROPERTY_DETAILS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDetails(List<@Valid OrderItemDetailDTO> details) {
        this.details = details;
    }

    public OrderItemDTO subsidies(List<@Valid OrderItemSubsidyDTO> subsidies) {
        this.subsidies = subsidies;
        return this;
    }

    public OrderItemDTO addSubsidiesItem(OrderItemSubsidyDTO subsidiesItem) {
        if (this.subsidies == null) {
            this.subsidies = new ArrayList<>();
        }
        this.subsidies.add(subsidiesItem);
        return this;
    }

    /**
     * Список субсидий по типам.
     * @return subsidies
     */
    @Nullable
    @Schema(name = "subsidies", description = "Список субсидий по типам.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_SUBSIDIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid OrderItemSubsidyDTO> getSubsidies() {
        return subsidies;
    }

    @JsonProperty(JSON_PROPERTY_SUBSIDIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubsidies(List<@Valid OrderItemSubsidyDTO> subsidies) {
        this.subsidies = subsidies;
    }

    public OrderItemDTO requiredInstanceTypes(List<OrderItemInstanceType> requiredInstanceTypes) {
        this.requiredInstanceTypes = requiredInstanceTypes;
        return this;
    }

    public OrderItemDTO addRequiredInstanceTypesItem(OrderItemInstanceType requiredInstanceTypesItem) {
        if (this.requiredInstanceTypes == null) {
            this.requiredInstanceTypes = new ArrayList<>();
        }
        this.requiredInstanceTypes.add(requiredInstanceTypesItem);
        return this;
    }

    /**
     * Список необходимых маркировок товара.
     * @return requiredInstanceTypes
     */
    @Nullable
    @Schema(name = "requiredInstanceTypes", description = "Список необходимых маркировок товара.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_REQUIRED_INSTANCE_TYPES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<OrderItemInstanceType> getRequiredInstanceTypes() {
        return requiredInstanceTypes;
    }

    @JsonProperty(JSON_PROPERTY_REQUIRED_INSTANCE_TYPES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRequiredInstanceTypes(List<OrderItemInstanceType> requiredInstanceTypes) {
        this.requiredInstanceTypes = requiredInstanceTypes;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OrderItemDTO orderItemDTO = (OrderItemDTO) o;
        return Objects.equals(this.id, orderItemDTO.id) &&
            Objects.equals(this.offerId, orderItemDTO.offerId) &&
            Objects.equals(this.offerName, orderItemDTO.offerName) &&
            Objects.equals(this.price, orderItemDTO.price) &&
            Objects.equals(this.buyerPrice, orderItemDTO.buyerPrice) &&
            Objects.equals(this.buyerPriceBeforeDiscount, orderItemDTO.buyerPriceBeforeDiscount) &&
            Objects.equals(this.priceBeforeDiscount, orderItemDTO.priceBeforeDiscount) &&
            Objects.equals(this.count, orderItemDTO.count) &&
            Objects.equals(this.vat, orderItemDTO.vat) &&
            Objects.equals(this.shopSku, orderItemDTO.shopSku) &&
            Objects.equals(this.subsidy, orderItemDTO.subsidy) &&
            Objects.equals(this.partnerWarehouseId, orderItemDTO.partnerWarehouseId) &&
            Objects.equals(this.promos, orderItemDTO.promos) &&
            Objects.equals(this.instances, orderItemDTO.instances) &&
            Objects.equals(this.details, orderItemDTO.details) &&
            Objects.equals(this.subsidies, orderItemDTO.subsidies) &&
            Objects.equals(this.requiredInstanceTypes, orderItemDTO.requiredInstanceTypes);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, offerId, offerName, price, buyerPrice, buyerPriceBeforeDiscount, priceBeforeDiscount, count, vat, shopSku, subsidy, partnerWarehouseId, promos, instances, details, subsidies, requiredInstanceTypes);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OrderItemDTO {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    offerId: ").append(toIndentedString(offerId)).append("\n");
        sb.append("    offerName: ").append(toIndentedString(offerName)).append("\n");
        sb.append("    price: ").append(toIndentedString(price)).append("\n");
        sb.append("    buyerPrice: ").append(toIndentedString(buyerPrice)).append("\n");
        sb.append("    buyerPriceBeforeDiscount: ").append(toIndentedString(buyerPriceBeforeDiscount)).append("\n");
        sb.append("    priceBeforeDiscount: ").append(toIndentedString(priceBeforeDiscount)).append("\n");
        sb.append("    count: ").append(toIndentedString(count)).append("\n");
        sb.append("    vat: ").append(toIndentedString(vat)).append("\n");
        sb.append("    shopSku: ").append(toIndentedString(shopSku)).append("\n");
        sb.append("    subsidy: ").append(toIndentedString(subsidy)).append("\n");
        sb.append("    partnerWarehouseId: ").append(toIndentedString(partnerWarehouseId)).append("\n");
        sb.append("    promos: ").append(toIndentedString(promos)).append("\n");
        sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
        sb.append("    details: ").append(toIndentedString(details)).append("\n");
        sb.append("    subsidies: ").append(toIndentedString(subsidies)).append("\n");
        sb.append("    requiredInstanceTypes: ").append(toIndentedString(requiredInstanceTypes)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

