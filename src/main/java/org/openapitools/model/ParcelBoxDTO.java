/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Элемент отображает одно грузовое место. Вложенные поля больше не используются, передавайте элемент пустым в запросах и не обращайте внимание на содержимое в ответах.
 */
@JsonPropertyOrder({
  ParcelBoxDTO.JSON_PROPERTY_ID,
  ParcelBoxDTO.JSON_PROPERTY_FULFILMENT_ID
})
@JsonTypeName("ParcelBoxDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class ParcelBoxDTO {
    public static final String JSON_PROPERTY_ID = "id";
    private Long id;

    public static final String JSON_PROPERTY_FULFILMENT_ID = "fulfilmentId";
    private String fulfilmentId;

    public ParcelBoxDTO() {
    }

    public ParcelBoxDTO id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * {% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %} 
     * @return id
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(Long id) {
        this.id = id;
    }

    public ParcelBoxDTO fulfilmentId(String fulfilmentId) {
        this.fulfilmentId = fulfilmentId;
        return this;
    }

    /**
     * {% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %} 
     * @return fulfilmentId
     */
    @Nullable
    @Pattern(regexp="^[\\p{Alnum}- ]*$")
    @JsonProperty(JSON_PROPERTY_FULFILMENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFulfilmentId() {
        return fulfilmentId;
    }

    @JsonProperty(JSON_PROPERTY_FULFILMENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFulfilmentId(String fulfilmentId) {
        this.fulfilmentId = fulfilmentId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ParcelBoxDTO parcelBoxDTO = (ParcelBoxDTO) o;
        return Objects.equals(this.id, parcelBoxDTO.id) &&
            Objects.equals(this.fulfilmentId, parcelBoxDTO.fulfilmentId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, fulfilmentId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ParcelBoxDTO {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    fulfilmentId: ").append(toIndentedString(fulfilmentId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

