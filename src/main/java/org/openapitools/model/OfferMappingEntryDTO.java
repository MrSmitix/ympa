/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.MappingsOfferDTO;
import org.openapitools.model.OfferMappingDTO;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Список товаров. 
 */
@Schema(name = "OfferMappingEntryDTO", description = "Список товаров. ")
@JsonPropertyOrder({
  OfferMappingEntryDTO.JSON_PROPERTY_MAPPING,
  OfferMappingEntryDTO.JSON_PROPERTY_AWAITING_MODERATION_MAPPING,
  OfferMappingEntryDTO.JSON_PROPERTY_REJECTED_MAPPING,
  OfferMappingEntryDTO.JSON_PROPERTY_OFFER
})
@JsonTypeName("OfferMappingEntryDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class OfferMappingEntryDTO {
    public static final String JSON_PROPERTY_MAPPING = "mapping";
    private OfferMappingDTO mapping;

    public static final String JSON_PROPERTY_AWAITING_MODERATION_MAPPING = "awaitingModerationMapping";
    private OfferMappingDTO awaitingModerationMapping;

    public static final String JSON_PROPERTY_REJECTED_MAPPING = "rejectedMapping";
    private OfferMappingDTO rejectedMapping;

    public static final String JSON_PROPERTY_OFFER = "offer";
    private MappingsOfferDTO offer;

    public OfferMappingEntryDTO() {
    }

    public OfferMappingEntryDTO mapping(OfferMappingDTO mapping) {
        this.mapping = mapping;
        return this;
    }

    /**
     * Get mapping
     * @return mapping
     */
    @Valid
    @Nullable
    @Schema(name = "mapping", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_MAPPING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OfferMappingDTO getMapping() {
        return mapping;
    }

    @JsonProperty(JSON_PROPERTY_MAPPING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMapping(OfferMappingDTO mapping) {
        this.mapping = mapping;
    }

    public OfferMappingEntryDTO awaitingModerationMapping(OfferMappingDTO awaitingModerationMapping) {
        this.awaitingModerationMapping = awaitingModerationMapping;
        return this;
    }

    /**
     * Get awaitingModerationMapping
     * @return awaitingModerationMapping
     */
    @Valid
    @Nullable
    @Schema(name = "awaitingModerationMapping", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_AWAITING_MODERATION_MAPPING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OfferMappingDTO getAwaitingModerationMapping() {
        return awaitingModerationMapping;
    }

    @JsonProperty(JSON_PROPERTY_AWAITING_MODERATION_MAPPING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAwaitingModerationMapping(OfferMappingDTO awaitingModerationMapping) {
        this.awaitingModerationMapping = awaitingModerationMapping;
    }

    public OfferMappingEntryDTO rejectedMapping(OfferMappingDTO rejectedMapping) {
        this.rejectedMapping = rejectedMapping;
        return this;
    }

    /**
     * Get rejectedMapping
     * @return rejectedMapping
     */
    @Valid
    @Nullable
    @Schema(name = "rejectedMapping", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_REJECTED_MAPPING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OfferMappingDTO getRejectedMapping() {
        return rejectedMapping;
    }

    @JsonProperty(JSON_PROPERTY_REJECTED_MAPPING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRejectedMapping(OfferMappingDTO rejectedMapping) {
        this.rejectedMapping = rejectedMapping;
    }

    public OfferMappingEntryDTO offer(MappingsOfferDTO offer) {
        this.offer = offer;
        return this;
    }

    /**
     * Get offer
     * @return offer
     */
    @Valid
    @Nullable
    @Schema(name = "offer", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_OFFER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public MappingsOfferDTO getOffer() {
        return offer;
    }

    @JsonProperty(JSON_PROPERTY_OFFER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOffer(MappingsOfferDTO offer) {
        this.offer = offer;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OfferMappingEntryDTO offerMappingEntryDTO = (OfferMappingEntryDTO) o;
        return Objects.equals(this.mapping, offerMappingEntryDTO.mapping) &&
            Objects.equals(this.awaitingModerationMapping, offerMappingEntryDTO.awaitingModerationMapping) &&
            Objects.equals(this.rejectedMapping, offerMappingEntryDTO.rejectedMapping) &&
            Objects.equals(this.offer, offerMappingEntryDTO.offer);
    }

    @Override
    public int hashCode() {
        return Objects.hash(mapping, awaitingModerationMapping, rejectedMapping, offer);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OfferMappingEntryDTO {\n");
        sb.append("    mapping: ").append(toIndentedString(mapping)).append("\n");
        sb.append("    awaitingModerationMapping: ").append(toIndentedString(awaitingModerationMapping)).append("\n");
        sb.append("    rejectedMapping: ").append(toIndentedString(rejectedMapping)).append("\n");
        sb.append("    offer: ").append(toIndentedString(offer)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

