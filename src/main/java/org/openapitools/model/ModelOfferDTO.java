/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Информация о предложении.
 */
@Schema(name = "ModelOfferDTO", description = "Информация о предложении.")
@JsonPropertyOrder({
  ModelOfferDTO.JSON_PROPERTY_DISCOUNT,
  ModelOfferDTO.JSON_PROPERTY_NAME,
  ModelOfferDTO.JSON_PROPERTY_POS,
  ModelOfferDTO.JSON_PROPERTY_PRE_DISCOUNT_PRICE,
  ModelOfferDTO.JSON_PROPERTY_PRICE,
  ModelOfferDTO.JSON_PROPERTY_REGION_ID,
  ModelOfferDTO.JSON_PROPERTY_SHIPPING_COST,
  ModelOfferDTO.JSON_PROPERTY_SHOP_NAME,
  ModelOfferDTO.JSON_PROPERTY_SHOP_RATING,
  ModelOfferDTO.JSON_PROPERTY_IN_STOCK
})
@JsonTypeName("ModelOfferDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class ModelOfferDTO {
    public static final String JSON_PROPERTY_DISCOUNT = "discount";
    private Integer discount;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_POS = "pos";
    private Integer pos;

    public static final String JSON_PROPERTY_PRE_DISCOUNT_PRICE = "preDiscountPrice";
    private BigDecimal preDiscountPrice;

    public static final String JSON_PROPERTY_PRICE = "price";
    private BigDecimal price;

    public static final String JSON_PROPERTY_REGION_ID = "regionId";
    private Long regionId;

    public static final String JSON_PROPERTY_SHIPPING_COST = "shippingCost";
    private BigDecimal shippingCost;

    public static final String JSON_PROPERTY_SHOP_NAME = "shopName";
    private String shopName;

    public static final String JSON_PROPERTY_SHOP_RATING = "shopRating";
    private Integer shopRating;

    public static final String JSON_PROPERTY_IN_STOCK = "inStock";
    private Integer inStock;

    public ModelOfferDTO() {
    }

    public ModelOfferDTO discount(Integer discount) {
        this.discount = discount;
        return this;
    }

    /**
     * Скидка на предложение в процентах.
     * @return discount
     */
    @Nullable
    @Schema(name = "discount", description = "Скидка на предложение в процентах.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_DISCOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getDiscount() {
        return discount;
    }

    @JsonProperty(JSON_PROPERTY_DISCOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDiscount(Integer discount) {
        this.discount = discount;
    }

    public ModelOfferDTO name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Наименование предложения.
     * @return name
     */
    @Nullable
    @Schema(name = "name", description = "Наименование предложения.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(String name) {
        this.name = name;
    }

    public ModelOfferDTO pos(Integer pos) {
        this.pos = pos;
        return this;
    }

    /**
     * Позиция предложения в выдаче Маркета на карточке модели.
     * @return pos
     */
    @Nullable
    @Schema(name = "pos", description = "Позиция предложения в выдаче Маркета на карточке модели.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_POS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getPos() {
        return pos;
    }

    @JsonProperty(JSON_PROPERTY_POS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPos(Integer pos) {
        this.pos = pos;
    }

    public ModelOfferDTO preDiscountPrice(BigDecimal preDiscountPrice) {
        this.preDiscountPrice = preDiscountPrice;
        return this;
    }

    /**
     * Цена предложения без скидки магазина.
     * @return preDiscountPrice
     */
    @Nullable
    @Schema(name = "preDiscountPrice", description = "Цена предложения без скидки магазина.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PRE_DISCOUNT_PRICE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getPreDiscountPrice() {
        return preDiscountPrice;
    }

    @JsonProperty(JSON_PROPERTY_PRE_DISCOUNT_PRICE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPreDiscountPrice(BigDecimal preDiscountPrice) {
        this.preDiscountPrice = preDiscountPrice;
    }

    public ModelOfferDTO price(BigDecimal price) {
        this.price = price;
        return this;
    }

    /**
     * Цена предложения без скидки, которую получает покупатель при оплате через Yandex Pay.
     * @return price
     */
    @Nullable
    @Schema(name = "price", description = "Цена предложения без скидки, которую получает покупатель при оплате через Yandex Pay.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_PRICE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getPrice() {
        return price;
    }

    @JsonProperty(JSON_PROPERTY_PRICE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    public ModelOfferDTO regionId(Long regionId) {
        this.regionId = regionId;
        return this;
    }

    /**
     * Идентификатор региона предложения (регион, откуда доставляется товар).  Сначала показываются предложения, доставляемые из региона, указанного в запросе в параметре &#x60;regionId&#x60;. Предложения, доставляемые из других регионов, показываются после них. 
     * @return regionId
     */
    @Nullable
    @Schema(name = "regionId", description = "Идентификатор региона предложения (регион, откуда доставляется товар).  Сначала показываются предложения, доставляемые из региона, указанного в запросе в параметре `regionId`. Предложения, доставляемые из других регионов, показываются после них. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_REGION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getRegionId() {
        return regionId;
    }

    @JsonProperty(JSON_PROPERTY_REGION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRegionId(Long regionId) {
        this.regionId = regionId;
    }

    public ModelOfferDTO shippingCost(BigDecimal shippingCost) {
        this.shippingCost = shippingCost;
        return this;
    }

    /**
     * Стоимость доставки товара в регион:  * &#x60;0&#x60; — доставка осуществляется бесплатно. * &#x60;-1&#x60; — магазин не осуществляет доставку этого товара (самовывоз).  Если стоимость доставки неизвестна, параметр не выводится. 
     * @return shippingCost
     */
    @Nullable
    @Schema(name = "shippingCost", description = "Стоимость доставки товара в регион:  * `0` — доставка осуществляется бесплатно. * `-1` — магазин не осуществляет доставку этого товара (самовывоз).  Если стоимость доставки неизвестна, параметр не выводится. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_SHIPPING_COST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getShippingCost() {
        return shippingCost;
    }

    @JsonProperty(JSON_PROPERTY_SHIPPING_COST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setShippingCost(BigDecimal shippingCost) {
        this.shippingCost = shippingCost;
    }

    public ModelOfferDTO shopName(String shopName) {
        this.shopName = shopName;
        return this;
    }

    /**
     * Название магазина (в том виде, в котором отображается на Маркете).
     * @return shopName
     */
    @Nullable
    @Schema(name = "shopName", description = "Название магазина (в том виде, в котором отображается на Маркете).", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_SHOP_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getShopName() {
        return shopName;
    }

    @JsonProperty(JSON_PROPERTY_SHOP_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setShopName(String shopName) {
        this.shopName = shopName;
    }

    public ModelOfferDTO shopRating(Integer shopRating) {
        this.shopRating = shopRating;
        return this;
    }

    /**
     * Рейтинг магазина.  Возможные значения: * &#x60;-1&#x60; — у магазинов, недавно появившихся на Маркете, рейтинг появляется не сразу. До момента появления рейтинга для таких магазинов возвращается значение &#x60;-1&#x60;. * &#x60;1&#x60;. * &#x60;2&#x60;. * &#x60;3&#x60;. * &#x60;4&#x60;. * &#x60;5&#x60;. 
     * @return shopRating
     */
    @Nullable
    @Schema(name = "shopRating", description = "Рейтинг магазина.  Возможные значения: * `-1` — у магазинов, недавно появившихся на Маркете, рейтинг появляется не сразу. До момента появления рейтинга для таких магазинов возвращается значение `-1`. * `1`. * `2`. * `3`. * `4`. * `5`. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_SHOP_RATING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getShopRating() {
        return shopRating;
    }

    @JsonProperty(JSON_PROPERTY_SHOP_RATING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setShopRating(Integer shopRating) {
        this.shopRating = shopRating;
    }

    public ModelOfferDTO inStock(Integer inStock) {
        this.inStock = inStock;
        return this;
    }

    /**
     * {% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %} 
     * @return inStock
     */
    @Nullable
    @Schema(name = "inStock", description = "{% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %} ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_IN_STOCK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getInStock() {
        return inStock;
    }

    @JsonProperty(JSON_PROPERTY_IN_STOCK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInStock(Integer inStock) {
        this.inStock = inStock;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ModelOfferDTO modelOfferDTO = (ModelOfferDTO) o;
        return Objects.equals(this.discount, modelOfferDTO.discount) &&
            Objects.equals(this.name, modelOfferDTO.name) &&
            Objects.equals(this.pos, modelOfferDTO.pos) &&
            Objects.equals(this.preDiscountPrice, modelOfferDTO.preDiscountPrice) &&
            Objects.equals(this.price, modelOfferDTO.price) &&
            Objects.equals(this.regionId, modelOfferDTO.regionId) &&
            Objects.equals(this.shippingCost, modelOfferDTO.shippingCost) &&
            Objects.equals(this.shopName, modelOfferDTO.shopName) &&
            Objects.equals(this.shopRating, modelOfferDTO.shopRating) &&
            Objects.equals(this.inStock, modelOfferDTO.inStock);
    }

    @Override
    public int hashCode() {
        return Objects.hash(discount, name, pos, preDiscountPrice, price, regionId, shippingCost, shopName, shopRating, inStock);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ModelOfferDTO {\n");
        sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    pos: ").append(toIndentedString(pos)).append("\n");
        sb.append("    preDiscountPrice: ").append(toIndentedString(preDiscountPrice)).append("\n");
        sb.append("    price: ").append(toIndentedString(price)).append("\n");
        sb.append("    regionId: ").append(toIndentedString(regionId)).append("\n");
        sb.append("    shippingCost: ").append(toIndentedString(shippingCost)).append("\n");
        sb.append("    shopName: ").append(toIndentedString(shopName)).append("\n");
        sb.append("    shopRating: ").append(toIndentedString(shopRating)).append("\n");
        sb.append("    inStock: ").append(toIndentedString(inStock)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

