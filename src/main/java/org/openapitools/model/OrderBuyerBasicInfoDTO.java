/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import org.openapitools.model.OrderBuyerType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Информация о покупателе с базовыми полями.
 */
@JsonPropertyOrder({
  OrderBuyerBasicInfoDTO.JSON_PROPERTY_ID,
  OrderBuyerBasicInfoDTO.JSON_PROPERTY_LAST_NAME,
  OrderBuyerBasicInfoDTO.JSON_PROPERTY_FIRST_NAME,
  OrderBuyerBasicInfoDTO.JSON_PROPERTY_MIDDLE_NAME,
  OrderBuyerBasicInfoDTO.JSON_PROPERTY_TYPE
})
@JsonTypeName("OrderBuyerBasicInfoDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class OrderBuyerBasicInfoDTO {
    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_LAST_NAME = "lastName";
    private String lastName;

    public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
    private String firstName;

    public static final String JSON_PROPERTY_MIDDLE_NAME = "middleName";
    private String middleName;

    public static final String JSON_PROPERTY_TYPE = "type";
    private OrderBuyerType type;

    public OrderBuyerBasicInfoDTO() {
    }

    public OrderBuyerBasicInfoDTO id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Идентификатор покупателя.
     * @return id
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(String id) {
        this.id = id;
    }

    public OrderBuyerBasicInfoDTO lastName(String lastName) {
        this.lastName = lastName;
        return this;
    }

    /**
     * Фамилия покупателя.
     * @return lastName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_LAST_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getLastName() {
        return lastName;
    }

    @JsonProperty(JSON_PROPERTY_LAST_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public OrderBuyerBasicInfoDTO firstName(String firstName) {
        this.firstName = firstName;
        return this;
    }

    /**
     * Имя покупателя.
     * @return firstName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FIRST_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFirstName() {
        return firstName;
    }

    @JsonProperty(JSON_PROPERTY_FIRST_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public OrderBuyerBasicInfoDTO middleName(String middleName) {
        this.middleName = middleName;
        return this;
    }

    /**
     * Отчество покупателя.
     * @return middleName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getMiddleName() {
        return middleName;
    }

    @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMiddleName(String middleName) {
        this.middleName = middleName;
    }

    public OrderBuyerBasicInfoDTO type(OrderBuyerType type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     * @return type
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OrderBuyerType getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setType(OrderBuyerType type) {
        this.type = type;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OrderBuyerBasicInfoDTO orderBuyerBasicInfoDTO = (OrderBuyerBasicInfoDTO) o;
        return Objects.equals(this.id, orderBuyerBasicInfoDTO.id) &&
            Objects.equals(this.lastName, orderBuyerBasicInfoDTO.lastName) &&
            Objects.equals(this.firstName, orderBuyerBasicInfoDTO.firstName) &&
            Objects.equals(this.middleName, orderBuyerBasicInfoDTO.middleName) &&
            Objects.equals(this.type, orderBuyerBasicInfoDTO.type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, lastName, firstName, middleName, type);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OrderBuyerBasicInfoDTO {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
        sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
        sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

