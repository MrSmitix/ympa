/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.model.CurrencyType;
import org.openapitools.model.OrderBuyerDTO;
import org.openapitools.model.OrderDeliveryDTO;
import org.openapitools.model.OrderItemDTO;
import org.openapitools.model.OrderPaymentMethodType;
import org.openapitools.model.OrderPaymentType;
import org.openapitools.model.OrderStatusType;
import org.openapitools.model.OrderSubsidyDTO;
import org.openapitools.model.OrderSubstatusType;
import org.openapitools.model.OrderTaxSystemType;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Заказ.
 */
@JsonPropertyOrder({
  OrderDTO.JSON_PROPERTY_ID,
  OrderDTO.JSON_PROPERTY_STATUS,
  OrderDTO.JSON_PROPERTY_SUBSTATUS,
  OrderDTO.JSON_PROPERTY_CREATION_DATE,
  OrderDTO.JSON_PROPERTY_UPDATED_AT,
  OrderDTO.JSON_PROPERTY_CURRENCY,
  OrderDTO.JSON_PROPERTY_ITEMS_TOTAL,
  OrderDTO.JSON_PROPERTY_DELIVERY_TOTAL,
  OrderDTO.JSON_PROPERTY_BUYER_ITEMS_TOTAL,
  OrderDTO.JSON_PROPERTY_BUYER_TOTAL,
  OrderDTO.JSON_PROPERTY_BUYER_ITEMS_TOTAL_BEFORE_DISCOUNT,
  OrderDTO.JSON_PROPERTY_BUYER_TOTAL_BEFORE_DISCOUNT,
  OrderDTO.JSON_PROPERTY_PAYMENT_TYPE,
  OrderDTO.JSON_PROPERTY_PAYMENT_METHOD,
  OrderDTO.JSON_PROPERTY_FAKE,
  OrderDTO.JSON_PROPERTY_ITEMS,
  OrderDTO.JSON_PROPERTY_SUBSIDIES,
  OrderDTO.JSON_PROPERTY_DELIVERY,
  OrderDTO.JSON_PROPERTY_BUYER,
  OrderDTO.JSON_PROPERTY_NOTES,
  OrderDTO.JSON_PROPERTY_TAX_SYSTEM,
  OrderDTO.JSON_PROPERTY_CANCEL_REQUESTED,
  OrderDTO.JSON_PROPERTY_EXPIRY_DATE
})
@JsonTypeName("OrderDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class OrderDTO {
    public static final String JSON_PROPERTY_ID = "id";
    private Long id;

    public static final String JSON_PROPERTY_STATUS = "status";
    private OrderStatusType status;

    public static final String JSON_PROPERTY_SUBSTATUS = "substatus";
    private OrderSubstatusType substatus;

    public static final String JSON_PROPERTY_CREATION_DATE = "creationDate";
    private String creationDate;

    public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
    private String updatedAt;

    public static final String JSON_PROPERTY_CURRENCY = "currency";
    private CurrencyType currency;

    public static final String JSON_PROPERTY_ITEMS_TOTAL = "itemsTotal";
    private BigDecimal itemsTotal;

    public static final String JSON_PROPERTY_DELIVERY_TOTAL = "deliveryTotal";
    private BigDecimal deliveryTotal;

    public static final String JSON_PROPERTY_BUYER_ITEMS_TOTAL = "buyerItemsTotal";
    private BigDecimal buyerItemsTotal;

    public static final String JSON_PROPERTY_BUYER_TOTAL = "buyerTotal";
    private BigDecimal buyerTotal;

    public static final String JSON_PROPERTY_BUYER_ITEMS_TOTAL_BEFORE_DISCOUNT = "buyerItemsTotalBeforeDiscount";
    private BigDecimal buyerItemsTotalBeforeDiscount;

    public static final String JSON_PROPERTY_BUYER_TOTAL_BEFORE_DISCOUNT = "buyerTotalBeforeDiscount";
    private BigDecimal buyerTotalBeforeDiscount;

    public static final String JSON_PROPERTY_PAYMENT_TYPE = "paymentType";
    private OrderPaymentType paymentType;

    public static final String JSON_PROPERTY_PAYMENT_METHOD = "paymentMethod";
    private OrderPaymentMethodType paymentMethod;

    public static final String JSON_PROPERTY_FAKE = "fake";
    private Boolean fake;

    public static final String JSON_PROPERTY_ITEMS = "items";
    private List<@Valid OrderItemDTO> items = new ArrayList<>();

    public static final String JSON_PROPERTY_SUBSIDIES = "subsidies";
    private List<@Valid OrderSubsidyDTO> subsidies = null;

    public static final String JSON_PROPERTY_DELIVERY = "delivery";
    private OrderDeliveryDTO delivery;

    public static final String JSON_PROPERTY_BUYER = "buyer";
    private OrderBuyerDTO buyer;

    public static final String JSON_PROPERTY_NOTES = "notes";
    private String notes;

    public static final String JSON_PROPERTY_TAX_SYSTEM = "taxSystem";
    private OrderTaxSystemType taxSystem;

    public static final String JSON_PROPERTY_CANCEL_REQUESTED = "cancelRequested";
    private Boolean cancelRequested;

    public static final String JSON_PROPERTY_EXPIRY_DATE = "expiryDate";
    private String expiryDate;

    public OrderDTO(List<@Valid OrderItemDTO> items) {
        this.items = items;
    }

    public OrderDTO id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Идентификатор заказа.
     * @return id
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(Long id) {
        this.id = id;
    }

    public OrderDTO status(OrderStatusType status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     * @return status
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OrderStatusType getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStatus(OrderStatusType status) {
        this.status = status;
    }

    public OrderDTO substatus(OrderSubstatusType substatus) {
        this.substatus = substatus;
        return this;
    }

    /**
     * Get substatus
     * @return substatus
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBSTATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OrderSubstatusType getSubstatus() {
        return substatus;
    }

    @JsonProperty(JSON_PROPERTY_SUBSTATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubstatus(OrderSubstatusType substatus) {
        this.substatus = substatus;
    }

    public OrderDTO creationDate(String creationDate) {
        this.creationDate = creationDate;
        return this;
    }

    /**
     * Get creationDate
     * @return creationDate
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_CREATION_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCreationDate() {
        return creationDate;
    }

    @JsonProperty(JSON_PROPERTY_CREATION_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCreationDate(String creationDate) {
        this.creationDate = creationDate;
    }

    public OrderDTO updatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Get updatedAt
     * @return updatedAt
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getUpdatedAt() {
        return updatedAt;
    }

    @JsonProperty(JSON_PROPERTY_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
    }

    public OrderDTO currency(CurrencyType currency) {
        this.currency = currency;
        return this;
    }

    /**
     * Get currency
     * @return currency
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_CURRENCY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public CurrencyType getCurrency() {
        return currency;
    }

    @JsonProperty(JSON_PROPERTY_CURRENCY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCurrency(CurrencyType currency) {
        this.currency = currency;
    }

    public OrderDTO itemsTotal(BigDecimal itemsTotal) {
        this.itemsTotal = itemsTotal;
        return this;
    }

    /**
     * Платеж покупателя. 
     * @return itemsTotal
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_ITEMS_TOTAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getItemsTotal() {
        return itemsTotal;
    }

    @JsonProperty(JSON_PROPERTY_ITEMS_TOTAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setItemsTotal(BigDecimal itemsTotal) {
        this.itemsTotal = itemsTotal;
    }

    public OrderDTO deliveryTotal(BigDecimal deliveryTotal) {
        this.deliveryTotal = deliveryTotal;
        return this;
    }

    /**
     * Стоимость доставки. 
     * @return deliveryTotal
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_DELIVERY_TOTAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getDeliveryTotal() {
        return deliveryTotal;
    }

    @JsonProperty(JSON_PROPERTY_DELIVERY_TOTAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDeliveryTotal(BigDecimal deliveryTotal) {
        this.deliveryTotal = deliveryTotal;
    }

    public OrderDTO buyerItemsTotal(BigDecimal buyerItemsTotal) {
        this.buyerItemsTotal = buyerItemsTotal;
        return this;
    }

    /**
     * {% note warning \&quot;\&quot; %}  Этот параметр устарел.  {% endnote %}  Стоимость всех товаров в заказе в валюте покупателя после применения скидок и без учета стоимости доставки. 
     * @return buyerItemsTotal
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_BUYER_ITEMS_TOTAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getBuyerItemsTotal() {
        return buyerItemsTotal;
    }

    @JsonProperty(JSON_PROPERTY_BUYER_ITEMS_TOTAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBuyerItemsTotal(BigDecimal buyerItemsTotal) {
        this.buyerItemsTotal = buyerItemsTotal;
    }

    public OrderDTO buyerTotal(BigDecimal buyerTotal) {
        this.buyerTotal = buyerTotal;
        return this;
    }

    /**
     * {% note warning \&quot;\&quot; %}  Этот параметр устарел.  {% endnote %}  Стоимость всех товаров в заказе в валюте покупателя после применения скидок и с учетом стоимости доставки. 
     * @return buyerTotal
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_BUYER_TOTAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getBuyerTotal() {
        return buyerTotal;
    }

    @JsonProperty(JSON_PROPERTY_BUYER_TOTAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBuyerTotal(BigDecimal buyerTotal) {
        this.buyerTotal = buyerTotal;
    }

    public OrderDTO buyerItemsTotalBeforeDiscount(BigDecimal buyerItemsTotalBeforeDiscount) {
        this.buyerItemsTotalBeforeDiscount = buyerItemsTotalBeforeDiscount;
        return this;
    }

    /**
     * Стоимость всех товаров в заказе в валюте покупателя без учета стоимости доставки и до применения скидок по:  * акциям; * купонам; * промокодам. 
     * @return buyerItemsTotalBeforeDiscount
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_BUYER_ITEMS_TOTAL_BEFORE_DISCOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getBuyerItemsTotalBeforeDiscount() {
        return buyerItemsTotalBeforeDiscount;
    }

    @JsonProperty(JSON_PROPERTY_BUYER_ITEMS_TOTAL_BEFORE_DISCOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBuyerItemsTotalBeforeDiscount(BigDecimal buyerItemsTotalBeforeDiscount) {
        this.buyerItemsTotalBeforeDiscount = buyerItemsTotalBeforeDiscount;
    }

    public OrderDTO buyerTotalBeforeDiscount(BigDecimal buyerTotalBeforeDiscount) {
        this.buyerTotalBeforeDiscount = buyerTotalBeforeDiscount;
        return this;
    }

    /**
     * {% note warning \&quot;\&quot; %}  Этот параметр устарел.  {% endnote %}  Стоимость всех товаров в заказе в валюте покупателя до применения скидок и с учетом стоимости доставки (&#x60;buyerItemsTotalBeforeDiscount&#x60; + стоимость доставки). 
     * @return buyerTotalBeforeDiscount
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_BUYER_TOTAL_BEFORE_DISCOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getBuyerTotalBeforeDiscount() {
        return buyerTotalBeforeDiscount;
    }

    @JsonProperty(JSON_PROPERTY_BUYER_TOTAL_BEFORE_DISCOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBuyerTotalBeforeDiscount(BigDecimal buyerTotalBeforeDiscount) {
        this.buyerTotalBeforeDiscount = buyerTotalBeforeDiscount;
    }

    public OrderDTO paymentType(OrderPaymentType paymentType) {
        this.paymentType = paymentType;
        return this;
    }

    /**
     * Get paymentType
     * @return paymentType
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_PAYMENT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OrderPaymentType getPaymentType() {
        return paymentType;
    }

    @JsonProperty(JSON_PROPERTY_PAYMENT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPaymentType(OrderPaymentType paymentType) {
        this.paymentType = paymentType;
    }

    public OrderDTO paymentMethod(OrderPaymentMethodType paymentMethod) {
        this.paymentMethod = paymentMethod;
        return this;
    }

    /**
     * Get paymentMethod
     * @return paymentMethod
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OrderPaymentMethodType getPaymentMethod() {
        return paymentMethod;
    }

    @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPaymentMethod(OrderPaymentMethodType paymentMethod) {
        this.paymentMethod = paymentMethod;
    }

    public OrderDTO fake(Boolean fake) {
        this.fake = fake;
        return this;
    }

    /**
     * Тип заказа:  * &#x60;false&#x60; — настоящий заказ покупателя.  * &#x60;true&#x60; — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. 
     * @return fake
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_FAKE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getFake() {
        return fake;
    }

    @JsonProperty(JSON_PROPERTY_FAKE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFake(Boolean fake) {
        this.fake = fake;
    }

    public OrderDTO items(List<@Valid OrderItemDTO> items) {
        this.items = items;
        return this;
    }

    public OrderDTO addItemsItem(OrderItemDTO itemsItem) {
        this.items.add(itemsItem);
        return this;
    }

    /**
     * Список товаров в заказе.
     * @return items
     */
    @NotNull
    @JsonProperty(JSON_PROPERTY_ITEMS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<@Valid OrderItemDTO> getItems() {
        return items;
    }

    @JsonProperty(JSON_PROPERTY_ITEMS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setItems(List<@Valid OrderItemDTO> items) {
        this.items = items;
    }

    public OrderDTO subsidies(List<@Valid OrderSubsidyDTO> subsidies) {
        this.subsidies = subsidies;
        return this;
    }

    public OrderDTO addSubsidiesItem(OrderSubsidyDTO subsidiesItem) {
        if (this.subsidies == null) {
            this.subsidies = new ArrayList<>();
        }
        this.subsidies.add(subsidiesItem);
        return this;
    }

    /**
     * Список субсидий по типам.
     * @return subsidies
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUBSIDIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<@Valid OrderSubsidyDTO> getSubsidies() {
        return subsidies;
    }

    @JsonProperty(JSON_PROPERTY_SUBSIDIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubsidies(List<@Valid OrderSubsidyDTO> subsidies) {
        this.subsidies = subsidies;
    }

    public OrderDTO delivery(OrderDeliveryDTO delivery) {
        this.delivery = delivery;
        return this;
    }

    /**
     * Get delivery
     * @return delivery
     */
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_DELIVERY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OrderDeliveryDTO getDelivery() {
        return delivery;
    }

    @JsonProperty(JSON_PROPERTY_DELIVERY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDelivery(OrderDeliveryDTO delivery) {
        this.delivery = delivery;
    }

    public OrderDTO buyer(OrderBuyerDTO buyer) {
        this.buyer = buyer;
        return this;
    }

    /**
     * Get buyer
     * @return buyer
     */
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_BUYER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OrderBuyerDTO getBuyer() {
        return buyer;
    }

    @JsonProperty(JSON_PROPERTY_BUYER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBuyer(OrderBuyerDTO buyer) {
        this.buyer = buyer;
    }

    public OrderDTO notes(String notes) {
        this.notes = notes;
        return this;
    }

    /**
     * Комментарий к заказу.
     * @return notes
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_NOTES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getNotes() {
        return notes;
    }

    @JsonProperty(JSON_PROPERTY_NOTES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNotes(String notes) {
        this.notes = notes;
    }

    public OrderDTO taxSystem(OrderTaxSystemType taxSystem) {
        this.taxSystem = taxSystem;
        return this;
    }

    /**
     * Get taxSystem
     * @return taxSystem
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_TAX_SYSTEM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OrderTaxSystemType getTaxSystem() {
        return taxSystem;
    }

    @JsonProperty(JSON_PROPERTY_TAX_SYSTEM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTaxSystem(OrderTaxSystemType taxSystem) {
        this.taxSystem = taxSystem;
    }

    public OrderDTO cancelRequested(Boolean cancelRequested) {
        this.cancelRequested = cancelRequested;
        return this;
    }

    /**
     * **Только для модели DBS**  Запрошена ли отмена. 
     * @return cancelRequested
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_CANCEL_REQUESTED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getCancelRequested() {
        return cancelRequested;
    }

    @JsonProperty(JSON_PROPERTY_CANCEL_REQUESTED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCancelRequested(Boolean cancelRequested) {
        this.cancelRequested = cancelRequested;
    }

    public OrderDTO expiryDate(String expiryDate) {
        this.expiryDate = expiryDate;
        return this;
    }

    /**
     * Get expiryDate
     * @return expiryDate
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getExpiryDate() {
        return expiryDate;
    }

    @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExpiryDate(String expiryDate) {
        this.expiryDate = expiryDate;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OrderDTO orderDTO = (OrderDTO) o;
        return Objects.equals(this.id, orderDTO.id) &&
            Objects.equals(this.status, orderDTO.status) &&
            Objects.equals(this.substatus, orderDTO.substatus) &&
            Objects.equals(this.creationDate, orderDTO.creationDate) &&
            Objects.equals(this.updatedAt, orderDTO.updatedAt) &&
            Objects.equals(this.currency, orderDTO.currency) &&
            Objects.equals(this.itemsTotal, orderDTO.itemsTotal) &&
            Objects.equals(this.deliveryTotal, orderDTO.deliveryTotal) &&
            Objects.equals(this.buyerItemsTotal, orderDTO.buyerItemsTotal) &&
            Objects.equals(this.buyerTotal, orderDTO.buyerTotal) &&
            Objects.equals(this.buyerItemsTotalBeforeDiscount, orderDTO.buyerItemsTotalBeforeDiscount) &&
            Objects.equals(this.buyerTotalBeforeDiscount, orderDTO.buyerTotalBeforeDiscount) &&
            Objects.equals(this.paymentType, orderDTO.paymentType) &&
            Objects.equals(this.paymentMethod, orderDTO.paymentMethod) &&
            Objects.equals(this.fake, orderDTO.fake) &&
            Objects.equals(this.items, orderDTO.items) &&
            Objects.equals(this.subsidies, orderDTO.subsidies) &&
            Objects.equals(this.delivery, orderDTO.delivery) &&
            Objects.equals(this.buyer, orderDTO.buyer) &&
            Objects.equals(this.notes, orderDTO.notes) &&
            Objects.equals(this.taxSystem, orderDTO.taxSystem) &&
            Objects.equals(this.cancelRequested, orderDTO.cancelRequested) &&
            Objects.equals(this.expiryDate, orderDTO.expiryDate);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, status, substatus, creationDate, updatedAt, currency, itemsTotal, deliveryTotal, buyerItemsTotal, buyerTotal, buyerItemsTotalBeforeDiscount, buyerTotalBeforeDiscount, paymentType, paymentMethod, fake, items, subsidies, delivery, buyer, notes, taxSystem, cancelRequested, expiryDate);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OrderDTO {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    substatus: ").append(toIndentedString(substatus)).append("\n");
        sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
        sb.append("    itemsTotal: ").append(toIndentedString(itemsTotal)).append("\n");
        sb.append("    deliveryTotal: ").append(toIndentedString(deliveryTotal)).append("\n");
        sb.append("    buyerItemsTotal: ").append(toIndentedString(buyerItemsTotal)).append("\n");
        sb.append("    buyerTotal: ").append(toIndentedString(buyerTotal)).append("\n");
        sb.append("    buyerItemsTotalBeforeDiscount: ").append(toIndentedString(buyerItemsTotalBeforeDiscount)).append("\n");
        sb.append("    buyerTotalBeforeDiscount: ").append(toIndentedString(buyerTotalBeforeDiscount)).append("\n");
        sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
        sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
        sb.append("    fake: ").append(toIndentedString(fake)).append("\n");
        sb.append("    items: ").append(toIndentedString(items)).append("\n");
        sb.append("    subsidies: ").append(toIndentedString(subsidies)).append("\n");
        sb.append("    delivery: ").append(toIndentedString(delivery)).append("\n");
        sb.append("    buyer: ").append(toIndentedString(buyer)).append("\n");
        sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
        sb.append("    taxSystem: ").append(toIndentedString(taxSystem)).append("\n");
        sb.append("    cancelRequested: ").append(toIndentedString(cancelRequested)).append("\n");
        sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

