/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Информация о товарах в каталоге. 
 */
@JsonPropertyOrder({
  GetMappingDTO.JSON_PROPERTY_MARKET_SKU,
  GetMappingDTO.JSON_PROPERTY_MARKET_SKU_NAME,
  GetMappingDTO.JSON_PROPERTY_MARKET_MODEL_ID,
  GetMappingDTO.JSON_PROPERTY_MARKET_MODEL_NAME,
  GetMappingDTO.JSON_PROPERTY_MARKET_CATEGORY_ID,
  GetMappingDTO.JSON_PROPERTY_MARKET_CATEGORY_NAME
})
@JsonTypeName("GetMappingDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-09-09T21:59:28.310012434Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class GetMappingDTO {
    public static final String JSON_PROPERTY_MARKET_SKU = "marketSku";
    private Long marketSku;

    public static final String JSON_PROPERTY_MARKET_SKU_NAME = "marketSkuName";
    private String marketSkuName;

    public static final String JSON_PROPERTY_MARKET_MODEL_ID = "marketModelId";
    private Long marketModelId;

    public static final String JSON_PROPERTY_MARKET_MODEL_NAME = "marketModelName";
    private String marketModelName;

    public static final String JSON_PROPERTY_MARKET_CATEGORY_ID = "marketCategoryId";
    private Long marketCategoryId;

    public static final String JSON_PROPERTY_MARKET_CATEGORY_NAME = "marketCategoryName";
    private String marketCategoryName;

    public GetMappingDTO() {
    }

    public GetMappingDTO marketSku(Long marketSku) {
        this.marketSku = marketSku;
        return this;
    }

    /**
     * SKU на Маркете.
     * @return marketSku
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_MARKET_SKU)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getMarketSku() {
        return marketSku;
    }

    @JsonProperty(JSON_PROPERTY_MARKET_SKU)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMarketSku(Long marketSku) {
        this.marketSku = marketSku;
    }

    public GetMappingDTO marketSkuName(String marketSkuName) {
        this.marketSkuName = marketSkuName;
        return this;
    }

    /**
     * Название карточки товара.  Может отсутствовать в ответе, если товар еще не привязан к карточке. 
     * @return marketSkuName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_MARKET_SKU_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getMarketSkuName() {
        return marketSkuName;
    }

    @JsonProperty(JSON_PROPERTY_MARKET_SKU_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMarketSkuName(String marketSkuName) {
        this.marketSkuName = marketSkuName;
    }

    public GetMappingDTO marketModelId(Long marketModelId) {
        this.marketModelId = marketModelId;
        return this;
    }

    /**
     * Идентификатор модели на Маркете.  Может отсутствовать в ответе, если товар еще не привязан к карточке. 
     * @return marketModelId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_MARKET_MODEL_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getMarketModelId() {
        return marketModelId;
    }

    @JsonProperty(JSON_PROPERTY_MARKET_MODEL_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMarketModelId(Long marketModelId) {
        this.marketModelId = marketModelId;
    }

    public GetMappingDTO marketModelName(String marketModelName) {
        this.marketModelName = marketModelName;
        return this;
    }

    /**
     * Название модели на Маркете.  Может отсутствовать в ответе, если товар еще не привязан к карточке. 
     * @return marketModelName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_MARKET_MODEL_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getMarketModelName() {
        return marketModelName;
    }

    @JsonProperty(JSON_PROPERTY_MARKET_MODEL_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMarketModelName(String marketModelName) {
        this.marketModelName = marketModelName;
    }

    public GetMappingDTO marketCategoryId(Long marketCategoryId) {
        this.marketCategoryId = marketCategoryId;
        return this;
    }

    /**
     * Идентификатор категории на Маркете, в которую попал товар.  Может отсутствовать в ответе, если Маркет еще не определил категорию товара. 
     * @return marketCategoryId
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_MARKET_CATEGORY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getMarketCategoryId() {
        return marketCategoryId;
    }

    @JsonProperty(JSON_PROPERTY_MARKET_CATEGORY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMarketCategoryId(Long marketCategoryId) {
        this.marketCategoryId = marketCategoryId;
    }

    public GetMappingDTO marketCategoryName(String marketCategoryName) {
        this.marketCategoryName = marketCategoryName;
        return this;
    }

    /**
     * Название категории карточки на Маркете.  Может отсутствовать в ответе, если Маркет еще не определил категорию товара. 
     * @return marketCategoryName
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_MARKET_CATEGORY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getMarketCategoryName() {
        return marketCategoryName;
    }

    @JsonProperty(JSON_PROPERTY_MARKET_CATEGORY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMarketCategoryName(String marketCategoryName) {
        this.marketCategoryName = marketCategoryName;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetMappingDTO getMappingDTO = (GetMappingDTO) o;
        return Objects.equals(this.marketSku, getMappingDTO.marketSku) &&
            Objects.equals(this.marketSkuName, getMappingDTO.marketSkuName) &&
            Objects.equals(this.marketModelId, getMappingDTO.marketModelId) &&
            Objects.equals(this.marketModelName, getMappingDTO.marketModelName) &&
            Objects.equals(this.marketCategoryId, getMappingDTO.marketCategoryId) &&
            Objects.equals(this.marketCategoryName, getMappingDTO.marketCategoryName);
    }

    @Override
    public int hashCode() {
        return Objects.hash(marketSku, marketSkuName, marketModelId, marketModelName, marketCategoryId, marketCategoryName);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetMappingDTO {\n");
        sb.append("    marketSku: ").append(toIndentedString(marketSku)).append("\n");
        sb.append("    marketSkuName: ").append(toIndentedString(marketSkuName)).append("\n");
        sb.append("    marketModelId: ").append(toIndentedString(marketModelId)).append("\n");
        sb.append("    marketModelName: ").append(toIndentedString(marketModelName)).append("\n");
        sb.append("    marketCategoryId: ").append(toIndentedString(marketCategoryId)).append("\n");
        sb.append("    marketCategoryName: ").append(toIndentedString(marketCategoryName)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

