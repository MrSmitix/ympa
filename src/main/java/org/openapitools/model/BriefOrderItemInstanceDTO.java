/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Идентификатор единицы товара.  Заполните только одно поле в зависимости от того, в какой системе маркирован товар.  Подробно о работе с маркируемыми товарами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/cz.html). 
 */
@Schema(name = "BriefOrderItemInstanceDTO", description = "Идентификатор единицы товара.  Заполните только одно поле в зависимости от того, в какой системе маркирован товар.  Подробно о работе с маркируемыми товарами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/cz.html). ")
@JsonPropertyOrder({
  BriefOrderItemInstanceDTO.JSON_PROPERTY_CIS,
  BriefOrderItemInstanceDTO.JSON_PROPERTY_UIN,
  BriefOrderItemInstanceDTO.JSON_PROPERTY_RNPT,
  BriefOrderItemInstanceDTO.JSON_PROPERTY_GTD
})
@JsonTypeName("BriefOrderItemInstanceDTO")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-09-09T22:20:41.711842593Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Introspected
public class BriefOrderItemInstanceDTO {
    public static final String JSON_PROPERTY_CIS = "cis";
    private String cis;

    public static final String JSON_PROPERTY_UIN = "uin";
    private String uin;

    public static final String JSON_PROPERTY_RNPT = "rnpt";
    private String rnpt;

    public static final String JSON_PROPERTY_GTD = "gtd";
    private String gtd;

    public BriefOrderItemInstanceDTO() {
    }

    public BriefOrderItemInstanceDTO cis(String cis) {
        this.cis = cis;
        return this;
    }

    /**
     * Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).  {% note warning %}  Не экранируйте косую черту в коде символа-разделителя &#x60;\\u001d&#x60;!  ✅ &#x60;01030410947874432155Qbag!\\u001d93Zjqw&#x60;  ❌ &#x60;01030410947874432155Qbag!\\\\u001d93Zjqw&#x60;  Косые черты и кавычки в других местах экранируйте по правилам JSON: &#x60;\\\\&#x60; и &#x60;\\\&quot;&#x60;  {% endnote %} 
     * @return cis
     */
    @Nullable
    @Schema(name = "cis", description = "Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).  {% note warning %}  Не экранируйте косую черту в коде символа-разделителя `\\u001d`!  ✅ `01030410947874432155Qbag!\\u001d93Zjqw`  ❌ `01030410947874432155Qbag!\\\\u001d93Zjqw`  Косые черты и кавычки в других местах экранируйте по правилам JSON: `\\\\` и `\\\"`  {% endnote %} ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_CIS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCis() {
        return cis;
    }

    @JsonProperty(JSON_PROPERTY_CIS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCis(String cis) {
        this.cis = cis;
    }

    public BriefOrderItemInstanceDTO uin(String uin) {
        this.uin = uin;
        return this;
    }

    /**
     * Уникальный идентификационный номер ювелирного изделия.  Представляет собой число из 16 цифр. 
     * @return uin
     */
    @Nullable
    @Schema(name = "uin", description = "Уникальный идентификационный номер ювелирного изделия.  Представляет собой число из 16 цифр. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_UIN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getUin() {
        return uin;
    }

    @JsonProperty(JSON_PROPERTY_UIN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUin(String uin) {
        this.uin = uin;
    }

    public BriefOrderItemInstanceDTO rnpt(String rnpt) {
        this.rnpt = rnpt;
        return this;
    }

    /**
     * Регистрационный номер партии товара.  Представляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации. 
     * @return rnpt
     */
    @Nullable
    @Schema(name = "rnpt", description = "Регистрационный номер партии товара.  Представляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_RNPT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRnpt() {
        return rnpt;
    }

    @JsonProperty(JSON_PROPERTY_RNPT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRnpt(String rnpt) {
        this.rnpt = rnpt;
    }

    public BriefOrderItemInstanceDTO gtd(String gtd) {
        this.gtd = gtd;
        return this;
    }

    /**
     * Грузовая таможенная декларация.  Представляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации. 
     * @return gtd
     */
    @Nullable
    @Schema(name = "gtd", description = "Грузовая таможенная декларация.  Представляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации. ", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    @JsonProperty(JSON_PROPERTY_GTD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getGtd() {
        return gtd;
    }

    @JsonProperty(JSON_PROPERTY_GTD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGtd(String gtd) {
        this.gtd = gtd;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BriefOrderItemInstanceDTO briefOrderItemInstanceDTO = (BriefOrderItemInstanceDTO) o;
        return Objects.equals(this.cis, briefOrderItemInstanceDTO.cis) &&
            Objects.equals(this.uin, briefOrderItemInstanceDTO.uin) &&
            Objects.equals(this.rnpt, briefOrderItemInstanceDTO.rnpt) &&
            Objects.equals(this.gtd, briefOrderItemInstanceDTO.gtd);
    }

    @Override
    public int hashCode() {
        return Objects.hash(cis, uin, rnpt, gtd);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class BriefOrderItemInstanceDTO {\n");
        sb.append("    cis: ").append(toIndentedString(cis)).append("\n");
        sb.append("    uin: ").append(toIndentedString(uin)).append("\n");
        sb.append("    rnpt: ").append(toIndentedString(rnpt)).append("\n");
        sb.append("    gtd: ").append(toIndentedString(gtd)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

