/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Date;
import org.openapitools.client.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    gsonBuilder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {
      public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        return new Date(json.getAsJsonPrimitive().getAsLong());
      }
    });
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("AcceptOrderCancellationRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<AcceptOrderCancellationRequest>>(){}.getType();
    }
    
    if ("AddHiddenOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<AddHiddenOffersRequest>>(){}.getType();
    }
    
    if ("AddOffersToArchiveDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<AddOffersToArchiveDTO>>(){}.getType();
    }
    
    if ("AddOffersToArchiveErrorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<AddOffersToArchiveErrorDTO>>(){}.getType();
    }
    
    if ("AddOffersToArchiveErrorType".equalsIgnoreCase(className)) {
      return new TypeToken<List<AddOffersToArchiveErrorType>>(){}.getType();
    }
    
    if ("AddOffersToArchiveRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<AddOffersToArchiveRequest>>(){}.getType();
    }
    
    if ("AddOffersToArchiveResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<AddOffersToArchiveResponse>>(){}.getType();
    }
    
    if ("AffectedOrderQualityRatingComponentType".equalsIgnoreCase(className)) {
      return new TypeToken<List<AffectedOrderQualityRatingComponentType>>(){}.getType();
    }
    
    if ("AgeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<AgeDTO>>(){}.getType();
    }
    
    if ("AgeUnitType".equalsIgnoreCase(className)) {
      return new TypeToken<List<AgeUnitType>>(){}.getType();
    }
    
    if ("ApiClientDataErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApiClientDataErrorResponse>>(){}.getType();
    }
    
    if ("ApiErrorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApiErrorDTO>>(){}.getType();
    }
    
    if ("ApiErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApiErrorResponse>>(){}.getType();
    }
    
    if ("ApiForbiddenErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApiForbiddenErrorResponse>>(){}.getType();
    }
    
    if ("ApiLimitErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApiLimitErrorResponse>>(){}.getType();
    }
    
    if ("ApiLockedErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApiLockedErrorResponse>>(){}.getType();
    }
    
    if ("ApiNotFoundErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApiNotFoundErrorResponse>>(){}.getType();
    }
    
    if ("ApiResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApiResponse>>(){}.getType();
    }
    
    if ("ApiResponseStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApiResponseStatusType>>(){}.getType();
    }
    
    if ("ApiServerErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApiServerErrorResponse>>(){}.getType();
    }
    
    if ("ApiUnauthorizedErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApiUnauthorizedErrorResponse>>(){}.getType();
    }
    
    if ("BaseCampaignOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<BaseCampaignOfferDTO>>(){}.getType();
    }
    
    if ("BaseOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<BaseOfferDTO>>(){}.getType();
    }
    
    if ("BasePriceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<BasePriceDTO>>(){}.getType();
    }
    
    if ("BaseShipmentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<BaseShipmentDTO>>(){}.getType();
    }
    
    if ("BidRecommendationItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<BidRecommendationItemDTO>>(){}.getType();
    }
    
    if ("BriefOrderItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<BriefOrderItemDTO>>(){}.getType();
    }
    
    if ("BriefOrderItemInstanceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<BriefOrderItemInstanceDTO>>(){}.getType();
    }
    
    if ("BusinessDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<BusinessDTO>>(){}.getType();
    }
    
    if ("BusinessSettingsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<BusinessSettingsDTO>>(){}.getType();
    }
    
    if ("CalculateTariffsOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CalculateTariffsOfferDTO>>(){}.getType();
    }
    
    if ("CalculateTariffsOfferInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CalculateTariffsOfferInfoDTO>>(){}.getType();
    }
    
    if ("CalculateTariffsParametersDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CalculateTariffsParametersDTO>>(){}.getType();
    }
    
    if ("CalculateTariffsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CalculateTariffsRequest>>(){}.getType();
    }
    
    if ("CalculateTariffsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CalculateTariffsResponse>>(){}.getType();
    }
    
    if ("CalculateTariffsResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CalculateTariffsResponseDTO>>(){}.getType();
    }
    
    if ("CalculatedTariffDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CalculatedTariffDTO>>(){}.getType();
    }
    
    if ("CalculatedTariffType".equalsIgnoreCase(className)) {
      return new TypeToken<List<CalculatedTariffType>>(){}.getType();
    }
    
    if ("CampaignDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignDTO>>(){}.getType();
    }
    
    if ("CampaignQualityRatingDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignQualityRatingDTO>>(){}.getType();
    }
    
    if ("CampaignSettingsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignSettingsDTO>>(){}.getType();
    }
    
    if ("CampaignSettingsDeliveryDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignSettingsDeliveryDTO>>(){}.getType();
    }
    
    if ("CampaignSettingsLocalRegionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignSettingsLocalRegionDTO>>(){}.getType();
    }
    
    if ("CampaignSettingsScheduleDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignSettingsScheduleDTO>>(){}.getType();
    }
    
    if ("CampaignSettingsScheduleSourceType".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignSettingsScheduleSourceType>>(){}.getType();
    }
    
    if ("CampaignSettingsTimePeriodDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignSettingsTimePeriodDTO>>(){}.getType();
    }
    
    if ("CampaignsQualityRatingDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CampaignsQualityRatingDTO>>(){}.getType();
    }
    
    if ("CategoryContentParametersDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryContentParametersDTO>>(){}.getType();
    }
    
    if ("CategoryDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryDTO>>(){}.getType();
    }
    
    if ("CategoryErrorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryErrorDTO>>(){}.getType();
    }
    
    if ("CategoryErrorType".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryErrorType>>(){}.getType();
    }
    
    if ("CategoryParameterDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryParameterDTO>>(){}.getType();
    }
    
    if ("CategoryParameterUnitDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryParameterUnitDTO>>(){}.getType();
    }
    
    if ("ChangeOutletRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<ChangeOutletRequest>>(){}.getType();
    }
    
    if ("ChannelType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ChannelType>>(){}.getType();
    }
    
    if ("ChatMessageDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ChatMessageDTO>>(){}.getType();
    }
    
    if ("ChatMessagePayloadDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ChatMessagePayloadDTO>>(){}.getType();
    }
    
    if ("ChatMessageSenderType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ChatMessageSenderType>>(){}.getType();
    }
    
    if ("ChatMessagesResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ChatMessagesResultDTO>>(){}.getType();
    }
    
    if ("ChatStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ChatStatusType>>(){}.getType();
    }
    
    if ("ChatType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ChatType>>(){}.getType();
    }
    
    if ("ConfirmPricesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConfirmPricesRequest>>(){}.getType();
    }
    
    if ("ConfirmShipmentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<ConfirmShipmentRequest>>(){}.getType();
    }
    
    if ("CreateChatRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateChatRequest>>(){}.getType();
    }
    
    if ("CreateChatResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateChatResponse>>(){}.getType();
    }
    
    if ("CreateChatResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateChatResultDTO>>(){}.getType();
    }
    
    if ("CreateOutletResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateOutletResponse>>(){}.getType();
    }
    
    if ("CurrencyType".equalsIgnoreCase(className)) {
      return new TypeToken<List<CurrencyType>>(){}.getType();
    }
    
    if ("DayOfWeekType".equalsIgnoreCase(className)) {
      return new TypeToken<List<DayOfWeekType>>(){}.getType();
    }
    
    if ("DeleteCampaignOffersDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteCampaignOffersDTO>>(){}.getType();
    }
    
    if ("DeleteCampaignOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteCampaignOffersRequest>>(){}.getType();
    }
    
    if ("DeleteCampaignOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteCampaignOffersResponse>>(){}.getType();
    }
    
    if ("DeleteGoodsFeedbackCommentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteGoodsFeedbackCommentRequest>>(){}.getType();
    }
    
    if ("DeleteHiddenOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteHiddenOffersRequest>>(){}.getType();
    }
    
    if ("DeleteOffersDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteOffersDTO>>(){}.getType();
    }
    
    if ("DeleteOffersFromArchiveDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteOffersFromArchiveDTO>>(){}.getType();
    }
    
    if ("DeleteOffersFromArchiveRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteOffersFromArchiveRequest>>(){}.getType();
    }
    
    if ("DeleteOffersFromArchiveResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteOffersFromArchiveResponse>>(){}.getType();
    }
    
    if ("DeleteOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteOffersRequest>>(){}.getType();
    }
    
    if ("DeleteOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteOffersResponse>>(){}.getType();
    }
    
    if ("DeletePromoOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeletePromoOffersRequest>>(){}.getType();
    }
    
    if ("DeletePromoOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeletePromoOffersResponse>>(){}.getType();
    }
    
    if ("DeletePromoOffersResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeletePromoOffersResultDTO>>(){}.getType();
    }
    
    if ("DeliveryServiceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeliveryServiceDTO>>(){}.getType();
    }
    
    if ("DeliveryServiceInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeliveryServiceInfoDTO>>(){}.getType();
    }
    
    if ("DeliveryServicesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeliveryServicesDTO>>(){}.getType();
    }
    
    if ("DocumentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<DocumentDTO>>(){}.getType();
    }
    
    if ("EacVerificationResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<EacVerificationResultDTO>>(){}.getType();
    }
    
    if ("EacVerificationStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<EacVerificationStatusType>>(){}.getType();
    }
    
    if ("EmptyApiResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<EmptyApiResponse>>(){}.getType();
    }
    
    if ("EnrichedMappingsOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<EnrichedMappingsOfferDTO>>(){}.getType();
    }
    
    if ("EnrichedModelDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<EnrichedModelDTO>>(){}.getType();
    }
    
    if ("EnrichedModelsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<EnrichedModelsDTO>>(){}.getType();
    }
    
    if ("EnrichedOrderBoxLayoutDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<EnrichedOrderBoxLayoutDTO>>(){}.getType();
    }
    
    if ("ExtensionShipmentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExtensionShipmentDTO>>(){}.getType();
    }
    
    if ("FeedContentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedContentDTO>>(){}.getType();
    }
    
    if ("FeedContentErrorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedContentErrorDTO>>(){}.getType();
    }
    
    if ("FeedContentErrorType".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedContentErrorType>>(){}.getType();
    }
    
    if ("FeedDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedDTO>>(){}.getType();
    }
    
    if ("FeedDownloadDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedDownloadDTO>>(){}.getType();
    }
    
    if ("FeedDownloadErrorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedDownloadErrorDTO>>(){}.getType();
    }
    
    if ("FeedDownloadErrorType".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedDownloadErrorType>>(){}.getType();
    }
    
    if ("FeedIndexLogsErrorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedIndexLogsErrorDTO>>(){}.getType();
    }
    
    if ("FeedIndexLogsErrorType".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedIndexLogsErrorType>>(){}.getType();
    }
    
    if ("FeedIndexLogsFeedDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedIndexLogsFeedDTO>>(){}.getType();
    }
    
    if ("FeedIndexLogsIndexType".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedIndexLogsIndexType>>(){}.getType();
    }
    
    if ("FeedIndexLogsOffersDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedIndexLogsOffersDTO>>(){}.getType();
    }
    
    if ("FeedIndexLogsRecordDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedIndexLogsRecordDTO>>(){}.getType();
    }
    
    if ("FeedIndexLogsResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedIndexLogsResultDTO>>(){}.getType();
    }
    
    if ("FeedIndexLogsStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedIndexLogsStatusType>>(){}.getType();
    }
    
    if ("FeedParameterDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedParameterDTO>>(){}.getType();
    }
    
    if ("FeedPlacementDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedPlacementDTO>>(){}.getType();
    }
    
    if ("FeedPublicationDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedPublicationDTO>>(){}.getType();
    }
    
    if ("FeedPublicationFullDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedPublicationFullDTO>>(){}.getType();
    }
    
    if ("FeedPublicationPriceAndStockUpdateDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedPublicationPriceAndStockUpdateDTO>>(){}.getType();
    }
    
    if ("FeedStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedStatusType>>(){}.getType();
    }
    
    if ("FeedbackAuthorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedbackAuthorDTO>>(){}.getType();
    }
    
    if ("FeedbackCommentAuthorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedbackCommentAuthorDTO>>(){}.getType();
    }
    
    if ("FeedbackCommentAuthorType".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedbackCommentAuthorType>>(){}.getType();
    }
    
    if ("FeedbackCommentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedbackCommentDTO>>(){}.getType();
    }
    
    if ("FeedbackDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedbackDTO>>(){}.getType();
    }
    
    if ("FeedbackDeliveryType".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedbackDeliveryType>>(){}.getType();
    }
    
    if ("FeedbackFactorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedbackFactorDTO>>(){}.getType();
    }
    
    if ("FeedbackGradesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedbackGradesDTO>>(){}.getType();
    }
    
    if ("FeedbackListDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedbackListDTO>>(){}.getType();
    }
    
    if ("FeedbackOrderDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedbackOrderDTO>>(){}.getType();
    }
    
    if ("FeedbackReactionStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedbackReactionStatusType>>(){}.getType();
    }
    
    if ("FeedbackShopDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedbackShopDTO>>(){}.getType();
    }
    
    if ("FeedbackStateType".equalsIgnoreCase(className)) {
      return new TypeToken<List<FeedbackStateType>>(){}.getType();
    }
    
    if ("FieldStateType".equalsIgnoreCase(className)) {
      return new TypeToken<List<FieldStateType>>(){}.getType();
    }
    
    if ("FlippingPagerDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FlippingPagerDTO>>(){}.getType();
    }
    
    if ("ForwardScrollingPagerDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ForwardScrollingPagerDTO>>(){}.getType();
    }
    
    if ("FulfillmentWarehouseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FulfillmentWarehouseDTO>>(){}.getType();
    }
    
    if ("FulfillmentWarehousesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FulfillmentWarehousesDTO>>(){}.getType();
    }
    
    if ("FullOutletDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FullOutletDTO>>(){}.getType();
    }
    
    if ("FullOutletLicenseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<FullOutletLicenseDTO>>(){}.getType();
    }
    
    if ("GenerateBoostConsolidatedRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GenerateBoostConsolidatedRequest>>(){}.getType();
    }
    
    if ("GenerateCompetitorsPositionReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GenerateCompetitorsPositionReportRequest>>(){}.getType();
    }
    
    if ("GenerateGoodsFeedbackRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GenerateGoodsFeedbackRequest>>(){}.getType();
    }
    
    if ("GenerateGoodsMovementReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GenerateGoodsMovementReportRequest>>(){}.getType();
    }
    
    if ("GenerateGoodsRealizationReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GenerateGoodsRealizationReportRequest>>(){}.getType();
    }
    
    if ("GenerateGoodsTurnoverRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GenerateGoodsTurnoverRequest>>(){}.getType();
    }
    
    if ("GenerateMassOrderLabelsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GenerateMassOrderLabelsRequest>>(){}.getType();
    }
    
    if ("GeneratePricesReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GeneratePricesReportRequest>>(){}.getType();
    }
    
    if ("GenerateReportDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GenerateReportDTO>>(){}.getType();
    }
    
    if ("GenerateReportResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GenerateReportResponse>>(){}.getType();
    }
    
    if ("GenerateShelfsStatisticsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GenerateShelfsStatisticsRequest>>(){}.getType();
    }
    
    if ("GenerateShipmentListDocumentReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GenerateShipmentListDocumentReportRequest>>(){}.getType();
    }
    
    if ("GenerateShowsSalesReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GenerateShowsSalesReportRequest>>(){}.getType();
    }
    
    if ("GenerateStocksOnWarehousesReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GenerateStocksOnWarehousesReportRequest>>(){}.getType();
    }
    
    if ("GenerateUnitedMarketplaceServicesReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GenerateUnitedMarketplaceServicesReportRequest>>(){}.getType();
    }
    
    if ("GenerateUnitedNettingReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GenerateUnitedNettingReportRequest>>(){}.getType();
    }
    
    if ("GenerateUnitedOrdersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GenerateUnitedOrdersRequest>>(){}.getType();
    }
    
    if ("GetAllOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetAllOffersResponse>>(){}.getType();
    }
    
    if ("GetBidsInfoRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetBidsInfoRequest>>(){}.getType();
    }
    
    if ("GetBidsInfoResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetBidsInfoResponse>>(){}.getType();
    }
    
    if ("GetBidsInfoResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetBidsInfoResponseDTO>>(){}.getType();
    }
    
    if ("GetBidsRecommendationsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetBidsRecommendationsRequest>>(){}.getType();
    }
    
    if ("GetBidsRecommendationsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetBidsRecommendationsResponse>>(){}.getType();
    }
    
    if ("GetBidsRecommendationsResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetBidsRecommendationsResponseDTO>>(){}.getType();
    }
    
    if ("GetBusinessBuyerInfoResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetBusinessBuyerInfoResponse>>(){}.getType();
    }
    
    if ("GetBusinessDocumentsInfoResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetBusinessDocumentsInfoResponse>>(){}.getType();
    }
    
    if ("GetBusinessSettingsInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetBusinessSettingsInfoDTO>>(){}.getType();
    }
    
    if ("GetBusinessSettingsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetBusinessSettingsResponse>>(){}.getType();
    }
    
    if ("GetCampaignLoginsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCampaignLoginsResponse>>(){}.getType();
    }
    
    if ("GetCampaignOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCampaignOfferDTO>>(){}.getType();
    }
    
    if ("GetCampaignOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCampaignOffersRequest>>(){}.getType();
    }
    
    if ("GetCampaignOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCampaignOffersResponse>>(){}.getType();
    }
    
    if ("GetCampaignOffersResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCampaignOffersResultDTO>>(){}.getType();
    }
    
    if ("GetCampaignRegionResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCampaignRegionResponse>>(){}.getType();
    }
    
    if ("GetCampaignResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCampaignResponse>>(){}.getType();
    }
    
    if ("GetCampaignSettingsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCampaignSettingsResponse>>(){}.getType();
    }
    
    if ("GetCampaignsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCampaignsResponse>>(){}.getType();
    }
    
    if ("GetCategoriesMaxSaleQuantumDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCategoriesMaxSaleQuantumDTO>>(){}.getType();
    }
    
    if ("GetCategoriesMaxSaleQuantumRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCategoriesMaxSaleQuantumRequest>>(){}.getType();
    }
    
    if ("GetCategoriesMaxSaleQuantumResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCategoriesMaxSaleQuantumResponse>>(){}.getType();
    }
    
    if ("GetCategoriesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCategoriesRequest>>(){}.getType();
    }
    
    if ("GetCategoriesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCategoriesResponse>>(){}.getType();
    }
    
    if ("GetCategoryContentParametersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetCategoryContentParametersResponse>>(){}.getType();
    }
    
    if ("GetChatHistoryRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetChatHistoryRequest>>(){}.getType();
    }
    
    if ("GetChatHistoryResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetChatHistoryResponse>>(){}.getType();
    }
    
    if ("GetChatInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetChatInfoDTO>>(){}.getType();
    }
    
    if ("GetChatsInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetChatsInfoDTO>>(){}.getType();
    }
    
    if ("GetChatsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetChatsRequest>>(){}.getType();
    }
    
    if ("GetChatsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetChatsResponse>>(){}.getType();
    }
    
    if ("GetDeliveryServicesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetDeliveryServicesResponse>>(){}.getType();
    }
    
    if ("GetFeedIndexLogsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetFeedIndexLogsResponse>>(){}.getType();
    }
    
    if ("GetFeedResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetFeedResponse>>(){}.getType();
    }
    
    if ("GetFeedbackListResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetFeedbackListResponse>>(){}.getType();
    }
    
    if ("GetFeedsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetFeedsResponse>>(){}.getType();
    }
    
    if ("GetFulfillmentWarehousesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetFulfillmentWarehousesResponse>>(){}.getType();
    }
    
    if ("GetGoodsFeedbackCommentsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetGoodsFeedbackCommentsRequest>>(){}.getType();
    }
    
    if ("GetGoodsFeedbackCommentsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetGoodsFeedbackCommentsResponse>>(){}.getType();
    }
    
    if ("GetGoodsFeedbackRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetGoodsFeedbackRequest>>(){}.getType();
    }
    
    if ("GetGoodsFeedbackResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetGoodsFeedbackResponse>>(){}.getType();
    }
    
    if ("GetGoodsStatsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetGoodsStatsRequest>>(){}.getType();
    }
    
    if ("GetGoodsStatsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetGoodsStatsResponse>>(){}.getType();
    }
    
    if ("GetHiddenOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHiddenOffersResponse>>(){}.getType();
    }
    
    if ("GetHiddenOffersResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetHiddenOffersResultDTO>>(){}.getType();
    }
    
    if ("GetMappingDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetMappingDTO>>(){}.getType();
    }
    
    if ("GetModelsOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetModelsOffersResponse>>(){}.getType();
    }
    
    if ("GetModelsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetModelsRequest>>(){}.getType();
    }
    
    if ("GetModelsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetModelsResponse>>(){}.getType();
    }
    
    if ("GetOfferCardsContentStatusRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOfferCardsContentStatusRequest>>(){}.getType();
    }
    
    if ("GetOfferCardsContentStatusResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOfferCardsContentStatusResponse>>(){}.getType();
    }
    
    if ("GetOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOfferDTO>>(){}.getType();
    }
    
    if ("GetOfferMappingDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOfferMappingDTO>>(){}.getType();
    }
    
    if ("GetOfferMappingEntriesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOfferMappingEntriesResponse>>(){}.getType();
    }
    
    if ("GetOfferMappingsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOfferMappingsRequest>>(){}.getType();
    }
    
    if ("GetOfferMappingsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOfferMappingsResponse>>(){}.getType();
    }
    
    if ("GetOfferMappingsResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOfferMappingsResultDTO>>(){}.getType();
    }
    
    if ("GetOfferRecommendationsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOfferRecommendationsRequest>>(){}.getType();
    }
    
    if ("GetOfferRecommendationsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOfferRecommendationsResponse>>(){}.getType();
    }
    
    if ("GetOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOffersResponse>>(){}.getType();
    }
    
    if ("GetOrderBuyerInfoResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOrderBuyerInfoResponse>>(){}.getType();
    }
    
    if ("GetOrderLabelsDataResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOrderLabelsDataResponse>>(){}.getType();
    }
    
    if ("GetOrderResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOrderResponse>>(){}.getType();
    }
    
    if ("GetOrdersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOrdersResponse>>(){}.getType();
    }
    
    if ("GetOrdersStatsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOrdersStatsRequest>>(){}.getType();
    }
    
    if ("GetOrdersStatsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOrdersStatsResponse>>(){}.getType();
    }
    
    if ("GetOutletLicensesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOutletLicensesResponse>>(){}.getType();
    }
    
    if ("GetOutletResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOutletResponse>>(){}.getType();
    }
    
    if ("GetOutletsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetOutletsResponse>>(){}.getType();
    }
    
    if ("GetPriceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPriceDTO>>(){}.getType();
    }
    
    if ("GetPriceWithDiscountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPriceWithDiscountDTO>>(){}.getType();
    }
    
    if ("GetPriceWithVatDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPriceWithVatDTO>>(){}.getType();
    }
    
    if ("GetPricesByOfferIdsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPricesByOfferIdsRequest>>(){}.getType();
    }
    
    if ("GetPricesByOfferIdsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPricesByOfferIdsResponse>>(){}.getType();
    }
    
    if ("GetPricesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPricesResponse>>(){}.getType();
    }
    
    if ("GetPromoAssortmentInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPromoAssortmentInfoDTO>>(){}.getType();
    }
    
    if ("GetPromoBestsellerInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPromoBestsellerInfoDTO>>(){}.getType();
    }
    
    if ("GetPromoConstraintsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPromoConstraintsDTO>>(){}.getType();
    }
    
    if ("GetPromoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPromoDTO>>(){}.getType();
    }
    
    if ("GetPromoMechanicsInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPromoMechanicsInfoDTO>>(){}.getType();
    }
    
    if ("GetPromoOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPromoOfferDTO>>(){}.getType();
    }
    
    if ("GetPromoOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPromoOffersRequest>>(){}.getType();
    }
    
    if ("GetPromoOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPromoOffersResponse>>(){}.getType();
    }
    
    if ("GetPromoOffersResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPromoOffersResultDTO>>(){}.getType();
    }
    
    if ("GetPromoPromocodeInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPromoPromocodeInfoDTO>>(){}.getType();
    }
    
    if ("GetPromosRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPromosRequest>>(){}.getType();
    }
    
    if ("GetPromosResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPromosResponse>>(){}.getType();
    }
    
    if ("GetPromosResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetPromosResultDTO>>(){}.getType();
    }
    
    if ("GetQualityRatingDetailsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetQualityRatingDetailsResponse>>(){}.getType();
    }
    
    if ("GetQualityRatingRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetQualityRatingRequest>>(){}.getType();
    }
    
    if ("GetQualityRatingResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetQualityRatingResponse>>(){}.getType();
    }
    
    if ("GetQuarantineOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetQuarantineOffersRequest>>(){}.getType();
    }
    
    if ("GetQuarantineOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetQuarantineOffersResponse>>(){}.getType();
    }
    
    if ("GetQuarantineOffersResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetQuarantineOffersResultDTO>>(){}.getType();
    }
    
    if ("GetRegionWithChildrenResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetRegionWithChildrenResponse>>(){}.getType();
    }
    
    if ("GetRegionsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetRegionsResponse>>(){}.getType();
    }
    
    if ("GetReportInfoResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetReportInfoResponse>>(){}.getType();
    }
    
    if ("GetReturnResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetReturnResponse>>(){}.getType();
    }
    
    if ("GetReturnsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetReturnsResponse>>(){}.getType();
    }
    
    if ("GetShipmentOrdersInfoResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetShipmentOrdersInfoResponse>>(){}.getType();
    }
    
    if ("GetShipmentResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetShipmentResponse>>(){}.getType();
    }
    
    if ("GetSuggestedOfferMappingEntriesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetSuggestedOfferMappingEntriesRequest>>(){}.getType();
    }
    
    if ("GetSuggestedOfferMappingEntriesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetSuggestedOfferMappingEntriesResponse>>(){}.getType();
    }
    
    if ("GetSuggestedOfferMappingsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetSuggestedOfferMappingsRequest>>(){}.getType();
    }
    
    if ("GetSuggestedOfferMappingsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetSuggestedOfferMappingsResponse>>(){}.getType();
    }
    
    if ("GetSuggestedOfferMappingsResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetSuggestedOfferMappingsResultDTO>>(){}.getType();
    }
    
    if ("GetWarehouseStocksDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetWarehouseStocksDTO>>(){}.getType();
    }
    
    if ("GetWarehouseStocksRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetWarehouseStocksRequest>>(){}.getType();
    }
    
    if ("GetWarehouseStocksResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetWarehouseStocksResponse>>(){}.getType();
    }
    
    if ("GetWarehousesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<GetWarehousesResponse>>(){}.getType();
    }
    
    if ("GoodsFeedbackCommentAuthorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoodsFeedbackCommentAuthorDTO>>(){}.getType();
    }
    
    if ("GoodsFeedbackCommentAuthorType".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoodsFeedbackCommentAuthorType>>(){}.getType();
    }
    
    if ("GoodsFeedbackCommentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoodsFeedbackCommentDTO>>(){}.getType();
    }
    
    if ("GoodsFeedbackCommentListDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoodsFeedbackCommentListDTO>>(){}.getType();
    }
    
    if ("GoodsFeedbackCommentStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoodsFeedbackCommentStatusType>>(){}.getType();
    }
    
    if ("GoodsFeedbackDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoodsFeedbackDTO>>(){}.getType();
    }
    
    if ("GoodsFeedbackDescriptionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoodsFeedbackDescriptionDTO>>(){}.getType();
    }
    
    if ("GoodsFeedbackIdentifiersDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoodsFeedbackIdentifiersDTO>>(){}.getType();
    }
    
    if ("GoodsFeedbackListDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoodsFeedbackListDTO>>(){}.getType();
    }
    
    if ("GoodsFeedbackMediaDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoodsFeedbackMediaDTO>>(){}.getType();
    }
    
    if ("GoodsFeedbackStatisticsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoodsFeedbackStatisticsDTO>>(){}.getType();
    }
    
    if ("GoodsStatsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoodsStatsDTO>>(){}.getType();
    }
    
    if ("GoodsStatsGoodsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoodsStatsGoodsDTO>>(){}.getType();
    }
    
    if ("GoodsStatsWarehouseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoodsStatsWarehouseDTO>>(){}.getType();
    }
    
    if ("GoodsStatsWeightDimensionsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GoodsStatsWeightDimensionsDTO>>(){}.getType();
    }
    
    if ("GpsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<GpsDTO>>(){}.getType();
    }
    
    if ("HiddenOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<HiddenOfferDTO>>(){}.getType();
    }
    
    if ("LanguageType".equalsIgnoreCase(className)) {
      return new TypeToken<List<LanguageType>>(){}.getType();
    }
    
    if ("LicenseCheckStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<LicenseCheckStatusType>>(){}.getType();
    }
    
    if ("LicenseType".equalsIgnoreCase(className)) {
      return new TypeToken<List<LicenseType>>(){}.getType();
    }
    
    if ("LogisticPickupPointDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<LogisticPickupPointDTO>>(){}.getType();
    }
    
    if ("LogisticPointType".equalsIgnoreCase(className)) {
      return new TypeToken<List<LogisticPointType>>(){}.getType();
    }
    
    if ("MappingsOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<MappingsOfferDTO>>(){}.getType();
    }
    
    if ("MappingsOfferInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<MappingsOfferInfoDTO>>(){}.getType();
    }
    
    if ("MaxSaleQuantumDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<MaxSaleQuantumDTO>>(){}.getType();
    }
    
    if ("MechanicsType".equalsIgnoreCase(className)) {
      return new TypeToken<List<MechanicsType>>(){}.getType();
    }
    
    if ("ModelDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelDTO>>(){}.getType();
    }
    
    if ("ModelOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelOfferDTO>>(){}.getType();
    }
    
    if ("ModelPriceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelPriceDTO>>(){}.getType();
    }
    
    if ("ModelsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsDTO>>(){}.getType();
    }
    
    if ("OfferAvailabilityStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferAvailabilityStatusType>>(){}.getType();
    }
    
    if ("OfferCampaignStatusDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferCampaignStatusDTO>>(){}.getType();
    }
    
    if ("OfferCampaignStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferCampaignStatusType>>(){}.getType();
    }
    
    if ("OfferCardDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferCardDTO>>(){}.getType();
    }
    
    if ("OfferCardRecommendationDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferCardRecommendationDTO>>(){}.getType();
    }
    
    if ("OfferCardRecommendationType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferCardRecommendationType>>(){}.getType();
    }
    
    if ("OfferCardStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferCardStatusType>>(){}.getType();
    }
    
    if ("OfferCardsContentStatusDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferCardsContentStatusDTO>>(){}.getType();
    }
    
    if ("OfferConditionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferConditionDTO>>(){}.getType();
    }
    
    if ("OfferConditionQualityType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferConditionQualityType>>(){}.getType();
    }
    
    if ("OfferConditionType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferConditionType>>(){}.getType();
    }
    
    if ("OfferContentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferContentDTO>>(){}.getType();
    }
    
    if ("OfferContentErrorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferContentErrorDTO>>(){}.getType();
    }
    
    if ("OfferContentErrorType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferContentErrorType>>(){}.getType();
    }
    
    if ("OfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferDTO>>(){}.getType();
    }
    
    if ("OfferErrorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferErrorDTO>>(){}.getType();
    }
    
    if ("OfferForRecommendationDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferForRecommendationDTO>>(){}.getType();
    }
    
    if ("OfferManualDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferManualDTO>>(){}.getType();
    }
    
    if ("OfferMappingDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferMappingDTO>>(){}.getType();
    }
    
    if ("OfferMappingEntriesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferMappingEntriesDTO>>(){}.getType();
    }
    
    if ("OfferMappingEntryDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferMappingEntryDTO>>(){}.getType();
    }
    
    if ("OfferMappingErrorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferMappingErrorDTO>>(){}.getType();
    }
    
    if ("OfferMappingErrorType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferMappingErrorType>>(){}.getType();
    }
    
    if ("OfferMappingInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferMappingInfoDTO>>(){}.getType();
    }
    
    if ("OfferMappingKindType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferMappingKindType>>(){}.getType();
    }
    
    if ("OfferMappingSuggestionsListDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferMappingSuggestionsListDTO>>(){}.getType();
    }
    
    if ("OfferParamDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferParamDTO>>(){}.getType();
    }
    
    if ("OfferPriceByOfferIdsListResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferPriceByOfferIdsListResponseDTO>>(){}.getType();
    }
    
    if ("OfferPriceByOfferIdsResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferPriceByOfferIdsResponseDTO>>(){}.getType();
    }
    
    if ("OfferPriceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferPriceDTO>>(){}.getType();
    }
    
    if ("OfferPriceListResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferPriceListResponseDTO>>(){}.getType();
    }
    
    if ("OfferPriceResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferPriceResponseDTO>>(){}.getType();
    }
    
    if ("OfferProcessingNoteDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferProcessingNoteDTO>>(){}.getType();
    }
    
    if ("OfferProcessingNoteType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferProcessingNoteType>>(){}.getType();
    }
    
    if ("OfferProcessingStateDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferProcessingStateDTO>>(){}.getType();
    }
    
    if ("OfferProcessingStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferProcessingStatusType>>(){}.getType();
    }
    
    if ("OfferRecommendationDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferRecommendationDTO>>(){}.getType();
    }
    
    if ("OfferRecommendationInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferRecommendationInfoDTO>>(){}.getType();
    }
    
    if ("OfferRecommendationsResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferRecommendationsResultDTO>>(){}.getType();
    }
    
    if ("OfferSellingProgramDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferSellingProgramDTO>>(){}.getType();
    }
    
    if ("OfferSellingProgramStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferSellingProgramStatusType>>(){}.getType();
    }
    
    if ("OfferType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferType>>(){}.getType();
    }
    
    if ("OfferWeightDimensionsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OfferWeightDimensionsDTO>>(){}.getType();
    }
    
    if ("OffersDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OffersDTO>>(){}.getType();
    }
    
    if ("OptionValuesLimitedDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OptionValuesLimitedDTO>>(){}.getType();
    }
    
    if ("OrderBoxLayoutDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderBoxLayoutDTO>>(){}.getType();
    }
    
    if ("OrderBoxLayoutItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderBoxLayoutItemDTO>>(){}.getType();
    }
    
    if ("OrderBoxLayoutPartialCountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderBoxLayoutPartialCountDTO>>(){}.getType();
    }
    
    if ("OrderBoxesLayoutDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderBoxesLayoutDTO>>(){}.getType();
    }
    
    if ("OrderBusinessBuyerDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderBusinessBuyerDTO>>(){}.getType();
    }
    
    if ("OrderBusinessDocumentsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderBusinessDocumentsDTO>>(){}.getType();
    }
    
    if ("OrderBuyerBasicInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderBuyerBasicInfoDTO>>(){}.getType();
    }
    
    if ("OrderBuyerDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderBuyerDTO>>(){}.getType();
    }
    
    if ("OrderBuyerInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderBuyerInfoDTO>>(){}.getType();
    }
    
    if ("OrderBuyerType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderBuyerType>>(){}.getType();
    }
    
    if ("OrderCancellationReasonType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderCancellationReasonType>>(){}.getType();
    }
    
    if ("OrderCourierDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderCourierDTO>>(){}.getType();
    }
    
    if ("OrderDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderDTO>>(){}.getType();
    }
    
    if ("OrderDeliveryAddressDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderDeliveryAddressDTO>>(){}.getType();
    }
    
    if ("OrderDeliveryDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderDeliveryDTO>>(){}.getType();
    }
    
    if ("OrderDeliveryDateDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderDeliveryDateDTO>>(){}.getType();
    }
    
    if ("OrderDeliveryDateReasonType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderDeliveryDateReasonType>>(){}.getType();
    }
    
    if ("OrderDeliveryDatesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderDeliveryDatesDTO>>(){}.getType();
    }
    
    if ("OrderDeliveryDispatchType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderDeliveryDispatchType>>(){}.getType();
    }
    
    if ("OrderDeliveryEacType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderDeliveryEacType>>(){}.getType();
    }
    
    if ("OrderDeliveryPartnerType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderDeliveryPartnerType>>(){}.getType();
    }
    
    if ("OrderDeliveryType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderDeliveryType>>(){}.getType();
    }
    
    if ("OrderDigitalItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderDigitalItemDTO>>(){}.getType();
    }
    
    if ("OrderDocumentStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderDocumentStatusType>>(){}.getType();
    }
    
    if ("OrderItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderItemDTO>>(){}.getType();
    }
    
    if ("OrderItemDetailDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderItemDetailDTO>>(){}.getType();
    }
    
    if ("OrderItemInstanceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderItemInstanceDTO>>(){}.getType();
    }
    
    if ("OrderItemInstanceModificationDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderItemInstanceModificationDTO>>(){}.getType();
    }
    
    if ("OrderItemInstanceType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderItemInstanceType>>(){}.getType();
    }
    
    if ("OrderItemModificationDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderItemModificationDTO>>(){}.getType();
    }
    
    if ("OrderItemPromoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderItemPromoDTO>>(){}.getType();
    }
    
    if ("OrderItemStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderItemStatusType>>(){}.getType();
    }
    
    if ("OrderItemSubsidyDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderItemSubsidyDTO>>(){}.getType();
    }
    
    if ("OrderItemSubsidyType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderItemSubsidyType>>(){}.getType();
    }
    
    if ("OrderItemsModificationRequestReasonType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderItemsModificationRequestReasonType>>(){}.getType();
    }
    
    if ("OrderItemsModificationResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderItemsModificationResultDTO>>(){}.getType();
    }
    
    if ("OrderLabelDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderLabelDTO>>(){}.getType();
    }
    
    if ("OrderLiftType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderLiftType>>(){}.getType();
    }
    
    if ("OrderParcelBoxDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderParcelBoxDTO>>(){}.getType();
    }
    
    if ("OrderPaymentMethodType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderPaymentMethodType>>(){}.getType();
    }
    
    if ("OrderPaymentType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderPaymentType>>(){}.getType();
    }
    
    if ("OrderPromoType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderPromoType>>(){}.getType();
    }
    
    if ("OrderShipmentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderShipmentDTO>>(){}.getType();
    }
    
    if ("OrderStateDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderStateDTO>>(){}.getType();
    }
    
    if ("OrderStatsStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderStatsStatusType>>(){}.getType();
    }
    
    if ("OrderStatusChangeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderStatusChangeDTO>>(){}.getType();
    }
    
    if ("OrderStatusChangeDeliveryDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderStatusChangeDeliveryDTO>>(){}.getType();
    }
    
    if ("OrderStatusChangeDeliveryDatesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderStatusChangeDeliveryDatesDTO>>(){}.getType();
    }
    
    if ("OrderStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderStatusType>>(){}.getType();
    }
    
    if ("OrderSubsidyDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderSubsidyDTO>>(){}.getType();
    }
    
    if ("OrderSubsidyType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderSubsidyType>>(){}.getType();
    }
    
    if ("OrderSubstatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderSubstatusType>>(){}.getType();
    }
    
    if ("OrderTaxSystemType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderTaxSystemType>>(){}.getType();
    }
    
    if ("OrderTrackDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderTrackDTO>>(){}.getType();
    }
    
    if ("OrderUpdateStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderUpdateStatusType>>(){}.getType();
    }
    
    if ("OrderVatType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderVatType>>(){}.getType();
    }
    
    if ("OrdersShipmentInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersShipmentInfoDTO>>(){}.getType();
    }
    
    if ("OrdersStatsCommissionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersStatsCommissionDTO>>(){}.getType();
    }
    
    if ("OrdersStatsCommissionType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersStatsCommissionType>>(){}.getType();
    }
    
    if ("OrdersStatsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersStatsDTO>>(){}.getType();
    }
    
    if ("OrdersStatsDeliveryRegionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersStatsDeliveryRegionDTO>>(){}.getType();
    }
    
    if ("OrdersStatsDetailsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersStatsDetailsDTO>>(){}.getType();
    }
    
    if ("OrdersStatsItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersStatsItemDTO>>(){}.getType();
    }
    
    if ("OrdersStatsItemStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersStatsItemStatusType>>(){}.getType();
    }
    
    if ("OrdersStatsOrderDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersStatsOrderDTO>>(){}.getType();
    }
    
    if ("OrdersStatsOrderPaymentType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersStatsOrderPaymentType>>(){}.getType();
    }
    
    if ("OrdersStatsPaymentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersStatsPaymentDTO>>(){}.getType();
    }
    
    if ("OrdersStatsPaymentOrderDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersStatsPaymentOrderDTO>>(){}.getType();
    }
    
    if ("OrdersStatsPaymentSourceType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersStatsPaymentSourceType>>(){}.getType();
    }
    
    if ("OrdersStatsPaymentType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersStatsPaymentType>>(){}.getType();
    }
    
    if ("OrdersStatsPriceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersStatsPriceDTO>>(){}.getType();
    }
    
    if ("OrdersStatsPriceType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersStatsPriceType>>(){}.getType();
    }
    
    if ("OrdersStatsStockType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersStatsStockType>>(){}.getType();
    }
    
    if ("OrdersStatsWarehouseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrdersStatsWarehouseDTO>>(){}.getType();
    }
    
    if ("OutletAddressDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OutletAddressDTO>>(){}.getType();
    }
    
    if ("OutletDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OutletDTO>>(){}.getType();
    }
    
    if ("OutletDeliveryRuleDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OutletDeliveryRuleDTO>>(){}.getType();
    }
    
    if ("OutletLicenseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OutletLicenseDTO>>(){}.getType();
    }
    
    if ("OutletLicensesResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OutletLicensesResponseDTO>>(){}.getType();
    }
    
    if ("OutletResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OutletResponseDTO>>(){}.getType();
    }
    
    if ("OutletStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OutletStatusType>>(){}.getType();
    }
    
    if ("OutletType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OutletType>>(){}.getType();
    }
    
    if ("OutletVisibilityType".equalsIgnoreCase(className)) {
      return new TypeToken<List<OutletVisibilityType>>(){}.getType();
    }
    
    if ("OutletWorkingScheduleDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OutletWorkingScheduleDTO>>(){}.getType();
    }
    
    if ("OutletWorkingScheduleItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<OutletWorkingScheduleItemDTO>>(){}.getType();
    }
    
    if ("PageFormatType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PageFormatType>>(){}.getType();
    }
    
    if ("PagedReturnsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PagedReturnsDTO>>(){}.getType();
    }
    
    if ("PalletsCountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PalletsCountDTO>>(){}.getType();
    }
    
    if ("ParameterType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ParameterType>>(){}.getType();
    }
    
    if ("ParameterValueConstraintsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ParameterValueConstraintsDTO>>(){}.getType();
    }
    
    if ("ParameterValueDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ParameterValueDTO>>(){}.getType();
    }
    
    if ("ParameterValueOptionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ParameterValueOptionDTO>>(){}.getType();
    }
    
    if ("ParcelBoxDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ParcelBoxDTO>>(){}.getType();
    }
    
    if ("ParcelBoxLabelDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ParcelBoxLabelDTO>>(){}.getType();
    }
    
    if ("ParcelDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ParcelDTO>>(){}.getType();
    }
    
    if ("PartnerShipmentWarehouseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PartnerShipmentWarehouseDTO>>(){}.getType();
    }
    
    if ("PaymentFrequencyType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PaymentFrequencyType>>(){}.getType();
    }
    
    if ("PickupAddressDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PickupAddressDTO>>(){}.getType();
    }
    
    if ("PlacementType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PlacementType>>(){}.getType();
    }
    
    if ("PriceCompetitivenessThresholdsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PriceCompetitivenessThresholdsDTO>>(){}.getType();
    }
    
    if ("PriceCompetitivenessType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PriceCompetitivenessType>>(){}.getType();
    }
    
    if ("PriceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PriceDTO>>(){}.getType();
    }
    
    if ("PriceQuarantineVerdictDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PriceQuarantineVerdictDTO>>(){}.getType();
    }
    
    if ("PriceQuarantineVerdictParamNameType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PriceQuarantineVerdictParamNameType>>(){}.getType();
    }
    
    if ("PriceQuarantineVerdictParameterDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PriceQuarantineVerdictParameterDTO>>(){}.getType();
    }
    
    if ("PriceQuarantineVerdictType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PriceQuarantineVerdictType>>(){}.getType();
    }
    
    if ("PriceRecommendationItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PriceRecommendationItemDTO>>(){}.getType();
    }
    
    if ("PriceSuggestDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PriceSuggestDTO>>(){}.getType();
    }
    
    if ("PriceSuggestOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PriceSuggestOfferDTO>>(){}.getType();
    }
    
    if ("PriceSuggestType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PriceSuggestType>>(){}.getType();
    }
    
    if ("PromoOfferAutoParticipatingDetailsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PromoOfferAutoParticipatingDetailsDTO>>(){}.getType();
    }
    
    if ("PromoOfferDiscountParamsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PromoOfferDiscountParamsDTO>>(){}.getType();
    }
    
    if ("PromoOfferParamsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PromoOfferParamsDTO>>(){}.getType();
    }
    
    if ("PromoOfferParticipationStatusFilterType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PromoOfferParticipationStatusFilterType>>(){}.getType();
    }
    
    if ("PromoOfferParticipationStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PromoOfferParticipationStatusType>>(){}.getType();
    }
    
    if ("PromoOfferPromocodeParamsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PromoOfferPromocodeParamsDTO>>(){}.getType();
    }
    
    if ("PromoOfferUpdateWarningCodeType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PromoOfferUpdateWarningCodeType>>(){}.getType();
    }
    
    if ("PromoOfferUpdateWarningDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PromoOfferUpdateWarningDTO>>(){}.getType();
    }
    
    if ("PromoParticipationType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PromoParticipationType>>(){}.getType();
    }
    
    if ("PromoPeriodDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PromoPeriodDTO>>(){}.getType();
    }
    
    if ("ProvideOrderDigitalCodesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProvideOrderDigitalCodesRequest>>(){}.getType();
    }
    
    if ("ProvideOrderItemIdentifiersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProvideOrderItemIdentifiersRequest>>(){}.getType();
    }
    
    if ("ProvideOrderItemIdentifiersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProvideOrderItemIdentifiersResponse>>(){}.getType();
    }
    
    if ("PutSkuBidsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<PutSkuBidsRequest>>(){}.getType();
    }
    
    if ("QualityRatingAffectedOrderDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<QualityRatingAffectedOrderDTO>>(){}.getType();
    }
    
    if ("QualityRatingComponentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<QualityRatingComponentDTO>>(){}.getType();
    }
    
    if ("QualityRatingComponentType".equalsIgnoreCase(className)) {
      return new TypeToken<List<QualityRatingComponentType>>(){}.getType();
    }
    
    if ("QualityRatingDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<QualityRatingDTO>>(){}.getType();
    }
    
    if ("QualityRatingDetailsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<QualityRatingDetailsDTO>>(){}.getType();
    }
    
    if ("QuantumDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<QuantumDTO>>(){}.getType();
    }
    
    if ("QuarantineOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<QuarantineOfferDTO>>(){}.getType();
    }
    
    if ("RecipientType".equalsIgnoreCase(className)) {
      return new TypeToken<List<RecipientType>>(){}.getType();
    }
    
    if ("RefundStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<RefundStatusType>>(){}.getType();
    }
    
    if ("RegionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<RegionDTO>>(){}.getType();
    }
    
    if ("RegionType".equalsIgnoreCase(className)) {
      return new TypeToken<List<RegionType>>(){}.getType();
    }
    
    if ("RegionalModelInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<RegionalModelInfoDTO>>(){}.getType();
    }
    
    if ("RejectedPromoOfferDeleteDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<RejectedPromoOfferDeleteDTO>>(){}.getType();
    }
    
    if ("RejectedPromoOfferDeleteReasonType".equalsIgnoreCase(className)) {
      return new TypeToken<List<RejectedPromoOfferDeleteReasonType>>(){}.getType();
    }
    
    if ("RejectedPromoOfferUpdateDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<RejectedPromoOfferUpdateDTO>>(){}.getType();
    }
    
    if ("RejectedPromoOfferUpdateReasonType".equalsIgnoreCase(className)) {
      return new TypeToken<List<RejectedPromoOfferUpdateReasonType>>(){}.getType();
    }
    
    if ("ReportFormatType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReportFormatType>>(){}.getType();
    }
    
    if ("ReportInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReportInfoDTO>>(){}.getType();
    }
    
    if ("ReportStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReportStatusType>>(){}.getType();
    }
    
    if ("ReportSubStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReportSubStatusType>>(){}.getType();
    }
    
    if ("ReturnDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnDTO>>(){}.getType();
    }
    
    if ("ReturnDecisionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnDecisionDTO>>(){}.getType();
    }
    
    if ("ReturnDecisionReasonType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnDecisionReasonType>>(){}.getType();
    }
    
    if ("ReturnDecisionSubreasonType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnDecisionSubreasonType>>(){}.getType();
    }
    
    if ("ReturnDecisionType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnDecisionType>>(){}.getType();
    }
    
    if ("ReturnInstanceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnInstanceDTO>>(){}.getType();
    }
    
    if ("ReturnInstanceStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnInstanceStatusType>>(){}.getType();
    }
    
    if ("ReturnInstanceStockType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnInstanceStockType>>(){}.getType();
    }
    
    if ("ReturnItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnItemDTO>>(){}.getType();
    }
    
    if ("ReturnRequestDecisionType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnRequestDecisionType>>(){}.getType();
    }
    
    if ("ReturnShipmentStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnShipmentStatusType>>(){}.getType();
    }
    
    if ("ReturnType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnType>>(){}.getType();
    }
    
    if ("ScrollingPagerDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ScrollingPagerDTO>>(){}.getType();
    }
    
    if ("SearchModelsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<SearchModelsResponse>>(){}.getType();
    }
    
    if ("SearchShipmentsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SearchShipmentsRequest>>(){}.getType();
    }
    
    if ("SearchShipmentsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<SearchShipmentsResponse>>(){}.getType();
    }
    
    if ("SearchShipmentsResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SearchShipmentsResponseDTO>>(){}.getType();
    }
    
    if ("SellingProgramType".equalsIgnoreCase(className)) {
      return new TypeToken<List<SellingProgramType>>(){}.getType();
    }
    
    if ("SendMessageToChatRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SendMessageToChatRequest>>(){}.getType();
    }
    
    if ("SetFeedParamsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SetFeedParamsRequest>>(){}.getType();
    }
    
    if ("SetOrderBoxLayoutRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SetOrderBoxLayoutRequest>>(){}.getType();
    }
    
    if ("SetOrderBoxLayoutResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<SetOrderBoxLayoutResponse>>(){}.getType();
    }
    
    if ("SetOrderDeliveryDateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SetOrderDeliveryDateRequest>>(){}.getType();
    }
    
    if ("SetOrderDeliveryTrackCodeRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SetOrderDeliveryTrackCodeRequest>>(){}.getType();
    }
    
    if ("SetOrderShipmentBoxesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SetOrderShipmentBoxesRequest>>(){}.getType();
    }
    
    if ("SetOrderShipmentBoxesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<SetOrderShipmentBoxesResponse>>(){}.getType();
    }
    
    if ("SetReturnDecisionRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SetReturnDecisionRequest>>(){}.getType();
    }
    
    if ("SetShipmentPalletsCountRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SetShipmentPalletsCountRequest>>(){}.getType();
    }
    
    if ("ShelfsStatisticsAttributionType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShelfsStatisticsAttributionType>>(){}.getType();
    }
    
    if ("ShipmentActionType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShipmentActionType>>(){}.getType();
    }
    
    if ("ShipmentBoxesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShipmentBoxesDTO>>(){}.getType();
    }
    
    if ("ShipmentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShipmentDTO>>(){}.getType();
    }
    
    if ("ShipmentInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShipmentInfoDTO>>(){}.getType();
    }
    
    if ("ShipmentPalletLabelPageFormatType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShipmentPalletLabelPageFormatType>>(){}.getType();
    }
    
    if ("ShipmentStatusChangeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShipmentStatusChangeDTO>>(){}.getType();
    }
    
    if ("ShipmentStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShipmentStatusType>>(){}.getType();
    }
    
    if ("ShipmentType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShipmentType>>(){}.getType();
    }
    
    if ("ShowsSalesGroupingType".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShowsSalesGroupingType>>(){}.getType();
    }
    
    if ("SkipGoodsFeedbackReactionRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SkipGoodsFeedbackReactionRequest>>(){}.getType();
    }
    
    if ("SkuBidItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SkuBidItemDTO>>(){}.getType();
    }
    
    if ("SkuBidRecommendationItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SkuBidRecommendationItemDTO>>(){}.getType();
    }
    
    if ("SortOrderType".equalsIgnoreCase(className)) {
      return new TypeToken<List<SortOrderType>>(){}.getType();
    }
    
    if ("SuggestOfferPriceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SuggestOfferPriceDTO>>(){}.getType();
    }
    
    if ("SuggestPricesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<SuggestPricesRequest>>(){}.getType();
    }
    
    if ("SuggestPricesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<SuggestPricesResponse>>(){}.getType();
    }
    
    if ("SuggestPricesResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SuggestPricesResultDTO>>(){}.getType();
    }
    
    if ("SuggestedOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SuggestedOfferDTO>>(){}.getType();
    }
    
    if ("SuggestedOfferMappingDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SuggestedOfferMappingDTO>>(){}.getType();
    }
    
    if ("TariffDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<TariffDTO>>(){}.getType();
    }
    
    if ("TariffParameterDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<TariffParameterDTO>>(){}.getType();
    }
    
    if ("TariffType".equalsIgnoreCase(className)) {
      return new TypeToken<List<TariffType>>(){}.getType();
    }
    
    if ("TimePeriodDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<TimePeriodDTO>>(){}.getType();
    }
    
    if ("TimeUnitType".equalsIgnoreCase(className)) {
      return new TypeToken<List<TimeUnitType>>(){}.getType();
    }
    
    if ("TrackDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<TrackDTO>>(){}.getType();
    }
    
    if ("TransferOrdersFromShipmentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<TransferOrdersFromShipmentRequest>>(){}.getType();
    }
    
    if ("TurnoverDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<TurnoverDTO>>(){}.getType();
    }
    
    if ("TurnoverType".equalsIgnoreCase(className)) {
      return new TypeToken<List<TurnoverType>>(){}.getType();
    }
    
    if ("UnitDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UnitDTO>>(){}.getType();
    }
    
    if ("UpdateBusinessOfferPriceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateBusinessOfferPriceDTO>>(){}.getType();
    }
    
    if ("UpdateBusinessPricesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateBusinessPricesRequest>>(){}.getType();
    }
    
    if ("UpdateCampaignOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateCampaignOfferDTO>>(){}.getType();
    }
    
    if ("UpdateCampaignOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateCampaignOffersRequest>>(){}.getType();
    }
    
    if ("UpdateGoodsFeedbackCommentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateGoodsFeedbackCommentDTO>>(){}.getType();
    }
    
    if ("UpdateGoodsFeedbackCommentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateGoodsFeedbackCommentRequest>>(){}.getType();
    }
    
    if ("UpdateGoodsFeedbackCommentResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateGoodsFeedbackCommentResponse>>(){}.getType();
    }
    
    if ("UpdateMappingDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateMappingDTO>>(){}.getType();
    }
    
    if ("UpdateMappingsOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateMappingsOfferDTO>>(){}.getType();
    }
    
    if ("UpdateOfferContentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOfferContentRequest>>(){}.getType();
    }
    
    if ("UpdateOfferContentResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOfferContentResponse>>(){}.getType();
    }
    
    if ("UpdateOfferContentResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOfferContentResultDTO>>(){}.getType();
    }
    
    if ("UpdateOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOfferDTO>>(){}.getType();
    }
    
    if ("UpdateOfferMappingDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOfferMappingDTO>>(){}.getType();
    }
    
    if ("UpdateOfferMappingEntryDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOfferMappingEntryDTO>>(){}.getType();
    }
    
    if ("UpdateOfferMappingEntryRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOfferMappingEntryRequest>>(){}.getType();
    }
    
    if ("UpdateOfferMappingResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOfferMappingResultDTO>>(){}.getType();
    }
    
    if ("UpdateOfferMappingsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOfferMappingsRequest>>(){}.getType();
    }
    
    if ("UpdateOfferMappingsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOfferMappingsResponse>>(){}.getType();
    }
    
    if ("UpdateOrderItemRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOrderItemRequest>>(){}.getType();
    }
    
    if ("UpdateOrderStatusDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOrderStatusDTO>>(){}.getType();
    }
    
    if ("UpdateOrderStatusRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOrderStatusRequest>>(){}.getType();
    }
    
    if ("UpdateOrderStatusResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOrderStatusResponse>>(){}.getType();
    }
    
    if ("UpdateOrderStatusesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOrderStatusesDTO>>(){}.getType();
    }
    
    if ("UpdateOrderStatusesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOrderStatusesRequest>>(){}.getType();
    }
    
    if ("UpdateOrderStatusesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOrderStatusesResponse>>(){}.getType();
    }
    
    if ("UpdateOrderStorageLimitRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOrderStorageLimitRequest>>(){}.getType();
    }
    
    if ("UpdateOutletLicenseRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateOutletLicenseRequest>>(){}.getType();
    }
    
    if ("UpdatePriceWithDiscountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdatePriceWithDiscountDTO>>(){}.getType();
    }
    
    if ("UpdatePricesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdatePricesRequest>>(){}.getType();
    }
    
    if ("UpdatePromoOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdatePromoOfferDTO>>(){}.getType();
    }
    
    if ("UpdatePromoOfferDiscountParamsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdatePromoOfferDiscountParamsDTO>>(){}.getType();
    }
    
    if ("UpdatePromoOfferParamsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdatePromoOfferParamsDTO>>(){}.getType();
    }
    
    if ("UpdatePromoOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdatePromoOffersRequest>>(){}.getType();
    }
    
    if ("UpdatePromoOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdatePromoOffersResponse>>(){}.getType();
    }
    
    if ("UpdatePromoOffersResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdatePromoOffersResultDTO>>(){}.getType();
    }
    
    if ("UpdateStockDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateStockDTO>>(){}.getType();
    }
    
    if ("UpdateStockItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateStockItemDTO>>(){}.getType();
    }
    
    if ("UpdateStocksRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateStocksRequest>>(){}.getType();
    }
    
    if ("UpdateTimeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UpdateTimeDTO>>(){}.getType();
    }
    
    if ("ValueRestrictionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<ValueRestrictionDTO>>(){}.getType();
    }
    
    if ("VerifyOrderEacRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<VerifyOrderEacRequest>>(){}.getType();
    }
    
    if ("VerifyOrderEacResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<VerifyOrderEacResponse>>(){}.getType();
    }
    
    if ("WarehouseAddressDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<WarehouseAddressDTO>>(){}.getType();
    }
    
    if ("WarehouseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<WarehouseDTO>>(){}.getType();
    }
    
    if ("WarehouseGroupDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<WarehouseGroupDTO>>(){}.getType();
    }
    
    if ("WarehouseOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<WarehouseOfferDTO>>(){}.getType();
    }
    
    if ("WarehouseOffersDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<WarehouseOffersDTO>>(){}.getType();
    }
    
    if ("WarehouseStockDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<WarehouseStockDTO>>(){}.getType();
    }
    
    if ("WarehouseStockType".equalsIgnoreCase(className)) {
      return new TypeToken<List<WarehouseStockType>>(){}.getType();
    }
    
    if ("WarehousesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<WarehousesDTO>>(){}.getType();
    }
    
    if ("WarningPromoOfferUpdateDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<WarningPromoOfferUpdateDTO>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("AcceptOrderCancellationRequest".equalsIgnoreCase(className)) {
      return new TypeToken<AcceptOrderCancellationRequest>(){}.getType();
    }
    
    if ("AddHiddenOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<AddHiddenOffersRequest>(){}.getType();
    }
    
    if ("AddOffersToArchiveDTO".equalsIgnoreCase(className)) {
      return new TypeToken<AddOffersToArchiveDTO>(){}.getType();
    }
    
    if ("AddOffersToArchiveErrorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<AddOffersToArchiveErrorDTO>(){}.getType();
    }
    
    if ("AddOffersToArchiveErrorType".equalsIgnoreCase(className)) {
      return new TypeToken<AddOffersToArchiveErrorType>(){}.getType();
    }
    
    if ("AddOffersToArchiveRequest".equalsIgnoreCase(className)) {
      return new TypeToken<AddOffersToArchiveRequest>(){}.getType();
    }
    
    if ("AddOffersToArchiveResponse".equalsIgnoreCase(className)) {
      return new TypeToken<AddOffersToArchiveResponse>(){}.getType();
    }
    
    if ("AffectedOrderQualityRatingComponentType".equalsIgnoreCase(className)) {
      return new TypeToken<AffectedOrderQualityRatingComponentType>(){}.getType();
    }
    
    if ("AgeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<AgeDTO>(){}.getType();
    }
    
    if ("AgeUnitType".equalsIgnoreCase(className)) {
      return new TypeToken<AgeUnitType>(){}.getType();
    }
    
    if ("ApiClientDataErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ApiClientDataErrorResponse>(){}.getType();
    }
    
    if ("ApiErrorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ApiErrorDTO>(){}.getType();
    }
    
    if ("ApiErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ApiErrorResponse>(){}.getType();
    }
    
    if ("ApiForbiddenErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ApiForbiddenErrorResponse>(){}.getType();
    }
    
    if ("ApiLimitErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ApiLimitErrorResponse>(){}.getType();
    }
    
    if ("ApiLockedErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ApiLockedErrorResponse>(){}.getType();
    }
    
    if ("ApiNotFoundErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ApiNotFoundErrorResponse>(){}.getType();
    }
    
    if ("ApiResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ApiResponse>(){}.getType();
    }
    
    if ("ApiResponseStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<ApiResponseStatusType>(){}.getType();
    }
    
    if ("ApiServerErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ApiServerErrorResponse>(){}.getType();
    }
    
    if ("ApiUnauthorizedErrorResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ApiUnauthorizedErrorResponse>(){}.getType();
    }
    
    if ("BaseCampaignOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<BaseCampaignOfferDTO>(){}.getType();
    }
    
    if ("BaseOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<BaseOfferDTO>(){}.getType();
    }
    
    if ("BasePriceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<BasePriceDTO>(){}.getType();
    }
    
    if ("BaseShipmentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<BaseShipmentDTO>(){}.getType();
    }
    
    if ("BidRecommendationItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<BidRecommendationItemDTO>(){}.getType();
    }
    
    if ("BriefOrderItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<BriefOrderItemDTO>(){}.getType();
    }
    
    if ("BriefOrderItemInstanceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<BriefOrderItemInstanceDTO>(){}.getType();
    }
    
    if ("BusinessDTO".equalsIgnoreCase(className)) {
      return new TypeToken<BusinessDTO>(){}.getType();
    }
    
    if ("BusinessSettingsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<BusinessSettingsDTO>(){}.getType();
    }
    
    if ("CalculateTariffsOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CalculateTariffsOfferDTO>(){}.getType();
    }
    
    if ("CalculateTariffsOfferInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CalculateTariffsOfferInfoDTO>(){}.getType();
    }
    
    if ("CalculateTariffsParametersDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CalculateTariffsParametersDTO>(){}.getType();
    }
    
    if ("CalculateTariffsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CalculateTariffsRequest>(){}.getType();
    }
    
    if ("CalculateTariffsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CalculateTariffsResponse>(){}.getType();
    }
    
    if ("CalculateTariffsResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CalculateTariffsResponseDTO>(){}.getType();
    }
    
    if ("CalculatedTariffDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CalculatedTariffDTO>(){}.getType();
    }
    
    if ("CalculatedTariffType".equalsIgnoreCase(className)) {
      return new TypeToken<CalculatedTariffType>(){}.getType();
    }
    
    if ("CampaignDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignDTO>(){}.getType();
    }
    
    if ("CampaignQualityRatingDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignQualityRatingDTO>(){}.getType();
    }
    
    if ("CampaignSettingsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignSettingsDTO>(){}.getType();
    }
    
    if ("CampaignSettingsDeliveryDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignSettingsDeliveryDTO>(){}.getType();
    }
    
    if ("CampaignSettingsLocalRegionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignSettingsLocalRegionDTO>(){}.getType();
    }
    
    if ("CampaignSettingsScheduleDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignSettingsScheduleDTO>(){}.getType();
    }
    
    if ("CampaignSettingsScheduleSourceType".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignSettingsScheduleSourceType>(){}.getType();
    }
    
    if ("CampaignSettingsTimePeriodDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignSettingsTimePeriodDTO>(){}.getType();
    }
    
    if ("CampaignsQualityRatingDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CampaignsQualityRatingDTO>(){}.getType();
    }
    
    if ("CategoryContentParametersDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryContentParametersDTO>(){}.getType();
    }
    
    if ("CategoryDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryDTO>(){}.getType();
    }
    
    if ("CategoryErrorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryErrorDTO>(){}.getType();
    }
    
    if ("CategoryErrorType".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryErrorType>(){}.getType();
    }
    
    if ("CategoryParameterDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryParameterDTO>(){}.getType();
    }
    
    if ("CategoryParameterUnitDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryParameterUnitDTO>(){}.getType();
    }
    
    if ("ChangeOutletRequest".equalsIgnoreCase(className)) {
      return new TypeToken<ChangeOutletRequest>(){}.getType();
    }
    
    if ("ChannelType".equalsIgnoreCase(className)) {
      return new TypeToken<ChannelType>(){}.getType();
    }
    
    if ("ChatMessageDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ChatMessageDTO>(){}.getType();
    }
    
    if ("ChatMessagePayloadDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ChatMessagePayloadDTO>(){}.getType();
    }
    
    if ("ChatMessageSenderType".equalsIgnoreCase(className)) {
      return new TypeToken<ChatMessageSenderType>(){}.getType();
    }
    
    if ("ChatMessagesResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ChatMessagesResultDTO>(){}.getType();
    }
    
    if ("ChatStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<ChatStatusType>(){}.getType();
    }
    
    if ("ChatType".equalsIgnoreCase(className)) {
      return new TypeToken<ChatType>(){}.getType();
    }
    
    if ("ConfirmPricesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<ConfirmPricesRequest>(){}.getType();
    }
    
    if ("ConfirmShipmentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<ConfirmShipmentRequest>(){}.getType();
    }
    
    if ("CreateChatRequest".equalsIgnoreCase(className)) {
      return new TypeToken<CreateChatRequest>(){}.getType();
    }
    
    if ("CreateChatResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CreateChatResponse>(){}.getType();
    }
    
    if ("CreateChatResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CreateChatResultDTO>(){}.getType();
    }
    
    if ("CreateOutletResponse".equalsIgnoreCase(className)) {
      return new TypeToken<CreateOutletResponse>(){}.getType();
    }
    
    if ("CurrencyType".equalsIgnoreCase(className)) {
      return new TypeToken<CurrencyType>(){}.getType();
    }
    
    if ("DayOfWeekType".equalsIgnoreCase(className)) {
      return new TypeToken<DayOfWeekType>(){}.getType();
    }
    
    if ("DeleteCampaignOffersDTO".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteCampaignOffersDTO>(){}.getType();
    }
    
    if ("DeleteCampaignOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteCampaignOffersRequest>(){}.getType();
    }
    
    if ("DeleteCampaignOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteCampaignOffersResponse>(){}.getType();
    }
    
    if ("DeleteGoodsFeedbackCommentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteGoodsFeedbackCommentRequest>(){}.getType();
    }
    
    if ("DeleteHiddenOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteHiddenOffersRequest>(){}.getType();
    }
    
    if ("DeleteOffersDTO".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteOffersDTO>(){}.getType();
    }
    
    if ("DeleteOffersFromArchiveDTO".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteOffersFromArchiveDTO>(){}.getType();
    }
    
    if ("DeleteOffersFromArchiveRequest".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteOffersFromArchiveRequest>(){}.getType();
    }
    
    if ("DeleteOffersFromArchiveResponse".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteOffersFromArchiveResponse>(){}.getType();
    }
    
    if ("DeleteOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteOffersRequest>(){}.getType();
    }
    
    if ("DeleteOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteOffersResponse>(){}.getType();
    }
    
    if ("DeletePromoOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<DeletePromoOffersRequest>(){}.getType();
    }
    
    if ("DeletePromoOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<DeletePromoOffersResponse>(){}.getType();
    }
    
    if ("DeletePromoOffersResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<DeletePromoOffersResultDTO>(){}.getType();
    }
    
    if ("DeliveryServiceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<DeliveryServiceDTO>(){}.getType();
    }
    
    if ("DeliveryServiceInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<DeliveryServiceInfoDTO>(){}.getType();
    }
    
    if ("DeliveryServicesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<DeliveryServicesDTO>(){}.getType();
    }
    
    if ("DocumentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<DocumentDTO>(){}.getType();
    }
    
    if ("EacVerificationResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<EacVerificationResultDTO>(){}.getType();
    }
    
    if ("EacVerificationStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<EacVerificationStatusType>(){}.getType();
    }
    
    if ("EmptyApiResponse".equalsIgnoreCase(className)) {
      return new TypeToken<EmptyApiResponse>(){}.getType();
    }
    
    if ("EnrichedMappingsOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<EnrichedMappingsOfferDTO>(){}.getType();
    }
    
    if ("EnrichedModelDTO".equalsIgnoreCase(className)) {
      return new TypeToken<EnrichedModelDTO>(){}.getType();
    }
    
    if ("EnrichedModelsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<EnrichedModelsDTO>(){}.getType();
    }
    
    if ("EnrichedOrderBoxLayoutDTO".equalsIgnoreCase(className)) {
      return new TypeToken<EnrichedOrderBoxLayoutDTO>(){}.getType();
    }
    
    if ("ExtensionShipmentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ExtensionShipmentDTO>(){}.getType();
    }
    
    if ("FeedContentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedContentDTO>(){}.getType();
    }
    
    if ("FeedContentErrorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedContentErrorDTO>(){}.getType();
    }
    
    if ("FeedContentErrorType".equalsIgnoreCase(className)) {
      return new TypeToken<FeedContentErrorType>(){}.getType();
    }
    
    if ("FeedDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedDTO>(){}.getType();
    }
    
    if ("FeedDownloadDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedDownloadDTO>(){}.getType();
    }
    
    if ("FeedDownloadErrorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedDownloadErrorDTO>(){}.getType();
    }
    
    if ("FeedDownloadErrorType".equalsIgnoreCase(className)) {
      return new TypeToken<FeedDownloadErrorType>(){}.getType();
    }
    
    if ("FeedIndexLogsErrorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedIndexLogsErrorDTO>(){}.getType();
    }
    
    if ("FeedIndexLogsErrorType".equalsIgnoreCase(className)) {
      return new TypeToken<FeedIndexLogsErrorType>(){}.getType();
    }
    
    if ("FeedIndexLogsFeedDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedIndexLogsFeedDTO>(){}.getType();
    }
    
    if ("FeedIndexLogsIndexType".equalsIgnoreCase(className)) {
      return new TypeToken<FeedIndexLogsIndexType>(){}.getType();
    }
    
    if ("FeedIndexLogsOffersDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedIndexLogsOffersDTO>(){}.getType();
    }
    
    if ("FeedIndexLogsRecordDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedIndexLogsRecordDTO>(){}.getType();
    }
    
    if ("FeedIndexLogsResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedIndexLogsResultDTO>(){}.getType();
    }
    
    if ("FeedIndexLogsStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<FeedIndexLogsStatusType>(){}.getType();
    }
    
    if ("FeedParameterDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedParameterDTO>(){}.getType();
    }
    
    if ("FeedPlacementDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedPlacementDTO>(){}.getType();
    }
    
    if ("FeedPublicationDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedPublicationDTO>(){}.getType();
    }
    
    if ("FeedPublicationFullDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedPublicationFullDTO>(){}.getType();
    }
    
    if ("FeedPublicationPriceAndStockUpdateDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedPublicationPriceAndStockUpdateDTO>(){}.getType();
    }
    
    if ("FeedStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<FeedStatusType>(){}.getType();
    }
    
    if ("FeedbackAuthorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedbackAuthorDTO>(){}.getType();
    }
    
    if ("FeedbackCommentAuthorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedbackCommentAuthorDTO>(){}.getType();
    }
    
    if ("FeedbackCommentAuthorType".equalsIgnoreCase(className)) {
      return new TypeToken<FeedbackCommentAuthorType>(){}.getType();
    }
    
    if ("FeedbackCommentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedbackCommentDTO>(){}.getType();
    }
    
    if ("FeedbackDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedbackDTO>(){}.getType();
    }
    
    if ("FeedbackDeliveryType".equalsIgnoreCase(className)) {
      return new TypeToken<FeedbackDeliveryType>(){}.getType();
    }
    
    if ("FeedbackFactorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedbackFactorDTO>(){}.getType();
    }
    
    if ("FeedbackGradesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedbackGradesDTO>(){}.getType();
    }
    
    if ("FeedbackListDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedbackListDTO>(){}.getType();
    }
    
    if ("FeedbackOrderDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedbackOrderDTO>(){}.getType();
    }
    
    if ("FeedbackReactionStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<FeedbackReactionStatusType>(){}.getType();
    }
    
    if ("FeedbackShopDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FeedbackShopDTO>(){}.getType();
    }
    
    if ("FeedbackStateType".equalsIgnoreCase(className)) {
      return new TypeToken<FeedbackStateType>(){}.getType();
    }
    
    if ("FieldStateType".equalsIgnoreCase(className)) {
      return new TypeToken<FieldStateType>(){}.getType();
    }
    
    if ("FlippingPagerDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FlippingPagerDTO>(){}.getType();
    }
    
    if ("ForwardScrollingPagerDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ForwardScrollingPagerDTO>(){}.getType();
    }
    
    if ("FulfillmentWarehouseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FulfillmentWarehouseDTO>(){}.getType();
    }
    
    if ("FulfillmentWarehousesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FulfillmentWarehousesDTO>(){}.getType();
    }
    
    if ("FullOutletDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FullOutletDTO>(){}.getType();
    }
    
    if ("FullOutletLicenseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<FullOutletLicenseDTO>(){}.getType();
    }
    
    if ("GenerateBoostConsolidatedRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GenerateBoostConsolidatedRequest>(){}.getType();
    }
    
    if ("GenerateCompetitorsPositionReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GenerateCompetitorsPositionReportRequest>(){}.getType();
    }
    
    if ("GenerateGoodsFeedbackRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GenerateGoodsFeedbackRequest>(){}.getType();
    }
    
    if ("GenerateGoodsMovementReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GenerateGoodsMovementReportRequest>(){}.getType();
    }
    
    if ("GenerateGoodsRealizationReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GenerateGoodsRealizationReportRequest>(){}.getType();
    }
    
    if ("GenerateGoodsTurnoverRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GenerateGoodsTurnoverRequest>(){}.getType();
    }
    
    if ("GenerateMassOrderLabelsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GenerateMassOrderLabelsRequest>(){}.getType();
    }
    
    if ("GeneratePricesReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GeneratePricesReportRequest>(){}.getType();
    }
    
    if ("GenerateReportDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GenerateReportDTO>(){}.getType();
    }
    
    if ("GenerateReportResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GenerateReportResponse>(){}.getType();
    }
    
    if ("GenerateShelfsStatisticsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GenerateShelfsStatisticsRequest>(){}.getType();
    }
    
    if ("GenerateShipmentListDocumentReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GenerateShipmentListDocumentReportRequest>(){}.getType();
    }
    
    if ("GenerateShowsSalesReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GenerateShowsSalesReportRequest>(){}.getType();
    }
    
    if ("GenerateStocksOnWarehousesReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GenerateStocksOnWarehousesReportRequest>(){}.getType();
    }
    
    if ("GenerateUnitedMarketplaceServicesReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GenerateUnitedMarketplaceServicesReportRequest>(){}.getType();
    }
    
    if ("GenerateUnitedNettingReportRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GenerateUnitedNettingReportRequest>(){}.getType();
    }
    
    if ("GenerateUnitedOrdersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GenerateUnitedOrdersRequest>(){}.getType();
    }
    
    if ("GetAllOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetAllOffersResponse>(){}.getType();
    }
    
    if ("GetBidsInfoRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetBidsInfoRequest>(){}.getType();
    }
    
    if ("GetBidsInfoResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetBidsInfoResponse>(){}.getType();
    }
    
    if ("GetBidsInfoResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetBidsInfoResponseDTO>(){}.getType();
    }
    
    if ("GetBidsRecommendationsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetBidsRecommendationsRequest>(){}.getType();
    }
    
    if ("GetBidsRecommendationsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetBidsRecommendationsResponse>(){}.getType();
    }
    
    if ("GetBidsRecommendationsResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetBidsRecommendationsResponseDTO>(){}.getType();
    }
    
    if ("GetBusinessBuyerInfoResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetBusinessBuyerInfoResponse>(){}.getType();
    }
    
    if ("GetBusinessDocumentsInfoResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetBusinessDocumentsInfoResponse>(){}.getType();
    }
    
    if ("GetBusinessSettingsInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetBusinessSettingsInfoDTO>(){}.getType();
    }
    
    if ("GetBusinessSettingsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetBusinessSettingsResponse>(){}.getType();
    }
    
    if ("GetCampaignLoginsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetCampaignLoginsResponse>(){}.getType();
    }
    
    if ("GetCampaignOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetCampaignOfferDTO>(){}.getType();
    }
    
    if ("GetCampaignOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetCampaignOffersRequest>(){}.getType();
    }
    
    if ("GetCampaignOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetCampaignOffersResponse>(){}.getType();
    }
    
    if ("GetCampaignOffersResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetCampaignOffersResultDTO>(){}.getType();
    }
    
    if ("GetCampaignRegionResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetCampaignRegionResponse>(){}.getType();
    }
    
    if ("GetCampaignResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetCampaignResponse>(){}.getType();
    }
    
    if ("GetCampaignSettingsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetCampaignSettingsResponse>(){}.getType();
    }
    
    if ("GetCampaignsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetCampaignsResponse>(){}.getType();
    }
    
    if ("GetCategoriesMaxSaleQuantumDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetCategoriesMaxSaleQuantumDTO>(){}.getType();
    }
    
    if ("GetCategoriesMaxSaleQuantumRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetCategoriesMaxSaleQuantumRequest>(){}.getType();
    }
    
    if ("GetCategoriesMaxSaleQuantumResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetCategoriesMaxSaleQuantumResponse>(){}.getType();
    }
    
    if ("GetCategoriesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetCategoriesRequest>(){}.getType();
    }
    
    if ("GetCategoriesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetCategoriesResponse>(){}.getType();
    }
    
    if ("GetCategoryContentParametersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetCategoryContentParametersResponse>(){}.getType();
    }
    
    if ("GetChatHistoryRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetChatHistoryRequest>(){}.getType();
    }
    
    if ("GetChatHistoryResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetChatHistoryResponse>(){}.getType();
    }
    
    if ("GetChatInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetChatInfoDTO>(){}.getType();
    }
    
    if ("GetChatsInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetChatsInfoDTO>(){}.getType();
    }
    
    if ("GetChatsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetChatsRequest>(){}.getType();
    }
    
    if ("GetChatsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetChatsResponse>(){}.getType();
    }
    
    if ("GetDeliveryServicesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetDeliveryServicesResponse>(){}.getType();
    }
    
    if ("GetFeedIndexLogsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetFeedIndexLogsResponse>(){}.getType();
    }
    
    if ("GetFeedResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetFeedResponse>(){}.getType();
    }
    
    if ("GetFeedbackListResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetFeedbackListResponse>(){}.getType();
    }
    
    if ("GetFeedsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetFeedsResponse>(){}.getType();
    }
    
    if ("GetFulfillmentWarehousesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetFulfillmentWarehousesResponse>(){}.getType();
    }
    
    if ("GetGoodsFeedbackCommentsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetGoodsFeedbackCommentsRequest>(){}.getType();
    }
    
    if ("GetGoodsFeedbackCommentsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetGoodsFeedbackCommentsResponse>(){}.getType();
    }
    
    if ("GetGoodsFeedbackRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetGoodsFeedbackRequest>(){}.getType();
    }
    
    if ("GetGoodsFeedbackResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetGoodsFeedbackResponse>(){}.getType();
    }
    
    if ("GetGoodsStatsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetGoodsStatsRequest>(){}.getType();
    }
    
    if ("GetGoodsStatsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetGoodsStatsResponse>(){}.getType();
    }
    
    if ("GetHiddenOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetHiddenOffersResponse>(){}.getType();
    }
    
    if ("GetHiddenOffersResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetHiddenOffersResultDTO>(){}.getType();
    }
    
    if ("GetMappingDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetMappingDTO>(){}.getType();
    }
    
    if ("GetModelsOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetModelsOffersResponse>(){}.getType();
    }
    
    if ("GetModelsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetModelsRequest>(){}.getType();
    }
    
    if ("GetModelsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetModelsResponse>(){}.getType();
    }
    
    if ("GetOfferCardsContentStatusRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetOfferCardsContentStatusRequest>(){}.getType();
    }
    
    if ("GetOfferCardsContentStatusResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetOfferCardsContentStatusResponse>(){}.getType();
    }
    
    if ("GetOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetOfferDTO>(){}.getType();
    }
    
    if ("GetOfferMappingDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetOfferMappingDTO>(){}.getType();
    }
    
    if ("GetOfferMappingEntriesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetOfferMappingEntriesResponse>(){}.getType();
    }
    
    if ("GetOfferMappingsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetOfferMappingsRequest>(){}.getType();
    }
    
    if ("GetOfferMappingsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetOfferMappingsResponse>(){}.getType();
    }
    
    if ("GetOfferMappingsResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetOfferMappingsResultDTO>(){}.getType();
    }
    
    if ("GetOfferRecommendationsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetOfferRecommendationsRequest>(){}.getType();
    }
    
    if ("GetOfferRecommendationsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetOfferRecommendationsResponse>(){}.getType();
    }
    
    if ("GetOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetOffersResponse>(){}.getType();
    }
    
    if ("GetOrderBuyerInfoResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetOrderBuyerInfoResponse>(){}.getType();
    }
    
    if ("GetOrderLabelsDataResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetOrderLabelsDataResponse>(){}.getType();
    }
    
    if ("GetOrderResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetOrderResponse>(){}.getType();
    }
    
    if ("GetOrdersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetOrdersResponse>(){}.getType();
    }
    
    if ("GetOrdersStatsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetOrdersStatsRequest>(){}.getType();
    }
    
    if ("GetOrdersStatsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetOrdersStatsResponse>(){}.getType();
    }
    
    if ("GetOutletLicensesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetOutletLicensesResponse>(){}.getType();
    }
    
    if ("GetOutletResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetOutletResponse>(){}.getType();
    }
    
    if ("GetOutletsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetOutletsResponse>(){}.getType();
    }
    
    if ("GetPriceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetPriceDTO>(){}.getType();
    }
    
    if ("GetPriceWithDiscountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetPriceWithDiscountDTO>(){}.getType();
    }
    
    if ("GetPriceWithVatDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetPriceWithVatDTO>(){}.getType();
    }
    
    if ("GetPricesByOfferIdsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetPricesByOfferIdsRequest>(){}.getType();
    }
    
    if ("GetPricesByOfferIdsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetPricesByOfferIdsResponse>(){}.getType();
    }
    
    if ("GetPricesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetPricesResponse>(){}.getType();
    }
    
    if ("GetPromoAssortmentInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetPromoAssortmentInfoDTO>(){}.getType();
    }
    
    if ("GetPromoBestsellerInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetPromoBestsellerInfoDTO>(){}.getType();
    }
    
    if ("GetPromoConstraintsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetPromoConstraintsDTO>(){}.getType();
    }
    
    if ("GetPromoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetPromoDTO>(){}.getType();
    }
    
    if ("GetPromoMechanicsInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetPromoMechanicsInfoDTO>(){}.getType();
    }
    
    if ("GetPromoOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetPromoOfferDTO>(){}.getType();
    }
    
    if ("GetPromoOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetPromoOffersRequest>(){}.getType();
    }
    
    if ("GetPromoOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetPromoOffersResponse>(){}.getType();
    }
    
    if ("GetPromoOffersResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetPromoOffersResultDTO>(){}.getType();
    }
    
    if ("GetPromoPromocodeInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetPromoPromocodeInfoDTO>(){}.getType();
    }
    
    if ("GetPromosRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetPromosRequest>(){}.getType();
    }
    
    if ("GetPromosResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetPromosResponse>(){}.getType();
    }
    
    if ("GetPromosResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetPromosResultDTO>(){}.getType();
    }
    
    if ("GetQualityRatingDetailsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetQualityRatingDetailsResponse>(){}.getType();
    }
    
    if ("GetQualityRatingRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetQualityRatingRequest>(){}.getType();
    }
    
    if ("GetQualityRatingResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetQualityRatingResponse>(){}.getType();
    }
    
    if ("GetQuarantineOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetQuarantineOffersRequest>(){}.getType();
    }
    
    if ("GetQuarantineOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetQuarantineOffersResponse>(){}.getType();
    }
    
    if ("GetQuarantineOffersResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetQuarantineOffersResultDTO>(){}.getType();
    }
    
    if ("GetRegionWithChildrenResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetRegionWithChildrenResponse>(){}.getType();
    }
    
    if ("GetRegionsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetRegionsResponse>(){}.getType();
    }
    
    if ("GetReportInfoResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetReportInfoResponse>(){}.getType();
    }
    
    if ("GetReturnResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetReturnResponse>(){}.getType();
    }
    
    if ("GetReturnsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetReturnsResponse>(){}.getType();
    }
    
    if ("GetShipmentOrdersInfoResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetShipmentOrdersInfoResponse>(){}.getType();
    }
    
    if ("GetShipmentResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetShipmentResponse>(){}.getType();
    }
    
    if ("GetSuggestedOfferMappingEntriesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetSuggestedOfferMappingEntriesRequest>(){}.getType();
    }
    
    if ("GetSuggestedOfferMappingEntriesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetSuggestedOfferMappingEntriesResponse>(){}.getType();
    }
    
    if ("GetSuggestedOfferMappingsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetSuggestedOfferMappingsRequest>(){}.getType();
    }
    
    if ("GetSuggestedOfferMappingsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetSuggestedOfferMappingsResponse>(){}.getType();
    }
    
    if ("GetSuggestedOfferMappingsResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetSuggestedOfferMappingsResultDTO>(){}.getType();
    }
    
    if ("GetWarehouseStocksDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GetWarehouseStocksDTO>(){}.getType();
    }
    
    if ("GetWarehouseStocksRequest".equalsIgnoreCase(className)) {
      return new TypeToken<GetWarehouseStocksRequest>(){}.getType();
    }
    
    if ("GetWarehouseStocksResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetWarehouseStocksResponse>(){}.getType();
    }
    
    if ("GetWarehousesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<GetWarehousesResponse>(){}.getType();
    }
    
    if ("GoodsFeedbackCommentAuthorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GoodsFeedbackCommentAuthorDTO>(){}.getType();
    }
    
    if ("GoodsFeedbackCommentAuthorType".equalsIgnoreCase(className)) {
      return new TypeToken<GoodsFeedbackCommentAuthorType>(){}.getType();
    }
    
    if ("GoodsFeedbackCommentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GoodsFeedbackCommentDTO>(){}.getType();
    }
    
    if ("GoodsFeedbackCommentListDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GoodsFeedbackCommentListDTO>(){}.getType();
    }
    
    if ("GoodsFeedbackCommentStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<GoodsFeedbackCommentStatusType>(){}.getType();
    }
    
    if ("GoodsFeedbackDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GoodsFeedbackDTO>(){}.getType();
    }
    
    if ("GoodsFeedbackDescriptionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GoodsFeedbackDescriptionDTO>(){}.getType();
    }
    
    if ("GoodsFeedbackIdentifiersDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GoodsFeedbackIdentifiersDTO>(){}.getType();
    }
    
    if ("GoodsFeedbackListDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GoodsFeedbackListDTO>(){}.getType();
    }
    
    if ("GoodsFeedbackMediaDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GoodsFeedbackMediaDTO>(){}.getType();
    }
    
    if ("GoodsFeedbackStatisticsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GoodsFeedbackStatisticsDTO>(){}.getType();
    }
    
    if ("GoodsStatsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GoodsStatsDTO>(){}.getType();
    }
    
    if ("GoodsStatsGoodsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GoodsStatsGoodsDTO>(){}.getType();
    }
    
    if ("GoodsStatsWarehouseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GoodsStatsWarehouseDTO>(){}.getType();
    }
    
    if ("GoodsStatsWeightDimensionsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GoodsStatsWeightDimensionsDTO>(){}.getType();
    }
    
    if ("GpsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<GpsDTO>(){}.getType();
    }
    
    if ("HiddenOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<HiddenOfferDTO>(){}.getType();
    }
    
    if ("LanguageType".equalsIgnoreCase(className)) {
      return new TypeToken<LanguageType>(){}.getType();
    }
    
    if ("LicenseCheckStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<LicenseCheckStatusType>(){}.getType();
    }
    
    if ("LicenseType".equalsIgnoreCase(className)) {
      return new TypeToken<LicenseType>(){}.getType();
    }
    
    if ("LogisticPickupPointDTO".equalsIgnoreCase(className)) {
      return new TypeToken<LogisticPickupPointDTO>(){}.getType();
    }
    
    if ("LogisticPointType".equalsIgnoreCase(className)) {
      return new TypeToken<LogisticPointType>(){}.getType();
    }
    
    if ("MappingsOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<MappingsOfferDTO>(){}.getType();
    }
    
    if ("MappingsOfferInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<MappingsOfferInfoDTO>(){}.getType();
    }
    
    if ("MaxSaleQuantumDTO".equalsIgnoreCase(className)) {
      return new TypeToken<MaxSaleQuantumDTO>(){}.getType();
    }
    
    if ("MechanicsType".equalsIgnoreCase(className)) {
      return new TypeToken<MechanicsType>(){}.getType();
    }
    
    if ("ModelDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ModelDTO>(){}.getType();
    }
    
    if ("ModelOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ModelOfferDTO>(){}.getType();
    }
    
    if ("ModelPriceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ModelPriceDTO>(){}.getType();
    }
    
    if ("ModelsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsDTO>(){}.getType();
    }
    
    if ("OfferAvailabilityStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<OfferAvailabilityStatusType>(){}.getType();
    }
    
    if ("OfferCampaignStatusDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferCampaignStatusDTO>(){}.getType();
    }
    
    if ("OfferCampaignStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<OfferCampaignStatusType>(){}.getType();
    }
    
    if ("OfferCardDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferCardDTO>(){}.getType();
    }
    
    if ("OfferCardRecommendationDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferCardRecommendationDTO>(){}.getType();
    }
    
    if ("OfferCardRecommendationType".equalsIgnoreCase(className)) {
      return new TypeToken<OfferCardRecommendationType>(){}.getType();
    }
    
    if ("OfferCardStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<OfferCardStatusType>(){}.getType();
    }
    
    if ("OfferCardsContentStatusDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferCardsContentStatusDTO>(){}.getType();
    }
    
    if ("OfferConditionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferConditionDTO>(){}.getType();
    }
    
    if ("OfferConditionQualityType".equalsIgnoreCase(className)) {
      return new TypeToken<OfferConditionQualityType>(){}.getType();
    }
    
    if ("OfferConditionType".equalsIgnoreCase(className)) {
      return new TypeToken<OfferConditionType>(){}.getType();
    }
    
    if ("OfferContentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferContentDTO>(){}.getType();
    }
    
    if ("OfferContentErrorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferContentErrorDTO>(){}.getType();
    }
    
    if ("OfferContentErrorType".equalsIgnoreCase(className)) {
      return new TypeToken<OfferContentErrorType>(){}.getType();
    }
    
    if ("OfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferDTO>(){}.getType();
    }
    
    if ("OfferErrorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferErrorDTO>(){}.getType();
    }
    
    if ("OfferForRecommendationDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferForRecommendationDTO>(){}.getType();
    }
    
    if ("OfferManualDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferManualDTO>(){}.getType();
    }
    
    if ("OfferMappingDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferMappingDTO>(){}.getType();
    }
    
    if ("OfferMappingEntriesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferMappingEntriesDTO>(){}.getType();
    }
    
    if ("OfferMappingEntryDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferMappingEntryDTO>(){}.getType();
    }
    
    if ("OfferMappingErrorDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferMappingErrorDTO>(){}.getType();
    }
    
    if ("OfferMappingErrorType".equalsIgnoreCase(className)) {
      return new TypeToken<OfferMappingErrorType>(){}.getType();
    }
    
    if ("OfferMappingInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferMappingInfoDTO>(){}.getType();
    }
    
    if ("OfferMappingKindType".equalsIgnoreCase(className)) {
      return new TypeToken<OfferMappingKindType>(){}.getType();
    }
    
    if ("OfferMappingSuggestionsListDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferMappingSuggestionsListDTO>(){}.getType();
    }
    
    if ("OfferParamDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferParamDTO>(){}.getType();
    }
    
    if ("OfferPriceByOfferIdsListResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferPriceByOfferIdsListResponseDTO>(){}.getType();
    }
    
    if ("OfferPriceByOfferIdsResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferPriceByOfferIdsResponseDTO>(){}.getType();
    }
    
    if ("OfferPriceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferPriceDTO>(){}.getType();
    }
    
    if ("OfferPriceListResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferPriceListResponseDTO>(){}.getType();
    }
    
    if ("OfferPriceResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferPriceResponseDTO>(){}.getType();
    }
    
    if ("OfferProcessingNoteDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferProcessingNoteDTO>(){}.getType();
    }
    
    if ("OfferProcessingNoteType".equalsIgnoreCase(className)) {
      return new TypeToken<OfferProcessingNoteType>(){}.getType();
    }
    
    if ("OfferProcessingStateDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferProcessingStateDTO>(){}.getType();
    }
    
    if ("OfferProcessingStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<OfferProcessingStatusType>(){}.getType();
    }
    
    if ("OfferRecommendationDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferRecommendationDTO>(){}.getType();
    }
    
    if ("OfferRecommendationInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferRecommendationInfoDTO>(){}.getType();
    }
    
    if ("OfferRecommendationsResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferRecommendationsResultDTO>(){}.getType();
    }
    
    if ("OfferSellingProgramDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferSellingProgramDTO>(){}.getType();
    }
    
    if ("OfferSellingProgramStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<OfferSellingProgramStatusType>(){}.getType();
    }
    
    if ("OfferType".equalsIgnoreCase(className)) {
      return new TypeToken<OfferType>(){}.getType();
    }
    
    if ("OfferWeightDimensionsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OfferWeightDimensionsDTO>(){}.getType();
    }
    
    if ("OffersDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OffersDTO>(){}.getType();
    }
    
    if ("OptionValuesLimitedDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OptionValuesLimitedDTO>(){}.getType();
    }
    
    if ("OrderBoxLayoutDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderBoxLayoutDTO>(){}.getType();
    }
    
    if ("OrderBoxLayoutItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderBoxLayoutItemDTO>(){}.getType();
    }
    
    if ("OrderBoxLayoutPartialCountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderBoxLayoutPartialCountDTO>(){}.getType();
    }
    
    if ("OrderBoxesLayoutDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderBoxesLayoutDTO>(){}.getType();
    }
    
    if ("OrderBusinessBuyerDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderBusinessBuyerDTO>(){}.getType();
    }
    
    if ("OrderBusinessDocumentsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderBusinessDocumentsDTO>(){}.getType();
    }
    
    if ("OrderBuyerBasicInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderBuyerBasicInfoDTO>(){}.getType();
    }
    
    if ("OrderBuyerDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderBuyerDTO>(){}.getType();
    }
    
    if ("OrderBuyerInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderBuyerInfoDTO>(){}.getType();
    }
    
    if ("OrderBuyerType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderBuyerType>(){}.getType();
    }
    
    if ("OrderCancellationReasonType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderCancellationReasonType>(){}.getType();
    }
    
    if ("OrderCourierDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderCourierDTO>(){}.getType();
    }
    
    if ("OrderDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderDTO>(){}.getType();
    }
    
    if ("OrderDeliveryAddressDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderDeliveryAddressDTO>(){}.getType();
    }
    
    if ("OrderDeliveryDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderDeliveryDTO>(){}.getType();
    }
    
    if ("OrderDeliveryDateDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderDeliveryDateDTO>(){}.getType();
    }
    
    if ("OrderDeliveryDateReasonType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderDeliveryDateReasonType>(){}.getType();
    }
    
    if ("OrderDeliveryDatesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderDeliveryDatesDTO>(){}.getType();
    }
    
    if ("OrderDeliveryDispatchType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderDeliveryDispatchType>(){}.getType();
    }
    
    if ("OrderDeliveryEacType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderDeliveryEacType>(){}.getType();
    }
    
    if ("OrderDeliveryPartnerType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderDeliveryPartnerType>(){}.getType();
    }
    
    if ("OrderDeliveryType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderDeliveryType>(){}.getType();
    }
    
    if ("OrderDigitalItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderDigitalItemDTO>(){}.getType();
    }
    
    if ("OrderDocumentStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderDocumentStatusType>(){}.getType();
    }
    
    if ("OrderItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderItemDTO>(){}.getType();
    }
    
    if ("OrderItemDetailDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderItemDetailDTO>(){}.getType();
    }
    
    if ("OrderItemInstanceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderItemInstanceDTO>(){}.getType();
    }
    
    if ("OrderItemInstanceModificationDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderItemInstanceModificationDTO>(){}.getType();
    }
    
    if ("OrderItemInstanceType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderItemInstanceType>(){}.getType();
    }
    
    if ("OrderItemModificationDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderItemModificationDTO>(){}.getType();
    }
    
    if ("OrderItemPromoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderItemPromoDTO>(){}.getType();
    }
    
    if ("OrderItemStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderItemStatusType>(){}.getType();
    }
    
    if ("OrderItemSubsidyDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderItemSubsidyDTO>(){}.getType();
    }
    
    if ("OrderItemSubsidyType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderItemSubsidyType>(){}.getType();
    }
    
    if ("OrderItemsModificationRequestReasonType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderItemsModificationRequestReasonType>(){}.getType();
    }
    
    if ("OrderItemsModificationResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderItemsModificationResultDTO>(){}.getType();
    }
    
    if ("OrderLabelDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderLabelDTO>(){}.getType();
    }
    
    if ("OrderLiftType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderLiftType>(){}.getType();
    }
    
    if ("OrderParcelBoxDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderParcelBoxDTO>(){}.getType();
    }
    
    if ("OrderPaymentMethodType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderPaymentMethodType>(){}.getType();
    }
    
    if ("OrderPaymentType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderPaymentType>(){}.getType();
    }
    
    if ("OrderPromoType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderPromoType>(){}.getType();
    }
    
    if ("OrderShipmentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderShipmentDTO>(){}.getType();
    }
    
    if ("OrderStateDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderStateDTO>(){}.getType();
    }
    
    if ("OrderStatsStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderStatsStatusType>(){}.getType();
    }
    
    if ("OrderStatusChangeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderStatusChangeDTO>(){}.getType();
    }
    
    if ("OrderStatusChangeDeliveryDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderStatusChangeDeliveryDTO>(){}.getType();
    }
    
    if ("OrderStatusChangeDeliveryDatesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderStatusChangeDeliveryDatesDTO>(){}.getType();
    }
    
    if ("OrderStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderStatusType>(){}.getType();
    }
    
    if ("OrderSubsidyDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderSubsidyDTO>(){}.getType();
    }
    
    if ("OrderSubsidyType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderSubsidyType>(){}.getType();
    }
    
    if ("OrderSubstatusType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderSubstatusType>(){}.getType();
    }
    
    if ("OrderTaxSystemType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderTaxSystemType>(){}.getType();
    }
    
    if ("OrderTrackDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrderTrackDTO>(){}.getType();
    }
    
    if ("OrderUpdateStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderUpdateStatusType>(){}.getType();
    }
    
    if ("OrderVatType".equalsIgnoreCase(className)) {
      return new TypeToken<OrderVatType>(){}.getType();
    }
    
    if ("OrdersShipmentInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersShipmentInfoDTO>(){}.getType();
    }
    
    if ("OrdersStatsCommissionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersStatsCommissionDTO>(){}.getType();
    }
    
    if ("OrdersStatsCommissionType".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersStatsCommissionType>(){}.getType();
    }
    
    if ("OrdersStatsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersStatsDTO>(){}.getType();
    }
    
    if ("OrdersStatsDeliveryRegionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersStatsDeliveryRegionDTO>(){}.getType();
    }
    
    if ("OrdersStatsDetailsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersStatsDetailsDTO>(){}.getType();
    }
    
    if ("OrdersStatsItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersStatsItemDTO>(){}.getType();
    }
    
    if ("OrdersStatsItemStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersStatsItemStatusType>(){}.getType();
    }
    
    if ("OrdersStatsOrderDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersStatsOrderDTO>(){}.getType();
    }
    
    if ("OrdersStatsOrderPaymentType".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersStatsOrderPaymentType>(){}.getType();
    }
    
    if ("OrdersStatsPaymentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersStatsPaymentDTO>(){}.getType();
    }
    
    if ("OrdersStatsPaymentOrderDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersStatsPaymentOrderDTO>(){}.getType();
    }
    
    if ("OrdersStatsPaymentSourceType".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersStatsPaymentSourceType>(){}.getType();
    }
    
    if ("OrdersStatsPaymentType".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersStatsPaymentType>(){}.getType();
    }
    
    if ("OrdersStatsPriceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersStatsPriceDTO>(){}.getType();
    }
    
    if ("OrdersStatsPriceType".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersStatsPriceType>(){}.getType();
    }
    
    if ("OrdersStatsStockType".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersStatsStockType>(){}.getType();
    }
    
    if ("OrdersStatsWarehouseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OrdersStatsWarehouseDTO>(){}.getType();
    }
    
    if ("OutletAddressDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OutletAddressDTO>(){}.getType();
    }
    
    if ("OutletDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OutletDTO>(){}.getType();
    }
    
    if ("OutletDeliveryRuleDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OutletDeliveryRuleDTO>(){}.getType();
    }
    
    if ("OutletLicenseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OutletLicenseDTO>(){}.getType();
    }
    
    if ("OutletLicensesResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OutletLicensesResponseDTO>(){}.getType();
    }
    
    if ("OutletResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OutletResponseDTO>(){}.getType();
    }
    
    if ("OutletStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<OutletStatusType>(){}.getType();
    }
    
    if ("OutletType".equalsIgnoreCase(className)) {
      return new TypeToken<OutletType>(){}.getType();
    }
    
    if ("OutletVisibilityType".equalsIgnoreCase(className)) {
      return new TypeToken<OutletVisibilityType>(){}.getType();
    }
    
    if ("OutletWorkingScheduleDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OutletWorkingScheduleDTO>(){}.getType();
    }
    
    if ("OutletWorkingScheduleItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<OutletWorkingScheduleItemDTO>(){}.getType();
    }
    
    if ("PageFormatType".equalsIgnoreCase(className)) {
      return new TypeToken<PageFormatType>(){}.getType();
    }
    
    if ("PagedReturnsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PagedReturnsDTO>(){}.getType();
    }
    
    if ("PalletsCountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PalletsCountDTO>(){}.getType();
    }
    
    if ("ParameterType".equalsIgnoreCase(className)) {
      return new TypeToken<ParameterType>(){}.getType();
    }
    
    if ("ParameterValueConstraintsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ParameterValueConstraintsDTO>(){}.getType();
    }
    
    if ("ParameterValueDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ParameterValueDTO>(){}.getType();
    }
    
    if ("ParameterValueOptionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ParameterValueOptionDTO>(){}.getType();
    }
    
    if ("ParcelBoxDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ParcelBoxDTO>(){}.getType();
    }
    
    if ("ParcelBoxLabelDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ParcelBoxLabelDTO>(){}.getType();
    }
    
    if ("ParcelDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ParcelDTO>(){}.getType();
    }
    
    if ("PartnerShipmentWarehouseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PartnerShipmentWarehouseDTO>(){}.getType();
    }
    
    if ("PaymentFrequencyType".equalsIgnoreCase(className)) {
      return new TypeToken<PaymentFrequencyType>(){}.getType();
    }
    
    if ("PickupAddressDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PickupAddressDTO>(){}.getType();
    }
    
    if ("PlacementType".equalsIgnoreCase(className)) {
      return new TypeToken<PlacementType>(){}.getType();
    }
    
    if ("PriceCompetitivenessThresholdsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PriceCompetitivenessThresholdsDTO>(){}.getType();
    }
    
    if ("PriceCompetitivenessType".equalsIgnoreCase(className)) {
      return new TypeToken<PriceCompetitivenessType>(){}.getType();
    }
    
    if ("PriceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PriceDTO>(){}.getType();
    }
    
    if ("PriceQuarantineVerdictDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PriceQuarantineVerdictDTO>(){}.getType();
    }
    
    if ("PriceQuarantineVerdictParamNameType".equalsIgnoreCase(className)) {
      return new TypeToken<PriceQuarantineVerdictParamNameType>(){}.getType();
    }
    
    if ("PriceQuarantineVerdictParameterDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PriceQuarantineVerdictParameterDTO>(){}.getType();
    }
    
    if ("PriceQuarantineVerdictType".equalsIgnoreCase(className)) {
      return new TypeToken<PriceQuarantineVerdictType>(){}.getType();
    }
    
    if ("PriceRecommendationItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PriceRecommendationItemDTO>(){}.getType();
    }
    
    if ("PriceSuggestDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PriceSuggestDTO>(){}.getType();
    }
    
    if ("PriceSuggestOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PriceSuggestOfferDTO>(){}.getType();
    }
    
    if ("PriceSuggestType".equalsIgnoreCase(className)) {
      return new TypeToken<PriceSuggestType>(){}.getType();
    }
    
    if ("PromoOfferAutoParticipatingDetailsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PromoOfferAutoParticipatingDetailsDTO>(){}.getType();
    }
    
    if ("PromoOfferDiscountParamsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PromoOfferDiscountParamsDTO>(){}.getType();
    }
    
    if ("PromoOfferParamsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PromoOfferParamsDTO>(){}.getType();
    }
    
    if ("PromoOfferParticipationStatusFilterType".equalsIgnoreCase(className)) {
      return new TypeToken<PromoOfferParticipationStatusFilterType>(){}.getType();
    }
    
    if ("PromoOfferParticipationStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<PromoOfferParticipationStatusType>(){}.getType();
    }
    
    if ("PromoOfferPromocodeParamsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PromoOfferPromocodeParamsDTO>(){}.getType();
    }
    
    if ("PromoOfferUpdateWarningCodeType".equalsIgnoreCase(className)) {
      return new TypeToken<PromoOfferUpdateWarningCodeType>(){}.getType();
    }
    
    if ("PromoOfferUpdateWarningDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PromoOfferUpdateWarningDTO>(){}.getType();
    }
    
    if ("PromoParticipationType".equalsIgnoreCase(className)) {
      return new TypeToken<PromoParticipationType>(){}.getType();
    }
    
    if ("PromoPeriodDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PromoPeriodDTO>(){}.getType();
    }
    
    if ("ProvideOrderDigitalCodesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<ProvideOrderDigitalCodesRequest>(){}.getType();
    }
    
    if ("ProvideOrderItemIdentifiersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<ProvideOrderItemIdentifiersRequest>(){}.getType();
    }
    
    if ("ProvideOrderItemIdentifiersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ProvideOrderItemIdentifiersResponse>(){}.getType();
    }
    
    if ("PutSkuBidsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<PutSkuBidsRequest>(){}.getType();
    }
    
    if ("QualityRatingAffectedOrderDTO".equalsIgnoreCase(className)) {
      return new TypeToken<QualityRatingAffectedOrderDTO>(){}.getType();
    }
    
    if ("QualityRatingComponentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<QualityRatingComponentDTO>(){}.getType();
    }
    
    if ("QualityRatingComponentType".equalsIgnoreCase(className)) {
      return new TypeToken<QualityRatingComponentType>(){}.getType();
    }
    
    if ("QualityRatingDTO".equalsIgnoreCase(className)) {
      return new TypeToken<QualityRatingDTO>(){}.getType();
    }
    
    if ("QualityRatingDetailsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<QualityRatingDetailsDTO>(){}.getType();
    }
    
    if ("QuantumDTO".equalsIgnoreCase(className)) {
      return new TypeToken<QuantumDTO>(){}.getType();
    }
    
    if ("QuarantineOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<QuarantineOfferDTO>(){}.getType();
    }
    
    if ("RecipientType".equalsIgnoreCase(className)) {
      return new TypeToken<RecipientType>(){}.getType();
    }
    
    if ("RefundStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<RefundStatusType>(){}.getType();
    }
    
    if ("RegionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<RegionDTO>(){}.getType();
    }
    
    if ("RegionType".equalsIgnoreCase(className)) {
      return new TypeToken<RegionType>(){}.getType();
    }
    
    if ("RegionalModelInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<RegionalModelInfoDTO>(){}.getType();
    }
    
    if ("RejectedPromoOfferDeleteDTO".equalsIgnoreCase(className)) {
      return new TypeToken<RejectedPromoOfferDeleteDTO>(){}.getType();
    }
    
    if ("RejectedPromoOfferDeleteReasonType".equalsIgnoreCase(className)) {
      return new TypeToken<RejectedPromoOfferDeleteReasonType>(){}.getType();
    }
    
    if ("RejectedPromoOfferUpdateDTO".equalsIgnoreCase(className)) {
      return new TypeToken<RejectedPromoOfferUpdateDTO>(){}.getType();
    }
    
    if ("RejectedPromoOfferUpdateReasonType".equalsIgnoreCase(className)) {
      return new TypeToken<RejectedPromoOfferUpdateReasonType>(){}.getType();
    }
    
    if ("ReportFormatType".equalsIgnoreCase(className)) {
      return new TypeToken<ReportFormatType>(){}.getType();
    }
    
    if ("ReportInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ReportInfoDTO>(){}.getType();
    }
    
    if ("ReportStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<ReportStatusType>(){}.getType();
    }
    
    if ("ReportSubStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<ReportSubStatusType>(){}.getType();
    }
    
    if ("ReturnDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnDTO>(){}.getType();
    }
    
    if ("ReturnDecisionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnDecisionDTO>(){}.getType();
    }
    
    if ("ReturnDecisionReasonType".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnDecisionReasonType>(){}.getType();
    }
    
    if ("ReturnDecisionSubreasonType".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnDecisionSubreasonType>(){}.getType();
    }
    
    if ("ReturnDecisionType".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnDecisionType>(){}.getType();
    }
    
    if ("ReturnInstanceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnInstanceDTO>(){}.getType();
    }
    
    if ("ReturnInstanceStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnInstanceStatusType>(){}.getType();
    }
    
    if ("ReturnInstanceStockType".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnInstanceStockType>(){}.getType();
    }
    
    if ("ReturnItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnItemDTO>(){}.getType();
    }
    
    if ("ReturnRequestDecisionType".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnRequestDecisionType>(){}.getType();
    }
    
    if ("ReturnShipmentStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnShipmentStatusType>(){}.getType();
    }
    
    if ("ReturnType".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnType>(){}.getType();
    }
    
    if ("ScrollingPagerDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ScrollingPagerDTO>(){}.getType();
    }
    
    if ("SearchModelsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<SearchModelsResponse>(){}.getType();
    }
    
    if ("SearchShipmentsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SearchShipmentsRequest>(){}.getType();
    }
    
    if ("SearchShipmentsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<SearchShipmentsResponse>(){}.getType();
    }
    
    if ("SearchShipmentsResponseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SearchShipmentsResponseDTO>(){}.getType();
    }
    
    if ("SellingProgramType".equalsIgnoreCase(className)) {
      return new TypeToken<SellingProgramType>(){}.getType();
    }
    
    if ("SendMessageToChatRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SendMessageToChatRequest>(){}.getType();
    }
    
    if ("SetFeedParamsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SetFeedParamsRequest>(){}.getType();
    }
    
    if ("SetOrderBoxLayoutRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SetOrderBoxLayoutRequest>(){}.getType();
    }
    
    if ("SetOrderBoxLayoutResponse".equalsIgnoreCase(className)) {
      return new TypeToken<SetOrderBoxLayoutResponse>(){}.getType();
    }
    
    if ("SetOrderDeliveryDateRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SetOrderDeliveryDateRequest>(){}.getType();
    }
    
    if ("SetOrderDeliveryTrackCodeRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SetOrderDeliveryTrackCodeRequest>(){}.getType();
    }
    
    if ("SetOrderShipmentBoxesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SetOrderShipmentBoxesRequest>(){}.getType();
    }
    
    if ("SetOrderShipmentBoxesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<SetOrderShipmentBoxesResponse>(){}.getType();
    }
    
    if ("SetReturnDecisionRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SetReturnDecisionRequest>(){}.getType();
    }
    
    if ("SetShipmentPalletsCountRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SetShipmentPalletsCountRequest>(){}.getType();
    }
    
    if ("ShelfsStatisticsAttributionType".equalsIgnoreCase(className)) {
      return new TypeToken<ShelfsStatisticsAttributionType>(){}.getType();
    }
    
    if ("ShipmentActionType".equalsIgnoreCase(className)) {
      return new TypeToken<ShipmentActionType>(){}.getType();
    }
    
    if ("ShipmentBoxesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ShipmentBoxesDTO>(){}.getType();
    }
    
    if ("ShipmentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ShipmentDTO>(){}.getType();
    }
    
    if ("ShipmentInfoDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ShipmentInfoDTO>(){}.getType();
    }
    
    if ("ShipmentPalletLabelPageFormatType".equalsIgnoreCase(className)) {
      return new TypeToken<ShipmentPalletLabelPageFormatType>(){}.getType();
    }
    
    if ("ShipmentStatusChangeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ShipmentStatusChangeDTO>(){}.getType();
    }
    
    if ("ShipmentStatusType".equalsIgnoreCase(className)) {
      return new TypeToken<ShipmentStatusType>(){}.getType();
    }
    
    if ("ShipmentType".equalsIgnoreCase(className)) {
      return new TypeToken<ShipmentType>(){}.getType();
    }
    
    if ("ShowsSalesGroupingType".equalsIgnoreCase(className)) {
      return new TypeToken<ShowsSalesGroupingType>(){}.getType();
    }
    
    if ("SkipGoodsFeedbackReactionRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SkipGoodsFeedbackReactionRequest>(){}.getType();
    }
    
    if ("SkuBidItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SkuBidItemDTO>(){}.getType();
    }
    
    if ("SkuBidRecommendationItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SkuBidRecommendationItemDTO>(){}.getType();
    }
    
    if ("SortOrderType".equalsIgnoreCase(className)) {
      return new TypeToken<SortOrderType>(){}.getType();
    }
    
    if ("SuggestOfferPriceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SuggestOfferPriceDTO>(){}.getType();
    }
    
    if ("SuggestPricesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<SuggestPricesRequest>(){}.getType();
    }
    
    if ("SuggestPricesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<SuggestPricesResponse>(){}.getType();
    }
    
    if ("SuggestPricesResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SuggestPricesResultDTO>(){}.getType();
    }
    
    if ("SuggestedOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SuggestedOfferDTO>(){}.getType();
    }
    
    if ("SuggestedOfferMappingDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SuggestedOfferMappingDTO>(){}.getType();
    }
    
    if ("TariffDTO".equalsIgnoreCase(className)) {
      return new TypeToken<TariffDTO>(){}.getType();
    }
    
    if ("TariffParameterDTO".equalsIgnoreCase(className)) {
      return new TypeToken<TariffParameterDTO>(){}.getType();
    }
    
    if ("TariffType".equalsIgnoreCase(className)) {
      return new TypeToken<TariffType>(){}.getType();
    }
    
    if ("TimePeriodDTO".equalsIgnoreCase(className)) {
      return new TypeToken<TimePeriodDTO>(){}.getType();
    }
    
    if ("TimeUnitType".equalsIgnoreCase(className)) {
      return new TypeToken<TimeUnitType>(){}.getType();
    }
    
    if ("TrackDTO".equalsIgnoreCase(className)) {
      return new TypeToken<TrackDTO>(){}.getType();
    }
    
    if ("TransferOrdersFromShipmentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<TransferOrdersFromShipmentRequest>(){}.getType();
    }
    
    if ("TurnoverDTO".equalsIgnoreCase(className)) {
      return new TypeToken<TurnoverDTO>(){}.getType();
    }
    
    if ("TurnoverType".equalsIgnoreCase(className)) {
      return new TypeToken<TurnoverType>(){}.getType();
    }
    
    if ("UnitDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UnitDTO>(){}.getType();
    }
    
    if ("UpdateBusinessOfferPriceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateBusinessOfferPriceDTO>(){}.getType();
    }
    
    if ("UpdateBusinessPricesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateBusinessPricesRequest>(){}.getType();
    }
    
    if ("UpdateCampaignOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateCampaignOfferDTO>(){}.getType();
    }
    
    if ("UpdateCampaignOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateCampaignOffersRequest>(){}.getType();
    }
    
    if ("UpdateGoodsFeedbackCommentDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateGoodsFeedbackCommentDTO>(){}.getType();
    }
    
    if ("UpdateGoodsFeedbackCommentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateGoodsFeedbackCommentRequest>(){}.getType();
    }
    
    if ("UpdateGoodsFeedbackCommentResponse".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateGoodsFeedbackCommentResponse>(){}.getType();
    }
    
    if ("UpdateMappingDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateMappingDTO>(){}.getType();
    }
    
    if ("UpdateMappingsOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateMappingsOfferDTO>(){}.getType();
    }
    
    if ("UpdateOfferContentRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOfferContentRequest>(){}.getType();
    }
    
    if ("UpdateOfferContentResponse".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOfferContentResponse>(){}.getType();
    }
    
    if ("UpdateOfferContentResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOfferContentResultDTO>(){}.getType();
    }
    
    if ("UpdateOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOfferDTO>(){}.getType();
    }
    
    if ("UpdateOfferMappingDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOfferMappingDTO>(){}.getType();
    }
    
    if ("UpdateOfferMappingEntryDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOfferMappingEntryDTO>(){}.getType();
    }
    
    if ("UpdateOfferMappingEntryRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOfferMappingEntryRequest>(){}.getType();
    }
    
    if ("UpdateOfferMappingResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOfferMappingResultDTO>(){}.getType();
    }
    
    if ("UpdateOfferMappingsRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOfferMappingsRequest>(){}.getType();
    }
    
    if ("UpdateOfferMappingsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOfferMappingsResponse>(){}.getType();
    }
    
    if ("UpdateOrderItemRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOrderItemRequest>(){}.getType();
    }
    
    if ("UpdateOrderStatusDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOrderStatusDTO>(){}.getType();
    }
    
    if ("UpdateOrderStatusRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOrderStatusRequest>(){}.getType();
    }
    
    if ("UpdateOrderStatusResponse".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOrderStatusResponse>(){}.getType();
    }
    
    if ("UpdateOrderStatusesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOrderStatusesDTO>(){}.getType();
    }
    
    if ("UpdateOrderStatusesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOrderStatusesRequest>(){}.getType();
    }
    
    if ("UpdateOrderStatusesResponse".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOrderStatusesResponse>(){}.getType();
    }
    
    if ("UpdateOrderStorageLimitRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOrderStorageLimitRequest>(){}.getType();
    }
    
    if ("UpdateOutletLicenseRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateOutletLicenseRequest>(){}.getType();
    }
    
    if ("UpdatePriceWithDiscountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdatePriceWithDiscountDTO>(){}.getType();
    }
    
    if ("UpdatePricesRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdatePricesRequest>(){}.getType();
    }
    
    if ("UpdatePromoOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdatePromoOfferDTO>(){}.getType();
    }
    
    if ("UpdatePromoOfferDiscountParamsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdatePromoOfferDiscountParamsDTO>(){}.getType();
    }
    
    if ("UpdatePromoOfferParamsDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdatePromoOfferParamsDTO>(){}.getType();
    }
    
    if ("UpdatePromoOffersRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdatePromoOffersRequest>(){}.getType();
    }
    
    if ("UpdatePromoOffersResponse".equalsIgnoreCase(className)) {
      return new TypeToken<UpdatePromoOffersResponse>(){}.getType();
    }
    
    if ("UpdatePromoOffersResultDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdatePromoOffersResultDTO>(){}.getType();
    }
    
    if ("UpdateStockDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateStockDTO>(){}.getType();
    }
    
    if ("UpdateStockItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateStockItemDTO>(){}.getType();
    }
    
    if ("UpdateStocksRequest".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateStocksRequest>(){}.getType();
    }
    
    if ("UpdateTimeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UpdateTimeDTO>(){}.getType();
    }
    
    if ("ValueRestrictionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<ValueRestrictionDTO>(){}.getType();
    }
    
    if ("VerifyOrderEacRequest".equalsIgnoreCase(className)) {
      return new TypeToken<VerifyOrderEacRequest>(){}.getType();
    }
    
    if ("VerifyOrderEacResponse".equalsIgnoreCase(className)) {
      return new TypeToken<VerifyOrderEacResponse>(){}.getType();
    }
    
    if ("WarehouseAddressDTO".equalsIgnoreCase(className)) {
      return new TypeToken<WarehouseAddressDTO>(){}.getType();
    }
    
    if ("WarehouseDTO".equalsIgnoreCase(className)) {
      return new TypeToken<WarehouseDTO>(){}.getType();
    }
    
    if ("WarehouseGroupDTO".equalsIgnoreCase(className)) {
      return new TypeToken<WarehouseGroupDTO>(){}.getType();
    }
    
    if ("WarehouseOfferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<WarehouseOfferDTO>(){}.getType();
    }
    
    if ("WarehouseOffersDTO".equalsIgnoreCase(className)) {
      return new TypeToken<WarehouseOffersDTO>(){}.getType();
    }
    
    if ("WarehouseStockDTO".equalsIgnoreCase(className)) {
      return new TypeToken<WarehouseStockDTO>(){}.getType();
    }
    
    if ("WarehouseStockType".equalsIgnoreCase(className)) {
      return new TypeToken<WarehouseStockType>(){}.getType();
    }
    
    if ("WarehousesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<WarehousesDTO>(){}.getType();
    }
    
    if ("WarningPromoOfferUpdateDTO".equalsIgnoreCase(className)) {
      return new TypeToken<WarningPromoOfferUpdateDTO>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
