/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.OrderBuyerType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о покупателе.  Параметры &#x60;id&#x60;, &#x60;lastName&#x60;, &#x60;firstName&#x60; и &#x60;middleName&#x60; возвращаются, только если вы работаете по модели DBS. 
 **/
@ApiModel(description = "Информация о покупателе.  Параметры `id`, `lastName`, `firstName` и `middleName` возвращаются, только если вы работаете по модели DBS. ")
public class OrderBuyerDTO {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("lastName")
  private String lastName = null;
  @SerializedName("firstName")
  private String firstName = null;
  @SerializedName("middleName")
  private String middleName = null;
  @SerializedName("type")
  private OrderBuyerType type = null;

  /**
   * Идентификатор покупателя.
   **/
  @ApiModelProperty(value = "Идентификатор покупателя.")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Фамилия покупателя.
   **/
  @ApiModelProperty(value = "Фамилия покупателя.")
  public String getLastName() {
    return lastName;
  }
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  /**
   * Имя покупателя.
   **/
  @ApiModelProperty(value = "Имя покупателя.")
  public String getFirstName() {
    return firstName;
  }
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  /**
   * Отчество покупателя.
   **/
  @ApiModelProperty(value = "Отчество покупателя.")
  public String getMiddleName() {
    return middleName;
  }
  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OrderBuyerType getType() {
    return type;
  }
  public void setType(OrderBuyerType type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderBuyerDTO orderBuyerDTO = (OrderBuyerDTO) o;
    return (this.id == null ? orderBuyerDTO.id == null : this.id.equals(orderBuyerDTO.id)) &&
        (this.lastName == null ? orderBuyerDTO.lastName == null : this.lastName.equals(orderBuyerDTO.lastName)) &&
        (this.firstName == null ? orderBuyerDTO.firstName == null : this.firstName.equals(orderBuyerDTO.firstName)) &&
        (this.middleName == null ? orderBuyerDTO.middleName == null : this.middleName.equals(orderBuyerDTO.middleName)) &&
        (this.type == null ? orderBuyerDTO.type == null : this.type.equals(orderBuyerDTO.type));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.lastName == null ? 0: this.lastName.hashCode());
    result = 31 * result + (this.firstName == null ? 0: this.firstName.hashCode());
    result = 31 * result + (this.middleName == null ? 0: this.middleName.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderBuyerDTO {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  lastName: ").append(lastName).append("\n");
    sb.append("  firstName: ").append(firstName).append("\n");
    sb.append("  middleName: ").append(middleName).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
