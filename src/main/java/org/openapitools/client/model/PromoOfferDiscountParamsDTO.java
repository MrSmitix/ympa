/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Параметры товара в акции с типом &#x60;DIRECT_DISCOUNT&#x60; или &#x60;BLUE_FLASH&#x60;.
 **/
@ApiModel(description = "Параметры товара в акции с типом `DIRECT_DISCOUNT` или `BLUE_FLASH`.")
public class PromoOfferDiscountParamsDTO {
  
  @SerializedName("price")
  private Long price = null;
  @SerializedName("promoPrice")
  private Long promoPrice = null;
  @SerializedName("maxPromoPrice")
  private Long maxPromoPrice = null;

  /**
   * Зачеркнутая цена — та, по которой товар продавался до акции.  Указывается в рублях.  Возвращается, только если товар участвует в акции. 
   **/
  @ApiModelProperty(value = "Зачеркнутая цена — та, по которой товар продавался до акции.  Указывается в рублях.  Возвращается, только если товар участвует в акции. ")
  public Long getPrice() {
    return price;
  }
  public void setPrice(Long price) {
    this.price = price;
  }

  /**
   * Цена по акции — та, по которой вы хотите продавать товар.  Указывается в рублях.  Возвращается, только если товар участвует в акции. 
   **/
  @ApiModelProperty(value = "Цена по акции — та, по которой вы хотите продавать товар.  Указывается в рублях.  Возвращается, только если товар участвует в акции. ")
  public Long getPromoPrice() {
    return promoPrice;
  }
  public void setPromoPrice(Long promoPrice) {
    this.promoPrice = promoPrice;
  }

  /**
   * Максимально возможная цена для участия в акции.  Указывается в рублях.  Возвращается для всех товаров. 
   **/
  @ApiModelProperty(required = true, value = "Максимально возможная цена для участия в акции.  Указывается в рублях.  Возвращается для всех товаров. ")
  public Long getMaxPromoPrice() {
    return maxPromoPrice;
  }
  public void setMaxPromoPrice(Long maxPromoPrice) {
    this.maxPromoPrice = maxPromoPrice;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PromoOfferDiscountParamsDTO promoOfferDiscountParamsDTO = (PromoOfferDiscountParamsDTO) o;
    return (this.price == null ? promoOfferDiscountParamsDTO.price == null : this.price.equals(promoOfferDiscountParamsDTO.price)) &&
        (this.promoPrice == null ? promoOfferDiscountParamsDTO.promoPrice == null : this.promoPrice.equals(promoOfferDiscountParamsDTO.promoPrice)) &&
        (this.maxPromoPrice == null ? promoOfferDiscountParamsDTO.maxPromoPrice == null : this.maxPromoPrice.equals(promoOfferDiscountParamsDTO.maxPromoPrice));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.price == null ? 0: this.price.hashCode());
    result = 31 * result + (this.promoPrice == null ? 0: this.promoPrice.hashCode());
    result = 31 * result + (this.maxPromoPrice == null ? 0: this.maxPromoPrice.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PromoOfferDiscountParamsDTO {\n");
    
    sb.append("  price: ").append(price).append("\n");
    sb.append("  promoPrice: ").append(promoPrice).append("\n");
    sb.append("  maxPromoPrice: ").append(maxPromoPrice).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
