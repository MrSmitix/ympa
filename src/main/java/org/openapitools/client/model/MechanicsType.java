/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Тип акции:  * &#x60;DIRECT_DISCOUNT&#x60; — прямая скидка.  * &#x60;BLUE_FLASH&#x60; — флеш-акция.  * &#x60;MARKET_PROMOCODE&#x60; — скидка по промокоду. 
 */
@JsonAdapter(MechanicsType.Adapter.class)
public enum MechanicsType {
  
  DIRECT_DISCOUNT("DIRECT_DISCOUNT"),
  
  BLUE_FLASH("BLUE_FLASH"),
  
  MARKET_PROMOCODE("MARKET_PROMOCODE");

  private String value;

  MechanicsType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static MechanicsType fromValue(String value) {
    for (MechanicsType b : MechanicsType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<MechanicsType> {
    @Override
    public void write(final JsonWriter jsonWriter, final MechanicsType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public MechanicsType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return MechanicsType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    MechanicsType.fromValue(value);
  }
}

