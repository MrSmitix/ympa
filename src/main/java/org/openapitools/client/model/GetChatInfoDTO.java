/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import org.openapitools.client.model.ChatStatusType;
import org.openapitools.client.model.ChatType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о чатах.
 **/
@ApiModel(description = "Информация о чатах.")
public class GetChatInfoDTO {
  
  @SerializedName("chatId")
  private Long chatId = null;
  @SerializedName("orderId")
  private Long orderId = null;
  @SerializedName("type")
  private ChatType type = null;
  @SerializedName("status")
  private ChatStatusType status = null;
  @SerializedName("createdAt")
  private Date createdAt = null;
  @SerializedName("updatedAt")
  private Date updatedAt = null;

  /**
   * Идентификатор чата.
   **/
  @ApiModelProperty(required = true, value = "Идентификатор чата.")
  public Long getChatId() {
    return chatId;
  }
  public void setChatId(Long chatId) {
    this.chatId = chatId;
  }

  /**
   * Идентификатор заказа.
   **/
  @ApiModelProperty(required = true, value = "Идентификатор заказа.")
  public Long getOrderId() {
    return orderId;
  }
  public void setOrderId(Long orderId) {
    this.orderId = orderId;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public ChatType getType() {
    return type;
  }
  public void setType(ChatType type) {
    this.type = type;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public ChatStatusType getStatus() {
    return status;
  }
  public void setStatus(ChatStatusType status) {
    this.status = status;
  }

  /**
   * Дата и время создания чата.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`. 
   **/
  @ApiModelProperty(required = true, value = "Дата и время создания чата.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`. ")
  public Date getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  /**
   * Дата и время последнего сообщения в чате.
   **/
  @ApiModelProperty(required = true, value = "Дата и время последнего сообщения в чате.")
  public Date getUpdatedAt() {
    return updatedAt;
  }
  public void setUpdatedAt(Date updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetChatInfoDTO getChatInfoDTO = (GetChatInfoDTO) o;
    return (this.chatId == null ? getChatInfoDTO.chatId == null : this.chatId.equals(getChatInfoDTO.chatId)) &&
        (this.orderId == null ? getChatInfoDTO.orderId == null : this.orderId.equals(getChatInfoDTO.orderId)) &&
        (this.type == null ? getChatInfoDTO.type == null : this.type.equals(getChatInfoDTO.type)) &&
        (this.status == null ? getChatInfoDTO.status == null : this.status.equals(getChatInfoDTO.status)) &&
        (this.createdAt == null ? getChatInfoDTO.createdAt == null : this.createdAt.equals(getChatInfoDTO.createdAt)) &&
        (this.updatedAt == null ? getChatInfoDTO.updatedAt == null : this.updatedAt.equals(getChatInfoDTO.updatedAt));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.chatId == null ? 0: this.chatId.hashCode());
    result = 31 * result + (this.orderId == null ? 0: this.orderId.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    result = 31 * result + (this.createdAt == null ? 0: this.createdAt.hashCode());
    result = 31 * result + (this.updatedAt == null ? 0: this.updatedAt.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetChatInfoDTO {\n");
    
    sb.append("  chatId: ").append(chatId).append("\n");
    sb.append("  orderId: ").append(orderId).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  status: ").append(status).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  updatedAt: ").append(updatedAt).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
