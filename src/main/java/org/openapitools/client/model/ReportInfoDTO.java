/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import org.openapitools.client.model.ReportStatusType;
import org.openapitools.client.model.ReportSubStatusType;



/**
  * Статус генерации и ссылка на готовый отчет.
 **/

public class ReportInfoDTO  {
  
  private ReportStatusType status;

  private ReportSubStatusType subStatus;

 /**
   * Дата и время запроса на генерацию.
  **/
  private OffsetDateTime generationRequestedAt;

 /**
   * Дата и время завершения генерации.
  **/
  private OffsetDateTime generationFinishedAt;

 /**
   * Ссылка на готовый отчет.
  **/
  private String _file;

 /**
   * Ожидаемая продолжительность генерации в миллисекундах.
  **/
  private Long estimatedGenerationTime;

 /**
   * Get status
   * @return status
  **/
  public ReportStatusType getStatus() {
    return status;
  }

  /**
    * Set status
  **/
  public void setStatus(ReportStatusType status) {
    this.status = status;
  }

  public ReportInfoDTO status(ReportStatusType status) {
    this.status = status;
    return this;
  }

 /**
   * Get subStatus
   * @return subStatus
  **/
  public ReportSubStatusType getSubStatus() {
    return subStatus;
  }

  /**
    * Set subStatus
  **/
  public void setSubStatus(ReportSubStatusType subStatus) {
    this.subStatus = subStatus;
  }

  public ReportInfoDTO subStatus(ReportSubStatusType subStatus) {
    this.subStatus = subStatus;
    return this;
  }

 /**
   * Дата и время запроса на генерацию.
   * @return generationRequestedAt
  **/
  public OffsetDateTime getGenerationRequestedAt() {
    return generationRequestedAt;
  }

  /**
    * Set generationRequestedAt
  **/
  public void setGenerationRequestedAt(OffsetDateTime generationRequestedAt) {
    this.generationRequestedAt = generationRequestedAt;
  }

  public ReportInfoDTO generationRequestedAt(OffsetDateTime generationRequestedAt) {
    this.generationRequestedAt = generationRequestedAt;
    return this;
  }

 /**
   * Дата и время завершения генерации.
   * @return generationFinishedAt
  **/
  public OffsetDateTime getGenerationFinishedAt() {
    return generationFinishedAt;
  }

  /**
    * Set generationFinishedAt
  **/
  public void setGenerationFinishedAt(OffsetDateTime generationFinishedAt) {
    this.generationFinishedAt = generationFinishedAt;
  }

  public ReportInfoDTO generationFinishedAt(OffsetDateTime generationFinishedAt) {
    this.generationFinishedAt = generationFinishedAt;
    return this;
  }

 /**
   * Ссылка на готовый отчет.
   * @return _file
  **/
  public String getFile() {
    return _file;
  }

  /**
    * Set _file
  **/
  public void setFile(String _file) {
    this._file = _file;
  }

  public ReportInfoDTO _file(String _file) {
    this._file = _file;
    return this;
  }

 /**
   * Ожидаемая продолжительность генерации в миллисекундах.
   * @return estimatedGenerationTime
  **/
  public Long getEstimatedGenerationTime() {
    return estimatedGenerationTime;
  }

  /**
    * Set estimatedGenerationTime
  **/
  public void setEstimatedGenerationTime(Long estimatedGenerationTime) {
    this.estimatedGenerationTime = estimatedGenerationTime;
  }

  public ReportInfoDTO estimatedGenerationTime(Long estimatedGenerationTime) {
    this.estimatedGenerationTime = estimatedGenerationTime;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportInfoDTO {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subStatus: ").append(toIndentedString(subStatus)).append("\n");
    sb.append("    generationRequestedAt: ").append(toIndentedString(generationRequestedAt)).append("\n");
    sb.append("    generationFinishedAt: ").append(toIndentedString(generationFinishedAt)).append("\n");
    sb.append("    _file: ").append(toIndentedString(_file)).append("\n");
    sb.append("    estimatedGenerationTime: ").append(toIndentedString(estimatedGenerationTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

