/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.FeedIndexLogsErrorType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация об ошибке, произошедшей во время индексации прайс-листа.  Выводится, если во время индексации произошли ошибки (&#x60;index-log-record status&#x3D;ERROR&#x60;). 
 **/
@ApiModel(description = "Информация об ошибке, произошедшей во время индексации прайс-листа.  Выводится, если во время индексации произошли ошибки (`index-log-record status=ERROR`). ")
public class FeedIndexLogsErrorDTO {
  
  @SerializedName("httpStatusCode")
  private Integer httpStatusCode = null;
  @SerializedName("type")
  private FeedIndexLogsErrorType type = null;
  @SerializedName("description")
  private String description = null;

  /**
   * HTTP-код ошибки индексации прайс-листа.  Выводится, если `type=DOWNLOAD_HTTP_ERROR`. 
   **/
  @ApiModelProperty(value = "HTTP-код ошибки индексации прайс-листа.  Выводится, если `type=DOWNLOAD_HTTP_ERROR`. ")
  public Integer getHttpStatusCode() {
    return httpStatusCode;
  }
  public void setHttpStatusCode(Integer httpStatusCode) {
    this.httpStatusCode = httpStatusCode;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public FeedIndexLogsErrorType getType() {
    return type;
  }
  public void setType(FeedIndexLogsErrorType type) {
    this.type = type;
  }

  /**
   * Описание ошибки.  Выводится, если `type=DOWNLOAD_ERROR`. 
   **/
  @ApiModelProperty(value = "Описание ошибки.  Выводится, если `type=DOWNLOAD_ERROR`. ")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeedIndexLogsErrorDTO feedIndexLogsErrorDTO = (FeedIndexLogsErrorDTO) o;
    return (this.httpStatusCode == null ? feedIndexLogsErrorDTO.httpStatusCode == null : this.httpStatusCode.equals(feedIndexLogsErrorDTO.httpStatusCode)) &&
        (this.type == null ? feedIndexLogsErrorDTO.type == null : this.type.equals(feedIndexLogsErrorDTO.type)) &&
        (this.description == null ? feedIndexLogsErrorDTO.description == null : this.description.equals(feedIndexLogsErrorDTO.description));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.httpStatusCode == null ? 0: this.httpStatusCode.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeedIndexLogsErrorDTO {\n");
    
    sb.append("  httpStatusCode: ").append(httpStatusCode).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
