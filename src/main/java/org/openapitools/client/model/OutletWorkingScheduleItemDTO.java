/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.DayOfWeekType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Расписание работы точки продаж.
 **/
@ApiModel(description = "Расписание работы точки продаж.")
public class OutletWorkingScheduleItemDTO {
  
  @SerializedName("startDay")
  private DayOfWeekType startDay = null;
  @SerializedName("endDay")
  private DayOfWeekType endDay = null;
  @SerializedName("startTime")
  private String startTime = null;
  @SerializedName("endTime")
  private String endTime = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public DayOfWeekType getStartDay() {
    return startDay;
  }
  public void setStartDay(DayOfWeekType startDay) {
    this.startDay = startDay;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public DayOfWeekType getEndDay() {
    return endDay;
  }
  public void setEndDay(DayOfWeekType endDay) {
    this.endDay = endDay;
  }

  /**
   * Точка продаж работает c указанного часа.  Формат: `ЧЧ:ММ`. 
   **/
  @ApiModelProperty(required = true, value = "Точка продаж работает c указанного часа.  Формат: `ЧЧ:ММ`. ")
  public String getStartTime() {
    return startTime;
  }
  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  /**
   * Точка продаж работает до указанного часа.  Формат: `ЧЧ:ММ`. 
   **/
  @ApiModelProperty(required = true, value = "Точка продаж работает до указанного часа.  Формат: `ЧЧ:ММ`. ")
  public String getEndTime() {
    return endTime;
  }
  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutletWorkingScheduleItemDTO outletWorkingScheduleItemDTO = (OutletWorkingScheduleItemDTO) o;
    return (this.startDay == null ? outletWorkingScheduleItemDTO.startDay == null : this.startDay.equals(outletWorkingScheduleItemDTO.startDay)) &&
        (this.endDay == null ? outletWorkingScheduleItemDTO.endDay == null : this.endDay.equals(outletWorkingScheduleItemDTO.endDay)) &&
        (this.startTime == null ? outletWorkingScheduleItemDTO.startTime == null : this.startTime.equals(outletWorkingScheduleItemDTO.startTime)) &&
        (this.endTime == null ? outletWorkingScheduleItemDTO.endTime == null : this.endTime.equals(outletWorkingScheduleItemDTO.endTime));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.startDay == null ? 0: this.startDay.hashCode());
    result = 31 * result + (this.endDay == null ? 0: this.endDay.hashCode());
    result = 31 * result + (this.startTime == null ? 0: this.startTime.hashCode());
    result = 31 * result + (this.endTime == null ? 0: this.endTime.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutletWorkingScheduleItemDTO {\n");
    
    sb.append("  startDay: ").append(startDay).append("\n");
    sb.append("  endDay: ").append(endDay).append("\n");
    sb.append("  startTime: ").append(startTime).append("\n");
    sb.append("  endTime: ").append(endTime).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
