/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import org.openapitools.client.model.PriceDTO;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация об установленной цене на товар.
 **/
@ApiModel(description = "Информация об установленной цене на товар.")
public class OfferPriceResponseDTO {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("price")
  private PriceDTO price = null;
  @SerializedName("marketSku")
  private Long marketSku = null;
  @SerializedName("updatedAt")
  private Date updatedAt = null;

  /**
   * Идентификатор предложения из прайс-листа.
   **/
  @ApiModelProperty(value = "Идентификатор предложения из прайс-листа.")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public PriceDTO getPrice() {
    return price;
  }
  public void setPrice(PriceDTO price) {
    this.price = price;
  }

  /**
   * SKU на Маркете.
   **/
  @ApiModelProperty(value = "SKU на Маркете.")
  public Long getMarketSku() {
    return marketSku;
  }
  public void setMarketSku(Long marketSku) {
    this.marketSku = marketSku;
  }

  /**
   * Дата и время последнего обновления цены на товар.
   **/
  @ApiModelProperty(value = "Дата и время последнего обновления цены на товар.")
  public Date getUpdatedAt() {
    return updatedAt;
  }
  public void setUpdatedAt(Date updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OfferPriceResponseDTO offerPriceResponseDTO = (OfferPriceResponseDTO) o;
    return (this.id == null ? offerPriceResponseDTO.id == null : this.id.equals(offerPriceResponseDTO.id)) &&
        (this.price == null ? offerPriceResponseDTO.price == null : this.price.equals(offerPriceResponseDTO.price)) &&
        (this.marketSku == null ? offerPriceResponseDTO.marketSku == null : this.marketSku.equals(offerPriceResponseDTO.marketSku)) &&
        (this.updatedAt == null ? offerPriceResponseDTO.updatedAt == null : this.updatedAt.equals(offerPriceResponseDTO.updatedAt));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.price == null ? 0: this.price.hashCode());
    result = 31 * result + (this.marketSku == null ? 0: this.marketSku.hashCode());
    result = 31 * result + (this.updatedAt == null ? 0: this.updatedAt.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OfferPriceResponseDTO {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  price: ").append(price).append("\n");
    sb.append("  marketSku: ").append(marketSku).append("\n");
    sb.append("  updatedAt: ").append(updatedAt).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
