/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.Date;
import org.openapitools.client.model.LogisticPickupPointDTO;
import org.openapitools.client.model.RecipientType;
import org.openapitools.client.model.RefundStatusType;
import org.openapitools.client.model.ReturnItemDTO;
import org.openapitools.client.model.ReturnShipmentStatusType;
import org.openapitools.client.model.ReturnType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Возврат заказа.
 **/
@ApiModel(description = "Возврат заказа.")
public class ReturnDTO {
  
  @SerializedName("id")
  private Long id = null;
  @SerializedName("orderId")
  private Long orderId = null;
  @SerializedName("creationDate")
  private Date creationDate = null;
  @SerializedName("updateDate")
  private Date updateDate = null;
  @SerializedName("refundStatus")
  private RefundStatusType refundStatus = null;
  @SerializedName("logisticPickupPoint")
  private LogisticPickupPointDTO logisticPickupPoint = null;
  @SerializedName("shipmentRecipientType")
  private RecipientType shipmentRecipientType = null;
  @SerializedName("shipmentStatus")
  private ReturnShipmentStatusType shipmentStatus = null;
  @SerializedName("refundAmount")
  private Long refundAmount = null;
  @SerializedName("items")
  private List<ReturnItemDTO> items = null;
  @SerializedName("returnType")
  private ReturnType returnType = null;
  @SerializedName("fastReturn")
  private Boolean fastReturn = null;

  /**
   * Идентификатор возврата.
   **/
  @ApiModelProperty(value = "Идентификатор возврата.")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   * Номер заказа.
   **/
  @ApiModelProperty(value = "Номер заказа.")
  public Long getOrderId() {
    return orderId;
  }
  public void setOrderId(Long orderId) {
    this.orderId = orderId;
  }

  /**
   * Дата создания возврата клиентом.
   **/
  @ApiModelProperty(value = "Дата создания возврата клиентом.")
  public Date getCreationDate() {
    return creationDate;
  }
  public void setCreationDate(Date creationDate) {
    this.creationDate = creationDate;
  }

  /**
   * Дата обновления возврата.
   **/
  @ApiModelProperty(value = "Дата обновления возврата.")
  public Date getUpdateDate() {
    return updateDate;
  }
  public void setUpdateDate(Date updateDate) {
    this.updateDate = updateDate;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public RefundStatusType getRefundStatus() {
    return refundStatus;
  }
  public void setRefundStatus(RefundStatusType refundStatus) {
    this.refundStatus = refundStatus;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public LogisticPickupPointDTO getLogisticPickupPoint() {
    return logisticPickupPoint;
  }
  public void setLogisticPickupPoint(LogisticPickupPointDTO logisticPickupPoint) {
    this.logisticPickupPoint = logisticPickupPoint;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public RecipientType getShipmentRecipientType() {
    return shipmentRecipientType;
  }
  public void setShipmentRecipientType(RecipientType shipmentRecipientType) {
    this.shipmentRecipientType = shipmentRecipientType;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ReturnShipmentStatusType getShipmentStatus() {
    return shipmentStatus;
  }
  public void setShipmentStatus(ReturnShipmentStatusType shipmentStatus) {
    this.shipmentStatus = shipmentStatus;
  }

  /**
   * Сумма возврата.
   **/
  @ApiModelProperty(value = "Сумма возврата.")
  public Long getRefundAmount() {
    return refundAmount;
  }
  public void setRefundAmount(Long refundAmount) {
    this.refundAmount = refundAmount;
  }

  /**
   * Список товаров в возврате.
   **/
  @ApiModelProperty(required = true, value = "Список товаров в возврате.")
  public List<ReturnItemDTO> getItems() {
    return items;
  }
  public void setItems(List<ReturnItemDTO> items) {
    this.items = items;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ReturnType getReturnType() {
    return returnType;
  }
  public void setReturnType(ReturnType returnType) {
    this.returnType = returnType;
  }

  /**
   * Используется ли опция **Быстрый возврат денег за дешевый брак**. 
   **/
  @ApiModelProperty(value = "Используется ли опция **Быстрый возврат денег за дешевый брак**. ")
  public Boolean getFastReturn() {
    return fastReturn;
  }
  public void setFastReturn(Boolean fastReturn) {
    this.fastReturn = fastReturn;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReturnDTO returnDTO = (ReturnDTO) o;
    return (this.id == null ? returnDTO.id == null : this.id.equals(returnDTO.id)) &&
        (this.orderId == null ? returnDTO.orderId == null : this.orderId.equals(returnDTO.orderId)) &&
        (this.creationDate == null ? returnDTO.creationDate == null : this.creationDate.equals(returnDTO.creationDate)) &&
        (this.updateDate == null ? returnDTO.updateDate == null : this.updateDate.equals(returnDTO.updateDate)) &&
        (this.refundStatus == null ? returnDTO.refundStatus == null : this.refundStatus.equals(returnDTO.refundStatus)) &&
        (this.logisticPickupPoint == null ? returnDTO.logisticPickupPoint == null : this.logisticPickupPoint.equals(returnDTO.logisticPickupPoint)) &&
        (this.shipmentRecipientType == null ? returnDTO.shipmentRecipientType == null : this.shipmentRecipientType.equals(returnDTO.shipmentRecipientType)) &&
        (this.shipmentStatus == null ? returnDTO.shipmentStatus == null : this.shipmentStatus.equals(returnDTO.shipmentStatus)) &&
        (this.refundAmount == null ? returnDTO.refundAmount == null : this.refundAmount.equals(returnDTO.refundAmount)) &&
        (this.items == null ? returnDTO.items == null : this.items.equals(returnDTO.items)) &&
        (this.returnType == null ? returnDTO.returnType == null : this.returnType.equals(returnDTO.returnType)) &&
        (this.fastReturn == null ? returnDTO.fastReturn == null : this.fastReturn.equals(returnDTO.fastReturn));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.orderId == null ? 0: this.orderId.hashCode());
    result = 31 * result + (this.creationDate == null ? 0: this.creationDate.hashCode());
    result = 31 * result + (this.updateDate == null ? 0: this.updateDate.hashCode());
    result = 31 * result + (this.refundStatus == null ? 0: this.refundStatus.hashCode());
    result = 31 * result + (this.logisticPickupPoint == null ? 0: this.logisticPickupPoint.hashCode());
    result = 31 * result + (this.shipmentRecipientType == null ? 0: this.shipmentRecipientType.hashCode());
    result = 31 * result + (this.shipmentStatus == null ? 0: this.shipmentStatus.hashCode());
    result = 31 * result + (this.refundAmount == null ? 0: this.refundAmount.hashCode());
    result = 31 * result + (this.items == null ? 0: this.items.hashCode());
    result = 31 * result + (this.returnType == null ? 0: this.returnType.hashCode());
    result = 31 * result + (this.fastReturn == null ? 0: this.fastReturn.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReturnDTO {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  orderId: ").append(orderId).append("\n");
    sb.append("  creationDate: ").append(creationDate).append("\n");
    sb.append("  updateDate: ").append(updateDate).append("\n");
    sb.append("  refundStatus: ").append(refundStatus).append("\n");
    sb.append("  logisticPickupPoint: ").append(logisticPickupPoint).append("\n");
    sb.append("  shipmentRecipientType: ").append(shipmentRecipientType).append("\n");
    sb.append("  shipmentStatus: ").append(shipmentStatus).append("\n");
    sb.append("  refundAmount: ").append(refundAmount).append("\n");
    sb.append("  items: ").append(items).append("\n");
    sb.append("  returnType: ").append(returnType).append("\n");
    sb.append("  fastReturn: ").append(fastReturn).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
