/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import org.openapitools.client.model.LicenseCheckStatusType;
import org.openapitools.client.model.LicenseType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о лицензии.
 **/
@ApiModel(description = "Информация о лицензии.")
public class FullOutletLicenseDTO {
  
  @SerializedName("id")
  private Long id = null;
  @SerializedName("outletId")
  private Long outletId = null;
  @SerializedName("licenseType")
  private LicenseType licenseType = null;
  @SerializedName("number")
  private String number = null;
  @SerializedName("dateOfIssue")
  private Date dateOfIssue = null;
  @SerializedName("dateOfExpiry")
  private Date dateOfExpiry = null;
  @SerializedName("checkStatus")
  private LicenseCheckStatusType checkStatus = null;
  @SerializedName("checkComment")
  private String checkComment = null;

  /**
   * Идентификатор лицензии.  Параметр указывается, только если нужно изменить информацию о существующей лицензии. Ее идентификатор можно узнать с помощью запроса [GET campaigns/{campaignId}/outlets/licenses](../../reference/outlets/getOutletLicenses.md). При передаче информации о новой лицензии указывать идентификатор не нужно.  Идентификатор лицензии присваивается Маркетом. Не путайте его с номером, указанным на лицензии: он передается в параметре `number`. 
   **/
  @ApiModelProperty(value = "Идентификатор лицензии.  Параметр указывается, только если нужно изменить информацию о существующей лицензии. Ее идентификатор можно узнать с помощью запроса [GET campaigns/{campaignId}/outlets/licenses](../../reference/outlets/getOutletLicenses.md). При передаче информации о новой лицензии указывать идентификатор не нужно.  Идентификатор лицензии присваивается Маркетом. Не путайте его с номером, указанным на лицензии: он передается в параметре `number`. ")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   * Идентификатор точки продаж, для которой действительна лицензия.
   **/
  @ApiModelProperty(value = "Идентификатор точки продаж, для которой действительна лицензия.")
  public Long getOutletId() {
    return outletId;
  }
  public void setOutletId(Long outletId) {
    this.outletId = outletId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public LicenseType getLicenseType() {
    return licenseType;
  }
  public void setLicenseType(LicenseType licenseType) {
    this.licenseType = licenseType;
  }

  /**
   * Номер лицензии.
   **/
  @ApiModelProperty(value = "Номер лицензии.")
  public String getNumber() {
    return number;
  }
  public void setNumber(String number) {
    this.number = number;
  }

  /**
   * Дата выдачи лицензии.  Формат даты: ISO 8601 со смещением относительно UTC. Нужно передать дату, указанную на лицензии, время `00:00:00` и часовой пояс, соответствующий региону точки продаж. Например, если лицензия для точки продаж в Москве выдана 13 ноября 2017 года, то параметр должен иметь значение `2017-11-13T00:00:00+03:00`.  Обязательный параметр.  Не может быть позже даты окончания срока действия, указанной в параметре `dateOfExpiry`. 
   **/
  @ApiModelProperty(value = "Дата выдачи лицензии.  Формат даты: ISO 8601 со смещением относительно UTC. Нужно передать дату, указанную на лицензии, время `00:00:00` и часовой пояс, соответствующий региону точки продаж. Например, если лицензия для точки продаж в Москве выдана 13 ноября 2017 года, то параметр должен иметь значение `2017-11-13T00:00:00+03:00`.  Обязательный параметр.  Не может быть позже даты окончания срока действия, указанной в параметре `dateOfExpiry`. ")
  public Date getDateOfIssue() {
    return dateOfIssue;
  }
  public void setDateOfIssue(Date dateOfIssue) {
    this.dateOfIssue = dateOfIssue;
  }

  /**
   * Дата окончания действия лицензии.  Формат даты: ISO 8601 со смещением относительно UTC. Нужно передать дату, указанную на лицензии, время `00:00:00` и часовой пояс, соответствующий региону точки продаж. Например, если действие лицензии для точки продаж в Москве заканчивается 20 ноября 2022 года, то параметр должен иметь значение `2022-11-20T00:00:00+03:00`.  Обязательный параметр.  Не может быть раньше даты выдачи, указанной в параметре `dateOfIssue`. 
   **/
  @ApiModelProperty(value = "Дата окончания действия лицензии.  Формат даты: ISO 8601 со смещением относительно UTC. Нужно передать дату, указанную на лицензии, время `00:00:00` и часовой пояс, соответствующий региону точки продаж. Например, если действие лицензии для точки продаж в Москве заканчивается 20 ноября 2022 года, то параметр должен иметь значение `2022-11-20T00:00:00+03:00`.  Обязательный параметр.  Не может быть раньше даты выдачи, указанной в параметре `dateOfIssue`. ")
  public Date getDateOfExpiry() {
    return dateOfExpiry;
  }
  public void setDateOfExpiry(Date dateOfExpiry) {
    this.dateOfExpiry = dateOfExpiry;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public LicenseCheckStatusType getCheckStatus() {
    return checkStatus;
  }
  public void setCheckStatus(LicenseCheckStatusType checkStatus) {
    this.checkStatus = checkStatus;
  }

  /**
   * Причина, по которой лицензия не прошла проверку.  Параметр возвращается, только если параметр `checkStatus` имеет значение `FAIL`. 
   **/
  @ApiModelProperty(value = "Причина, по которой лицензия не прошла проверку.  Параметр возвращается, только если параметр `checkStatus` имеет значение `FAIL`. ")
  public String getCheckComment() {
    return checkComment;
  }
  public void setCheckComment(String checkComment) {
    this.checkComment = checkComment;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FullOutletLicenseDTO fullOutletLicenseDTO = (FullOutletLicenseDTO) o;
    return (this.id == null ? fullOutletLicenseDTO.id == null : this.id.equals(fullOutletLicenseDTO.id)) &&
        (this.outletId == null ? fullOutletLicenseDTO.outletId == null : this.outletId.equals(fullOutletLicenseDTO.outletId)) &&
        (this.licenseType == null ? fullOutletLicenseDTO.licenseType == null : this.licenseType.equals(fullOutletLicenseDTO.licenseType)) &&
        (this.number == null ? fullOutletLicenseDTO.number == null : this.number.equals(fullOutletLicenseDTO.number)) &&
        (this.dateOfIssue == null ? fullOutletLicenseDTO.dateOfIssue == null : this.dateOfIssue.equals(fullOutletLicenseDTO.dateOfIssue)) &&
        (this.dateOfExpiry == null ? fullOutletLicenseDTO.dateOfExpiry == null : this.dateOfExpiry.equals(fullOutletLicenseDTO.dateOfExpiry)) &&
        (this.checkStatus == null ? fullOutletLicenseDTO.checkStatus == null : this.checkStatus.equals(fullOutletLicenseDTO.checkStatus)) &&
        (this.checkComment == null ? fullOutletLicenseDTO.checkComment == null : this.checkComment.equals(fullOutletLicenseDTO.checkComment));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.outletId == null ? 0: this.outletId.hashCode());
    result = 31 * result + (this.licenseType == null ? 0: this.licenseType.hashCode());
    result = 31 * result + (this.number == null ? 0: this.number.hashCode());
    result = 31 * result + (this.dateOfIssue == null ? 0: this.dateOfIssue.hashCode());
    result = 31 * result + (this.dateOfExpiry == null ? 0: this.dateOfExpiry.hashCode());
    result = 31 * result + (this.checkStatus == null ? 0: this.checkStatus.hashCode());
    result = 31 * result + (this.checkComment == null ? 0: this.checkComment.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class FullOutletLicenseDTO {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  outletId: ").append(outletId).append("\n");
    sb.append("  licenseType: ").append(licenseType).append("\n");
    sb.append("  number: ").append(number).append("\n");
    sb.append("  dateOfIssue: ").append(dateOfIssue).append("\n");
    sb.append("  dateOfExpiry: ").append(dateOfExpiry).append("\n");
    sb.append("  checkStatus: ").append(checkStatus).append("\n");
    sb.append("  checkComment: ").append(checkComment).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
