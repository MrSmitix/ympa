/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.GpsDTO;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Адрес склада.
 **/
@ApiModel(description = "Адрес склада.")
public class WarehouseAddressDTO {
  
  @SerializedName("city")
  private String city = null;
  @SerializedName("street")
  private String street = null;
  @SerializedName("number")
  private String number = null;
  @SerializedName("building")
  private String building = null;
  @SerializedName("block")
  private String block = null;
  @SerializedName("gps")
  private GpsDTO gps = null;

  /**
   * Город.
   **/
  @ApiModelProperty(required = true, value = "Город.")
  public String getCity() {
    return city;
  }
  public void setCity(String city) {
    this.city = city;
  }

  /**
   * Улица.
   **/
  @ApiModelProperty(value = "Улица.")
  public String getStreet() {
    return street;
  }
  public void setStreet(String street) {
    this.street = street;
  }

  /**
   * Номер дома.
   **/
  @ApiModelProperty(value = "Номер дома.")
  public String getNumber() {
    return number;
  }
  public void setNumber(String number) {
    this.number = number;
  }

  /**
   * Номер строения.
   **/
  @ApiModelProperty(value = "Номер строения.")
  public String getBuilding() {
    return building;
  }
  public void setBuilding(String building) {
    this.building = building;
  }

  /**
   * Номер корпуса.
   **/
  @ApiModelProperty(value = "Номер корпуса.")
  public String getBlock() {
    return block;
  }
  public void setBlock(String block) {
    this.block = block;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public GpsDTO getGps() {
    return gps;
  }
  public void setGps(GpsDTO gps) {
    this.gps = gps;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WarehouseAddressDTO warehouseAddressDTO = (WarehouseAddressDTO) o;
    return (this.city == null ? warehouseAddressDTO.city == null : this.city.equals(warehouseAddressDTO.city)) &&
        (this.street == null ? warehouseAddressDTO.street == null : this.street.equals(warehouseAddressDTO.street)) &&
        (this.number == null ? warehouseAddressDTO.number == null : this.number.equals(warehouseAddressDTO.number)) &&
        (this.building == null ? warehouseAddressDTO.building == null : this.building.equals(warehouseAddressDTO.building)) &&
        (this.block == null ? warehouseAddressDTO.block == null : this.block.equals(warehouseAddressDTO.block)) &&
        (this.gps == null ? warehouseAddressDTO.gps == null : this.gps.equals(warehouseAddressDTO.gps));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.city == null ? 0: this.city.hashCode());
    result = 31 * result + (this.street == null ? 0: this.street.hashCode());
    result = 31 * result + (this.number == null ? 0: this.number.hashCode());
    result = 31 * result + (this.building == null ? 0: this.building.hashCode());
    result = 31 * result + (this.block == null ? 0: this.block.hashCode());
    result = 31 * result + (this.gps == null ? 0: this.gps.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class WarehouseAddressDTO {\n");
    
    sb.append("  city: ").append(city).append("\n");
    sb.append("  street: ").append(street).append("\n");
    sb.append("  number: ").append(number).append("\n");
    sb.append("  building: ").append(building).append("\n");
    sb.append("  block: ").append(block).append("\n");
    sb.append("  gps: ").append(gps).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
