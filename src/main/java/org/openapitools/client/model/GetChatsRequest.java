/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.ChatStatusType;
import org.openapitools.client.model.ChatType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Фильтры по чатам, которые нужно вернуть. 
 **/
@ApiModel(description = "Фильтры по чатам, которые нужно вернуть. ")
public class GetChatsRequest {
  
  @SerializedName("orderIds")
  private List<Long> orderIds = null;
  @SerializedName("types")
  private List<ChatType> types = null;
  @SerializedName("statuses")
  private List<ChatStatusType> statuses = null;

  /**
   * Фильтр по идентификаторам заказов на Маркете.
   **/
  @ApiModelProperty(value = "Фильтр по идентификаторам заказов на Маркете.")
  public List<Long> getOrderIds() {
    return orderIds;
  }
  public void setOrderIds(List<Long> orderIds) {
    this.orderIds = orderIds;
  }

  /**
   * Фильтр по типам чатов.
   **/
  @ApiModelProperty(value = "Фильтр по типам чатов.")
  public List<ChatType> getTypes() {
    return types;
  }
  public void setTypes(List<ChatType> types) {
    this.types = types;
  }

  /**
   * Фильтр по статусам чатов.
   **/
  @ApiModelProperty(value = "Фильтр по статусам чатов.")
  public List<ChatStatusType> getStatuses() {
    return statuses;
  }
  public void setStatuses(List<ChatStatusType> statuses) {
    this.statuses = statuses;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetChatsRequest getChatsRequest = (GetChatsRequest) o;
    return (this.orderIds == null ? getChatsRequest.orderIds == null : this.orderIds.equals(getChatsRequest.orderIds)) &&
        (this.types == null ? getChatsRequest.types == null : this.types.equals(getChatsRequest.types)) &&
        (this.statuses == null ? getChatsRequest.statuses == null : this.statuses.equals(getChatsRequest.statuses));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.orderIds == null ? 0: this.orderIds.hashCode());
    result = 31 * result + (this.types == null ? 0: this.types.hashCode());
    result = 31 * result + (this.statuses == null ? 0: this.statuses.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetChatsRequest {\n");
    
    sb.append("  orderIds: ").append(orderIds).append("\n");
    sb.append("  types: ").append(types).append("\n");
    sb.append("  statuses: ").append(statuses).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
