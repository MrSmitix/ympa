/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ChatStatusType;
import org.openapitools.client.model.ChatType;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.NoSuchElementException;



/**
  * Фильтры по чатам, которые нужно вернуть. 
 **/

public class GetChatsRequest  {
  
 /**
   * Фильтр по идентификаторам заказов на Маркете.
  **/
  private List<Long> orderIds = null;

 /**
   * Фильтр по типам чатов.
  **/
  private List<ChatType> types = null;

 /**
   * Фильтр по статусам чатов.
  **/
  private List<ChatStatusType> statuses = null;

 /**
   * Фильтр по идентификаторам заказов на Маркете.
   * @return orderIds
  **/
  public List<Long> getOrderIds() {
    return orderIds;
  }

  /**
    * Set orderIds
  **/
  public void setOrderIds(List<Long> orderIds) {
    this.orderIds = orderIds;
  }

  public GetChatsRequest orderIds(List<Long> orderIds) {
    this.orderIds = orderIds;
    return this;
  }

  public GetChatsRequest addOrderIdsItem(Long orderIdsItem) {
    this.orderIds.add(orderIdsItem);
    return this;
  }

 /**
   * Фильтр по типам чатов.
   * @return types
  **/
  public List<ChatType> getTypes() {
    return types;
  }

  /**
    * Set types
  **/
  public void setTypes(List<ChatType> types) {
    this.types = types;
  }

  public GetChatsRequest types(List<ChatType> types) {
    this.types = types;
    return this;
  }

  public GetChatsRequest addTypesItem(ChatType typesItem) {
    this.types.add(typesItem);
    return this;
  }

 /**
   * Фильтр по статусам чатов.
   * @return statuses
  **/
  public List<ChatStatusType> getStatuses() {
    return statuses;
  }

  /**
    * Set statuses
  **/
  public void setStatuses(List<ChatStatusType> statuses) {
    this.statuses = statuses;
  }

  public GetChatsRequest statuses(List<ChatStatusType> statuses) {
    this.statuses = statuses;
    return this;
  }

  public GetChatsRequest addStatusesItem(ChatStatusType statusesItem) {
    this.statuses.add(statusesItem);
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetChatsRequest {\n");
    
    sb.append("    orderIds: ").append(toIndentedString(orderIds)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("    statuses: ").append(toIndentedString(statuses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

