/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Идентификатор единицы товара.  Заполните только одно поле в зависимости от того, в какой системе маркирован товар.  Подробно о работе с маркируемыми товарами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/cz.html). 
 **/
@ApiModel(description = "Идентификатор единицы товара.  Заполните только одно поле в зависимости от того, в какой системе маркирован товар.  Подробно о работе с маркируемыми товарами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/cz.html). ")
public class BriefOrderItemInstanceDTO {
  
  @SerializedName("cis")
  private String cis = null;
  @SerializedName("uin")
  private String uin = null;
  @SerializedName("rnpt")
  private String rnpt = null;
  @SerializedName("gtd")
  private String gtd = null;

  /**
   * Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).  {% note warning %}  Не экранируйте косую черту в коде символа-разделителя `\\u001d`!  ✅ `01030410947874432155Qbag!\\u001d93Zjqw`  ❌ `01030410947874432155Qbag!\\\\u001d93Zjqw`  Косые черты и кавычки в других местах экранируйте по правилам JSON: `\\\\` и `\\\"`  {% endnote %} 
   **/
  @ApiModelProperty(value = "Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).  {% note warning %}  Не экранируйте косую черту в коде символа-разделителя `\\u001d`!  ✅ `01030410947874432155Qbag!\\u001d93Zjqw`  ❌ `01030410947874432155Qbag!\\\\u001d93Zjqw`  Косые черты и кавычки в других местах экранируйте по правилам JSON: `\\\\` и `\\\"`  {% endnote %} ")
  public String getCis() {
    return cis;
  }
  public void setCis(String cis) {
    this.cis = cis;
  }

  /**
   * Уникальный идентификационный номер ювелирного изделия.  Представляет собой число из 16 цифр. 
   **/
  @ApiModelProperty(value = "Уникальный идентификационный номер ювелирного изделия.  Представляет собой число из 16 цифр. ")
  public String getUin() {
    return uin;
  }
  public void setUin(String uin) {
    this.uin = uin;
  }

  /**
   * Регистрационный номер партии товара.  Представляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации. 
   **/
  @ApiModelProperty(value = "Регистрационный номер партии товара.  Представляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации. ")
  public String getRnpt() {
    return rnpt;
  }
  public void setRnpt(String rnpt) {
    this.rnpt = rnpt;
  }

  /**
   * Грузовая таможенная декларация.  Представляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации. 
   **/
  @ApiModelProperty(value = "Грузовая таможенная декларация.  Представляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации. ")
  public String getGtd() {
    return gtd;
  }
  public void setGtd(String gtd) {
    this.gtd = gtd;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BriefOrderItemInstanceDTO briefOrderItemInstanceDTO = (BriefOrderItemInstanceDTO) o;
    return (this.cis == null ? briefOrderItemInstanceDTO.cis == null : this.cis.equals(briefOrderItemInstanceDTO.cis)) &&
        (this.uin == null ? briefOrderItemInstanceDTO.uin == null : this.uin.equals(briefOrderItemInstanceDTO.uin)) &&
        (this.rnpt == null ? briefOrderItemInstanceDTO.rnpt == null : this.rnpt.equals(briefOrderItemInstanceDTO.rnpt)) &&
        (this.gtd == null ? briefOrderItemInstanceDTO.gtd == null : this.gtd.equals(briefOrderItemInstanceDTO.gtd));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.cis == null ? 0: this.cis.hashCode());
    result = 31 * result + (this.uin == null ? 0: this.uin.hashCode());
    result = 31 * result + (this.rnpt == null ? 0: this.rnpt.hashCode());
    result = 31 * result + (this.gtd == null ? 0: this.gtd.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class BriefOrderItemInstanceDTO {\n");
    
    sb.append("  cis: ").append(cis).append("\n");
    sb.append("  uin: ").append(uin).append("\n");
    sb.append("  rnpt: ").append(rnpt).append("\n");
    sb.append("  gtd: ").append(gtd).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
