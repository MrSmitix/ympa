/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.BasePriceDTO;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Максимальные значения цены, при которых она является привлекательной или умеренной.
 **/
@ApiModel(description = "Максимальные значения цены, при которых она является привлекательной или умеренной.")
public class PriceCompetitivenessThresholdsDTO {
  
  @SerializedName("optimalPrice")
  private BasePriceDTO optimalPrice = null;
  @SerializedName("averagePrice")
  private BasePriceDTO averagePrice = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public BasePriceDTO getOptimalPrice() {
    return optimalPrice;
  }
  public void setOptimalPrice(BasePriceDTO optimalPrice) {
    this.optimalPrice = optimalPrice;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BasePriceDTO getAveragePrice() {
    return averagePrice;
  }
  public void setAveragePrice(BasePriceDTO averagePrice) {
    this.averagePrice = averagePrice;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PriceCompetitivenessThresholdsDTO priceCompetitivenessThresholdsDTO = (PriceCompetitivenessThresholdsDTO) o;
    return (this.optimalPrice == null ? priceCompetitivenessThresholdsDTO.optimalPrice == null : this.optimalPrice.equals(priceCompetitivenessThresholdsDTO.optimalPrice)) &&
        (this.averagePrice == null ? priceCompetitivenessThresholdsDTO.averagePrice == null : this.averagePrice.equals(priceCompetitivenessThresholdsDTO.averagePrice));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.optimalPrice == null ? 0: this.optimalPrice.hashCode());
    result = 31 * result + (this.averagePrice == null ? 0: this.averagePrice.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PriceCompetitivenessThresholdsDTO {\n");
    
    sb.append("  optimalPrice: ").append(optimalPrice).append("\n");
    sb.append("  averagePrice: ").append(averagePrice).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
