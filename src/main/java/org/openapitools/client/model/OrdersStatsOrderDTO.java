/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.OrderStatsStatusType;
import org.openapitools.client.model.OrdersStatsCommissionDTO;
import org.openapitools.client.model.OrdersStatsDeliveryRegionDTO;
import org.openapitools.client.model.OrdersStatsItemDTO;
import org.openapitools.client.model.OrdersStatsOrderPaymentType;
import org.openapitools.client.model.OrdersStatsPaymentDTO;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.NoSuchElementException;



/**
  * Информация о заказе.
 **/

public class OrdersStatsOrderDTO  {
  
 /**
   * Идентификатор заказа.
  **/
  private Long id;

 /**
   * Дата создания заказа.  Формат даты: `ГГГГ-ММ-ДД`. 
  **/
  private LocalDate creationDate;

 /**
   * Дата и время, когда статус заказа был изменен в последний раз.  Формат даты и времени: ISO 8601. Например, `2017-11-21T00:00:00`. Часовой пояс — UTC+03:00 (Москва). 
  **/
  private OffsetDateTime statusUpdateDate;

  private OrderStatsStatusType status;

 /**
   * Идентификатор заказа в информационной системе магазина.
  **/
  private String partnerOrderId;

  private OrdersStatsOrderPaymentType paymentType;

 /**
   * Тип заказа:  * `false` — настоящий заказ покупателя.  * `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. 
  **/
  private Boolean fake;

  private OrdersStatsDeliveryRegionDTO deliveryRegion;

 /**
   * Список товаров в заказе после возможных изменений.
  **/
  private List<OrdersStatsItemDTO> items = new ArrayList<>();

 /**
   * Список товаров в заказе до изменений.
  **/
  private List<OrdersStatsItemDTO> initialItems = null;

 /**
   * Информация о денежных переводах по заказу.
  **/
  private List<OrdersStatsPaymentDTO> payments = new ArrayList<>();

 /**
   * Информация о комиссиях за заказ.
  **/
  private List<OrdersStatsCommissionDTO> commissions = new ArrayList<>();

 /**
   * Идентификатор заказа.
   * @return id
  **/
  public Long getId() {
    return id;
  }

  /**
    * Set id
  **/
  public void setId(Long id) {
    this.id = id;
  }

  public OrdersStatsOrderDTO id(Long id) {
    this.id = id;
    return this;
  }

 /**
   * Дата создания заказа.  Формат даты: &#x60;ГГГГ-ММ-ДД&#x60;. 
   * @return creationDate
  **/
  public LocalDate getCreationDate() {
    return creationDate;
  }

  /**
    * Set creationDate
  **/
  public void setCreationDate(LocalDate creationDate) {
    this.creationDate = creationDate;
  }

  public OrdersStatsOrderDTO creationDate(LocalDate creationDate) {
    this.creationDate = creationDate;
    return this;
  }

 /**
   * Дата и время, когда статус заказа был изменен в последний раз.  Формат даты и времени: ISO 8601. Например, &#x60;2017-11-21T00:00:00&#x60;. Часовой пояс — UTC+03:00 (Москва). 
   * @return statusUpdateDate
  **/
  public OffsetDateTime getStatusUpdateDate() {
    return statusUpdateDate;
  }

  /**
    * Set statusUpdateDate
  **/
  public void setStatusUpdateDate(OffsetDateTime statusUpdateDate) {
    this.statusUpdateDate = statusUpdateDate;
  }

  public OrdersStatsOrderDTO statusUpdateDate(OffsetDateTime statusUpdateDate) {
    this.statusUpdateDate = statusUpdateDate;
    return this;
  }

 /**
   * Get status
   * @return status
  **/
  public OrderStatsStatusType getStatus() {
    return status;
  }

  /**
    * Set status
  **/
  public void setStatus(OrderStatsStatusType status) {
    this.status = status;
  }

  public OrdersStatsOrderDTO status(OrderStatsStatusType status) {
    this.status = status;
    return this;
  }

 /**
   * Идентификатор заказа в информационной системе магазина.
   * @return partnerOrderId
  **/
  public String getPartnerOrderId() {
    return partnerOrderId;
  }

  /**
    * Set partnerOrderId
  **/
  public void setPartnerOrderId(String partnerOrderId) {
    this.partnerOrderId = partnerOrderId;
  }

  public OrdersStatsOrderDTO partnerOrderId(String partnerOrderId) {
    this.partnerOrderId = partnerOrderId;
    return this;
  }

 /**
   * Get paymentType
   * @return paymentType
  **/
  public OrdersStatsOrderPaymentType getPaymentType() {
    return paymentType;
  }

  /**
    * Set paymentType
  **/
  public void setPaymentType(OrdersStatsOrderPaymentType paymentType) {
    this.paymentType = paymentType;
  }

  public OrdersStatsOrderDTO paymentType(OrdersStatsOrderPaymentType paymentType) {
    this.paymentType = paymentType;
    return this;
  }

 /**
   * Тип заказа:  * &#x60;false&#x60; — настоящий заказ покупателя.  * &#x60;true&#x60; — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. 
   * @return fake
  **/
  public Boolean getFake() {
    return fake;
  }

  /**
    * Set fake
  **/
  public void setFake(Boolean fake) {
    this.fake = fake;
  }

  public OrdersStatsOrderDTO fake(Boolean fake) {
    this.fake = fake;
    return this;
  }

 /**
   * Get deliveryRegion
   * @return deliveryRegion
  **/
  public OrdersStatsDeliveryRegionDTO getDeliveryRegion() {
    return deliveryRegion;
  }

  /**
    * Set deliveryRegion
  **/
  public void setDeliveryRegion(OrdersStatsDeliveryRegionDTO deliveryRegion) {
    this.deliveryRegion = deliveryRegion;
  }

  public OrdersStatsOrderDTO deliveryRegion(OrdersStatsDeliveryRegionDTO deliveryRegion) {
    this.deliveryRegion = deliveryRegion;
    return this;
  }

 /**
   * Список товаров в заказе после возможных изменений.
   * @return items
  **/
  public List<OrdersStatsItemDTO> getItems() {
    return items;
  }

  /**
    * Set items
  **/
  public void setItems(List<OrdersStatsItemDTO> items) {
    this.items = items;
  }

  public OrdersStatsOrderDTO items(List<OrdersStatsItemDTO> items) {
    this.items = items;
    return this;
  }

  public OrdersStatsOrderDTO addItemsItem(OrdersStatsItemDTO itemsItem) {
    this.items.add(itemsItem);
    return this;
  }

 /**
   * Список товаров в заказе до изменений.
   * @return initialItems
  **/
  public List<OrdersStatsItemDTO> getInitialItems() {
    return initialItems;
  }

  /**
    * Set initialItems
  **/
  public void setInitialItems(List<OrdersStatsItemDTO> initialItems) {
    this.initialItems = initialItems;
  }

  public OrdersStatsOrderDTO initialItems(List<OrdersStatsItemDTO> initialItems) {
    this.initialItems = initialItems;
    return this;
  }

  public OrdersStatsOrderDTO addInitialItemsItem(OrdersStatsItemDTO initialItemsItem) {
    this.initialItems.add(initialItemsItem);
    return this;
  }

 /**
   * Информация о денежных переводах по заказу.
   * @return payments
  **/
  public List<OrdersStatsPaymentDTO> getPayments() {
    return payments;
  }

  /**
    * Set payments
  **/
  public void setPayments(List<OrdersStatsPaymentDTO> payments) {
    this.payments = payments;
  }

  public OrdersStatsOrderDTO payments(List<OrdersStatsPaymentDTO> payments) {
    this.payments = payments;
    return this;
  }

  public OrdersStatsOrderDTO addPaymentsItem(OrdersStatsPaymentDTO paymentsItem) {
    this.payments.add(paymentsItem);
    return this;
  }

 /**
   * Информация о комиссиях за заказ.
   * @return commissions
  **/
  public List<OrdersStatsCommissionDTO> getCommissions() {
    return commissions;
  }

  /**
    * Set commissions
  **/
  public void setCommissions(List<OrdersStatsCommissionDTO> commissions) {
    this.commissions = commissions;
  }

  public OrdersStatsOrderDTO commissions(List<OrdersStatsCommissionDTO> commissions) {
    this.commissions = commissions;
    return this;
  }

  public OrdersStatsOrderDTO addCommissionsItem(OrdersStatsCommissionDTO commissionsItem) {
    this.commissions.add(commissionsItem);
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrdersStatsOrderDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    statusUpdateDate: ").append(toIndentedString(statusUpdateDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    partnerOrderId: ").append(toIndentedString(partnerOrderId)).append("\n");
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    fake: ").append(toIndentedString(fake)).append("\n");
    sb.append("    deliveryRegion: ").append(toIndentedString(deliveryRegion)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    initialItems: ").append(toIndentedString(initialItems)).append("\n");
    sb.append("    payments: ").append(toIndentedString(payments)).append("\n");
    sb.append("    commissions: ").append(toIndentedString(commissions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

