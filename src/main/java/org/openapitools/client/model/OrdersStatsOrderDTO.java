/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.Date;
import org.openapitools.client.model.OrderStatsStatusType;
import org.openapitools.client.model.OrdersStatsCommissionDTO;
import org.openapitools.client.model.OrdersStatsDeliveryRegionDTO;
import org.openapitools.client.model.OrdersStatsItemDTO;
import org.openapitools.client.model.OrdersStatsOrderPaymentType;
import org.openapitools.client.model.OrdersStatsPaymentDTO;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о заказе.
 **/
@ApiModel(description = "Информация о заказе.")
public class OrdersStatsOrderDTO {
  
  @SerializedName("id")
  private Long id = null;
  @SerializedName("creationDate")
  private Date creationDate = null;
  @SerializedName("statusUpdateDate")
  private Date statusUpdateDate = null;
  @SerializedName("status")
  private OrderStatsStatusType status = null;
  @SerializedName("partnerOrderId")
  private String partnerOrderId = null;
  @SerializedName("paymentType")
  private OrdersStatsOrderPaymentType paymentType = null;
  @SerializedName("fake")
  private Boolean fake = null;
  @SerializedName("deliveryRegion")
  private OrdersStatsDeliveryRegionDTO deliveryRegion = null;
  @SerializedName("items")
  private List<OrdersStatsItemDTO> items = null;
  @SerializedName("initialItems")
  private List<OrdersStatsItemDTO> initialItems = null;
  @SerializedName("payments")
  private List<OrdersStatsPaymentDTO> payments = null;
  @SerializedName("commissions")
  private List<OrdersStatsCommissionDTO> commissions = null;

  /**
   * Идентификатор заказа.
   **/
  @ApiModelProperty(value = "Идентификатор заказа.")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   * Дата создания заказа.  Формат даты: `ГГГГ-ММ-ДД`. 
   **/
  @ApiModelProperty(value = "Дата создания заказа.  Формат даты: `ГГГГ-ММ-ДД`. ")
  public Date getCreationDate() {
    return creationDate;
  }
  public void setCreationDate(Date creationDate) {
    this.creationDate = creationDate;
  }

  /**
   * Дата и время, когда статус заказа был изменен в последний раз.  Формат даты и времени: ISO 8601. Например, `2017-11-21T00:00:00`. Часовой пояс — UTC+03:00 (Москва). 
   **/
  @ApiModelProperty(value = "Дата и время, когда статус заказа был изменен в последний раз.  Формат даты и времени: ISO 8601. Например, `2017-11-21T00:00:00`. Часовой пояс — UTC+03:00 (Москва). ")
  public Date getStatusUpdateDate() {
    return statusUpdateDate;
  }
  public void setStatusUpdateDate(Date statusUpdateDate) {
    this.statusUpdateDate = statusUpdateDate;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OrderStatsStatusType getStatus() {
    return status;
  }
  public void setStatus(OrderStatsStatusType status) {
    this.status = status;
  }

  /**
   * Идентификатор заказа в информационной системе магазина.
   **/
  @ApiModelProperty(value = "Идентификатор заказа в информационной системе магазина.")
  public String getPartnerOrderId() {
    return partnerOrderId;
  }
  public void setPartnerOrderId(String partnerOrderId) {
    this.partnerOrderId = partnerOrderId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OrdersStatsOrderPaymentType getPaymentType() {
    return paymentType;
  }
  public void setPaymentType(OrdersStatsOrderPaymentType paymentType) {
    this.paymentType = paymentType;
  }

  /**
   * Тип заказа:  * `false` — настоящий заказ покупателя.  * `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. 
   **/
  @ApiModelProperty(value = "Тип заказа:  * `false` — настоящий заказ покупателя.  * `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. ")
  public Boolean getFake() {
    return fake;
  }
  public void setFake(Boolean fake) {
    this.fake = fake;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OrdersStatsDeliveryRegionDTO getDeliveryRegion() {
    return deliveryRegion;
  }
  public void setDeliveryRegion(OrdersStatsDeliveryRegionDTO deliveryRegion) {
    this.deliveryRegion = deliveryRegion;
  }

  /**
   * Список товаров в заказе после возможных изменений.
   **/
  @ApiModelProperty(required = true, value = "Список товаров в заказе после возможных изменений.")
  public List<OrdersStatsItemDTO> getItems() {
    return items;
  }
  public void setItems(List<OrdersStatsItemDTO> items) {
    this.items = items;
  }

  /**
   * Список товаров в заказе до изменений.
   **/
  @ApiModelProperty(value = "Список товаров в заказе до изменений.")
  public List<OrdersStatsItemDTO> getInitialItems() {
    return initialItems;
  }
  public void setInitialItems(List<OrdersStatsItemDTO> initialItems) {
    this.initialItems = initialItems;
  }

  /**
   * Информация о денежных переводах по заказу.
   **/
  @ApiModelProperty(required = true, value = "Информация о денежных переводах по заказу.")
  public List<OrdersStatsPaymentDTO> getPayments() {
    return payments;
  }
  public void setPayments(List<OrdersStatsPaymentDTO> payments) {
    this.payments = payments;
  }

  /**
   * Информация о комиссиях за заказ.
   **/
  @ApiModelProperty(required = true, value = "Информация о комиссиях за заказ.")
  public List<OrdersStatsCommissionDTO> getCommissions() {
    return commissions;
  }
  public void setCommissions(List<OrdersStatsCommissionDTO> commissions) {
    this.commissions = commissions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrdersStatsOrderDTO ordersStatsOrderDTO = (OrdersStatsOrderDTO) o;
    return (this.id == null ? ordersStatsOrderDTO.id == null : this.id.equals(ordersStatsOrderDTO.id)) &&
        (this.creationDate == null ? ordersStatsOrderDTO.creationDate == null : this.creationDate.equals(ordersStatsOrderDTO.creationDate)) &&
        (this.statusUpdateDate == null ? ordersStatsOrderDTO.statusUpdateDate == null : this.statusUpdateDate.equals(ordersStatsOrderDTO.statusUpdateDate)) &&
        (this.status == null ? ordersStatsOrderDTO.status == null : this.status.equals(ordersStatsOrderDTO.status)) &&
        (this.partnerOrderId == null ? ordersStatsOrderDTO.partnerOrderId == null : this.partnerOrderId.equals(ordersStatsOrderDTO.partnerOrderId)) &&
        (this.paymentType == null ? ordersStatsOrderDTO.paymentType == null : this.paymentType.equals(ordersStatsOrderDTO.paymentType)) &&
        (this.fake == null ? ordersStatsOrderDTO.fake == null : this.fake.equals(ordersStatsOrderDTO.fake)) &&
        (this.deliveryRegion == null ? ordersStatsOrderDTO.deliveryRegion == null : this.deliveryRegion.equals(ordersStatsOrderDTO.deliveryRegion)) &&
        (this.items == null ? ordersStatsOrderDTO.items == null : this.items.equals(ordersStatsOrderDTO.items)) &&
        (this.initialItems == null ? ordersStatsOrderDTO.initialItems == null : this.initialItems.equals(ordersStatsOrderDTO.initialItems)) &&
        (this.payments == null ? ordersStatsOrderDTO.payments == null : this.payments.equals(ordersStatsOrderDTO.payments)) &&
        (this.commissions == null ? ordersStatsOrderDTO.commissions == null : this.commissions.equals(ordersStatsOrderDTO.commissions));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.creationDate == null ? 0: this.creationDate.hashCode());
    result = 31 * result + (this.statusUpdateDate == null ? 0: this.statusUpdateDate.hashCode());
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    result = 31 * result + (this.partnerOrderId == null ? 0: this.partnerOrderId.hashCode());
    result = 31 * result + (this.paymentType == null ? 0: this.paymentType.hashCode());
    result = 31 * result + (this.fake == null ? 0: this.fake.hashCode());
    result = 31 * result + (this.deliveryRegion == null ? 0: this.deliveryRegion.hashCode());
    result = 31 * result + (this.items == null ? 0: this.items.hashCode());
    result = 31 * result + (this.initialItems == null ? 0: this.initialItems.hashCode());
    result = 31 * result + (this.payments == null ? 0: this.payments.hashCode());
    result = 31 * result + (this.commissions == null ? 0: this.commissions.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrdersStatsOrderDTO {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  creationDate: ").append(creationDate).append("\n");
    sb.append("  statusUpdateDate: ").append(statusUpdateDate).append("\n");
    sb.append("  status: ").append(status).append("\n");
    sb.append("  partnerOrderId: ").append(partnerOrderId).append("\n");
    sb.append("  paymentType: ").append(paymentType).append("\n");
    sb.append("  fake: ").append(fake).append("\n");
    sb.append("  deliveryRegion: ").append(deliveryRegion).append("\n");
    sb.append("  items: ").append(items).append("\n");
    sb.append("  initialItems: ").append(initialItems).append("\n");
    sb.append("  payments: ").append(payments).append("\n");
    sb.append("  commissions: ").append(commissions).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
