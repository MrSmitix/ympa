/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.Date;
import org.openapitools.client.model.FeedbackReactionStatusType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Фильтр запроса отзывов в кабинете. 
 **/
@ApiModel(description = "Фильтр запроса отзывов в кабинете. ")
public class GetGoodsFeedbackRequest {
  
  @SerializedName("dateTimeFrom")
  private Date dateTimeFrom = null;
  @SerializedName("dateTimeTo")
  private Date dateTimeTo = null;
  @SerializedName("reactionStatus")
  private FeedbackReactionStatusType reactionStatus = null;
  @SerializedName("ratingValues")
  private Set<Integer> ratingValues = null;
  @SerializedName("modelIds")
  private Set<Long> modelIds = null;
  @SerializedName("paid")
  private Boolean paid = null;

  /**
   * Начало периода. Не включительно.  Если параметр не указан, возвращается информация за 6 месяцев до указанной в `dateTimeTo` даты. 
   **/
  @ApiModelProperty(value = "Начало периода. Не включительно.  Если параметр не указан, возвращается информация за 6 месяцев до указанной в `dateTimeTo` даты. ")
  public Date getDateTimeFrom() {
    return dateTimeFrom;
  }
  public void setDateTimeFrom(Date dateTimeFrom) {
    this.dateTimeFrom = dateTimeFrom;
  }

  /**
   * Конец периода. Не включительно.  Если параметр не указан, используется текущая дата. 
   **/
  @ApiModelProperty(value = "Конец периода. Не включительно.  Если параметр не указан, используется текущая дата. ")
  public Date getDateTimeTo() {
    return dateTimeTo;
  }
  public void setDateTimeTo(Date dateTimeTo) {
    this.dateTimeTo = dateTimeTo;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public FeedbackReactionStatusType getReactionStatus() {
    return reactionStatus;
  }
  public void setReactionStatus(FeedbackReactionStatusType reactionStatus) {
    this.reactionStatus = reactionStatus;
  }

  /**
   * Оценка товара.
   **/
  @ApiModelProperty(value = "Оценка товара.")
  public Set<Integer> getRatingValues() {
    return ratingValues;
  }
  public void setRatingValues(Set<Integer> ratingValues) {
    this.ratingValues = ratingValues;
  }

  /**
   * Фильтр по идентификатору модели товара.  Получить идентификатор модели можно с помощью одного из запросов:  * [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md);  * [POST businesses/{businessId}/offer-cards](../../reference/content/getOfferCardsContentStatus.md);  * [POST models](../../reference/models/getModels.md). 
   **/
  @ApiModelProperty(value = "Фильтр по идентификатору модели товара.  Получить идентификатор модели можно с помощью одного из запросов:  * [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md);  * [POST businesses/{businessId}/offer-cards](../../reference/content/getOfferCardsContentStatus.md);  * [POST models](../../reference/models/getModels.md). ")
  public Set<Long> getModelIds() {
    return modelIds;
  }
  public void setModelIds(Set<Long> modelIds) {
    this.modelIds = modelIds;
  }

  /**
   * Фильтр отзывов за баллы Плюса.
   **/
  @ApiModelProperty(value = "Фильтр отзывов за баллы Плюса.")
  public Boolean getPaid() {
    return paid;
  }
  public void setPaid(Boolean paid) {
    this.paid = paid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetGoodsFeedbackRequest getGoodsFeedbackRequest = (GetGoodsFeedbackRequest) o;
    return (this.dateTimeFrom == null ? getGoodsFeedbackRequest.dateTimeFrom == null : this.dateTimeFrom.equals(getGoodsFeedbackRequest.dateTimeFrom)) &&
        (this.dateTimeTo == null ? getGoodsFeedbackRequest.dateTimeTo == null : this.dateTimeTo.equals(getGoodsFeedbackRequest.dateTimeTo)) &&
        (this.reactionStatus == null ? getGoodsFeedbackRequest.reactionStatus == null : this.reactionStatus.equals(getGoodsFeedbackRequest.reactionStatus)) &&
        (this.ratingValues == null ? getGoodsFeedbackRequest.ratingValues == null : this.ratingValues.equals(getGoodsFeedbackRequest.ratingValues)) &&
        (this.modelIds == null ? getGoodsFeedbackRequest.modelIds == null : this.modelIds.equals(getGoodsFeedbackRequest.modelIds)) &&
        (this.paid == null ? getGoodsFeedbackRequest.paid == null : this.paid.equals(getGoodsFeedbackRequest.paid));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.dateTimeFrom == null ? 0: this.dateTimeFrom.hashCode());
    result = 31 * result + (this.dateTimeTo == null ? 0: this.dateTimeTo.hashCode());
    result = 31 * result + (this.reactionStatus == null ? 0: this.reactionStatus.hashCode());
    result = 31 * result + (this.ratingValues == null ? 0: this.ratingValues.hashCode());
    result = 31 * result + (this.modelIds == null ? 0: this.modelIds.hashCode());
    result = 31 * result + (this.paid == null ? 0: this.paid.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetGoodsFeedbackRequest {\n");
    
    sb.append("  dateTimeFrom: ").append(dateTimeFrom).append("\n");
    sb.append("  dateTimeTo: ").append(dateTimeTo).append("\n");
    sb.append("  reactionStatus: ").append(reactionStatus).append("\n");
    sb.append("  ratingValues: ").append(ratingValues).append("\n");
    sb.append("  modelIds: ").append(modelIds).append("\n");
    sb.append("  paid: ").append(paid).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
