/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ReturnInstanceStatusType;
import org.openapitools.client.model.ReturnInstanceStockType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Логистическая информация по возврату.
 **/
@ApiModel(description = "Логистическая информация по возврату.")
public class ReturnInstanceDTO {
  
  @SerializedName("stockType")
  private ReturnInstanceStockType stockType = null;
  @SerializedName("status")
  private ReturnInstanceStatusType status = null;
  @SerializedName("cis")
  private String cis = null;
  @SerializedName("imei")
  private String imei = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ReturnInstanceStockType getStockType() {
    return stockType;
  }
  public void setStockType(ReturnInstanceStockType stockType) {
    this.stockType = stockType;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ReturnInstanceStatusType getStatus() {
    return status;
  }
  public void setStatus(ReturnInstanceStatusType status) {
    this.status = status;
  }

  /**
   * Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).
   **/
  @ApiModelProperty(value = "Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).")
  public String getCis() {
    return cis;
  }
  public void setCis(String cis) {
    this.cis = cis;
  }

  /**
   * Международный идентификатор мобильного оборудования.
   **/
  @ApiModelProperty(value = "Международный идентификатор мобильного оборудования.")
  public String getImei() {
    return imei;
  }
  public void setImei(String imei) {
    this.imei = imei;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReturnInstanceDTO returnInstanceDTO = (ReturnInstanceDTO) o;
    return (this.stockType == null ? returnInstanceDTO.stockType == null : this.stockType.equals(returnInstanceDTO.stockType)) &&
        (this.status == null ? returnInstanceDTO.status == null : this.status.equals(returnInstanceDTO.status)) &&
        (this.cis == null ? returnInstanceDTO.cis == null : this.cis.equals(returnInstanceDTO.cis)) &&
        (this.imei == null ? returnInstanceDTO.imei == null : this.imei.equals(returnInstanceDTO.imei));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.stockType == null ? 0: this.stockType.hashCode());
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    result = 31 * result + (this.cis == null ? 0: this.cis.hashCode());
    result = 31 * result + (this.imei == null ? 0: this.imei.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReturnInstanceDTO {\n");
    
    sb.append("  stockType: ").append(stockType).append("\n");
    sb.append("  status: ").append(status).append("\n");
    sb.append("  cis: ").append(cis).append("\n");
    sb.append("  imei: ").append(imei).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
