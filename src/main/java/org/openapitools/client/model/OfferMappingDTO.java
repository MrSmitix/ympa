/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о текущей карточке товара на Маркете.
 **/
@ApiModel(description = "Информация о текущей карточке товара на Маркете.")
public class OfferMappingDTO {
  
  @SerializedName("marketSku")
  private Long marketSku = null;
  @SerializedName("modelId")
  private Long modelId = null;
  @SerializedName("categoryId")
  private Long categoryId = null;

  /**
   * SKU на Маркете.
   **/
  @ApiModelProperty(value = "SKU на Маркете.")
  public Long getMarketSku() {
    return marketSku;
  }
  public void setMarketSku(Long marketSku) {
    this.marketSku = marketSku;
  }

  /**
   * Идентификатор модели для текущей карточки товара на Маркете.  Например, две лопатки разных цветов имеют разные SKU на Маркете (параметр `marketSku`), но одинаковый идентификатор модели товара. 
   **/
  @ApiModelProperty(value = "Идентификатор модели для текущей карточки товара на Маркете.  Например, две лопатки разных цветов имеют разные SKU на Маркете (параметр `marketSku`), но одинаковый идентификатор модели товара. ")
  public Long getModelId() {
    return modelId;
  }
  public void setModelId(Long modelId) {
    this.modelId = modelId;
  }

  /**
   * Идентификатор категории для текущей карточки товара на Маркете.
   **/
  @ApiModelProperty(value = "Идентификатор категории для текущей карточки товара на Маркете.")
  public Long getCategoryId() {
    return categoryId;
  }
  public void setCategoryId(Long categoryId) {
    this.categoryId = categoryId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OfferMappingDTO offerMappingDTO = (OfferMappingDTO) o;
    return (this.marketSku == null ? offerMappingDTO.marketSku == null : this.marketSku.equals(offerMappingDTO.marketSku)) &&
        (this.modelId == null ? offerMappingDTO.modelId == null : this.modelId.equals(offerMappingDTO.modelId)) &&
        (this.categoryId == null ? offerMappingDTO.categoryId == null : this.categoryId.equals(offerMappingDTO.categoryId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.marketSku == null ? 0: this.marketSku.hashCode());
    result = 31 * result + (this.modelId == null ? 0: this.modelId.hashCode());
    result = 31 * result + (this.categoryId == null ? 0: this.categoryId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OfferMappingDTO {\n");
    
    sb.append("  marketSku: ").append(marketSku).append("\n");
    sb.append("  modelId: ").append(modelId).append("\n");
    sb.append("  categoryId: ").append(categoryId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
