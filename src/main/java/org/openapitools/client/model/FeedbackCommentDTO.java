/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.Date;
import org.openapitools.client.model.FeedbackCommentAuthorDTO;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Комментарий к отзыву на магазин.
 **/
@ApiModel(description = "Комментарий к отзыву на магазин.")
public class FeedbackCommentDTO {
  
  @SerializedName("id")
  private Long id = null;
  @SerializedName("parentId")
  private Long parentId = null;
  @SerializedName("body")
  private String body = null;
  @SerializedName("createdAt")
  private Date createdAt = null;
  @SerializedName("updatedAt")
  private Date updatedAt = null;
  @SerializedName("author")
  private FeedbackCommentAuthorDTO author = null;
  @SerializedName("children")
  private List<FeedbackCommentDTO> children = null;

  /**
   * Идентификатор ответа.
   **/
  @ApiModelProperty(value = "Идентификатор ответа.")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   * Идентификатор родительского ответа.
   **/
  @ApiModelProperty(value = "Идентификатор родительского ответа.")
  public Long getParentId() {
    return parentId;
  }
  public void setParentId(Long parentId) {
    this.parentId = parentId;
  }

  /**
   * Текст ответа.
   **/
  @ApiModelProperty(value = "Текст ответа.")
  public String getBody() {
    return body;
  }
  public void setBody(String body) {
    this.body = body;
  }

  /**
   * Дата и время создания ответа.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`. 
   **/
  @ApiModelProperty(value = "Дата и время создания ответа.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`. ")
  public Date getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  /**
   * Дата и время изменения ответа.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`. 
   **/
  @ApiModelProperty(value = "Дата и время изменения ответа.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`. ")
  public Date getUpdatedAt() {
    return updatedAt;
  }
  public void setUpdatedAt(Date updatedAt) {
    this.updatedAt = updatedAt;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public FeedbackCommentAuthorDTO getAuthor() {
    return author;
  }
  public void setAuthor(FeedbackCommentAuthorDTO author) {
    this.author = author;
  }

  /**
   * Дочерние ответы.
   **/
  @ApiModelProperty(value = "Дочерние ответы.")
  public List<FeedbackCommentDTO> getChildren() {
    return children;
  }
  public void setChildren(List<FeedbackCommentDTO> children) {
    this.children = children;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeedbackCommentDTO feedbackCommentDTO = (FeedbackCommentDTO) o;
    return (this.id == null ? feedbackCommentDTO.id == null : this.id.equals(feedbackCommentDTO.id)) &&
        (this.parentId == null ? feedbackCommentDTO.parentId == null : this.parentId.equals(feedbackCommentDTO.parentId)) &&
        (this.body == null ? feedbackCommentDTO.body == null : this.body.equals(feedbackCommentDTO.body)) &&
        (this.createdAt == null ? feedbackCommentDTO.createdAt == null : this.createdAt.equals(feedbackCommentDTO.createdAt)) &&
        (this.updatedAt == null ? feedbackCommentDTO.updatedAt == null : this.updatedAt.equals(feedbackCommentDTO.updatedAt)) &&
        (this.author == null ? feedbackCommentDTO.author == null : this.author.equals(feedbackCommentDTO.author)) &&
        (this.children == null ? feedbackCommentDTO.children == null : this.children.equals(feedbackCommentDTO.children));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.parentId == null ? 0: this.parentId.hashCode());
    result = 31 * result + (this.body == null ? 0: this.body.hashCode());
    result = 31 * result + (this.createdAt == null ? 0: this.createdAt.hashCode());
    result = 31 * result + (this.updatedAt == null ? 0: this.updatedAt.hashCode());
    result = 31 * result + (this.author == null ? 0: this.author.hashCode());
    result = 31 * result + (this.children == null ? 0: this.children.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeedbackCommentDTO {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  parentId: ").append(parentId).append("\n");
    sb.append("  body: ").append(body).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  updatedAt: ").append(updatedAt).append("\n");
    sb.append("  author: ").append(author).append("\n");
    sb.append("  children: ").append(children).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
