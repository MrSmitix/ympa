/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.math.BigDecimal;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация об условиях доставки для данной точки продаж.
 **/
@ApiModel(description = "Информация об условиях доставки для данной точки продаж.")
public class OutletDeliveryRuleDTO {
  
  @SerializedName("minDeliveryDays")
  private Integer minDeliveryDays = null;
  @SerializedName("maxDeliveryDays")
  private Integer maxDeliveryDays = null;
  @SerializedName("deliveryServiceId")
  private Long deliveryServiceId = null;
  @SerializedName("orderBefore")
  private Integer orderBefore = null;
  @SerializedName("priceFreePickup")
  private BigDecimal priceFreePickup = null;
  @SerializedName("unspecifiedDeliveryInterval")
  private Boolean unspecifiedDeliveryInterval = null;

  /**
   * Минимальный срок доставки товаров в точку продаж. Указан в рабочих днях.  Минимальное значение: `0` — доставка в день заказа.  Максимальное значение: `60`.  Допустимые сроки доставки (разница между `minDeliveryDays` и `maxDeliveryDays`) зависят от региона.  Для доставки по своему региону разница не должна превышать двух дней. Например, если `minDeliveryDays` равно 1, то для `maxDeliveryDays` допускаются значения от 1 до 3.  Для доставки в другие регионы:  * Если `minDeliveryDays` до 18 дней, разница не должна превышать четырех дней. Например, если `minDeliveryDays` равно 10, то для `maxDeliveryDays` допускаются значения от 10 до 14. * Если `minDeliveryDays` больше 18 дней, разница должна быть не больше чем в два раза. Например, если `minDeliveryDays` равно 21, то для `maxDeliveryDays` допускаются значения от 21 до 42.  Обязательный параметр, если `type=\"DEPOT\"` или `type=\"MIXED\"`.  Взаимоисключающий с параметром `unspecifiedDeliveryInterval`. 
   **/
  @ApiModelProperty(value = "Минимальный срок доставки товаров в точку продаж. Указан в рабочих днях.  Минимальное значение: `0` — доставка в день заказа.  Максимальное значение: `60`.  Допустимые сроки доставки (разница между `minDeliveryDays` и `maxDeliveryDays`) зависят от региона.  Для доставки по своему региону разница не должна превышать двух дней. Например, если `minDeliveryDays` равно 1, то для `maxDeliveryDays` допускаются значения от 1 до 3.  Для доставки в другие регионы:  * Если `minDeliveryDays` до 18 дней, разница не должна превышать четырех дней. Например, если `minDeliveryDays` равно 10, то для `maxDeliveryDays` допускаются значения от 10 до 14. * Если `minDeliveryDays` больше 18 дней, разница должна быть не больше чем в два раза. Например, если `minDeliveryDays` равно 21, то для `maxDeliveryDays` допускаются значения от 21 до 42.  Обязательный параметр, если `type=\"DEPOT\"` или `type=\"MIXED\"`.  Взаимоисключающий с параметром `unspecifiedDeliveryInterval`. ")
  public Integer getMinDeliveryDays() {
    return minDeliveryDays;
  }
  public void setMinDeliveryDays(Integer minDeliveryDays) {
    this.minDeliveryDays = minDeliveryDays;
  }

  /**
   * Максимальный срок доставки товаров в точку продаж. Указан в рабочих днях.  Минимальное значение: `0` — доставка в день заказа.  Максимальное значение: `60`.  Допустимые сроки доставки (разница между `minDeliveryDays` и `maxDeliveryDays`) зависят от региона.  Для доставки по своему региону разница не должна превышать двух дней. Например, если `minDeliveryDays` равно 1, то для `maxDeliveryDays` допускаются значения от 1 до 3.  Для доставки в другие регионы:  * Если `minDeliveryDays` до 18 дней, разница не должна превышать четырех дней. Например, если `minDeliveryDays` равно 10, то для `maxDeliveryDays` допускаются значения от 10 до 14. * Если `minDeliveryDays` больше 18 дней, разница должна быть не больше чем в два раза. Например, если `minDeliveryDays` равно 21, то для `maxDeliveryDays` допускаются значения от 21 до 42.  Обязательный параметр, если `type=\"DEPOT\"` или `type=\"MIXED\"`.  Взаимоисключающий с параметром `unspecifiedDeliveryInterval`. 
   **/
  @ApiModelProperty(value = "Максимальный срок доставки товаров в точку продаж. Указан в рабочих днях.  Минимальное значение: `0` — доставка в день заказа.  Максимальное значение: `60`.  Допустимые сроки доставки (разница между `minDeliveryDays` и `maxDeliveryDays`) зависят от региона.  Для доставки по своему региону разница не должна превышать двух дней. Например, если `minDeliveryDays` равно 1, то для `maxDeliveryDays` допускаются значения от 1 до 3.  Для доставки в другие регионы:  * Если `minDeliveryDays` до 18 дней, разница не должна превышать четырех дней. Например, если `minDeliveryDays` равно 10, то для `maxDeliveryDays` допускаются значения от 10 до 14. * Если `minDeliveryDays` больше 18 дней, разница должна быть не больше чем в два раза. Например, если `minDeliveryDays` равно 21, то для `maxDeliveryDays` допускаются значения от 21 до 42.  Обязательный параметр, если `type=\"DEPOT\"` или `type=\"MIXED\"`.  Взаимоисключающий с параметром `unspecifiedDeliveryInterval`. ")
  public Integer getMaxDeliveryDays() {
    return maxDeliveryDays;
  }
  public void setMaxDeliveryDays(Integer maxDeliveryDays) {
    this.maxDeliveryDays = maxDeliveryDays;
  }

  /**
   * Идентификатор службы доставки товаров в точку продаж.  Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md). 
   **/
  @ApiModelProperty(value = "Идентификатор службы доставки товаров в точку продаж.  Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md). ")
  public Long getDeliveryServiceId() {
    return deliveryServiceId;
  }
  public void setDeliveryServiceId(Long deliveryServiceId) {
    this.deliveryServiceId = deliveryServiceId;
  }

  /**
   * Час, до которого покупателю нужно сделать заказ, чтобы он был доставлен в точку продаж в сроки от `minDeliveryDays` до `maxDeliveryDays`.  Если покупатель оформит заказ после указанного часа, он будет доставлен в сроки от `minDeliveryDays` + 1 рабочий день до `maxDeliveryDays` + 1 рабочий день.  Значение по умолчанию: `24`. 
   * minimum: 0
   * maximum: 24
   **/
  @ApiModelProperty(value = "Час, до которого покупателю нужно сделать заказ, чтобы он был доставлен в точку продаж в сроки от `minDeliveryDays` до `maxDeliveryDays`.  Если покупатель оформит заказ после указанного часа, он будет доставлен в сроки от `minDeliveryDays` + 1 рабочий день до `maxDeliveryDays` + 1 рабочий день.  Значение по умолчанию: `24`. ")
  public Integer getOrderBefore() {
    return orderBefore;
  }
  public void setOrderBefore(Integer orderBefore) {
    this.orderBefore = orderBefore;
  }

  /**
   * Цена на товар, начиная с которой действует бесплатный самовывоз товара из точки продаж.
   **/
  @ApiModelProperty(value = "Цена на товар, начиная с которой действует бесплатный самовывоз товара из точки продаж.")
  public BigDecimal getPriceFreePickup() {
    return priceFreePickup;
  }
  public void setPriceFreePickup(BigDecimal priceFreePickup) {
    this.priceFreePickup = priceFreePickup;
  }

  /**
   * Признак доставки товаров в точку продаж на заказ.  Признак выставлен, если:  * точный срок доставки в точку продаж заранее неизвестен (например, если магазин собирает несколько заказов для отправки в точку или населенный пункт); * все товары изготавливаются или поставляются на заказ.  Возможные значения: * `true` — товары доставляются в точку продаж на заказ.  Параметр указывается только со значением `true`.  Взаимоисключающий с параметрами `minDeliveryDays` и `maxDeliveryDays`. 
   **/
  @ApiModelProperty(value = "Признак доставки товаров в точку продаж на заказ.  Признак выставлен, если:  * точный срок доставки в точку продаж заранее неизвестен (например, если магазин собирает несколько заказов для отправки в точку или населенный пункт); * все товары изготавливаются или поставляются на заказ.  Возможные значения: * `true` — товары доставляются в точку продаж на заказ.  Параметр указывается только со значением `true`.  Взаимоисключающий с параметрами `minDeliveryDays` и `maxDeliveryDays`. ")
  public Boolean getUnspecifiedDeliveryInterval() {
    return unspecifiedDeliveryInterval;
  }
  public void setUnspecifiedDeliveryInterval(Boolean unspecifiedDeliveryInterval) {
    this.unspecifiedDeliveryInterval = unspecifiedDeliveryInterval;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutletDeliveryRuleDTO outletDeliveryRuleDTO = (OutletDeliveryRuleDTO) o;
    return (this.minDeliveryDays == null ? outletDeliveryRuleDTO.minDeliveryDays == null : this.minDeliveryDays.equals(outletDeliveryRuleDTO.minDeliveryDays)) &&
        (this.maxDeliveryDays == null ? outletDeliveryRuleDTO.maxDeliveryDays == null : this.maxDeliveryDays.equals(outletDeliveryRuleDTO.maxDeliveryDays)) &&
        (this.deliveryServiceId == null ? outletDeliveryRuleDTO.deliveryServiceId == null : this.deliveryServiceId.equals(outletDeliveryRuleDTO.deliveryServiceId)) &&
        (this.orderBefore == null ? outletDeliveryRuleDTO.orderBefore == null : this.orderBefore.equals(outletDeliveryRuleDTO.orderBefore)) &&
        (this.priceFreePickup == null ? outletDeliveryRuleDTO.priceFreePickup == null : this.priceFreePickup.equals(outletDeliveryRuleDTO.priceFreePickup)) &&
        (this.unspecifiedDeliveryInterval == null ? outletDeliveryRuleDTO.unspecifiedDeliveryInterval == null : this.unspecifiedDeliveryInterval.equals(outletDeliveryRuleDTO.unspecifiedDeliveryInterval));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.minDeliveryDays == null ? 0: this.minDeliveryDays.hashCode());
    result = 31 * result + (this.maxDeliveryDays == null ? 0: this.maxDeliveryDays.hashCode());
    result = 31 * result + (this.deliveryServiceId == null ? 0: this.deliveryServiceId.hashCode());
    result = 31 * result + (this.orderBefore == null ? 0: this.orderBefore.hashCode());
    result = 31 * result + (this.priceFreePickup == null ? 0: this.priceFreePickup.hashCode());
    result = 31 * result + (this.unspecifiedDeliveryInterval == null ? 0: this.unspecifiedDeliveryInterval.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutletDeliveryRuleDTO {\n");
    
    sb.append("  minDeliveryDays: ").append(minDeliveryDays).append("\n");
    sb.append("  maxDeliveryDays: ").append(maxDeliveryDays).append("\n");
    sb.append("  deliveryServiceId: ").append(deliveryServiceId).append("\n");
    sb.append("  orderBefore: ").append(orderBefore).append("\n");
    sb.append("  priceFreePickup: ").append(priceFreePickup).append("\n");
    sb.append("  unspecifiedDeliveryInterval: ").append(unspecifiedDeliveryInterval).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
