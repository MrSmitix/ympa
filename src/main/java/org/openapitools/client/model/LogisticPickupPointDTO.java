/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.LogisticPointType;
import org.openapitools.client.model.PickupAddressDTO;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Описание пункта вывоза для возврата.
 **/
@ApiModel(description = "Описание пункта вывоза для возврата.")
public class LogisticPickupPointDTO {
  
  @SerializedName("id")
  private Long id = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("address")
  private PickupAddressDTO address = null;
  @SerializedName("instruction")
  private String instruction = null;
  @SerializedName("type")
  private LogisticPointType type = null;
  @SerializedName("logisticPartnerId")
  private Long logisticPartnerId = null;

  /**
   * Идентификатор пункта вывоза.
   **/
  @ApiModelProperty(value = "Идентификатор пункта вывоза.")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   * Название пункта вывоза.
   **/
  @ApiModelProperty(value = "Название пункта вывоза.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public PickupAddressDTO getAddress() {
    return address;
  }
  public void setAddress(PickupAddressDTO address) {
    this.address = address;
  }

  /**
   * Дополнительные инструкции к вывозу.
   **/
  @ApiModelProperty(value = "Дополнительные инструкции к вывозу.")
  public String getInstruction() {
    return instruction;
  }
  public void setInstruction(String instruction) {
    this.instruction = instruction;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public LogisticPointType getType() {
    return type;
  }
  public void setType(LogisticPointType type) {
    this.type = type;
  }

  /**
   * Идентификатор логистического партнера, к которому относится логистическая точка.
   **/
  @ApiModelProperty(value = "Идентификатор логистического партнера, к которому относится логистическая точка.")
  public Long getLogisticPartnerId() {
    return logisticPartnerId;
  }
  public void setLogisticPartnerId(Long logisticPartnerId) {
    this.logisticPartnerId = logisticPartnerId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogisticPickupPointDTO logisticPickupPointDTO = (LogisticPickupPointDTO) o;
    return (this.id == null ? logisticPickupPointDTO.id == null : this.id.equals(logisticPickupPointDTO.id)) &&
        (this.name == null ? logisticPickupPointDTO.name == null : this.name.equals(logisticPickupPointDTO.name)) &&
        (this.address == null ? logisticPickupPointDTO.address == null : this.address.equals(logisticPickupPointDTO.address)) &&
        (this.instruction == null ? logisticPickupPointDTO.instruction == null : this.instruction.equals(logisticPickupPointDTO.instruction)) &&
        (this.type == null ? logisticPickupPointDTO.type == null : this.type.equals(logisticPickupPointDTO.type)) &&
        (this.logisticPartnerId == null ? logisticPickupPointDTO.logisticPartnerId == null : this.logisticPartnerId.equals(logisticPickupPointDTO.logisticPartnerId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.address == null ? 0: this.address.hashCode());
    result = 31 * result + (this.instruction == null ? 0: this.instruction.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.logisticPartnerId == null ? 0: this.logisticPartnerId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogisticPickupPointDTO {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  address: ").append(address).append("\n");
    sb.append("  instruction: ").append(instruction).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  logisticPartnerId: ").append(logisticPartnerId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
