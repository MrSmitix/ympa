/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.OfferMappingDTO;
import org.openapitools.client.model.UpdateMappingsOfferDTO;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Список товаров.  В теле запроса можно передать от одного до 500 товаров.  Обязательный параметр. 
 **/
@ApiModel(description = "Список товаров.  В теле запроса можно передать от одного до 500 товаров.  Обязательный параметр. ")
public class UpdateOfferMappingEntryDTO {
  
  @SerializedName("mapping")
  private OfferMappingDTO mapping = null;
  @SerializedName("awaitingModerationMapping")
  private OfferMappingDTO awaitingModerationMapping = null;
  @SerializedName("rejectedMapping")
  private OfferMappingDTO rejectedMapping = null;
  @SerializedName("offer")
  private UpdateMappingsOfferDTO offer = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public OfferMappingDTO getMapping() {
    return mapping;
  }
  public void setMapping(OfferMappingDTO mapping) {
    this.mapping = mapping;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OfferMappingDTO getAwaitingModerationMapping() {
    return awaitingModerationMapping;
  }
  public void setAwaitingModerationMapping(OfferMappingDTO awaitingModerationMapping) {
    this.awaitingModerationMapping = awaitingModerationMapping;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OfferMappingDTO getRejectedMapping() {
    return rejectedMapping;
  }
  public void setRejectedMapping(OfferMappingDTO rejectedMapping) {
    this.rejectedMapping = rejectedMapping;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public UpdateMappingsOfferDTO getOffer() {
    return offer;
  }
  public void setOffer(UpdateMappingsOfferDTO offer) {
    this.offer = offer;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateOfferMappingEntryDTO updateOfferMappingEntryDTO = (UpdateOfferMappingEntryDTO) o;
    return (this.mapping == null ? updateOfferMappingEntryDTO.mapping == null : this.mapping.equals(updateOfferMappingEntryDTO.mapping)) &&
        (this.awaitingModerationMapping == null ? updateOfferMappingEntryDTO.awaitingModerationMapping == null : this.awaitingModerationMapping.equals(updateOfferMappingEntryDTO.awaitingModerationMapping)) &&
        (this.rejectedMapping == null ? updateOfferMappingEntryDTO.rejectedMapping == null : this.rejectedMapping.equals(updateOfferMappingEntryDTO.rejectedMapping)) &&
        (this.offer == null ? updateOfferMappingEntryDTO.offer == null : this.offer.equals(updateOfferMappingEntryDTO.offer));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.mapping == null ? 0: this.mapping.hashCode());
    result = 31 * result + (this.awaitingModerationMapping == null ? 0: this.awaitingModerationMapping.hashCode());
    result = 31 * result + (this.rejectedMapping == null ? 0: this.rejectedMapping.hashCode());
    result = 31 * result + (this.offer == null ? 0: this.offer.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateOfferMappingEntryDTO {\n");
    
    sb.append("  mapping: ").append(mapping).append("\n");
    sb.append("  awaitingModerationMapping: ").append(awaitingModerationMapping).append("\n");
    sb.append("  rejectedMapping: ").append(rejectedMapping).append("\n");
    sb.append("  offer: ").append(offer).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
