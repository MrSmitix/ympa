/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.BriefOrderItemInstanceDTO;
import org.openapitools.client.model.OrderBoxLayoutPartialCountDTO;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о товаре в коробке.
 **/
@ApiModel(description = "Информация о товаре в коробке.")
public class OrderBoxLayoutItemDTO {
  
  @SerializedName("id")
  private Long id = null;
  @SerializedName("fullCount")
  private Integer fullCount = null;
  @SerializedName("partialCount")
  private OrderBoxLayoutPartialCountDTO partialCount = null;
  @SerializedName("instances")
  private List<BriefOrderItemInstanceDTO> instances = null;

  /**
   * Идентификатор товара в заказе.  {% cut \"Где его взять\" %}  Идентификатор приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`.  {% endcut %}   
   **/
  @ApiModelProperty(required = true, value = "Идентификатор товара в заказе.  {% cut \"Где его взять\" %}  Идентификатор приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`.  {% endcut %}   ")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   * Количество единиц товара в коробке.  Используйте это поле, если в коробке поедут целые товары, не разделенные на части. Не используйте это поле одновременно с `partialCount`. 
   * minimum: 1
   **/
  @ApiModelProperty(value = "Количество единиц товара в коробке.  Используйте это поле, если в коробке поедут целые товары, не разделенные на части. Не используйте это поле одновременно с `partialCount`. ")
  public Integer getFullCount() {
    return fullCount;
  }
  public void setFullCount(Integer fullCount) {
    this.fullCount = fullCount;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OrderBoxLayoutPartialCountDTO getPartialCount() {
    return partialCount;
  }
  public void setPartialCount(OrderBoxLayoutPartialCountDTO partialCount) {
    this.partialCount = partialCount;
  }

  /**
   * Переданные вами коды маркировки.
   **/
  @ApiModelProperty(value = "Переданные вами коды маркировки.")
  public List<BriefOrderItemInstanceDTO> getInstances() {
    return instances;
  }
  public void setInstances(List<BriefOrderItemInstanceDTO> instances) {
    this.instances = instances;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderBoxLayoutItemDTO orderBoxLayoutItemDTO = (OrderBoxLayoutItemDTO) o;
    return (this.id == null ? orderBoxLayoutItemDTO.id == null : this.id.equals(orderBoxLayoutItemDTO.id)) &&
        (this.fullCount == null ? orderBoxLayoutItemDTO.fullCount == null : this.fullCount.equals(orderBoxLayoutItemDTO.fullCount)) &&
        (this.partialCount == null ? orderBoxLayoutItemDTO.partialCount == null : this.partialCount.equals(orderBoxLayoutItemDTO.partialCount)) &&
        (this.instances == null ? orderBoxLayoutItemDTO.instances == null : this.instances.equals(orderBoxLayoutItemDTO.instances));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.fullCount == null ? 0: this.fullCount.hashCode());
    result = 31 * result + (this.partialCount == null ? 0: this.partialCount.hashCode());
    result = 31 * result + (this.instances == null ? 0: this.instances.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderBoxLayoutItemDTO {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  fullCount: ").append(fullCount).append("\n");
    sb.append("  partialCount: ").append(partialCount).append("\n");
    sb.append("  instances: ").append(instances).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
