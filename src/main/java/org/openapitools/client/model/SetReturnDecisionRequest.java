/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ReturnRequestDecisionType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Решения по позиции в возврате.
 **/
@ApiModel(description = "Решения по позиции в возврате.")
public class SetReturnDecisionRequest {
  
  @SerializedName("returnItemId")
  private Long returnItemId = null;
  @SerializedName("decisionType")
  private ReturnRequestDecisionType decisionType = null;
  @SerializedName("comment")
  private String comment = null;

  /**
   * Идентификатор товара в возврате.
   **/
  @ApiModelProperty(required = true, value = "Идентификатор товара в возврате.")
  public Long getReturnItemId() {
    return returnItemId;
  }
  public void setReturnItemId(Long returnItemId) {
    this.returnItemId = returnItemId;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public ReturnRequestDecisionType getDecisionType() {
    return decisionType;
  }
  public void setDecisionType(ReturnRequestDecisionType decisionType) {
    this.decisionType = decisionType;
  }

  /**
   * Комментарий к решению. Укажите:  * для `REFUND_MONEY_INCLUDING_SHIPMENT`— стоимость обратной пересылки;  * для `REPAIR` — когда вы устраните недостатки товара;  * для `DECLINE_REFUND` — причину отказа;  * для `OTHER_DECISION` — какое решение вы предлагаете. 
   **/
  @ApiModelProperty(value = "Комментарий к решению. Укажите:  * для `REFUND_MONEY_INCLUDING_SHIPMENT`— стоимость обратной пересылки;  * для `REPAIR` — когда вы устраните недостатки товара;  * для `DECLINE_REFUND` — причину отказа;  * для `OTHER_DECISION` — какое решение вы предлагаете. ")
  public String getComment() {
    return comment;
  }
  public void setComment(String comment) {
    this.comment = comment;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SetReturnDecisionRequest setReturnDecisionRequest = (SetReturnDecisionRequest) o;
    return (this.returnItemId == null ? setReturnDecisionRequest.returnItemId == null : this.returnItemId.equals(setReturnDecisionRequest.returnItemId)) &&
        (this.decisionType == null ? setReturnDecisionRequest.decisionType == null : this.decisionType.equals(setReturnDecisionRequest.decisionType)) &&
        (this.comment == null ? setReturnDecisionRequest.comment == null : this.comment.equals(setReturnDecisionRequest.comment));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.returnItemId == null ? 0: this.returnItemId.hashCode());
    result = 31 * result + (this.decisionType == null ? 0: this.decisionType.hashCode());
    result = 31 * result + (this.comment == null ? 0: this.comment.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SetReturnDecisionRequest {\n");
    
    sb.append("  returnItemId: ").append(returnItemId).append("\n");
    sb.append("  decisionType: ").append(decisionType).append("\n");
    sb.append("  comment: ").append(comment).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
