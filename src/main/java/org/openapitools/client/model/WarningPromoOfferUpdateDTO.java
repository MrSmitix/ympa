/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.PromoOfferUpdateWarningDTO;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Описание предупреждения, которое появилось при добавлении товара.
 **/
@ApiModel(description = "Описание предупреждения, которое появилось при добавлении товара.")
public class WarningPromoOfferUpdateDTO {
  
  @SerializedName("offerId")
  private String offerId = null;
  @SerializedName("warnings")
  private List<PromoOfferUpdateWarningDTO> warnings = null;

  /**
   * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
   **/
  @ApiModelProperty(required = true, value = "Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) ")
  public String getOfferId() {
    return offerId;
  }
  public void setOfferId(String offerId) {
    this.offerId = offerId;
  }

  /**
   * Предупреждения, которые появились при добавлении товара в акцию или изменении его цен.
   **/
  @ApiModelProperty(required = true, value = "Предупреждения, которые появились при добавлении товара в акцию или изменении его цен.")
  public List<PromoOfferUpdateWarningDTO> getWarnings() {
    return warnings;
  }
  public void setWarnings(List<PromoOfferUpdateWarningDTO> warnings) {
    this.warnings = warnings;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WarningPromoOfferUpdateDTO warningPromoOfferUpdateDTO = (WarningPromoOfferUpdateDTO) o;
    return (this.offerId == null ? warningPromoOfferUpdateDTO.offerId == null : this.offerId.equals(warningPromoOfferUpdateDTO.offerId)) &&
        (this.warnings == null ? warningPromoOfferUpdateDTO.warnings == null : this.warnings.equals(warningPromoOfferUpdateDTO.warnings));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.offerId == null ? 0: this.offerId.hashCode());
    result = 31 * result + (this.warnings == null ? 0: this.warnings.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class WarningPromoOfferUpdateDTO {\n");
    
    sb.append("  offerId: ").append(offerId).append("\n");
    sb.append("  warnings: ").append(warnings).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
