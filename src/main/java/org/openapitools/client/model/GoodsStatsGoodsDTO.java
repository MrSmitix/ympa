/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.math.BigDecimal;
import java.util.*;
import org.openapitools.client.model.GoodsStatsWarehouseDTO;
import org.openapitools.client.model.GoodsStatsWeightDimensionsDTO;
import org.openapitools.client.model.TariffDTO;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о товаре.
 **/
@ApiModel(description = "Информация о товаре.")
public class GoodsStatsGoodsDTO {
  
  @SerializedName("shopSku")
  private String shopSku = null;
  @SerializedName("marketSku")
  private Long marketSku = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("price")
  private BigDecimal price = null;
  @SerializedName("categoryId")
  private Long categoryId = null;
  @SerializedName("categoryName")
  private String categoryName = null;
  @SerializedName("weightDimensions")
  private GoodsStatsWeightDimensionsDTO weightDimensions = null;
  @SerializedName("warehouses")
  private List<GoodsStatsWarehouseDTO> warehouses = null;
  @SerializedName("tariffs")
  private List<TariffDTO> tariffs = null;
  @SerializedName("pictures")
  private List<String> pictures = null;

  /**
   * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
   **/
  @ApiModelProperty(value = "Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) ")
  public String getShopSku() {
    return shopSku;
  }
  public void setShopSku(String shopSku) {
    this.shopSku = shopSku;
  }

  /**
   * SKU на Маркете.
   **/
  @ApiModelProperty(value = "SKU на Маркете.")
  public Long getMarketSku() {
    return marketSku;
  }
  public void setMarketSku(Long marketSku) {
    this.marketSku = marketSku;
  }

  /**
   * Название товара.
   **/
  @ApiModelProperty(value = "Название товара.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Цена на товар в валюте, которая установлена [в кабинете продавца на Маркете](https://partner.market.yandex.ru/).
   **/
  @ApiModelProperty(value = "Цена на товар в валюте, которая установлена [в кабинете продавца на Маркете](https://partner.market.yandex.ru/).")
  public BigDecimal getPrice() {
    return price;
  }
  public void setPrice(BigDecimal price) {
    this.price = price;
  }

  /**
   * Идентификатор категории товара на Маркете.
   **/
  @ApiModelProperty(value = "Идентификатор категории товара на Маркете.")
  public Long getCategoryId() {
    return categoryId;
  }
  public void setCategoryId(Long categoryId) {
    this.categoryId = categoryId;
  }

  /**
   * Название категории товара на Маркете.
   **/
  @ApiModelProperty(value = "Название категории товара на Маркете.")
  public String getCategoryName() {
    return categoryName;
  }
  public void setCategoryName(String categoryName) {
    this.categoryName = categoryName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public GoodsStatsWeightDimensionsDTO getWeightDimensions() {
    return weightDimensions;
  }
  public void setWeightDimensions(GoodsStatsWeightDimensionsDTO weightDimensions) {
    this.weightDimensions = weightDimensions;
  }

  /**
   * Информация о складах, на которых хранится товар.  Параметр не приходит, если товара нет ни на одном складе. 
   **/
  @ApiModelProperty(value = "Информация о складах, на которых хранится товар.  Параметр не приходит, если товара нет ни на одном складе. ")
  public List<GoodsStatsWarehouseDTO> getWarehouses() {
    return warehouses;
  }
  public void setWarehouses(List<GoodsStatsWarehouseDTO> warehouses) {
    this.warehouses = warehouses;
  }

  /**
   * Информация о тарифах, по которым нужно заплатить за услуги Маркета.  По некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели FBS стоимость услуги `SORTING` (обработка заказа) зависит от способа отгрузки и количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/). 
   **/
  @ApiModelProperty(value = "Информация о тарифах, по которым нужно заплатить за услуги Маркета.  По некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели FBS стоимость услуги `SORTING` (обработка заказа) зависит от способа отгрузки и количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/). ")
  public List<TariffDTO> getTariffs() {
    return tariffs;
  }
  public void setTariffs(List<TariffDTO> tariffs) {
    this.tariffs = tariffs;
  }

  /**
   * Ссылки (URL) изображений товара в хорошем качестве.
   **/
  @ApiModelProperty(value = "Ссылки (URL) изображений товара в хорошем качестве.")
  public List<String> getPictures() {
    return pictures;
  }
  public void setPictures(List<String> pictures) {
    this.pictures = pictures;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoodsStatsGoodsDTO goodsStatsGoodsDTO = (GoodsStatsGoodsDTO) o;
    return (this.shopSku == null ? goodsStatsGoodsDTO.shopSku == null : this.shopSku.equals(goodsStatsGoodsDTO.shopSku)) &&
        (this.marketSku == null ? goodsStatsGoodsDTO.marketSku == null : this.marketSku.equals(goodsStatsGoodsDTO.marketSku)) &&
        (this.name == null ? goodsStatsGoodsDTO.name == null : this.name.equals(goodsStatsGoodsDTO.name)) &&
        (this.price == null ? goodsStatsGoodsDTO.price == null : this.price.equals(goodsStatsGoodsDTO.price)) &&
        (this.categoryId == null ? goodsStatsGoodsDTO.categoryId == null : this.categoryId.equals(goodsStatsGoodsDTO.categoryId)) &&
        (this.categoryName == null ? goodsStatsGoodsDTO.categoryName == null : this.categoryName.equals(goodsStatsGoodsDTO.categoryName)) &&
        (this.weightDimensions == null ? goodsStatsGoodsDTO.weightDimensions == null : this.weightDimensions.equals(goodsStatsGoodsDTO.weightDimensions)) &&
        (this.warehouses == null ? goodsStatsGoodsDTO.warehouses == null : this.warehouses.equals(goodsStatsGoodsDTO.warehouses)) &&
        (this.tariffs == null ? goodsStatsGoodsDTO.tariffs == null : this.tariffs.equals(goodsStatsGoodsDTO.tariffs)) &&
        (this.pictures == null ? goodsStatsGoodsDTO.pictures == null : this.pictures.equals(goodsStatsGoodsDTO.pictures));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.shopSku == null ? 0: this.shopSku.hashCode());
    result = 31 * result + (this.marketSku == null ? 0: this.marketSku.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.price == null ? 0: this.price.hashCode());
    result = 31 * result + (this.categoryId == null ? 0: this.categoryId.hashCode());
    result = 31 * result + (this.categoryName == null ? 0: this.categoryName.hashCode());
    result = 31 * result + (this.weightDimensions == null ? 0: this.weightDimensions.hashCode());
    result = 31 * result + (this.warehouses == null ? 0: this.warehouses.hashCode());
    result = 31 * result + (this.tariffs == null ? 0: this.tariffs.hashCode());
    result = 31 * result + (this.pictures == null ? 0: this.pictures.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoodsStatsGoodsDTO {\n");
    
    sb.append("  shopSku: ").append(shopSku).append("\n");
    sb.append("  marketSku: ").append(marketSku).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  price: ").append(price).append("\n");
    sb.append("  categoryId: ").append(categoryId).append("\n");
    sb.append("  categoryName: ").append(categoryName).append("\n");
    sb.append("  weightDimensions: ").append(weightDimensions).append("\n");
    sb.append("  warehouses: ").append(warehouses).append("\n");
    sb.append("  tariffs: ").append(tariffs).append("\n");
    sb.append("  pictures: ").append(pictures).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
