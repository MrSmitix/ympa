/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.Date;
import org.openapitools.client.model.ChatMessagePayloadDTO;
import org.openapitools.client.model.ChatMessageSenderType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о сообщениях.
 **/
@ApiModel(description = "Информация о сообщениях.")
public class ChatMessageDTO {
  
  @SerializedName("messageId")
  private Long messageId = null;
  @SerializedName("createdAt")
  private Date createdAt = null;
  @SerializedName("sender")
  private ChatMessageSenderType sender = null;
  @SerializedName("message")
  private String message = null;
  @SerializedName("payload")
  private List<ChatMessagePayloadDTO> payload = null;

  /**
   * Идентификатор сообщения.
   **/
  @ApiModelProperty(required = true, value = "Идентификатор сообщения.")
  public Long getMessageId() {
    return messageId;
  }
  public void setMessageId(Long messageId) {
    this.messageId = messageId;
  }

  /**
   * Дата и время создания сообщения.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`. 
   **/
  @ApiModelProperty(required = true, value = "Дата и время создания сообщения.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`. ")
  public Date getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public ChatMessageSenderType getSender() {
    return sender;
  }
  public void setSender(ChatMessageSenderType sender) {
    this.sender = sender;
  }

  /**
   * Текст сообщения.  Необязательный параметр, если возвращается параметр `payload`. 
   **/
  @ApiModelProperty(value = "Текст сообщения.  Необязательный параметр, если возвращается параметр `payload`. ")
  public String getMessage() {
    return message;
  }
  public void setMessage(String message) {
    this.message = message;
  }

  /**
   * Информация о приложенных к сообщению файлах.  Необязательный параметр, если возвращается параметр `message`. 
   **/
  @ApiModelProperty(value = "Информация о приложенных к сообщению файлах.  Необязательный параметр, если возвращается параметр `message`. ")
  public List<ChatMessagePayloadDTO> getPayload() {
    return payload;
  }
  public void setPayload(List<ChatMessagePayloadDTO> payload) {
    this.payload = payload;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChatMessageDTO chatMessageDTO = (ChatMessageDTO) o;
    return (this.messageId == null ? chatMessageDTO.messageId == null : this.messageId.equals(chatMessageDTO.messageId)) &&
        (this.createdAt == null ? chatMessageDTO.createdAt == null : this.createdAt.equals(chatMessageDTO.createdAt)) &&
        (this.sender == null ? chatMessageDTO.sender == null : this.sender.equals(chatMessageDTO.sender)) &&
        (this.message == null ? chatMessageDTO.message == null : this.message.equals(chatMessageDTO.message)) &&
        (this.payload == null ? chatMessageDTO.payload == null : this.payload.equals(chatMessageDTO.payload));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.messageId == null ? 0: this.messageId.hashCode());
    result = 31 * result + (this.createdAt == null ? 0: this.createdAt.hashCode());
    result = 31 * result + (this.sender == null ? 0: this.sender.hashCode());
    result = 31 * result + (this.message == null ? 0: this.message.hashCode());
    result = 31 * result + (this.payload == null ? 0: this.payload.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChatMessageDTO {\n");
    
    sb.append("  messageId: ").append(messageId).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  sender: ").append(sender).append("\n");
    sb.append("  message: ").append(message).append("\n");
    sb.append("  payload: ").append(payload).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
