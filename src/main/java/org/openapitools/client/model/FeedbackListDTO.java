/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.FeedbackDTO;
import org.openapitools.client.model.ScrollingPagerDTO;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Отзывы пользователей Яндекс Маркета об указанном магазине.
 **/
@ApiModel(description = "Отзывы пользователей Яндекс Маркета об указанном магазине.")
public class FeedbackListDTO {
  
  @SerializedName("paging")
  private ScrollingPagerDTO paging = null;
  @SerializedName("feedbackList")
  private List<FeedbackDTO> feedbackList = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ScrollingPagerDTO getPaging() {
    return paging;
  }
  public void setPaging(ScrollingPagerDTO paging) {
    this.paging = paging;
  }

  /**
   * Список отзывов.  Содержит не более 20 отзывов. 
   **/
  @ApiModelProperty(required = true, value = "Список отзывов.  Содержит не более 20 отзывов. ")
  public List<FeedbackDTO> getFeedbackList() {
    return feedbackList;
  }
  public void setFeedbackList(List<FeedbackDTO> feedbackList) {
    this.feedbackList = feedbackList;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeedbackListDTO feedbackListDTO = (FeedbackListDTO) o;
    return (this.paging == null ? feedbackListDTO.paging == null : this.paging.equals(feedbackListDTO.paging)) &&
        (this.feedbackList == null ? feedbackListDTO.feedbackList == null : this.feedbackList.equals(feedbackListDTO.feedbackList));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.paging == null ? 0: this.paging.hashCode());
    result = 31 * result + (this.feedbackList == null ? 0: this.feedbackList.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeedbackListDTO {\n");
    
    sb.append("  paging: ").append(paging).append("\n");
    sb.append("  feedbackList: ").append(feedbackList).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
