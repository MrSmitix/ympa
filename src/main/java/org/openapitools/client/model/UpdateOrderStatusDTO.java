/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.OrderStatusType;
import org.openapitools.client.model.OrderSubstatusType;
import org.openapitools.client.model.OrderUpdateStatusType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Список заказов.
 **/
@ApiModel(description = "Список заказов.")
public class UpdateOrderStatusDTO {
  
  @SerializedName("id")
  private Long id = null;
  @SerializedName("status")
  private OrderStatusType status = null;
  @SerializedName("substatus")
  private OrderSubstatusType substatus = null;
  @SerializedName("updateStatus")
  private OrderUpdateStatusType updateStatus = null;
  @SerializedName("errorDetails")
  private String errorDetails = null;

  /**
   * Идентификатор заказа.
   **/
  @ApiModelProperty(value = "Идентификатор заказа.")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OrderStatusType getStatus() {
    return status;
  }
  public void setStatus(OrderStatusType status) {
    this.status = status;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OrderSubstatusType getSubstatus() {
    return substatus;
  }
  public void setSubstatus(OrderSubstatusType substatus) {
    this.substatus = substatus;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OrderUpdateStatusType getUpdateStatus() {
    return updateStatus;
  }
  public void setUpdateStatus(OrderUpdateStatusType updateStatus) {
    this.updateStatus = updateStatus;
  }

  /**
   * Ошибка при изменении статуса заказа. Содержит описание ошибки и идентификатор заказа.  Возвращается, если параметр `updateStatus` принимает значение `ERROR`. 
   **/
  @ApiModelProperty(value = "Ошибка при изменении статуса заказа. Содержит описание ошибки и идентификатор заказа.  Возвращается, если параметр `updateStatus` принимает значение `ERROR`. ")
  public String getErrorDetails() {
    return errorDetails;
  }
  public void setErrorDetails(String errorDetails) {
    this.errorDetails = errorDetails;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateOrderStatusDTO updateOrderStatusDTO = (UpdateOrderStatusDTO) o;
    return (this.id == null ? updateOrderStatusDTO.id == null : this.id.equals(updateOrderStatusDTO.id)) &&
        (this.status == null ? updateOrderStatusDTO.status == null : this.status.equals(updateOrderStatusDTO.status)) &&
        (this.substatus == null ? updateOrderStatusDTO.substatus == null : this.substatus.equals(updateOrderStatusDTO.substatus)) &&
        (this.updateStatus == null ? updateOrderStatusDTO.updateStatus == null : this.updateStatus.equals(updateOrderStatusDTO.updateStatus)) &&
        (this.errorDetails == null ? updateOrderStatusDTO.errorDetails == null : this.errorDetails.equals(updateOrderStatusDTO.errorDetails));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    result = 31 * result + (this.substatus == null ? 0: this.substatus.hashCode());
    result = 31 * result + (this.updateStatus == null ? 0: this.updateStatus.hashCode());
    result = 31 * result + (this.errorDetails == null ? 0: this.errorDetails.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateOrderStatusDTO {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  status: ").append(status).append("\n");
    sb.append("  substatus: ").append(substatus).append("\n");
    sb.append("  updateStatus: ").append(updateStatus).append("\n");
    sb.append("  errorDetails: ").append(errorDetails).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
