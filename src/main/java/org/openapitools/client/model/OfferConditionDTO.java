/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.OfferConditionQualityType;
import org.openapitools.client.model.OfferConditionType;



/**
  * Состояние уцененного товара. 
 **/

public class OfferConditionDTO  {
  
  private OfferConditionType type;

  private OfferConditionQualityType quality;

 /**
   * Описание товара. Подробно опишите дефекты, насколько они заметны и где их искать. 
  **/
  private String reason;

 /**
   * Get type
   * @return type
  **/
  public OfferConditionType getType() {
    return type;
  }

  /**
    * Set type
  **/
  public void setType(OfferConditionType type) {
    this.type = type;
  }

  public OfferConditionDTO type(OfferConditionType type) {
    this.type = type;
    return this;
  }

 /**
   * Get quality
   * @return quality
  **/
  public OfferConditionQualityType getQuality() {
    return quality;
  }

  /**
    * Set quality
  **/
  public void setQuality(OfferConditionQualityType quality) {
    this.quality = quality;
  }

  public OfferConditionDTO quality(OfferConditionQualityType quality) {
    this.quality = quality;
    return this;
  }

 /**
   * Описание товара. Подробно опишите дефекты, насколько они заметны и где их искать. 
   * @return reason
  **/
  public String getReason() {
    return reason;
  }

  /**
    * Set reason
  **/
  public void setReason(String reason) {
    this.reason = reason;
  }

  public OfferConditionDTO reason(String reason) {
    this.reason = reason;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OfferConditionDTO {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

