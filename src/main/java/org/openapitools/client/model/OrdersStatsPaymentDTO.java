/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.math.BigDecimal;
import java.util.Date;
import org.openapitools.client.model.OrdersStatsPaymentOrderDTO;
import org.openapitools.client.model.OrdersStatsPaymentSourceType;
import org.openapitools.client.model.OrdersStatsPaymentType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о денежных переводах по заказу.
 **/
@ApiModel(description = "Информация о денежных переводах по заказу.")
public class OrdersStatsPaymentDTO {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("date")
  private Date date = null;
  @SerializedName("type")
  private OrdersStatsPaymentType type = null;
  @SerializedName("source")
  private OrdersStatsPaymentSourceType source = null;
  @SerializedName("total")
  private BigDecimal total = null;
  @SerializedName("paymentOrder")
  private OrdersStatsPaymentOrderDTO paymentOrder = null;

  /**
   * Идентификатор денежного перевода.
   **/
  @ApiModelProperty(value = "Идентификатор денежного перевода.")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Дата денежного перевода.  Формат даты: `ГГГГ-ММ-ДД`. 
   **/
  @ApiModelProperty(value = "Дата денежного перевода.  Формат даты: `ГГГГ-ММ-ДД`. ")
  public Date getDate() {
    return date;
  }
  public void setDate(Date date) {
    this.date = date;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OrdersStatsPaymentType getType() {
    return type;
  }
  public void setType(OrdersStatsPaymentType type) {
    this.type = type;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OrdersStatsPaymentSourceType getSource() {
    return source;
  }
  public void setSource(OrdersStatsPaymentSourceType source) {
    this.source = source;
  }

  /**
   * Сумма денежного перевода. Значение указывается в рублях независимо от способа денежного перевода. Точность — два знака после запятой. 
   **/
  @ApiModelProperty(value = "Сумма денежного перевода. Значение указывается в рублях независимо от способа денежного перевода. Точность — два знака после запятой. ")
  public BigDecimal getTotal() {
    return total;
  }
  public void setTotal(BigDecimal total) {
    this.total = total;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OrdersStatsPaymentOrderDTO getPaymentOrder() {
    return paymentOrder;
  }
  public void setPaymentOrder(OrdersStatsPaymentOrderDTO paymentOrder) {
    this.paymentOrder = paymentOrder;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrdersStatsPaymentDTO ordersStatsPaymentDTO = (OrdersStatsPaymentDTO) o;
    return (this.id == null ? ordersStatsPaymentDTO.id == null : this.id.equals(ordersStatsPaymentDTO.id)) &&
        (this.date == null ? ordersStatsPaymentDTO.date == null : this.date.equals(ordersStatsPaymentDTO.date)) &&
        (this.type == null ? ordersStatsPaymentDTO.type == null : this.type.equals(ordersStatsPaymentDTO.type)) &&
        (this.source == null ? ordersStatsPaymentDTO.source == null : this.source.equals(ordersStatsPaymentDTO.source)) &&
        (this.total == null ? ordersStatsPaymentDTO.total == null : this.total.equals(ordersStatsPaymentDTO.total)) &&
        (this.paymentOrder == null ? ordersStatsPaymentDTO.paymentOrder == null : this.paymentOrder.equals(ordersStatsPaymentDTO.paymentOrder));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.date == null ? 0: this.date.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.source == null ? 0: this.source.hashCode());
    result = 31 * result + (this.total == null ? 0: this.total.hashCode());
    result = 31 * result + (this.paymentOrder == null ? 0: this.paymentOrder.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrdersStatsPaymentDTO {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  date: ").append(date).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  source: ").append(source).append("\n");
    sb.append("  total: ").append(total).append("\n");
    sb.append("  paymentOrder: ").append(paymentOrder).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
