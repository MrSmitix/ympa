/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.CurrencyType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Настройки кабинета.
 **/
@ApiModel(description = "Настройки кабинета.")
public class BusinessSettingsDTO {
  
  @SerializedName("onlyDefaultPrice")
  private Boolean onlyDefaultPrice = null;
  @SerializedName("currency")
  private CurrencyType currency = null;

  /**
   * Можно ли установить только [базовую цену](*rule): * `false` — можно задать и базовую цену, и цены в конкретных магазинах. * `true` — можно задать только базовую цену. 
   **/
  @ApiModelProperty(value = "Можно ли установить только [базовую цену](*rule): * `false` — можно задать и базовую цену, и цены в конкретных магазинах. * `true` — можно задать только базовую цену. ")
  public Boolean getOnlyDefaultPrice() {
    return onlyDefaultPrice;
  }
  public void setOnlyDefaultPrice(Boolean onlyDefaultPrice) {
    this.onlyDefaultPrice = onlyDefaultPrice;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public CurrencyType getCurrency() {
    return currency;
  }
  public void setCurrency(CurrencyType currency) {
    this.currency = currency;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BusinessSettingsDTO businessSettingsDTO = (BusinessSettingsDTO) o;
    return (this.onlyDefaultPrice == null ? businessSettingsDTO.onlyDefaultPrice == null : this.onlyDefaultPrice.equals(businessSettingsDTO.onlyDefaultPrice)) &&
        (this.currency == null ? businessSettingsDTO.currency == null : this.currency.equals(businessSettingsDTO.currency));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.onlyDefaultPrice == null ? 0: this.onlyDefaultPrice.hashCode());
    result = 31 * result + (this.currency == null ? 0: this.currency.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class BusinessSettingsDTO {\n");
    
    sb.append("  onlyDefaultPrice: ").append(onlyDefaultPrice).append("\n");
    sb.append("  currency: ").append(currency).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
