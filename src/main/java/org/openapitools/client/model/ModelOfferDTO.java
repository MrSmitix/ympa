/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.math.BigDecimal;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о предложении.
 **/
@ApiModel(description = "Информация о предложении.")
public class ModelOfferDTO {
  
  @SerializedName("discount")
  private Integer discount = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("pos")
  private Integer pos = null;
  @SerializedName("preDiscountPrice")
  private BigDecimal preDiscountPrice = null;
  @SerializedName("price")
  private BigDecimal price = null;
  @SerializedName("regionId")
  private Long regionId = null;
  @SerializedName("shippingCost")
  private BigDecimal shippingCost = null;
  @SerializedName("shopName")
  private String shopName = null;
  @SerializedName("shopRating")
  private Integer shopRating = null;
  @SerializedName("inStock")
  private Integer inStock = null;

  /**
   * Скидка на предложение в процентах.
   **/
  @ApiModelProperty(value = "Скидка на предложение в процентах.")
  public Integer getDiscount() {
    return discount;
  }
  public void setDiscount(Integer discount) {
    this.discount = discount;
  }

  /**
   * Наименование предложения.
   **/
  @ApiModelProperty(value = "Наименование предложения.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Позиция предложения в выдаче Маркета на карточке модели.
   **/
  @ApiModelProperty(value = "Позиция предложения в выдаче Маркета на карточке модели.")
  public Integer getPos() {
    return pos;
  }
  public void setPos(Integer pos) {
    this.pos = pos;
  }

  /**
   * Цена предложения без скидки магазина.
   **/
  @ApiModelProperty(value = "Цена предложения без скидки магазина.")
  public BigDecimal getPreDiscountPrice() {
    return preDiscountPrice;
  }
  public void setPreDiscountPrice(BigDecimal preDiscountPrice) {
    this.preDiscountPrice = preDiscountPrice;
  }

  /**
   * Цена предложения без скидки, которую получает покупатель при оплате через Yandex Pay.
   **/
  @ApiModelProperty(value = "Цена предложения без скидки, которую получает покупатель при оплате через Yandex Pay.")
  public BigDecimal getPrice() {
    return price;
  }
  public void setPrice(BigDecimal price) {
    this.price = price;
  }

  /**
   * Идентификатор региона предложения (регион, откуда доставляется товар).  Сначала показываются предложения, доставляемые из региона, указанного в запросе в параметре `regionId`. Предложения, доставляемые из других регионов, показываются после них. 
   **/
  @ApiModelProperty(value = "Идентификатор региона предложения (регион, откуда доставляется товар).  Сначала показываются предложения, доставляемые из региона, указанного в запросе в параметре `regionId`. Предложения, доставляемые из других регионов, показываются после них. ")
  public Long getRegionId() {
    return regionId;
  }
  public void setRegionId(Long regionId) {
    this.regionId = regionId;
  }

  /**
   * Стоимость доставки товара в регион:  * `0` — доставка осуществляется бесплатно. * `-1` — магазин не осуществляет доставку этого товара (самовывоз).  Если стоимость доставки неизвестна, параметр не выводится. 
   **/
  @ApiModelProperty(value = "Стоимость доставки товара в регион:  * `0` — доставка осуществляется бесплатно. * `-1` — магазин не осуществляет доставку этого товара (самовывоз).  Если стоимость доставки неизвестна, параметр не выводится. ")
  public BigDecimal getShippingCost() {
    return shippingCost;
  }
  public void setShippingCost(BigDecimal shippingCost) {
    this.shippingCost = shippingCost;
  }

  /**
   * Название магазина (в том виде, в котором отображается на Маркете).
   **/
  @ApiModelProperty(value = "Название магазина (в том виде, в котором отображается на Маркете).")
  public String getShopName() {
    return shopName;
  }
  public void setShopName(String shopName) {
    this.shopName = shopName;
  }

  /**
   * Рейтинг магазина.  Возможные значения: * `-1` — у магазинов, недавно появившихся на Маркете, рейтинг появляется не сразу. До момента появления рейтинга для таких магазинов возвращается значение `-1`. * `1`. * `2`. * `3`. * `4`. * `5`. 
   **/
  @ApiModelProperty(value = "Рейтинг магазина.  Возможные значения: * `-1` — у магазинов, недавно появившихся на Маркете, рейтинг появляется не сразу. До момента появления рейтинга для таких магазинов возвращается значение `-1`. * `1`. * `2`. * `3`. * `4`. * `5`. ")
  public Integer getShopRating() {
    return shopRating;
  }
  public void setShopRating(Integer shopRating) {
    this.shopRating = shopRating;
  }

  /**
   * {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %} 
   **/
  @ApiModelProperty(value = "{% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %} ")
  public Integer getInStock() {
    return inStock;
  }
  public void setInStock(Integer inStock) {
    this.inStock = inStock;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelOfferDTO modelOfferDTO = (ModelOfferDTO) o;
    return (this.discount == null ? modelOfferDTO.discount == null : this.discount.equals(modelOfferDTO.discount)) &&
        (this.name == null ? modelOfferDTO.name == null : this.name.equals(modelOfferDTO.name)) &&
        (this.pos == null ? modelOfferDTO.pos == null : this.pos.equals(modelOfferDTO.pos)) &&
        (this.preDiscountPrice == null ? modelOfferDTO.preDiscountPrice == null : this.preDiscountPrice.equals(modelOfferDTO.preDiscountPrice)) &&
        (this.price == null ? modelOfferDTO.price == null : this.price.equals(modelOfferDTO.price)) &&
        (this.regionId == null ? modelOfferDTO.regionId == null : this.regionId.equals(modelOfferDTO.regionId)) &&
        (this.shippingCost == null ? modelOfferDTO.shippingCost == null : this.shippingCost.equals(modelOfferDTO.shippingCost)) &&
        (this.shopName == null ? modelOfferDTO.shopName == null : this.shopName.equals(modelOfferDTO.shopName)) &&
        (this.shopRating == null ? modelOfferDTO.shopRating == null : this.shopRating.equals(modelOfferDTO.shopRating)) &&
        (this.inStock == null ? modelOfferDTO.inStock == null : this.inStock.equals(modelOfferDTO.inStock));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.discount == null ? 0: this.discount.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.pos == null ? 0: this.pos.hashCode());
    result = 31 * result + (this.preDiscountPrice == null ? 0: this.preDiscountPrice.hashCode());
    result = 31 * result + (this.price == null ? 0: this.price.hashCode());
    result = 31 * result + (this.regionId == null ? 0: this.regionId.hashCode());
    result = 31 * result + (this.shippingCost == null ? 0: this.shippingCost.hashCode());
    result = 31 * result + (this.shopName == null ? 0: this.shopName.hashCode());
    result = 31 * result + (this.shopRating == null ? 0: this.shopRating.hashCode());
    result = 31 * result + (this.inStock == null ? 0: this.inStock.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelOfferDTO {\n");
    
    sb.append("  discount: ").append(discount).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  pos: ").append(pos).append("\n");
    sb.append("  preDiscountPrice: ").append(preDiscountPrice).append("\n");
    sb.append("  price: ").append(price).append("\n");
    sb.append("  regionId: ").append(regionId).append("\n");
    sb.append("  shippingCost: ").append(shippingCost).append("\n");
    sb.append("  shopName: ").append(shopName).append("\n");
    sb.append("  shopRating: ").append(shopRating).append("\n");
    sb.append("  inStock: ").append(inStock).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
