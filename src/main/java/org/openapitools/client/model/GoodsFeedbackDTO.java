/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import org.openapitools.client.model.GoodsFeedbackDescriptionDTO;
import org.openapitools.client.model.GoodsFeedbackIdentifiersDTO;
import org.openapitools.client.model.GoodsFeedbackMediaDTO;
import org.openapitools.client.model.GoodsFeedbackStatisticsDTO;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Отзыв о товаре.
 **/
@ApiModel(description = "Отзыв о товаре.")
public class GoodsFeedbackDTO {
  
  @SerializedName("feedbackId")
  private Long feedbackId = null;
  @SerializedName("createdAt")
  private Date createdAt = null;
  @SerializedName("needReaction")
  private Boolean needReaction = null;
  @SerializedName("identifiers")
  private GoodsFeedbackIdentifiersDTO identifiers = null;
  @SerializedName("author")
  private String author = null;
  @SerializedName("description")
  private GoodsFeedbackDescriptionDTO description = null;
  @SerializedName("media")
  private GoodsFeedbackMediaDTO media = null;
  @SerializedName("statistics")
  private GoodsFeedbackStatisticsDTO statistics = null;

  /**
   * Идентификатор отзыва. 
   **/
  @ApiModelProperty(required = true, value = "Идентификатор отзыва. ")
  public Long getFeedbackId() {
    return feedbackId;
  }
  public void setFeedbackId(Long feedbackId) {
    this.feedbackId = feedbackId;
  }

  /**
   * Дата и время создания отзыва.
   **/
  @ApiModelProperty(required = true, value = "Дата и время создания отзыва.")
  public Date getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  /**
   * Нужен ли ответ на отзыв.
   **/
  @ApiModelProperty(required = true, value = "Нужен ли ответ на отзыв.")
  public Boolean getNeedReaction() {
    return needReaction;
  }
  public void setNeedReaction(Boolean needReaction) {
    this.needReaction = needReaction;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public GoodsFeedbackIdentifiersDTO getIdentifiers() {
    return identifiers;
  }
  public void setIdentifiers(GoodsFeedbackIdentifiersDTO identifiers) {
    this.identifiers = identifiers;
  }

  /**
   * Имя автора отзыва.
   **/
  @ApiModelProperty(value = "Имя автора отзыва.")
  public String getAuthor() {
    return author;
  }
  public void setAuthor(String author) {
    this.author = author;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public GoodsFeedbackDescriptionDTO getDescription() {
    return description;
  }
  public void setDescription(GoodsFeedbackDescriptionDTO description) {
    this.description = description;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public GoodsFeedbackMediaDTO getMedia() {
    return media;
  }
  public void setMedia(GoodsFeedbackMediaDTO media) {
    this.media = media;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public GoodsFeedbackStatisticsDTO getStatistics() {
    return statistics;
  }
  public void setStatistics(GoodsFeedbackStatisticsDTO statistics) {
    this.statistics = statistics;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoodsFeedbackDTO goodsFeedbackDTO = (GoodsFeedbackDTO) o;
    return (this.feedbackId == null ? goodsFeedbackDTO.feedbackId == null : this.feedbackId.equals(goodsFeedbackDTO.feedbackId)) &&
        (this.createdAt == null ? goodsFeedbackDTO.createdAt == null : this.createdAt.equals(goodsFeedbackDTO.createdAt)) &&
        (this.needReaction == null ? goodsFeedbackDTO.needReaction == null : this.needReaction.equals(goodsFeedbackDTO.needReaction)) &&
        (this.identifiers == null ? goodsFeedbackDTO.identifiers == null : this.identifiers.equals(goodsFeedbackDTO.identifiers)) &&
        (this.author == null ? goodsFeedbackDTO.author == null : this.author.equals(goodsFeedbackDTO.author)) &&
        (this.description == null ? goodsFeedbackDTO.description == null : this.description.equals(goodsFeedbackDTO.description)) &&
        (this.media == null ? goodsFeedbackDTO.media == null : this.media.equals(goodsFeedbackDTO.media)) &&
        (this.statistics == null ? goodsFeedbackDTO.statistics == null : this.statistics.equals(goodsFeedbackDTO.statistics));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.feedbackId == null ? 0: this.feedbackId.hashCode());
    result = 31 * result + (this.createdAt == null ? 0: this.createdAt.hashCode());
    result = 31 * result + (this.needReaction == null ? 0: this.needReaction.hashCode());
    result = 31 * result + (this.identifiers == null ? 0: this.identifiers.hashCode());
    result = 31 * result + (this.author == null ? 0: this.author.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.media == null ? 0: this.media.hashCode());
    result = 31 * result + (this.statistics == null ? 0: this.statistics.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoodsFeedbackDTO {\n");
    
    sb.append("  feedbackId: ").append(feedbackId).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  needReaction: ").append(needReaction).append("\n");
    sb.append("  identifiers: ").append(identifiers).append("\n");
    sb.append("  author: ").append(author).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  media: ").append(media).append("\n");
    sb.append("  statistics: ").append(statistics).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
