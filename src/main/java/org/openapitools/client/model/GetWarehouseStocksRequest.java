/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Фильтры для запроса остатков. 
 **/
@ApiModel(description = "Фильтры для запроса остатков. ")
public class GetWarehouseStocksRequest {
  
  @SerializedName("withTurnover")
  private Boolean withTurnover = false;
  @SerializedName("archived")
  private Boolean archived = null;
  @SerializedName("offerIds")
  private Set<String> offerIds = null;

  /**
   * **Только для модели FBY**  Возвращать ли информацию по оборачиваемости.  Значение по умолчанию — `false`. Если информация нужна, передайте значение `true`. 
   **/
  @ApiModelProperty(value = "**Только для модели FBY**  Возвращать ли информацию по оборачиваемости.  Значение по умолчанию — `false`. Если информация нужна, передайте значение `true`. ")
  public Boolean getWithTurnover() {
    return withTurnover;
  }
  public void setWithTurnover(Boolean withTurnover) {
    this.withTurnover = withTurnover;
  }

  /**
   * Фильтр по нахождению в архиве.  Передайте `true`, чтобы получить информацию об остатках товаров, которые находятся в архиве. Если фильтр не заполнен или передано `false`, в ответе возвращается информация о товарах, которые не находятся в архиве. 
   **/
  @ApiModelProperty(value = "Фильтр по нахождению в архиве.  Передайте `true`, чтобы получить информацию об остатках товаров, которые находятся в архиве. Если фильтр не заполнен или передано `false`, в ответе возвращается информация о товарах, которые не находятся в архиве. ")
  public Boolean getArchived() {
    return archived;
  }
  public void setArchived(Boolean archived) {
    this.archived = archived;
  }

  /**
   * Фильтр по вашим SKU товаров.  Возвращается информация об остатках всех переданных SKU, включая товары в архиве.  {% note warning \"Такой список возвращается только целиком\" %}  Если вы запрашиваете информацию по конкретным SKU, не заполняйте:  * `page_token` * `limit` * `archived`  {% endnote %}    
   **/
  @ApiModelProperty(value = "Фильтр по вашим SKU товаров.  Возвращается информация об остатках всех переданных SKU, включая товары в архиве.  {% note warning \"Такой список возвращается только целиком\" %}  Если вы запрашиваете информацию по конкретным SKU, не заполняйте:  * `page_token` * `limit` * `archived`  {% endnote %}    ")
  public Set<String> getOfferIds() {
    return offerIds;
  }
  public void setOfferIds(Set<String> offerIds) {
    this.offerIds = offerIds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetWarehouseStocksRequest getWarehouseStocksRequest = (GetWarehouseStocksRequest) o;
    return (this.withTurnover == null ? getWarehouseStocksRequest.withTurnover == null : this.withTurnover.equals(getWarehouseStocksRequest.withTurnover)) &&
        (this.archived == null ? getWarehouseStocksRequest.archived == null : this.archived.equals(getWarehouseStocksRequest.archived)) &&
        (this.offerIds == null ? getWarehouseStocksRequest.offerIds == null : this.offerIds.equals(getWarehouseStocksRequest.offerIds));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.withTurnover == null ? 0: this.withTurnover.hashCode());
    result = 31 * result + (this.archived == null ? 0: this.archived.hashCode());
    result = 31 * result + (this.offerIds == null ? 0: this.offerIds.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetWarehouseStocksRequest {\n");
    
    sb.append("  withTurnover: ").append(withTurnover).append("\n");
    sb.append("  archived: ").append(archived).append("\n");
    sb.append("  offerIds: ").append(offerIds).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
