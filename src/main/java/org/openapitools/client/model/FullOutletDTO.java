/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.OutletAddressDTO;
import org.openapitools.client.model.OutletDeliveryRuleDTO;
import org.openapitools.client.model.OutletStatusType;
import org.openapitools.client.model.OutletType;
import org.openapitools.client.model.OutletVisibilityType;
import org.openapitools.client.model.OutletWorkingScheduleDTO;
import org.openapitools.client.model.RegionDTO;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о точке продаж.
 **/
@ApiModel(description = "Информация о точке продаж.")
public class FullOutletDTO {
  
  @SerializedName("name")
  private String name = null;
  @SerializedName("type")
  private OutletType type = null;
  @SerializedName("coords")
  private String coords = null;
  @SerializedName("isMain")
  private Boolean isMain = null;
  @SerializedName("shopOutletCode")
  private String shopOutletCode = null;
  @SerializedName("visibility")
  private OutletVisibilityType visibility = null;
  @SerializedName("address")
  private OutletAddressDTO address = null;
  @SerializedName("phones")
  private List<String> phones = null;
  @SerializedName("workingSchedule")
  private OutletWorkingScheduleDTO workingSchedule = null;
  @SerializedName("deliveryRules")
  private List<OutletDeliveryRuleDTO> deliveryRules = null;
  @SerializedName("storagePeriod")
  private Long storagePeriod = null;
  @SerializedName("id")
  private Long id = null;
  @SerializedName("status")
  private OutletStatusType status = null;
  @SerializedName("region")
  private RegionDTO region = null;
  @SerializedName("shopOutletId")
  private String shopOutletId = null;
  @SerializedName("workingTime")
  private String workingTime = null;
  @SerializedName("moderationReason")
  private String moderationReason = null;

  /**
   * Название точки продаж. 
   **/
  @ApiModelProperty(required = true, value = "Название точки продаж. ")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public OutletType getType() {
    return type;
  }
  public void setType(OutletType type) {
    this.type = type;
  }

  /**
   * Координаты точки продаж.  Формат: долгота, широта. Разделители: запятая и / или пробел. Например, `20.4522144, 54.7104264`.  Если параметр не передан, координаты будут определены по значениям параметров, вложенных в `address`. 
   **/
  @ApiModelProperty(value = "Координаты точки продаж.  Формат: долгота, широта. Разделители: запятая и / или пробел. Например, `20.4522144, 54.7104264`.  Если параметр не передан, координаты будут определены по значениям параметров, вложенных в `address`. ")
  public String getCoords() {
    return coords;
  }
  public void setCoords(String coords) {
    this.coords = coords;
  }

  /**
   * Признак основной точки продаж.  Возможные значения:  * `false` — неосновная точка продаж. * `true` — основная точка продаж. 
   **/
  @ApiModelProperty(value = "Признак основной точки продаж.  Возможные значения:  * `false` — неосновная точка продаж. * `true` — основная точка продаж. ")
  public Boolean getIsMain() {
    return isMain;
  }
  public void setIsMain(Boolean isMain) {
    this.isMain = isMain;
  }

  /**
   * Идентификатор точки продаж, присвоенный магазином.
   **/
  @ApiModelProperty(value = "Идентификатор точки продаж, присвоенный магазином.")
  public String getShopOutletCode() {
    return shopOutletCode;
  }
  public void setShopOutletCode(String shopOutletCode) {
    this.shopOutletCode = shopOutletCode;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OutletVisibilityType getVisibility() {
    return visibility;
  }
  public void setVisibility(OutletVisibilityType visibility) {
    this.visibility = visibility;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public OutletAddressDTO getAddress() {
    return address;
  }
  public void setAddress(OutletAddressDTO address) {
    this.address = address;
  }

  /**
   * Номера телефонов точки продаж. Передавайте в формате: `+7 (999) 999-99-99`. 
   **/
  @ApiModelProperty(required = true, value = "Номера телефонов точки продаж. Передавайте в формате: `+7 (999) 999-99-99`. ")
  public List<String> getPhones() {
    return phones;
  }
  public void setPhones(List<String> phones) {
    this.phones = phones;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public OutletWorkingScheduleDTO getWorkingSchedule() {
    return workingSchedule;
  }
  public void setWorkingSchedule(OutletWorkingScheduleDTO workingSchedule) {
    this.workingSchedule = workingSchedule;
  }

  /**
   * Информация об условиях доставки для данной точки продаж.  Обязательный параметр, если параметр `type=DEPOT` или `type=MIXED`. 
   **/
  @ApiModelProperty(value = "Информация об условиях доставки для данной точки продаж.  Обязательный параметр, если параметр `type=DEPOT` или `type=MIXED`. ")
  public List<OutletDeliveryRuleDTO> getDeliveryRules() {
    return deliveryRules;
  }
  public void setDeliveryRules(List<OutletDeliveryRuleDTO> deliveryRules) {
    this.deliveryRules = deliveryRules;
  }

  /**
   * Срок хранения заказа в собственном пункте выдачи заказов. Считается в днях.
   **/
  @ApiModelProperty(value = "Срок хранения заказа в собственном пункте выдачи заказов. Считается в днях.")
  public Long getStoragePeriod() {
    return storagePeriod;
  }
  public void setStoragePeriod(Long storagePeriod) {
    this.storagePeriod = storagePeriod;
  }

  /**
   * Идентификатор точки продаж, присвоенный Маркетом.
   **/
  @ApiModelProperty(value = "Идентификатор точки продаж, присвоенный Маркетом.")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OutletStatusType getStatus() {
    return status;
  }
  public void setStatus(OutletStatusType status) {
    this.status = status;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public RegionDTO getRegion() {
    return region;
  }
  public void setRegion(RegionDTO region) {
    this.region = region;
  }

  /**
   * Идентификатор точки продаж, заданный магазином.
   **/
  @ApiModelProperty(value = "Идентификатор точки продаж, заданный магазином.")
  public String getShopOutletId() {
    return shopOutletId;
  }
  public void setShopOutletId(String shopOutletId) {
    this.shopOutletId = shopOutletId;
  }

  /**
   * Рабочее время.
   **/
  @ApiModelProperty(value = "Рабочее время.")
  public String getWorkingTime() {
    return workingTime;
  }
  public void setWorkingTime(String workingTime) {
    this.workingTime = workingTime;
  }

  /**
   * Статус модерации.
   **/
  @ApiModelProperty(value = "Статус модерации.")
  public String getModerationReason() {
    return moderationReason;
  }
  public void setModerationReason(String moderationReason) {
    this.moderationReason = moderationReason;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FullOutletDTO fullOutletDTO = (FullOutletDTO) o;
    return (this.name == null ? fullOutletDTO.name == null : this.name.equals(fullOutletDTO.name)) &&
        (this.type == null ? fullOutletDTO.type == null : this.type.equals(fullOutletDTO.type)) &&
        (this.coords == null ? fullOutletDTO.coords == null : this.coords.equals(fullOutletDTO.coords)) &&
        (this.isMain == null ? fullOutletDTO.isMain == null : this.isMain.equals(fullOutletDTO.isMain)) &&
        (this.shopOutletCode == null ? fullOutletDTO.shopOutletCode == null : this.shopOutletCode.equals(fullOutletDTO.shopOutletCode)) &&
        (this.visibility == null ? fullOutletDTO.visibility == null : this.visibility.equals(fullOutletDTO.visibility)) &&
        (this.address == null ? fullOutletDTO.address == null : this.address.equals(fullOutletDTO.address)) &&
        (this.phones == null ? fullOutletDTO.phones == null : this.phones.equals(fullOutletDTO.phones)) &&
        (this.workingSchedule == null ? fullOutletDTO.workingSchedule == null : this.workingSchedule.equals(fullOutletDTO.workingSchedule)) &&
        (this.deliveryRules == null ? fullOutletDTO.deliveryRules == null : this.deliveryRules.equals(fullOutletDTO.deliveryRules)) &&
        (this.storagePeriod == null ? fullOutletDTO.storagePeriod == null : this.storagePeriod.equals(fullOutletDTO.storagePeriod)) &&
        (this.id == null ? fullOutletDTO.id == null : this.id.equals(fullOutletDTO.id)) &&
        (this.status == null ? fullOutletDTO.status == null : this.status.equals(fullOutletDTO.status)) &&
        (this.region == null ? fullOutletDTO.region == null : this.region.equals(fullOutletDTO.region)) &&
        (this.shopOutletId == null ? fullOutletDTO.shopOutletId == null : this.shopOutletId.equals(fullOutletDTO.shopOutletId)) &&
        (this.workingTime == null ? fullOutletDTO.workingTime == null : this.workingTime.equals(fullOutletDTO.workingTime)) &&
        (this.moderationReason == null ? fullOutletDTO.moderationReason == null : this.moderationReason.equals(fullOutletDTO.moderationReason));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.coords == null ? 0: this.coords.hashCode());
    result = 31 * result + (this.isMain == null ? 0: this.isMain.hashCode());
    result = 31 * result + (this.shopOutletCode == null ? 0: this.shopOutletCode.hashCode());
    result = 31 * result + (this.visibility == null ? 0: this.visibility.hashCode());
    result = 31 * result + (this.address == null ? 0: this.address.hashCode());
    result = 31 * result + (this.phones == null ? 0: this.phones.hashCode());
    result = 31 * result + (this.workingSchedule == null ? 0: this.workingSchedule.hashCode());
    result = 31 * result + (this.deliveryRules == null ? 0: this.deliveryRules.hashCode());
    result = 31 * result + (this.storagePeriod == null ? 0: this.storagePeriod.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    result = 31 * result + (this.region == null ? 0: this.region.hashCode());
    result = 31 * result + (this.shopOutletId == null ? 0: this.shopOutletId.hashCode());
    result = 31 * result + (this.workingTime == null ? 0: this.workingTime.hashCode());
    result = 31 * result + (this.moderationReason == null ? 0: this.moderationReason.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class FullOutletDTO {\n");
    
    sb.append("  name: ").append(name).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  coords: ").append(coords).append("\n");
    sb.append("  isMain: ").append(isMain).append("\n");
    sb.append("  shopOutletCode: ").append(shopOutletCode).append("\n");
    sb.append("  visibility: ").append(visibility).append("\n");
    sb.append("  address: ").append(address).append("\n");
    sb.append("  phones: ").append(phones).append("\n");
    sb.append("  workingSchedule: ").append(workingSchedule).append("\n");
    sb.append("  deliveryRules: ").append(deliveryRules).append("\n");
    sb.append("  storagePeriod: ").append(storagePeriod).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  status: ").append(status).append("\n");
    sb.append("  region: ").append(region).append("\n");
    sb.append("  shopOutletId: ").append(shopOutletId).append("\n");
    sb.append("  workingTime: ").append(workingTime).append("\n");
    sb.append("  moderationReason: ").append(moderationReason).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
