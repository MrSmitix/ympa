/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.OutletAddressDTO;
import org.openapitools.client.model.OutletDeliveryRuleDTO;
import org.openapitools.client.model.OutletType;
import org.openapitools.client.model.OutletVisibilityType;
import org.openapitools.client.model.OutletWorkingScheduleDTO;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о точке продаж.
 **/
@ApiModel(description = "Информация о точке продаж.")
public class OutletDTO {
  
  @SerializedName("name")
  private String name = null;
  @SerializedName("type")
  private OutletType type = null;
  @SerializedName("coords")
  private String coords = null;
  @SerializedName("isMain")
  private Boolean isMain = null;
  @SerializedName("shopOutletCode")
  private String shopOutletCode = null;
  @SerializedName("visibility")
  private OutletVisibilityType visibility = null;
  @SerializedName("address")
  private OutletAddressDTO address = null;
  @SerializedName("phones")
  private List<String> phones = null;
  @SerializedName("workingSchedule")
  private OutletWorkingScheduleDTO workingSchedule = null;
  @SerializedName("deliveryRules")
  private List<OutletDeliveryRuleDTO> deliveryRules = null;
  @SerializedName("storagePeriod")
  private Long storagePeriod = null;

  /**
   * Название точки продаж. 
   **/
  @ApiModelProperty(required = true, value = "Название точки продаж. ")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public OutletType getType() {
    return type;
  }
  public void setType(OutletType type) {
    this.type = type;
  }

  /**
   * Координаты точки продаж.  Формат: долгота, широта. Разделители: запятая и / или пробел. Например, `20.4522144, 54.7104264`.  Если параметр не передан, координаты будут определены по значениям параметров, вложенных в `address`. 
   **/
  @ApiModelProperty(value = "Координаты точки продаж.  Формат: долгота, широта. Разделители: запятая и / или пробел. Например, `20.4522144, 54.7104264`.  Если параметр не передан, координаты будут определены по значениям параметров, вложенных в `address`. ")
  public String getCoords() {
    return coords;
  }
  public void setCoords(String coords) {
    this.coords = coords;
  }

  /**
   * Признак основной точки продаж.  Возможные значения:  * `false` — неосновная точка продаж. * `true` — основная точка продаж. 
   **/
  @ApiModelProperty(value = "Признак основной точки продаж.  Возможные значения:  * `false` — неосновная точка продаж. * `true` — основная точка продаж. ")
  public Boolean getIsMain() {
    return isMain;
  }
  public void setIsMain(Boolean isMain) {
    this.isMain = isMain;
  }

  /**
   * Идентификатор точки продаж, присвоенный магазином.
   **/
  @ApiModelProperty(value = "Идентификатор точки продаж, присвоенный магазином.")
  public String getShopOutletCode() {
    return shopOutletCode;
  }
  public void setShopOutletCode(String shopOutletCode) {
    this.shopOutletCode = shopOutletCode;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OutletVisibilityType getVisibility() {
    return visibility;
  }
  public void setVisibility(OutletVisibilityType visibility) {
    this.visibility = visibility;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public OutletAddressDTO getAddress() {
    return address;
  }
  public void setAddress(OutletAddressDTO address) {
    this.address = address;
  }

  /**
   * Номера телефонов точки продаж. Передавайте в формате: `+7 (999) 999-99-99`. 
   **/
  @ApiModelProperty(required = true, value = "Номера телефонов точки продаж. Передавайте в формате: `+7 (999) 999-99-99`. ")
  public List<String> getPhones() {
    return phones;
  }
  public void setPhones(List<String> phones) {
    this.phones = phones;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public OutletWorkingScheduleDTO getWorkingSchedule() {
    return workingSchedule;
  }
  public void setWorkingSchedule(OutletWorkingScheduleDTO workingSchedule) {
    this.workingSchedule = workingSchedule;
  }

  /**
   * Информация об условиях доставки для данной точки продаж.  Обязательный параметр, если параметр `type=DEPOT` или `type=MIXED`. 
   **/
  @ApiModelProperty(value = "Информация об условиях доставки для данной точки продаж.  Обязательный параметр, если параметр `type=DEPOT` или `type=MIXED`. ")
  public List<OutletDeliveryRuleDTO> getDeliveryRules() {
    return deliveryRules;
  }
  public void setDeliveryRules(List<OutletDeliveryRuleDTO> deliveryRules) {
    this.deliveryRules = deliveryRules;
  }

  /**
   * Срок хранения заказа в собственном пункте выдачи заказов. Считается в днях.
   **/
  @ApiModelProperty(value = "Срок хранения заказа в собственном пункте выдачи заказов. Считается в днях.")
  public Long getStoragePeriod() {
    return storagePeriod;
  }
  public void setStoragePeriod(Long storagePeriod) {
    this.storagePeriod = storagePeriod;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutletDTO outletDTO = (OutletDTO) o;
    return (this.name == null ? outletDTO.name == null : this.name.equals(outletDTO.name)) &&
        (this.type == null ? outletDTO.type == null : this.type.equals(outletDTO.type)) &&
        (this.coords == null ? outletDTO.coords == null : this.coords.equals(outletDTO.coords)) &&
        (this.isMain == null ? outletDTO.isMain == null : this.isMain.equals(outletDTO.isMain)) &&
        (this.shopOutletCode == null ? outletDTO.shopOutletCode == null : this.shopOutletCode.equals(outletDTO.shopOutletCode)) &&
        (this.visibility == null ? outletDTO.visibility == null : this.visibility.equals(outletDTO.visibility)) &&
        (this.address == null ? outletDTO.address == null : this.address.equals(outletDTO.address)) &&
        (this.phones == null ? outletDTO.phones == null : this.phones.equals(outletDTO.phones)) &&
        (this.workingSchedule == null ? outletDTO.workingSchedule == null : this.workingSchedule.equals(outletDTO.workingSchedule)) &&
        (this.deliveryRules == null ? outletDTO.deliveryRules == null : this.deliveryRules.equals(outletDTO.deliveryRules)) &&
        (this.storagePeriod == null ? outletDTO.storagePeriod == null : this.storagePeriod.equals(outletDTO.storagePeriod));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.coords == null ? 0: this.coords.hashCode());
    result = 31 * result + (this.isMain == null ? 0: this.isMain.hashCode());
    result = 31 * result + (this.shopOutletCode == null ? 0: this.shopOutletCode.hashCode());
    result = 31 * result + (this.visibility == null ? 0: this.visibility.hashCode());
    result = 31 * result + (this.address == null ? 0: this.address.hashCode());
    result = 31 * result + (this.phones == null ? 0: this.phones.hashCode());
    result = 31 * result + (this.workingSchedule == null ? 0: this.workingSchedule.hashCode());
    result = 31 * result + (this.deliveryRules == null ? 0: this.deliveryRules.hashCode());
    result = 31 * result + (this.storagePeriod == null ? 0: this.storagePeriod.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutletDTO {\n");
    
    sb.append("  name: ").append(name).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  coords: ").append(coords).append("\n");
    sb.append("  isMain: ").append(isMain).append("\n");
    sb.append("  shopOutletCode: ").append(shopOutletCode).append("\n");
    sb.append("  visibility: ").append(visibility).append("\n");
    sb.append("  address: ").append(address).append("\n");
    sb.append("  phones: ").append(phones).append("\n");
    sb.append("  workingSchedule: ").append(workingSchedule).append("\n");
    sb.append("  deliveryRules: ").append(deliveryRules).append("\n");
    sb.append("  storagePeriod: ").append(storagePeriod).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
