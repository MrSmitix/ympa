/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.QuantumDTO;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о новой цене на товар.
 **/
@ApiModel(description = "Информация о новой цене на товар.")
public class BaseCampaignOfferDTO {
  
  @SerializedName("offerId")
  private String offerId = null;
  @SerializedName("quantum")
  private QuantumDTO quantum = null;
  @SerializedName("available")
  private Boolean available = null;

  /**
   * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
   **/
  @ApiModelProperty(required = true, value = "Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) ")
  public String getOfferId() {
    return offerId;
  }
  public void setOfferId(String offerId) {
    this.offerId = offerId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public QuantumDTO getQuantum() {
    return quantum;
  }
  public void setQuantum(QuantumDTO quantum) {
    this.quantum = quantum;
  }

  /**
   * Есть ли товар в продаже. 
   **/
  @ApiModelProperty(value = "Есть ли товар в продаже. ")
  public Boolean getAvailable() {
    return available;
  }
  public void setAvailable(Boolean available) {
    this.available = available;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseCampaignOfferDTO baseCampaignOfferDTO = (BaseCampaignOfferDTO) o;
    return (this.offerId == null ? baseCampaignOfferDTO.offerId == null : this.offerId.equals(baseCampaignOfferDTO.offerId)) &&
        (this.quantum == null ? baseCampaignOfferDTO.quantum == null : this.quantum.equals(baseCampaignOfferDTO.quantum)) &&
        (this.available == null ? baseCampaignOfferDTO.available == null : this.available.equals(baseCampaignOfferDTO.available));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.offerId == null ? 0: this.offerId.hashCode());
    result = 31 * result + (this.quantum == null ? 0: this.quantum.hashCode());
    result = 31 * result + (this.available == null ? 0: this.available.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseCampaignOfferDTO {\n");
    
    sb.append("  offerId: ").append(offerId).append("\n");
    sb.append("  quantum: ").append(quantum).append("\n");
    sb.append("  available: ").append(available).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
