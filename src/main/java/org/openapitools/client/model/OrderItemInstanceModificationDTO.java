/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.BriefOrderItemInstanceDTO;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Позиция в корзине, требующая маркировки.
 **/
@ApiModel(description = "Позиция в корзине, требующая маркировки.")
public class OrderItemInstanceModificationDTO {
  
  @SerializedName("id")
  private Long id = null;
  @SerializedName("instances")
  private List<BriefOrderItemInstanceDTO> instances = null;

  /**
   * Идентификатор товара в заказе.  Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`. 
   **/
  @ApiModelProperty(required = true, value = "Идентификатор товара в заказе.  Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`. ")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   * Список кодов маркировки единиц товара. 
   **/
  @ApiModelProperty(required = true, value = "Список кодов маркировки единиц товара. ")
  public List<BriefOrderItemInstanceDTO> getInstances() {
    return instances;
  }
  public void setInstances(List<BriefOrderItemInstanceDTO> instances) {
    this.instances = instances;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderItemInstanceModificationDTO orderItemInstanceModificationDTO = (OrderItemInstanceModificationDTO) o;
    return (this.id == null ? orderItemInstanceModificationDTO.id == null : this.id.equals(orderItemInstanceModificationDTO.id)) &&
        (this.instances == null ? orderItemInstanceModificationDTO.instances == null : this.instances.equals(orderItemInstanceModificationDTO.instances));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.instances == null ? 0: this.instances.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderItemInstanceModificationDTO {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  instances: ").append(instances).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
