/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.FlippingPagerDTO;
import org.openapitools.client.model.FullOutletDTO;
import org.openapitools.client.model.ScrollingPagerDTO;



/**
  * Ответ на запрос информации о точках продаж.
 **/

public class GetOutletsResponse  {
  
 /**
   * Информация о точках продаж.
  **/
  private List<FullOutletDTO> outlets = new ArrayList<>();

  private ScrollingPagerDTO paging;

  private FlippingPagerDTO pager;

 /**
   * Информация о точках продаж.
   * @return outlets
  **/
  public List<FullOutletDTO> getOutlets() {
    return outlets;
  }

  /**
    * Set outlets
  **/
  public void setOutlets(List<FullOutletDTO> outlets) {
    this.outlets = outlets;
  }

  public GetOutletsResponse outlets(List<FullOutletDTO> outlets) {
    this.outlets = outlets;
    return this;
  }

  public GetOutletsResponse addOutletsItem(FullOutletDTO outletsItem) {
    this.outlets.add(outletsItem);
    return this;
  }

 /**
   * Get paging
   * @return paging
  **/
  public ScrollingPagerDTO getPaging() {
    return paging;
  }

  /**
    * Set paging
  **/
  public void setPaging(ScrollingPagerDTO paging) {
    this.paging = paging;
  }

  public GetOutletsResponse paging(ScrollingPagerDTO paging) {
    this.paging = paging;
    return this;
  }

 /**
   * Get pager
   * @return pager
  **/
  public FlippingPagerDTO getPager() {
    return pager;
  }

  /**
    * Set pager
  **/
  public void setPager(FlippingPagerDTO pager) {
    this.pager = pager;
  }

  public GetOutletsResponse pager(FlippingPagerDTO pager) {
    this.pager = pager;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetOutletsResponse {\n");
    
    sb.append("    outlets: ").append(toIndentedString(outlets)).append("\n");
    sb.append("    paging: ").append(toIndentedString(paging)).append("\n");
    sb.append("    pager: ").append(toIndentedString(pager)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

