/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.math.BigDecimal;
import java.util.*;
import org.openapitools.client.model.OrderItemInstanceDTO;
import org.openapitools.client.model.OrderVatType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о маркированном товаре.
 **/
@ApiModel(description = "Информация о маркированном товаре.")
public class BriefOrderItemDTO {
  
  @SerializedName("id")
  private Long id = null;
  @SerializedName("vat")
  private OrderVatType vat = null;
  @SerializedName("count")
  private Integer count = null;
  @SerializedName("price")
  private BigDecimal price = null;
  @SerializedName("offerName")
  private String offerName = null;
  @SerializedName("offerId")
  private String offerId = null;
  @SerializedName("instances")
  private List<OrderItemInstanceDTO> instances = null;

  /**
   * Идентификатор товара в заказе.  Позволяет идентифицировать товар в рамках данного заказа. 
   **/
  @ApiModelProperty(value = "Идентификатор товара в заказе.  Позволяет идентифицировать товар в рамках данного заказа. ")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OrderVatType getVat() {
    return vat;
  }
  public void setVat(OrderVatType vat) {
    this.vat = vat;
  }

  /**
   * Количество единиц товара.
   **/
  @ApiModelProperty(value = "Количество единиц товара.")
  public Integer getCount() {
    return count;
  }
  public void setCount(Integer count) {
    this.count = count;
  }

  /**
   * Цена на товар. Указана в той валюте, которая была задана в каталоге. Разделитель целой и дробной части — точка. 
   **/
  @ApiModelProperty(value = "Цена на товар. Указана в той валюте, которая была задана в каталоге. Разделитель целой и дробной части — точка. ")
  public BigDecimal getPrice() {
    return price;
  }
  public void setPrice(BigDecimal price) {
    this.price = price;
  }

  /**
   * Название товара.
   **/
  @ApiModelProperty(value = "Название товара.")
  public String getOfferName() {
    return offerName;
  }
  public void setOfferName(String offerName) {
    this.offerName = offerName;
  }

  /**
   * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
   **/
  @ApiModelProperty(value = "Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) ")
  public String getOfferId() {
    return offerId;
  }
  public void setOfferId(String offerId) {
    this.offerId = offerId;
  }

  /**
   * Переданные вами коды маркировки.
   **/
  @ApiModelProperty(value = "Переданные вами коды маркировки.")
  public List<OrderItemInstanceDTO> getInstances() {
    return instances;
  }
  public void setInstances(List<OrderItemInstanceDTO> instances) {
    this.instances = instances;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BriefOrderItemDTO briefOrderItemDTO = (BriefOrderItemDTO) o;
    return (this.id == null ? briefOrderItemDTO.id == null : this.id.equals(briefOrderItemDTO.id)) &&
        (this.vat == null ? briefOrderItemDTO.vat == null : this.vat.equals(briefOrderItemDTO.vat)) &&
        (this.count == null ? briefOrderItemDTO.count == null : this.count.equals(briefOrderItemDTO.count)) &&
        (this.price == null ? briefOrderItemDTO.price == null : this.price.equals(briefOrderItemDTO.price)) &&
        (this.offerName == null ? briefOrderItemDTO.offerName == null : this.offerName.equals(briefOrderItemDTO.offerName)) &&
        (this.offerId == null ? briefOrderItemDTO.offerId == null : this.offerId.equals(briefOrderItemDTO.offerId)) &&
        (this.instances == null ? briefOrderItemDTO.instances == null : this.instances.equals(briefOrderItemDTO.instances));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.vat == null ? 0: this.vat.hashCode());
    result = 31 * result + (this.count == null ? 0: this.count.hashCode());
    result = 31 * result + (this.price == null ? 0: this.price.hashCode());
    result = 31 * result + (this.offerName == null ? 0: this.offerName.hashCode());
    result = 31 * result + (this.offerId == null ? 0: this.offerId.hashCode());
    result = 31 * result + (this.instances == null ? 0: this.instances.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class BriefOrderItemDTO {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  vat: ").append(vat).append("\n");
    sb.append("  count: ").append(count).append("\n");
    sb.append("  price: ").append(price).append("\n");
    sb.append("  offerName: ").append(offerName).append("\n");
    sb.append("  offerId: ").append(offerId).append("\n");
    sb.append("  instances: ").append(instances).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
