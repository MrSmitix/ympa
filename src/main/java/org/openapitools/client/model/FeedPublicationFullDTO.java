/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о последней публикации предложений из прайс-листа на Маркете. 
 **/
@ApiModel(description = "Информация о последней публикации предложений из прайс-листа на Маркете. ")
public class FeedPublicationFullDTO {
  
  @SerializedName("fileTime")
  private Date fileTime = null;
  @SerializedName("publishedTime")
  private Date publishedTime = null;

  /**
   * Дата и время, которые магазин указал в прайс-листе.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`. 
   **/
  @ApiModelProperty(value = "Дата и время, которые магазин указал в прайс-листе.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`. ")
  public Date getFileTime() {
    return fileTime;
  }
  public void setFileTime(Date fileTime) {
    this.fileTime = fileTime;
  }

  /**
   * Дата и время публикации предложений из прайс-листа на Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`. 
   **/
  @ApiModelProperty(value = "Дата и время публикации предложений из прайс-листа на Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`. ")
  public Date getPublishedTime() {
    return publishedTime;
  }
  public void setPublishedTime(Date publishedTime) {
    this.publishedTime = publishedTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeedPublicationFullDTO feedPublicationFullDTO = (FeedPublicationFullDTO) o;
    return (this.fileTime == null ? feedPublicationFullDTO.fileTime == null : this.fileTime.equals(feedPublicationFullDTO.fileTime)) &&
        (this.publishedTime == null ? feedPublicationFullDTO.publishedTime == null : this.publishedTime.equals(feedPublicationFullDTO.publishedTime));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.fileTime == null ? 0: this.fileTime.hashCode());
    result = 31 * result + (this.publishedTime == null ? 0: this.publishedTime.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeedPublicationFullDTO {\n");
    
    sb.append("  fileTime: ").append(fileTime).append("\n");
    sb.append("  publishedTime: ").append(publishedTime).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
