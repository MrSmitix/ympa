/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.math.BigDecimal;
import org.openapitools.client.model.CurrencyType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Предложение.
 **/
@ApiModel(description = "Предложение.")
public class OfferDTO {
  
  @SerializedName("price")
  private BigDecimal price = null;
  @SerializedName("feedId")
  private Long feedId = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("shopCategoryId")
  private String shopCategoryId = null;
  @SerializedName("marketCategoryId")
  private Integer marketCategoryId = null;
  @SerializedName("preDiscountPrice")
  private BigDecimal preDiscountPrice = null;
  @SerializedName("discount")
  private Integer discount = null;
  @SerializedName("cutPrice")
  private Boolean cutPrice = null;
  @SerializedName("url")
  private String url = null;
  @SerializedName("modelId")
  private Long modelId = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("currency")
  private CurrencyType currency = null;
  @SerializedName("bid")
  private BigDecimal bid = null;
  @SerializedName("cbid")
  private BigDecimal cbid = null;
  @SerializedName("fee")
  private BigDecimal fee = null;
  @SerializedName("blocked")
  private Boolean blocked = null;

  /**
   * Цена предложения.  До версии 2.0 партнерского API у параметра был тип String. 
   **/
  @ApiModelProperty(value = "Цена предложения.  До версии 2.0 партнерского API у параметра был тип String. ")
  public BigDecimal getPrice() {
    return price;
  }
  public void setPrice(BigDecimal price) {
    this.price = price;
  }

  /**
   * Идентификатор прайс-листа, содержащего предложение.  Параметр доступен начиная с версии 2.0 партнерского API. 
   **/
  @ApiModelProperty(value = "Идентификатор прайс-листа, содержащего предложение.  Параметр доступен начиная с версии 2.0 партнерского API. ")
  public Long getFeedId() {
    return feedId;
  }
  public void setFeedId(Long feedId) {
    this.feedId = feedId;
  }

  /**
   * Идентификатор предложения из прайс-листа.  Параметр выводится, если в прайс-листе задан уникальный идентификатор. Если в прайс-листе содержится несколько предложений с одинаковыми идентификаторами, параметр `id` указывается только для первого из них, для остальных параметры `id` и `feedId` не выводятся.  Параметр доступен начиная с версии 2.0 партнерского API. 
   **/
  @ApiModelProperty(value = "Идентификатор предложения из прайс-листа.  Параметр выводится, если в прайс-листе задан уникальный идентификатор. Если в прайс-листе содержится несколько предложений с одинаковыми идентификаторами, параметр `id` указывается только для первого из них, для остальных параметры `id` и `feedId` не выводятся.  Параметр доступен начиная с версии 2.0 партнерского API. ")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Идентификатор категории предложения, указанный магазином в прайс-листе.  Параметр выводится только для предложений, у которых указана категория в прайс-листе.  Параметр доступен начиная с версии 2.0 партнерского API. 
   **/
  @ApiModelProperty(value = "Идентификатор категории предложения, указанный магазином в прайс-листе.  Параметр выводится только для предложений, у которых указана категория в прайс-листе.  Параметр доступен начиная с версии 2.0 партнерского API. ")
  public String getShopCategoryId() {
    return shopCategoryId;
  }
  public void setShopCategoryId(String shopCategoryId) {
    this.shopCategoryId = shopCategoryId;
  }

  /**
   * Идентификатор категории предложения в дереве категорий Маркета. Параметр доступен начиная с версии 2.0 партнерского API. 
   **/
  @ApiModelProperty(value = "Идентификатор категории предложения в дереве категорий Маркета. Параметр доступен начиная с версии 2.0 партнерского API. ")
  public Integer getMarketCategoryId() {
    return marketCategoryId;
  }
  public void setMarketCategoryId(Integer marketCategoryId) {
    this.marketCategoryId = marketCategoryId;
  }

  /**
   * Цена предложения без скидки.
   **/
  @ApiModelProperty(value = "Цена предложения без скидки.")
  public BigDecimal getPreDiscountPrice() {
    return preDiscountPrice;
  }
  public void setPreDiscountPrice(BigDecimal preDiscountPrice) {
    this.preDiscountPrice = preDiscountPrice;
  }

  /**
   * Скидка на предложение в процентах.
   **/
  @ApiModelProperty(value = "Скидка на предложение в процентах.")
  public Integer getDiscount() {
    return discount;
  }
  public void setDiscount(Integer discount) {
    this.discount = discount;
  }

  /**
   * Является ли предложение уцененным:  * `true` — да. * `false` — нет.  Параметр доступен начиная с версии 2.58 партнерского API. 
   **/
  @ApiModelProperty(value = "Является ли предложение уцененным:  * `true` — да. * `false` — нет.  Параметр доступен начиная с версии 2.58 партнерского API. ")
  public Boolean getCutPrice() {
    return cutPrice;
  }
  public void setCutPrice(Boolean cutPrice) {
    this.cutPrice = cutPrice;
  }

  /**
   * URL-адрес предложения на сайте магазина.
   **/
  @ApiModelProperty(value = "URL-адрес предложения на сайте магазина.")
  public String getUrl() {
    return url;
  }
  public void setUrl(String url) {
    this.url = url;
  }

  /**
   * Идентификатор модели Маркета, с которой соотнесено предложение.  Если предложение не соотнесено ни с какой карточкой модели, то параметр `modelid` содержит значение `0`.  {% note info %}  Идентификатор модели присутствует в URL карточки модели в виде значения параметра `product`. Например: `https://market.yandex.ru/product/13584121`.  {% endnote %} 
   **/
  @ApiModelProperty(required = true, value = "Идентификатор модели Маркета, с которой соотнесено предложение.  Если предложение не соотнесено ни с какой карточкой модели, то параметр `modelid` содержит значение `0`.  {% note info %}  Идентификатор модели присутствует в URL карточки модели в виде значения параметра `product`. Например: `https://market.yandex.ru/product/13584121`.  {% endnote %} ")
  public Long getModelId() {
    return modelId;
  }
  public void setModelId(Long modelId) {
    this.modelId = modelId;
  }

  /**
   * Наименование предложения.
   **/
  @ApiModelProperty(value = "Наименование предложения.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public CurrencyType getCurrency() {
    return currency;
  }
  public void setCurrency(CurrencyType currency) {
    this.currency = currency;
  }

  /**
   * {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Ставка на клик. 
   **/
  @ApiModelProperty(value = "{% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Ставка на клик. ")
  public BigDecimal getBid() {
    return bid;
  }
  public void setBid(BigDecimal bid) {
    this.bid = bid;
  }

  /**
   * {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Ставка на клик. 
   **/
  @ApiModelProperty(value = "{% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Ставка на клик. ")
  public BigDecimal getCbid() {
    return cbid;
  }
  public void setCbid(BigDecimal cbid) {
    this.cbid = cbid;
  }

  /**
   * {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Процент комиссии на товар при продаже по CPA. 
   **/
  @ApiModelProperty(value = "{% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Процент комиссии на товар при продаже по CPA. ")
  public BigDecimal getFee() {
    return fee;
  }
  public void setFee(BigDecimal fee) {
    this.fee = fee;
  }

  /**
   * Признак блокировки предложения. Возможные значения: * `false` — предложение активно, параметр не выводится. * `true` — предложение заблокировано. Параметр выводится, если предложение заблокировано и не попадает в выдачу Маркета. Это может произойти из-за отключения магазина. 
   **/
  @ApiModelProperty(value = "Признак блокировки предложения. Возможные значения: * `false` — предложение активно, параметр не выводится. * `true` — предложение заблокировано. Параметр выводится, если предложение заблокировано и не попадает в выдачу Маркета. Это может произойти из-за отключения магазина. ")
  public Boolean getBlocked() {
    return blocked;
  }
  public void setBlocked(Boolean blocked) {
    this.blocked = blocked;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OfferDTO offerDTO = (OfferDTO) o;
    return (this.price == null ? offerDTO.price == null : this.price.equals(offerDTO.price)) &&
        (this.feedId == null ? offerDTO.feedId == null : this.feedId.equals(offerDTO.feedId)) &&
        (this.id == null ? offerDTO.id == null : this.id.equals(offerDTO.id)) &&
        (this.shopCategoryId == null ? offerDTO.shopCategoryId == null : this.shopCategoryId.equals(offerDTO.shopCategoryId)) &&
        (this.marketCategoryId == null ? offerDTO.marketCategoryId == null : this.marketCategoryId.equals(offerDTO.marketCategoryId)) &&
        (this.preDiscountPrice == null ? offerDTO.preDiscountPrice == null : this.preDiscountPrice.equals(offerDTO.preDiscountPrice)) &&
        (this.discount == null ? offerDTO.discount == null : this.discount.equals(offerDTO.discount)) &&
        (this.cutPrice == null ? offerDTO.cutPrice == null : this.cutPrice.equals(offerDTO.cutPrice)) &&
        (this.url == null ? offerDTO.url == null : this.url.equals(offerDTO.url)) &&
        (this.modelId == null ? offerDTO.modelId == null : this.modelId.equals(offerDTO.modelId)) &&
        (this.name == null ? offerDTO.name == null : this.name.equals(offerDTO.name)) &&
        (this.currency == null ? offerDTO.currency == null : this.currency.equals(offerDTO.currency)) &&
        (this.bid == null ? offerDTO.bid == null : this.bid.equals(offerDTO.bid)) &&
        (this.cbid == null ? offerDTO.cbid == null : this.cbid.equals(offerDTO.cbid)) &&
        (this.fee == null ? offerDTO.fee == null : this.fee.equals(offerDTO.fee)) &&
        (this.blocked == null ? offerDTO.blocked == null : this.blocked.equals(offerDTO.blocked));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.price == null ? 0: this.price.hashCode());
    result = 31 * result + (this.feedId == null ? 0: this.feedId.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.shopCategoryId == null ? 0: this.shopCategoryId.hashCode());
    result = 31 * result + (this.marketCategoryId == null ? 0: this.marketCategoryId.hashCode());
    result = 31 * result + (this.preDiscountPrice == null ? 0: this.preDiscountPrice.hashCode());
    result = 31 * result + (this.discount == null ? 0: this.discount.hashCode());
    result = 31 * result + (this.cutPrice == null ? 0: this.cutPrice.hashCode());
    result = 31 * result + (this.url == null ? 0: this.url.hashCode());
    result = 31 * result + (this.modelId == null ? 0: this.modelId.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.currency == null ? 0: this.currency.hashCode());
    result = 31 * result + (this.bid == null ? 0: this.bid.hashCode());
    result = 31 * result + (this.cbid == null ? 0: this.cbid.hashCode());
    result = 31 * result + (this.fee == null ? 0: this.fee.hashCode());
    result = 31 * result + (this.blocked == null ? 0: this.blocked.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OfferDTO {\n");
    
    sb.append("  price: ").append(price).append("\n");
    sb.append("  feedId: ").append(feedId).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  shopCategoryId: ").append(shopCategoryId).append("\n");
    sb.append("  marketCategoryId: ").append(marketCategoryId).append("\n");
    sb.append("  preDiscountPrice: ").append(preDiscountPrice).append("\n");
    sb.append("  discount: ").append(discount).append("\n");
    sb.append("  cutPrice: ").append(cutPrice).append("\n");
    sb.append("  url: ").append(url).append("\n");
    sb.append("  modelId: ").append(modelId).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  currency: ").append(currency).append("\n");
    sb.append("  bid: ").append(bid).append("\n");
    sb.append("  cbid: ").append(cbid).append("\n");
    sb.append("  fee: ").append(fee).append("\n");
    sb.append("  blocked: ").append(blocked).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
