/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.GetMappingDTO;
import org.openapitools.client.model.OfferCardRecommendationDTO;
import org.openapitools.client.model.OfferCardStatusType;
import org.openapitools.client.model.OfferErrorDTO;
import org.openapitools.client.model.ParameterValueDTO;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о состоянии карточки товара.  Если поле &#x60;mapping&#x60; отсутствует в ответе, Маркет еще не успел обработать информацию о товаре. Чтобы определить категорию такого товара, повторите запрос через несколько минут. 
 **/
@ApiModel(description = "Информация о состоянии карточки товара.  Если поле `mapping` отсутствует в ответе, Маркет еще не успел обработать информацию о товаре. Чтобы определить категорию такого товара, повторите запрос через несколько минут. ")
public class OfferCardDTO {
  
  @SerializedName("offerId")
  private String offerId = null;
  @SerializedName("mapping")
  private GetMappingDTO mapping = null;
  @SerializedName("parameterValues")
  private List<ParameterValueDTO> parameterValues = null;
  @SerializedName("cardStatus")
  private OfferCardStatusType cardStatus = null;
  @SerializedName("contentRating")
  private Integer contentRating = null;
  @SerializedName("recommendations")
  private List<OfferCardRecommendationDTO> recommendations = null;
  @SerializedName("errors")
  private List<OfferErrorDTO> errors = null;
  @SerializedName("warnings")
  private List<OfferErrorDTO> warnings = null;

  /**
   * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
   **/
  @ApiModelProperty(required = true, value = "Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) ")
  public String getOfferId() {
    return offerId;
  }
  public void setOfferId(String offerId) {
    this.offerId = offerId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public GetMappingDTO getMapping() {
    return mapping;
  }
  public void setMapping(GetMappingDTO mapping) {
    this.mapping = mapping;
  }

  /**
   * Список характеристик с их значениями. 
   **/
  @ApiModelProperty(value = "Список характеристик с их значениями. ")
  public List<ParameterValueDTO> getParameterValues() {
    return parameterValues;
  }
  public void setParameterValues(List<ParameterValueDTO> parameterValues) {
    this.parameterValues = parameterValues;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OfferCardStatusType getCardStatus() {
    return cardStatus;
  }
  public void setCardStatus(OfferCardStatusType cardStatus) {
    this.cardStatus = cardStatus;
  }

  /**
   * Процент заполненности карточки.
   **/
  @ApiModelProperty(value = "Процент заполненности карточки.")
  public Integer getContentRating() {
    return contentRating;
  }
  public void setContentRating(Integer contentRating) {
    this.contentRating = contentRating;
  }

  /**
   * Список рекомендаций к заполнению карточки.  Рекомендации Маркета помогают заполнять карточку так, чтобы покупателям было проще найти ваш товар и решиться на покупку. 
   **/
  @ApiModelProperty(value = "Список рекомендаций к заполнению карточки.  Рекомендации Маркета помогают заполнять карточку так, чтобы покупателям было проще найти ваш товар и решиться на покупку. ")
  public List<OfferCardRecommendationDTO> getRecommendations() {
    return recommendations;
  }
  public void setRecommendations(List<OfferCardRecommendationDTO> recommendations) {
    this.recommendations = recommendations;
  }

  /**
   * Ошибки в контенте, препятствующие размещению товара на витрине.
   **/
  @ApiModelProperty(value = "Ошибки в контенте, препятствующие размещению товара на витрине.")
  public List<OfferErrorDTO> getErrors() {
    return errors;
  }
  public void setErrors(List<OfferErrorDTO> errors) {
    this.errors = errors;
  }

  /**
   * Связанные с контентом предупреждения, не препятствующие размещению товара на витрине.
   **/
  @ApiModelProperty(value = "Связанные с контентом предупреждения, не препятствующие размещению товара на витрине.")
  public List<OfferErrorDTO> getWarnings() {
    return warnings;
  }
  public void setWarnings(List<OfferErrorDTO> warnings) {
    this.warnings = warnings;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OfferCardDTO offerCardDTO = (OfferCardDTO) o;
    return (this.offerId == null ? offerCardDTO.offerId == null : this.offerId.equals(offerCardDTO.offerId)) &&
        (this.mapping == null ? offerCardDTO.mapping == null : this.mapping.equals(offerCardDTO.mapping)) &&
        (this.parameterValues == null ? offerCardDTO.parameterValues == null : this.parameterValues.equals(offerCardDTO.parameterValues)) &&
        (this.cardStatus == null ? offerCardDTO.cardStatus == null : this.cardStatus.equals(offerCardDTO.cardStatus)) &&
        (this.contentRating == null ? offerCardDTO.contentRating == null : this.contentRating.equals(offerCardDTO.contentRating)) &&
        (this.recommendations == null ? offerCardDTO.recommendations == null : this.recommendations.equals(offerCardDTO.recommendations)) &&
        (this.errors == null ? offerCardDTO.errors == null : this.errors.equals(offerCardDTO.errors)) &&
        (this.warnings == null ? offerCardDTO.warnings == null : this.warnings.equals(offerCardDTO.warnings));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.offerId == null ? 0: this.offerId.hashCode());
    result = 31 * result + (this.mapping == null ? 0: this.mapping.hashCode());
    result = 31 * result + (this.parameterValues == null ? 0: this.parameterValues.hashCode());
    result = 31 * result + (this.cardStatus == null ? 0: this.cardStatus.hashCode());
    result = 31 * result + (this.contentRating == null ? 0: this.contentRating.hashCode());
    result = 31 * result + (this.recommendations == null ? 0: this.recommendations.hashCode());
    result = 31 * result + (this.errors == null ? 0: this.errors.hashCode());
    result = 31 * result + (this.warnings == null ? 0: this.warnings.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OfferCardDTO {\n");
    
    sb.append("  offerId: ").append(offerId).append("\n");
    sb.append("  mapping: ").append(mapping).append("\n");
    sb.append("  parameterValues: ").append(parameterValues).append("\n");
    sb.append("  cardStatus: ").append(cardStatus).append("\n");
    sb.append("  contentRating: ").append(contentRating).append("\n");
    sb.append("  recommendations: ").append(recommendations).append("\n");
    sb.append("  errors: ").append(errors).append("\n");
    sb.append("  warnings: ").append(warnings).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
