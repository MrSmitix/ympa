/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.BusinessDTO;
import org.openapitools.client.model.PlacementType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о магазине.
 **/
@ApiModel(description = "Информация о магазине.")
public class CampaignDTO {
  
  @SerializedName("domain")
  private String domain = null;
  @SerializedName("id")
  private Long id = null;
  @SerializedName("clientId")
  private Long clientId = null;
  @SerializedName("business")
  private BusinessDTO business = null;
  @SerializedName("placementType")
  private PlacementType placementType = null;

  /**
   * URL магазина.
   **/
  @ApiModelProperty(value = "URL магазина.")
  public String getDomain() {
    return domain;
  }
  public void setDomain(String domain) {
    this.domain = domain;
  }

  /**
   * Идентификатор кампании.
   **/
  @ApiModelProperty(value = "Идентификатор кампании.")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   * Идентификатор плательщика в Яндекс Балансе.
   **/
  @ApiModelProperty(value = "Идентификатор плательщика в Яндекс Балансе.")
  public Long getClientId() {
    return clientId;
  }
  public void setClientId(Long clientId) {
    this.clientId = clientId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BusinessDTO getBusiness() {
    return business;
  }
  public void setBusiness(BusinessDTO business) {
    this.business = business;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public PlacementType getPlacementType() {
    return placementType;
  }
  public void setPlacementType(PlacementType placementType) {
    this.placementType = placementType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignDTO campaignDTO = (CampaignDTO) o;
    return (this.domain == null ? campaignDTO.domain == null : this.domain.equals(campaignDTO.domain)) &&
        (this.id == null ? campaignDTO.id == null : this.id.equals(campaignDTO.id)) &&
        (this.clientId == null ? campaignDTO.clientId == null : this.clientId.equals(campaignDTO.clientId)) &&
        (this.business == null ? campaignDTO.business == null : this.business.equals(campaignDTO.business)) &&
        (this.placementType == null ? campaignDTO.placementType == null : this.placementType.equals(campaignDTO.placementType));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.domain == null ? 0: this.domain.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.clientId == null ? 0: this.clientId.hashCode());
    result = 31 * result + (this.business == null ? 0: this.business.hashCode());
    result = 31 * result + (this.placementType == null ? 0: this.placementType.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignDTO {\n");
    
    sb.append("  domain: ").append(domain).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  clientId: ").append(clientId).append("\n");
    sb.append("  business: ").append(business).append("\n");
    sb.append("  placementType: ").append(placementType).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
