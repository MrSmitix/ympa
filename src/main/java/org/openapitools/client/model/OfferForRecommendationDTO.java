/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.BasePriceDTO;
import org.openapitools.client.model.GetPriceDTO;
import org.openapitools.client.model.PriceCompetitivenessType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о состоянии цены на товар.
 **/
@ApiModel(description = "Информация о состоянии цены на товар.")
public class OfferForRecommendationDTO {
  
  @SerializedName("offerId")
  private String offerId = null;
  @SerializedName("price")
  private BasePriceDTO price = null;
  @SerializedName("cofinancePrice")
  private GetPriceDTO cofinancePrice = null;
  @SerializedName("competitiveness")
  private PriceCompetitivenessType competitiveness = null;
  @SerializedName("shows")
  private Long shows = null;

  /**
   * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
   **/
  @ApiModelProperty(value = "Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) ")
  public String getOfferId() {
    return offerId;
  }
  public void setOfferId(String offerId) {
    this.offerId = offerId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BasePriceDTO getPrice() {
    return price;
  }
  public void setPrice(BasePriceDTO price) {
    this.price = price;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public GetPriceDTO getCofinancePrice() {
    return cofinancePrice;
  }
  public void setCofinancePrice(GetPriceDTO cofinancePrice) {
    this.cofinancePrice = cofinancePrice;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public PriceCompetitivenessType getCompetitiveness() {
    return competitiveness;
  }
  public void setCompetitiveness(PriceCompetitivenessType competitiveness) {
    this.competitiveness = competitiveness;
  }

  /**
   * Количество показов карточки товара за последние 7 дней.
   **/
  @ApiModelProperty(value = "Количество показов карточки товара за последние 7 дней.")
  public Long getShows() {
    return shows;
  }
  public void setShows(Long shows) {
    this.shows = shows;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OfferForRecommendationDTO offerForRecommendationDTO = (OfferForRecommendationDTO) o;
    return (this.offerId == null ? offerForRecommendationDTO.offerId == null : this.offerId.equals(offerForRecommendationDTO.offerId)) &&
        (this.price == null ? offerForRecommendationDTO.price == null : this.price.equals(offerForRecommendationDTO.price)) &&
        (this.cofinancePrice == null ? offerForRecommendationDTO.cofinancePrice == null : this.cofinancePrice.equals(offerForRecommendationDTO.cofinancePrice)) &&
        (this.competitiveness == null ? offerForRecommendationDTO.competitiveness == null : this.competitiveness.equals(offerForRecommendationDTO.competitiveness)) &&
        (this.shows == null ? offerForRecommendationDTO.shows == null : this.shows.equals(offerForRecommendationDTO.shows));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.offerId == null ? 0: this.offerId.hashCode());
    result = 31 * result + (this.price == null ? 0: this.price.hashCode());
    result = 31 * result + (this.cofinancePrice == null ? 0: this.cofinancePrice.hashCode());
    result = 31 * result + (this.competitiveness == null ? 0: this.competitiveness.hashCode());
    result = 31 * result + (this.shows == null ? 0: this.shows.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OfferForRecommendationDTO {\n");
    
    sb.append("  offerId: ").append(offerId).append("\n");
    sb.append("  price: ").append(price).append("\n");
    sb.append("  cofinancePrice: ").append(cofinancePrice).append("\n");
    sb.append("  competitiveness: ").append(competitiveness).append("\n");
    sb.append("  shows: ").append(shows).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
