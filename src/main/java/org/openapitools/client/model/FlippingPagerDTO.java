/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Модель для пагинации.
 **/
@ApiModel(description = "Модель для пагинации.")
public class FlippingPagerDTO {
  
  @SerializedName("total")
  private Integer total = null;
  @SerializedName("from")
  private Integer from = null;
  @SerializedName("to")
  private Integer to = null;
  @SerializedName("currentPage")
  private Integer currentPage = null;
  @SerializedName("pagesCount")
  private Integer pagesCount = null;
  @SerializedName("pageSize")
  private Integer pageSize = null;

  /**
   * Сколько всего найдено элементов.
   **/
  @ApiModelProperty(value = "Сколько всего найдено элементов.")
  public Integer getTotal() {
    return total;
  }
  public void setTotal(Integer total) {
    this.total = total;
  }

  /**
   * Начальный номер найденного элемента на странице.
   **/
  @ApiModelProperty(value = "Начальный номер найденного элемента на странице.")
  public Integer getFrom() {
    return from;
  }
  public void setFrom(Integer from) {
    this.from = from;
  }

  /**
   * Конечный номер найденного элемента на странице.
   **/
  @ApiModelProperty(value = "Конечный номер найденного элемента на странице.")
  public Integer getTo() {
    return to;
  }
  public void setTo(Integer to) {
    this.to = to;
  }

  /**
   * Текущая страница.
   **/
  @ApiModelProperty(value = "Текущая страница.")
  public Integer getCurrentPage() {
    return currentPage;
  }
  public void setCurrentPage(Integer currentPage) {
    this.currentPage = currentPage;
  }

  /**
   * Общее количество страниц.
   **/
  @ApiModelProperty(value = "Общее количество страниц.")
  public Integer getPagesCount() {
    return pagesCount;
  }
  public void setPagesCount(Integer pagesCount) {
    this.pagesCount = pagesCount;
  }

  /**
   * Размер страницы.
   **/
  @ApiModelProperty(value = "Размер страницы.")
  public Integer getPageSize() {
    return pageSize;
  }
  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlippingPagerDTO flippingPagerDTO = (FlippingPagerDTO) o;
    return (this.total == null ? flippingPagerDTO.total == null : this.total.equals(flippingPagerDTO.total)) &&
        (this.from == null ? flippingPagerDTO.from == null : this.from.equals(flippingPagerDTO.from)) &&
        (this.to == null ? flippingPagerDTO.to == null : this.to.equals(flippingPagerDTO.to)) &&
        (this.currentPage == null ? flippingPagerDTO.currentPage == null : this.currentPage.equals(flippingPagerDTO.currentPage)) &&
        (this.pagesCount == null ? flippingPagerDTO.pagesCount == null : this.pagesCount.equals(flippingPagerDTO.pagesCount)) &&
        (this.pageSize == null ? flippingPagerDTO.pageSize == null : this.pageSize.equals(flippingPagerDTO.pageSize));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.total == null ? 0: this.total.hashCode());
    result = 31 * result + (this.from == null ? 0: this.from.hashCode());
    result = 31 * result + (this.to == null ? 0: this.to.hashCode());
    result = 31 * result + (this.currentPage == null ? 0: this.currentPage.hashCode());
    result = 31 * result + (this.pagesCount == null ? 0: this.pagesCount.hashCode());
    result = 31 * result + (this.pageSize == null ? 0: this.pageSize.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlippingPagerDTO {\n");
    
    sb.append("  total: ").append(total).append("\n");
    sb.append("  from: ").append(from).append("\n");
    sb.append("  to: ").append(to).append("\n");
    sb.append("  currentPage: ").append(currentPage).append("\n");
    sb.append("  pagesCount: ").append(pagesCount).append("\n");
    sb.append("  pageSize: ").append(pageSize).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
