/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Статус товара:  * &#x60;PUBLISHED&#x60; — Готов к продаже. * &#x60;CHECKING&#x60; — На проверке. * &#x60;DISABLED_BY_PARTNER&#x60; — Скрыт вами. * &#x60;REJECTED_BY_MARKET&#x60; — Отклонен. * &#x60;DISABLED_AUTOMATICALLY&#x60; — Исправьте ошибки. * &#x60;CREATING_CARD&#x60; — Создается карточка. * &#x60;NO_CARD&#x60; — Нужна карточка. * &#x60;NO_STOCKS&#x60; — Нет на складе. * &#x60;ARCHIVED&#x60; — В архиве.  [Что обозначает каждый из статусов](https://yandex.ru/support/marketplace/assortment/add/statuses.html) 
 */
@JsonAdapter(OfferCampaignStatusType.Adapter.class)
public enum OfferCampaignStatusType {
  
  PUBLISHED("PUBLISHED"),
  
  CHECKING("CHECKING"),
  
  DISABLED_BY_PARTNER("DISABLED_BY_PARTNER"),
  
  DISABLED_AUTOMATICALLY("DISABLED_AUTOMATICALLY"),
  
  REJECTED_BY_MARKET("REJECTED_BY_MARKET"),
  
  CREATING_CARD("CREATING_CARD"),
  
  NO_CARD("NO_CARD"),
  
  NO_STOCKS("NO_STOCKS"),
  
  ARCHIVED("ARCHIVED");

  private String value;

  OfferCampaignStatusType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static OfferCampaignStatusType fromValue(String value) {
    for (OfferCampaignStatusType b : OfferCampaignStatusType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<OfferCampaignStatusType> {
    @Override
    public void write(final JsonWriter jsonWriter, final OfferCampaignStatusType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public OfferCampaignStatusType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return OfferCampaignStatusType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    OfferCampaignStatusType.fromValue(value);
  }
}

