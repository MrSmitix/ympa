/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.math.BigDecimal;
import org.openapitools.client.model.AgeUnitType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Возраст в заданных единицах измерения.
 **/
@ApiModel(description = "Возраст в заданных единицах измерения.")
public class AgeDTO {
  
  @SerializedName("value")
  private BigDecimal value = null;
  @SerializedName("ageUnit")
  private AgeUnitType ageUnit = null;

  /**
   * Значение. 
   * minimum: 0
   **/
  @ApiModelProperty(required = true, value = "Значение. ")
  public BigDecimal getValue() {
    return value;
  }
  public void setValue(BigDecimal value) {
    this.value = value;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public AgeUnitType getAgeUnit() {
    return ageUnit;
  }
  public void setAgeUnit(AgeUnitType ageUnit) {
    this.ageUnit = ageUnit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AgeDTO ageDTO = (AgeDTO) o;
    return (this.value == null ? ageDTO.value == null : this.value.equals(ageDTO.value)) &&
        (this.ageUnit == null ? ageDTO.ageUnit == null : this.ageUnit.equals(ageDTO.ageUnit));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.value == null ? 0: this.value.hashCode());
    result = 31 * result + (this.ageUnit == null ? 0: this.ageUnit.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class AgeDTO {\n");
    
    sb.append("  value: ").append(value).append("\n");
    sb.append("  ageUnit: ").append(ageUnit).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
