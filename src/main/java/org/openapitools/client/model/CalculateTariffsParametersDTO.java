/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.PaymentFrequencyType;
import org.openapitools.client.model.SellingProgramType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Параметры для расчета стоимости услуг.
 **/
@ApiModel(description = "Параметры для расчета стоимости услуг.")
public class CalculateTariffsParametersDTO {
  
  @SerializedName("campaignId")
  private Long campaignId = null;
  @SerializedName("sellingProgram")
  private SellingProgramType sellingProgram = null;
  @SerializedName("frequency")
  private PaymentFrequencyType frequency = null;

  /**
   * Идентификатор кампании. У пользователя, который выполняет запрос, должен быть доступ к этой кампании.  Используйте параметр `campaignId`, если уже завершили подключение магазина на Маркете. Иначе вернется пустой список.  Обязательный параметр, если не указан параметр `sellingProgram`. Совместное использование параметров приведет к ошибке. 
   **/
  @ApiModelProperty(value = "Идентификатор кампании. У пользователя, который выполняет запрос, должен быть доступ к этой кампании.  Используйте параметр `campaignId`, если уже завершили подключение магазина на Маркете. Иначе вернется пустой список.  Обязательный параметр, если не указан параметр `sellingProgram`. Совместное использование параметров приведет к ошибке. ")
  public Long getCampaignId() {
    return campaignId;
  }
  public void setCampaignId(Long campaignId) {
    this.campaignId = campaignId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public SellingProgramType getSellingProgram() {
    return sellingProgram;
  }
  public void setSellingProgram(SellingProgramType sellingProgram) {
    this.sellingProgram = sellingProgram;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public PaymentFrequencyType getFrequency() {
    return frequency;
  }
  public void setFrequency(PaymentFrequencyType frequency) {
    this.frequency = frequency;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CalculateTariffsParametersDTO calculateTariffsParametersDTO = (CalculateTariffsParametersDTO) o;
    return (this.campaignId == null ? calculateTariffsParametersDTO.campaignId == null : this.campaignId.equals(calculateTariffsParametersDTO.campaignId)) &&
        (this.sellingProgram == null ? calculateTariffsParametersDTO.sellingProgram == null : this.sellingProgram.equals(calculateTariffsParametersDTO.sellingProgram)) &&
        (this.frequency == null ? calculateTariffsParametersDTO.frequency == null : this.frequency.equals(calculateTariffsParametersDTO.frequency));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.campaignId == null ? 0: this.campaignId.hashCode());
    result = 31 * result + (this.sellingProgram == null ? 0: this.sellingProgram.hashCode());
    result = 31 * result + (this.frequency == null ? 0: this.frequency.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CalculateTariffsParametersDTO {\n");
    
    sb.append("  campaignId: ").append(campaignId).append("\n");
    sb.append("  sellingProgram: ").append(sellingProgram).append("\n");
    sb.append("  frequency: ").append(frequency).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
