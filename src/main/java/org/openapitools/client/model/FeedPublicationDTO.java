/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.FeedPublicationFullDTO;
import org.openapitools.client.model.FeedPublicationPriceAndStockUpdateDTO;
import org.openapitools.client.model.FeedStatusType;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о последней публикации предложений из прайс-листа на Маркете.
 **/
@ApiModel(description = "Информация о последней публикации предложений из прайс-листа на Маркете.")
public class FeedPublicationDTO {
  
  @SerializedName("status")
  private FeedStatusType status = null;
  @SerializedName("full")
  private FeedPublicationFullDTO full = null;
  @SerializedName("priceAndStockUpdate")
  private FeedPublicationPriceAndStockUpdateDTO priceAndStockUpdate = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public FeedStatusType getStatus() {
    return status;
  }
  public void setStatus(FeedStatusType status) {
    this.status = status;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public FeedPublicationFullDTO getFull() {
    return full;
  }
  public void setFull(FeedPublicationFullDTO full) {
    this.full = full;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public FeedPublicationPriceAndStockUpdateDTO getPriceAndStockUpdate() {
    return priceAndStockUpdate;
  }
  public void setPriceAndStockUpdate(FeedPublicationPriceAndStockUpdateDTO priceAndStockUpdate) {
    this.priceAndStockUpdate = priceAndStockUpdate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeedPublicationDTO feedPublicationDTO = (FeedPublicationDTO) o;
    return (this.status == null ? feedPublicationDTO.status == null : this.status.equals(feedPublicationDTO.status)) &&
        (this.full == null ? feedPublicationDTO.full == null : this.full.equals(feedPublicationDTO.full)) &&
        (this.priceAndStockUpdate == null ? feedPublicationDTO.priceAndStockUpdate == null : this.priceAndStockUpdate.equals(feedPublicationDTO.priceAndStockUpdate));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    result = 31 * result + (this.full == null ? 0: this.full.hashCode());
    result = 31 * result + (this.priceAndStockUpdate == null ? 0: this.priceAndStockUpdate.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeedPublicationDTO {\n");
    
    sb.append("  status: ").append(status).append("\n");
    sb.append("  full: ").append(full).append("\n");
    sb.append("  priceAndStockUpdate: ").append(priceAndStockUpdate).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
