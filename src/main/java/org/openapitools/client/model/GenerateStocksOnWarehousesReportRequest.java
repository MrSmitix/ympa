/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Данные, необходимые для генерации отчета. 
 **/
@ApiModel(description = "Данные, необходимые для генерации отчета. ")
public class GenerateStocksOnWarehousesReportRequest {
  
  @SerializedName("campaignId")
  private Long campaignId = null;
  @SerializedName("warehouseIds")
  private List<Long> warehouseIds = null;
  @SerializedName("reportDate")
  private Date reportDate = null;
  @SerializedName("categoryIds")
  private List<Long> categoryIds = null;
  @SerializedName("hasStocks")
  private Boolean hasStocks = null;

  /**
   * Идентификатор магазина.
   **/
  @ApiModelProperty(required = true, value = "Идентификатор магазина.")
  public Long getCampaignId() {
    return campaignId;
  }
  public void setCampaignId(Long campaignId) {
    this.campaignId = campaignId;
  }

  /**
   * Фильтр по идентификаторам складов (только модель FBY). Чтобы узнать идентификатор, воспользуйтесь запросом [GET warehouses](../../reference/warehouses/getFulfillmentWarehouses.md).
   **/
  @ApiModelProperty(value = "Фильтр по идентификаторам складов (только модель FBY). Чтобы узнать идентификатор, воспользуйтесь запросом [GET warehouses](../../reference/warehouses/getFulfillmentWarehouses.md).")
  public List<Long> getWarehouseIds() {
    return warehouseIds;
  }
  public void setWarehouseIds(List<Long> warehouseIds) {
    this.warehouseIds = warehouseIds;
  }

  /**
   * Фильтр по дате (для модели FBY). В отчет попадут данные за **предшествующий** дате день.
   **/
  @ApiModelProperty(value = "Фильтр по дате (для модели FBY). В отчет попадут данные за **предшествующий** дате день.")
  public Date getReportDate() {
    return reportDate;
  }
  public void setReportDate(Date reportDate) {
    this.reportDate = reportDate;
  }

  /**
   * Фильтр по категориям на Маркете (кроме модели FBY).
   **/
  @ApiModelProperty(value = "Фильтр по категориям на Маркете (кроме модели FBY).")
  public List<Long> getCategoryIds() {
    return categoryIds;
  }
  public void setCategoryIds(List<Long> categoryIds) {
    this.categoryIds = categoryIds;
  }

  /**
   * Фильтр по наличию остатков (кроме модели FBY).
   **/
  @ApiModelProperty(value = "Фильтр по наличию остатков (кроме модели FBY).")
  public Boolean getHasStocks() {
    return hasStocks;
  }
  public void setHasStocks(Boolean hasStocks) {
    this.hasStocks = hasStocks;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenerateStocksOnWarehousesReportRequest generateStocksOnWarehousesReportRequest = (GenerateStocksOnWarehousesReportRequest) o;
    return (this.campaignId == null ? generateStocksOnWarehousesReportRequest.campaignId == null : this.campaignId.equals(generateStocksOnWarehousesReportRequest.campaignId)) &&
        (this.warehouseIds == null ? generateStocksOnWarehousesReportRequest.warehouseIds == null : this.warehouseIds.equals(generateStocksOnWarehousesReportRequest.warehouseIds)) &&
        (this.reportDate == null ? generateStocksOnWarehousesReportRequest.reportDate == null : this.reportDate.equals(generateStocksOnWarehousesReportRequest.reportDate)) &&
        (this.categoryIds == null ? generateStocksOnWarehousesReportRequest.categoryIds == null : this.categoryIds.equals(generateStocksOnWarehousesReportRequest.categoryIds)) &&
        (this.hasStocks == null ? generateStocksOnWarehousesReportRequest.hasStocks == null : this.hasStocks.equals(generateStocksOnWarehousesReportRequest.hasStocks));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.campaignId == null ? 0: this.campaignId.hashCode());
    result = 31 * result + (this.warehouseIds == null ? 0: this.warehouseIds.hashCode());
    result = 31 * result + (this.reportDate == null ? 0: this.reportDate.hashCode());
    result = 31 * result + (this.categoryIds == null ? 0: this.categoryIds.hashCode());
    result = 31 * result + (this.hasStocks == null ? 0: this.hasStocks.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenerateStocksOnWarehousesReportRequest {\n");
    
    sb.append("  campaignId: ").append(campaignId).append("\n");
    sb.append("  warehouseIds: ").append(warehouseIds).append("\n");
    sb.append("  reportDate: ").append(reportDate).append("\n");
    sb.append("  categoryIds: ").append(categoryIds).append("\n");
    sb.append("  hasStocks: ").append(hasStocks).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
