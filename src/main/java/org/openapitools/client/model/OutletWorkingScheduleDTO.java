/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.OutletWorkingScheduleItemDTO;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Список режимов работы точки продаж. 
 **/
@ApiModel(description = "Список режимов работы точки продаж. ")
public class OutletWorkingScheduleDTO {
  
  @SerializedName("workInHoliday")
  private Boolean workInHoliday = null;
  @SerializedName("scheduleItems")
  private List<OutletWorkingScheduleItemDTO> scheduleItems = null;

  /**
   * Признак, работает ли точка продаж в дни государственных праздников.  Возможные значения:  * `false` — точка продаж не работает в дни государственных праздников. * `true` — точка продаж работает в дни государственных праздников. 
   **/
  @ApiModelProperty(value = "Признак, работает ли точка продаж в дни государственных праздников.  Возможные значения:  * `false` — точка продаж не работает в дни государственных праздников. * `true` — точка продаж работает в дни государственных праздников. ")
  public Boolean getWorkInHoliday() {
    return workInHoliday;
  }
  public void setWorkInHoliday(Boolean workInHoliday) {
    this.workInHoliday = workInHoliday;
  }

  /**
   * Список расписаний работы точки продаж. 
   **/
  @ApiModelProperty(required = true, value = "Список расписаний работы точки продаж. ")
  public List<OutletWorkingScheduleItemDTO> getScheduleItems() {
    return scheduleItems;
  }
  public void setScheduleItems(List<OutletWorkingScheduleItemDTO> scheduleItems) {
    this.scheduleItems = scheduleItems;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutletWorkingScheduleDTO outletWorkingScheduleDTO = (OutletWorkingScheduleDTO) o;
    return (this.workInHoliday == null ? outletWorkingScheduleDTO.workInHoliday == null : this.workInHoliday.equals(outletWorkingScheduleDTO.workInHoliday)) &&
        (this.scheduleItems == null ? outletWorkingScheduleDTO.scheduleItems == null : this.scheduleItems.equals(outletWorkingScheduleDTO.scheduleItems));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.workInHoliday == null ? 0: this.workInHoliday.hashCode());
    result = 31 * result + (this.scheduleItems == null ? 0: this.scheduleItems.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutletWorkingScheduleDTO {\n");
    
    sb.append("  workInHoliday: ").append(workInHoliday).append("\n");
    sb.append("  scheduleItems: ").append(scheduleItems).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
