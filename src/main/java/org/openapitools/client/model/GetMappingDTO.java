/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Информация о товарах в каталоге. 
 **/
@ApiModel(description = "Информация о товарах в каталоге. ")
public class GetMappingDTO {
  
  @SerializedName("marketSku")
  private Long marketSku = null;
  @SerializedName("marketSkuName")
  private String marketSkuName = null;
  @SerializedName("marketModelId")
  private Long marketModelId = null;
  @SerializedName("marketModelName")
  private String marketModelName = null;
  @SerializedName("marketCategoryId")
  private Long marketCategoryId = null;
  @SerializedName("marketCategoryName")
  private String marketCategoryName = null;

  /**
   * SKU на Маркете.
   **/
  @ApiModelProperty(value = "SKU на Маркете.")
  public Long getMarketSku() {
    return marketSku;
  }
  public void setMarketSku(Long marketSku) {
    this.marketSku = marketSku;
  }

  /**
   * Название карточки товара.  Может отсутствовать в ответе, если товар еще не привязан к карточке. 
   **/
  @ApiModelProperty(value = "Название карточки товара.  Может отсутствовать в ответе, если товар еще не привязан к карточке. ")
  public String getMarketSkuName() {
    return marketSkuName;
  }
  public void setMarketSkuName(String marketSkuName) {
    this.marketSkuName = marketSkuName;
  }

  /**
   * Идентификатор модели на Маркете.  Может отсутствовать в ответе, если товар еще не привязан к карточке. 
   **/
  @ApiModelProperty(value = "Идентификатор модели на Маркете.  Может отсутствовать в ответе, если товар еще не привязан к карточке. ")
  public Long getMarketModelId() {
    return marketModelId;
  }
  public void setMarketModelId(Long marketModelId) {
    this.marketModelId = marketModelId;
  }

  /**
   * Название модели на Маркете.  Может отсутствовать в ответе, если товар еще не привязан к карточке. 
   **/
  @ApiModelProperty(value = "Название модели на Маркете.  Может отсутствовать в ответе, если товар еще не привязан к карточке. ")
  public String getMarketModelName() {
    return marketModelName;
  }
  public void setMarketModelName(String marketModelName) {
    this.marketModelName = marketModelName;
  }

  /**
   * Идентификатор категории на Маркете, в которую попал товар.  Может отсутствовать в ответе, если Маркет еще не определил категорию товара. 
   **/
  @ApiModelProperty(value = "Идентификатор категории на Маркете, в которую попал товар.  Может отсутствовать в ответе, если Маркет еще не определил категорию товара. ")
  public Long getMarketCategoryId() {
    return marketCategoryId;
  }
  public void setMarketCategoryId(Long marketCategoryId) {
    this.marketCategoryId = marketCategoryId;
  }

  /**
   * Название категории карточки на Маркете.  Может отсутствовать в ответе, если Маркет еще не определил категорию товара. 
   **/
  @ApiModelProperty(value = "Название категории карточки на Маркете.  Может отсутствовать в ответе, если Маркет еще не определил категорию товара. ")
  public String getMarketCategoryName() {
    return marketCategoryName;
  }
  public void setMarketCategoryName(String marketCategoryName) {
    this.marketCategoryName = marketCategoryName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMappingDTO getMappingDTO = (GetMappingDTO) o;
    return (this.marketSku == null ? getMappingDTO.marketSku == null : this.marketSku.equals(getMappingDTO.marketSku)) &&
        (this.marketSkuName == null ? getMappingDTO.marketSkuName == null : this.marketSkuName.equals(getMappingDTO.marketSkuName)) &&
        (this.marketModelId == null ? getMappingDTO.marketModelId == null : this.marketModelId.equals(getMappingDTO.marketModelId)) &&
        (this.marketModelName == null ? getMappingDTO.marketModelName == null : this.marketModelName.equals(getMappingDTO.marketModelName)) &&
        (this.marketCategoryId == null ? getMappingDTO.marketCategoryId == null : this.marketCategoryId.equals(getMappingDTO.marketCategoryId)) &&
        (this.marketCategoryName == null ? getMappingDTO.marketCategoryName == null : this.marketCategoryName.equals(getMappingDTO.marketCategoryName));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.marketSku == null ? 0: this.marketSku.hashCode());
    result = 31 * result + (this.marketSkuName == null ? 0: this.marketSkuName.hashCode());
    result = 31 * result + (this.marketModelId == null ? 0: this.marketModelId.hashCode());
    result = 31 * result + (this.marketModelName == null ? 0: this.marketModelName.hashCode());
    result = 31 * result + (this.marketCategoryId == null ? 0: this.marketCategoryId.hashCode());
    result = 31 * result + (this.marketCategoryName == null ? 0: this.marketCategoryName.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMappingDTO {\n");
    
    sb.append("  marketSku: ").append(marketSku).append("\n");
    sb.append("  marketSkuName: ").append(marketSkuName).append("\n");
    sb.append("  marketModelId: ").append(marketModelId).append("\n");
    sb.append("  marketModelName: ").append(marketModelName).append("\n");
    sb.append("  marketCategoryId: ").append(marketCategoryId).append("\n");
    sb.append("  marketCategoryName: ").append(marketCategoryName).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
